{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170",
    "id": 1452224012,
    "node_id": "PR_kwDOABII585Wjy4M",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28170",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28170.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28170.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/27f260aa6e04f82dad78e9a06d58927546143a27",
    "number": 28170,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "p2p: adaptive connections services flags",
    "user": {
      "login": "furszy",
      "id": 5377650,
      "node_id": "MDQ6VXNlcjUzNzc2NTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/furszy",
      "html_url": "https://github.com/furszy",
      "followers_url": "https://api.github.com/users/furszy/followers",
      "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
      "organizations_url": "https://api.github.com/users/furszy/orgs",
      "repos_url": "https://api.github.com/users/furszy/repos",
      "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/furszy/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Derived from #28120 discussion.\r\n\r\nBy relocating the peer desirable services flags into the peer manager, we\r\nallow the connections acceptance process to handle post-IBD potential\r\nstalling scenarios.\r\n\r\nThe peer manager will be able to dynamically adjust the services flags\r\nbased on the node's proximity to the tip (back and forth). Allowing the node\r\nto recover from the following post-IBD scenario:\r\nSuppose the node has successfully synced the chain, but later experienced\r\ndropped connections and remained inactive for a duration longer than the limited\r\npeers threshold (the timeframe within which limited peers can provide blocks). In\r\nsuch cases, upon reconnecting to the network, the node might only establish\r\nconnections with limited peers, filling up all available outbound slots. Resulting\r\nin an inability to synchronize the chain (because limited peers will not provide\r\nblocks older than the `NODE_NETWORK_LIMITED_MIN_BLOCKS` threshold).",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "created_at": "2023-07-27T15:34:45Z",
    "updated_at": "2025-01-30T07:28:19Z",
    "closed_at": "2024-01-31T16:44:59Z",
    "mergeable_state": "unknown",
    "merged_at": "2024-01-31T16:44:58Z",
    "merged_by": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "merge_commit_sha": "0b768746ef2c089676e3be30eb84e722a91453f6",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "furszy:2023_net_adaptable_desirable_flags",
      "ref": "2023_net_adaptable_desirable_flags",
      "sha": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 143624913,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDM2MjQ5MTM=",
        "name": "bitcoin-core",
        "full_name": "furszy/bitcoin-core",
        "owner": {
          "login": "furszy",
          "id": 5377650,
          "node_id": "MDQ6VXNlcjUzNzc2NTA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/furszy",
          "html_url": "https://github.com/furszy",
          "followers_url": "https://api.github.com/users/furszy/followers",
          "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
          "organizations_url": "https://api.github.com/users/furszy/orgs",
          "repos_url": "https://api.github.com/users/furszy/repos",
          "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/furszy/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/furszy/bitcoin-core",
        "description": "Bitcoin-Core",
        "fork": true,
        "url": "https://api.github.com/repos/furszy/bitcoin-core",
        "archive_url": "https://api.github.com/repos/furszy/bitcoin-core/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/furszy/bitcoin-core/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/furszy/bitcoin-core/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/furszy/bitcoin-core/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/furszy/bitcoin-core/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/furszy/bitcoin-core/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/furszy/bitcoin-core/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/furszy/bitcoin-core/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/furszy/bitcoin-core/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/furszy/bitcoin-core/contributors",
        "deployments_url": "https://api.github.com/repos/furszy/bitcoin-core/deployments",
        "downloads_url": "https://api.github.com/repos/furszy/bitcoin-core/downloads",
        "events_url": "https://api.github.com/repos/furszy/bitcoin-core/events",
        "forks_url": "https://api.github.com/repos/furszy/bitcoin-core/forks",
        "git_commits_url": "https://api.github.com/repos/furszy/bitcoin-core/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/furszy/bitcoin-core/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/furszy/bitcoin-core/git/tags%7B/sha%7D",
        "git_url": "git://github.com/furszy/bitcoin-core.git",
        "issue_comment_url": "https://api.github.com/repos/furszy/bitcoin-core/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/furszy/bitcoin-core/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/furszy/bitcoin-core/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/furszy/bitcoin-core/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/furszy/bitcoin-core/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/furszy/bitcoin-core/languages",
        "merges_url": "https://api.github.com/repos/furszy/bitcoin-core/merges",
        "milestones_url": "https://api.github.com/repos/furszy/bitcoin-core/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/furszy/bitcoin-core/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/furszy/bitcoin-core/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/furszy/bitcoin-core/releases%7B/id%7D",
        "ssh_url": "git@github.com:furszy/bitcoin-core.git",
        "stargazers_url": "https://api.github.com/repos/furszy/bitcoin-core/stargazers",
        "statuses_url": "https://api.github.com/repos/furszy/bitcoin-core/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/furszy/bitcoin-core/subscribers",
        "subscription_url": "https://api.github.com/repos/furszy/bitcoin-core/subscription",
        "tags_url": "https://api.github.com/repos/furszy/bitcoin-core/tags",
        "teams_url": "https://api.github.com/repos/furszy/bitcoin-core/teams",
        "trees_url": "https://api.github.com/repos/furszy/bitcoin-core/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/furszy/bitcoin-core.git",
        "hooks_url": "https://api.github.com/repos/furszy/bitcoin-core/hooks",
        "svn_url": "https://github.com/furszy/bitcoin-core",
        "homepage": "",
        "language": "C++",
        "forks_count": 4,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 419495,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-01-29T21:33:45Z",
        "created_at": "2018-08-05T15:28:43Z",
        "updated_at": "2025-01-27T21:30:56Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "651fb034d85eb5db561bfd24b74f7271417defa5",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36639,
        "stargazers_count": 81713,
        "watchers_count": 81713,
        "size": 274882,
        "default_branch": "master",
        "open_issues_count": 689,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-01-29T23:07:38Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-01-30T07:14:15Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 163,
    "deletions": 64,
    "changed_files": 11,
    "commits": 6,
    "review_comments": 126,
    "comments": 20
  },
  "events": [
    {
      "event": "commented",
      "id": 1653862929,
      "node_id": "IC_kwDOABII585ik_IR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1653862929",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T15:34:48Z",
      "updated_at": "2024-01-31T16:10:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28170).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [vasild](https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1840919344), [naumenkogs](https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1848123617), [mzumsande](https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1852266688), [andrewtoth](https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1852723966), [achow101](https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1919425343) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29231](https://github.com/bitcoin/bitcoin/pull/29231) (logging: Update to new logging API by ajtowns)\n* [#28016](https://github.com/bitcoin/bitcoin/pull/28016) (p2p: gives seednode priority over dnsseed if both are provided by sr-gi)\n* [#27052](https://github.com/bitcoin/bitcoin/pull/27052) (test: rpc: add last block announcement time to getpeerinfo result by LarryRuane)\n* [#15218](https://github.com/bitcoin/bitcoin/pull/15218) (validation: Flush state after initial sync by andrewtoth)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1653862929",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "labeled",
      "id": 9937419983,
      "node_id": "LE_lADOABII585swZjNzwAAAAJQUP7P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9937419983",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T15:34:49Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "renamed",
      "id": 9937469277,
      "node_id": "RTE_lADOABII585swZjNzwAAAAJQUb9d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9937469277",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T15:39:29Z",
      "rename": {
        "from": "net: adaptive connections services flags",
        "to": "p2p: adaptive connections services flags"
      }
    },
    {
      "event": "labeled",
      "id": 9939207651,
      "node_id": "LE_lADOABII585swZjNzwAAAAJQbEXj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9939207651",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T18:16:05Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 9949561751,
      "node_id": "UNLE_lADOABII585swZjNzwAAAAJRCkOX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9949561751",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T15:39:37Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1565523628,
      "node_id": "PRR_kwDOABII585dT_6s",
      "url": null,
      "actor": null,
      "commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I don't think the scenario you describe is likely to happen since we consider ourselves to be in IBD if our tip is older than 24h (which corresponds to ~144 blocks).\r\n\r\n> Suppose the node has successfully synced the chain, but later experienced\r\ndropped connections and remained inactive for a duration longer than the limited\r\npeers threshold (the timeframe within which limited peers can provide blocks). In\r\nsuch cases, upon reconnecting to the network, the node might only establish\r\nconnections with limited peers, filling up all available outbound slots.\r\n\r\nSo this isn't true, upon restart the node would be behind by >24h and open connections to non-pruning peers (unless the block rate significantly increased beyond 1block/10min).\r\n\r\n---\r\n\r\nGetting rid of the `g_initial_block_download_completed` global would still be worthwhile but the other changes seem unnecessary to me. ",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1565523628",
      "submitted_at": "2023-08-07T14:54:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "reviewed",
      "id": 1565687522,
      "node_id": "PRR_kwDOABII585dUn7i",
      "url": null,
      "actor": null,
      "commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "> I don't think the scenario you describe is likely to happen since we consider ourselves to be in IBD if our tip is older than 24h (which corresponds to ~144 blocks).\r\n\r\nThats not entirely true, misses an important part. We consider ourselves in IBD if our tip is older than 24hs (or the custom max tip age) and we haven't completed IBD yet. Once IBD is completed, the node remains out of IBD for the entire software lifecycle.\r\n\r\n> > Suppose the node has successfully synced the chain, but later experienced\r\n> > dropped connections and remained inactive for a duration longer than the limited\r\n> > peers threshold (the timeframe within which limited peers can provide blocks). In\r\n> > such cases, upon reconnecting to the network, the node might only establish\r\n> > connections with limited peers, filling up all available outbound slots.\r\n> \r\n> So this isn't true, upon restart the node would be behind by >24h and open connections to non-pruning peers (unless the block rate significantly increased beyond 1block/10min).\r\n\r\nThis conclusion misses what I wrote above. The IBD flag is set to true but never reverted for the entire software lifecycle.\r\n\r\nThe scenario that I described in the PR description is a real scenario. Reproducible by running #28120 test case. Which exercises the proposed behavior.\r\n\r\nBasically, same as the IBD flag, `g_initial_block_download_completed` is set to true but never reverted. Which ends up with the node always connecting to limited peers after the first IBD completion. Not accounting for prolonged stalling situations, where the node is beyond the limited peers threshold due an internet outage.\r\n\r\nTo test the behavior, you could drop the bug fix commit from that branch. Will see the post-IBD super stalled node connecting to a limited peer even when such peer is not helpful, as it will not provide any of the historical blocks required to sync-up the node.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1565687522",
      "submitted_at": "2023-08-07T16:01:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "reviewed",
      "id": 1581277414,
      "node_id": "PRR_kwDOABII585eQGDm",
      "url": null,
      "actor": null,
      "commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\nThis seems to be similar to the suggestion by gmaxwell in https://github.com/bitcoin/bitcoin/pull/10387#issuecomment-343357330\r\nIt also is a good thing to have `protocol.h` not depend on dynamic `net_processing` state.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1581277414",
      "submitted_at": "2023-08-16T20:28:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "reviewed",
      "id": 1582453390,
      "node_id": "PRR_kwDOABII585eUlKO",
      "url": null,
      "actor": null,
      "commit_id": "1dbc6cc6b177497c18664bcc08f4d55da21941a6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1582453390",
      "submitted_at": "2023-08-17T11:57:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "reviewed",
      "id": 1582457092,
      "node_id": "PRR_kwDOABII585eUmEE",
      "url": null,
      "actor": null,
      "commit_id": "1428b7f4e8c648fdc68ba5744d640d120d5d78eb",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1582457092",
      "submitted_at": "2023-08-17T11:59:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10124363207,
      "node_id": "HRFPE_lADOABII585swZjNzwAAAAJbdYXH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10124363207",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "26a9bb4526f3e1a17581e0dea7befa7be4de9817",
      "commit_url": "https://api.github.com/repos/furszy/bitcoin-core/commits/26a9bb4526f3e1a17581e0dea7befa7be4de9817",
      "created_at": "2023-08-17T22:18:35Z"
    },
    {
      "event": "labeled",
      "id": 10129245401,
      "node_id": "LE_lADOABII585swZjNzwAAAAJbwATZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10129245401",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-18T11:53:22Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10132103007,
      "node_id": "HRFPE_lADOABII585swZjNzwAAAAJb659f",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10132103007",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e00b96592d7f3dac5e4fb649a1cf20d35b5f481b",
      "commit_url": "https://api.github.com/repos/furszy/bitcoin-core/commits/e00b96592d7f3dac5e4fb649a1cf20d35b5f481b",
      "created_at": "2023-08-18T17:26:53Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10132299525,
      "node_id": "HRFPE_lADOABII585swZjNzwAAAAJb7p8F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10132299525",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8af5f2535b366f8c666a1ce18ced4594c6267321",
      "commit_url": "https://api.github.com/repos/furszy/bitcoin-core/commits/8af5f2535b366f8c666a1ce18ced4594c6267321",
      "created_at": "2023-08-18T17:51:12Z"
    },
    {
      "event": "unlabeled",
      "id": 10133565682,
      "node_id": "UNLE_lADOABII585swZjNzwAAAAJcAfDy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10133565682",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-18T20:57:50Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1727793191,
      "node_id": "IC_kwDOABII585m_Agn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1727793191",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T13:59:30Z",
      "updated_at": "2023-09-20T13:59:30Z",
      "author_association": "MEMBER",
      "body": "per convo, cc @vasild ",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1727793191",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "mentioned",
      "id": 10423685789,
      "node_id": "MEE_lADOABII585swZjNzwAAAAJtTNKd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10423685789",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T13:59:31Z"
    },
    {
      "event": "subscribed",
      "id": 10423685819,
      "node_id": "SE_lADOABII585swZjNzwAAAAJtTNK7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10423685819",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T13:59:31Z"
    },
    {
      "event": "subscribed",
      "id": 10453814710,
      "node_id": "SE_lADOABII585swZjNzwAAAAJvGI22",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10453814710",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-23T18:25:12Z"
    },
    {
      "event": "labeled",
      "id": 10715617540,
      "node_id": "LE_lADOABII585swZjNzwAAAAJ-s1kE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10715617540",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T18:27:28Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10717862417,
      "node_id": "HRFPE_lADOABII585swZjNzwAAAAJ-1ZoR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10717862417",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "893c541dce938aaa210785df53a5841c5e90d924",
      "commit_url": "https://api.github.com/repos/furszy/bitcoin-core/commits/893c541dce938aaa210785df53a5841c5e90d924",
      "created_at": "2023-10-19T23:24:30Z"
    },
    {
      "event": "unlabeled",
      "id": 10718469331,
      "node_id": "UNLE_lADOABII585swZjNzwAAAAJ-3tzT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10718469331",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-20T01:07:11Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1702994944,
      "node_id": "PRR_kwDOABII585lgaQA",
      "url": null,
      "actor": null,
      "commit_id": "893c541dce938aaa210785df53a5841c5e90d924",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK.\r\n\r\nShould we have a functional test for this scenario?",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1702994944",
      "submitted_at": "2023-10-29T17:54:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "reviewed",
      "id": 1701549241,
      "node_id": "PRR_kwDOABII585la5S5",
      "url": null,
      "actor": null,
      "commit_id": "893c541dce938aaa210785df53a5841c5e90d924",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1701549241",
      "submitted_at": "2023-10-30T12:53:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10813482764,
      "node_id": "HRFPE_lADOABII585swZjNzwAAAAKEiKcM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10813482764",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "bf3ce4a9ae88910ef33be61980be42c84fc812af",
      "commit_url": "https://api.github.com/repos/furszy/bitcoin-core/commits/bf3ce4a9ae88910ef33be61980be42c84fc812af",
      "created_at": "2023-10-30T22:00:03Z"
    },
    {
      "event": "reviewed",
      "id": 1705186171,
      "node_id": "PRR_kwDOABII585loxN7",
      "url": null,
      "actor": null,
      "commit_id": "bf3ce4a9ae88910ef33be61980be42c84fc812af",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Feedback tackled. Thanks both!\r\n\r\n> Should we have a functional test for this scenario?\r\n\r\nWe can't have a functional test because the automatic peers connection process skips localhost addresses. Will work on a unit test for it. Could do one validating that the peer manager service flags changes when the ibd state change.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1705186171",
      "submitted_at": "2023-10-30T22:44:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "reviewed",
      "id": 1705210202,
      "node_id": "PRR_kwDOABII585lo3Fa",
      "url": null,
      "actor": null,
      "commit_id": "bf3ce4a9ae88910ef33be61980be42c84fc812af",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1705210202",
      "submitted_at": "2023-10-30T23:09:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10821841356,
      "node_id": "HRFPE_lADOABII585swZjNzwAAAAKFCDHM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10821841356",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "623db8f8d5e4f4379756e4dddd03146278a90f3f",
      "commit_url": "https://api.github.com/repos/furszy/bitcoin-core/commits/623db8f8d5e4f4379756e4dddd03146278a90f3f",
      "created_at": "2023-10-31T14:38:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10821857803,
      "node_id": "HRFPE_lADOABII585swZjNzwAAAAKFCHIL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10821857803",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3a56fe6dbb35ba809cd9611395f28d8fdd85df73",
      "commit_url": "https://api.github.com/repos/furszy/bitcoin-core/commits/3a56fe6dbb35ba809cd9611395f28d8fdd85df73",
      "created_at": "2023-10-31T14:39:34Z"
    },
    {
      "event": "reviewed",
      "id": 1706509820,
      "node_id": "PRR_kwDOABII585lt0X8",
      "url": null,
      "actor": null,
      "commit_id": "3a56fe6dbb35ba809cd9611395f28d8fdd85df73",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Updated per feedback. Thanks again.\r\n\r\n* Added coverage for the introduced PeerManager's adaptive connections service flags.\r\n* Renamed StatelessServiceFlags function to SeedsServiceFlags.\r\n* Re-introduced the \"initial sync completed\" flag update on `UpdatedBlockTip`.\r\n   This is to not depend solely on the stale check inside `CheckForStaleTipAndEvictPeers` which is executed every 10 minutes (`STALE_CHECK_INTERVAL`). See code comments for more information.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1706509820",
      "submitted_at": "2023-10-31T14:48:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "labeled",
      "id": 10822483406,
      "node_id": "LE_lADOABII585swZjNzwAAAAKFEf3O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10822483406",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-31T15:24:13Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1706626162,
      "node_id": "PRR_kwDOABII585luQxy",
      "url": null,
      "actor": null,
      "commit_id": "3a56fe6dbb35ba809cd9611395f28d8fdd85df73",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1706626162",
      "submitted_at": "2023-10-31T15:31:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "reviewed",
      "id": 1706640450,
      "node_id": "PRR_kwDOABII585luURC",
      "url": null,
      "actor": null,
      "commit_id": "3a56fe6dbb35ba809cd9611395f28d8fdd85df73",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1706640450",
      "submitted_at": "2023-10-31T15:37:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10825267773,
      "node_id": "HRFPE_lADOABII585swZjNzwAAAAKFPHo9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10825267773",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "78e10967424731f00dd8f2af342ebe378aef234f",
      "commit_url": "https://api.github.com/repos/furszy/bitcoin-core/commits/78e10967424731f00dd8f2af342ebe378aef234f",
      "created_at": "2023-10-31T19:36:52Z"
    },
    {
      "event": "reviewed",
      "id": 1707131031,
      "node_id": "PRR_kwDOABII585lwMCX",
      "url": null,
      "actor": null,
      "commit_id": "78e10967424731f00dd8f2af342ebe378aef234f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Updated per feedback, thanks @andrewtoth.\r\n\r\n* Re-ordered test checks for improved clarity.\r\n* Included coverage for when the node is stale but still recoverable (below the limited peers threshold).",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1707131031",
      "submitted_at": "2023-10-31T19:50:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "unlabeled",
      "id": 10825857911,
      "node_id": "UNLE_lADOABII585swZjNzwAAAAKFRXt3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10825857911",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-31T20:48:27Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1707743315,
      "node_id": "PRR_kwDOABII585lyhhT",
      "url": null,
      "actor": null,
      "commit_id": "78e10967424731f00dd8f2af342ebe378aef234f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1707743315",
      "submitted_at": "2023-11-01T08:18:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10843850587,
      "node_id": "HRFPE_lADOABII585swZjNzwAAAAKGWAdb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10843850587",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5628ac55be42c5450c6817ba8dcfe463ceda32a9",
      "commit_url": "https://api.github.com/repos/furszy/bitcoin-core/commits/5628ac55be42c5450c6817ba8dcfe463ceda32a9",
      "created_at": "2023-11-02T13:16:17Z"
    },
    {
      "event": "reviewed",
      "id": 1710304120,
      "node_id": "PRR_kwDOABII585l8St4",
      "url": null,
      "actor": null,
      "commit_id": "5628ac55be42c5450c6817ba8dcfe463ceda32a9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Updated per feedback. Thanks everyone.\r\n\r\n* Improved test coverage.\r\n* Moved `GetAdjustedTime` usage to `GetTime`.\r\n* Renamed `in_ibd` variable to `past_net_limited`.\r\n* Updated comments and code to clearly state that the responsibility of setting the 'initial sync finished' flag backwards is inside the 'CheckForStaleTip' process.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1710304120",
      "submitted_at": "2023-11-02T13:36:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "commented",
      "id": 1793773276,
      "node_id": "IC_kwDOABII585q6s7c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1793773276",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-05T15:47:52Z",
      "updated_at": "2023-11-05T15:47:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK 5628ac55be42c5450c6817ba8dcfe463ceda32a9",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1793773276",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "review_requested",
      "id": 10865268738,
      "node_id": "RRE_lADOABII585swZjNzwAAAAKHntgC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10865268738",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-05T15:47:57Z",
      "requested_reviewer": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1714010196,
      "node_id": "PRR_kwDOABII585mKbhU",
      "url": null,
      "actor": null,
      "commit_id": "5628ac55be42c5450c6817ba8dcfe463ceda32a9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1714010196",
      "submitted_at": "2023-11-05T15:48:12Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "reviewed",
      "id": 1717094661,
      "node_id": "PRR_kwDOABII585mWMkF",
      "url": null,
      "actor": null,
      "commit_id": "5628ac55be42c5450c6817ba8dcfe463ceda32a9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1717094661",
      "submitted_at": "2023-11-07T08:38:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10887988153,
      "node_id": "HRFPE_lADOABII585swZjNzwAAAAKI-YO5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10887988153",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "60a487dd2430145115fcd0215472a5a2ef9bb090",
      "commit_url": "https://api.github.com/repos/furszy/bitcoin-core/commits/60a487dd2430145115fcd0215472a5a2ef9bb090",
      "created_at": "2023-11-07T14:50:26Z"
    },
    {
      "event": "commented",
      "id": 1798760647,
      "node_id": "IC_kwDOABII585rNujH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1798760647",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-07T14:52:28Z",
      "updated_at": "2023-11-07T14:52:37Z",
      "author_association": "MEMBER",
      "body": "Updated per @andrewtoth feedback via dm.\r\nImproved a test comment for better clarity. Tiny [diff](https://github.com/bitcoin/bitcoin/compare/5628ac55be42c5450c6817ba8dcfe463ceda32a9..60a487dd2430145115fcd0215472a5a2ef9bb090).",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1798760647",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "mentioned",
      "id": 10888018141,
      "node_id": "MEE_lADOABII585swZjNzwAAAAKI-fjd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10888018141",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-07T14:52:28Z"
    },
    {
      "event": "subscribed",
      "id": 10888018168,
      "node_id": "SE_lADOABII585swZjNzwAAAAKI-fj4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10888018168",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-07T14:52:28Z"
    },
    {
      "event": "review_requested",
      "id": 11089517064,
      "node_id": "RRE_lADOABII585swZjNzwAAAAKU_JoI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11089517064",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-28T22:38:29Z",
      "requested_reviewer": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 1840311256,
      "node_id": "IC_kwDOABII585tsOvY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1840311256",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T09:05:05Z",
      "updated_at": "2023-12-05T09:05:05Z",
      "author_association": "MEMBER",
      "body": "ACK 60a487dd2430145115fcd0215472a5a2ef9bb090.\r\n\r\n[This](https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1413149420) would be an improvement.",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1840311256",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "review_request_removed",
      "id": 11150175341,
      "node_id": "RRRE_lADOABII585swZjNzwAAAAKYmixt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11150175341",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T09:05:11Z",
      "requested_reviewer": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11150175769,
      "node_id": "RRE_lADOABII585swZjNzwAAAAKYmi4Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11150175769",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T09:05:13Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 1841506898,
      "node_id": "IC_kwDOABII585twypS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1841506898",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T19:44:27Z",
      "updated_at": "2023-12-05T19:45:20Z",
      "author_association": "MEMBER",
      "body": "Updated per feedback (https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1384553675). Thanks @andrewtoth and @naumenkogs.\r\nTiny diff, only renamed `m_initial_sync_finished` to `m_is_close_to_tip` in a scripted-diff commit afc29b15e262b4ff402d479ec77ab8507552bcbc.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1841506898",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "mentioned",
      "id": 11158368057,
      "node_id": "MEE_lADOABII585swZjNzwAAAAKZFy85",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11158368057",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T19:44:27Z"
    },
    {
      "event": "subscribed",
      "id": 11158368068,
      "node_id": "SE_lADOABII585swZjNzwAAAAKZFy9E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11158368068",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T19:44:27Z"
    },
    {
      "event": "mentioned",
      "id": 11158368087,
      "node_id": "MEE_lADOABII585swZjNzwAAAAKZFy9X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11158368087",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T19:44:27Z"
    },
    {
      "event": "subscribed",
      "id": 11158368096,
      "node_id": "SE_lADOABII585swZjNzwAAAAKZFy9g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11158368096",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T19:44:27Z"
    },
    {
      "event": "commented",
      "id": 1842572200,
      "node_id": "IC_kwDOABII585t02uo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1842572200",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-06T10:10:06Z",
      "updated_at": "2023-12-06T10:10:06Z",
      "author_association": "MEMBER",
      "body": "ACK afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1842572200",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "review_request_removed",
      "id": 11166123947,
      "node_id": "RRRE_lADOABII585swZjNzwAAAAKZjYer",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11166123947",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-06T10:10:13Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11166124183,
      "node_id": "RRE_lADOABII585swZjNzwAAAAKZjYiX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11166124183",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-06T10:10:14Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1771466506,
      "node_id": "PRR_kwDOABII585plm8K",
      "url": null,
      "actor": null,
      "commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1771466506",
      "submitted_at": "2023-12-08T03:01:49Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "reviewed",
      "id": 1769801940,
      "node_id": "PRR_kwDOABII585pfQjU",
      "url": null,
      "actor": null,
      "commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK. I acknowledge this PR resolves the problem. But the situation is somewhat convoluted in `master` and I am not sure this PR makes it any better. There are multiple ways to determine if we are stale:\r\n\r\n1. `ChainstateManager::IsInitialBlockDownload()`: uses `-maxtipage` (default 24h). Once it considers out of IBD, it stays like that regardless of the tip age (why? surely it is possible to lag behind again).\r\n\r\n2. `g_initial_block_download_completed`\r\n  2.1. Set by `Chainstate::ActivateBestChain()` -> `PeerManagerImpl::UpdatedBlockTip()` -> `SetServiceFlagsIBDCache()` with a value determined by `ChainstateManager::IsInitialBlockDownload()`, can be changed to/from `true`/`false` but in practice is never because of `IsInitialBlockDownload()`.\r\n  2.2. Used to determine desired peers' service flags.\r\n\r\n3. `PeerManagerImpl::m_initial_sync_finished`\r\n  3.1. Set by `PeerManagerImpl::CheckForStaleTipAndEvictPeers()` depending on `PeerManagerImpl::CanDirectFetch()` which checks if the tip is older than 3h20min. Can only go from `false` to `true` (why?).\r\n  3.2. Used to determine whether to start extra block-relay-only connections.\r\n\r\n4. `PeerManagerImpl::TipMayBeStale()`: considers 30 minutes without tip change as stale (nb: not the tip age (!) for example if we updated the tip 5 minutes ago with a block that is 1 month old, then this method considers \"not stale\"). Also takes into account `mapBlocksInFlight.empty()`.\r\n  4.1. Used to try a new outbound peer if \"stale\".\r\n\r\nLimited peers are supposed to keep at least 288 blocks (48h).\r\n\r\nIn this PR:\r\n\r\n* `g_initial_block_download_completed` is removed\r\n* `PeerManagerImpl::m_initial_sync_finished` is used to determine desired peers' service flags\r\n* `PeerManagerImpl::m_initial_sync_finished` is set based on a bunch of factors: `m_stale_tip_check_time`, `m_chainman.m_blockman.LoadingBlocks()`, `m_connman.GetNetworkActive()`, `m_connman.GetUseAddrmanOutgoing()`, `m_last_tip_update`, `mapBlocksInFlight.empty()`, `CanDirectFetch()` and `ChainstateManager::IsInitialBlockDownload()` (I find this a bit obscure).\r\n\r\nApproach NACK. I could be wrong, but I think that it should be possible to resolve the problem in a simpler way and without touching unrelated stuff (like when to start \"extra block-relay-only connections\"). What about removing `g_initial_block_download_completed` and replacing it with an expression \"our highest block is older than 48h\" inside `GetDesirableServiceFlags()`?\r\n",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1769801940",
      "submitted_at": "2023-12-08T11:07:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "commented",
      "id": 1852679820,
      "node_id": "IC_kwDOABII585ubaaM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1852679820",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-12T19:32:20Z",
      "updated_at": "2023-12-12T19:32:20Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review vasild!. Will tackle all points in the coming days. I'm currently finishing few bug fixes priorities and will be fully here again.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1852679820",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "commented",
      "id": 1853978983,
      "node_id": "IC_kwDOABII585ugXln",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1853978983",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-13T14:04:13Z",
      "updated_at": "2023-12-13T14:04:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "Would this resolve the problem?\r\n\r\n<details>\r\n<summary>[patch] update g_initial_block_download_completed periodically based on our tip age</summary>\r\n\r\n```diff\r\ndiff --git i/src/net_processing.cpp w/src/net_processing.cpp\r\nindex df54a62f28..ec9bbff8f2 100644\r\n--- i/src/net_processing.cpp\r\n+++ w/src/net_processing.cpp\r\n@@ -2045,13 +2045,12 @@ void PeerManagerImpl::NewPoWValidBlock(const CBlockIndex *pindex, const std::sha\r\n  * Update our best height and announce any block hashes which weren't previously\r\n  * in m_chainman.ActiveChain() to our peers.\r\n  */\r\n void PeerManagerImpl::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload)\r\n {\r\n     SetBestHeight(pindexNew->nHeight);\r\n-    SetServiceFlagsIBDCache(!fInitialDownload);\r\n \r\n     // Don't relay inventory during initial block download.\r\n     if (fInitialDownload) return;\r\n \r\n     // Find the hashes of all blocks that weren't previously in the best chain.\r\n     std::vector<uint256> vHashes;\r\n@@ -5265,12 +5264,19 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\r\n     }\r\n \r\n     if (!m_initial_sync_finished && CanDirectFetch()) {\r\n         m_connman.StartExtraBlockRelayPeers();\r\n         m_initial_sync_finished = true;\r\n     }\r\n+\r\n+    const std::chrono::seconds time_between_blocks{m_chainparams.GetConsensus().nPowTargetSpacing};\r\n+    const NodeSeconds limited_peers_oldest_block_time{Now<NodeSeconds>() -\r\n+                                                      time_between_blocks * NODE_NETWORK_LIMITED_MIN_BLOCKS};\r\n+    const bool tip_within_limited_peers_reach{m_chainman.ActiveChain().Tip()->Time() >\r\n+                                              limited_peers_oldest_block_time};\r\n+    SetServiceFlagsIBDCache(tip_within_limited_peers_reach);\r\n }\r\n \r\n void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::microseconds now)\r\n {\r\n     if (m_connman.ShouldRunInactivityChecks(node_to, std::chrono::duration_cast<std::chrono::seconds>(now)) &&\r\n         peer.m_ping_nonce_sent &&\r\n```\r\nagainst `master` @ f0e829022a415c7c9513e715c532079ec7756306\r\nplus maybe some renaming is warranted\r\n</details>\r\n\r\nMy addrman has 71837 addresses and from those 11795 are limited peers. The chance of getting all 10 peers limited is (11795 / 71837)<sup>10</sup> which is really small. Was this observed in practice or is it more of a theoretical problem? (I think it should be fixed even if \"theoretical\").",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1853978983",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "reviewed",
      "id": 1781749563,
      "node_id": "PRR_kwDOABII585qM1c7",
      "url": null,
      "actor": null,
      "commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "> But the situation is somewhat convoluted in master and I am not sure this PR makes it any better. There are multiple ways to determine if we are stale.\r\n\r\nEach of those flags have a different meaning depending on where they are located. They are not equivalent and shouldn't be used interchangeably. For instance:\r\nThe flag at the chain state manager level tells us whether the node passed IBD or not based only on the chain information.\r\nThe flag at the peers manager level tells us whether the node passed IBD or not based on the chain information, last received tip time and the in-flight block requests.\r\n\r\nThe higher we go in terms of layering levels, the more complete the sync status information is.\r\n\r\nThat being said, it is hard to disagree over the convoluted situation in master. One of the reasons behind the way I implemented this PR is to unify the different ways we check for a stale scenario at the PeerManager level (where we sometimes call `CanDirectFetch()` directly, others we call `IsInitialBlockDownload()` and others we use the `m_initial_sync_finished` field..).\r\n\r\n> ChainstateManager::IsInitialBlockDownload(): uses -maxtipage (default 24h). Once it considers out of IBD, it stays like that regardless of the tip age (why? surely it is possible to lag behind again).\r\n\r\nI'm quite sure we don't want to modify `IsInitialBlockDownload()` without a really good reason. It has been there for over a decade, and many processes depend on it. Instead, I advocate for a gradual migration of callers to not depend on it. This PR essentially moves in that direction by improving the PeerManager's existing view of the synchronization state, which differs from the lower-level ChainStateManager view.\r\nThis is because the concept of the 'initial block download' state is incomplete at the ChainStateManager level; it does not consider the in-flight blocks, any recent chain movement nor any network-level heuristic.\r\nFurthermore, this concept fails to describe what happens after initial-block-download.. what if the node lags behind for a really long time, etc. The staleness situations can be a bit more more complex than a simple 'stale'-'not stale' state obtained only by checking the diff between the tip time and the current clock time.\r\n\r\nOn top of that, I'm pretty strong on stopping using functions that lock `cs_main` indiscriminately everywhere in the sources. The more we lock this mutex, the worse the overall node responsiveness becomes. With this PR changes, we are improving the situation and merging the base building blocks for other `cs_main` locks removals in the future as well.\r\n\r\n\r\n> PeerManagerImpl::m_initial_sync_finished > 3.1. Set by PeerManagerImpl::CheckForStaleTipAndEvictPeers() depending on PeerManagerImpl::CanDirectFetch() which checks if the tip is older than 3h20min. Can only go from false to true (why?).\r\n\r\nBecause the field is called 'initial sync finished'. Same terminology used at the chain state manager level. This field pertains to the initial block download state and does not reflect the node's proximity to the tip during the entire node lifetime. It does not provide information about post-IBD staling situations.\r\nHence, there are instances in the sources where `CanDirectFetch()` is directly called, resulting in repeated locking of `cs_main` to detect stale situations. Instead, we should aim to have this flag accurately represent the true synchronization state. Consequently, we can replace all calls to `CanDirectFetch()` and, possibly, other lower-level `IsInitialBlockDownload()` with this PeerManager level flag. (My idea is to submit follow-ups moving into this direction).",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1781749563",
      "submitted_at": "2023-12-14T12:51:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "commented",
      "id": 1856680153,
      "node_id": "IC_kwDOABII585uqrDZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1856680153",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-14T21:40:06Z",
      "updated_at": "2023-12-18T15:38:21Z",
      "author_association": "MEMBER",
      "body": "> I think that it should be possible to resolve the problem in a simpler way and without touching unrelated stuff (like when to start \"extra block-relay-only connections\")\r\n\r\nPlease look https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1296355296.\r\nThe convo started from a different angle but I think the outcome addresses your concern.\r\nWe ended up agreeing that keeping the extra block relay connection logic as is in the current change set actually improves certain scenarios. For instance; if we are in a post-IBD stalling state, we do need more block relay connections. Could be full node outbound connections or extra block relay only connections. It doesn't matter. We just need some peer who can help us sync.\r\n\r\n> Would this resolve the problem?\r\n>\r\n> [patch] update g_initial_block_download_completed periodically based on our tip age\r\n\r\nHmm, I wouldn't be so happy with it. It is re-implementing existing pieces of code in a CPU-wasteful manner.\r\n\r\nKeep in mind that `CheckForStaleTipAndEvictPeers()` is executed every 45 seconds indefinitely. We don't want to perform the checks and updates you added when the node is fully synced. These should only be executed when the node detects the tip lagging behind.\r\nTo achieve this, we already have the `TipMayBeStale()` function, which runs only at a 10-minute interval to prevent CPU waste.\r\nAdditionally, would say that the reason behind `PeerManager` caching the last time the tip was updated, and not the last tip time, is to differentiate between a node completely isolated, lagging behind, with no relevant connections vs a node that is lagging behind but it is connected to the network and syncing up the chain. These are two different scenarios: the first one requires new connections, meanwhile the second one does not (it could be syncing slow due to a poor internet connection, but the node is still syncing, which is positive).\r\n\r\nAlso, the way we cache the last time the tip was updated inside `PeerManager` is great for avoiding unnecessary `cs_main` locks, which impact the entire node's responsiveness (a key motivation behind the current implementation of this PR).\r\nA small note about this last point: we can and should do better. I think we will be able to remove the high-level `cs_main` lock at `CheckForStaleTipAndEvictPeers()` in a future future follow-up PR.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1856680153",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "commented",
      "id": 1858509374,
      "node_id": "IC_kwDOABII585uxpo-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1858509374",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-15T21:26:37Z",
      "updated_at": "2023-12-19T19:06:22Z",
      "author_association": "MEMBER",
      "body": "News, found something after all the walls of texts.\r\n~Having the ´TipMayBeStale()´ call surrounded by `GetUseAddrmanOutgoing()` check makes the node accept limited peers incoming connections indiscriminately when it was initialized with outgoing connections disabled.~\r\nUpdate: ^^ this is ok. We skip the desirable services flag check on inbound, feeler and manual connections. Not an issue.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1858509374",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "commented",
      "id": 1860824375,
      "node_id": "IC_kwDOABII585u6e03",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1860824375",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-18T15:32:11Z",
      "updated_at": "2023-12-18T15:32:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "I agree with what you say, except the below:\r\n\r\n> It is re-implementing existing pieces of code\r\n\r\nWhich?\r\n\r\n> in a CPU-wasteful manner.\r\n\r\nIsn't that just a few CPU instructions? (comparing the tip age to the current time). I agree it can be done less often than 45 seconds for the purpose of avoiding limited peers.\r\n\r\n> a node completely isolated, lagging behind, with no relevant connections vs a node that is lagging behind but it is connected to the network and syncing up the chain\r\n\r\nYes, these are two different scenarios in general. My understanding is that in both we better avoid limited peers.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1860824375",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11293831161,
      "node_id": "HRFPE_lADOABII585swZjNzwAAAAKhKi_5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11293831161",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "commit_url": "https://api.github.com/repos/furszy/bitcoin-core/commits/fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "created_at": "2023-12-19T19:18:45Z"
    },
    {
      "event": "reviewed",
      "id": 1789712050,
      "node_id": "PRR_kwDOABII585qrNay",
      "url": null,
      "actor": null,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "PR reworked based on feedback. Thanks @vasild for the review rounds.\r\n\r\nThe functionality is no longer tied to the last tip update time; is now linked to the actual tip time, which is now cached by `PeerManager` to prevent undesirable `cs_main` locks. This implies simpler code since we are no longer modifying `TipMayBeStale()` nor the `m_initial_sync_finished` field.\r\n\r\nI still believe that we should implement some of the changes made earlier, such as the `PeerManager` IBD flag modifications, which will allow us to clean up a good number of `cs_main` locks. However, I agree that these changes should be done in a separate PR.\r\n\r\n> It is re-implementing existing pieces of code\r\n> Which?\r\n\r\nWas talking about `TipMayBeStale()` which checks the time already. But.. I wasn't contemplating the fact that it can return `NotStale` only because the node has in-flight blocks (which could be ancient..).\r\n\r\n> Isn't that just a few CPU instructions? (comparing the tip age to the current time). I agree it can be done less often than 45 seconds for the purpose of avoiding limited peers.\r\n\r\nCovered. Check it now.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1789712050",
      "submitted_at": "2023-12-19T21:03:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "reviewed",
      "id": 1794246976,
      "node_id": "PRR_kwDOABII585q8glA",
      "url": null,
      "actor": null,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Looks better!",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1794246976",
      "submitted_at": "2023-12-22T10:53:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "reviewed",
      "id": 1794332231,
      "node_id": "PRR_kwDOABII585q81ZH",
      "url": null,
      "actor": null,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1794332231",
      "submitted_at": "2023-12-22T11:05:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11326791235,
      "node_id": "HRFPE_lADOABII585swZjNzwAAAAKjIR5D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11326791235",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6c603490023317a84c7c96ef4b64f4f96ea03d1f",
      "commit_url": "https://api.github.com/repos/furszy/bitcoin-core/commits/6c603490023317a84c7c96ef4b64f4f96ea03d1f",
      "created_at": "2023-12-22T13:55:09Z"
    },
    {
      "event": "reviewed",
      "id": 1801881895,
      "node_id": "PRR_kwDOABII585rZokn",
      "url": null,
      "actor": null,
      "commit_id": "6c603490023317a84c7c96ef4b64f4f96ea03d1f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 6c603490023317a84c7c96ef4b64f4f96ea03d1f\r\n\r\nIt would be nice to avoid duplicating the constant `NODE_NETWORK_LIMITED_MIN_BLOCKS` ([discussion](https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1434938857)) but I do not see that as a blocker of this PR.\r\n\r\nThanks!\r\n",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1801881895",
      "submitted_at": "2024-01-03T12:09:27Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "review_requested",
      "id": 11378521980,
      "node_id": "RRE_lADOABII585swZjNzwAAAAKmNnd8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11378521980",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-03T12:09:34Z",
      "requested_reviewer": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11378522096,
      "node_id": "RRE_lADOABII585swZjNzwAAAAKmNnfw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11378522096",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-03T12:09:35Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11378576646,
      "node_id": "RRRE_lADOABII585swZjNzwAAAAKmN00G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11378576646",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-03T12:16:27Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11378576811,
      "node_id": "RRE_lADOABII585swZjNzwAAAAKmN02r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11378576811",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-03T12:16:29Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11380316384,
      "node_id": "RRRE_lADOABII585swZjNzwAAAAKmUdjg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11380316384",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-03T15:19:30Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11380316658,
      "node_id": "RRE_lADOABII585swZjNzwAAAAKmUdny",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11380316658",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-03T15:19:31Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11380317199,
      "node_id": "RRRE_lADOABII585swZjNzwAAAAKmUdwP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11380317199",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-03T15:19:35Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11380317363,
      "node_id": "RRE_lADOABII585swZjNzwAAAAKmUdyz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11380317363",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-03T15:19:36Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "labeled",
      "id": 11474063930,
      "node_id": "LE_lADOABII585swZjNzwAAAAKr6FI6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11474063930",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-12T21:29:25Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1820309688,
      "node_id": "PRR_kwDOABII585sf7i4",
      "url": null,
      "actor": null,
      "commit_id": "6c603490023317a84c7c96ef4b64f4f96ea03d1f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 6c603490023317a84c7c96ef4b64f4f96ea03d1f modulo nits\r\n\r\nFor `peerman_tests.cpp`, we should prefer list initialization and constness for variables when possible.\r\n\r\nFor commit message of `net: move state dependent peer services flags` (b934bfd327f68d39aebb2d9ab52b39b7cd29525d),\r\nthe last sentence could be:\r\n```\r\nAdditionally, this encapsulation enables us\r\nto customize the connections decision-making process based on\r\nnew users' configurations in the future.\r\n```",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1820309688",
      "submitted_at": "2024-01-14T23:06:26Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk3ZGY0ZTM4ODc5ZDI2NDRhZWVjMzRjMWVlZjI0MWZlZDYyNzMzM2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97df4e38879d2644aeec34c1eef241fed627333e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/97df4e38879d2644aeec34c1eef241fed627333e",
      "tree": {
        "sha": "e959873dd17fbc306f8db99a078252be745073d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e959873dd17fbc306f8db99a078252be745073d1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e959873dd17fbc306f8db99a078252be745073d1\nparent dd391944dc2d4e7dda9439647e603b41ba751b78\nauthor furszy <matiasfurszyfer@protonmail.com> 1702992614 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1705325300 -0300\n\nnet: store best block tip time inside PeerManager\n\nAnd implement 'ApproximateBestBlockDepth()' to estimate\nthe distance, in blocks, between the best-known block\nand the network chain tip. Utilizing the best-block time\nand the chainparams blocks spacing to approximate it.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmWlMvQACgkQXdI8zGhq\npiOiXA//YbEpAWy1VeQdYXYrVfYrRIfGrXF7dSLhK8wmwwdNo9tVihRrHkDMJQVk\n2GJ4i2NWAlhkkhjLBz7xW4UgDFKrqkapPSndGqRHyOjmhL9EeGza18+RIgaLUNBV\nf8SUhNGA8pCAKVsOt7nisnUrtCvICtoFk/qtI5Ns5Yx5ZpH2Letf/+Qk97Z4US4f\nDefFqHCmtzv5Razrbjzc1LwSu1irlAXQHz3YDL/IzqvfHrTgFX/+ILAUdqVoSzQR\nsI5ZSxRGew7rB5BztZEB8DkJrXPE+XkCcP7ycclhe2btkMNfuHh5CYc8DKhp5KH9\nMTyoHCoyTBkG7p4GKtlKHtYA69hFE7xLNE2Qvki6dP/0G9CGJVWT6s+WgInc7pZ3\nAn+H7fHaFczUQw5k36GPl9hH48Qt7iO/zTc24YyP3R2aQxDV1AY8mfjXYKzT8R+R\nUX64dpJxBtNxwbCaKL8gnmxrApjGAmsbuR11grRuwMO2gQB6jJ5HSuBHXroLmwy8\nMG53Im6ipDxPpXIrVL2slEfZPLinULLml0hNT+UnnsalG4zDY4EMsj/kolPJp6Bv\n3VLToHkscz+2dVf8keCA2W94esVXB9LNtZ77aAoAn1JSp04RBSGykGZGSlLv565B\nZyuqaHkip6hS7Bj1+img2kqenzvdM2ANA3l2a+ZoayIJXKh5ZTg=\n=l2LO\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dd391944dc2d4e7dda9439647e603b41ba751b78",
          "sha": "dd391944dc2d4e7dda9439647e603b41ba751b78",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/dd391944dc2d4e7dda9439647e603b41ba751b78"
        }
      ],
      "message": "net: store best block tip time inside PeerManager\n\nAnd implement 'ApproximateBestBlockDepth()' to estimate\nthe distance, in blocks, between the best-known block\nand the network chain tip. Utilizing the best-block time\nand the chainparams blocks spacing to approximate it.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-01-15T13:28:20Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-12-19T13:30:14Z"
      },
      "sha": "97df4e38879d2644aeec34c1eef241fed627333e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY5YWM5NmI4ZDZmNGViYTIzYzg4ZjMwMmIyMmEyYzY3NmUzNTEyNjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f9ac96b8d6f4eba23c88f302b22a2c676e351263",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f9ac96b8d6f4eba23c88f302b22a2c676e351263",
      "tree": {
        "sha": "004ce2473a7949a22252d6f0d677c4ba25a5e002",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/004ce2473a7949a22252d6f0d677c4ba25a5e002"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 004ce2473a7949a22252d6f0d677c4ba25a5e002\nparent 97df4e38879d2644aeec34c1eef241fed627333e\nauthor furszy <matiasfurszyfer@protonmail.com> 1690392081 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1705325300 -0300\n\nnet: decouple state independent service flags from desirable ones\n\nThis former one will be moved to the peer manager class in the\nfollowing-up commit.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmWlMvQACgkQXdI8zGhq\npiOd+g/9GXzhD9s0z0kvXtxGLGk83W0Jd8/bd8YROax++uyyMYn67JDl/bt0AlxP\n5LZVjNPrQ1/4inJzcwTjFqqVdlJHHsiHt4n74xY2FZG9Y25hpOOPVVS8eNWJ98ah\neHWcFoxn6d+ZMW8GyN0+YrrnJDyg/jpTyNBKRcE8mEKNePBHo5JtNbUURuFJXm98\n4KxDri7gfT819z/AJG3j30HwoFuEozAa6WWgz7C65NxlOQKiff/h57SyEdAtOmB/\n0D5aiZekWZVwU/qkA02rO8WMguwDcPJzjHA8JvVlWLvSZTod5Zcq6ucyC/4d4uzk\nWmd4zkLBhM2jR2zHSccOGlcKupLt71tVbfWxoMXA7ClBI38vngCus5f98t4yuPGr\n1vHA8XYE+I2iuHn6tKbyodrCEGIP6kbFgrrc5/E7jycB9LMvqY8+KXOuOcTwnzSM\nBB85/agMYQQn6JsRv/UasjWIZQHjSePFfsIqvOvwAseuT6sPCgq3uM97Zd4PTOEA\nkqbBbq5KCKvcSK/mvmS8vKvjRetwqodIJyq9NkK6U1K2EKlmwSsjnsVUxgO36WzX\nStLoddjj859P/yozVAiRc0AzQEAlnrKNMMk6m3Blf8jca4dQmisSlriS8vuBua07\nBkBMKBADmNdMn3JjdFtyAWw/HTMIgUzVvnj96Tha4hOG/ifngzY=\n=n4pV\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97df4e38879d2644aeec34c1eef241fed627333e",
          "sha": "97df4e38879d2644aeec34c1eef241fed627333e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/97df4e38879d2644aeec34c1eef241fed627333e"
        }
      ],
      "message": "net: decouple state independent service flags from desirable ones\n\nThis former one will be moved to the peer manager class in the\nfollowing-up commit.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-01-15T13:28:20Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-07-26T17:21:21Z"
      },
      "sha": "f9ac96b8d6f4eba23c88f302b22a2c676e351263"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDlmMzZlNTkxYzU1MWVjMmU1OGE2NDk2MzM0NTQxYmZkYWU4ZmRmZTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9f36e591c551ec2e58a6496334541bfdae8fdfe5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9f36e591c551ec2e58a6496334541bfdae8fdfe5",
      "tree": {
        "sha": "aac5d45e617133f5caa8db9f9dec5ea6b45af0cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aac5d45e617133f5caa8db9f9dec5ea6b45af0cc"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree aac5d45e617133f5caa8db9f9dec5ea6b45af0cc\nparent f9ac96b8d6f4eba23c88f302b22a2c676e351263\nauthor furszy <matiasfurszyfer@protonmail.com> 1702990237 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1705325300 -0300\n\nnet: move state dependent peer services flags\n\nNo behavior change. Just an intermediate refactoring.\n\nBy relocating the peer desirable services flags into the peer\nmanager, we allow the connections acceptance process to handle\npost-IBD potential stalling scenarios.\n\nIn the follow-up commit(s), the desirable service flags will be\ndynamically adjusted to detect post-IBD stalling scenarios (such\nas a +48-hour inactive node that must prefer full node connections\ninstead of limited peer connections because they cannot provide\nhistorical blocks). Additionally, this encapsulation enable us\nto customize the connections decision-making process based on\nnew user's configurations in the future.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmWlMvQACgkQXdI8zGhq\npiPtuA/+ILJ968HmfHK0QJWfTI617aQl3obWh0qTlKnnlEe6PNAc0dDRh1OCHdoj\npuKZn8wEQ7NRvGCxLc8v54HunoULnVY8eHku4vxEvX6SgqkZUtwUodST7kMn0LQn\nqeU9VYsnzPm1zSFwsmFf0r3leHyzy9IH6Lbihio04zjqFr/g+dOzygNroezLpf27\nfH2DYwEbvZliYbUkgqYgR5RsMP0nfvXO1AzpHtbn+apfMo5SaZZiXwWIRHr/F1ns\n7g9kzR+gC14oT4URWAxI+VWCLXOqobmj3G9CmmH3dPg7Ww7cOBgy6vTRrbyyVsEf\nq7JoawQmko30EgOVaE4JMNj/Z4sVBz72CY3mJpU6j6YUduWMrq2V2Dx8eGtgDIx8\n0EIrm8LD3U7OJqRXY/qcq1BgUSdtGt+rRkbZICu3RGeKNxdoFTro8JswIeZuPCMp\nVn16q9JCVb80RQ5JZS6auA0i4bNWMKwxj8ox/WWfglKICtzED+RUSFcHV/xZK3Rf\nViU5CTBNmXfj08E8uE7RvhF9Fd+XcSQdWX4OjjQ8pFlyhn7c8PzV0whwr72CdIvw\nDovQkQjJ/ZZPy9Pi8/MQZ/H3KLDmVjOle9Zg+K8NorXfCyQ6690DxvVMG1nc3M/R\nk+YJJx4+pkmU/528N2AZsIh5+YN50A82+zp9t7415F8YO8s3I6I=\n=F2TY\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f9ac96b8d6f4eba23c88f302b22a2c676e351263",
          "sha": "f9ac96b8d6f4eba23c88f302b22a2c676e351263",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f9ac96b8d6f4eba23c88f302b22a2c676e351263"
        }
      ],
      "message": "net: move state dependent peer services flags\n\nNo behavior change. Just an intermediate refactoring.\n\nBy relocating the peer desirable services flags into the peer\nmanager, we allow the connections acceptance process to handle\npost-IBD potential stalling scenarios.\n\nIn the follow-up commit(s), the desirable service flags will be\ndynamically adjusted to detect post-IBD stalling scenarios (such\nas a +48-hour inactive node that must prefer full node connections\ninstead of limited peer connections because they cannot provide\nhistorical blocks). Additionally, this encapsulation enable us\nto customize the connections decision-making process based on\nnew user's configurations in the future.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-01-15T13:28:20Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-12-19T12:50:37Z"
      },
      "sha": "9f36e591c551ec2e58a6496334541bfdae8fdfe5"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11488302132,
      "node_id": "HRFPE_lADOABII585swZjNzwAAAAKswZQ0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11488302132",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "79e10351b1ce1f8db98ece67aacc24f323008b37",
      "commit_url": "https://api.github.com/repos/furszy/bitcoin-core/commits/79e10351b1ce1f8db98ece67aacc24f323008b37",
      "created_at": "2024-01-15T13:30:33Z"
    },
    {
      "event": "commented",
      "id": 1892185801,
      "node_id": "IC_kwDOABII585wyHbJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1892185801",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-15T13:33:07Z",
      "updated_at": "2024-01-15T13:33:07Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review @andrewtoth!\r\nAll nits tackled, [small diff](https://github.com/bitcoin/bitcoin/compare/6c603490023317a84c7c96ef4b64f4f96ea03d1f..79e10351b1ce1f8db98ece67aacc24f323008b37). Ready to go.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1892185801",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "mentioned",
      "id": 11488329277,
      "node_id": "MEE_lADOABII585swZjNzwAAAAKswf49",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11488329277",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-15T13:33:07Z"
    },
    {
      "event": "subscribed",
      "id": 11488329293,
      "node_id": "SE_lADOABII585swZjNzwAAAAKswf5N",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11488329293",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-15T13:33:07Z"
    },
    {
      "event": "unlabeled",
      "id": 11488925826,
      "node_id": "UNLE_lADOABII585swZjNzwAAAAKsyxiC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11488925826",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-15T14:25:40Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "review_requested",
      "id": 11499301358,
      "node_id": "RRE_lADOABII585swZjNzwAAAAKtaWnu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11499301358",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-16T13:59:58Z",
      "requested_reviewer": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11499302140,
      "node_id": "RRE_lADOABII585swZjNzwAAAAKtaWz8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11499302140",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-16T14:00:02Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1823533958,
      "node_id": "PRR_kwDOABII585ssOuG",
      "url": null,
      "actor": null,
      "commit_id": "79e10351b1ce1f8db98ece67aacc24f323008b37",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 79e10351b1ce1f8db98ece67aacc24f323008b37",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1823533958",
      "submitted_at": "2024-01-16T14:17:15Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "review_request_removed",
      "id": 11499527573,
      "node_id": "RRRE_lADOABII585swZjNzwAAAAKtbN2V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11499527573",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-16T14:17:20Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11499527714,
      "node_id": "RRE_lADOABII585swZjNzwAAAAKtbN4i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11499527714",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-16T14:17:21Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 1894164176,
      "node_id": "IC_kwDOABII585w5qbQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1894164176",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-16T17:10:04Z",
      "updated_at": "2024-01-16T17:10:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK 79e10351b1ce1f8db98ece67aacc24f323008b37",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1894164176",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "review_request_removed",
      "id": 11501669521,
      "node_id": "RRRE_lADOABII585swZjNzwAAAAKtjYyR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11501669521",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-16T17:10:10Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1825332930,
      "node_id": "PRR_kwDOABII585szF7C",
      "url": null,
      "actor": null,
      "commit_id": "79e10351b1ce1f8db98ece67aacc24f323008b37",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "If I understand it correctly, the logic deciding whether to try and accept outbound connections, using `HasAllDesirableServiceFlags()`, relies on `IsInitialBlockDownload()` / `DEFAULT_MAX_TIP_AGE` (24h) on master, but is changed to rely on `NODE_NETWORK_LIMITED_MIN_BLOCKS` (288 blocks, ~48h) in this PR.\r\n\r\nI think this means that the safety buffer of 144 blocks proposed in [BIP159](https://github.com/bitcoin/bips/blob/master/bip-0159.mediawiki) would have been removed. I'm not sure about that, the distinction of _serving_ up to 288 blocks from the tip when pruning ourselves, but using a smaller window of ~144 blocks for _connecting_ to limited peers made sense to me.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1825332930",
      "submitted_at": "2024-01-16T22:49:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "review_requested",
      "id": 11504617430,
      "node_id": "RRE_lADOABII585swZjNzwAAAAKtuofW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11504617430",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-16T22:49:52Z",
      "requested_reviewer": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1827261571,
      "node_id": "PRR_kwDOABII585s6cyD",
      "url": null,
      "actor": null,
      "commit_id": "79e10351b1ce1f8db98ece67aacc24f323008b37",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "> If I understand it correctly, the logic deciding whether to try and accept outbound connections, using `HasAllDesirableServiceFlags()`, relies on `IsInitialBlockDownload()` / `DEFAULT_MAX_TIP_AGE` (24h) on master, but is changed to rely on `NODE_NETWORK_LIMITED_MIN_BLOCKS` (288 blocks, ~48h) in this PR.\r\n>\r\n> I think this means that the safety buffer of 144 blocks proposed in [BIP159](https://github.com/bitcoin/bips/blob/master/bip-0159.mediawiki) would have been removed. I'm not sure about that, the distinction of _serving_ up to 288 blocks from the tip when pruning ourselves, but using a smaller window of ~144 blocks for _connecting_ to limited peers made sense to me.\r\n\r\nHmm, good point. I would slightly rephrase, and extend, your first paragraph to state that the net limited buffer is connected to a user-customizable parameter, `-maxtipage`, with its default value is set to 24h. Because, this implies that when the user modifies `-maxtipage` beyond the net limited threshold, it violates BIP159 rules and could cause the node to connect to limited peers during IBD, potentially blocking progress until the remote peer disconnects (per #28120). This could lead to delays and, in the worst-case scenario, trigger the issue we are fixing here for the post-IBD stalling scenario but during IBD.\r\n\r\nSo, I agree on setting the connections window to the BIP's number (144 blocks) and am glad we are addressing another possible, edge case, bug with this. Thanks for the review!",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1827261571",
      "submitted_at": "2024-01-17T13:09:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11511571321,
      "node_id": "HRFPE_lADOABII585swZjNzwAAAAKuJKN5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11511571321",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "83e77ce1de2d4c4739bba71e4e27a4690c577375",
      "commit_url": "https://api.github.com/repos/furszy/bitcoin-core/commits/83e77ce1de2d4c4739bba71e4e27a4690c577375",
      "created_at": "2024-01-17T13:40:33Z"
    },
    {
      "event": "commented",
      "id": 1895858869,
      "node_id": "IC_kwDOABII585xAIK1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1895858869",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-17T13:53:03Z",
      "updated_at": "2024-01-17T13:53:03Z",
      "author_association": "MEMBER",
      "body": "Updated per review, thanks @mzumsande!\r\n\r\nHave reduced the limited peers connections window to 144 blocks (previously set to the limited peers threshold value) as it is encouraged by the [BIP159](https://github.com/bitcoin/bips/blob/master/bip-0159.mediawiki). And cleaned previous implementation leftovers in the test. [Code diff](https://github.com/bitcoin/bitcoin/compare/79e10351b1ce1f8db98ece67aacc24f323008b37..83e77ce1de2d4c4739bba71e4e27a4690c577375).\r\n",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1895858869",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "mentioned",
      "id": 11511721194,
      "node_id": "MEE_lADOABII585swZjNzwAAAAKuJuzq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11511721194",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-17T13:53:04Z"
    },
    {
      "event": "subscribed",
      "id": 11511721213,
      "node_id": "SE_lADOABII585swZjNzwAAAAKuJuz9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11511721213",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-17T13:53:04Z"
    },
    {
      "event": "reviewed",
      "id": 1827576365,
      "node_id": "PRR_kwDOABII585s7pot",
      "url": null,
      "actor": null,
      "commit_id": "83e77ce1de2d4c4739bba71e4e27a4690c577375",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "> Hmm, good point. I would slightly rephrase, and extend, your first paragraph to state that the net limited buffer is connected to a user-customizable parameter, `-maxtipage`, with its default value is set to 24h.\r\n\r\nYes, but `-maxtipage` is just an undocumented debug-only option meant for testing, nothing to be changed by actual users on mainnet.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1827576365",
      "submitted_at": "2024-01-17T15:36:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11513137658,
      "node_id": "HRFPE_lADOABII585swZjNzwAAAAKuPIn6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11513137658",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6c6348b936d303a3aaadc1bcede183e451f025d8",
      "commit_url": "https://api.github.com/repos/furszy/bitcoin-core/commits/6c6348b936d303a3aaadc1bcede183e451f025d8",
      "created_at": "2024-01-17T15:43:23Z"
    },
    {
      "event": "commented",
      "id": 1896099957,
      "node_id": "IC_kwDOABII585xBDB1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1896099957",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-17T15:54:21Z",
      "updated_at": "2024-01-17T18:13:03Z",
      "author_association": "MEMBER",
      "body": "> > Hmm, good point. I would slightly rephrase, and extend, your first paragraph to state that the net limited buffer is connected to a user-customizable parameter, `-maxtipage`, with its default value is set to 24h.\r\n> \r\n> Yes, but `-maxtipage` is just an undocumented debug-only option meant for testing, nothing to be changed by actual users on mainnet.\r\n\r\nFor sure. Nothing to be changed. It was just good to mention the possible issue.\r\nStill, on a slightly connected note; you would be surprised by the amount of config files I saw running this option in mainnet in my previous job. Including exchanges.\r\n",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1896099957",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "commented",
      "id": 1900458347,
      "node_id": "IC_kwDOABII585xRrFr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1900458347",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-19T13:48:51Z",
      "updated_at": "2024-01-19T13:48:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "> HasAllDesirableServiceFlags(), relies on IsInitialBlockDownload() / DEFAULT_MAX_TIP_AGE (24h) on master\r\n...\r\n> I think this means that the safety buffer of 144 blocks proposed in [BIP159](https://github.com/bitcoin/bips/blob/master/bip-0159.mediawiki) would have been removed.\r\n\r\nI do not think `-maxtipage` / `DEFAULT_MAX_TIP_AGE` implements \"the safety buffer\" from BIP159. The former was introduced about 2 years before BIP159, in 2015: https://github.com/bitcoin/bitcoin/pull/5987.\r\n\r\nBIP159 reads:\r\n\r\n> _A safety buffer of 144 blocks to handle chain reorganizations SHOULD be taken into account when connecting to a peer signaling the NODE_NETWORK_LIMITED service bit_\r\n\r\nI do not fully get it. Can somebody elaborate what is that? With an example of what could go wrong if this \"safety buffer\" is ignored.\r\n\r\n> I'm not sure about that, the distinction of serving up to 288 blocks from the tip when pruning ourselves, but using a smaller window of ~144 blocks for connecting to limited peers made sense to me\r\n\r\nElsewhere we serve/request 288 +/- 2 blocks from limited peers, to avoid races. Is this what you mean? This makes sense to me, but 144 blocks (24h) to avoid races seems excessive.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1900458347",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "commented",
      "id": 1900883607,
      "node_id": "IC_kwDOABII585xTS6X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1900883607",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-19T18:17:15Z",
      "updated_at": "2024-01-19T18:17:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I do not fully get it. Can somebody elaborate what is that? With an example of what could go wrong if this \"safety buffer\" is ignored.\r\n\r\nI think one reason is that the estimation in `IsInitialBlockDownload()` (or now `ApproximateBestBlockDepth()`) is not precise because block header timestamps could be wrong (within limits).\r\nSo if we used something very close to 2 days, we could think we are just out of IBD and connect to lots of `NODE_NETWORK_LIMITED` peers, which would not serve us the next block we needed, because the limit of serving up to 288 blocks from the tip is absolute (not influenced by timestamps). 144 blocks may still be very conservative / excessive, but it doesn't seem super important to optimize here, when in practice it usually just means that during IBD we wait a bit longer before we accept `NODE_NETWORK_LIMITED` peers?\r\n\r\nI'm not sure about the reorg scenario mentioned in the BIP.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1900883607",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "reviewed",
      "id": 1833561066,
      "node_id": "PRR_kwDOABII585tSevq",
      "url": null,
      "actor": null,
      "commit_id": "6c6348b936d303a3aaadc1bcede183e451f025d8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I implemented @mzumsande's proposed changes because they maintain the existing workflow and document the previously obscure behavior. The objective of this PR is to fix the post-IBD stalling scenario. It would be good to leave the discussion about the \"safety buffer\" number for a follow-up.\r\n\r\nThat being said, I agree with @vasild that the number is quite over-conservative for no apparent reason and could be increased.\r\n\r\n> 144 blocks may still be very conservative / excessive, but it doesn't seem super important to optimize here, when in practice it usually just means that during IBD we wait a bit longer before we accept NODE_NETWORK_LIMITED peers?\r\n\r\nIt isn't matter of waiting a bit longer, I think that being able to connect to more peers always help. More when they can actually help you sync.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1833561066",
      "submitted_at": "2024-01-19T19:44:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "commented",
      "id": 1904423201,
      "node_id": "IC_kwDOABII585xgzEh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1904423201",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-22T16:59:12Z",
      "updated_at": "2024-01-22T16:59:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "Ok, fine. Then, just a comments nit, the recently added comments \"Per BIP159, safety buffer\" and \"BIP159 connections safety window\" better be removed? Because that is not \"A safety buffer of 144 blocks to handle chain reorganizations\"?",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1904423201",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZlZDUzNjAyYWM3YzU2NTI3M2I1NzIyZGUxNjdjYjI1NjlhMGUzODE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ed53602ac7c565273b5722de167cb2569a0e381",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6ed53602ac7c565273b5722de167cb2569a0e381",
      "tree": {
        "sha": "1003316de6138ce4028f04bb860dafcc00b3452e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1003316de6138ce4028f04bb860dafcc00b3452e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1003316de6138ce4028f04bb860dafcc00b3452e\nparent 9f36e591c551ec2e58a6496334541bfdae8fdfe5\nauthor furszy <matiasfurszyfer@protonmail.com> 1703251952 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1706016305 -0300\n\nnet: peer manager, dynamically adjust desirable services flag\n\nIntroduces functionality to detect when limited peers connections\nare desirable or not. Ensuring that the new connections desirable\nservices flags stay relevant throughout the software's lifecycle.\n(Unlike the previous approach, where once the validation IBD flag\nwas set, the desirable services flags remained constant forever).\n\nThis will let us recover from stalling scenarios where the node had\nsuccessfully synced, but subsequently dropped connections and remained\ninactive for a duration longer than the limited peers threshold (the\ntimeframe within which limited peers can provide blocks). Then, upon\nreconnection to the network, the node may end up only establishing\nconnections with limited peers, leading to an inability to synchronize\nthe chain.\n\nThis also fixes a possible limited peers threshold violation during IBD,\nwhen the user configures `-maxtipage` further than the BIP159's limits.\nThis rule violation could lead to sync delays and, in the worst-case\nscenario, trigger the same post-IBD stalling scenario (mentioned above)\nbut during IBD.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmWvvjEACgkQXdI8zGhq\npiMISA/+Ker6N07qIlVtFOZpsA0Gsp2wfD+lCVnVLu5nhLYiRWpSi88Dy4/m1ZiS\n3MhD8FY+Q30BIZIzsx4X3sODvav4ufv6ed3wDfhJhhFNUTw9WuCHA4hc16pmDubH\n4oWy92ocdobC59UEzkFN/fwfPJxWi8sa/qRFDInPpjTohSjvXtdCW16tkB4f49ZH\nthwhL50taMJ697g/q549qXlEbepyzcx9aivYEXYytm5R0o/ZCTBPN36eID1p9fka\nydxEqWIjidtO+o34HlRvAFR1VBaoc+XqpwXv1HYGmxw4QGk5FJegX/Q4P6W18Z2D\noWQs1SC9gx2Wf4a777sw0YyA/Rp8rzq8Sc9yVwLv8F4VtF/K8QCN+pui9AzkJVKl\na0rj7+g8PwqvnnoHVXOvrQGBy8IrOlYsWqw8eZ3Gh887RErd5bpn9FiPGCJmOYM7\n6FBet6/b0Z/THIrYDyuokv5Iypx2hW7kJ5Xsvxm6GEHiM/tnm+mqLYt/ESdgqYzd\nNUrWp2WLV2zzyift5aFl4b/iJARIVkNn22v9KV9QFElMRzI613LD5Q1DnqoxW2T/\n6qcIq9ar5d/hsRbLv+qsSltnJYyHNlQm3L9J5cfV6eTWIk2DlGVamqlcKpphef/Q\nb7zgPiFeYi7Ty0CYDSKOAzDjxm1EEZ29eZESENvX2aT3wFluKPI=\n=cu3C\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9f36e591c551ec2e58a6496334541bfdae8fdfe5",
          "sha": "9f36e591c551ec2e58a6496334541bfdae8fdfe5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9f36e591c551ec2e58a6496334541bfdae8fdfe5"
        }
      ],
      "message": "net: peer manager, dynamically adjust desirable services flag\n\nIntroduces functionality to detect when limited peers connections\nare desirable or not. Ensuring that the new connections desirable\nservices flags stay relevant throughout the software's lifecycle.\n(Unlike the previous approach, where once the validation IBD flag\nwas set, the desirable services flags remained constant forever).\n\nThis will let us recover from stalling scenarios where the node had\nsuccessfully synced, but subsequently dropped connections and remained\ninactive for a duration longer than the limited peers threshold (the\ntimeframe within which limited peers can provide blocks). Then, upon\nreconnection to the network, the node may end up only establishing\nconnections with limited peers, leading to an inability to synchronize\nthe chain.\n\nThis also fixes a possible limited peers threshold violation during IBD,\nwhen the user configures `-maxtipage` further than the BIP159's limits.\nThis rule violation could lead to sync delays and, in the worst-case\nscenario, trigger the same post-IBD stalling scenario (mentioned above)\nbut during IBD.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-01-23T13:25:05Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-12-22T13:32:32Z"
      },
      "sha": "6ed53602ac7c565273b5722de167cb2569a0e381"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFmZjdkOTJiMTUwMGUyNDc4Y2UzNmE3ZTg2YWU0N2RmNDdkZGExNzg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aff7d92b1500e2478ce36a7e86ae47df47dda178",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/aff7d92b1500e2478ce36a7e86ae47df47dda178",
      "tree": {
        "sha": "77755a92ef7e78ca179c704d2caa4ec630e5b5a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/77755a92ef7e78ca179c704d2caa4ec630e5b5a5"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 77755a92ef7e78ca179c704d2caa4ec630e5b5a5\nparent 6ed53602ac7c565273b5722de167cb2569a0e381\nauthor furszy <matiasfurszyfer@protonmail.com> 1698761734 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1706016315 -0300\n\ntest: add coverage for peerman adaptive connections service flags\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmWvvjsACgkQXdI8zGhq\npiNy9g//RPWx6IVJvO8v3kZDwGoNEatkXwV29FGIpq8OjK2W9wPbI8Gr9DZD0GXz\nt0Vv7ON46yE/3h9W2L0ya2Y8RAxDTjBuRvG1F0NZilDooQ0zeZIh0YUG4w7rUjjY\niRhDE/vta/7kSkq/hQQ8ZFHLc8Fi5JekagzTPRJvDETTVbZe43HlxzwwDjEGOW1G\nEN08un7dAMnf8K3ddG8+8udAFinYcC1m4ySDigCgkpi/4yl3I620A6ostUuZACNG\nGt5qtFoXnho9ZEnwg60t42S293JnnePkU+/Ld686Tw6FY7CHyjNF7460TZl3JZFY\nPpR1ID57TEOR8AWo1dMnLGTC377SPjiF4giaddB6dB6+5u96QcYg/ScnHMdBhHAh\n1JbxIpS95uSk1KyLmEvzz0rK8HB3Ve+uQoW8gaFYEdRwhaYJw/+olrS4m59iLmW3\nfMe4B3GHRga8RhwdQZ3eInBPuW6xOCVVEUj5zXDmjeNHf9WWqaQKIbIVVFMJQ1pN\n22C1pe03IG4Xmoamcatky9ZnkcrUGNkHke1znWob1Zp8b8PE636lto+SvIAA9Vnl\nN39pJZJ3SAMd+OU6O+1/DLtcpp91MUcCXIDIh7u3qP1U9278lVYswdxhbGZy17h2\nzXjEAKAEe+4A6rlEpQO0V/z1QkFc24YXoge9VINRhjtfg92wNoo=\n=lOLq\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ed53602ac7c565273b5722de167cb2569a0e381",
          "sha": "6ed53602ac7c565273b5722de167cb2569a0e381",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6ed53602ac7c565273b5722de167cb2569a0e381"
        }
      ],
      "message": "test: add coverage for peerman adaptive connections service flags",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-01-23T13:25:15Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-10-31T14:15:34Z"
      },
      "sha": "aff7d92b1500e2478ce36a7e86ae47df47dda178"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI3ZjI2MGFhNmUwNGY4MmRhZDc4ZTlhMDZkNTg5Mjc1NDYxNDNhMjc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27f260aa6e04f82dad78e9a06d58927546143a27",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/27f260aa6e04f82dad78e9a06d58927546143a27",
      "tree": {
        "sha": "f58c108f0e824189029a0dd9fbf7af1f1a6097d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f58c108f0e824189029a0dd9fbf7af1f1a6097d1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f58c108f0e824189029a0dd9fbf7af1f1a6097d1\nparent aff7d92b1500e2478ce36a7e86ae47df47dda178\nauthor furszy <matiasfurszyfer@protonmail.com> 1703251957 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1706016316 -0300\n\nnet: remove now unused global 'g_initial_block_download_completed'\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmWvvjwACgkQXdI8zGhq\npiP4gBAAy1j75NowcWobAbV5lQN56ykH73sAyW7XgT8Ne+U+ZatRhTrEuihawIxc\naEwjIjgdcWRKSdz5HS9Mq3ZuXGNgcbfAhrUa0odhp8lMSd1lI14eRgtPrsCSG0Z7\n+ESK+/jxmqD3Xm2vssdp55BYKBFWNWm/CrSBJHeXiung3Y7vMQ+p9rJEUgKMxmJl\ngPAXp64i5DCzMbUJW+Y1EbPzA9ShyuCSPkhBOEluAk85aR68V19LKudT3CXokygV\nrfdOdREmXrplnrqREgWpvp62fMqlPSna2+Bf3m8lvJrsMAvmVUimRiQRADUBVTfD\ngy+l8YwLivILxPJp2qnU2MZero9WL1iS4yL8ykE1gJ9obcUHzIqRbm8PzONafaAW\n04TvB5LC1BsLNTxgCfb78y2ewYIn2DM1ae0oLXhm/Wu1e8gSx2QWcI1jIt9Q2tmn\n3BtV5mlH95o2ZtpGUHXcuMRa5bcFD8/2p9XXJgQaErLlt5iBVfls8nfsMLdw0n6i\n+7/Qwgx1AnSy/DvPKUuFE1l1flmop/jYxO5QpzLJmF5e9IiENUMTP8tEjB3Eq7ij\nz5Kgp6aIxd9IvxrjoHwqR3gU5qdbHMHv42WOtXe4LVLJBPfyCaxGS87v0cHMMNh8\naWE0MGN1xF0NmcVDsXPrlf3hqq2cSuuOoWtM2RX9WawZUuuMzwk=\n=J4Nf\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aff7d92b1500e2478ce36a7e86ae47df47dda178",
          "sha": "aff7d92b1500e2478ce36a7e86ae47df47dda178",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/aff7d92b1500e2478ce36a7e86ae47df47dda178"
        }
      ],
      "message": "net: remove now unused global 'g_initial_block_download_completed'",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2024-01-23T13:25:16Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-12-22T13:32:37Z"
      },
      "sha": "27f260aa6e04f82dad78e9a06d58927546143a27"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11570317035,
      "node_id": "HRFPE_lADOABII585swZjNzwAAAAKxpQbr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11570317035",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "commit_url": "https://api.github.com/repos/furszy/bitcoin-core/commits/27f260aa6e04f82dad78e9a06d58927546143a27",
      "created_at": "2024-01-23T13:25:43Z"
    },
    {
      "event": "reviewed",
      "id": 1838790146,
      "node_id": "PRR_kwDOABII585tmbYC",
      "url": null,
      "actor": null,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "> Ok, fine. Then, just a comments nit, the recently added comments \"Per BIP159, safety buffer\" and \"BIP159 connections safety window\" better be removed? Because that is not \"A safety buffer of 144 blocks to handle chain reorganizations\"?\r\n\r\nSure @vasild. Updated. Thanks! [Small diff](https://github.com/bitcoin/bitcoin/compare/6c6348b936d303a3aaadc1bcede183e451f025d8..27f260aa6e04f82dad78e9a06d58927546143a27).",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1838790146",
      "submitted_at": "2024-01-23T13:26:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "reviewed",
      "id": 1840919344,
      "node_id": "PRR_kwDOABII585tujMw",
      "url": null,
      "actor": null,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 27f260aa6e04f82dad78e9a06d58927546143a27\r\n\r\nWrt the interface addition discussed in https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1285990092, I think it is not perfect but I do not see it as a blocker for this PR. Would be nice to see the discussion resolved in one way or another.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1840919344",
      "submitted_at": "2024-01-24T09:41:06Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "review_requested",
      "id": 11581804678,
      "node_id": "RRE_lADOABII585swZjNzwAAAAKyVFCG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11581804678",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T09:41:14Z",
      "requested_reviewer": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11581804771,
      "node_id": "RRE_lADOABII585swZjNzwAAAAKyVFDj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11581804771",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T09:41:14Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1848123617,
      "node_id": "PRR_kwDOABII585uKCDh",
      "url": null,
      "actor": null,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 27f260aa6e04f82dad78e9a06d58927546143a27",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1848123617",
      "submitted_at": "2024-01-29T09:08:12Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "review_request_removed",
      "id": 11624658063,
      "node_id": "RRRE_lADOABII585swZjNzwAAAAK04jSP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11624658063",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-29T09:08:17Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11624658182,
      "node_id": "RRE_lADOABII585swZjNzwAAAAK04jUG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11624658182",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-29T09:08:18Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11624659005,
      "node_id": "RRRE_lADOABII585swZjNzwAAAAK04jg9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11624659005",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-29T09:08:22Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11624659223,
      "node_id": "RRE_lADOABII585swZjNzwAAAAK04jkX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11624659223",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-29T09:08:23Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11628139978,
      "node_id": "RRRE_lADOABII585swZjNzwAAAAK1F1XK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11628139978",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-29T13:56:04Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11628140077,
      "node_id": "RRE_lADOABII585swZjNzwAAAAK1F1Yt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11628140077",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-29T13:56:05Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11628140935,
      "node_id": "RRRE_lADOABII585swZjNzwAAAAK1F1mH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11628140935",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-29T13:56:09Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11628141110,
      "node_id": "RRE_lADOABII585swZjNzwAAAAK1F1o2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11628141110",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-29T13:56:10Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1852266688,
      "node_id": "PRR_kwDOABII585uZ1jA",
      "url": null,
      "actor": null,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Light Code Review ACK 27f260aa6e04f82dad78e9a06d58927546143a27\r\n\r\nI don't have a strong opinion on the interface issue (I read the discussion and can see both points of view), but I do think that having a global variable `g_initial_block_download_completed` that lives in `protocol.h` and is updated dynamically from `net_processing` is an ugly layer violation too, so removing that is an important improvement from the architectural point of view.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1852266688",
      "submitted_at": "2024-01-30T21:58:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "review_request_removed",
      "id": 11648028547,
      "node_id": "RRRE_lADOABII585swZjNzwAAAAK2Rs-D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11648028547",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-30T21:58:44Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11648028622,
      "node_id": "RRE_lADOABII585swZjNzwAAAAK2Rs_O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11648028622",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-30T21:58:44Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11648029059,
      "node_id": "RRRE_lADOABII585swZjNzwAAAAK2RtGD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11648029059",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-30T21:58:48Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11648029149,
      "node_id": "RRE_lADOABII585swZjNzwAAAAK2RtHd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11648029149",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-30T21:58:49Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11648365024,
      "node_id": "RRRE_lADOABII585swZjNzwAAAAK2S_Hg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11648365024",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-30T22:34:54Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11648365115,
      "node_id": "RRE_lADOABII585swZjNzwAAAAK2S_I7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11648365115",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-30T22:34:54Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1852723966,
      "node_id": "PRR_kwDOABII585ublL-",
      "url": null,
      "actor": null,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 27f260aa6e04f82dad78e9a06d58927546143a27",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1852723966",
      "submitted_at": "2024-01-31T01:14:42Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "commented",
      "id": 1919425343,
      "node_id": "IC_kwDOABII585yaBs_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1919425343",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-31T16:10:02Z",
      "updated_at": "2024-01-31T16:10:02Z",
      "author_association": "MEMBER",
      "body": "ACK 27f260aa6e04f82dad78e9a06d58927546143a27",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1919425343",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "merged",
      "id": 11658598744,
      "node_id": "ME_lADOABII585swZjNzwAAAAK26BlY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11658598744",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0b768746ef2c089676e3be30eb84e722a91453f6",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b768746ef2c089676e3be30eb84e722a91453f6",
      "created_at": "2024-01-31T16:44:58Z"
    },
    {
      "event": "closed",
      "id": 11658598777,
      "node_id": "CE_lADOABII585swZjNzwAAAAK26Bl5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11658598777",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-31T16:44:59Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 11660723615,
      "node_id": "HRDE_lADOABII585swZjNzwAAAAK3CIWf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11660723615",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-31T20:02:31Z"
    },
    {
      "event": "referenced",
      "id": 11955503517,
      "node_id": "REFE_lADOABII585swZjNzwAAAALImoGd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11955503517",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2f5b69eaeb623a7b0306e7f41fd2d28741f131c0",
      "commit_url": "https://api.github.com/repos/theStack/bitcoin/commits/2f5b69eaeb623a7b0306e7f41fd2d28741f131c0",
      "created_at": "2024-02-28T18:12:15Z"
    },
    {
      "event": "referenced",
      "id": 12016798851,
      "node_id": "REFE_lADOABII585swZjNzwAAAALMQcyD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12016798851",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "49fbd57eebe60c3a36459df7b1545c2c477b2e68",
      "commit_url": "https://api.github.com/repos/theStack/bitcoin/commits/49fbd57eebe60c3a36459df7b1545c2c477b2e68",
      "created_at": "2024-03-05T16:43:38Z"
    },
    {
      "event": "referenced",
      "id": 12074624072,
      "node_id": "REFE_lADOABII585swZjNzwAAAALPtCRI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12074624072",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2f23987849758537f76df7374d85a7e87b578b61",
      "commit_url": "https://api.github.com/repos/theStack/bitcoin/commits/2f23987849758537f76df7374d85a7e87b578b61",
      "created_at": "2024-03-11T14:31:43Z"
    },
    {
      "event": "locked",
      "id": 16120161741,
      "node_id": "LOE_lADOABII585swZjNzwAAAAPA1iXN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16120161741",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-30T07:28:19Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285990092",
      "pull_request_review_id": 1565523628,
      "id": 1285990092,
      "node_id": "PRRC_kwDOABII585MpqbM",
      "diff_hunk": "@@ -666,6 +666,12 @@ class NetEventsInterface\n     /** Handle removal of a peer (clear state) */\n     virtual void FinalizeNode(const CNode& node) = 0;\n \n+    /**\n+     * Callback to determine whether the given set of service flags are sufficient\n+     * for a peer to be \"relevant\".\n+     */\n+    virtual bool HasDesirableServiceFlags(ServiceFlags services) = 0;",
      "path": "src/net.h",
      "position": null,
      "original_position": 8,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This interface is not the right place for a callback like this because it is not a \"net event\".\r\n\r\nWould be better to have a method on connman, e.g. `CConnman::SetDesirableServiceFlags` that is then called by peerman.",
      "created_at": "2023-08-07T14:50:21Z",
      "updated_at": "2023-08-07T14:54:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1285990092",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285990092"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 669,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1019,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286427458",
      "pull_request_review_id": 1566217778,
      "id": 1286427458,
      "node_id": "PRRC_kwDOABII585MrVNC",
      "diff_hunk": "@@ -666,6 +666,12 @@ class NetEventsInterface\n     /** Handle removal of a peer (clear state) */\n     virtual void FinalizeNode(const CNode& node) = 0;\n \n+    /**\n+     * Callback to determine whether the given set of service flags are sufficient\n+     * for a peer to be \"relevant\".\n+     */\n+    virtual bool HasDesirableServiceFlags(ServiceFlags services) = 0;",
      "path": "src/net.h",
      "position": null,
      "original_position": 8,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1285990092,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> This interface is not the right place for a callback like this because it is not a \"net event\".\r\n\r\nHmm ok, that would avoid locking `cs_main` in the open connections thread. Which is nice.",
      "created_at": "2023-08-07T22:20:19Z",
      "updated_at": "2023-08-07T22:20:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1286427458",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286427458"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 669,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1019,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287286613",
      "pull_request_review_id": 1567568353,
      "id": 1287286613,
      "node_id": "PRRC_kwDOABII585Mum9V",
      "diff_hunk": "@@ -666,6 +666,12 @@ class NetEventsInterface\n     /** Handle removal of a peer (clear state) */\n     virtual void FinalizeNode(const CNode& node) = 0;\n \n+    /**\n+     * Callback to determine whether the given set of service flags are sufficient\n+     * for a peer to be \"relevant\".\n+     */\n+    virtual bool HasDesirableServiceFlags(ServiceFlags services) = 0;",
      "path": "src/net.h",
      "position": null,
      "original_position": 8,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1285990092,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Have thought more about this and I'm not so convinced about it anymore.\r\n\r\nThe connection manager class lives on a lower level, and manages only a fraction of the node's information. And this field is strictly linked to the node's overall status. Right now, `HasDesirableServiceFlags()` requires to know the chain sync status.\r\nSo, by placing it inside `CConMan`, we add another level of indirection. Because, most of the time, the peer manager class will call to the `CConMan` setter and subsequently call the getter to utilize it. Using the `CConMan` class mostly as a field container.\r\n\r\nAlso, it would complicate any expansion of the peer services selectivity logic because different processes would require to update the flag stored in `CConMan`. For instance, the node could be seeking to exclusively connect to peers that provide block filters (up to a certain point, then pick other preferences on a case basis), or could want to minimize the number of limited connections based on the chain download state, or if a chain stale state was detected, or could be needing to disallow certain peer types for a certain time etc.\r\n\r\nConsidering this, the responsibility for managing this field seems to fit better inside the peer manager class.\r\n\r\nHappy to hear your thoughts about this. Will keep thinking about it, we can still improve this to not require `cs_main` lock even when it's placed inside the peers manager class.",
      "created_at": "2023-08-08T15:23:38Z",
      "updated_at": "2023-08-14T15:09:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1287286613",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287286613"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 669,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1019,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293556312",
      "pull_request_review_id": 1576991490,
      "id": 1293556312,
      "node_id": "PRRC_kwDOABII585NGhpY",
      "diff_hunk": "@@ -666,6 +666,12 @@ class NetEventsInterface\n     /** Handle removal of a peer (clear state) */\n     virtual void FinalizeNode(const CNode& node) = 0;\n \n+    /**\n+     * Callback to determine whether the given set of service flags are sufficient\n+     * for a peer to be \"relevant\".\n+     */\n+    virtual bool HasDesirableServiceFlags(ServiceFlags services) = 0;",
      "path": "src/net.h",
      "position": null,
      "original_position": 8,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1285990092,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Because, most of the time, the peer manager class will call to the CConMan setter and subsequently call the getter to utilize it. \r\n\r\nI wasn't saying to make connman the container for this data, I only meant to add a setter to inform connman of the things it needs to perform its job (making connections to desirable nodes). The main container for the flags would still be peerman.",
      "created_at": "2023-08-14T14:37:45Z",
      "updated_at": "2023-08-14T14:37:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1293556312",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293556312"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 669,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1019,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296335745",
      "pull_request_review_id": 1581277414,
      "id": 1296335745,
      "node_id": "PRRC_kwDOABII585NRIOB",
      "diff_hunk": "@@ -1577,6 +1579,20 @@ void PeerManagerImpl::FinalizeNode(const CNode& node)\n     LogPrint(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", nodeid);\n }\n \n+bool PeerManagerImpl::HasDesirableServiceFlags(ServiceFlags services)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "1428b7f4e8c648fdc68ba5744d640d120d5d78eb",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The comment (\"shortcut for...\") was helpful for me, any reason to drop it?",
      "created_at": "2023-08-16T19:23:07Z",
      "updated_at": "2023-08-16T20:28:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1296335745",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296335745"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1655,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296355296",
      "pull_request_review_id": 1581277414,
      "id": 1296355296,
      "node_id": "PRRC_kwDOABII585NRM_g",
      "diff_hunk": "@@ -5235,6 +5244,11 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (super_stale) {\n+        // Disable extra block relay peers and disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_connman.StopExtraBlockRelayPeers();",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 63,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Why stop doing extra block-relay peers in this situation? These aren't attempted during original IBD because we are  expected to be behind the tip. However, in this super-stale situation which should really not happen normally, it seems that they could only help?",
      "created_at": "2023-08-16T19:44:37Z",
      "updated_at": "2023-08-16T20:28:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1296355296",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296355296"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296375222",
      "pull_request_review_id": 1581277414,
      "id": 1296375222,
      "node_id": "PRRC_kwDOABII585NRR22",
      "diff_hunk": "@@ -1265,14 +1266,21 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n     });\n }\n \n-bool PeerManagerImpl::TipMayBeStale()\n+bool PeerManagerImpl::TipMayBeStale(bool& super_stale)\n {\n     AssertLockHeld(cs_main);\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n     if (m_last_tip_update.load() == 0s) {\n         m_last_tip_update = GetTime<std::chrono::seconds>();\n     }\n-    return m_last_tip_update.load() < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty();\n+\n+    auto last_update_time = m_last_tip_update.load();\n+    if (last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty()) {\n+        // If tip is further than NODE_NETWORK_LIMITED_MIN_BLOCKS, we are really behind and shouldn't connect to limited peers anymore.\n+        super_stale = last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 290};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`m_initial_sync_finished` is set using AdjustedTime (see `CanDirectFetch()`) while it's unset using local time. In spite of plans to get rid of AdjustedTime, I  think it would be better to use it here as well, otherwise there could be constant switching back and forth in some situations where the two times differ.\r\n\r\nAlso, why introduce a new magic number of 290, can't we just use `NODE_NETWORK_LIMITED_MIN_BLOCKS` (maybe + 2, if there is a reason for it)?",
      "created_at": "2023-08-16T20:07:35Z",
      "updated_at": "2023-08-16T20:28:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1296375222",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296375222"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1280,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297115636",
      "pull_request_review_id": 1582453390,
      "id": 1297115636,
      "node_id": "PRRC_kwDOABII585NUGn0",
      "diff_hunk": "@@ -327,12 +327,16 @@ std::vector<std::string> serviceFlagsToStr(uint64_t flags);\n  * guaranteed to not change dependent on state - ie they are suitable for\n  * use when describing peers which we know to be desirable, but for which\n  * we do not have a confirmed set of service flags.\n- *\n- * If the NODE_NONE return value is changed, contrib/seeds/makeseeds.py",
      "path": "src/protocol.h",
      "position": 24,
      "original_position": 5,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "1dbc6cc6b177497c18664bcc08f4d55da21941a6",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Was it just outdated already? I'm confused by what NODE_NONE meant here before this change.",
      "created_at": "2023-08-17T11:57:16Z",
      "updated_at": "2023-08-17T11:57:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1297115636",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297115636"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 334,
      "original_line": 334,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297117898",
      "pull_request_review_id": 1582457092,
      "id": 1297117898,
      "node_id": "PRRC_kwDOABII585NUHLK",
      "diff_hunk": "@@ -90,6 +90,29 @@ class PeerManager : public CValidationInterface, public NetEventsInterface\n \n     /** This function is used for testing the stale tip eviction logic, see denialofservice_tests.cpp */\n     virtual void UpdateLastBlockAnnounceTime(NodeId node, int64_t time_in_seconds) = 0;\n+\n+    /**\n+     * Gets the set of service flags which are \"desirable\" for a given peer.\n+     *\n+     * These are the flags which are required for a peer to support for them\n+     * to be \"interesting\" to us, ie for us to wish to use one of our few\n+     * outbound connection slots for or for us to wish to prioritize keeping\n+     * their connection around.\n+     *\n+     * Relevant service flags may be peer- and state-specific in that the\n+     * version of the peer may determine which flags are required (eg in the\n+     * case of NODE_NETWORK_LIMITED where we seek out NODE_NETWORK peers\n+     * unless they set NODE_NETWORK_LIMITED and we are out of IBD, in which\n+     * case NODE_NETWORK_LIMITED suffices).\n+     *\n+     * Thus, generally, avoid calling with peerServices == NODE_NONE, unless",
      "path": "src/net_processing.h",
      "position": null,
      "original_position": 19,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "1428b7f4e8c648fdc68ba5744d640d120d5d78eb",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "does `peerServices` refer to the outdated code? Pehraps we should change it here?",
      "created_at": "2023-08-17T11:59:36Z",
      "updated_at": "2023-08-17T11:59:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1297117898",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297117898"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297132683",
      "pull_request_review_id": 1582480170,
      "id": 1297132683,
      "node_id": "PRRC_kwDOABII585NUKyL",
      "diff_hunk": "@@ -5235,6 +5244,11 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (super_stale) {\n+        // Disable extra block relay peers and disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_connman.StopExtraBlockRelayPeers();",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 63,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1296355296,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "What do you think they would help with?",
      "created_at": "2023-08-17T12:13:37Z",
      "updated_at": "2023-08-17T12:13:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1297132683",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297132683"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297205559",
      "pull_request_review_id": 1582597289,
      "id": 1297205559,
      "node_id": "PRRC_kwDOABII585NUck3",
      "diff_hunk": "@@ -5235,6 +5244,11 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (super_stale) {\n+        // Disable extra block relay peers and disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_connman.StopExtraBlockRelayPeers();",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 63,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1296355296,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If for whatever reason our current peers aren't able to send us the blocks to get us out of this situation, maybe trying an additional one will.",
      "created_at": "2023-08-17T13:14:41Z",
      "updated_at": "2023-08-17T13:14:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1297205559",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297205559"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297413491",
      "pull_request_review_id": 1582929778,
      "id": 1297413491,
      "node_id": "PRRC_kwDOABII585NVPVz",
      "diff_hunk": "@@ -666,6 +666,12 @@ class NetEventsInterface\n     /** Handle removal of a peer (clear state) */\n     virtual void FinalizeNode(const CNode& node) = 0;\n \n+    /**\n+     * Callback to determine whether the given set of service flags are sufficient\n+     * for a peer to be \"relevant\".\n+     */\n+    virtual bool HasDesirableServiceFlags(ServiceFlags services) = 0;",
      "path": "src/net.h",
      "position": null,
      "original_position": 8,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1285990092,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> > Because, most of the time, the peer manager class will call to the CConMan setter and subsequently call the getter to utilize it.\r\n> \r\n> I wasn't saying to make connman the container for this data, I only meant to add a setter to inform connman of the things it needs to perform its job (making connections to desirable nodes). The main container for the flags would still be peerman.\r\n\r\nOk. What I dislike about that approach is that we lose a lot of flexibility.\r\n\r\nThe PeerManager should be able to decide granularly whether to connect to a specific address before ConnMann opens the connection and initiates handshaking etc.\r\nThe node's contextual information and logic required to take the decision of opening a socket to a particular address resides mostly in PeerManager (right now, we only have the stale chain condition, but there could be more). And, by adding another field inside ConnMan, we would be duplicating data (same `desirable_services` field inside PeerManager and ConnMan), which would need to be synchronized and could potentially lead to race conditions.\r\n\r\nI mean, this misalignment could result in ConnMan performing actions that are no longer in line with the latest PeerManager state. For instance, it might create connections to multiple peers with certain service flags, when PeerManager only intended to connect to one peer supporting such service flags. This situation would eventually lead to PeerManager closing the newly created connections when it sends the version message, as these connections are no longer desirable. Which is a waste of resources.\r\n\r\nThus why I think that the callback mechanism suits well here. So PeerManager is able to evaluate each connection request, and avoid executing the connection + handshake when we are going to disconnect the peer anyway.",
      "created_at": "2023-08-17T15:47:16Z",
      "updated_at": "2023-08-17T20:15:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1297413491",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297413491"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 669,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1019,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297744944",
      "pull_request_review_id": 1583483576,
      "id": 1297744944,
      "node_id": "PRRC_kwDOABII585NWgQw",
      "diff_hunk": "@@ -5235,6 +5244,11 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (super_stale) {\n+        // Disable extra block relay peers and disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_connman.StopExtraBlockRelayPeers();",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 63,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1296355296,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Why stop doing extra block-relay peers in this situation?\r\n\r\nBecause, in the stalling scenario, we not only need to progress at the chain level, we might also need to receive new addresses from the network. And block-relay-only connections are limited in that sense. The node rejects addresses coming from them.\r\n\r\n> If for whatever reason our current peers aren't able to send us the blocks to get us out of this situation, maybe trying an additional one will.\r\n\r\nThats basically what we currently do. The stalling behavior triggers the \"try new outbound connection\" functionality. Which instructs ConnMan to create a new full relay connection even when the outbound slots are full.\r\n\r\n....\r\n\r\nWith this, I'm not disagreeing about keeping the extra-block-relay connections enabled. Just thought that they might not be as useful, given that we're already performing the same actions with the \"try new outbound connection\" functionality.",
      "created_at": "2023-08-17T20:57:31Z",
      "updated_at": "2023-08-17T21:03:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1297744944",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297744944"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297791137",
      "pull_request_review_id": 1583552709,
      "id": 1297791137,
      "node_id": "PRRC_kwDOABII585NWrih",
      "diff_hunk": "@@ -1265,14 +1266,21 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n     });\n }\n \n-bool PeerManagerImpl::TipMayBeStale()\n+bool PeerManagerImpl::TipMayBeStale(bool& super_stale)\n {\n     AssertLockHeld(cs_main);\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n     if (m_last_tip_update.load() == 0s) {\n         m_last_tip_update = GetTime<std::chrono::seconds>();\n     }\n-    return m_last_tip_update.load() < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty();\n+\n+    auto last_update_time = m_last_tip_update.load();\n+    if (last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty()) {\n+        // If tip is further than NODE_NETWORK_LIMITED_MIN_BLOCKS, we are really behind and shouldn't connect to limited peers anymore.\n+        super_stale = last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 290};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1296375222,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah. Sure for both.\r\nNot sure why I hardcoded the number..",
      "created_at": "2023-08-17T21:59:04Z",
      "updated_at": "2023-08-17T21:59:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1297791137",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297791137"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1280,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297796093",
      "pull_request_review_id": 1583559886,
      "id": 1297796093,
      "node_id": "PRRC_kwDOABII585NWsv9",
      "diff_hunk": "@@ -327,12 +327,16 @@ std::vector<std::string> serviceFlagsToStr(uint64_t flags);\n  * guaranteed to not change dependent on state - ie they are suitable for\n  * use when describing peers which we know to be desirable, but for which\n  * we do not have a confirmed set of service flags.\n- *\n- * If the NODE_NONE return value is changed, contrib/seeds/makeseeds.py",
      "path": "src/protocol.h",
      "position": 24,
      "original_position": 5,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "1dbc6cc6b177497c18664bcc08f4d55da21941a6",
      "in_reply_to_id": 1297115636,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Was it just outdated already? I'm confused by what NODE_NONE meant here before this change.\r\n\r\nIt was talking about the input `ServiceFlags`. Not the `GetDesirableServiceFlags()` output.\r\n\r\nBasically, we expect to have all the hardcoded seeds supporting `NODE_NETWORK` and `NODE_WITNESS`.\r\n",
      "created_at": "2023-08-17T22:07:25Z",
      "updated_at": "2023-08-17T22:07:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1297796093",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297796093"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 334,
      "original_line": 334,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297797152",
      "pull_request_review_id": 1583561365,
      "id": 1297797152,
      "node_id": "PRRC_kwDOABII585NWtAg",
      "diff_hunk": "@@ -90,6 +90,29 @@ class PeerManager : public CValidationInterface, public NetEventsInterface\n \n     /** This function is used for testing the stale tip eviction logic, see denialofservice_tests.cpp */\n     virtual void UpdateLastBlockAnnounceTime(NodeId node, int64_t time_in_seconds) = 0;\n+\n+    /**\n+     * Gets the set of service flags which are \"desirable\" for a given peer.\n+     *\n+     * These are the flags which are required for a peer to support for them\n+     * to be \"interesting\" to us, ie for us to wish to use one of our few\n+     * outbound connection slots for or for us to wish to prioritize keeping\n+     * their connection around.\n+     *\n+     * Relevant service flags may be peer- and state-specific in that the\n+     * version of the peer may determine which flags are required (eg in the\n+     * case of NODE_NETWORK_LIMITED where we seek out NODE_NETWORK peers\n+     * unless they set NODE_NETWORK_LIMITED and we are out of IBD, in which\n+     * case NODE_NETWORK_LIMITED suffices).\n+     *\n+     * Thus, generally, avoid calling with peerServices == NODE_NONE, unless",
      "path": "src/net_processing.h",
      "position": null,
      "original_position": 19,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "1428b7f4e8c648fdc68ba5744d640d120d5d78eb",
      "in_reply_to_id": 1297117898,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "yeah sure.",
      "created_at": "2023-08-17T22:09:08Z",
      "updated_at": "2023-08-17T22:09:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1297797152",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297797152"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297802187",
      "pull_request_review_id": 1583568676,
      "id": 1297802187,
      "node_id": "PRRC_kwDOABII585NWuPL",
      "diff_hunk": "@@ -1577,6 +1579,20 @@ void PeerManagerImpl::FinalizeNode(const CNode& node)\n     LogPrint(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", nodeid);\n }\n \n+bool PeerManagerImpl::HasDesirableServiceFlags(ServiceFlags services)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "1428b7f4e8c648fdc68ba5744d640d120d5d78eb",
      "in_reply_to_id": 1296335745,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> The comment (\"shortcut for...\") was helpful for me, any reason to drop it?\r\n\r\nThat was because the method was moved to the net interface ([see](https://github.com/bitcoin/bitcoin/blob/1428b7f4e8c648fdc68ba5744d640d120d5d78eb/src/net.h#L673)). And there, this is no longer a shortcut. It is the only available method. ",
      "created_at": "2023-08-17T22:17:19Z",
      "updated_at": "2023-08-17T22:17:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1297802187",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297802187"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1655,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298341327",
      "pull_request_review_id": 1584395102,
      "id": 1298341327,
      "node_id": "PRRC_kwDOABII585NYx3P",
      "diff_hunk": "@@ -5235,6 +5244,11 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (super_stale) {\n+        // Disable extra block relay peers and disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_connman.StopExtraBlockRelayPeers();",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 63,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1296355296,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In that case i'd rather not `StopExtraBlockRelayPeers`. Instead we can leave a comment regarding the \"same actions\", although I'm not sure what's the appropriate place for it.",
      "created_at": "2023-08-18T11:25:31Z",
      "updated_at": "2023-08-18T11:25:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1298341327",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298341327"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298677448",
      "pull_request_review_id": 1584926434,
      "id": 1298677448,
      "node_id": "PRRC_kwDOABII585NaD7I",
      "diff_hunk": "@@ -1577,6 +1579,20 @@ void PeerManagerImpl::FinalizeNode(const CNode& node)\n     LogPrint(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", nodeid);\n }\n \n+bool PeerManagerImpl::HasDesirableServiceFlags(ServiceFlags services)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "1428b7f4e8c648fdc68ba5744d640d120d5d78eb",
      "in_reply_to_id": 1296335745,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I interpreted the comment as explaining the not-so-trivial bit-operator logic:\r\n`!(GetDesirableServiceFlags(services) & (~services));` \r\nis still a shortcut for the longer, but more understandable alternative\r\n`services & GetDesirableServiceFlags(services)) == GetDesirableServiceFlags(services)`\r\nno matter where the function is situated.",
      "created_at": "2023-08-18T17:09:23Z",
      "updated_at": "2023-08-18T17:09:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1298677448",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298677448"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1655,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298685145",
      "pull_request_review_id": 1584938489,
      "id": 1298685145,
      "node_id": "PRRC_kwDOABII585NaFzZ",
      "diff_hunk": "@@ -1577,6 +1579,20 @@ void PeerManagerImpl::FinalizeNode(const CNode& node)\n     LogPrint(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", nodeid);\n }\n \n+bool PeerManagerImpl::HasDesirableServiceFlags(ServiceFlags services)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "1428b7f4e8c648fdc68ba5744d640d120d5d78eb",
      "in_reply_to_id": 1296335745,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ok. For that, we can locate the comment in the implementation (above the no-so-trivial logic). So it's clear what that single line does. I just don't think that is good to place it at the API level. Where `GetDesirableServiceFlags` doesn't exist and `HasDesirableServiceFlags()` could be implemented in different manners.\r\n\r\nSide note:\r\nIf the line is confusing, instead of adding the comment, we could just replace it by the more understandable one. Isn't something that will really affect anything.",
      "created_at": "2023-08-18T17:19:07Z",
      "updated_at": "2023-08-18T17:27:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1298685145",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298685145"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1655,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298718974",
      "pull_request_review_id": 1584993083,
      "id": 1298718974,
      "node_id": "PRRC_kwDOABII585NaOD-",
      "diff_hunk": "@@ -1577,6 +1579,20 @@ void PeerManagerImpl::FinalizeNode(const CNode& node)\n     LogPrint(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", nodeid);\n }\n \n+bool PeerManagerImpl::HasDesirableServiceFlags(ServiceFlags services)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "1428b7f4e8c648fdc68ba5744d640d120d5d78eb",
      "in_reply_to_id": 1296335745,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Both options are fine with me. I will admit that I'm not as fluent/quick reading code with bitwise operators as I should be, but then again if even the original author of this code got it wrong at first (https://github.com/bitcoin/bitcoin/pull/11456#discussion_r144391264) it's probably not just me.",
      "created_at": "2023-08-18T18:01:24Z",
      "updated_at": "2023-08-18T18:01:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1298718974",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298718974"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1655,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298723753",
      "pull_request_review_id": 1585002068,
      "id": 1298723753,
      "node_id": "PRRC_kwDOABII585NaPOp",
      "diff_hunk": "@@ -5235,6 +5244,11 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (super_stale) {\n+        // Disable extra block relay peers and disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_connman.StopExtraBlockRelayPeers();",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 63,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1296355296,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think there's no harm in keeping the `ExtraBlockRelayPeers` logic:\r\nWhile it's true that we would also do extra full outbound connections in this case, those have priority in `ThreadOpenConnections` over the block-relay-only ones, so trying another block-relay only might not have a super high chance of helping, but it still is another try and if there is no downside to it (I can't see any), I don't see why we should actively add logic to stop these.",
      "created_at": "2023-08-18T18:07:28Z",
      "updated_at": "2023-08-18T18:07:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1298723753",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298723753"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298732036",
      "pull_request_review_id": 1585012519,
      "id": 1298732036,
      "node_id": "PRRC_kwDOABII585NaRQE",
      "diff_hunk": "@@ -5235,6 +5244,11 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (super_stale) {\n+        // Disable extra block relay peers and disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_connman.StopExtraBlockRelayPeers();",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 63,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1296355296,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "yeah, agree",
      "created_at": "2023-08-18T18:17:29Z",
      "updated_at": "2023-08-18T18:17:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1298732036",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298732036"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374426573",
      "pull_request_review_id": 1701549241,
      "id": 1374426573,
      "node_id": "PRRC_kwDOABII585R7BXN",
      "diff_hunk": "@@ -330,12 +330,16 @@ std::vector<std::string> serviceFlagsToStr(uint64_t flags);\n  * guaranteed to not change dependent on state - ie they are suitable for\n  * use when describing peers which we know to be desirable, but for which\n  * we do not have a confirmed set of service flags.\n- *\n- * If the NODE_NONE return value is changed, contrib/seeds/makeseeds.py\n- * should be updated appropriately to filter for the same nodes.\n  */\n ServiceFlags GetDesirableServiceFlags(ServiceFlags services);\n \n+/**\n+ * State independent service flags.\n+ * If the return value is changed, contrib/seeds/makeseeds.py\n+ * should be updated appropriately to filter for the same nodes.",
      "path": "src/protocol.h",
      "position": null,
      "original_position": 13,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "7c20e65b2880a23d753b3f05fd28994353b3049d",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "7c20e65b2880a23d753b3f05fd28994353b3049d\r\n\r\n`the same nodes` always takes non-negligible time for me to understand... I would suggest making it less ambiguous, e.g. \"nodes with desired service flags (compatible with our new flags)\"",
      "created_at": "2023-10-27T11:18:46Z",
      "updated_at": "2023-10-30T12:53:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1374426573",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374426573"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 339,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375473315",
      "pull_request_review_id": 1702994944,
      "id": 1375473315,
      "node_id": "PRRC_kwDOABII585R_A6j",
      "diff_hunk": "@@ -311,43 +311,11 @@ enum ServiceFlags : uint64_t {\n std::vector<std::string> serviceFlagsToStr(uint64_t flags);\n \n /**\n- * Gets the set of service flags which are \"desirable\" for a given peer.\n- *\n- * These are the flags which are required for a peer to support for them\n- * to be \"interesting\" to us, ie for us to wish to use one of our few\n- * outbound connection slots for or for us to wish to prioritize keeping\n- * their connection around.\n- *\n- * Relevant service flags may be peer- and state-specific in that the\n- * version of the peer may determine which flags are required (eg in the\n- * case of NODE_NETWORK_LIMITED where we seek out NODE_NETWORK peers\n- * unless they set NODE_NETWORK_LIMITED and we are out of IBD, in which\n- * case NODE_NETWORK_LIMITED suffices).\n- *\n- * Thus, generally, avoid calling with peerServices == NODE_NONE, unless\n- * state-specific flags must absolutely be avoided. When called with\n- * peerServices == NODE_NONE, the returned desirable service flags are\n- * guaranteed to not change dependent on state - ie they are suitable for\n- * use when describing peers which we know to be desirable, but for which\n- * we do not have a confirmed set of service flags.\n- *\n- * If the NODE_NONE return value is changed, contrib/seeds/makeseeds.py\n+ * State independent service flags.\n+ * If the return value is changed, contrib/seeds/makeseeds.py\n  * should be updated appropriately to filter for the same nodes.\n  */\n-ServiceFlags GetDesirableServiceFlags(ServiceFlags services);\n-\n-/** Set the current IBD status in order to figure out the desirable service flags */\n-void SetServiceFlagsIBDCache(bool status);\n-\n-/**\n- * A shortcut for (services & GetDesirableServiceFlags(services))\n- * == GetDesirableServiceFlags(services), ie determines whether the given\n- * set of service flags are sufficient for a peer to be \"relevant\".\n- */\n-static inline bool HasAllDesirableServiceFlags(ServiceFlags services)\n-{\n-    return !(GetDesirableServiceFlags(services) & (~services));\n-}\n+ServiceFlags StatelessServicesFlags();",
      "path": "src/protocol.h",
      "position": null,
      "original_position": 43,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "893c541dce938aaa210785df53a5841c5e90d924",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The implementation could be moved here and this made `constexpr`?\r\n```suggestion\r\nServiceFlags StatelessServiceFlags();\r\n```",
      "created_at": "2023-10-29T16:57:22Z",
      "updated_at": "2023-10-29T17:54:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1375473315",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375473315"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 318,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375475833",
      "pull_request_review_id": 1702994944,
      "id": 1375475833,
      "node_id": "PRRC_kwDOABII585R_Bh5",
      "diff_hunk": "@@ -1642,6 +1644,21 @@ void PeerManagerImpl::FinalizeNode(const CNode& node)\n     LogPrint(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", nodeid);\n }\n \n+bool PeerManagerImpl::HasDesirableServiceFlags(ServiceFlags services)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "3c895206cbff7a45d467878caa19aef8bd3aef4e",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Why rename from `HasAllDesirableServiceFlags`? The `HasAll` is more descriptive. It is now ambiguous whether this returns `true` if the `ServiceFlags` has some number of desirable service flags or strictly all of them.",
      "created_at": "2023-10-29T17:12:38Z",
      "updated_at": "2023-10-29T17:54:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1375475833",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375475833"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1647,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375477984",
      "pull_request_review_id": 1702994944,
      "id": 1375477984,
      "node_id": "PRRC_kwDOABII585R_CDg",
      "diff_hunk": "@@ -110,6 +110,29 @@ class PeerManager : public CValidationInterface, public NetEventsInterface\n \n     /** This function is used for testing the stale tip eviction logic, see denialofservice_tests.cpp */\n     virtual void UpdateLastBlockAnnounceTime(NodeId node, int64_t time_in_seconds) = 0;\n+\n+    /**\n+     * Gets the set of service flags which are \"desirable\" for a given peer.\n+     *\n+     * These are the flags which are required for a peer to support for them\n+     * to be \"interesting\" to us, ie for us to wish to use one of our few\n+     * outbound connection slots for or for us to wish to prioritize keeping\n+     * their connection around.\n+     *\n+     * Relevant service flags may be peer- and state-specific in that the\n+     * version of the peer may determine which flags are required (eg in the\n+     * case of NODE_NETWORK_LIMITED where we seek out NODE_NETWORK peers\n+     * unless they set NODE_NETWORK_LIMITED and we are out of IBD, in which\n+     * case NODE_NETWORK_LIMITED suffices).\n+     *\n+     * Thus, generally, avoid calling with 'services' == NODE_NONE, unless\n+     * state-specific flags must absolutely be avoided. When called with\n+     * 'services' == NODE_NONE, the returned desirable service flags are\n+     * guaranteed to not change dependent on state - ie they are suitable for\n+     * use when describing peers which we know to be desirable, but for which\n+     * we do not have a confirmed set of service flags.\n+    */\n+    virtual ServiceFlags GetDesirableServiceFlags(ServiceFlags services) = 0;",
      "path": "src/net_processing.h",
      "position": null,
      "original_position": 26,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "3c895206cbff7a45d467878caa19aef8bd3aef4e",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Could be a `const` function?",
      "created_at": "2023-10-29T17:23:53Z",
      "updated_at": "2023-10-29T17:54:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1375477984",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375477984"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 135,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375478210",
      "pull_request_review_id": 1702994944,
      "id": 1375478210,
      "node_id": "PRRC_kwDOABII585R_CHC",
      "diff_hunk": "@@ -1012,6 +1012,12 @@ class NetEventsInterface\n     /** Handle removal of a peer (clear state) */\n     virtual void FinalizeNode(const CNode& node) = 0;\n \n+    /**\n+     * Callback to determine whether the given set of service flags are sufficient\n+     * for a peer to be \"relevant\".\n+     */\n+    virtual bool HasDesirableServiceFlags(ServiceFlags services) = 0;",
      "path": "src/net.h",
      "position": null,
      "original_position": 8,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "3c895206cbff7a45d467878caa19aef8bd3aef4e",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Could be a `const` function?",
      "created_at": "2023-10-29T17:25:15Z",
      "updated_at": "2023-10-29T17:54:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1375478210",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375478210"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1019,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375481949",
      "pull_request_review_id": 1702994944,
      "id": 1375481949,
      "node_id": "PRRC_kwDOABII585R_DBd",
      "diff_hunk": "@@ -892,7 +893,7 @@ class PeerManagerImpl final : public PeerManager\n      */\n     bool BlockRequested(NodeId nodeid, const CBlockIndex& block, std::list<QueuedBlock>::iterator** pit = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n-    bool TipMayBeStale() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    bool TipMayBeStale(bool& super_stale) EXCLUSIVE_LOCKS_REQUIRED(cs_main);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "cc5f276fa2acbd13d044fbf5e7dfff46d296b898",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think `super_stale` is not very descriptive. I also think this pattern of returning extra data from this function in this way is a little confusing. This could be made more descriptive by declaring a new enum and using it as the return value. eg\r\n```\r\nenum Staleness {\r\n    NotStale,\r\n    Stale,\r\n    StalePastNetworkLimited,\r\n};\r\n```",
      "created_at": "2023-10-29T17:51:19Z",
      "updated_at": "2023-10-29T17:54:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1375481949",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375481949"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 896,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375482009",
      "pull_request_review_id": 1702994944,
      "id": 1375482009,
      "node_id": "PRRC_kwDOABII585R_DCZ",
      "diff_hunk": "@@ -1661,7 +1661,6 @@ bool PeerManagerImpl::HasDesirableServiceFlags(ServiceFlags services)\n ServiceFlags PeerManagerImpl::GetDesirableServiceFlags(ServiceFlags services)\n {\n     if (services & NODE_NETWORK_LIMITED) {\n-        LOCK(::cs_main);\n         if (m_initial_sync_finished) return ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "893c541dce938aaa210785df53a5841c5e90d924",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is relaxed ordering ok for this? We don't need to call `m_initial_sync_finished.load()`?",
      "created_at": "2023-10-29T17:51:50Z",
      "updated_at": "2023-10-29T17:54:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1375482009",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375482009"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1677,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375843721",
      "pull_request_review_id": 1701549241,
      "id": 1375843721,
      "node_id": "PRRC_kwDOABII585SAbWJ",
      "diff_hunk": "@@ -1294,14 +1295,21 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n     });\n }\n \n-bool PeerManagerImpl::TipMayBeStale()\n+bool PeerManagerImpl::TipMayBeStale(bool& super_stale)\n {\n     AssertLockHeld(cs_main);\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n     if (m_last_tip_update.load() == 0s) {\n         m_last_tip_update = GetTime<std::chrono::seconds>();\n     }\n-    return m_last_tip_update.load() < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty();\n+\n+    auto last_update_time = m_last_tip_update.load();\n+    if (last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty()) {\n+        // If tip is further than NODE_NETWORK_LIMITED_MIN_BLOCKS, we are really behind and shouldn't connect to limited peers anymore.\n+        super_stale = NodeSeconds{last_update_time} < GetAdjustedTime() - std::chrono::seconds{consensusParams.nPowTargetSpacing * NODE_NETWORK_LIMITED_MIN_BLOCKS};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "cc5f276fa2acbd13d044fbf5e7dfff46d296b898",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: add `Assume(NODE_NETWORK_LIMITED_MIN_BLOCKS > 3)` so that stale/super-stale makes sense here.",
      "created_at": "2023-10-30T08:31:39Z",
      "updated_at": "2023-10-30T12:53:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1375843721",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375843721"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1309,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376165998",
      "pull_request_review_id": 1701549241,
      "id": 1376165998,
      "node_id": "PRRC_kwDOABII585SBqBu",
      "diff_hunk": "@@ -134,6 +134,11 @@ ServiceFlags GetDesirableServiceFlags(ServiceFlags services) {\n     return ServiceFlags(NODE_NETWORK | NODE_WITNESS);\n }\n \n+ServiceFlags StatelessServicesFlags()\n+{\n+    return ServiceFlags(NODE_NETWORK | NODE_WITNESS);",
      "path": "src/protocol.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "7c20e65b2880a23d753b3f05fd28994353b3049d",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "7c20e65b2880a23d753b3f05fd28994353b3049d\r\n\r\nWhile you decouple the two, do you mean to make them independent from each other? It seems to me they will always be roughly the same. I agree with the goal of the PR, just not sure about this approach.",
      "created_at": "2023-10-30T12:53:01Z",
      "updated_at": "2023-10-30T12:53:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1376165998",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376165998"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 139,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376733399",
      "pull_request_review_id": 1704958214,
      "id": 1376733399,
      "node_id": "PRRC_kwDOABII585SD0jX",
      "diff_hunk": "@@ -1642,6 +1644,21 @@ void PeerManagerImpl::FinalizeNode(const CNode& node)\n     LogPrint(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", nodeid);\n }\n \n+bool PeerManagerImpl::HasDesirableServiceFlags(ServiceFlags services)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "3c895206cbff7a45d467878caa19aef8bd3aef4e",
      "in_reply_to_id": 1375475833,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Why rename from `HasAllDesirableServiceFlags`? The `HasAll` is more descriptive. It is now ambiguous whether this returns `true` if the `ServiceFlags` has some number of desirable service flags or strictly all of them.\r\n\r\nI don't think the name is good for the PeerManager-Connman interface. What \"HasAll\" means for `NetEventsInterface`? There, it should be something like `bool CanConnectTo(services)` or something similar.\r\n\r\nStill, I'm not really happy with the interface at this point. No problem on renaming it back.",
      "created_at": "2023-10-30T19:52:26Z",
      "updated_at": "2023-10-30T19:52:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1376733399",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376733399"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1647,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376794129",
      "pull_request_review_id": 1705055908,
      "id": 1376794129,
      "node_id": "PRRC_kwDOABII585SEDYR",
      "diff_hunk": "@@ -1661,7 +1661,6 @@ bool PeerManagerImpl::HasDesirableServiceFlags(ServiceFlags services)\n ServiceFlags PeerManagerImpl::GetDesirableServiceFlags(ServiceFlags services)\n {\n     if (services & NODE_NETWORK_LIMITED) {\n-        LOCK(::cs_main);\n         if (m_initial_sync_finished) return ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "893c541dce938aaa210785df53a5841c5e90d924",
      "in_reply_to_id": 1375482009,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Why relaxed? look at the [operator](https://en.cppreference.com/w/cpp/atomic/atomic/operator_T). Is equivalent to `load`, which uses [std::memory_order_seq_cst](http://en.cppreference.com/w/cpp/atomic/memory_order).",
      "created_at": "2023-10-30T20:59:16Z",
      "updated_at": "2023-10-30T20:59:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1376794129",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376794129"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1677,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376837397",
      "pull_request_review_id": 1705128417,
      "id": 1376837397,
      "node_id": "PRRC_kwDOABII585SEN8V",
      "diff_hunk": "@@ -134,6 +134,11 @@ ServiceFlags GetDesirableServiceFlags(ServiceFlags services) {\n     return ServiceFlags(NODE_NETWORK | NODE_WITNESS);\n }\n \n+ServiceFlags StatelessServicesFlags()\n+{\n+    return ServiceFlags(NODE_NETWORK | NODE_WITNESS);",
      "path": "src/protocol.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "7c20e65b2880a23d753b3f05fd28994353b3049d",
      "in_reply_to_id": 1376165998,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> While you decouple the two, do you mean to make them independent from each other? It seems to me they will always be roughly the same. I agree with the goal of the PR, just not sure about this approach.\r\n\r\nYeah. The goal is to make them independent from each other so the peer manager runtime logic doesn't affect the hardcoded seeds. They are built from another source and depend on the way we externally collect them. These peers are stored in db with the stateless service flags, and would be an error to store them with a different one (they might not support the service).",
      "created_at": "2023-10-30T21:48:42Z",
      "updated_at": "2023-10-30T21:48:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1376837397",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376837397"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 139,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376845662",
      "pull_request_review_id": 1705142132,
      "id": 1376845662,
      "node_id": "PRRC_kwDOABII585SEP9e",
      "diff_hunk": "@@ -311,43 +311,11 @@ enum ServiceFlags : uint64_t {\n std::vector<std::string> serviceFlagsToStr(uint64_t flags);\n \n /**\n- * Gets the set of service flags which are \"desirable\" for a given peer.\n- *\n- * These are the flags which are required for a peer to support for them\n- * to be \"interesting\" to us, ie for us to wish to use one of our few\n- * outbound connection slots for or for us to wish to prioritize keeping\n- * their connection around.\n- *\n- * Relevant service flags may be peer- and state-specific in that the\n- * version of the peer may determine which flags are required (eg in the\n- * case of NODE_NETWORK_LIMITED where we seek out NODE_NETWORK peers\n- * unless they set NODE_NETWORK_LIMITED and we are out of IBD, in which\n- * case NODE_NETWORK_LIMITED suffices).\n- *\n- * Thus, generally, avoid calling with peerServices == NODE_NONE, unless\n- * state-specific flags must absolutely be avoided. When called with\n- * peerServices == NODE_NONE, the returned desirable service flags are\n- * guaranteed to not change dependent on state - ie they are suitable for\n- * use when describing peers which we know to be desirable, but for which\n- * we do not have a confirmed set of service flags.\n- *\n- * If the NODE_NONE return value is changed, contrib/seeds/makeseeds.py\n+ * State independent service flags.\n+ * If the return value is changed, contrib/seeds/makeseeds.py\n  * should be updated appropriately to filter for the same nodes.\n  */\n-ServiceFlags GetDesirableServiceFlags(ServiceFlags services);\n-\n-/** Set the current IBD status in order to figure out the desirable service flags */\n-void SetServiceFlagsIBDCache(bool status);\n-\n-/**\n- * A shortcut for (services & GetDesirableServiceFlags(services))\n- * == GetDesirableServiceFlags(services), ie determines whether the given\n- * set of service flags are sufficient for a peer to be \"relevant\".\n- */\n-static inline bool HasAllDesirableServiceFlags(ServiceFlags services)\n-{\n-    return !(GetDesirableServiceFlags(services) & (~services));\n-}\n+ServiceFlags StatelessServicesFlags();",
      "path": "src/protocol.h",
      "position": null,
      "original_position": 43,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "893c541dce938aaa210785df53a5841c5e90d924",
      "in_reply_to_id": 1375473315,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done as suggested",
      "created_at": "2023-10-30T22:00:10Z",
      "updated_at": "2023-10-30T22:00:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1376845662",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376845662"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 318,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376845719",
      "pull_request_review_id": 1705142221,
      "id": 1376845719,
      "node_id": "PRRC_kwDOABII585SEP-X",
      "diff_hunk": "@@ -110,6 +110,29 @@ class PeerManager : public CValidationInterface, public NetEventsInterface\n \n     /** This function is used for testing the stale tip eviction logic, see denialofservice_tests.cpp */\n     virtual void UpdateLastBlockAnnounceTime(NodeId node, int64_t time_in_seconds) = 0;\n+\n+    /**\n+     * Gets the set of service flags which are \"desirable\" for a given peer.\n+     *\n+     * These are the flags which are required for a peer to support for them\n+     * to be \"interesting\" to us, ie for us to wish to use one of our few\n+     * outbound connection slots for or for us to wish to prioritize keeping\n+     * their connection around.\n+     *\n+     * Relevant service flags may be peer- and state-specific in that the\n+     * version of the peer may determine which flags are required (eg in the\n+     * case of NODE_NETWORK_LIMITED where we seek out NODE_NETWORK peers\n+     * unless they set NODE_NETWORK_LIMITED and we are out of IBD, in which\n+     * case NODE_NETWORK_LIMITED suffices).\n+     *\n+     * Thus, generally, avoid calling with 'services' == NODE_NONE, unless\n+     * state-specific flags must absolutely be avoided. When called with\n+     * 'services' == NODE_NONE, the returned desirable service flags are\n+     * guaranteed to not change dependent on state - ie they are suitable for\n+     * use when describing peers which we know to be desirable, but for which\n+     * we do not have a confirmed set of service flags.\n+    */\n+    virtual ServiceFlags GetDesirableServiceFlags(ServiceFlags services) = 0;",
      "path": "src/net_processing.h",
      "position": null,
      "original_position": 26,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "3c895206cbff7a45d467878caa19aef8bd3aef4e",
      "in_reply_to_id": 1375477984,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done as suggested",
      "created_at": "2023-10-30T22:00:15Z",
      "updated_at": "2023-10-30T22:00:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1376845719",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376845719"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 135,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376845755",
      "pull_request_review_id": 1705142273,
      "id": 1376845755,
      "node_id": "PRRC_kwDOABII585SEP-7",
      "diff_hunk": "@@ -1012,6 +1012,12 @@ class NetEventsInterface\n     /** Handle removal of a peer (clear state) */\n     virtual void FinalizeNode(const CNode& node) = 0;\n \n+    /**\n+     * Callback to determine whether the given set of service flags are sufficient\n+     * for a peer to be \"relevant\".\n+     */\n+    virtual bool HasDesirableServiceFlags(ServiceFlags services) = 0;",
      "path": "src/net.h",
      "position": null,
      "original_position": 8,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "3c895206cbff7a45d467878caa19aef8bd3aef4e",
      "in_reply_to_id": 1375478210,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done as suggested",
      "created_at": "2023-10-30T22:00:18Z",
      "updated_at": "2023-10-30T22:00:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1376845755",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376845755"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1019,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376845963",
      "pull_request_review_id": 1705142584,
      "id": 1376845963,
      "node_id": "PRRC_kwDOABII585SEQCL",
      "diff_hunk": "@@ -892,7 +893,7 @@ class PeerManagerImpl final : public PeerManager\n      */\n     bool BlockRequested(NodeId nodeid, const CBlockIndex& block, std::list<QueuedBlock>::iterator** pit = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n-    bool TipMayBeStale() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    bool TipMayBeStale(bool& super_stale) EXCLUSIVE_LOCKS_REQUIRED(cs_main);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "cc5f276fa2acbd13d044fbf5e7dfff46d296b898",
      "in_reply_to_id": 1375481949,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "yeah, better. Done as suggested",
      "created_at": "2023-10-30T22:00:37Z",
      "updated_at": "2023-10-30T22:00:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1376845963",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376845963"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 896,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376846014",
      "pull_request_review_id": 1705142677,
      "id": 1376846014,
      "node_id": "PRRC_kwDOABII585SEQC-",
      "diff_hunk": "@@ -330,12 +330,16 @@ std::vector<std::string> serviceFlagsToStr(uint64_t flags);\n  * guaranteed to not change dependent on state - ie they are suitable for\n  * use when describing peers which we know to be desirable, but for which\n  * we do not have a confirmed set of service flags.\n- *\n- * If the NODE_NONE return value is changed, contrib/seeds/makeseeds.py\n- * should be updated appropriately to filter for the same nodes.\n  */\n ServiceFlags GetDesirableServiceFlags(ServiceFlags services);\n \n+/**\n+ * State independent service flags.\n+ * If the return value is changed, contrib/seeds/makeseeds.py\n+ * should be updated appropriately to filter for the same nodes.",
      "path": "src/protocol.h",
      "position": null,
      "original_position": 13,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "7c20e65b2880a23d753b3f05fd28994353b3049d",
      "in_reply_to_id": 1374426573,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done as suggested",
      "created_at": "2023-10-30T22:00:42Z",
      "updated_at": "2023-10-30T22:00:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1376846014",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376846014"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 339,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376846059",
      "pull_request_review_id": 1705142752,
      "id": 1376846059,
      "node_id": "PRRC_kwDOABII585SEQDr",
      "diff_hunk": "@@ -1294,14 +1295,21 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n     });\n }\n \n-bool PeerManagerImpl::TipMayBeStale()\n+bool PeerManagerImpl::TipMayBeStale(bool& super_stale)\n {\n     AssertLockHeld(cs_main);\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n     if (m_last_tip_update.load() == 0s) {\n         m_last_tip_update = GetTime<std::chrono::seconds>();\n     }\n-    return m_last_tip_update.load() < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty();\n+\n+    auto last_update_time = m_last_tip_update.load();\n+    if (last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty()) {\n+        // If tip is further than NODE_NETWORK_LIMITED_MIN_BLOCKS, we are really behind and shouldn't connect to limited peers anymore.\n+        super_stale = NodeSeconds{last_update_time} < GetAdjustedTime() - std::chrono::seconds{consensusParams.nPowTargetSpacing * NODE_NETWORK_LIMITED_MIN_BLOCKS};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "cc5f276fa2acbd13d044fbf5e7dfff46d296b898",
      "in_reply_to_id": 1375843721,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done as suggested",
      "created_at": "2023-10-30T22:00:47Z",
      "updated_at": "2023-10-30T22:00:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1376846059",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376846059"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1309,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376889771",
      "pull_request_review_id": 1705210202,
      "id": 1376889771,
      "node_id": "PRRC_kwDOABII585SEaur",
      "diff_hunk": "@@ -1642,6 +1659,20 @@ void PeerManagerImpl::FinalizeNode(const CNode& node)\n     LogPrint(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", nodeid);\n }\n \n+bool PeerManagerImpl::HasAllDesirableServiceFlags(ServiceFlags services) const\n+{\n+    // Shortcut for (services & GetDesirableServiceFlags(services)) == GetDesirableServiceFlags(services)\n+    return !(GetDesirableServiceFlags(services) & (~services));\n+}\n+\n+ServiceFlags PeerManagerImpl::GetDesirableServiceFlags(ServiceFlags services) const\n+{\n+    if (services & NODE_NETWORK_LIMITED) {\n+        if (m_initial_sync_finished) return ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS);\n+    }\n+    return ServiceFlags(NODE_NETWORK | NODE_WITNESS);",
      "path": "src/net_processing.cpp",
      "position": 88,
      "original_position": 83,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "bf3ce4a9ae88910ef33be61980be42c84fc812af",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Can we return `StatelessServiceFlags()` here instead?",
      "created_at": "2023-10-30T23:08:47Z",
      "updated_at": "2023-10-30T23:09:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1376889771",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376889771"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1689,
      "original_line": 1689,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1377164244",
      "pull_request_review_id": 1705619635,
      "id": 1377164244,
      "node_id": "PRRC_kwDOABII585SFdvU",
      "diff_hunk": "@@ -1642,6 +1659,20 @@ void PeerManagerImpl::FinalizeNode(const CNode& node)\n     LogPrint(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", nodeid);\n }\n \n+bool PeerManagerImpl::HasAllDesirableServiceFlags(ServiceFlags services) const\n+{\n+    // Shortcut for (services & GetDesirableServiceFlags(services)) == GetDesirableServiceFlags(services)\n+    return !(GetDesirableServiceFlags(services) & (~services));\n+}\n+\n+ServiceFlags PeerManagerImpl::GetDesirableServiceFlags(ServiceFlags services) const\n+{\n+    if (services & NODE_NETWORK_LIMITED) {\n+        if (m_initial_sync_finished) return ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS);\n+    }\n+    return ServiceFlags(NODE_NETWORK | NODE_WITNESS);",
      "path": "src/net_processing.cpp",
      "position": 88,
      "original_position": 83,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "bf3ce4a9ae88910ef33be61980be42c84fc812af",
      "in_reply_to_id": 1376889771,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah this what causes my confusion [here](https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1376837397) as well. I think the author means to use `StatelessServiceFlags` only for seed peers. In that case, i'd probably say that explicitly in the function's name. Like `SeedsServiceFlags`. Then, a comment saying something like `these flags should probably be in sync with GetDesirableServiceFlags, but not strictly`.",
      "created_at": "2023-10-31T07:36:53Z",
      "updated_at": "2023-10-31T07:36:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1377164244",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1377164244"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1689,
      "original_line": 1689,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1377694801",
      "pull_request_review_id": 1706479807,
      "id": 1377694801,
      "node_id": "PRRC_kwDOABII585SHfRR",
      "diff_hunk": "@@ -1642,6 +1659,20 @@ void PeerManagerImpl::FinalizeNode(const CNode& node)\n     LogPrint(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", nodeid);\n }\n \n+bool PeerManagerImpl::HasAllDesirableServiceFlags(ServiceFlags services) const\n+{\n+    // Shortcut for (services & GetDesirableServiceFlags(services)) == GetDesirableServiceFlags(services)\n+    return !(GetDesirableServiceFlags(services) & (~services));\n+}\n+\n+ServiceFlags PeerManagerImpl::GetDesirableServiceFlags(ServiceFlags services) const\n+{\n+    if (services & NODE_NETWORK_LIMITED) {\n+        if (m_initial_sync_finished) return ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS);\n+    }\n+    return ServiceFlags(NODE_NETWORK | NODE_WITNESS);",
      "path": "src/net_processing.cpp",
      "position": 88,
      "original_position": 83,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "bf3ce4a9ae88910ef33be61980be42c84fc812af",
      "in_reply_to_id": 1376889771,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> In that case, i'd probably say that explicitly in the function's name. Like SeedsServiceFlags.\r\n\r\nSounds good. Will rename it to `SeedsServiceFlags`.\r\nI was thinking we would use this function for other cases in the future, but agree that this can be simplified for now.\r\n\r\n> Then, a comment saying something like these flags should probably be in sync with GetDesirableServiceFlags, but not strictly.\r\n\r\nI'm not sure about this comment. We could have a much more complex logic at the PeerManager level, adaptable based on the chain context and/or the user's configurations. For instance, the user could be running a node whose preferred connections are ones supporting `NODE_P2P_V2` or `NODE_COMPACT_FILTERS` (because the sync mechanism is BIP157) or some other service flag in the future.\r\n\r\n\r\n",
      "created_at": "2023-10-31T14:36:35Z",
      "updated_at": "2023-10-31T14:37:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1377694801",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1377694801"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1689,
      "original_line": 1689,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1377784027",
      "pull_request_review_id": 1706626162,
      "id": 1377784027,
      "node_id": "PRRC_kwDOABII585SH1Db",
      "diff_hunk": "@@ -0,0 +1,58 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <node/miner.h>\n+#include <net_processing.h>\n+#include <pow.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(peerman_tests, RegTestingSetup)\n+\n+// Verifying when network-limited peer connections are desirable based on the node's IBD status\n+BOOST_AUTO_TEST_CASE(connections_desirable_service_flags)\n+{\n+    std::unique_ptr<PeerManager> peerman = PeerManager::make(*m_node.connman, *m_node.addrman, nullptr, *m_node.chainman, *m_node.mempool, {});\n+\n+    // Check we start connecting to full nodes\n+    ServiceFlags peer_flags{NODE_WITNESS | NODE_NETWORK_LIMITED};\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Check we accept network limited peers when we are out of ibd\n+    SetMockTime(WITH_LOCK(::cs_main, return m_node.chainman->ActiveChain().Tip()->GetBlockTime())); // time to tip time so we are out of ibd\n+    peerman->CheckForStaleTipAndEvictPeers();  // Update ibd state\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Now check we can go back to ibd if we are further than the limited peers threshold (NODE_NETWORK_LIMITED_MIN_BLOCKS)",
      "path": "src/test/peerman_tests.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "3a56fe6dbb35ba809cd9611395f28d8fdd85df73",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Can we first check that we don't go back to ibd if we are stale but at the threshold, then we do go back to ibd once we step over the threshold?",
      "created_at": "2023-10-31T15:31:57Z",
      "updated_at": "2023-10-31T15:31:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1377784027",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1377784027"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1377793447",
      "pull_request_review_id": 1706640450,
      "id": 1377793447,
      "node_id": "PRRC_kwDOABII585SH3Wn",
      "diff_hunk": "@@ -0,0 +1,58 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <node/miner.h>\n+#include <net_processing.h>\n+#include <pow.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(peerman_tests, RegTestingSetup)\n+\n+// Verifying when network-limited peer connections are desirable based on the node's IBD status\n+BOOST_AUTO_TEST_CASE(connections_desirable_service_flags)\n+{\n+    std::unique_ptr<PeerManager> peerman = PeerManager::make(*m_node.connman, *m_node.addrman, nullptr, *m_node.chainman, *m_node.mempool, {});\n+\n+    // Check we start connecting to full nodes\n+    ServiceFlags peer_flags{NODE_WITNESS | NODE_NETWORK_LIMITED};\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Check we accept network limited peers when we are out of ibd\n+    SetMockTime(WITH_LOCK(::cs_main, return m_node.chainman->ActiveChain().Tip()->GetBlockTime())); // time to tip time so we are out of ibd\n+    peerman->CheckForStaleTipAndEvictPeers();  // Update ibd state\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Now check we can go back to ibd if we are further than the limited peers threshold (NODE_NETWORK_LIMITED_MIN_BLOCKS)\n+    auto consensus = m_node.chainman->GetParams().GetConsensus();\n+    auto time_last_stale = GetTime<std::chrono::seconds>() + std::chrono::seconds{consensus.nPowTargetSpacing * 300};\n+    SetMockTime(time_last_stale);\n+    peerman->CheckForStaleTipAndEvictPeers();\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Check we can get back out of ibd again\n+    SetMockTime(WITH_LOCK(::cs_main, return m_node.chainman->ActiveChain().Tip()->GetBlockTime())); // time to tip time so we are out of ibd\n+    peerman->CheckForStaleTipAndEvictPeers();  // Update ibd state\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Push the chain forward to surpass the 'STALE_CHECK_INTERVAL' (time between 'CheckForStaleTipAndEvictPeers' calls)\n+    // to move the \"initial sync finished\" state flag back to false (back to IBD state once more).",
      "path": "src/test/peerman_tests.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "3a56fe6dbb35ba809cd9611395f28d8fdd85df73",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The 3 lines below are the same as lines 33-35, except for the +11min. It's unclear to me from this comment what the 11min is doing and why this is different from what we are doing before. Can this maybe be explained better?",
      "created_at": "2023-10-31T15:37:42Z",
      "updated_at": "2023-10-31T15:38:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1377793447",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1377793447"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378086895",
      "pull_request_review_id": 1707112442,
      "id": 1378086895,
      "node_id": "PRRC_kwDOABII585SI-_v",
      "diff_hunk": "@@ -0,0 +1,58 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <node/miner.h>\n+#include <net_processing.h>\n+#include <pow.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(peerman_tests, RegTestingSetup)\n+\n+// Verifying when network-limited peer connections are desirable based on the node's IBD status\n+BOOST_AUTO_TEST_CASE(connections_desirable_service_flags)\n+{\n+    std::unique_ptr<PeerManager> peerman = PeerManager::make(*m_node.connman, *m_node.addrman, nullptr, *m_node.chainman, *m_node.mempool, {});\n+\n+    // Check we start connecting to full nodes\n+    ServiceFlags peer_flags{NODE_WITNESS | NODE_NETWORK_LIMITED};\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Check we accept network limited peers when we are out of ibd\n+    SetMockTime(WITH_LOCK(::cs_main, return m_node.chainman->ActiveChain().Tip()->GetBlockTime())); // time to tip time so we are out of ibd\n+    peerman->CheckForStaleTipAndEvictPeers();  // Update ibd state\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Now check we can go back to ibd if we are further than the limited peers threshold (NODE_NETWORK_LIMITED_MIN_BLOCKS)",
      "path": "src/test/peerman_tests.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "3a56fe6dbb35ba809cd9611395f28d8fdd85df73",
      "in_reply_to_id": 1377784027,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "yeah sure, good idea.",
      "created_at": "2023-10-31T19:37:01Z",
      "updated_at": "2023-10-31T19:37:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1378086895",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378086895"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378088543",
      "pull_request_review_id": 1707115293,
      "id": 1378088543,
      "node_id": "PRRC_kwDOABII585SI_Zf",
      "diff_hunk": "@@ -0,0 +1,58 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <node/miner.h>\n+#include <net_processing.h>\n+#include <pow.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(peerman_tests, RegTestingSetup)\n+\n+// Verifying when network-limited peer connections are desirable based on the node's IBD status\n+BOOST_AUTO_TEST_CASE(connections_desirable_service_flags)\n+{\n+    std::unique_ptr<PeerManager> peerman = PeerManager::make(*m_node.connman, *m_node.addrman, nullptr, *m_node.chainman, *m_node.mempool, {});\n+\n+    // Check we start connecting to full nodes\n+    ServiceFlags peer_flags{NODE_WITNESS | NODE_NETWORK_LIMITED};\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Check we accept network limited peers when we are out of ibd\n+    SetMockTime(WITH_LOCK(::cs_main, return m_node.chainman->ActiveChain().Tip()->GetBlockTime())); // time to tip time so we are out of ibd\n+    peerman->CheckForStaleTipAndEvictPeers();  // Update ibd state\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Now check we can go back to ibd if we are further than the limited peers threshold (NODE_NETWORK_LIMITED_MIN_BLOCKS)\n+    auto consensus = m_node.chainman->GetParams().GetConsensus();\n+    auto time_last_stale = GetTime<std::chrono::seconds>() + std::chrono::seconds{consensus.nPowTargetSpacing * 300};\n+    SetMockTime(time_last_stale);\n+    peerman->CheckForStaleTipAndEvictPeers();\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Check we can get back out of ibd again\n+    SetMockTime(WITH_LOCK(::cs_main, return m_node.chainman->ActiveChain().Tip()->GetBlockTime())); // time to tip time so we are out of ibd\n+    peerman->CheckForStaleTipAndEvictPeers();  // Update ibd state\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Push the chain forward to surpass the 'STALE_CHECK_INTERVAL' (time between 'CheckForStaleTipAndEvictPeers' calls)\n+    // to move the \"initial sync finished\" state flag back to false (back to IBD state once more).",
      "path": "src/test/peerman_tests.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "3a56fe6dbb35ba809cd9611395f28d8fdd85df73",
      "in_reply_to_id": 1377793447,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Sure. This is because we execute the stale check every 10 min, so needed to push the last stale check time forward.\r\nWill re-order the test checks so this becomes clearer.",
      "created_at": "2023-10-31T19:39:03Z",
      "updated_at": "2023-10-31T19:39:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1378088543",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378088543"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378500641",
      "pull_request_review_id": 1707743315,
      "id": 1378500641,
      "node_id": "PRRC_kwDOABII585SKkAh",
      "diff_hunk": "@@ -1294,19 +1302,32 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n     });\n }\n \n-bool PeerManagerImpl::TipMayBeStale()\n+PeerManagerImpl::Staleness PeerManagerImpl::TipMayBeStale()\n {\n     AssertLockHeld(cs_main);\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n     if (m_last_tip_update.load() == 0s) {\n         m_last_tip_update = GetTime<std::chrono::seconds>();\n     }\n-    return m_last_tip_update.load() < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty();\n+\n+    auto last_update_time = m_last_tip_update.load();\n+    if (last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty()) {\n+        // If tip is further than NODE_NETWORK_LIMITED_MIN_BLOCKS, we are really behind and shouldn't connect to limited peers anymore.\n+        Assume(NODE_NETWORK_LIMITED_MIN_BLOCKS > 3);\n+        bool in_ibd = NodeSeconds{last_update_time} < GetAdjustedTime() - std::chrono::seconds{consensusParams.nPowTargetSpacing * NODE_NETWORK_LIMITED_MIN_BLOCKS};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "636d927c4a9cd5cbf4d0c22e1c25dc44ecaf7a69",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "636d927c4a9cd5cbf4d0c22e1c25dc44ecaf7a69\r\n\r\nIs it still fair to call this state *initial* block download?",
      "created_at": "2023-11-01T08:08:22Z",
      "updated_at": "2023-11-01T08:18:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1378500641",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378500641"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378798478",
      "pull_request_review_id": 1708216770,
      "id": 1378798478,
      "node_id": "PRRC_kwDOABII585SLsuO",
      "diff_hunk": "@@ -1294,19 +1302,32 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n     });\n }\n \n-bool PeerManagerImpl::TipMayBeStale()\n+PeerManagerImpl::Staleness PeerManagerImpl::TipMayBeStale()\n {\n     AssertLockHeld(cs_main);\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n     if (m_last_tip_update.load() == 0s) {\n         m_last_tip_update = GetTime<std::chrono::seconds>();\n     }\n-    return m_last_tip_update.load() < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty();\n+\n+    auto last_update_time = m_last_tip_update.load();\n+    if (last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty()) {\n+        // If tip is further than NODE_NETWORK_LIMITED_MIN_BLOCKS, we are really behind and shouldn't connect to limited peers anymore.\n+        Assume(NODE_NETWORK_LIMITED_MIN_BLOCKS > 3);\n+        bool in_ibd = NodeSeconds{last_update_time} < GetAdjustedTime() - std::chrono::seconds{consensusParams.nPowTargetSpacing * NODE_NETWORK_LIMITED_MIN_BLOCKS};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "636d927c4a9cd5cbf4d0c22e1c25dc44ecaf7a69",
      "in_reply_to_id": 1378500641,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That's just me trying to save few characters. Will rename it to `past_net_limited`.",
      "created_at": "2023-11-01T13:23:37Z",
      "updated_at": "2023-11-01T13:23:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1378798478",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378798478"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378806543",
      "pull_request_review_id": 1708229887,
      "id": 1378806543,
      "node_id": "PRRC_kwDOABII585SLusP",
      "diff_hunk": "@@ -1294,19 +1302,32 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n     });\n }\n \n-bool PeerManagerImpl::TipMayBeStale()\n+PeerManagerImpl::Staleness PeerManagerImpl::TipMayBeStale()\n {\n     AssertLockHeld(cs_main);\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n     if (m_last_tip_update.load() == 0s) {\n         m_last_tip_update = GetTime<std::chrono::seconds>();\n     }\n-    return m_last_tip_update.load() < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty();\n+\n+    auto last_update_time = m_last_tip_update.load();\n+    if (last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty()) {\n+        // If tip is further than NODE_NETWORK_LIMITED_MIN_BLOCKS, we are really behind and shouldn't connect to limited peers anymore.\n+        Assume(NODE_NETWORK_LIMITED_MIN_BLOCKS > 3);\n+        bool in_ibd = NodeSeconds{last_update_time} < GetAdjustedTime() - std::chrono::seconds{consensusParams.nPowTargetSpacing * NODE_NETWORK_LIMITED_MIN_BLOCKS};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "636d927c4a9cd5cbf4d0c22e1c25dc44ecaf7a69",
      "in_reply_to_id": 1378500641,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Any reason to use adjusted time, when the tip update time is recorded as NodeClock?",
      "created_at": "2023-11-01T13:30:54Z",
      "updated_at": "2023-11-01T13:30:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1378806543",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378806543"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378842023",
      "pull_request_review_id": 1708287474,
      "id": 1378842023,
      "node_id": "PRRC_kwDOABII585SL3Wn",
      "diff_hunk": "@@ -1294,19 +1302,32 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n     });\n }\n \n-bool PeerManagerImpl::TipMayBeStale()\n+PeerManagerImpl::Staleness PeerManagerImpl::TipMayBeStale()\n {\n     AssertLockHeld(cs_main);\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n     if (m_last_tip_update.load() == 0s) {\n         m_last_tip_update = GetTime<std::chrono::seconds>();\n     }\n-    return m_last_tip_update.load() < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty();\n+\n+    auto last_update_time = m_last_tip_update.load();\n+    if (last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty()) {\n+        // If tip is further than NODE_NETWORK_LIMITED_MIN_BLOCKS, we are really behind and shouldn't connect to limited peers anymore.\n+        Assume(NODE_NETWORK_LIMITED_MIN_BLOCKS > 3);\n+        bool in_ibd = NodeSeconds{last_update_time} < GetAdjustedTime() - std::chrono::seconds{consensusParams.nPowTargetSpacing * NODE_NETWORK_LIMITED_MIN_BLOCKS};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "636d927c4a9cd5cbf4d0c22e1c25dc44ecaf7a69",
      "in_reply_to_id": 1378500641,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Any reason to use adjusted time, when the tip update time is recorded as NodeClock?\r\n\r\nGood point. The idea was to considerate the peers' time too, so the node has less chances of requesting a block at the limited peers threshold that does no longer exist in the other side. In other words, if the peer's time deviates slightly from the node time, the peer could have pruned the block at the verge of the threshold.\r\nBut we could achieve the same outcome by reducing the window size by one or two blocks. Which does not require to mix `GetTime` and `GetAdjustedTime` usages.",
      "created_at": "2023-11-01T14:01:09Z",
      "updated_at": "2023-11-01T14:01:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1378842023",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378842023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378907084",
      "pull_request_review_id": 1708392307,
      "id": 1378907084,
      "node_id": "PRRC_kwDOABII585SMHPM",
      "diff_hunk": "@@ -1294,19 +1302,32 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n     });\n }\n \n-bool PeerManagerImpl::TipMayBeStale()\n+PeerManagerImpl::Staleness PeerManagerImpl::TipMayBeStale()\n {\n     AssertLockHeld(cs_main);\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n     if (m_last_tip_update.load() == 0s) {\n         m_last_tip_update = GetTime<std::chrono::seconds>();\n     }\n-    return m_last_tip_update.load() < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty();\n+\n+    auto last_update_time = m_last_tip_update.load();\n+    if (last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty()) {\n+        // If tip is further than NODE_NETWORK_LIMITED_MIN_BLOCKS, we are really behind and shouldn't connect to limited peers anymore.\n+        Assume(NODE_NETWORK_LIMITED_MIN_BLOCKS > 3);\n+        bool in_ibd = NodeSeconds{last_update_time} < GetAdjustedTime() - std::chrono::seconds{consensusParams.nPowTargetSpacing * NODE_NETWORK_LIMITED_MIN_BLOCKS};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "636d927c4a9cd5cbf4d0c22e1c25dc44ecaf7a69",
      "in_reply_to_id": 1378500641,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> In other words, if the peer's time deviates slightly from the node time\r\n\r\nI don't think `GetAdjustedTime` offers this precision even. Also, it is not a per-peer offset, but a global one.",
      "created_at": "2023-11-01T14:52:26Z",
      "updated_at": "2023-11-01T14:52:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1378907084",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378907084"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1380107969",
      "pull_request_review_id": 1710249269,
      "id": 1380107969,
      "node_id": "PRRC_kwDOABII585SQsbB",
      "diff_hunk": "@@ -1294,19 +1302,32 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n     });\n }\n \n-bool PeerManagerImpl::TipMayBeStale()\n+PeerManagerImpl::Staleness PeerManagerImpl::TipMayBeStale()\n {\n     AssertLockHeld(cs_main);\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n     if (m_last_tip_update.load() == 0s) {\n         m_last_tip_update = GetTime<std::chrono::seconds>();\n     }\n-    return m_last_tip_update.load() < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty();\n+\n+    auto last_update_time = m_last_tip_update.load();\n+    if (last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty()) {\n+        // If tip is further than NODE_NETWORK_LIMITED_MIN_BLOCKS, we are really behind and shouldn't connect to limited peers anymore.\n+        Assume(NODE_NETWORK_LIMITED_MIN_BLOCKS > 3);\n+        bool in_ibd = NodeSeconds{last_update_time} < GetAdjustedTime() - std::chrono::seconds{consensusParams.nPowTargetSpacing * NODE_NETWORK_LIMITED_MIN_BLOCKS};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "636d927c4a9cd5cbf4d0c22e1c25dc44ecaf7a69",
      "in_reply_to_id": 1378500641,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> > In other words, if the peer's time deviates slightly from the node time\r\n> \r\n> I don't think `GetAdjustedTime` offers this precision even. Also, it is not a per-peer offset, but a global one.\r\n\r\nYeah I know. I just thought it was better to do that than nothing.\r\nStill, I'm quite sure we cannot trigger the edge case I mentioned above only using core vanilla alone. The pruning process isn't that aggressive for the time being. It might arise across different implementations but we can revisit it in a follow-up, the limited peers connection window can be easily shortened without any problem.",
      "created_at": "2023-11-02T13:29:05Z",
      "updated_at": "2023-11-02T13:29:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1380107969",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1380107969"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384547974",
      "pull_request_review_id": 1717094661,
      "id": 1384547974,
      "node_id": "PRRC_kwDOABII585ShoaG",
      "diff_hunk": "@@ -892,7 +893,13 @@ class PeerManagerImpl final : public PeerManager\n      */\n     bool BlockRequested(NodeId nodeid, const CBlockIndex& block, std::list<QueuedBlock>::iterator** pit = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n-    bool TipMayBeStale() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    enum class Staleness {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99\r\n\r\nnit: this enum could be better... First, `StalePast` also qualifies as `Stale` (just english-wise). Second, it's a negation (non-synced).",
      "created_at": "2023-11-07T08:31:58Z",
      "updated_at": "2023-11-07T08:38:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1384547974",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384547974"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 896,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384550193",
      "pull_request_review_id": 1717094661,
      "id": 1384550193,
      "node_id": "PRRC_kwDOABII585Sho8x",
      "diff_hunk": "@@ -2057,6 +2078,16 @@ void PeerManagerImpl::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlock\n {\n     SetBestHeight(pindexNew->nHeight);\n \n+    // Update internal sync state.\n+    // Avoid using 'fInitialDownload' alone since the flag currently cannot go backwards after passing IBD once.",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 74,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm wondering, does it even make sense to keep such flag at this point? What it would take to adjust all code to going back-and-forth w.r.t. superstale?",
      "created_at": "2023-11-07T08:33:52Z",
      "updated_at": "2023-11-07T08:38:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1384550193",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384550193"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2082,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384553675",
      "pull_request_review_id": 1717094661,
      "id": 1384553675,
      "node_id": "PRRC_kwDOABII585ShpzL",
      "diff_hunk": "@@ -5279,22 +5310,31 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n \n     EvictExtraOutboundPeers(now);\n \n+    Staleness staleness{Staleness::NotStale};\n     if (now > m_stale_tip_check_time) {\n-        // Check whether our tip is stale, and if so, allow using an extra\n-        // outbound peer\n-        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing() && TipMayBeStale()) {\n+        // Check whether our tip is stale, and if so, allow using an extra outbound peer\n+        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing()) {\n+            staleness = TipMayBeStale();\n+        }\n+\n+        if (staleness != Staleness::NotStale) {\n             LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\",\n                       count_seconds(now - m_last_tip_update.load()));\n             m_connman.SetTryNewOutboundPeer(true);\n         } else if (m_connman.GetTryNewOutboundPeer()) {\n             m_connman.SetTryNewOutboundPeer(false);\n         }\n+\n         m_stale_tip_check_time = now + STALE_CHECK_INTERVAL;\n     }\n \n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (staleness == Staleness::StalePastNetworkLimited) {\n+        // Disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_initial_sync_finished = false;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 117,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The word `initial` here is indeed confusing... Thinking about something happening only at node bootstrap, which is a more obvious version i think. Can we find a different word now that you're changing it to certainly not mean that?",
      "created_at": "2023-11-07T08:36:58Z",
      "updated_at": "2023-11-07T08:38:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1384553675",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384553675"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384972762",
      "pull_request_review_id": 1717778418,
      "id": 1384972762,
      "node_id": "PRRC_kwDOABII585SjQHa",
      "diff_hunk": "@@ -2057,6 +2078,16 @@ void PeerManagerImpl::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlock\n {\n     SetBestHeight(pindexNew->nHeight);\n \n+    // Update internal sync state.\n+    // Avoid using 'fInitialDownload' alone since the flag currently cannot go backwards after passing IBD once.",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 74,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": 1384550193,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I'm wondering, does it even make sense to keep such flag at this point? What it would take to adjust all code to going back-and-forth w.r.t. superstale?\r\n\r\nI think that would be an oxymoron. We would be adding code to put the node back into IBD state, because of a stale tip check, when the node is updating the tip.\r\n\r\nThe `fInitialDownload` flag usage is just a speedup. We know for sure that when the flag is true, it is because the node is in IBD. So we don't need to check anything else in such case.\r\n\r\nAside from that, about the adjustments: the stale tip check uses the last tip updated time (`m_last_tip_update`) which is updated on every new block `BlockConnected` (which is executed prior to `UpdatedBlockTip`). So that would need to be moved to `UpdatedBlockTip`. Also, and more importantly for me, because the stale tip check checks the in-flight block requests map, it requires `cs_main` lock. Which I would try to avoid as much as possible as it usage slows down the net messages processing and validation thread.\r\nA little note about this last point; with something like #27837, we could guard `mapBlocksInFlight` under a different mutex and not `cs_main`. ",
      "created_at": "2023-11-07T14:07:29Z",
      "updated_at": "2023-11-07T14:19:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1384972762",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384972762"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2082,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384991649",
      "pull_request_review_id": 1717778418,
      "id": 1384991649,
      "node_id": "PRRC_kwDOABII585SjUuh",
      "diff_hunk": "@@ -5279,22 +5310,31 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n \n     EvictExtraOutboundPeers(now);\n \n+    Staleness staleness{Staleness::NotStale};\n     if (now > m_stale_tip_check_time) {\n-        // Check whether our tip is stale, and if so, allow using an extra\n-        // outbound peer\n-        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing() && TipMayBeStale()) {\n+        // Check whether our tip is stale, and if so, allow using an extra outbound peer\n+        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing()) {\n+            staleness = TipMayBeStale();\n+        }\n+\n+        if (staleness != Staleness::NotStale) {\n             LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\",\n                       count_seconds(now - m_last_tip_update.load()));\n             m_connman.SetTryNewOutboundPeer(true);\n         } else if (m_connman.GetTryNewOutboundPeer()) {\n             m_connman.SetTryNewOutboundPeer(false);\n         }\n+\n         m_stale_tip_check_time = now + STALE_CHECK_INTERVAL;\n     }\n \n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (staleness == Staleness::StalePastNetworkLimited) {\n+        // Disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_initial_sync_finished = false;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 117,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": 1384553675,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> The word `initial` here is indeed confusing... Thinking about something happening only at node bootstrap, which is a more obvious version i think. Can we find a different word now that you're changing it to certainly not mean that?\r\n\r\nHmm, first names coming to my mind are `m_close_to_synced` or `m_close_to_tip`? or, could use the existing term `m_can_direct_fetch`?\r\n\r\nStill, maybe better to leave it for a follow-up because, with the back-and-forth functionality, we could also use this flag instead of calling `CanDirectFetch()` which locks `cs_main`.",
      "created_at": "2023-11-07T14:18:57Z",
      "updated_at": "2023-11-07T14:19:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1384991649",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384991649"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385001110",
      "pull_request_review_id": 1717826616,
      "id": 1385001110,
      "node_id": "PRRC_kwDOABII585SjXCW",
      "diff_hunk": "@@ -892,7 +893,13 @@ class PeerManagerImpl final : public PeerManager\n      */\n     bool BlockRequested(NodeId nodeid, const CBlockIndex& block, std::list<QueuedBlock>::iterator** pit = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n-    bool TipMayBeStale() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    enum class Staleness {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": 1384547974,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hmm, naming is hard.\r\nAs the function is called `TipMayBeStale()`, maybe calling it `SyncState` could also work. Thoughts? Or do you have anything else in mind?",
      "created_at": "2023-11-07T14:24:46Z",
      "updated_at": "2023-11-07T14:24:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1385001110",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385001110"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 896,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1386309080",
      "pull_request_review_id": 1719854627,
      "id": 1386309080,
      "node_id": "PRRC_kwDOABII585SoWXY",
      "diff_hunk": "@@ -892,7 +893,13 @@ class PeerManagerImpl final : public PeerManager\n      */\n     bool BlockRequested(NodeId nodeid, const CBlockIndex& block, std::list<QueuedBlock>::iterator** pit = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n-    bool TipMayBeStale() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    enum class Staleness {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": 1384547974,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`SyncState` yeah that would work if you come up with a good enum values.",
      "created_at": "2023-11-08T09:55:57Z",
      "updated_at": "2023-11-08T09:55:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1386309080",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1386309080"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 896,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1386826811",
      "pull_request_review_id": 1720677656,
      "id": 1386826811,
      "node_id": "PRRC_kwDOABII585SqUw7",
      "diff_hunk": "@@ -892,7 +893,13 @@ class PeerManagerImpl final : public PeerManager\n      */\n     bool BlockRequested(NodeId nodeid, const CBlockIndex& block, std::list<QueuedBlock>::iterator** pit = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n-    bool TipMayBeStale() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    enum class Staleness {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": 1384547974,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> `SyncState` yeah that would work if you come up with a good enum values.\r\n\r\nMaybe `Synced`, `RecentStale`, `Stale`?\r\nNamed the second and third \"stale\" because these states have no in-flight block requests.\r\n\r\nStill, this could also be easily changed in the future if we come up with better names.",
      "created_at": "2023-11-08T15:41:02Z",
      "updated_at": "2023-11-08T15:41:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1386826811",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1386826811"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 896,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413138828",
      "pull_request_review_id": 1761294796,
      "id": 1413138828,
      "node_id": "PRRC_kwDOABII585UOsmM",
      "diff_hunk": "@@ -5279,22 +5310,31 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n \n     EvictExtraOutboundPeers(now);\n \n+    Staleness staleness{Staleness::NotStale};\n     if (now > m_stale_tip_check_time) {\n-        // Check whether our tip is stale, and if so, allow using an extra\n-        // outbound peer\n-        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing() && TipMayBeStale()) {\n+        // Check whether our tip is stale, and if so, allow using an extra outbound peer\n+        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing()) {\n+            staleness = TipMayBeStale();\n+        }\n+\n+        if (staleness != Staleness::NotStale) {\n             LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\",\n                       count_seconds(now - m_last_tip_update.load()));\n             m_connman.SetTryNewOutboundPeer(true);\n         } else if (m_connman.GetTryNewOutboundPeer()) {\n             m_connman.SetTryNewOutboundPeer(false);\n         }\n+\n         m_stale_tip_check_time = now + STALE_CHECK_INTERVAL;\n     }\n \n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (staleness == Staleness::StalePastNetworkLimited) {\n+        // Disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_initial_sync_finished = false;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 117,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": 1384553675,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This flag is only used to connect to limited peers or not. In that case, why not remove the indirection about syncing and just call it `allow_limited_peers`?",
      "created_at": "2023-12-03T15:42:18Z",
      "updated_at": "2023-12-03T15:42:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1413138828",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413138828"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413143266",
      "pull_request_review_id": 1761299662,
      "id": 1413143266,
      "node_id": "PRRC_kwDOABII585UOtri",
      "diff_hunk": "@@ -5279,22 +5310,31 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n \n     EvictExtraOutboundPeers(now);\n \n+    Staleness staleness{Staleness::NotStale};\n     if (now > m_stale_tip_check_time) {\n-        // Check whether our tip is stale, and if so, allow using an extra\n-        // outbound peer\n-        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing() && TipMayBeStale()) {\n+        // Check whether our tip is stale, and if so, allow using an extra outbound peer\n+        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing()) {\n+            staleness = TipMayBeStale();\n+        }\n+\n+        if (staleness != Staleness::NotStale) {\n             LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\",\n                       count_seconds(now - m_last_tip_update.load()));\n             m_connman.SetTryNewOutboundPeer(true);\n         } else if (m_connman.GetTryNewOutboundPeer()) {\n             m_connman.SetTryNewOutboundPeer(false);\n         }\n+\n         m_stale_tip_check_time = now + STALE_CHECK_INTERVAL;\n     }\n \n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (staleness == Staleness::StalePastNetworkLimited) {\n+        // Disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_initial_sync_finished = false;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 117,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": 1384553675,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> This flag is only used to connect to limited peers or not. In that case, why not remove the indirection about syncing and just call it `allow_limited_peers`?\r\n\r\nBecause of what I wrote above, this flag can (and most likely will) be used in other places as well, fulfilling two goals: (1) minimizing `cs_main` locks, which improves the overall node response, and (2) minimizing the usage of the chainstate IBD flag, which lacks back-and-forth functionality.\r\n\r\nAs this PR did not introduce the flag and it is fixing an issue, I think is fine to leave the flag name as is now. It could be revisited on a follow-up.",
      "created_at": "2023-12-03T15:55:50Z",
      "updated_at": "2023-12-03T16:00:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1413143266",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413143266"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413149420",
      "pull_request_review_id": 1761305909,
      "id": 1413149420,
      "node_id": "PRRC_kwDOABII585UOvLs",
      "diff_hunk": "@@ -5279,22 +5310,31 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n \n     EvictExtraOutboundPeers(now);\n \n+    Staleness staleness{Staleness::NotStale};\n     if (now > m_stale_tip_check_time) {\n-        // Check whether our tip is stale, and if so, allow using an extra\n-        // outbound peer\n-        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing() && TipMayBeStale()) {\n+        // Check whether our tip is stale, and if so, allow using an extra outbound peer\n+        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing()) {\n+            staleness = TipMayBeStale();\n+        }\n+\n+        if (staleness != Staleness::NotStale) {\n             LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\",\n                       count_seconds(now - m_last_tip_update.load()));\n             m_connman.SetTryNewOutboundPeer(true);\n         } else if (m_connman.GetTryNewOutboundPeer()) {\n             m_connman.SetTryNewOutboundPeer(false);\n         }\n+\n         m_stale_tip_check_time = now + STALE_CHECK_INTERVAL;\n     }\n \n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (staleness == Staleness::StalePastNetworkLimited) {\n+        // Disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_initial_sync_finished = false;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 117,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": 1384553675,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Right, then I think `m_is_close_to_tip` would make the most sense, since it's set initially after calling `IsBlockCloseToTip`.",
      "created_at": "2023-12-03T16:24:19Z",
      "updated_at": "2023-12-03T16:24:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1413149420",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413149420"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413843279",
      "pull_request_review_id": 1762353698,
      "id": 1413843279,
      "node_id": "PRRC_kwDOABII585URYlP",
      "diff_hunk": "@@ -5279,22 +5310,31 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n \n     EvictExtraOutboundPeers(now);\n \n+    Staleness staleness{Staleness::NotStale};\n     if (now > m_stale_tip_check_time) {\n-        // Check whether our tip is stale, and if so, allow using an extra\n-        // outbound peer\n-        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing() && TipMayBeStale()) {\n+        // Check whether our tip is stale, and if so, allow using an extra outbound peer\n+        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing()) {\n+            staleness = TipMayBeStale();\n+        }\n+\n+        if (staleness != Staleness::NotStale) {\n             LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\",\n                       count_seconds(now - m_last_tip_update.load()));\n             m_connman.SetTryNewOutboundPeer(true);\n         } else if (m_connman.GetTryNewOutboundPeer()) {\n             m_connman.SetTryNewOutboundPeer(false);\n         }\n+\n         m_stale_tip_check_time = now + STALE_CHECK_INTERVAL;\n     }\n \n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (staleness == Staleness::StalePastNetworkLimited) {\n+        // Disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_initial_sync_finished = false;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 117,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": 1384553675,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@naumenkogs, do you agree on the naming as well? I'm happy to change it if we all agree.\r\nBetter to be sync to not circle much around the naming here.",
      "created_at": "2023-12-04T13:03:14Z",
      "updated_at": "2023-12-04T13:03:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1413843279",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413843279"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415169393",
      "pull_request_review_id": 1764414714,
      "id": 1415169393,
      "node_id": "PRRC_kwDOABII585UWcVx",
      "diff_hunk": "@@ -5279,22 +5310,31 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n \n     EvictExtraOutboundPeers(now);\n \n+    Staleness staleness{Staleness::NotStale};\n     if (now > m_stale_tip_check_time) {\n-        // Check whether our tip is stale, and if so, allow using an extra\n-        // outbound peer\n-        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing() && TipMayBeStale()) {\n+        // Check whether our tip is stale, and if so, allow using an extra outbound peer\n+        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing()) {\n+            staleness = TipMayBeStale();\n+        }\n+\n+        if (staleness != Staleness::NotStale) {\n             LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\",\n                       count_seconds(now - m_last_tip_update.load()));\n             m_connman.SetTryNewOutboundPeer(true);\n         } else if (m_connman.GetTryNewOutboundPeer()) {\n             m_connman.SetTryNewOutboundPeer(false);\n         }\n+\n         m_stale_tip_check_time = now + STALE_CHECK_INTERVAL;\n     }\n \n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (staleness == Staleness::StalePastNetworkLimited) {\n+        // Disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_initial_sync_finished = false;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 117,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": 1384553675,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "yeah that would be better i think",
      "created_at": "2023-12-05T09:00:32Z",
      "updated_at": "2023-12-05T09:00:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1415169393",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415169393"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1416195304",
      "pull_request_review_id": 1765972033,
      "id": 1416195304,
      "node_id": "PRRC_kwDOABII585UaWzo",
      "diff_hunk": "@@ -5279,22 +5310,31 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n \n     EvictExtraOutboundPeers(now);\n \n+    Staleness staleness{Staleness::NotStale};\n     if (now > m_stale_tip_check_time) {\n-        // Check whether our tip is stale, and if so, allow using an extra\n-        // outbound peer\n-        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing() && TipMayBeStale()) {\n+        // Check whether our tip is stale, and if so, allow using an extra outbound peer\n+        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing()) {\n+            staleness = TipMayBeStale();\n+        }\n+\n+        if (staleness != Staleness::NotStale) {\n             LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\",\n                       count_seconds(now - m_last_tip_update.load()));\n             m_connman.SetTryNewOutboundPeer(true);\n         } else if (m_connman.GetTryNewOutboundPeer()) {\n             m_connman.SetTryNewOutboundPeer(false);\n         }\n+\n         m_stale_tip_check_time = now + STALE_CHECK_INTERVAL;\n     }\n \n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (staleness == Staleness::StalePastNetworkLimited) {\n+        // Disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_initial_sync_finished = false;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 117,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": 1384553675,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "ok cool. Updated per feedback.",
      "created_at": "2023-12-05T19:42:03Z",
      "updated_at": "2023-12-05T19:42:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1416195304",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1416195304"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418747776",
      "pull_request_review_id": 1769801940,
      "id": 1418747776,
      "node_id": "PRRC_kwDOABII585UkF-A",
      "diff_hunk": "@@ -110,6 +110,29 @@ class PeerManager : public CValidationInterface, public NetEventsInterface\n \n     /** This function is used for testing the stale tip eviction logic, see denialofservice_tests.cpp */\n     virtual void UpdateLastBlockAnnounceTime(NodeId node, int64_t time_in_seconds) = 0;\n+\n+    /**\n+     * Gets the set of service flags which are \"desirable\" for a given peer.\n+     *\n+     * These are the flags which are required for a peer to support for them\n+     * to be \"interesting\" to us, ie for us to wish to use one of our few\n+     * outbound connection slots for or for us to wish to prioritize keeping",
      "path": "src/net_processing.h",
      "position": 21,
      "original_position": 10,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:\r\n```suggestion\r\n     * outbound connection slots or for us to wish to prioritize keeping\r\n```",
      "created_at": "2023-12-07T10:37:21Z",
      "updated_at": "2023-12-08T11:07:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1418747776",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418747776"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 119,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418751438",
      "pull_request_review_id": 1769801940,
      "id": 1418751438,
      "node_id": "PRRC_kwDOABII585UkG3O",
      "diff_hunk": "@@ -110,6 +110,29 @@ class PeerManager : public CValidationInterface, public NetEventsInterface\n \n     /** This function is used for testing the stale tip eviction logic, see denialofservice_tests.cpp */\n     virtual void UpdateLastBlockAnnounceTime(NodeId node, int64_t time_in_seconds) = 0;\n+\n+    /**\n+     * Gets the set of service flags which are \"desirable\" for a given peer.\n+     *\n+     * These are the flags which are required for a peer to support for them\n+     * to be \"interesting\" to us, ie for us to wish to use one of our few\n+     * outbound connection slots for or for us to wish to prioritize keeping\n+     * their connection around.\n+     *\n+     * Relevant service flags may be peer- and state-specific in that the\n+     * version of the peer may determine which flags are required (eg in the\n+     * case of NODE_NETWORK_LIMITED where we seek out NODE_NETWORK peers\n+     * unless they set NODE_NETWORK_LIMITED and we are out of IBD, in which\n+     * case NODE_NETWORK_LIMITED suffices).",
      "path": "src/net_processing.h",
      "position": 28,
      "original_position": 17,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "What is meant by \"the version of the peer\" here?",
      "created_at": "2023-12-07T10:39:56Z",
      "updated_at": "2023-12-08T11:07:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1418751438",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418751438"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": 122,
      "original_start_line": 122,
      "start_side": "RIGHT",
      "line": 126,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420201385",
      "pull_request_review_id": 1769801940,
      "id": 1420201385,
      "node_id": "PRRC_kwDOABII585Upo2p",
      "diff_hunk": "@@ -1292,19 +1302,32 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n     });\n }\n \n-bool PeerManagerImpl::TipMayBeStale()\n+PeerManagerImpl::Staleness PeerManagerImpl::TipMayBeStale()\n {\n     AssertLockHeld(cs_main);\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n     if (m_last_tip_update.load() == 0s) {\n         m_last_tip_update = GetTime<std::chrono::seconds>();\n     }\n-    return m_last_tip_update.load() < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty();\n+\n+    auto last_update_time = m_last_tip_update.load();\n+    if (last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty()) {\n+        // If tip is further than NODE_NETWORK_LIMITED_MIN_BLOCKS, we are really behind and shouldn't connect to limited peers anymore.\n+        Assume(NODE_NETWORK_LIMITED_MIN_BLOCKS > 3);\n+        bool past_net_limited = last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * NODE_NETWORK_LIMITED_MIN_BLOCKS};\n+        return past_net_limited ? Staleness::StalePastNetworkLimited : Staleness::Stale;\n+    }\n+    return Staleness::NotStale;\n+}\n+\n+static bool IsBlockCloseToTip(const CBlockIndex* index, const Consensus::Params& consensus)\n+{\n+    return index->Time() > GetAdjustedTime() - consensus.PowTargetSpacing() * 20;\n }",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 78,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "naming: \"close to tip\" is misleading because there is no \"tip\" involved here. Just the block time is compared to the current time. `IsBlockRecent()` would be better. Or maybe even `size_t BlockAge(const CBlockIndex& index) { return (GetAdjustedTime() - index.Time()) / consensus.PowTargetSpacing(); }`",
      "created_at": "2023-12-08T09:53:21Z",
      "updated_at": "2023-12-08T11:09:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1420201385",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420201385"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 1323,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1328,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420215938",
      "pull_request_review_id": 1769801940,
      "id": 1420215938,
      "node_id": "PRRC_kwDOABII585UpsaC",
      "diff_hunk": "@@ -721,8 +723,9 @@ class PeerManagerImpl final : public PeerManager\n     bool RejectIncomingTxs(const CNode& peer) const;\n \n     /** Whether we've completed initial sync yet, for determining when to turn\n-      * on extra block-relay-only peers. */\n-    bool m_initial_sync_finished GUARDED_BY(cs_main){false};\n+      * on extra block-relay-only peers and the peer connections desirable\n+      * services flags. */\n+    std::atomic<bool> m_is_close_to_tip{false};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Tying together the \"extra block-relay-only peers\" and the \"desirable service flags\" seems unnecessary and maybe even wrong, because the conditions should be different. Flipping back to `false` is needed for \"desirable service flags\", but not for \"extra block-relay-only peers\" because then this code will be executed more than once:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/1d9da8da309d1dbf9aef15eb8dc43b4a2dc3d309/src/net_processing.cpp#L5268-L5269\r\n\r\nWhich seems innocent, but is confusing and looks like a change that is not needed to fix the problem this PR aims to fix.",
      "created_at": "2023-12-08T10:05:18Z",
      "updated_at": "2023-12-08T11:07:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1420215938",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420215938"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 725,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 728,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420242098",
      "pull_request_review_id": 1769801940,
      "id": 1420242098,
      "node_id": "PRRC_kwDOABII585Upyyy",
      "diff_hunk": "@@ -2039,7 +2076,16 @@ void PeerManagerImpl::NewPoWValidBlock(const CBlockIndex *pindex, const std::sha\n void PeerManagerImpl::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload)\n {\n     SetBestHeight(pindexNew->nHeight);\n-    SetServiceFlagsIBDCache(!fInitialDownload);\n+\n+    // Update internal sync state.\n+    // Avoid using 'fInitialDownload' alone since the flag currently cannot go backwards after passing IBD once.\n+    // This means that, after completing sync for the first time, 'fInitialDownload' will remain true even\n+    // when the node has been stalled for days and the arriving block is within the IBD window.\n+    if (!fInitialDownload && IsBlockCloseToTip(pindexNew, m_chainparams.GetConsensus())) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 118,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Seems like `!fInitialDownload && ` can be removed? If `IsBlockCloseToTip()` is `true` then that block is 3h20min or younger. In this case `fInitialDownload` will always be `false` because it uses 24h, right?",
      "created_at": "2023-12-08T10:26:41Z",
      "updated_at": "2023-12-08T11:07:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1420242098",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420242098"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2084,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420254312",
      "pull_request_review_id": 1769801940,
      "id": 1420254312,
      "node_id": "PRRC_kwDOABII585Up1xo",
      "diff_hunk": "@@ -2039,7 +2076,16 @@ void PeerManagerImpl::NewPoWValidBlock(const CBlockIndex *pindex, const std::sha\n void PeerManagerImpl::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload)\n {\n     SetBestHeight(pindexNew->nHeight);\n-    SetServiceFlagsIBDCache(!fInitialDownload);\n+\n+    // Update internal sync state.\n+    // Avoid using 'fInitialDownload' alone since the flag currently cannot go backwards after passing IBD once.\n+    // This means that, after completing sync for the first time, 'fInitialDownload' will remain true even\n+    // when the node has been stalled for days and the arriving block is within the IBD window.\n+    if (!fInitialDownload && IsBlockCloseToTip(pindexNew, m_chainparams.GetConsensus())) {\n+        // At this point, only move the flag forward. The responsibility of setting the flag backwards is on\n+        // the 'CheckForStaleTip' process, which performs a more exhaustive stale tip verification.",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 120,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I find it confusing to have one condition to set the flag to `true` and a different condition to set it to `false`. I mean this:\r\n\r\n```cpp\r\nif (A) flag = true;\r\nif (B) flag = false;\r\n```\r\nbecause, for example, it may happen that `B` is `true` and the flag is `true` (if the first `if` was not executed yet).\r\n\r\nIn this case it can be simpler:\r\n```cpp\r\nif (C) flag = true;\r\nif (!C) flag = false;\r\n// or just:\r\nflag = C;\r\n```\r\nand C should be just \"our highest block is older than 48h\" (regardless of whether `mapBlocksInFlight` is empty) => then don't connect to limited peers.",
      "created_at": "2023-12-08T10:36:38Z",
      "updated_at": "2023-12-08T11:07:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1420254312",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420254312"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 2085,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2086,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1427973929",
      "pull_request_review_id": 1784007714,
      "id": 1427973929,
      "node_id": "PRRC_kwDOABII585VHScp",
      "diff_hunk": "@@ -110,6 +110,29 @@ class PeerManager : public CValidationInterface, public NetEventsInterface\n \n     /** This function is used for testing the stale tip eviction logic, see denialofservice_tests.cpp */\n     virtual void UpdateLastBlockAnnounceTime(NodeId node, int64_t time_in_seconds) = 0;\n+\n+    /**\n+     * Gets the set of service flags which are \"desirable\" for a given peer.\n+     *\n+     * These are the flags which are required for a peer to support for them\n+     * to be \"interesting\" to us, ie for us to wish to use one of our few\n+     * outbound connection slots for or for us to wish to prioritize keeping\n+     * their connection around.\n+     *\n+     * Relevant service flags may be peer- and state-specific in that the\n+     * version of the peer may determine which flags are required (eg in the\n+     * case of NODE_NETWORK_LIMITED where we seek out NODE_NETWORK peers\n+     * unless they set NODE_NETWORK_LIMITED and we are out of IBD, in which\n+     * case NODE_NETWORK_LIMITED suffices).",
      "path": "src/net_processing.h",
      "position": 28,
      "original_position": 17,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "in_reply_to_id": 1418751438,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> What is meant by \"the version of the peer\" here?\r\n\r\nIt is talking about the version message. `NetMsgType::VERSION`. Which informs the supported services to the other end.",
      "created_at": "2023-12-15T13:25:52Z",
      "updated_at": "2023-12-15T14:13:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1427973929",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1427973929"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": 122,
      "original_start_line": 122,
      "start_side": "RIGHT",
      "line": 126,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1427974175",
      "pull_request_review_id": 1784007714,
      "id": 1427974175,
      "node_id": "PRRC_kwDOABII585VHSgf",
      "diff_hunk": "@@ -110,6 +110,29 @@ class PeerManager : public CValidationInterface, public NetEventsInterface\n \n     /** This function is used for testing the stale tip eviction logic, see denialofservice_tests.cpp */\n     virtual void UpdateLastBlockAnnounceTime(NodeId node, int64_t time_in_seconds) = 0;\n+\n+    /**\n+     * Gets the set of service flags which are \"desirable\" for a given peer.\n+     *\n+     * These are the flags which are required for a peer to support for them\n+     * to be \"interesting\" to us, ie for us to wish to use one of our few\n+     * outbound connection slots for or for us to wish to prioritize keeping",
      "path": "src/net_processing.h",
      "position": 21,
      "original_position": 10,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "in_reply_to_id": 1418747776,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "sure",
      "created_at": "2023-12-15T13:26:10Z",
      "updated_at": "2023-12-15T14:13:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1427974175",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1427974175"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 119,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1428012937",
      "pull_request_review_id": 1784007714,
      "id": 1428012937,
      "node_id": "PRRC_kwDOABII585VHb-J",
      "diff_hunk": "@@ -721,8 +723,9 @@ class PeerManagerImpl final : public PeerManager\n     bool RejectIncomingTxs(const CNode& peer) const;\n \n     /** Whether we've completed initial sync yet, for determining when to turn\n-      * on extra block-relay-only peers. */\n-    bool m_initial_sync_finished GUARDED_BY(cs_main){false};\n+      * on extra block-relay-only peers and the peer connections desirable\n+      * services flags. */\n+    std::atomic<bool> m_is_close_to_tip{false};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "in_reply_to_id": 1420215938,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "There isn't a behavior change here. `StartExtraBlockRelayPeers()` can only be executed once, then it runs for the entire software lifetime. \r\n\r\nI don't think the base condition is different. Both action paths depend on the proximity to the tip. The extra block-relay-only peers functionality is activated when the node is close to the tip (20 blocks away). And the \"desirable service flags\" is modified on the opposite direction, when the node detect it is further than 288 blocks from the tip.\r\n\r\nI think we should try to consolidate concepts that can be unified instead of continuing adding independent checks for each feature/validation we have.\r\nAdditionally, something that I had floating around my head when I did this was to transform the `m_initial_sync_finished` (now named `m_is_close_to_tip`) into a `SyncState` field with the different states the sync process could have (sync, close to tip, recent_lagging_behind, not sync) and a bool flag field to denote whether the chain is moving forward or not (if there is any in-flight blocks and the last received block is close to the node's clock time etc).",
      "created_at": "2023-12-15T14:06:43Z",
      "updated_at": "2023-12-15T14:13:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1428012937",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1428012937"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 725,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 728,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1428016068",
      "pull_request_review_id": 1784007714,
      "id": 1428016068,
      "node_id": "PRRC_kwDOABII585VHcvE",
      "diff_hunk": "@@ -1292,19 +1302,32 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n     });\n }\n \n-bool PeerManagerImpl::TipMayBeStale()\n+PeerManagerImpl::Staleness PeerManagerImpl::TipMayBeStale()\n {\n     AssertLockHeld(cs_main);\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n     if (m_last_tip_update.load() == 0s) {\n         m_last_tip_update = GetTime<std::chrono::seconds>();\n     }\n-    return m_last_tip_update.load() < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty();\n+\n+    auto last_update_time = m_last_tip_update.load();\n+    if (last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty()) {\n+        // If tip is further than NODE_NETWORK_LIMITED_MIN_BLOCKS, we are really behind and shouldn't connect to limited peers anymore.\n+        Assume(NODE_NETWORK_LIMITED_MIN_BLOCKS > 3);\n+        bool past_net_limited = last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * NODE_NETWORK_LIMITED_MIN_BLOCKS};\n+        return past_net_limited ? Staleness::StalePastNetworkLimited : Staleness::Stale;\n+    }\n+    return Staleness::NotStale;\n+}\n+\n+static bool IsBlockCloseToTip(const CBlockIndex* index, const Consensus::Params& consensus)\n+{\n+    return index->Time() > GetAdjustedTime() - consensus.PowTargetSpacing() * 20;\n }",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 78,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "in_reply_to_id": 1420201385,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "sure, `IsBlockRecent()` sounds good.",
      "created_at": "2023-12-15T14:09:42Z",
      "updated_at": "2023-12-15T14:13:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1428016068",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1428016068"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 1323,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1328,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1428018613",
      "pull_request_review_id": 1784007714,
      "id": 1428018613,
      "node_id": "PRRC_kwDOABII585VHdW1",
      "diff_hunk": "@@ -2039,7 +2076,16 @@ void PeerManagerImpl::NewPoWValidBlock(const CBlockIndex *pindex, const std::sha\n void PeerManagerImpl::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload)\n {\n     SetBestHeight(pindexNew->nHeight);\n-    SetServiceFlagsIBDCache(!fInitialDownload);\n+\n+    // Update internal sync state.\n+    // Avoid using 'fInitialDownload' alone since the flag currently cannot go backwards after passing IBD once.\n+    // This means that, after completing sync for the first time, 'fInitialDownload' will remain true even\n+    // when the node has been stalled for days and the arriving block is within the IBD window.\n+    if (!fInitialDownload && IsBlockCloseToTip(pindexNew, m_chainparams.GetConsensus())) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 118,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "in_reply_to_id": 1420242098,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Seems like `!fInitialDownload && ` can be removed? If `IsBlockCloseToTip()` is `true` then that block is 3h20min or younger. In this case `fInitialDownload` will always be `false` because it uses 24h, right?\r\n\r\nIt is a simple and quick check to not execute `IsBlockCloseToTip()` during IBD at all.",
      "created_at": "2023-12-15T14:12:11Z",
      "updated_at": "2023-12-15T14:13:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1428018613",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1428018613"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2084,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1428467257",
      "pull_request_review_id": 1784900600,
      "id": 1428467257,
      "node_id": "PRRC_kwDOABII585VJK45",
      "diff_hunk": "@@ -2039,7 +2076,16 @@ void PeerManagerImpl::NewPoWValidBlock(const CBlockIndex *pindex, const std::sha\n void PeerManagerImpl::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload)\n {\n     SetBestHeight(pindexNew->nHeight);\n-    SetServiceFlagsIBDCache(!fInitialDownload);\n+\n+    // Update internal sync state.\n+    // Avoid using 'fInitialDownload' alone since the flag currently cannot go backwards after passing IBD once.\n+    // This means that, after completing sync for the first time, 'fInitialDownload' will remain true even\n+    // when the node has been stalled for days and the arriving block is within the IBD window.\n+    if (!fInitialDownload && IsBlockCloseToTip(pindexNew, m_chainparams.GetConsensus())) {\n+        // At this point, only move the flag forward. The responsibility of setting the flag backwards is on\n+        // the 'CheckForStaleTip' process, which performs a more exhaustive stale tip verification.",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 120,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "in_reply_to_id": 1420254312,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> and C should be just \"our highest block is older than 48h\" (regardless of whether mapBlocksInFlight is empty) => then don't connect to limited peers.\r\n\r\nHmm, this observation makes me think..\r\nwhat if `m_is_close_to_tip=true` and then the node lags behind; there could be an edge case scenario where the node starts slowly syncing-up the historical blocks before `CheckForStaleTipAndEvictPeers()` is executed, so `mapBlocksInFlight` wouldn't be empty, so.. it would still connect to limited peers even when it is behind what they can provide.\r\nThis is what you have in mind?",
      "created_at": "2023-12-15T20:49:11Z",
      "updated_at": "2023-12-15T20:49:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1428467257",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1428467257"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 2085,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2086,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1430198623",
      "pull_request_review_id": 1786984692,
      "id": 1430198623,
      "node_id": "PRRC_kwDOABII585VPxlf",
      "diff_hunk": "@@ -2039,7 +2076,16 @@ void PeerManagerImpl::NewPoWValidBlock(const CBlockIndex *pindex, const std::sha\n void PeerManagerImpl::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload)\n {\n     SetBestHeight(pindexNew->nHeight);\n-    SetServiceFlagsIBDCache(!fInitialDownload);\n+\n+    // Update internal sync state.\n+    // Avoid using 'fInitialDownload' alone since the flag currently cannot go backwards after passing IBD once.\n+    // This means that, after completing sync for the first time, 'fInitialDownload' will remain true even\n+    // when the node has been stalled for days and the arriving block is within the IBD window.\n+    if (!fInitialDownload && IsBlockCloseToTip(pindexNew, m_chainparams.GetConsensus())) {\n+        // At this point, only move the flag forward. The responsibility of setting the flag backwards is on\n+        // the 'CheckForStaleTip' process, which performs a more exhaustive stale tip verification.",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 120,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "in_reply_to_id": 1420254312,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I was just thinking on ways to simplify this. `CheckForStaleTipAndEvictPeers()` is executed every 45 seconds. I think it is ok if for a while (~ 10 mins) we think we are close to the tip but we are not in practice. Given that we realize this in a few minutes and don't get stuck with the wrong assumption forever.",
      "created_at": "2023-12-18T14:15:45Z",
      "updated_at": "2023-12-18T14:15:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1430198623",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1430198623"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 2085,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2086,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1430238465",
      "pull_request_review_id": 1787049523,
      "id": 1430238465,
      "node_id": "PRRC_kwDOABII585VP7UB",
      "diff_hunk": "@@ -5235,6 +5244,11 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (super_stale) {\n+        // Disable extra block relay peers and disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_connman.StopExtraBlockRelayPeers();",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 63,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1296355296,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The problem this PR aims to resolve is that if we are too much behind (48h), then limited peers may not be able to give us the blocks we need. To resolve this problem, I think that it is not necessary to change the \"extra block relay only connections\" logic. IMO that better be done in a separate PR with its own justification.",
      "created_at": "2023-12-18T14:47:55Z",
      "updated_at": "2023-12-18T14:47:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1430238465",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1430238465"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1434906612",
      "pull_request_review_id": 1794246976,
      "id": 1434906612,
      "node_id": "PRRC_kwDOABII585Vhu_0",
      "diff_hunk": "@@ -1754,13 +1754,15 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     // ********************************************************* Step 12: start node\n \n     //// debug print\n+    uint64_t best_block_time;",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`GetBlockTime()` returns `int64_t`. This could possibly cause some compiler warning about assigning signed integer to an unsigned variable. Better use the same type as the return type of the function.",
      "created_at": "2023-12-22T09:56:27Z",
      "updated_at": "2023-12-22T10:53:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1434906612",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1434906612"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1757,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1434908033",
      "pull_request_review_id": 1794246976,
      "id": 1434908033,
      "node_id": "PRRC_kwDOABII585VhvWB",
      "diff_hunk": "@@ -721,6 +727,8 @@ class PeerManagerImpl final : public PeerManager\n \n     /** The height of the best chain */\n     std::atomic<int> m_best_height{-1};\n+    /** The time of the best chain tip block */\n+    std::atomic<std::chrono::seconds > m_best_block_time{0s};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:\r\n```suggestion\r\n    std::atomic<std::chrono::seconds> m_best_block_time{0s};\r\n```",
      "created_at": "2023-12-22T09:58:13Z",
      "updated_at": "2023-12-22T10:53:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1434908033",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1434908033"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 731,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1434912424",
      "pull_request_review_id": 1794246976,
      "id": 1434912424,
      "node_id": "PRRC_kwDOABII585Vhwao",
      "diff_hunk": "@@ -93,7 +93,7 @@ class PeerManager : public CValidationInterface, public NetEventsInterface\n     virtual void SendPings() = 0;\n \n     /** Set the best height */\n-    virtual void SetBestHeight(int height) = 0;\n+    virtual void SetBestBlock(int height, uint64_t time) = 0;",
      "path": "src/net_processing.h",
      "position": null,
      "original_position": 5,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe change the argument from `uint64_t` to `std::chrono::seconds`, so that the units of it are more clear. The comment warrants an update:\r\n\r\n```cpp\r\n/** Set the height of the best block and its time (seconds since epoch). */\r\nvirtual void SetBestBlock(int height, std::chrono::seconds time) = 0;\r\n```",
      "created_at": "2023-12-22T10:03:27Z",
      "updated_at": "2023-12-22T10:53:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1434912424",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1434912424"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 95,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1434937507",
      "pull_request_review_id": 1794246976,
      "id": 1434937507,
      "node_id": "PRRC_kwDOABII585Vh2ij",
      "diff_hunk": "@@ -1651,6 +1672,20 @@ void PeerManagerImpl::FinalizeNode(const CNode& node)\n     LogPrint(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", nodeid);\n }\n \n+bool PeerManagerImpl::HasAllDesirableServiceFlags(ServiceFlags services) const\n+{\n+    // Shortcut for (services & GetDesirableServiceFlags(services)) == GetDesirableServiceFlags(services)\n+    return !(GetDesirableServiceFlags(services) & (~services));\n+}\n+\n+ServiceFlags PeerManagerImpl::GetDesirableServiceFlags(ServiceFlags services) const\n+{\n+    if (services & NODE_NETWORK_LIMITED) {\n+        if (m_allow_limited_peers_conn) return ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 76,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I like how the best block's time is cached in `PeerManagerImpl::m_best_block_time` but further caching the expression \"is the best block time older than 288 blocks\" seems excessive and unnecessary to me. It makes the code more complex and obviously gets stale one second after it is set.\r\n\r\nHere you can use something like:\r\n```cpp\r\nif (ApproximateBestBlockAgeInNumberOfBlocks() < NODE_NETWORK_LIMITED_MIN_BLOCKS) {\r\n    return ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS);\r\n}\r\n...\r\nint64_t ApproximateBestBlockAgeInNumberOfBlocks() {\r\n    return (GetTime<std::chrono::seconds>() - m_best_block_time.load()) / m_chainparams.GetConsensus().nPowTargetSpacing;\r\n}\r\n```\r\n\r\nThen the following hunks can be dropped from commit 5b4e031b437922735ff2676fa90fbf3d404ab44f `net: peer manager, dynamically adjust desirable services flag`:\r\n\r\n```diff\r\n@@ -787,12 +787,15 @@ private:\r\n     /** Number of preferable block download peers. */\r\n     int m_num_preferred_download_peers GUARDED_BY(cs_main){0};\r\n     \r\n     /** Stalling timeout for blocks in IBD */\r\n     std::atomic<std::chrono::seconds> m_block_stalling_timeout{BLOCK_STALLING_TIMEOUT_DEFAULT};\r\n \r\n+    /** Whether limited peers connections are accepted or not */\r\n+    std::atomic<bool> m_allow_limited_peers_conn{false};\r\n+\r\n     bool AlreadyHaveTx(const GenTxid& gtxid)\r\n         EXCLUSIVE_LOCKS_REQUIRED(cs_main, !m_recent_confirmed_transactions_mutex);\r\n     \r\n     /**\r\n      * Filter for transactions that were recently rejected by the mempool.\r\n      * These are not rerequested until the chain tip changes, at which point\r\n@@ -1072,12 +1075,22 @@ private:\r\n      *            False if address relay is disallowed\r\n      */\r\n     bool SetupAddressRelay(const CNode& node, Peer& peer) EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);\r\n     \r\n     void AddAddressKnown(Peer& peer, const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);\r\n     void PushAddress(Peer& peer, const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(g_msgproc_mutex);\r\n+\r\n+    /**\r\n+     * Updates the contextual information will be used within the connections\r\n+     * desirable services flags decision-making process.\r\n+     */\r\n+    void MaybeUpdateDesirableConnOptions() {\r\n+        // If tip is further than NODE_NETWORK_LIMITED_MIN_BLOCKS, we are really behind and shouldn't connect to limit\r\n+        std::chrono::seconds time_between_blocks{m_chainparams.GetConsensus().nPowTargetSpacing};\r\n+        m_allow_limited_peers_conn = m_best_block_time.load() > GetTime<std::chrono::seconds>() - time_between_blocks \r\n+    }\r\n };\r\n \r\n const CNodeState* PeerManagerImpl::State(NodeId pnode) const EXCLUSIVE_LOCKS_REQUIRED(cs_main)\r\n {\r\n     std::map<NodeId, CNodeState>::const_iterator it = m_node_states.find(pnode);\r\n     if (it == m_node_states.end())\r\n@@ -2068,12 +2080,13 @@ void PeerManagerImpl::NewPoWValidBlock(const CBlockIndex *pindex, const std::sha\r\n  * Update our best height and announce any block hashes which weren't previously\r\n  * in m_chainman.ActiveChain() to our peers.\r\n  */\r\n void PeerManagerImpl::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownlo\r\n {\r\n     SetBestBlock(pindexNew->nHeight, pindexNew->GetBlockTime());\r\n+    MaybeUpdateDesirableConnOptions();\r\n     SetServiceFlagsIBDCache(!fInitialDownload);\r\n     \r\n     // Don't relay inventory during initial block download.\r\n     if (fInitialDownload) return;\r\n     \r\n     // Find the hashes of all blocks that weren't previously in the best chain.\r\n@@ -5272,21 +5285,28 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\r\n     \r\n     auto now{GetTime<std::chrono::seconds>()};\r\n     \r\n     EvictExtraOutboundPeers(now);\r\n     \r\n     if (now > m_stale_tip_check_time) {\r\n-        // Check whether our tip is stale, and if so, allow using an extra\r\n-        // outbound peer\r\n-        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing(\r\n-            LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds a\r\n-                      count_seconds(now - m_last_tip_update.load()));\r\n-            m_connman.SetTryNewOutboundPeer(true);\r\n-        } else if (m_connman.GetTryNewOutboundPeer()) {\r\n-            m_connman.SetTryNewOutboundPeer(false);\r\n+        // Skip checks when blocks are being loaded from disk or the network is disabled\r\n+        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive()) {\r\n+            // Check whether our tip is stale, and if so, allow using an extra outbound peer\r\n+            if (m_connman.GetUseAddrmanOutgoing() && TipMayBeStale()) {\r\n+                LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d secon\r\n+                          count_seconds(now - m_last_tip_update.load()));\r\n+                m_connman.SetTryNewOutboundPeer(true);\r\n+            } else if (m_connman.GetTryNewOutboundPeer()) {\r\n+                m_connman.SetTryNewOutboundPeer(false);\r\n+            }\r\n+\r\n+            // Update connections desirable services flags in case we need to. For instance,\r\n+            // the tip could be lagging behind, further than the limited peers threshold.\r\n+            MaybeUpdateDesirableConnOptions();\r\n         }\r\n+\r\n         m_stale_tip_check_time = now + STALE_CHECK_INTERVAL;\r\n     }\r\n```\r\n```",
      "created_at": "2023-12-22T10:34:26Z",
      "updated_at": "2023-12-22T10:53:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1434937507",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1434937507"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1684,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1434938857",
      "pull_request_review_id": 1794246976,
      "id": 1434938857,
      "node_id": "PRRC_kwDOABII585Vh23p",
      "diff_hunk": "@@ -0,0 +1,79 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <node/miner.h>\n+#include <net_processing.h>\n+#include <pow.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(peerman_tests, RegTestingSetup)\n+\n+static constexpr int64_t NODE_NETWORK_LIMITED_MIN_BLOCKS = 288;",
      "path": "src/test/peerman_tests.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Better expose this constant in `net_processing.h` instead of duplicating it here. This file already includes `net_processing.h`.",
      "created_at": "2023-12-22T10:36:24Z",
      "updated_at": "2023-12-22T10:53:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1434938857",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1434938857"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1434948774",
      "pull_request_review_id": 1794246976,
      "id": 1434948774,
      "node_id": "PRRC_kwDOABII585Vh5Sm",
      "diff_hunk": "@@ -125,18 +123,6 @@ bool CMessageHeader::IsCommandValid() const\n     return true;\n }\n \n-\n-ServiceFlags GetDesirableServiceFlags(ServiceFlags services) {\n-    if ((services & NODE_NETWORK_LIMITED) && g_initial_block_download_completed) {",
      "path": "src/protocol.cpp",
      "position": 15,
      "original_position": 15,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Commit a710e08398 `net: move state dependent peer services flags` moves this code to `src/net_processing.cpp` and changes from `g_initial_block_download_completed` to `m_initial_sync_finished`. The variable `m_initial_sync_finished` is used for something else and has a different semantic, thus using `m_initial_sync_finished` here is wrong. Later another commit changes from `m_initial_sync_finished` to the proper check.\r\n\r\nI think it would be better to reorder the commits, so that the proper check (either `m_allow_limited_peers_conn` or `ApproximateBestBlockAgeInNumberOfBlocks()` as I suggested in another comment) is already available in peerman and so when `GetDesirableServiceFlags()` is moved, it switches the proper check right away.",
      "created_at": "2023-12-22T10:50:03Z",
      "updated_at": "2023-12-22T10:53:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1434948774",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1434948774"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 130,
      "original_line": 130,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1434962398",
      "pull_request_review_id": 1794332231,
      "id": 1434962398,
      "node_id": "PRRC_kwDOABII585Vh8ne",
      "diff_hunk": "@@ -5252,15 +5287,22 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n     EvictExtraOutboundPeers(now);\n \n     if (now > m_stale_tip_check_time) {\n-        // Check whether our tip is stale, and if so, allow using an extra\n-        // outbound peer\n-        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing() && TipMayBeStale()) {\n-            LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\",\n-                      count_seconds(now - m_last_tip_update.load()));\n-            m_connman.SetTryNewOutboundPeer(true);\n-        } else if (m_connman.GetTryNewOutboundPeer()) {\n-            m_connman.SetTryNewOutboundPeer(false);\n+        // Skip checks when blocks are being loaded from disk or the network is disabled\n+        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive()) {\n+            // Check whether our tip is stale, and if so, allow using an extra outbound peer\n+            if (m_connman.GetUseAddrmanOutgoing() && TipMayBeStale()) {\n+                LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\",\n+                          count_seconds(now - m_last_tip_update.load()));\n+                m_connman.SetTryNewOutboundPeer(true);\n+            } else if (m_connman.GetTryNewOutboundPeer()) {\n+                m_connman.SetTryNewOutboundPeer(false);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 115,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The conditions under which `m_connman.SetTryNewOutboundPeer(false);` is executed are not the same before and after this change. Maybe it is ok, but is an unrelated change to the aim of this PR:\r\n\r\n* before `m_connman.SetTryNewOutboundPeer(false)` would have been executed if this was true:\r\n```cpp\r\n(m_chainman.m_blockman.LoadingBlocks() || !m_connman.GetNetworkActive() || !m_connman.GetUseAddrmanOutgoing() || !TipMayBeStale()) && m_connman.GetTryNewOutboundPeer()\r\n```\r\n\r\n* after `m_connman.SetTryNewOutboundPeer(false)` will be executed if this is true:\r\n```cpp\r\n!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && (!m_connman.GetUseAddrmanOutgoing() || !TipMayBeStale()) && m_connman.GetTryNewOutboundPeer()\r\n```\r\n\r\nHopefully this entire hunk can be [dropped](https://github.com/bitcoin/bitcoin/pull/28170/files#r1434937507).",
      "created_at": "2023-12-22T11:04:49Z",
      "updated_at": "2023-12-22T11:05:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1434962398",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1434962398"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 5255,
      "start_side": "LEFT",
      "line": null,
      "original_line": 5298,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435094066",
      "pull_request_review_id": 1794548518,
      "id": 1435094066,
      "node_id": "PRRC_kwDOABII585Vicwy",
      "diff_hunk": "@@ -1754,13 +1754,15 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     // ********************************************************* Step 12: start node\n \n     //// debug print\n+    uint64_t best_block_time;",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "in_reply_to_id": 1434906612,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2023-12-22T14:15:07Z",
      "updated_at": "2023-12-22T14:15:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1435094066",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435094066"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1757,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435094504",
      "pull_request_review_id": 1794548934,
      "id": 1435094504,
      "node_id": "PRRC_kwDOABII585Vic3o",
      "diff_hunk": "@@ -93,7 +93,7 @@ class PeerManager : public CValidationInterface, public NetEventsInterface\n     virtual void SendPings() = 0;\n \n     /** Set the best height */\n-    virtual void SetBestHeight(int height) = 0;\n+    virtual void SetBestBlock(int height, uint64_t time) = 0;",
      "path": "src/net_processing.h",
      "position": null,
      "original_position": 5,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "in_reply_to_id": 1434912424,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done as suggested",
      "created_at": "2023-12-22T14:15:28Z",
      "updated_at": "2023-12-22T14:15:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1435094504",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435094504"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 95,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435096415",
      "pull_request_review_id": 1794550911,
      "id": 1435096415,
      "node_id": "PRRC_kwDOABII585VidVf",
      "diff_hunk": "@@ -1651,6 +1672,20 @@ void PeerManagerImpl::FinalizeNode(const CNode& node)\n     LogPrint(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", nodeid);\n }\n \n+bool PeerManagerImpl::HasAllDesirableServiceFlags(ServiceFlags services) const\n+{\n+    // Shortcut for (services & GetDesirableServiceFlags(services)) == GetDesirableServiceFlags(services)\n+    return !(GetDesirableServiceFlags(services) & (~services));\n+}\n+\n+ServiceFlags PeerManagerImpl::GetDesirableServiceFlags(ServiceFlags services) const\n+{\n+    if (services & NODE_NETWORK_LIMITED) {\n+        if (m_allow_limited_peers_conn) return ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 76,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "in_reply_to_id": 1434937507,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Sure, thanks!. Done as suggested.",
      "created_at": "2023-12-22T14:17:04Z",
      "updated_at": "2023-12-22T14:17:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1435096415",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435096415"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1684,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435097429",
      "pull_request_review_id": 1794551908,
      "id": 1435097429,
      "node_id": "PRRC_kwDOABII585VidlV",
      "diff_hunk": "@@ -5252,15 +5287,22 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n     EvictExtraOutboundPeers(now);\n \n     if (now > m_stale_tip_check_time) {\n-        // Check whether our tip is stale, and if so, allow using an extra\n-        // outbound peer\n-        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing() && TipMayBeStale()) {\n-            LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\",\n-                      count_seconds(now - m_last_tip_update.load()));\n-            m_connman.SetTryNewOutboundPeer(true);\n-        } else if (m_connman.GetTryNewOutboundPeer()) {\n-            m_connman.SetTryNewOutboundPeer(false);\n+        // Skip checks when blocks are being loaded from disk or the network is disabled\n+        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive()) {\n+            // Check whether our tip is stale, and if so, allow using an extra outbound peer\n+            if (m_connman.GetUseAddrmanOutgoing() && TipMayBeStale()) {\n+                LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\",\n+                          count_seconds(now - m_last_tip_update.load()));\n+                m_connman.SetTryNewOutboundPeer(true);\n+            } else if (m_connman.GetTryNewOutboundPeer()) {\n+                m_connman.SetTryNewOutboundPeer(false);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 115,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "in_reply_to_id": 1434962398,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Dropped per comment https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1434937507. Thanks",
      "created_at": "2023-12-22T14:17:56Z",
      "updated_at": "2023-12-22T14:17:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1435097429",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435097429"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 5255,
      "start_side": "LEFT",
      "line": null,
      "original_line": 5298,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435097994",
      "pull_request_review_id": 1794552497,
      "id": 1435097994,
      "node_id": "PRRC_kwDOABII585ViduK",
      "diff_hunk": "@@ -125,18 +123,6 @@ bool CMessageHeader::IsCommandValid() const\n     return true;\n }\n \n-\n-ServiceFlags GetDesirableServiceFlags(ServiceFlags services) {\n-    if ((services & NODE_NETWORK_LIMITED) && g_initial_block_download_completed) {",
      "path": "src/protocol.cpp",
      "position": 15,
      "original_position": 15,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "in_reply_to_id": 1434948774,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Sure. Have reordered the commits and decoupled the behavior change into an standalone commit.",
      "created_at": "2023-12-22T14:18:27Z",
      "updated_at": "2023-12-22T14:19:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1435097994",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435097994"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 130,
      "original_line": 130,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435131324",
      "pull_request_review_id": 1794590185,
      "id": 1435131324,
      "node_id": "PRRC_kwDOABII585Vil28",
      "diff_hunk": "@@ -0,0 +1,79 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <node/miner.h>\n+#include <net_processing.h>\n+#include <pow.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(peerman_tests, RegTestingSetup)\n+\n+static constexpr int64_t NODE_NETWORK_LIMITED_MIN_BLOCKS = 288;",
      "path": "src/test/peerman_tests.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "in_reply_to_id": 1434938857,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is the only change I did not implement. I think we should discuss further where to place this constants before moving them to the header. It seems that with every new unit test, we will be forced to move some/most constants from `net_processing.cpp` to the header.",
      "created_at": "2023-12-22T14:47:58Z",
      "updated_at": "2023-12-22T14:47:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1435131324",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435131324"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1440386706",
      "pull_request_review_id": 1801890561,
      "id": 1440386706,
      "node_id": "PRRC_kwDOABII585V2o6S",
      "diff_hunk": "@@ -0,0 +1,79 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <node/miner.h>\n+#include <net_processing.h>\n+#include <pow.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(peerman_tests, RegTestingSetup)\n+\n+static constexpr int64_t NODE_NETWORK_LIMITED_MIN_BLOCKS = 288;",
      "path": "src/test/peerman_tests.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "in_reply_to_id": 1434938857,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "No strong opinion. To me `net_processing.h` looks like the natural place to move/expose the constant(s) that were defined as `static` in `net_processing.cpp` if they need to be used outside of that `cpp` file. Do you somehow dislike that idea or have another one?\r\n\r\nI dislike having them duplicated because then there is a chance that they will go out of sync. Also, in semantic completion tools one can point to a symbol and ask \"show me all places where this is used\". If what is used in the test is defined in the test file (duplicated) then usages of it from other files will not be shown.",
      "created_at": "2024-01-03T12:16:23Z",
      "updated_at": "2024-01-03T12:16:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1440386706",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1440386706"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1440574231",
      "pull_request_review_id": 1802398212,
      "id": 1440574231,
      "node_id": "PRRC_kwDOABII585V3WsX",
      "diff_hunk": "@@ -0,0 +1,79 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <node/miner.h>\n+#include <net_processing.h>\n+#include <pow.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(peerman_tests, RegTestingSetup)\n+\n+static constexpr int64_t NODE_NETWORK_LIMITED_MIN_BLOCKS = 288;",
      "path": "src/test/peerman_tests.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "in_reply_to_id": 1434938857,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> To me `net_processing.h` looks like the natural place to move/expose the constant(s) that were defined as `static` in `net_processing.cpp` if they need to be used outside of that `cpp` file. Do you somehow dislike that idea or have another one?\r\n\r\nI don't totally dislike it, but was pondering the option of moving them to a separate file for two reasons; I find the spread of constants across the sources hard to maintain, and I was also thinking about another testing scenario: what if we want to exercise a net flow on a higher level, and use only the node interface without accessing `net_processing.h` classes?. For example, testing the eviction of net-limited peers when the node gets stalled. In this case, we might want to use the constant to setup the test without introducing a `net_processing.h` dependency (e.g. use node.connect(), then node.listPeers(), then, after certain context changes, call node.listPeers() again to verify the state).\r\n\r\nThat being said, I'm probably going too far and we should just move this constant to the header for now.",
      "created_at": "2024-01-03T15:19:19Z",
      "updated_at": "2024-01-03T15:19:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1440574231",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1440574231"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1451813298",
      "pull_request_review_id": 1820309688,
      "id": 1451813298,
      "node_id": "PRRC_kwDOABII585WiOmy",
      "diff_hunk": "@@ -1754,13 +1754,15 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     // ********************************************************* Step 12: start node\n \n     //// debug print\n+    int64_t best_block_time;",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "8fff455dd66b5f81448ac210459916c53134f885",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: `int64_t best_block_time{};`",
      "created_at": "2024-01-14T22:15:49Z",
      "updated_at": "2024-01-14T23:06:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1451813298",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1451813298"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1757,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1451813562",
      "pull_request_review_id": 1820309688,
      "id": 1451813562,
      "node_id": "PRRC_kwDOABII585WiOq6",
      "diff_hunk": "@@ -2273,7 +2273,7 @@ void CConnman::ThreadDNSAddressSeed()\n             AddAddrFetch(seed);\n         } else {\n             std::vector<CAddress> vAdd;\n-            ServiceFlags requiredServiceBits = GetDesirableServiceFlags(NODE_NONE);\n+            ServiceFlags requiredServiceBits = SeedsServiceFlags();",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "9683d11268f4dd07e2a28124baff14f50c0be462",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: prefer list initialization, could also make this `constexpr` since we're modifying it.\r\n`constexpr ServiceFlags requiredServiceBits{SeedsServiceFlags()};`",
      "created_at": "2024-01-14T22:17:24Z",
      "updated_at": "2024-01-14T23:06:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1451813562",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1451813562"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2276,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1451815522",
      "pull_request_review_id": 1820309688,
      "id": 1451815522,
      "node_id": "PRRC_kwDOABII585WiPJi",
      "diff_hunk": "@@ -1678,8 +1678,11 @@ bool PeerManagerImpl::HasAllDesirableServiceFlags(ServiceFlags services) const\n \n ServiceFlags PeerManagerImpl::GetDesirableServiceFlags(ServiceFlags services) const\n {\n-    if (services & NODE_NETWORK_LIMITED && GetServicesFlagsIBDCache()) {\n-        return ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS);\n+    if (services & NODE_NETWORK_LIMITED) {\n+        // Limited peers are desirable when we are close to the tip.\n+        if (ApproximateBestBlockDepth() < NODE_NETWORK_LIMITED_MIN_BLOCKS) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "5b50a6d2c624bd1998fd9ac0b1c1da0dcc7a1f7e",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Could be one line\r\n```\r\n    // Limited peers are desirable when we are close to the tip.\r\n    if ((services & NODE_NETWORK_LIMITED) && ApproximateBestBlockDepth() < NODE_NETWORK_LIMITED_MIN_BLOCKS) {\r\n```",
      "created_at": "2024-01-14T22:29:54Z",
      "updated_at": "2024-01-14T23:06:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1451815522",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1451815522"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1683,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1451815870",
      "pull_request_review_id": 1820309688,
      "id": 1451815870,
      "node_id": "PRRC_kwDOABII585WiPO-",
      "diff_hunk": "@@ -0,0 +1,79 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers",
      "path": "src/test/peerman_tests.cpp",
      "position": null,
      "original_position": 1,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "3f342bab41fefc0ffabeb63fcf6af74bcbb6068f",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: `2024`",
      "created_at": "2024-01-14T22:32:13Z",
      "updated_at": "2024-01-14T23:06:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1451815870",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1451815870"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1451818095",
      "pull_request_review_id": 1820309688,
      "id": 1451818095,
      "node_id": "PRRC_kwDOABII585WiPxv",
      "diff_hunk": "@@ -0,0 +1,79 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <node/miner.h>\n+#include <net_processing.h>\n+#include <pow.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(peerman_tests, RegTestingSetup)\n+\n+static constexpr int64_t NODE_NETWORK_LIMITED_MIN_BLOCKS = 288;\n+\n+static void mineBlock(const node::NodeContext& node, std::chrono::seconds block_time)\n+{\n+    auto curr_time = GetTime<std::chrono::seconds>();\n+    SetMockTime(block_time); // update time so the block is created with it\n+    CBlock block = node::BlockAssembler{node.chainman->ActiveChainstate(), nullptr}.CreateNewBlock(CScript() << OP_TRUE)->block;\n+    while (!CheckProofOfWork(block.GetHash(), block.nBits, node.chainman->GetConsensus())) ++block.nNonce;\n+    block.fChecked = true; // little speedup\n+    SetMockTime(curr_time); // process block at current time\n+    Assert(node.chainman->ProcessNewBlock(std::make_shared<const CBlock>(block), /*force_processing=*/true, /*min_pow_checked=*/true, nullptr));\n+    SyncWithValidationInterfaceQueue(); // drain events queue\n+}\n+\n+// Verifying when network-limited peer connections are desirable based on the node's proximity to the tip\n+BOOST_AUTO_TEST_CASE(connections_desirable_service_flags)\n+{\n+    std::unique_ptr<PeerManager> peerman = PeerManager::make(*m_node.connman, *m_node.addrman, nullptr, *m_node.chainman, *m_node.mempool, {});\n+    auto consensus = m_node.chainman->GetParams().GetConsensus();\n+\n+    // Check we start connecting to full nodes\n+    ServiceFlags peer_flags{NODE_WITNESS | NODE_NETWORK_LIMITED};\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Make peerman aware of the initial best block and verify we accept limited peers when we start close to the tip time.\n+    auto tip = WITH_LOCK(::cs_main, return m_node.chainman->ActiveChain().Tip());\n+    uint64_t tip_block_time = tip->GetBlockTime();\n+    int tip_block_height = tip->nHeight;\n+    peerman->SetBestBlock(tip_block_height, std::chrono::seconds{tip_block_time});\n+\n+    SetMockTime(tip_block_time + 1); // Set node time to tip time\n+    peerman->CheckForStaleTipAndEvictPeers();  // Trigger status update\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Check we don't disallow limited peers connections when we are behind but still recoverable (below NODE_NETWORK_LIMITED_MIN_BLOCKS)\n+    SetMockTime(GetTime<std::chrono::seconds>() + std::chrono::seconds{consensus.nPowTargetSpacing * (NODE_NETWORK_LIMITED_MIN_BLOCKS - 1)});\n+    peerman->CheckForStaleTipAndEvictPeers();\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Check we disallow limited peers connections when we are further than the limited peers threshold (NODE_NETWORK_LIMITED_MIN_BLOCKS)\n+    SetMockTime(GetTime<std::chrono::seconds>() + std::chrono::seconds{consensus.nPowTargetSpacing * 2});\n+    peerman->CheckForStaleTipAndEvictPeers();\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // By now, we tested that 'CheckForStaleTipAndEvictPeers' can set update the connections desirable services flags.",
      "path": "src/test/peerman_tests.cpp",
      "position": null,
      "original_position": 60,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "3f342bab41fefc0ffabeb63fcf6af74bcbb6068f",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit\r\n```\r\n// By now, we tested that 'CheckForStaleTipAndEvictPeers' can update the connections desirable services flags.\r\n```",
      "created_at": "2024-01-14T22:47:59Z",
      "updated_at": "2024-01-14T23:06:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1451818095",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1451818095"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1451818200",
      "pull_request_review_id": 1820309688,
      "id": 1451818200,
      "node_id": "PRRC_kwDOABII585WiPzY",
      "diff_hunk": "@@ -0,0 +1,79 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <node/miner.h>\n+#include <net_processing.h>\n+#include <pow.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(peerman_tests, RegTestingSetup)\n+\n+static constexpr int64_t NODE_NETWORK_LIMITED_MIN_BLOCKS = 288;\n+\n+static void mineBlock(const node::NodeContext& node, std::chrono::seconds block_time)\n+{\n+    auto curr_time = GetTime<std::chrono::seconds>();\n+    SetMockTime(block_time); // update time so the block is created with it\n+    CBlock block = node::BlockAssembler{node.chainman->ActiveChainstate(), nullptr}.CreateNewBlock(CScript() << OP_TRUE)->block;\n+    while (!CheckProofOfWork(block.GetHash(), block.nBits, node.chainman->GetConsensus())) ++block.nNonce;\n+    block.fChecked = true; // little speedup\n+    SetMockTime(curr_time); // process block at current time\n+    Assert(node.chainman->ProcessNewBlock(std::make_shared<const CBlock>(block), /*force_processing=*/true, /*min_pow_checked=*/true, nullptr));\n+    SyncWithValidationInterfaceQueue(); // drain events queue\n+}\n+\n+// Verifying when network-limited peer connections are desirable based on the node's proximity to the tip\n+BOOST_AUTO_TEST_CASE(connections_desirable_service_flags)\n+{\n+    std::unique_ptr<PeerManager> peerman = PeerManager::make(*m_node.connman, *m_node.addrman, nullptr, *m_node.chainman, *m_node.mempool, {});\n+    auto consensus = m_node.chainman->GetParams().GetConsensus();\n+\n+    // Check we start connecting to full nodes\n+    ServiceFlags peer_flags{NODE_WITNESS | NODE_NETWORK_LIMITED};\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Make peerman aware of the initial best block and verify we accept limited peers when we start close to the tip time.\n+    auto tip = WITH_LOCK(::cs_main, return m_node.chainman->ActiveChain().Tip());\n+    uint64_t tip_block_time = tip->GetBlockTime();\n+    int tip_block_height = tip->nHeight;\n+    peerman->SetBestBlock(tip_block_height, std::chrono::seconds{tip_block_time});\n+\n+    SetMockTime(tip_block_time + 1); // Set node time to tip time\n+    peerman->CheckForStaleTipAndEvictPeers();  // Trigger status update\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Check we don't disallow limited peers connections when we are behind but still recoverable (below NODE_NETWORK_LIMITED_MIN_BLOCKS)\n+    SetMockTime(GetTime<std::chrono::seconds>() + std::chrono::seconds{consensus.nPowTargetSpacing * (NODE_NETWORK_LIMITED_MIN_BLOCKS - 1)});\n+    peerman->CheckForStaleTipAndEvictPeers();\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Check we disallow limited peers connections when we are further than the limited peers threshold (NODE_NETWORK_LIMITED_MIN_BLOCKS)\n+    SetMockTime(GetTime<std::chrono::seconds>() + std::chrono::seconds{consensus.nPowTargetSpacing * 2});\n+    peerman->CheckForStaleTipAndEvictPeers();\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // By now, we tested that 'CheckForStaleTipAndEvictPeers' can set update the connections desirable services flags.\n+    // Now, perform the same tests for when the node receives a block.\n+    RegisterValidationInterface(peerman.get());\n+\n+    // First, verify a block in the past doesn't enable limited peers connections\n+    // At this point, our time is (NODE_NETWORK_LIMITED_MIN_BLOCKS + 1) * 10 minutes ahead the tip's time.\n+    mineBlock(m_node, /*block_time=*/std::chrono::seconds{tip_block_time + 1});\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Verify a block close to the tip enable limited peers connections",
      "path": "src/test/peerman_tests.cpp",
      "position": null,
      "original_position": 69,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "3f342bab41fefc0ffabeb63fcf6af74bcbb6068f",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit\r\n```\r\n// Verify a block close to the tip enables limited peers connections\r\n```",
      "created_at": "2024-01-14T22:48:39Z",
      "updated_at": "2024-01-14T23:06:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1451818200",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1451818200"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1452381283",
      "pull_request_review_id": 1821693643,
      "id": 1452381283,
      "node_id": "PRRC_kwDOABII585WkZRj",
      "diff_hunk": "@@ -1754,13 +1754,15 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     // ********************************************************* Step 12: start node\n \n     //// debug print\n+    int64_t best_block_time;",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "8fff455dd66b5f81448ac210459916c53134f885",
      "in_reply_to_id": 1451813298,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2024-01-15T13:31:31Z",
      "updated_at": "2024-01-15T13:32:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1452381283",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1452381283"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1757,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1452381462",
      "pull_request_review_id": 1821693643,
      "id": 1452381462,
      "node_id": "PRRC_kwDOABII585WkZUW",
      "diff_hunk": "@@ -2273,7 +2273,7 @@ void CConnman::ThreadDNSAddressSeed()\n             AddAddrFetch(seed);\n         } else {\n             std::vector<CAddress> vAdd;\n-            ServiceFlags requiredServiceBits = GetDesirableServiceFlags(NODE_NONE);\n+            ServiceFlags requiredServiceBits = SeedsServiceFlags();",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "9683d11268f4dd07e2a28124baff14f50c0be462",
      "in_reply_to_id": 1451813562,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2024-01-15T13:31:44Z",
      "updated_at": "2024-01-15T13:32:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1452381462",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1452381462"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2276,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1452381557",
      "pull_request_review_id": 1821693643,
      "id": 1452381557,
      "node_id": "PRRC_kwDOABII585WkZV1",
      "diff_hunk": "@@ -0,0 +1,79 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers",
      "path": "src/test/peerman_tests.cpp",
      "position": null,
      "original_position": 1,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "3f342bab41fefc0ffabeb63fcf6af74bcbb6068f",
      "in_reply_to_id": 1451815870,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2024-01-15T13:31:47Z",
      "updated_at": "2024-01-15T13:32:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1452381557",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1452381557"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1452381645",
      "pull_request_review_id": 1821693643,
      "id": 1452381645,
      "node_id": "PRRC_kwDOABII585WkZXN",
      "diff_hunk": "@@ -0,0 +1,79 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <node/miner.h>\n+#include <net_processing.h>\n+#include <pow.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(peerman_tests, RegTestingSetup)\n+\n+static constexpr int64_t NODE_NETWORK_LIMITED_MIN_BLOCKS = 288;\n+\n+static void mineBlock(const node::NodeContext& node, std::chrono::seconds block_time)\n+{\n+    auto curr_time = GetTime<std::chrono::seconds>();\n+    SetMockTime(block_time); // update time so the block is created with it\n+    CBlock block = node::BlockAssembler{node.chainman->ActiveChainstate(), nullptr}.CreateNewBlock(CScript() << OP_TRUE)->block;\n+    while (!CheckProofOfWork(block.GetHash(), block.nBits, node.chainman->GetConsensus())) ++block.nNonce;\n+    block.fChecked = true; // little speedup\n+    SetMockTime(curr_time); // process block at current time\n+    Assert(node.chainman->ProcessNewBlock(std::make_shared<const CBlock>(block), /*force_processing=*/true, /*min_pow_checked=*/true, nullptr));\n+    SyncWithValidationInterfaceQueue(); // drain events queue\n+}\n+\n+// Verifying when network-limited peer connections are desirable based on the node's proximity to the tip\n+BOOST_AUTO_TEST_CASE(connections_desirable_service_flags)\n+{\n+    std::unique_ptr<PeerManager> peerman = PeerManager::make(*m_node.connman, *m_node.addrman, nullptr, *m_node.chainman, *m_node.mempool, {});\n+    auto consensus = m_node.chainman->GetParams().GetConsensus();\n+\n+    // Check we start connecting to full nodes\n+    ServiceFlags peer_flags{NODE_WITNESS | NODE_NETWORK_LIMITED};\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Make peerman aware of the initial best block and verify we accept limited peers when we start close to the tip time.\n+    auto tip = WITH_LOCK(::cs_main, return m_node.chainman->ActiveChain().Tip());\n+    uint64_t tip_block_time = tip->GetBlockTime();\n+    int tip_block_height = tip->nHeight;\n+    peerman->SetBestBlock(tip_block_height, std::chrono::seconds{tip_block_time});\n+\n+    SetMockTime(tip_block_time + 1); // Set node time to tip time\n+    peerman->CheckForStaleTipAndEvictPeers();  // Trigger status update\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Check we don't disallow limited peers connections when we are behind but still recoverable (below NODE_NETWORK_LIMITED_MIN_BLOCKS)\n+    SetMockTime(GetTime<std::chrono::seconds>() + std::chrono::seconds{consensus.nPowTargetSpacing * (NODE_NETWORK_LIMITED_MIN_BLOCKS - 1)});\n+    peerman->CheckForStaleTipAndEvictPeers();\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Check we disallow limited peers connections when we are further than the limited peers threshold (NODE_NETWORK_LIMITED_MIN_BLOCKS)\n+    SetMockTime(GetTime<std::chrono::seconds>() + std::chrono::seconds{consensus.nPowTargetSpacing * 2});\n+    peerman->CheckForStaleTipAndEvictPeers();\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // By now, we tested that 'CheckForStaleTipAndEvictPeers' can set update the connections desirable services flags.",
      "path": "src/test/peerman_tests.cpp",
      "position": null,
      "original_position": 60,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "3f342bab41fefc0ffabeb63fcf6af74bcbb6068f",
      "in_reply_to_id": 1451818095,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2024-01-15T13:31:53Z",
      "updated_at": "2024-01-15T13:32:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1452381645",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1452381645"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1452381691",
      "pull_request_review_id": 1821693643,
      "id": 1452381691,
      "node_id": "PRRC_kwDOABII585WkZX7",
      "diff_hunk": "@@ -0,0 +1,79 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <node/miner.h>\n+#include <net_processing.h>\n+#include <pow.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(peerman_tests, RegTestingSetup)\n+\n+static constexpr int64_t NODE_NETWORK_LIMITED_MIN_BLOCKS = 288;\n+\n+static void mineBlock(const node::NodeContext& node, std::chrono::seconds block_time)\n+{\n+    auto curr_time = GetTime<std::chrono::seconds>();\n+    SetMockTime(block_time); // update time so the block is created with it\n+    CBlock block = node::BlockAssembler{node.chainman->ActiveChainstate(), nullptr}.CreateNewBlock(CScript() << OP_TRUE)->block;\n+    while (!CheckProofOfWork(block.GetHash(), block.nBits, node.chainman->GetConsensus())) ++block.nNonce;\n+    block.fChecked = true; // little speedup\n+    SetMockTime(curr_time); // process block at current time\n+    Assert(node.chainman->ProcessNewBlock(std::make_shared<const CBlock>(block), /*force_processing=*/true, /*min_pow_checked=*/true, nullptr));\n+    SyncWithValidationInterfaceQueue(); // drain events queue\n+}\n+\n+// Verifying when network-limited peer connections are desirable based on the node's proximity to the tip\n+BOOST_AUTO_TEST_CASE(connections_desirable_service_flags)\n+{\n+    std::unique_ptr<PeerManager> peerman = PeerManager::make(*m_node.connman, *m_node.addrman, nullptr, *m_node.chainman, *m_node.mempool, {});\n+    auto consensus = m_node.chainman->GetParams().GetConsensus();\n+\n+    // Check we start connecting to full nodes\n+    ServiceFlags peer_flags{NODE_WITNESS | NODE_NETWORK_LIMITED};\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Make peerman aware of the initial best block and verify we accept limited peers when we start close to the tip time.\n+    auto tip = WITH_LOCK(::cs_main, return m_node.chainman->ActiveChain().Tip());\n+    uint64_t tip_block_time = tip->GetBlockTime();\n+    int tip_block_height = tip->nHeight;\n+    peerman->SetBestBlock(tip_block_height, std::chrono::seconds{tip_block_time});\n+\n+    SetMockTime(tip_block_time + 1); // Set node time to tip time\n+    peerman->CheckForStaleTipAndEvictPeers();  // Trigger status update\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Check we don't disallow limited peers connections when we are behind but still recoverable (below NODE_NETWORK_LIMITED_MIN_BLOCKS)\n+    SetMockTime(GetTime<std::chrono::seconds>() + std::chrono::seconds{consensus.nPowTargetSpacing * (NODE_NETWORK_LIMITED_MIN_BLOCKS - 1)});\n+    peerman->CheckForStaleTipAndEvictPeers();\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Check we disallow limited peers connections when we are further than the limited peers threshold (NODE_NETWORK_LIMITED_MIN_BLOCKS)\n+    SetMockTime(GetTime<std::chrono::seconds>() + std::chrono::seconds{consensus.nPowTargetSpacing * 2});\n+    peerman->CheckForStaleTipAndEvictPeers();\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // By now, we tested that 'CheckForStaleTipAndEvictPeers' can set update the connections desirable services flags.\n+    // Now, perform the same tests for when the node receives a block.\n+    RegisterValidationInterface(peerman.get());\n+\n+    // First, verify a block in the past doesn't enable limited peers connections\n+    // At this point, our time is (NODE_NETWORK_LIMITED_MIN_BLOCKS + 1) * 10 minutes ahead the tip's time.\n+    mineBlock(m_node, /*block_time=*/std::chrono::seconds{tip_block_time + 1});\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Verify a block close to the tip enable limited peers connections",
      "path": "src/test/peerman_tests.cpp",
      "position": null,
      "original_position": 69,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "3f342bab41fefc0ffabeb63fcf6af74bcbb6068f",
      "in_reply_to_id": 1451818200,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2024-01-15T13:31:56Z",
      "updated_at": "2024-01-15T13:32:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1452381691",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1452381691"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1454112543",
      "pull_request_review_id": 1825332930,
      "id": 1454112543,
      "node_id": "PRRC_kwDOABII585Wq_8f",
      "diff_hunk": "@@ -0,0 +1,79 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <node/miner.h>\n+#include <net_processing.h>\n+#include <pow.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(peerman_tests, RegTestingSetup)\n+\n+static constexpr int64_t NODE_NETWORK_LIMITED_MIN_BLOCKS = 288;\n+\n+static void mineBlock(const node::NodeContext& node, std::chrono::seconds block_time)\n+{\n+    auto curr_time = GetTime<std::chrono::seconds>();\n+    SetMockTime(block_time); // update time so the block is created with it\n+    CBlock block = node::BlockAssembler{node.chainman->ActiveChainstate(), nullptr}.CreateNewBlock(CScript() << OP_TRUE)->block;\n+    while (!CheckProofOfWork(block.GetHash(), block.nBits, node.chainman->GetConsensus())) ++block.nNonce;\n+    block.fChecked = true; // little speedup\n+    SetMockTime(curr_time); // process block at current time\n+    Assert(node.chainman->ProcessNewBlock(std::make_shared<const CBlock>(block), /*force_processing=*/true, /*min_pow_checked=*/true, nullptr));\n+    SyncWithValidationInterfaceQueue(); // drain events queue\n+}\n+\n+// Verifying when network-limited peer connections are desirable based on the node's proximity to the tip\n+BOOST_AUTO_TEST_CASE(connections_desirable_service_flags)\n+{\n+    std::unique_ptr<PeerManager> peerman = PeerManager::make(*m_node.connman, *m_node.addrman, nullptr, *m_node.chainman, *m_node.mempool, {});\n+    auto consensus = m_node.chainman->GetParams().GetConsensus();\n+\n+    // Check we start connecting to full nodes\n+    ServiceFlags peer_flags{NODE_WITNESS | NODE_NETWORK_LIMITED};\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Make peerman aware of the initial best block and verify we accept limited peers when we start close to the tip time.\n+    auto tip = WITH_LOCK(::cs_main, return m_node.chainman->ActiveChain().Tip());\n+    uint64_t tip_block_time = tip->GetBlockTime();\n+    int tip_block_height = tip->nHeight;\n+    peerman->SetBestBlock(tip_block_height, std::chrono::seconds{tip_block_time});\n+\n+    SetMockTime(tip_block_time + 1); // Set node time to tip time\n+    peerman->CheckForStaleTipAndEvictPeers();  // Trigger status update",
      "path": "src/test/peerman_tests.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "783f0dd9bf470809241bbfd1d068ad062bce409f",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't think that `CheckForStaleTipAndEvictPeers` triggers any status updates with the current approach, only `UpdatedBlockTip` does. Maybe this is left from an earlier version? In any case, if I remove all calls to it, the test still succeeds.",
      "created_at": "2024-01-16T22:05:38Z",
      "updated_at": "2024-01-16T22:49:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1454112543",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1454112543"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1455588103",
      "pull_request_review_id": 1827319571,
      "id": 1455588103,
      "node_id": "PRRC_kwDOABII585WwoMH",
      "diff_hunk": "@@ -0,0 +1,79 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <node/miner.h>\n+#include <net_processing.h>\n+#include <pow.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(peerman_tests, RegTestingSetup)\n+\n+static constexpr int64_t NODE_NETWORK_LIMITED_MIN_BLOCKS = 288;\n+\n+static void mineBlock(const node::NodeContext& node, std::chrono::seconds block_time)\n+{\n+    auto curr_time = GetTime<std::chrono::seconds>();\n+    SetMockTime(block_time); // update time so the block is created with it\n+    CBlock block = node::BlockAssembler{node.chainman->ActiveChainstate(), nullptr}.CreateNewBlock(CScript() << OP_TRUE)->block;\n+    while (!CheckProofOfWork(block.GetHash(), block.nBits, node.chainman->GetConsensus())) ++block.nNonce;\n+    block.fChecked = true; // little speedup\n+    SetMockTime(curr_time); // process block at current time\n+    Assert(node.chainman->ProcessNewBlock(std::make_shared<const CBlock>(block), /*force_processing=*/true, /*min_pow_checked=*/true, nullptr));\n+    SyncWithValidationInterfaceQueue(); // drain events queue\n+}\n+\n+// Verifying when network-limited peer connections are desirable based on the node's proximity to the tip\n+BOOST_AUTO_TEST_CASE(connections_desirable_service_flags)\n+{\n+    std::unique_ptr<PeerManager> peerman = PeerManager::make(*m_node.connman, *m_node.addrman, nullptr, *m_node.chainman, *m_node.mempool, {});\n+    auto consensus = m_node.chainman->GetParams().GetConsensus();\n+\n+    // Check we start connecting to full nodes\n+    ServiceFlags peer_flags{NODE_WITNESS | NODE_NETWORK_LIMITED};\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Make peerman aware of the initial best block and verify we accept limited peers when we start close to the tip time.\n+    auto tip = WITH_LOCK(::cs_main, return m_node.chainman->ActiveChain().Tip());\n+    uint64_t tip_block_time = tip->GetBlockTime();\n+    int tip_block_height = tip->nHeight;\n+    peerman->SetBestBlock(tip_block_height, std::chrono::seconds{tip_block_time});\n+\n+    SetMockTime(tip_block_time + 1); // Set node time to tip time\n+    peerman->CheckForStaleTipAndEvictPeers();  // Trigger status update",
      "path": "src/test/peerman_tests.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "783f0dd9bf470809241bbfd1d068ad062bce409f",
      "in_reply_to_id": 1454112543,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "yeah, leftover from the previous implementation. Cleaning them. Thanks!",
      "created_at": "2024-01-17T13:38:55Z",
      "updated_at": "2024-01-17T13:38:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1455588103",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1455588103"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1455867835",
      "pull_request_review_id": 1827576365,
      "id": 1455867835,
      "node_id": "PRRC_kwDOABII585Wxse7",
      "diff_hunk": "@@ -0,0 +1,76 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <node/miner.h>\n+#include <net_processing.h>\n+#include <pow.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(peerman_tests, RegTestingSetup)\n+\n+/** BIP159 connections safety window */\n+static constexpr int64_t NODE_NETWORK_LIMITED_ALLOW_CONN_BLOCKS = 144;\n+\n+static void mineBlock(const node::NodeContext& node, std::chrono::seconds block_time)\n+{\n+    auto curr_time = GetTime<std::chrono::seconds>();\n+    SetMockTime(block_time); // update time so the block is created with it\n+    CBlock block = node::BlockAssembler{node.chainman->ActiveChainstate(), nullptr}.CreateNewBlock(CScript() << OP_TRUE)->block;\n+    while (!CheckProofOfWork(block.GetHash(), block.nBits, node.chainman->GetConsensus())) ++block.nNonce;\n+    block.fChecked = true; // little speedup\n+    SetMockTime(curr_time); // process block at current time\n+    Assert(node.chainman->ProcessNewBlock(std::make_shared<const CBlock>(block), /*force_processing=*/true, /*min_pow_checked=*/true, nullptr));\n+    SyncWithValidationInterfaceQueue(); // drain events queue\n+}\n+\n+// Verifying when network-limited peer connections are desirable based on the node's proximity to the tip\n+BOOST_AUTO_TEST_CASE(connections_desirable_service_flags)\n+{\n+    std::unique_ptr<PeerManager> peerman = PeerManager::make(*m_node.connman, *m_node.addrman, nullptr, *m_node.chainman, *m_node.mempool, {});\n+    auto consensus = m_node.chainman->GetParams().GetConsensus();\n+\n+    // Check we start connecting to full nodes\n+    ServiceFlags peer_flags{NODE_WITNESS | NODE_NETWORK_LIMITED};\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Make peerman aware of the initial best block and verify we accept limited peers when we start close to the tip time.\n+    auto tip = WITH_LOCK(::cs_main, return m_node.chainman->ActiveChain().Tip());\n+    uint64_t tip_block_time = tip->GetBlockTime();\n+    int tip_block_height = tip->nHeight;\n+    peerman->SetBestBlock(tip_block_height, std::chrono::seconds{tip_block_time});\n+\n+    SetMockTime(tip_block_time + 1); // Set node time to tip time\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Check we don't disallow limited peers connections when we are behind but still recoverable (below the connection safety window)\n+    SetMockTime(GetTime<std::chrono::seconds>() + std::chrono::seconds{consensus.nPowTargetSpacing * (NODE_NETWORK_LIMITED_ALLOW_CONN_BLOCKS - 1)});\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Check we disallow limited peers connections when we are further than the limited peers safety window\n+    SetMockTime(GetTime<std::chrono::seconds>() + std::chrono::seconds{consensus.nPowTargetSpacing * 2});\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // By now, we tested that 'CheckForStaleTipAndEvictPeers' can update the connections desirable services flags.",
      "path": "src/test/peerman_tests.cpp",
      "position": null,
      "original_position": 58,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "2d050cca9cef5ff06af9693882c39d5069ffabef",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "one more reference to `CheckForStaleTipAndEvictPeers` left",
      "created_at": "2024-01-17T15:31:44Z",
      "updated_at": "2024-01-17T15:36:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1455867835",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1455867835"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1455897632",
      "pull_request_review_id": 1827603265,
      "id": 1455897632,
      "node_id": "PRRC_kwDOABII585Wxzwg",
      "diff_hunk": "@@ -0,0 +1,76 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <node/miner.h>\n+#include <net_processing.h>\n+#include <pow.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(peerman_tests, RegTestingSetup)\n+\n+/** BIP159 connections safety window */\n+static constexpr int64_t NODE_NETWORK_LIMITED_ALLOW_CONN_BLOCKS = 144;\n+\n+static void mineBlock(const node::NodeContext& node, std::chrono::seconds block_time)\n+{\n+    auto curr_time = GetTime<std::chrono::seconds>();\n+    SetMockTime(block_time); // update time so the block is created with it\n+    CBlock block = node::BlockAssembler{node.chainman->ActiveChainstate(), nullptr}.CreateNewBlock(CScript() << OP_TRUE)->block;\n+    while (!CheckProofOfWork(block.GetHash(), block.nBits, node.chainman->GetConsensus())) ++block.nNonce;\n+    block.fChecked = true; // little speedup\n+    SetMockTime(curr_time); // process block at current time\n+    Assert(node.chainman->ProcessNewBlock(std::make_shared<const CBlock>(block), /*force_processing=*/true, /*min_pow_checked=*/true, nullptr));\n+    SyncWithValidationInterfaceQueue(); // drain events queue\n+}\n+\n+// Verifying when network-limited peer connections are desirable based on the node's proximity to the tip\n+BOOST_AUTO_TEST_CASE(connections_desirable_service_flags)\n+{\n+    std::unique_ptr<PeerManager> peerman = PeerManager::make(*m_node.connman, *m_node.addrman, nullptr, *m_node.chainman, *m_node.mempool, {});\n+    auto consensus = m_node.chainman->GetParams().GetConsensus();\n+\n+    // Check we start connecting to full nodes\n+    ServiceFlags peer_flags{NODE_WITNESS | NODE_NETWORK_LIMITED};\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Make peerman aware of the initial best block and verify we accept limited peers when we start close to the tip time.\n+    auto tip = WITH_LOCK(::cs_main, return m_node.chainman->ActiveChain().Tip());\n+    uint64_t tip_block_time = tip->GetBlockTime();\n+    int tip_block_height = tip->nHeight;\n+    peerman->SetBestBlock(tip_block_height, std::chrono::seconds{tip_block_time});\n+\n+    SetMockTime(tip_block_time + 1); // Set node time to tip time\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Check we don't disallow limited peers connections when we are behind but still recoverable (below the connection safety window)\n+    SetMockTime(GetTime<std::chrono::seconds>() + std::chrono::seconds{consensus.nPowTargetSpacing * (NODE_NETWORK_LIMITED_ALLOW_CONN_BLOCKS - 1)});\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Check we disallow limited peers connections when we are further than the limited peers safety window\n+    SetMockTime(GetTime<std::chrono::seconds>() + std::chrono::seconds{consensus.nPowTargetSpacing * 2});\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // By now, we tested that 'CheckForStaleTipAndEvictPeers' can update the connections desirable services flags.",
      "path": "src/test/peerman_tests.cpp",
      "position": null,
      "original_position": 58,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "2d050cca9cef5ff06af9693882c39d5069ffabef",
      "in_reply_to_id": 1455867835,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "fixed. Thanks",
      "created_at": "2024-01-17T15:43:41Z",
      "updated_at": "2024-01-17T15:43:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1455897632",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1455897632"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1457369802",
      "pull_request_review_id": 1829563974,
      "id": 1457369802,
      "node_id": "PRRC_kwDOABII585W3bLK",
      "diff_hunk": "@@ -666,6 +666,12 @@ class NetEventsInterface\n     /** Handle removal of a peer (clear state) */\n     virtual void FinalizeNode(const CNode& node) = 0;\n \n+    /**\n+     * Callback to determine whether the given set of service flags are sufficient\n+     * for a peer to be \"relevant\".\n+     */\n+    virtual bool HasDesirableServiceFlags(ServiceFlags services) = 0;",
      "path": "src/net.h",
      "position": null,
      "original_position": 8,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1285990092,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Circling back to this, I still don't think the interface choices in this PR are right.\r\n\r\nMostly it's just that the `NetEventsInterface` is not the place for a getter like this. It is meant for networking events (hence the name) such as opening/closing connections and processing/sending messages. So Approach NACK on misusing this interface.\r\n\r\n> The node's contextual information and logic required to take the decision of opening a socket to a particular address resides mostly in PeerManager (right now, we only have the stale chain condition, but there could be more)\r\n\r\nThis is not true? [`ThreadOpenConnections`](https://github.com/bitcoin/bitcoin/blob/03c5b0064d4f766bc8dc6508773c7579e9ad39bc/src/net.cpp#L2415) is a method on `CConnman` and handles the opening of network connections.\r\n\r\nI would suggest that you take the same approach as we have already taken with `CConnman::{SetTryNewOutboundPeer, StartExtraBlockRelayPeers}`, i.e. peerman telling connman what to do. That approach avoids increasing the coupling between the two components.",
      "created_at": "2024-01-18T12:25:38Z",
      "updated_at": "2024-01-18T12:25:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1457369802",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1457369802"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 669,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1019,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1459907359",
      "pull_request_review_id": 1833864574,
      "id": 1459907359,
      "node_id": "PRRC_kwDOABII585XBGsf",
      "diff_hunk": "@@ -666,6 +666,12 @@ class NetEventsInterface\n     /** Handle removal of a peer (clear state) */\n     virtual void FinalizeNode(const CNode& node) = 0;\n \n+    /**\n+     * Callback to determine whether the given set of service flags are sufficient\n+     * for a peer to be \"relevant\".\n+     */\n+    virtual bool HasDesirableServiceFlags(ServiceFlags services) = 0;",
      "path": "src/net.h",
      "position": null,
      "original_position": 8,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1285990092,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> > The node's contextual information and logic required to take the decision of opening a socket to a particular address resides mostly in PeerManager (right now, we only have the stale chain condition, but there could be more)\r\n> \r\n> This is not true? [`ThreadOpenConnections`](https://github.com/bitcoin/bitcoin/blob/03c5b0064d4f766bc8dc6508773c7579e9ad39bc/src/net.cpp#L2415) is a method on `CConnman` and handles the opening of network connections.\r\n\r\nYes, that's the layering violation that causes the coupling between PeerManager and ConMann that we both dislike and shouldn't be there (at least not entirely). The connections manager alone does not have enough information to select the best candidate based on the node's context. CConMan cannot access the chain state, the sync progress, in-flight block requests, nor any services predilection, nor any other user customization to prefer certain peers over others—such as ones supporting a number of compact block filters or v2 encrypted connections, etc. This is the reason why we are forced to set the bool flags you mentioned (which can easily get out of sync, causing a waste of resources and races). Under this structure, the only thing we do is continue expanding the number of fields inside CConMan that are susceptible to the same issues (see below).\r\n\r\n> I would suggest that you take the same approach as we have already taken with CConnman::{SetTryNewOutboundPeer, StartExtraBlockRelayPeers}, i.e. peerman telling connman what to do. That approach avoids increasing the coupling between the two components.\r\n\r\nI still stand by what I wrote previously at https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1297413491.\r\nEssentially, in my view, the approach is resource-wasteful and could lead to race conditions. And, following what I wrote above, it has a poor structure that increases the number of unrelated fields inside CConMan over time.\r\n\r\nOverall, I'm in favor of decoupling these two components, but I'm not in favor of continuing to expand the current structure. The connections' desirable services flag can (and will) change continually over time, depending on the node's state, connection heuristics, and possible user custom configs. It is a much more dynamic field than the ones you mention.\r\n\r\n> Mostly it's just that the NetEventsInterface is not the place for a getter like this. It is meant for networking events (hence the name) such as opening/closing connections and processing/sending messages.\r\n\r\nTwo points about this:\r\n\r\nFirstly, it is not just a getter. The node needs to make the decision to connect to a certain address based on several factors that depend on the node's context. Caching a flag doesn't help here. I mentioned some possible use cases above. I don't think continuing to expand CConMan fields with data from upper layers is a good structure.\r\n\r\nSecondly, I believe that with this statement, we are somewhat in agreement that the logic of \"to which address, supporting which services, should we connect?\" shouldn't be part of CConMan. However, as long as it remains there, the process of deciding to connect (or not) to a certain address is a net event. Like you, I would prefer if it weren't there, and we could work on it. But I don't think this PR is introducing something incorrect right now.",
      "created_at": "2024-01-19T22:29:16Z",
      "updated_at": "2024-01-19T22:50:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1459907359",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1459907359"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 669,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1019,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1461750521",
      "pull_request_review_id": 1836288319,
      "id": 1461750521,
      "node_id": "PRRC_kwDOABII585XIIr5",
      "diff_hunk": "@@ -666,6 +666,12 @@ class NetEventsInterface\n     /** Handle removal of a peer (clear state) */\n     virtual void FinalizeNode(const CNode& node) = 0;\n \n+    /**\n+     * Callback to determine whether the given set of service flags are sufficient\n+     * for a peer to be \"relevant\".\n+     */\n+    virtual bool HasDesirableServiceFlags(ServiceFlags services) = 0;",
      "path": "src/net.h",
      "position": null,
      "original_position": 8,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1285990092,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> CConMan cannot access the chain state, the sync progress, in-flight block requests\r\n\r\nI don't see how the connection opening logic needs access to any of those things.\r\n\r\n> number of compact block filters\r\n\r\nBitcoin Core doesn't download compact block filters.\r\n\r\n> v2 encrypted connections, etc.\r\n\r\nConnman is doing this right now using our service flags and the service flag of the potential new peer. It has all the data it needs.\r\n\r\n> Essentially, in my view, the approach is resource-wasteful and could lead to race conditions.\r\n\r\nYour approach has the exact same \"flaw\" w.r.t. connecting to desired service flags, e.g.:\r\n\r\n* connman calls `HasDesireableServiceFlags` for peer A which returns true\r\n* connman proceeds with opening the connection to peer A\r\n* some event occurs (e.g. messages from other peers are processed) that would make `HasDesireableServiceFlags` return false for peer A\r\n* connection to peer A is established\r\n\r\nPeer A is now connected even-though `HasDesireableServiceFlags` would return false. These races can't really be avoided, so it's best to stick with the interface design we've already got imo.",
      "created_at": "2024-01-22T11:51:04Z",
      "updated_at": "2024-01-22T11:51:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1461750521",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1461750521"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 669,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1019,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1463274709",
      "pull_request_review_id": 1838779726,
      "id": 1463274709,
      "node_id": "PRRC_kwDOABII585XN8zV",
      "diff_hunk": "@@ -666,6 +666,12 @@ class NetEventsInterface\n     /** Handle removal of a peer (clear state) */\n     virtual void FinalizeNode(const CNode& node) = 0;\n \n+    /**\n+     * Callback to determine whether the given set of service flags are sufficient\n+     * for a peer to be \"relevant\".\n+     */\n+    virtual bool HasDesirableServiceFlags(ServiceFlags services) = 0;",
      "path": "src/net.h",
      "position": null,
      "original_position": 8,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1285990092,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> > CConMan cannot access the chain state, the sync progress, in-flight block requests\r\n> \r\n> I don't see how the connection opening logic needs access to any of those things.\r\n\r\nI believe that we are not in sync regarding the distinction between (1) the logic for deciding whether to connect to a specific address and (2) the thread/process responsible for opening such a connection. The former requires access to that contextual information; its usage is behind the `extra_block_relay` and `try_another_outbound_peer` bool flags, and also behind the existing `HasAllDesirableServiceFlags()` call.\r\n\r\nWhat I intended to say on that sentence was that a node could have different connections strategies in the future, even though it doesn't have them now. These strategies would need access to the overall node state. Thus why I'm saying that the current approach of adding fields inside CConnMan with each new connection decision logic change make the code harder to work with, rather than simplifying it.\r\nStill, adding a callback as I do here isn't the saint grail neither. It is slightly better for the reasons I state below, but in the future, with the introduction of more connection strategies, I think we should consider moving part of the `ThreadOpenConnections` logic to `PeerManager`.\r\n\r\n\r\n>\r\n> > number of compact block filters\r\n> \r\n> Bitcoin Core doesn't download compact block filters.\r\n\r\nIt was just an example of a modification we could add to the connections decision-making process. We can replace it with a more general \"reserve X outbound slots for peers supporting Y services\" which could also depend on certain contextual factors. This is something either the user or we might want in the future. And like this one, there could be many other modifications that could be added.\r\nBut, in case it helps, I do have an experimental branch implementing compact block filters download and the entire BIP157 client mode.\r\n\r\n> > v2 encrypted connections, etc.\r\n> \r\n> Connman is doing this right now using our service flags and the service flag of the potential new peer. It has all the data it needs.\r\n\r\nYou are talking about the way we connect to potential v2 peers and fallback to v1 based on their response right?. My point was about preferring certain services over others, for a limited number of outbound connection slots, before opening the socket. This prioritization could change depending on the node's context; e.g. taking into consideration the chain progress and/or if the user has configured the node differently.\r\n\r\n> > Essentially, in my view, the approach is resource-wasteful and could lead to race conditions.\r\n> \r\n> Your approach has the exact same \"flaw\" w.r.t. connecting to desired service flags, e.g.:\r\n> \r\n> * connman calls `HasDesireableServiceFlags` for peer A which returns true\r\n> * connman proceeds with opening the connection to peer A\r\n> * some event occurs (e.g. messages from other peers are processed) that would make `HasDesireableServiceFlags` return false for peer A\r\n> * connection to peer A is established\r\n> \r\n> Peer A is now connected even-though `HasDesireableServiceFlags` would return false. These races can't really be avoided, so it's best to stick with the interface design we've already got imo.\r\n\r\nThe difference between your proposed design and mine is essentially polling to set the value vs calculating the value on-demand.\r\n\r\nIn your design, the code needs to check data at regular intervals to update the flag in another component. If this process is executed too rapidly, it can harm performance, and if it is done too slowly, it wastes resources.\r\nIn the one I'm proposing, because the value is calculated only when is needed, it shortens the race window.\r\nAre we in agreement on that?\r\n\r\n\r\nStill, following to what I wrote in my previous comment, I would like to re-think `ThreadOpenConnections` because otherwise, we will keep adding fields to CConMan that are unrelated to the component itself.",
      "created_at": "2024-01-23T13:21:52Z",
      "updated_at": "2024-01-23T13:21:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1463274709",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1463274709"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 669,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1019,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469260564",
      "pull_request_review_id": 1848123617,
      "id": 1469260564,
      "node_id": "PRRC_kwDOABII585XkyMU",
      "diff_hunk": "@@ -110,6 +110,29 @@ class PeerManager : public CValidationInterface, public NetEventsInterface\n \n     /** This function is used for testing the stale tip eviction logic, see denialofservice_tests.cpp */\n     virtual void UpdateLastBlockAnnounceTime(NodeId node, int64_t time_in_seconds) = 0;\n+\n+    /**\n+     * Gets the set of service flags which are \"desirable\" for a given peer.\n+     *\n+     * These are the flags which are required for a peer to support for them\n+     * to be \"interesting\" to us, ie for us to wish to use one of our few\n+     * outbound connection slots for or for us to wish to prioritize keeping\n+     * their connection around.\n+     *\n+     * Relevant service flags may be peer- and state-specific in that the\n+     * version of the peer may determine which flags are required (eg in the\n+     * case of NODE_NETWORK_LIMITED where we seek out NODE_NETWORK peers\n+     * unless they set NODE_NETWORK_LIMITED and we are out of IBD, in which\n+     * case NODE_NETWORK_LIMITED suffices).\n+     *\n+     * Thus, generally, avoid calling with 'services' == NODE_NONE, unless",
      "path": "src/net_processing.h",
      "position": 30,
      "original_position": 19,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "9f36e591c551ec2e58a6496334541bfdae8fdfe5",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "9f36e591c551ec2e58a6496334541bfdae8fdfe5\r\n\r\ni see that this is a copy-paste from another place, but since it's technically green (and i want to sure it still makes sense after your change), can you explain what is this about? especially `the returned desirable service flags are guaranteed to not change dependent on state`",
      "created_at": "2024-01-29T08:56:03Z",
      "updated_at": "2024-01-29T09:08:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1469260564",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469260564"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 128,
      "original_line": 128,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469267141",
      "pull_request_review_id": 1848123617,
      "id": 1469267141,
      "node_id": "PRRC_kwDOABII585XkzzF",
      "diff_hunk": "@@ -1678,8 +1680,11 @@ bool PeerManagerImpl::HasAllDesirableServiceFlags(ServiceFlags services) const\n \n ServiceFlags PeerManagerImpl::GetDesirableServiceFlags(ServiceFlags services) const\n {\n-    if (services & NODE_NETWORK_LIMITED && GetServicesFlagsIBDCache()) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "6ed53602ac7c565273b5722de167cb2569a0e381",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "6ed53602ac7c565273b5722de167cb2569a0e381\r\n\r\nif you touch it again, i suggest removing `GetServicesFlagsIBDCache` definition here rather than in the last commit. At this point it's already unused. Saves some review time.",
      "created_at": "2024-01-29T09:01:35Z",
      "updated_at": "2024-01-29T09:08:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1469267141",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469267141"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1681,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469274352",
      "pull_request_review_id": 1848123617,
      "id": 1469274352,
      "node_id": "PRRC_kwDOABII585Xk1jw",
      "diff_hunk": "@@ -0,0 +1,76 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <node/miner.h>\n+#include <net_processing.h>\n+#include <pow.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(peerman_tests, RegTestingSetup)\n+\n+/** Window, in blocks, for connecting to NODE_NETWORK_LIMITED peers */\n+static constexpr int64_t NODE_NETWORK_LIMITED_ALLOW_CONN_BLOCKS = 144;\n+\n+static void mineBlock(const node::NodeContext& node, std::chrono::seconds block_time)\n+{\n+    auto curr_time = GetTime<std::chrono::seconds>();\n+    SetMockTime(block_time); // update time so the block is created with it\n+    CBlock block = node::BlockAssembler{node.chainman->ActiveChainstate(), nullptr}.CreateNewBlock(CScript() << OP_TRUE)->block;\n+    while (!CheckProofOfWork(block.GetHash(), block.nBits, node.chainman->GetConsensus())) ++block.nNonce;\n+    block.fChecked = true; // little speedup\n+    SetMockTime(curr_time); // process block at current time\n+    Assert(node.chainman->ProcessNewBlock(std::make_shared<const CBlock>(block), /*force_processing=*/true, /*min_pow_checked=*/true, nullptr));\n+    SyncWithValidationInterfaceQueue(); // drain events queue\n+}\n+\n+// Verifying when network-limited peer connections are desirable based on the node's proximity to the tip\n+BOOST_AUTO_TEST_CASE(connections_desirable_service_flags)\n+{\n+    std::unique_ptr<PeerManager> peerman = PeerManager::make(*m_node.connman, *m_node.addrman, nullptr, *m_node.chainman, *m_node.mempool, {});\n+    auto consensus = m_node.chainman->GetParams().GetConsensus();\n+\n+    // Check we start connecting to full nodes\n+    ServiceFlags peer_flags{NODE_WITNESS | NODE_NETWORK_LIMITED};\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Make peerman aware of the initial best block and verify we accept limited peers when we start close to the tip time.\n+    auto tip = WITH_LOCK(::cs_main, return m_node.chainman->ActiveChain().Tip());\n+    uint64_t tip_block_time = tip->GetBlockTime();\n+    int tip_block_height = tip->nHeight;\n+    peerman->SetBestBlock(tip_block_height, std::chrono::seconds{tip_block_time});\n+\n+    SetMockTime(tip_block_time + 1); // Set node time to tip time\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Check we don't disallow limited peers connections when we are behind but still recoverable (below the connection safety window)\n+    SetMockTime(GetTime<std::chrono::seconds>() + std::chrono::seconds{consensus.nPowTargetSpacing * (NODE_NETWORK_LIMITED_ALLOW_CONN_BLOCKS - 1)});\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Check we disallow limited peers connections when we are further than the limited peers safety window\n+    SetMockTime(GetTime<std::chrono::seconds>() + std::chrono::seconds{consensus.nPowTargetSpacing * 2});\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // By now, we tested that the connections desirable services flags change based on the node's time proximity to the tip.\n+    // Now, perform the same tests for when the node receives a block.\n+    RegisterValidationInterface(peerman.get());\n+\n+    // First, verify a block in the past doesn't enable limited peers connections\n+    // At this point, our time is (NODE_NETWORK_LIMITED_ALLOW_CONN_BLOCKS + 1) * 10 minutes ahead the tip's time.\n+    mineBlock(m_node, /*block_time=*/std::chrono::seconds{tip_block_time + 1});\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Verify a block close to the tip enables limited peers connections\n+    mineBlock(m_node, /*block_time=*/GetTime<std::chrono::seconds>());\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Lastly, verify the stale tip checks can disallow limited peers connections after not receiving blocks for a prolonged period.\n+    SetMockTime(GetTime<std::chrono::seconds>() + std::chrono::seconds{consensus.nPowTargetSpacing * NODE_NETWORK_LIMITED_ALLOW_CONN_BLOCKS + 1});\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+}",
      "path": "src/test/peerman_tests.cpp",
      "position": 74,
      "original_position": 74,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "aff7d92b1500e2478ce36a7e86ae47df47dda178",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "aff7d92b1500e2478ce36a7e86ae47df47dda178\r\n\r\nwould be nice to test reacting to reorgs.",
      "created_at": "2024-01-29T09:07:56Z",
      "updated_at": "2024-01-29T09:08:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1469274352",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469274352"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 74,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469623110",
      "pull_request_review_id": 1848726501,
      "id": 1469623110,
      "node_id": "PRRC_kwDOABII585XmKtG",
      "diff_hunk": "@@ -110,6 +110,29 @@ class PeerManager : public CValidationInterface, public NetEventsInterface\n \n     /** This function is used for testing the stale tip eviction logic, see denialofservice_tests.cpp */\n     virtual void UpdateLastBlockAnnounceTime(NodeId node, int64_t time_in_seconds) = 0;\n+\n+    /**\n+     * Gets the set of service flags which are \"desirable\" for a given peer.\n+     *\n+     * These are the flags which are required for a peer to support for them\n+     * to be \"interesting\" to us, ie for us to wish to use one of our few\n+     * outbound connection slots for or for us to wish to prioritize keeping\n+     * their connection around.\n+     *\n+     * Relevant service flags may be peer- and state-specific in that the\n+     * version of the peer may determine which flags are required (eg in the\n+     * case of NODE_NETWORK_LIMITED where we seek out NODE_NETWORK peers\n+     * unless they set NODE_NETWORK_LIMITED and we are out of IBD, in which\n+     * case NODE_NETWORK_LIMITED suffices).\n+     *\n+     * Thus, generally, avoid calling with 'services' == NODE_NONE, unless",
      "path": "src/net_processing.h",
      "position": 30,
      "original_position": 19,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "9f36e591c551ec2e58a6496334541bfdae8fdfe5",
      "in_reply_to_id": 1469260564,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> [9f36e59](https://github.com/bitcoin/bitcoin/commit/9f36e591c551ec2e58a6496334541bfdae8fdfe5)\r\n> \r\n> i see that this is a copy-paste from another place, but since it's technically green (and i want to sure it still makes sense after your change), can you explain what is this about? especially `the returned desirable service flags are guaranteed to not change dependent on state`\r\n\r\nYeah sure. It means that when `NODE_NONE` is provided, the function ensures to consistently return the default service flags (NODE_NETWORK | NODE_WITNESS), regardless of the node's context.\r\n\r\nI think that, for now, leaving the comment is fine given that the behavior wasn't changed. However, I totally agree that this phrase will need to be revisited in the near future. `PeerManager` will always return context specific set of service flags. I'm planning to expand this function for the second part of #29183; where I basically need to make the node connect to peers signaling `NODE_COMPACT_FILTERS` up to a certain outbound slots limit.\r\n",
      "created_at": "2024-01-29T13:51:22Z",
      "updated_at": "2024-01-29T13:56:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1469623110",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469623110"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 128,
      "original_line": 128,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469626733",
      "pull_request_review_id": 1848726501,
      "id": 1469626733,
      "node_id": "PRRC_kwDOABII585XmLlt",
      "diff_hunk": "@@ -1678,8 +1680,11 @@ bool PeerManagerImpl::HasAllDesirableServiceFlags(ServiceFlags services) const\n \n ServiceFlags PeerManagerImpl::GetDesirableServiceFlags(ServiceFlags services) const\n {\n-    if (services & NODE_NETWORK_LIMITED && GetServicesFlagsIBDCache()) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "6ed53602ac7c565273b5722de167cb2569a0e381",
      "in_reply_to_id": 1469267141,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "sure. Will do if I have to re-touch.",
      "created_at": "2024-01-29T13:54:15Z",
      "updated_at": "2024-01-29T13:56:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1469626733",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469626733"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1681,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469628831",
      "pull_request_review_id": 1848726501,
      "id": 1469628831,
      "node_id": "PRRC_kwDOABII585XmMGf",
      "diff_hunk": "@@ -0,0 +1,76 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <node/miner.h>\n+#include <net_processing.h>\n+#include <pow.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(peerman_tests, RegTestingSetup)\n+\n+/** Window, in blocks, for connecting to NODE_NETWORK_LIMITED peers */\n+static constexpr int64_t NODE_NETWORK_LIMITED_ALLOW_CONN_BLOCKS = 144;\n+\n+static void mineBlock(const node::NodeContext& node, std::chrono::seconds block_time)\n+{\n+    auto curr_time = GetTime<std::chrono::seconds>();\n+    SetMockTime(block_time); // update time so the block is created with it\n+    CBlock block = node::BlockAssembler{node.chainman->ActiveChainstate(), nullptr}.CreateNewBlock(CScript() << OP_TRUE)->block;\n+    while (!CheckProofOfWork(block.GetHash(), block.nBits, node.chainman->GetConsensus())) ++block.nNonce;\n+    block.fChecked = true; // little speedup\n+    SetMockTime(curr_time); // process block at current time\n+    Assert(node.chainman->ProcessNewBlock(std::make_shared<const CBlock>(block), /*force_processing=*/true, /*min_pow_checked=*/true, nullptr));\n+    SyncWithValidationInterfaceQueue(); // drain events queue\n+}\n+\n+// Verifying when network-limited peer connections are desirable based on the node's proximity to the tip\n+BOOST_AUTO_TEST_CASE(connections_desirable_service_flags)\n+{\n+    std::unique_ptr<PeerManager> peerman = PeerManager::make(*m_node.connman, *m_node.addrman, nullptr, *m_node.chainman, *m_node.mempool, {});\n+    auto consensus = m_node.chainman->GetParams().GetConsensus();\n+\n+    // Check we start connecting to full nodes\n+    ServiceFlags peer_flags{NODE_WITNESS | NODE_NETWORK_LIMITED};\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Make peerman aware of the initial best block and verify we accept limited peers when we start close to the tip time.\n+    auto tip = WITH_LOCK(::cs_main, return m_node.chainman->ActiveChain().Tip());\n+    uint64_t tip_block_time = tip->GetBlockTime();\n+    int tip_block_height = tip->nHeight;\n+    peerman->SetBestBlock(tip_block_height, std::chrono::seconds{tip_block_time});\n+\n+    SetMockTime(tip_block_time + 1); // Set node time to tip time\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Check we don't disallow limited peers connections when we are behind but still recoverable (below the connection safety window)\n+    SetMockTime(GetTime<std::chrono::seconds>() + std::chrono::seconds{consensus.nPowTargetSpacing * (NODE_NETWORK_LIMITED_ALLOW_CONN_BLOCKS - 1)});\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Check we disallow limited peers connections when we are further than the limited peers safety window\n+    SetMockTime(GetTime<std::chrono::seconds>() + std::chrono::seconds{consensus.nPowTargetSpacing * 2});\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // By now, we tested that the connections desirable services flags change based on the node's time proximity to the tip.\n+    // Now, perform the same tests for when the node receives a block.\n+    RegisterValidationInterface(peerman.get());\n+\n+    // First, verify a block in the past doesn't enable limited peers connections\n+    // At this point, our time is (NODE_NETWORK_LIMITED_ALLOW_CONN_BLOCKS + 1) * 10 minutes ahead the tip's time.\n+    mineBlock(m_node, /*block_time=*/std::chrono::seconds{tip_block_time + 1});\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Verify a block close to the tip enables limited peers connections\n+    mineBlock(m_node, /*block_time=*/GetTime<std::chrono::seconds>());\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Lastly, verify the stale tip checks can disallow limited peers connections after not receiving blocks for a prolonged period.\n+    SetMockTime(GetTime<std::chrono::seconds>() + std::chrono::seconds{consensus.nPowTargetSpacing * NODE_NETWORK_LIMITED_ALLOW_CONN_BLOCKS + 1});\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+}",
      "path": "src/test/peerman_tests.cpp",
      "position": 74,
      "original_position": 74,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "aff7d92b1500e2478ce36a7e86ae47df47dda178",
      "in_reply_to_id": 1469274352,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Sure. As it would be really nice to progress on this PR, will leave it follow-up. Thanks.",
      "created_at": "2024-01-29T13:55:50Z",
      "updated_at": "2024-01-29T13:56:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1469628831",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469628831"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 74,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1471891912",
      "pull_request_review_id": 1852266688,
      "id": 1471891912,
      "node_id": "PRRC_kwDOABII585Xu0nI",
      "diff_hunk": "@@ -0,0 +1,76 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <node/miner.h>\n+#include <net_processing.h>\n+#include <pow.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(peerman_tests, RegTestingSetup)\n+\n+/** Window, in blocks, for connecting to NODE_NETWORK_LIMITED peers */\n+static constexpr int64_t NODE_NETWORK_LIMITED_ALLOW_CONN_BLOCKS = 144;\n+\n+static void mineBlock(const node::NodeContext& node, std::chrono::seconds block_time)\n+{\n+    auto curr_time = GetTime<std::chrono::seconds>();\n+    SetMockTime(block_time); // update time so the block is created with it\n+    CBlock block = node::BlockAssembler{node.chainman->ActiveChainstate(), nullptr}.CreateNewBlock(CScript() << OP_TRUE)->block;\n+    while (!CheckProofOfWork(block.GetHash(), block.nBits, node.chainman->GetConsensus())) ++block.nNonce;\n+    block.fChecked = true; // little speedup\n+    SetMockTime(curr_time); // process block at current time\n+    Assert(node.chainman->ProcessNewBlock(std::make_shared<const CBlock>(block), /*force_processing=*/true, /*min_pow_checked=*/true, nullptr));\n+    SyncWithValidationInterfaceQueue(); // drain events queue\n+}\n+\n+// Verifying when network-limited peer connections are desirable based on the node's proximity to the tip\n+BOOST_AUTO_TEST_CASE(connections_desirable_service_flags)\n+{\n+    std::unique_ptr<PeerManager> peerman = PeerManager::make(*m_node.connman, *m_node.addrman, nullptr, *m_node.chainman, *m_node.mempool, {});\n+    auto consensus = m_node.chainman->GetParams().GetConsensus();\n+\n+    // Check we start connecting to full nodes\n+    ServiceFlags peer_flags{NODE_WITNESS | NODE_NETWORK_LIMITED};\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));",
      "path": "src/test/peerman_tests.cpp",
      "position": 39,
      "original_position": 39,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "aff7d92b1500e2478ce36a7e86ae47df47dda178",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "could also have a check for `HasAllDesirableServiceFlags` each time `GetDesirableServiceFlags` is checked.",
      "created_at": "2024-01-30T20:13:57Z",
      "updated_at": "2024-01-30T21:58:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1471891912",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1471891912"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 39,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1472063375",
      "pull_request_review_id": 1852516974,
      "id": 1472063375,
      "node_id": "PRRC_kwDOABII585XveeP",
      "diff_hunk": "@@ -0,0 +1,76 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <node/miner.h>\n+#include <net_processing.h>\n+#include <pow.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(peerman_tests, RegTestingSetup)\n+\n+/** Window, in blocks, for connecting to NODE_NETWORK_LIMITED peers */\n+static constexpr int64_t NODE_NETWORK_LIMITED_ALLOW_CONN_BLOCKS = 144;\n+\n+static void mineBlock(const node::NodeContext& node, std::chrono::seconds block_time)\n+{\n+    auto curr_time = GetTime<std::chrono::seconds>();\n+    SetMockTime(block_time); // update time so the block is created with it\n+    CBlock block = node::BlockAssembler{node.chainman->ActiveChainstate(), nullptr}.CreateNewBlock(CScript() << OP_TRUE)->block;\n+    while (!CheckProofOfWork(block.GetHash(), block.nBits, node.chainman->GetConsensus())) ++block.nNonce;\n+    block.fChecked = true; // little speedup\n+    SetMockTime(curr_time); // process block at current time\n+    Assert(node.chainman->ProcessNewBlock(std::make_shared<const CBlock>(block), /*force_processing=*/true, /*min_pow_checked=*/true, nullptr));\n+    SyncWithValidationInterfaceQueue(); // drain events queue\n+}\n+\n+// Verifying when network-limited peer connections are desirable based on the node's proximity to the tip\n+BOOST_AUTO_TEST_CASE(connections_desirable_service_flags)\n+{\n+    std::unique_ptr<PeerManager> peerman = PeerManager::make(*m_node.connman, *m_node.addrman, nullptr, *m_node.chainman, *m_node.mempool, {});\n+    auto consensus = m_node.chainman->GetParams().GetConsensus();\n+\n+    // Check we start connecting to full nodes\n+    ServiceFlags peer_flags{NODE_WITNESS | NODE_NETWORK_LIMITED};\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));",
      "path": "src/test/peerman_tests.cpp",
      "position": 39,
      "original_position": 39,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "aff7d92b1500e2478ce36a7e86ae47df47dda178",
      "in_reply_to_id": 1471891912,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Sure, noted. As it is a nit and would love to move forward, will leave it for a small follow-up. Thanks!",
      "created_at": "2024-01-30T22:34:49Z",
      "updated_at": "2024-01-30T22:34:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1472063375",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1472063375"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 39,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1472190098",
      "pull_request_review_id": 1852723966,
      "id": 1472190098,
      "node_id": "PRRC_kwDOABII585Xv9aS",
      "diff_hunk": "@@ -0,0 +1,76 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <node/miner.h>\n+#include <net_processing.h>\n+#include <pow.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(peerman_tests, RegTestingSetup)\n+\n+/** Window, in blocks, for connecting to NODE_NETWORK_LIMITED peers */\n+static constexpr int64_t NODE_NETWORK_LIMITED_ALLOW_CONN_BLOCKS = 144;\n+\n+static void mineBlock(const node::NodeContext& node, std::chrono::seconds block_time)\n+{\n+    auto curr_time = GetTime<std::chrono::seconds>();\n+    SetMockTime(block_time); // update time so the block is created with it\n+    CBlock block = node::BlockAssembler{node.chainman->ActiveChainstate(), nullptr}.CreateNewBlock(CScript() << OP_TRUE)->block;\n+    while (!CheckProofOfWork(block.GetHash(), block.nBits, node.chainman->GetConsensus())) ++block.nNonce;\n+    block.fChecked = true; // little speedup\n+    SetMockTime(curr_time); // process block at current time\n+    Assert(node.chainman->ProcessNewBlock(std::make_shared<const CBlock>(block), /*force_processing=*/true, /*min_pow_checked=*/true, nullptr));\n+    SyncWithValidationInterfaceQueue(); // drain events queue\n+}\n+\n+// Verifying when network-limited peer connections are desirable based on the node's proximity to the tip\n+BOOST_AUTO_TEST_CASE(connections_desirable_service_flags)\n+{\n+    std::unique_ptr<PeerManager> peerman = PeerManager::make(*m_node.connman, *m_node.addrman, nullptr, *m_node.chainman, *m_node.mempool, {});\n+    auto consensus = m_node.chainman->GetParams().GetConsensus();\n+\n+    // Check we start connecting to full nodes\n+    ServiceFlags peer_flags{NODE_WITNESS | NODE_NETWORK_LIMITED};\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Make peerman aware of the initial best block and verify we accept limited peers when we start close to the tip time.\n+    auto tip = WITH_LOCK(::cs_main, return m_node.chainman->ActiveChain().Tip());\n+    uint64_t tip_block_time = tip->GetBlockTime();\n+    int tip_block_height = tip->nHeight;\n+    peerman->SetBestBlock(tip_block_height, std::chrono::seconds{tip_block_time});\n+\n+    SetMockTime(tip_block_time + 1); // Set node time to tip time\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Check we don't disallow limited peers connections when we are behind but still recoverable (below the connection safety window)\n+    SetMockTime(GetTime<std::chrono::seconds>() + std::chrono::seconds{consensus.nPowTargetSpacing * (NODE_NETWORK_LIMITED_ALLOW_CONN_BLOCKS - 1)});\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Check we disallow limited peers connections when we are further than the limited peers safety window\n+    SetMockTime(GetTime<std::chrono::seconds>() + std::chrono::seconds{consensus.nPowTargetSpacing * 2});\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // By now, we tested that the connections desirable services flags change based on the node's time proximity to the tip.\n+    // Now, perform the same tests for when the node receives a block.\n+    RegisterValidationInterface(peerman.get());\n+\n+    // First, verify a block in the past doesn't enable limited peers connections\n+    // At this point, our time is (NODE_NETWORK_LIMITED_ALLOW_CONN_BLOCKS + 1) * 10 minutes ahead the tip's time.\n+    mineBlock(m_node, /*block_time=*/std::chrono::seconds{tip_block_time + 1});\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Verify a block close to the tip enables limited peers connections\n+    mineBlock(m_node, /*block_time=*/GetTime<std::chrono::seconds>());\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Lastly, verify the stale tip checks can disallow limited peers connections after not receiving blocks for a prolonged period.",
      "path": "src/test/peerman_tests.cpp",
      "position": 71,
      "original_position": 71,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "As noted in https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1454112543, stale tip checks don't factor into the current approach. This check seems redundant now with the one on [lines 54-56](https://github.com/bitcoin/bitcoin/pull/28170/files#diff-aafd7c9690634ecdad15d527c2bab6bffbcddd2db444a6099da0305d2d2271beR54-R56).",
      "created_at": "2024-01-31T01:13:58Z",
      "updated_at": "2024-01-31T01:14:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1472190098",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1472190098"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 71,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1472203963",
      "pull_request_review_id": 1852743310,
      "id": 1472203963,
      "node_id": "PRRC_kwDOABII585XwAy7",
      "diff_hunk": "@@ -0,0 +1,76 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <node/miner.h>\n+#include <net_processing.h>\n+#include <pow.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(peerman_tests, RegTestingSetup)\n+\n+/** Window, in blocks, for connecting to NODE_NETWORK_LIMITED peers */\n+static constexpr int64_t NODE_NETWORK_LIMITED_ALLOW_CONN_BLOCKS = 144;\n+\n+static void mineBlock(const node::NodeContext& node, std::chrono::seconds block_time)\n+{\n+    auto curr_time = GetTime<std::chrono::seconds>();\n+    SetMockTime(block_time); // update time so the block is created with it\n+    CBlock block = node::BlockAssembler{node.chainman->ActiveChainstate(), nullptr}.CreateNewBlock(CScript() << OP_TRUE)->block;\n+    while (!CheckProofOfWork(block.GetHash(), block.nBits, node.chainman->GetConsensus())) ++block.nNonce;\n+    block.fChecked = true; // little speedup\n+    SetMockTime(curr_time); // process block at current time\n+    Assert(node.chainman->ProcessNewBlock(std::make_shared<const CBlock>(block), /*force_processing=*/true, /*min_pow_checked=*/true, nullptr));\n+    SyncWithValidationInterfaceQueue(); // drain events queue\n+}\n+\n+// Verifying when network-limited peer connections are desirable based on the node's proximity to the tip\n+BOOST_AUTO_TEST_CASE(connections_desirable_service_flags)\n+{\n+    std::unique_ptr<PeerManager> peerman = PeerManager::make(*m_node.connman, *m_node.addrman, nullptr, *m_node.chainman, *m_node.mempool, {});\n+    auto consensus = m_node.chainman->GetParams().GetConsensus();\n+\n+    // Check we start connecting to full nodes\n+    ServiceFlags peer_flags{NODE_WITNESS | NODE_NETWORK_LIMITED};\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Make peerman aware of the initial best block and verify we accept limited peers when we start close to the tip time.\n+    auto tip = WITH_LOCK(::cs_main, return m_node.chainman->ActiveChain().Tip());\n+    uint64_t tip_block_time = tip->GetBlockTime();\n+    int tip_block_height = tip->nHeight;\n+    peerman->SetBestBlock(tip_block_height, std::chrono::seconds{tip_block_time});\n+\n+    SetMockTime(tip_block_time + 1); // Set node time to tip time\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Check we don't disallow limited peers connections when we are behind but still recoverable (below the connection safety window)\n+    SetMockTime(GetTime<std::chrono::seconds>() + std::chrono::seconds{consensus.nPowTargetSpacing * (NODE_NETWORK_LIMITED_ALLOW_CONN_BLOCKS - 1)});\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Check we disallow limited peers connections when we are further than the limited peers safety window\n+    SetMockTime(GetTime<std::chrono::seconds>() + std::chrono::seconds{consensus.nPowTargetSpacing * 2});\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // By now, we tested that the connections desirable services flags change based on the node's time proximity to the tip.\n+    // Now, perform the same tests for when the node receives a block.\n+    RegisterValidationInterface(peerman.get());\n+\n+    // First, verify a block in the past doesn't enable limited peers connections\n+    // At this point, our time is (NODE_NETWORK_LIMITED_ALLOW_CONN_BLOCKS + 1) * 10 minutes ahead the tip's time.\n+    mineBlock(m_node, /*block_time=*/std::chrono::seconds{tip_block_time + 1});\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Verify a block close to the tip enables limited peers connections\n+    mineBlock(m_node, /*block_time=*/GetTime<std::chrono::seconds>());\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Lastly, verify the stale tip checks can disallow limited peers connections after not receiving blocks for a prolonged period.",
      "path": "src/test/peerman_tests.cpp",
      "position": 71,
      "original_position": 71,
      "commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "original_commit_id": "27f260aa6e04f82dad78e9a06d58927546143a27",
      "in_reply_to_id": 1472190098,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> As noted in #28170 (comment), stale tip checks don't factor into the current approach.\r\n\r\nSure. As it is a nit, will update the comment in the follow-up PR. Thanks!.\r\n\r\n> This check seems redundant now with the one on lines 54-56.\r\n\r\nI think it's worth checking whether the services flags can still change after receiving blocks from the network. The lines 54-56 are checking updates prior receiving any block.",
      "created_at": "2024-01-31T01:40:11Z",
      "updated_at": "2024-01-31T02:26:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1472203963",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1472203963"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 71,
      "original_line": 71,
      "side": "RIGHT"
    }
  ]
}