{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31766",
    "id": 2306951922,
    "node_id": "PR_kwDOABII586JgUry",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31766",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31766.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31766.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31766",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31766/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31766/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31766/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/c8fab356171a0e283d5716647e3243c04810ac51",
    "number": 31766,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "leveldb: pull upstream C++23 changes",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Cherry-picks two commits from upstream (https://github.com/google/leveldb/commit/302786e211d1f2e6fd260261f642d03a91e5922c, https://github.com/google/leveldb/commit/e829478c6a3a55d8e5c1227e2678dcc18d518609), which remove the usage of `std::aligned_storage/std::aligned_union`. \r\n\r\nNote the first cherry-pick is not clean, because due to Google tooling issues, it accidently contained a revert of the prior two commits. See https://github.com/google/leveldb/pull/1249 for more details.\r\n\r\nAlso see https://issues.chromium.org/issues/388068052, although note that they [reverted the roll to latest leveldb](https://issues.chromium.org/issues/388068052#comment9). I'm guessing due to the acidental reversion issue above.",
    "labels": [],
    "created_at": "2025-01-30T14:01:28Z",
    "updated_at": "2025-03-20T09:13:13Z",
    "closed_at": "2025-03-20T05:03:59Z",
    "mergeable_state": "unknown",
    "merged": true,
    "merged_at": "2025-03-20T05:03:59Z",
    "merged_by": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "merge_commit_sha": "7d76c9725ca11889c552f46fe3a6bf6de7e86ab4",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "fanquake:leveldb_cpp23",
      "ref": "leveldb_cpp23",
      "sha": "c8fab356171a0e283d5716647e3243c04810ac51",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 5910539,
        "node_id": "MDEwOlJlcG9zaXRvcnk1OTEwNTM5",
        "name": "bitcoin",
        "full_name": "fanquake/bitcoin",
        "owner": {
          "login": "fanquake",
          "id": 863730,
          "node_id": "MDQ6VXNlcjg2MzczMA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/fanquake",
          "html_url": "https://github.com/fanquake",
          "followers_url": "https://api.github.com/users/fanquake/followers",
          "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
          "organizations_url": "https://api.github.com/users/fanquake/orgs",
          "repos_url": "https://api.github.com/users/fanquake/repos",
          "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/fanquake/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/fanquake/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/fanquake/bitcoin",
        "archive_url": "https://api.github.com/repos/fanquake/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/fanquake/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/fanquake/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/fanquake/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/fanquake/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/fanquake/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/fanquake/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/fanquake/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/fanquake/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/fanquake/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/fanquake/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/fanquake/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/fanquake/bitcoin/events",
        "forks_url": "https://api.github.com/repos/fanquake/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/fanquake/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/fanquake/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/fanquake/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/fanquake/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/fanquake/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/fanquake/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/fanquake/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/fanquake/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/fanquake/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/fanquake/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/fanquake/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/fanquake/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/fanquake/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/fanquake/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/fanquake/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:fanquake/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/fanquake/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/fanquake/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/fanquake/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/fanquake/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/fanquake/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/fanquake/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/fanquake/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/fanquake/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/fanquake/bitcoin/hooks",
        "svn_url": "https://github.com/fanquake/bitcoin",
        "homepage": "http://www.bitcoincore.org",
        "language": "C++",
        "forks_count": 5,
        "stargazers_count": 14,
        "watchers_count": 14,
        "size": 249550,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-03-20T06:21:43Z",
        "created_at": "2012-09-22T05:28:42Z",
        "updated_at": "2025-03-20T05:42:55Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "a799415d84d392c0f877d3619583b9a16f940c54",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36946,
        "stargazers_count": 82552,
        "watchers_count": 82552,
        "size": 278646,
        "default_branch": "master",
        "open_issues_count": 684,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-03-20T05:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-03-20T06:41:16Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31766"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 23,
    "deletions": 13,
    "changed_files": 4,
    "commits": 3,
    "review_comments": 0,
    "comments": 6
  },
  "events": [
    {
      "event": "commented",
      "id": 2624599660,
      "node_id": "IC_kwDOABII586ccDZs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2624599660",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-30T14:01:32Z",
      "updated_at": "2025-03-19T14:22:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/31766.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [darosior](https://github.com/bitcoin/bitcoin/pull/31766#pullrequestreview-2696569585), [dergoegge](https://github.com/bitcoin/bitcoin/pull/31766#pullrequestreview-2698577016), [l0rinc](https://github.com/bitcoin/bitcoin/pull/31766#issuecomment-2736826828) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31766#issuecomment-2624599660",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31766"
    },
    {
      "event": "commented",
      "id": 2624734895,
      "node_id": "IC_kwDOABII586cckav",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2624734895",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-30T15:00:25Z",
      "updated_at": "2025-01-30T15:00:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/36420557428</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31766#issuecomment-2624734895",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31766"
    },
    {
      "event": "labeled",
      "id": 16125569012,
      "node_id": "LE_lADOABII586oI9dkzwAAAAPBKKf0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16125569012",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-30T15:00:25Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2625180290,
      "node_id": "IC_kwDOABII586ceRKC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2625180290",
      "actor": {
        "login": "victorvianna",
        "id": 18370710,
        "node_id": "MDQ6VXNlcjE4MzcwNzEw",
        "avatar_url": "https://avatars.githubusercontent.com/u/18370710?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/victorvianna",
        "html_url": "https://github.com/victorvianna",
        "followers_url": "https://api.github.com/users/victorvianna/followers",
        "following_url": "https://api.github.com/users/victorvianna/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/victorvianna/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/victorvianna/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/victorvianna/subscriptions",
        "organizations_url": "https://api.github.com/users/victorvianna/orgs",
        "repos_url": "https://api.github.com/users/victorvianna/repos",
        "events_url": "https://api.github.com/users/victorvianna/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/victorvianna/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-30T17:48:56Z",
      "updated_at": "2025-01-30T17:48:56Z",
      "author_association": "NONE",
      "body": "FYI the upstream PR landed",
      "user": {
        "login": "victorvianna",
        "id": 18370710,
        "node_id": "MDQ6VXNlcjE4MzcwNzEw",
        "avatar_url": "https://avatars.githubusercontent.com/u/18370710?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/victorvianna",
        "html_url": "https://github.com/victorvianna",
        "followers_url": "https://api.github.com/users/victorvianna/followers",
        "following_url": "https://api.github.com/users/victorvianna/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/victorvianna/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/victorvianna/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/victorvianna/subscriptions",
        "organizations_url": "https://api.github.com/users/victorvianna/orgs",
        "repos_url": "https://api.github.com/users/victorvianna/repos",
        "events_url": "https://api.github.com/users/victorvianna/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/victorvianna/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31766#issuecomment-2625180290",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31766"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16635517538,
      "node_id": "HRFPE_lADOABII586oI9dkzwAAAAPfjdpi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16635517538",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "db5f5784d6e692894de31b17f1333fdbb38b38a4",
      "commit_url": "https://api.github.com/repos/fanquake/bitcoin/commits/db5f5784d6e692894de31b17f1333fdbb38b38a4",
      "created_at": "2025-03-07T17:08:25Z"
    },
    {
      "event": "renamed",
      "id": 16635531745,
      "node_id": "RTE_lADOABII586oI9dkzwAAAAPfjhHh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16635531745",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T17:09:39Z",
      "rename": {
        "from": "[WIP] leveldb: pull upstream C++23 changes",
        "to": "leveldb: pull upstream C++23 changes"
      }
    },
    {
      "event": "commented",
      "id": 2706979978,
      "node_id": "IC_kwDOABII586hWTyK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2706979978",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T17:10:39Z",
      "updated_at": "2025-03-07T17:10:39Z",
      "author_association": "MEMBER",
      "body": "Updated now that the changes have landed upstream in https://github.com/bitcoin-core/leveldb-subtree/pull/47.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31766#issuecomment-2706979978",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31766"
    },
    {
      "event": "ready_for_review",
      "id": 16635543748,
      "node_id": "RFRE_lADOABII586oI9dkzwAAAAPfjkDE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16635543748",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T17:10:41Z"
    },
    {
      "event": "unlabeled",
      "id": 16636630422,
      "node_id": "UNLE_lADOABII586oI9dkzwAAAAPfntWW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16636630422",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T18:56:43Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGExMzBiYmQxNTRkNTM1YjgwZmU5ZjYwMmExM2JmMmUzMjI4MTc4ODE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a130bbd154d535b80fe9f602a13bf2e322817881",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a130bbd154d535b80fe9f602a13bf2e322817881",
      "tree": {
        "sha": "5cc97a9cb91c01ec5fc38e2588ef4b315efdbb48",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5cc97a9cb91c01ec5fc38e2588ef4b315efdbb48"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d336b7ab85dd2b4f049f2f6fe176ffdd2621215e",
          "sha": "d336b7ab85dd2b4f049f2f6fe176ffdd2621215e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d336b7ab85dd2b4f049f2f6fe176ffdd2621215e"
        }
      ],
      "message": "Squashed 'src/leveldb/' changes from 04b5790928..4188247086\n\n4188247086 Merge bitcoin-core/leveldb-subtree#47: Fix C++23 compilation errors in leveldb\n183e79a495 Fix speculatively some \"placement new\" issues in leveldb\n82c31046ed Fix C++23 compilation errors in leveldb\n\ngit-subtree-dir: src/leveldb\ngit-subtree-split: 41882470862df219f74cdd38354007b91eb98191",
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2025-03-17T07:59:05Z"
      },
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2025-03-17T07:59:05Z"
      },
      "sha": "a130bbd154d535b80fe9f602a13bf2e322817881"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI0ZmQwMjM1ZTQ1ZDljZmI5ODU5NmJjODM2ZTk5YjU2Yzg4YzFlMWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/24fd0235e45d9cfb98596bc836e99b56c88c1e1e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/24fd0235e45d9cfb98596bc836e99b56c88c1e1e",
      "tree": {
        "sha": "c77d6f23409d5a46744899783f17caa170c1eef0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c77d6f23409d5a46744899783f17caa170c1eef0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c77d6f23409d5a46744899783f17caa170c1eef0\nparent a799415d84d392c0f877d3619583b9a16f940c54\nparent a130bbd154d535b80fe9f602a13bf2e322817881\nauthor fanquake <fanquake@gmail.com> 1742198345 +0800\ncommitter fanquake <fanquake@gmail.com> 1742198345 +0800\n\nUpdate leveldb subtree to latest upstream\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmfX1mMACgkQLuufXMCV\nJsFn3BAAg77nBOE9109FV9p2Q/FSEfJ6eQZfsl4IZmjSAkWeJhEVxrcO1JUfyrLe\ncCQyH3tYz8UT49mzfQgT1PgvcTWs+JqsgjnT0tWLnDwt5D9HvwheiJLX6oOyBUHR\n1Qiaibto4YWsLkMviS7u6S2vGMKSvoVOCjwnHmmLbnAOTOqSsD6Asg5fRhReSHzP\n65q190lnOr80uwZJ+i+HqQQ0vBR9iIyLiv8riUDzVTN2YwtwDRbEvRAdgo+WpChX\nUEXvPVQpD4YMnrGnC2kRUyrWQ2ZFra3V1gYk30XrK+WHuqCbe506REUE3vxdKOdl\nRBseV3HewnCqNqW3wZf7U1AnuOCA3Upj97QKGe9wRycVQ5Vd7nUhkVG01kfksU1Q\nM4vo7Z6QxIXwRSwpIxBA7s/ysqiUzObr0F4DFRLAwQHZi6f7lMAvHj2a/d40+TN7\nXsoMSePG03gRVCmPSfGZbMBmNOkOvmoe8Ueec35UnjtxTTuiXeyaIc8aDOtYbSjC\npu3wfnWOZg2mxzPwdH9Ff9Qp1Dws/3jWlG0q/mUDuHAuqz32cdABmNHcaoOEXcig\nRXcku36FWhJ0aba2s0SfEdFfa09xgm3lroUdIX8F6XdfpDZ+WX9AaMD6UBLEY5ii\nnD+sX6PzSqUAsxzTMe/GbS5hwKBfHsgiIE9WosYtxt80qk501vU=\n=h/Kj\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a799415d84d392c0f877d3619583b9a16f940c54",
          "sha": "a799415d84d392c0f877d3619583b9a16f940c54",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a799415d84d392c0f877d3619583b9a16f940c54"
        },
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a130bbd154d535b80fe9f602a13bf2e322817881",
          "sha": "a130bbd154d535b80fe9f602a13bf2e322817881",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a130bbd154d535b80fe9f602a13bf2e322817881"
        }
      ],
      "message": "Update leveldb subtree to latest upstream",
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2025-03-17T07:59:05Z"
      },
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2025-03-17T07:59:05Z"
      },
      "sha": "24fd0235e45d9cfb98596bc836e99b56c88c1e1e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM4ZmFiMzU2MTcxYTBlMjgzZDU3MTY2NDdlMzI0M2MwNDgxMGFjNTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c8fab356171a0e283d5716647e3243c04810ac51",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c8fab356171a0e283d5716647e3243c04810ac51",
      "tree": {
        "sha": "469a093ad40f1349e8c7f6f2229b2d04ecc205ef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/469a093ad40f1349e8c7f6f2229b2d04ecc205ef"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 469a093ad40f1349e8c7f6f2229b2d04ecc205ef\nparent 24fd0235e45d9cfb98596bc836e99b56c88c1e1e\nauthor fanquake <fanquake@gmail.com> 1738240319 +0000\ncommitter fanquake <fanquake@gmail.com> 1742198387 +0800\n\nci: remove -Wno-error=deprecated-declarations from ASAN\n\nThis is no-longer needed after the changes to leveldb.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmfX1nMACgkQLuufXMCV\nJsHvhw/9GvHQ4Asjh/twK+HqdNY7pivZvKgJUXJ6bLDaMIIvrtQ6yCsk7j/ogGHp\n+yU6fC+lgVmIx+b1xUnKgg9RW/7/nKKVYz1S6emNIArMfJiJ1EQSoT41hnpUUadl\nIs45YqusQ+Dbz7lAYgqiLrqjRBzBmKIpiUUPFlSjpqC11OZlQXwGgfSKOKRv2FE7\naK9fBJMv1pIC17nvmwbEbEuscrUCTXlyUpyFWaJv+mZVestZ/njfFmct6h+lyH5h\nV6tI2e0tcP9SYpmY5KsdY8J6uBqM+qSb9/FXKVj8nIWyWFOJqV7FJpgixxh1QIIF\nZpFsiJlLr+AHbq1R79WH9o1pYTlvfpgLRjwDM2Jw9Wj9re1M1gPSj7OA2R59jGXS\nfF48zg6XBs6bkOh3ZoeamDWGzjvfGHqVvRICLaM3Tpj73xBqXBKK/pkDRRgO/x/x\nFPiUTooNcYD5w19i6BwRJJCpNQE3EocOAumFB5MVeiTPli7zvyYCpxFw3IeKkRL/\nEBJJUveluKfKrKAfuXU8jT1o33K9jsfm8dNLWFkDIpeXXwMrnaVamnnlAH/yijrJ\nH595haNtQi766y8af6bGQ7vk4XzvJ9IT+GhSPWsNj195lyJiAnIgCN+9BJ15+rCP\nPQireHv4cgEZ2JbGLqlI9wZ4ovoOeMGnfB4JiTBgMqK6hJiUKwY=\n=Az7A\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/24fd0235e45d9cfb98596bc836e99b56c88c1e1e",
          "sha": "24fd0235e45d9cfb98596bc836e99b56c88c1e1e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/24fd0235e45d9cfb98596bc836e99b56c88c1e1e"
        }
      ],
      "message": "ci: remove -Wno-error=deprecated-declarations from ASAN\n\nThis is no-longer needed after the changes to leveldb.",
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2025-03-17T07:59:47Z"
      },
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2025-01-30T12:31:59Z"
      },
      "sha": "c8fab356171a0e283d5716647e3243c04810ac51"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16796688667,
      "node_id": "HRFPE_lADOABII586oI9dkzwAAAAPpKSEb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16796688667",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c8fab356171a0e283d5716647e3243c04810ac51",
      "commit_url": "https://api.github.com/repos/fanquake/bitcoin/commits/c8fab356171a0e283d5716647e3243c04810ac51",
      "created_at": "2025-03-17T08:15:38Z"
    },
    {
      "event": "review_requested",
      "id": 16823629668,
      "node_id": "RRE_lADOABII586oI9dkzwAAAAPqxDdk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16823629668",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-18T07:24:26Z",
      "requested_reviewer": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 16823629712,
      "node_id": "RRE_lADOABII586oI9dkzwAAAAPqxDeQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16823629712",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-18T07:24:26Z",
      "requested_reviewer": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2696569585,
      "node_id": "PRR_kwDOABII586gumLx",
      "url": null,
      "actor": null,
      "commit_id": "c8fab356171a0e283d5716647e3243c04810ac51",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK c8fab356171a0e283d5716647e3243c04810ac51 -- checked it's a clean subtree pull from https://github.com/bitcoin-core/leveldb-subtree/tree/bitcoin-fork",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31766#pullrequestreview-2696569585",
      "submitted_at": "2025-03-19T00:27:51Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31766"
    },
    {
      "event": "reviewed",
      "id": 2698577016,
      "node_id": "PRR_kwDOABII586g2QR4",
      "url": null,
      "actor": null,
      "commit_id": "c8fab356171a0e283d5716647e3243c04810ac51",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK c8fab356171a0e283d5716647e3243c04810ac51",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31766#pullrequestreview-2698577016",
      "submitted_at": "2025-03-19T14:00:14Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31766"
    },
    {
      "event": "commented",
      "id": 2736826828,
      "node_id": "IC_kwDOABII586jIKnM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2736826828",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-19T14:22:01Z",
      "updated_at": "2025-03-19T14:33:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "I have first compared every modified file completely against the latest versions of https://github.com/google/leveldb/blob/main/util/env_posix.cc, https://github.com/google/leveldb/blob/main/util/env_windows.cc and https://github.com/google/leveldb/blob/main/util/no_destructor.h, but realized we're too far behind.\r\n\r\n<details>\r\n<summary>Full diff</summary>\r\n\r\n```patch\r\ndiff --git a/src/leveldb/util/env_posix.cc b/src/leveldb/util/env_posix.cc\r\nindex 86571059ba..25399f9745 100644\r\n--- a/src/leveldb/util/env_posix.cc\r\n+++ b/src/leveldb/util/env_posix.cc\r\n@@ -4,9 +4,10 @@\r\n \r\n #include <dirent.h>\r\n #include <fcntl.h>\r\n-#include <pthread.h>\r\n #include <sys/mman.h>\r\n+#ifndef __Fuchsia__\r\n #include <sys/resource.h>\r\n+#endif\r\n #include <sys/stat.h>\r\n #include <sys/time.h>\r\n #include <sys/types.h>\r\n@@ -42,14 +43,14 @@ namespace {\r\n // Set by EnvPosixTestHelper::SetReadOnlyMMapLimit() and MaxOpenFiles().\r\n int g_open_read_only_file_limit = -1;\r\n \r\n-// Up to 4096 mmap regions for 64-bit binaries; none for 32-bit.\r\n-constexpr const int kDefaultMmapLimit = (sizeof(void*) >= 8) ? 4096 : 0;\r\n+// Up to 1000 mmap regions for 64-bit binaries; none for 32-bit.\r\n+constexpr const int kDefaultMmapLimit = (sizeof(void*) >= 8) ? 1000 : 0;\r\n \r\n // Can be set using EnvPosixTestHelper::SetReadOnlyMMapLimit().\r\n int g_mmap_limit = kDefaultMmapLimit;\r\n \r\n // Common flags defined for all posix open operations\r\n-#if HAVE_O_CLOEXEC\r\n+#if defined(HAVE_O_CLOEXEC)\r\n constexpr const int kOpenBaseFlags = O_CLOEXEC;\r\n #else\r\n constexpr const int kOpenBaseFlags = 0;\r\n@@ -72,7 +73,14 @@ Status PosixError(const std::string& context, int error_number) {\r\n class Limiter {\r\n  public:\r\n   // Limit maximum number of resources to |max_acquires|.\r\n-  Limiter(int max_acquires) : acquires_allowed_(max_acquires) {}\r\n+  Limiter(int max_acquires)\r\n+      :\r\n+#if !defined(NDEBUG)\r\n+        max_acquires_(max_acquires),\r\n+#endif  // !defined(NDEBUG)\r\n+        acquires_allowed_(max_acquires) {\r\n+    assert(max_acquires >= 0);\r\n+  }\r\n \r\n   Limiter(const Limiter&) = delete;\r\n   Limiter operator=(const Limiter&) = delete;\r\n@@ -85,15 +93,35 @@ class Limiter {\r\n \r\n     if (old_acquires_allowed > 0) return true;\r\n \r\n-    acquires_allowed_.fetch_add(1, std::memory_order_relaxed);\r\n+    int pre_increment_acquires_allowed =\r\n+        acquires_allowed_.fetch_add(1, std::memory_order_relaxed);\r\n+\r\n+    // Silence compiler warnings about unused arguments when NDEBUG is defined.\r\n+    (void)pre_increment_acquires_allowed;\r\n+    // If the check below fails, Release() was called more times than acquire.\r\n+    assert(pre_increment_acquires_allowed < max_acquires_);\r\n+\r\n     return false;\r\n   }\r\n \r\n   // Release a resource acquired by a previous call to Acquire() that returned\r\n   // true.\r\n-  void Release() { acquires_allowed_.fetch_add(1, std::memory_order_relaxed); }\r\n+  void Release() {\r\n+    int old_acquires_allowed =\r\n+        acquires_allowed_.fetch_add(1, std::memory_order_relaxed);\r\n+\r\n+    // Silence compiler warnings about unused arguments when NDEBUG is defined.\r\n+    (void)old_acquires_allowed;\r\n+    // If the check below fails, Release() was called more times than acquire.\r\n+    assert(old_acquires_allowed < max_acquires_);\r\n+  }\r\n \r\n  private:\r\n+#if !defined(NDEBUG)\r\n+  // Catches an excessive number of Release() calls.\r\n+  const int max_acquires_;\r\n+#endif  // !defined(NDEBUG)\r\n+\r\n   // The number of available resources.\r\n   //\r\n   // This is a counter and is not tied to the invariants of any other class, so\r\n@@ -108,7 +136,7 @@ class Limiter {\r\n class PosixSequentialFile final : public SequentialFile {\r\n  public:\r\n   PosixSequentialFile(std::string filename, int fd)\r\n-      : fd_(fd), filename_(filename) {}\r\n+      : fd_(fd), filename_(std::move(filename)) {}\r\n   ~PosixSequentialFile() override { close(fd_); }\r\n \r\n   Status Read(size_t n, Slice* result, char* scratch) override {\r\n@@ -135,8 +163,6 @@ class PosixSequentialFile final : public SequentialFile {\r\n     return Status::OK();\r\n   }\r\n \r\n-  virtual std::string GetName() const override { return filename_; }\r\n-\r\n  private:\r\n   const int fd_;\r\n   const std::string filename_;\r\n@@ -197,8 +223,6 @@ class PosixRandomAccessFile final : public RandomAccessFile {\r\n     return status;\r\n   }\r\n \r\n-  virtual std::string GetName() const override { return filename_; }\r\n-\r\n  private:\r\n   const bool has_permanent_fd_;  // If false, the file is opened on every read.\r\n   const int fd_;                 // -1 if has_permanent_fd_ is false.\r\n@@ -218,7 +242,7 @@ class PosixMmapReadableFile final : public RandomAccessFile {\r\n   // over the ownership of the region.\r\n   //\r\n   // |mmap_limiter| must outlive this instance. The caller must have already\r\n-  // aquired the right to use one mmap region, which will be released when this\r\n+  // acquired the right to use one mmap region, which will be released when this\r\n   // instance is destroyed.\r\n   PosixMmapReadableFile(std::string filename, char* mmap_base, size_t length,\r\n                         Limiter* mmap_limiter)\r\n@@ -243,8 +267,6 @@ class PosixMmapReadableFile final : public RandomAccessFile {\r\n     return Status::OK();\r\n   }\r\n \r\n-  virtual std::string GetName() const override { return filename_; }\r\n-\r\n  private:\r\n   char* const mmap_base_;\r\n   const size_t length_;\r\n@@ -325,7 +347,7 @@ class PosixWritableFile final : public WritableFile {\r\n       return status;\r\n     }\r\n \r\n-    return SyncFd(fd_, filename_, false);\r\n+    return SyncFd(fd_, filename_);\r\n   }\r\n \r\n  private:\r\n@@ -360,7 +382,7 @@ class PosixWritableFile final : public WritableFile {\r\n     if (fd < 0) {\r\n       status = PosixError(dirname_, errno);\r\n     } else {\r\n-      status = SyncFd(fd, dirname_, true);\r\n+      status = SyncFd(fd, dirname_);\r\n       ::close(fd);\r\n     }\r\n     return status;\r\n@@ -372,7 +394,7 @@ class PosixWritableFile final : public WritableFile {\r\n   //\r\n   // The path argument is only used to populate the description string in the\r\n   // returned Status if an error occurs.\r\n-  static Status SyncFd(int fd, const std::string& fd_path, bool syncing_dir) {\r\n+  static Status SyncFd(int fd, const std::string& fd_path) {\r\n #if HAVE_FULLFSYNC\r\n     // On macOS and iOS, fsync() doesn't guarantee durability past power\r\n     // failures. fcntl(F_FULLFSYNC) is required for that purpose. Some\r\n@@ -392,11 +414,6 @@ class PosixWritableFile final : public WritableFile {\r\n     if (sync_success) {\r\n       return Status::OK();\r\n     }\r\n-    // Do not crash if filesystem can't fsync directories\r\n-    // (see https://github.com/bitcoin/bitcoin/pull/10000)\r\n-    if (syncing_dir && errno == EINVAL) {\r\n-      return Status::OK();\r\n-    }\r\n     return PosixError(fd_path, errno);\r\n   }\r\n \r\n@@ -437,8 +454,6 @@ class PosixWritableFile final : public WritableFile {\r\n     return Basename(filename).starts_with(\"MANIFEST\");\r\n   }\r\n \r\n-  virtual std::string GetName() const override { return filename_; }\r\n-\r\n   // buf_[0, pos_ - 1] contains data to be written to fd_.\r\n   char buf_[kWritableFileBufferSize];\r\n   size_t pos_;\r\n@@ -600,7 +615,7 @@ class PosixEnv : public Env {\r\n     return Status::OK();\r\n   }\r\n \r\n-  Status DeleteFile(const std::string& filename) override {\r\n+  Status RemoveFile(const std::string& filename) override {\r\n     if (::unlink(filename.c_str()) != 0) {\r\n       return PosixError(filename, errno);\r\n     }\r\n@@ -614,7 +629,7 @@ class PosixEnv : public Env {\r\n     return Status::OK();\r\n   }\r\n \r\n-  Status DeleteDir(const std::string& dirname) override {\r\n+  Status RemoveDir(const std::string& dirname) override {\r\n     if (::rmdir(dirname.c_str()) != 0) {\r\n       return PosixError(dirname, errno);\r\n     }\r\n@@ -741,7 +756,7 @@ class PosixEnv : public Env {\r\n   // Instances are constructed on the thread calling Schedule() and used on the\r\n   // background thread.\r\n   //\r\n-  // This structure is thread-safe beacuse it is immutable.\r\n+  // This structure is thread-safe because it is immutable.\r\n   struct BackgroundWorkItem {\r\n     explicit BackgroundWorkItem(void (*function)(void* arg), void* arg)\r\n         : function(function), arg(arg) {}\r\n@@ -770,6 +785,10 @@ int MaxOpenFiles() {\r\n   if (g_open_read_only_file_limit >= 0) {\r\n     return g_open_read_only_file_limit;\r\n   }\r\n+#ifdef __Fuchsia__\r\n+  // Fuchsia doesn't implement getrlimit.\r\n+  g_open_read_only_file_limit = 50;\r\n+#else\r\n   struct ::rlimit rlim;\r\n   if (::getrlimit(RLIMIT_NOFILE, &rlim)) {\r\n     // getrlimit failed, fallback to hard-coded default.\r\n@@ -780,6 +799,7 @@ int MaxOpenFiles() {\r\n     // Allow use of 20% of available file descriptors for read-only files.\r\n     g_open_read_only_file_limit = rlim.rlim_cur / 5;\r\n   }\r\n+#endif\r\n   return g_open_read_only_file_limit;\r\n }\r\n \r\n@@ -906,4 +926,4 @@ Env* Env::Default() {\r\n   return env_container.env();\r\n }\r\n \r\n-}  // namespace leveldb\r\n+}  // namespace leveldb\r\n\\ No newline at end of file\r\ndiff --git a/src/leveldb/util/env_windows.cc b/src/leveldb/util/env_windows.cc\r\nindex 0a48c3fb52..4b68efdd33 100644\r\n--- a/src/leveldb/util/env_windows.cc\r\n+++ b/src/leveldb/util/env_windows.cc\r\n@@ -33,10 +33,6 @@\r\n #include \"util/mutexlock.h\"\r\n #include \"util/windows_logger.h\"\r\n \r\n-#if defined(DeleteFile)\r\n-#undef DeleteFile\r\n-#endif  // defined(DeleteFile)\r\n-\r\n namespace leveldb {\r\n \r\n namespace {\r\n@@ -118,7 +114,14 @@ class ScopedHandle {\r\n class Limiter {\r\n  public:\r\n   // Limit maximum number of resources to |max_acquires|.\r\n-  Limiter(int max_acquires) : acquires_allowed_(max_acquires) {}\r\n+  Limiter(int max_acquires)\r\n+      :\r\n+#if !defined(NDEBUG)\r\n+        max_acquires_(max_acquires),\r\n+#endif  // !defined(NDEBUG)\r\n+        acquires_allowed_(max_acquires) {\r\n+    assert(max_acquires >= 0);\r\n+  }\r\n \r\n   Limiter(const Limiter&) = delete;\r\n   Limiter operator=(const Limiter&) = delete;\r\n@@ -137,9 +140,22 @@ class Limiter {\r\n \r\n   // Release a resource acquired by a previous call to Acquire() that returned\r\n   // true.\r\n-  void Release() { acquires_allowed_.fetch_add(1, std::memory_order_relaxed); }\r\n+  void Release() {\r\n+    int old_acquires_allowed =\r\n+        acquires_allowed_.fetch_add(1, std::memory_order_relaxed);\r\n+\r\n+    // Silence compiler warnings about unused arguments when NDEBUG is defined.\r\n+    (void)old_acquires_allowed;\r\n+    // If the check below fails, Release() was called more times than acquire.\r\n+    assert(old_acquires_allowed < max_acquires_);\r\n+  }\r\n \r\n  private:\r\n+#if !defined(NDEBUG)\r\n+  // Catches an excessive number of Release() calls.\r\n+  const int max_acquires_;\r\n+#endif  // !defined(NDEBUG)\r\n+\r\n   // The number of available resources.\r\n   //\r\n   // This is a counter and is not tied to the invariants of any other class, so\r\n@@ -177,8 +193,6 @@ class WindowsSequentialFile : public SequentialFile {\r\n     return Status::OK();\r\n   }\r\n \r\n-  std::string GetName() const override { return filename_; }\r\n-\r\n  private:\r\n   const ScopedHandle handle_;\r\n   const std::string filename_;\r\n@@ -194,7 +208,7 @@ class WindowsRandomAccessFile : public RandomAccessFile {\r\n   Status Read(uint64_t offset, size_t n, Slice* result,\r\n               char* scratch) const override {\r\n     DWORD bytes_read = 0;\r\n-    OVERLAPPED overlapped = {};\r\n+    OVERLAPPED overlapped = {0};\r\n \r\n     overlapped.OffsetHigh = static_cast<DWORD>(offset >> 32);\r\n     overlapped.Offset = static_cast<DWORD>(offset);\r\n@@ -211,8 +225,6 @@ class WindowsRandomAccessFile : public RandomAccessFile {\r\n     return Status::OK();\r\n   }\r\n \r\n-  std::string GetName() const override { return filename_; }\r\n-\r\n  private:\r\n   const ScopedHandle handle_;\r\n   const std::string filename_;\r\n@@ -244,8 +256,6 @@ class WindowsMmapReadableFile : public RandomAccessFile {\r\n     return Status::OK();\r\n   }\r\n \r\n-  std::string GetName() const override { return filename_; }\r\n-\r\n  private:\r\n   char* const mmap_base_;\r\n   const size_t length_;\r\n@@ -315,8 +325,6 @@ class WindowsWritableFile : public WritableFile {\r\n     return Status::OK();\r\n   }\r\n \r\n-  std::string GetName() const override { return filename_; }\r\n-\r\n  private:\r\n   Status FlushBuffer() {\r\n     Status status = WriteUnbuffered(buf_, pos_);\r\n@@ -387,9 +395,8 @@ class WindowsEnv : public Env {\r\n     *result = nullptr;\r\n     DWORD desired_access = GENERIC_READ;\r\n     DWORD share_mode = FILE_SHARE_READ;\r\n-    auto wFilename = toUtf16(filename);\r\n-    ScopedHandle handle = ::CreateFileW(\r\n-        wFilename.c_str(), desired_access, share_mode,\r\n+    ScopedHandle handle = ::CreateFileA(\r\n+        filename.c_str(), desired_access, share_mode,\r\n         /*lpSecurityAttributes=*/nullptr, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL,\r\n         /*hTemplateFile=*/nullptr);\r\n     if (!handle.is_valid()) {\r\n@@ -405,9 +412,8 @@ class WindowsEnv : public Env {\r\n     *result = nullptr;\r\n     DWORD desired_access = GENERIC_READ;\r\n     DWORD share_mode = FILE_SHARE_READ;\r\n-    auto wFilename = toUtf16(filename);\r\n     ScopedHandle handle =\r\n-        ::CreateFileW(wFilename.c_str(), desired_access, share_mode,\r\n+        ::CreateFileA(filename.c_str(), desired_access, share_mode,\r\n                       /*lpSecurityAttributes=*/nullptr, OPEN_EXISTING,\r\n                       FILE_ATTRIBUTE_READONLY,\r\n                       /*hTemplateFile=*/nullptr);\r\n@@ -427,7 +433,7 @@ class WindowsEnv : public Env {\r\n     }\r\n \r\n     ScopedHandle mapping =\r\n-        ::CreateFileMappingW(handle.get(),\r\n+        ::CreateFileMappingA(handle.get(),\r\n                              /*security attributes=*/nullptr, PAGE_READONLY,\r\n                              /*dwMaximumSizeHigh=*/0,\r\n                              /*dwMaximumSizeLow=*/0,\r\n@@ -452,9 +458,8 @@ class WindowsEnv : public Env {\r\n                          WritableFile** result) override {\r\n     DWORD desired_access = GENERIC_WRITE;\r\n     DWORD share_mode = 0;  // Exclusive access.\r\n-    auto wFilename = toUtf16(filename);\r\n-    ScopedHandle handle = ::CreateFileW(\r\n-        wFilename.c_str(), desired_access, share_mode,\r\n+    ScopedHandle handle = ::CreateFileA(\r\n+        filename.c_str(), desired_access, share_mode,\r\n         /*lpSecurityAttributes=*/nullptr, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL,\r\n         /*hTemplateFile=*/nullptr);\r\n     if (!handle.is_valid()) {\r\n@@ -470,9 +475,8 @@ class WindowsEnv : public Env {\r\n                            WritableFile** result) override {\r\n     DWORD desired_access = FILE_APPEND_DATA;\r\n     DWORD share_mode = 0;  // Exclusive access.\r\n-    auto wFilename = toUtf16(filename);\r\n-    ScopedHandle handle = ::CreateFileW(\r\n-        wFilename.c_str(), desired_access, share_mode,\r\n+    ScopedHandle handle = ::CreateFileA(\r\n+        filename.c_str(), desired_access, share_mode,\r\n         /*lpSecurityAttributes=*/nullptr, OPEN_ALWAYS, FILE_ATTRIBUTE_NORMAL,\r\n         /*hTemplateFile=*/nullptr);\r\n     if (!handle.is_valid()) {\r\n@@ -485,16 +489,14 @@ class WindowsEnv : public Env {\r\n   }\r\n \r\n   bool FileExists(const std::string& filename) override {\r\n-    auto wFilename = toUtf16(filename);\r\n-    return GetFileAttributesW(wFilename.c_str()) != INVALID_FILE_ATTRIBUTES;\r\n+    return GetFileAttributesA(filename.c_str()) != INVALID_FILE_ATTRIBUTES;\r\n   }\r\n \r\n   Status GetChildren(const std::string& directory_path,\r\n                      std::vector<std::string>* result) override {\r\n     const std::string find_pattern = directory_path + \"\\\\*\";\r\n-    WIN32_FIND_DATAW find_data;\r\n-    auto wFind_pattern = toUtf16(find_pattern);\r\n-    HANDLE dir_handle = ::FindFirstFileW(wFind_pattern.c_str(), &find_data);\r\n+    WIN32_FIND_DATAA find_data;\r\n+    HANDLE dir_handle = ::FindFirstFileA(find_pattern.c_str(), &find_data);\r\n     if (dir_handle == INVALID_HANDLE_VALUE) {\r\n       DWORD last_error = ::GetLastError();\r\n       if (last_error == ERROR_FILE_NOT_FOUND) {\r\n@@ -506,12 +508,11 @@ class WindowsEnv : public Env {\r\n       char base_name[_MAX_FNAME];\r\n       char ext[_MAX_EXT];\r\n \r\n-      auto find_data_filename = toUtf8(find_data.cFileName);\r\n-      if (!_splitpath_s(find_data_filename.c_str(), nullptr, 0, nullptr, 0,\r\n-                        base_name, ARRAYSIZE(base_name), ext, ARRAYSIZE(ext))) {\r\n+      if (!_splitpath_s(find_data.cFileName, nullptr, 0, nullptr, 0, base_name,\r\n+                        ARRAYSIZE(base_name), ext, ARRAYSIZE(ext))) {\r\n         result->emplace_back(std::string(base_name) + ext);\r\n       }\r\n-    } while (::FindNextFileW(dir_handle, &find_data));\r\n+    } while (::FindNextFileA(dir_handle, &find_data));\r\n     DWORD last_error = ::GetLastError();\r\n     ::FindClose(dir_handle);\r\n     if (last_error != ERROR_NO_MORE_FILES) {\r\n@@ -520,25 +521,22 @@ class WindowsEnv : public Env {\r\n     return Status::OK();\r\n   }\r\n \r\n-  Status DeleteFile(const std::string& filename) override {\r\n-    auto wFilename = toUtf16(filename);\r\n-    if (!::DeleteFileW(wFilename.c_str())) {\r\n+  Status RemoveFile(const std::string& filename) override {\r\n+    if (!::DeleteFileA(filename.c_str())) {\r\n       return WindowsError(filename, ::GetLastError());\r\n     }\r\n     return Status::OK();\r\n   }\r\n \r\n   Status CreateDir(const std::string& dirname) override {\r\n-    auto wDirname = toUtf16(dirname);\r\n-    if (!::CreateDirectoryW(wDirname.c_str(), nullptr)) {\r\n+    if (!::CreateDirectoryA(dirname.c_str(), nullptr)) {\r\n       return WindowsError(dirname, ::GetLastError());\r\n     }\r\n     return Status::OK();\r\n   }\r\n \r\n-  Status DeleteDir(const std::string& dirname) override {\r\n-    auto wDirname = toUtf16(dirname);\r\n-    if (!::RemoveDirectoryW(wDirname.c_str())) {\r\n+  Status RemoveDir(const std::string& dirname) override {\r\n+    if (!::RemoveDirectoryA(dirname.c_str())) {\r\n       return WindowsError(dirname, ::GetLastError());\r\n     }\r\n     return Status::OK();\r\n@@ -546,8 +544,7 @@ class WindowsEnv : public Env {\r\n \r\n   Status GetFileSize(const std::string& filename, uint64_t* size) override {\r\n     WIN32_FILE_ATTRIBUTE_DATA file_attributes;\r\n-    auto wFilename = toUtf16(filename);\r\n-    if (!::GetFileAttributesExW(wFilename.c_str(), GetFileExInfoStandard,\r\n+    if (!::GetFileAttributesExA(filename.c_str(), GetFileExInfoStandard,\r\n                                 &file_attributes)) {\r\n       return WindowsError(filename, ::GetLastError());\r\n     }\r\n@@ -561,9 +558,7 @@ class WindowsEnv : public Env {\r\n   Status RenameFile(const std::string& from, const std::string& to) override {\r\n     // Try a simple move first. It will only succeed when |to| doesn't already\r\n     // exist.\r\n-    auto wFrom = toUtf16(from);\r\n-    auto wTo = toUtf16(to);\r\n-    if (::MoveFileW(wFrom.c_str(), wTo.c_str())) {\r\n+    if (::MoveFileA(from.c_str(), to.c_str())) {\r\n       return Status::OK();\r\n     }\r\n     DWORD move_error = ::GetLastError();\r\n@@ -572,7 +567,7 @@ class WindowsEnv : public Env {\r\n     // succeed when |to| does exist. When writing to a network share, we may not\r\n     // be able to change the ACLs. Ignore ACL errors then\r\n     // (REPLACEFILE_IGNORE_MERGE_ERRORS).\r\n-    if (::ReplaceFileW(wTo.c_str(), wFrom.c_str(), /*lpBackupFileName=*/nullptr,\r\n+    if (::ReplaceFileA(to.c_str(), from.c_str(), /*lpBackupFileName=*/nullptr,\r\n                        REPLACEFILE_IGNORE_MERGE_ERRORS,\r\n                        /*lpExclude=*/nullptr, /*lpReserved=*/nullptr)) {\r\n       return Status::OK();\r\n@@ -592,9 +587,8 @@ class WindowsEnv : public Env {\r\n   Status LockFile(const std::string& filename, FileLock** lock) override {\r\n     *lock = nullptr;\r\n     Status result;\r\n-    auto wFilename = toUtf16(filename);\r\n-    ScopedHandle handle = ::CreateFileW(\r\n-        wFilename.c_str(), GENERIC_READ | GENERIC_WRITE, FILE_SHARE_READ,\r\n+    ScopedHandle handle = ::CreateFileA(\r\n+        filename.c_str(), GENERIC_READ | GENERIC_WRITE, FILE_SHARE_READ,\r\n         /*lpSecurityAttributes=*/nullptr, OPEN_ALWAYS, FILE_ATTRIBUTE_NORMAL,\r\n         nullptr);\r\n     if (!handle.is_valid()) {\r\n@@ -634,11 +628,10 @@ class WindowsEnv : public Env {\r\n       return Status::OK();\r\n     }\r\n \r\n-    wchar_t wtmp_path[MAX_PATH];\r\n-    if (!GetTempPathW(ARRAYSIZE(wtmp_path), wtmp_path)) {\r\n+    char tmp_path[MAX_PATH];\r\n+    if (!GetTempPathA(ARRAYSIZE(tmp_path), tmp_path)) {\r\n       return WindowsError(\"GetTempPath\", ::GetLastError());\r\n     }\r\n-    std::string tmp_path = toUtf8(std::wstring(wtmp_path));\r\n     std::stringstream ss;\r\n     ss << tmp_path << \"leveldbtest-\" << std::this_thread::get_id();\r\n     *result = ss.str();\r\n@@ -649,8 +642,7 @@ class WindowsEnv : public Env {\r\n   }\r\n \r\n   Status NewLogger(const std::string& filename, Logger** result) override {\r\n-    auto wFilename = toUtf16(filename);\r\n-    std::FILE* fp = _wfopen(wFilename.c_str(), L\"w\");\r\n+    std::FILE* fp = std::fopen(filename.c_str(), \"wN\");\r\n     if (fp == nullptr) {\r\n       *result = nullptr;\r\n       return WindowsError(filename, ::GetLastError());\r\n@@ -689,7 +681,7 @@ class WindowsEnv : public Env {\r\n   // Instances are constructed on the thread calling Schedule() and used on the\r\n   // background thread.\r\n   //\r\n-  // This structure is thread-safe beacuse it is immutable.\r\n+  // This structure is thread-safe because it is immutable.\r\n   struct BackgroundWorkItem {\r\n     explicit BackgroundWorkItem(void (*function)(void* arg), void* arg)\r\n         : function(function), arg(arg) {}\r\n@@ -706,31 +698,6 @@ class WindowsEnv : public Env {\r\n       GUARDED_BY(background_work_mutex_);\r\n \r\n   Limiter mmap_limiter_;  // Thread-safe.\r\n-\r\n-  // Converts a Windows wide multi-byte UTF-16 string to a UTF-8 string.\r\n-  // See http://utf8everywhere.org/#windows\r\n-  std::string toUtf8(const std::wstring& wstr) {\r\n-    if (wstr.empty()) return std::string();\r\n-    int size_needed = WideCharToMultiByte(\r\n-        CP_UTF8, 0, &wstr[0], (int)wstr.size(), NULL, 0, NULL, NULL);\r\n-    std::string strTo(size_needed, 0);\r\n-    WideCharToMultiByte(CP_UTF8, 0, &wstr[0], (int)wstr.size(), &strTo[0],\r\n-                        size_needed, NULL, NULL);\r\n-    return strTo;\r\n-  }\r\n-\r\n-  // Converts a UTF-8 string to a Windows UTF-16 multi-byte wide character\r\n-  // string.\r\n-  // See http://utf8everywhere.org/#windows\r\n-  std::wstring toUtf16(const std::string& str) {\r\n-    if (str.empty()) return std::wstring();\r\n-    int size_needed =\r\n-        MultiByteToWideChar(CP_UTF8, 0, &str[0], (int)str.size(), NULL, 0);\r\n-    std::wstring strTo(size_needed, 0);\r\n-    MultiByteToWideChar(CP_UTF8, 0, &str[0], (int)str.size(), &strTo[0],\r\n-                        size_needed);\r\n-    return strTo;\r\n-  }\r\n };\r\n \r\n // Return the maximum number of concurrent mmaps.\r\n@@ -849,4 +816,4 @@ Env* Env::Default() {\r\n   return env_container.env();\r\n }\r\n \r\n-}  // namespace leveldb\r\n+}  // namespace leveldb\r\n\\ No newline at end of file\r\ndiff --git a/src/leveldb/util/no_destructor.h b/src/leveldb/util/no_destructor.h\r\nindex c28a107313..1836d2029c 100644\r\n--- a/src/leveldb/util/no_destructor.h\r\n+++ b/src/leveldb/util/no_destructor.h\r\n@@ -16,35 +16,35 @@ namespace leveldb {\r\n // This is intended for use with function-level static variables.\r\n template <typename InstanceType>\r\n class NoDestructor {\r\n- public:\r\n-  template <typename... ConstructorArgTypes>\r\n-  explicit NoDestructor(ConstructorArgTypes&&... constructor_args) {\r\n-    static_assert(sizeof(instance_storage_) >= sizeof(InstanceType),\r\n-                  \"instance_storage_ is not large enough to hold the instance\");\r\n-    static_assert(std::is_standard_layout_v<NoDestructor<InstanceType>>);\r\n-    static_assert(\r\n-        offsetof(NoDestructor, instance_storage_) % alignof(InstanceType) == 0,\r\n-        \"instance_storage_ does not meet the instance's alignment requirement\");\r\n-    static_assert(\r\n-        alignof(NoDestructor<InstanceType>) % alignof(InstanceType) == 0,\r\n-        \"instance_storage_ does not meet the instance's alignment requirement\");\r\n-    new (instance_storage_)\r\n-        InstanceType(std::forward<ConstructorArgTypes>(constructor_args)...);\r\n-  }\r\n-\r\n-  ~NoDestructor() = default;\r\n-\r\n-  NoDestructor(const NoDestructor&) = delete;\r\n-  NoDestructor& operator=(const NoDestructor&) = delete;\r\n-\r\n-  InstanceType* get() {\r\n-    return reinterpret_cast<InstanceType*>(&instance_storage_);\r\n-  }\r\n-\r\n- private:\r\n-  alignas(InstanceType) char instance_storage_[sizeof(InstanceType)];\r\n+public:\r\n+    template <typename... ConstructorArgTypes>\r\n+    explicit NoDestructor(ConstructorArgTypes&&... constructor_args) {\r\n+        static_assert(sizeof(instance_storage_) >= sizeof(InstanceType),\r\n+                      \"instance_storage_ is not large enough to hold the instance\");\r\n+        static_assert(std::is_standard_layout_v<NoDestructor<InstanceType>>);\r\n+        static_assert(\r\n+            offsetof(NoDestructor, instance_storage_) % alignof(InstanceType) == 0,\r\n+            \"instance_storage_ does not meet the instance's alignment requirement\");\r\n+        static_assert(\r\n+            alignof(NoDestructor<InstanceType>) % alignof(InstanceType) == 0,\r\n+            \"instance_storage_ does not meet the instance's alignment requirement\");\r\n+        new (instance_storage_)\r\n+            InstanceType(std::forward<ConstructorArgTypes>(constructor_args)...);\r\n+    }\r\n+\r\n+    ~NoDestructor() = default;\r\n+\r\n+    NoDestructor(const NoDestructor&) = delete;\r\n+    NoDestructor& operator=(const NoDestructor&) = delete;\r\n+\r\n+    InstanceType* get() {\r\n+        return reinterpret_cast<InstanceType*>(&instance_storage_);\r\n+    }\r\n+\r\n+private:\r\n+    alignas(InstanceType) char instance_storage_[sizeof(InstanceType)];\r\n };\r\n \r\n }  // namespace leveldb\r\n \r\n-#endif  // STORAGE_LEVELDB_UTIL_NO_DESTRUCTOR_H_\r\n+#endif  // STORAGE_LEVELDB_UTIL_NO_DESTRUCTOR_H_\r\n\\ No newline at end of file\r\n```\r\n\r\n</details>\r\n\r\nAfter that I have compared the modified codeparts only against latest and they match exactly.\r\n\r\nBuild failure is [known](https://github.com/bitcoin/bitcoin/issues/32085) and unrelated.\r\nBuild and tests are passing locally for a rebased version against latest `master`.\r\n\r\nACK c8fab356171a0e283d5716647e3243c04810ac51\r\n\r\nedit: running a full `reindex-chainstate` for a rebased version to validate the change",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31766#issuecomment-2736826828",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31766"
    },
    {
      "event": "merged",
      "id": 16890590616,
      "node_id": "ME_lADOABII586oI9dkzwAAAAPuwfWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16890590616",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7d76c9725ca11889c552f46fe3a6bf6de7e86ab4",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d76c9725ca11889c552f46fe3a6bf6de7e86ab4",
      "created_at": "2025-03-20T05:03:59Z"
    },
    {
      "event": "closed",
      "id": 16890590643,
      "node_id": "CE_lADOABII586oI9dkzwAAAAPuwfWz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16890590643",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-20T05:03:59Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 16890591459,
      "node_id": "HRDE_lADOABII586oI9dkzwAAAAPuwfjj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16890591459",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-20T05:04:08Z"
    },
    {
      "event": "commented",
      "id": 2739679633,
      "node_id": "IC_kwDOABII586jTDGR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2739679633",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-20T09:13:12Z",
      "updated_at": "2025-03-20T09:13:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "`reindex-chainstate` finished successfully\r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\n```bash\r\nCOMMITS=\"5e934ebc82ca239cd98eed1689f7cdc2c672a9ae\"; \\\r\nSTOP_HEIGHT=888000; DBCACHE=5000; \\\r\nC_COMPILER=gcc; CXX_COMPILER=g++; \\\r\ngit fetch --all -q && (for c in $COMMITS; do git log -1 --oneline $c || exit 1; done) && \\\r\nhyperfine \\\r\n  --export-json \"/mnt/my_storage/rdx-${COMMITS// /-}-${STOP_HEIGHT}-${DBCACHE}-${C_COMPILER}.json\" \\\r\n  --runs 1 \\\r\n  --parameter-list COMMIT ${COMMITS// /,} \\\r\n  --prepare \"killall bitcoind || true; rm -f /mnt/my_storage/BitcoinData/debug.log; git checkout {COMMIT}; git clean -fxd; git reset --hard; cmake -B build -DCMAKE_BUILD_TYPE=Release -DENABLE_WALLET=OFF -DCMAKE_C_COMPILER=$C_COMPILER -DCMAKE_CXX_COMPILER=$CXX_COMPILER && cmake --build build -j$(nproc) --target bitcoind && ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=$STOP_HEIGHT -dbcache=10000 -printtoconsole=0 || true\" \\\r\n  --cleanup \"cp /mnt/my_storage/BitcoinData/debug.log /mnt/my_storage/logs/debug-{COMMIT}-$(date +%s).log || true\" \\\r\n  \"COMPILER=$C_COMPILER COMMIT={COMMIT} ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=$STOP_HEIGHT -dbcache=$DBCACHE -blocksonly -reindex-chainstate -connect=0 -printtoconsole=0\"\r\n\r\n5e934ebc82 (l0rinc/detached179) ci: remove -Wno-error=deprecated-declarations from ASAN\r\nBenchmark 1: COMPILER=gcc COMMIT=5e934ebc82ca239cd98eed1689f7cdc2c672a9ae ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=888000 -dbcache=5000 -blocksonly -reindex-chainstate -connect=0 -printtoconsole=0\r\n  Time (abs ≡):        24720.986 s               [User: 22604.063 s, System: 1067.193 s]\r\n```\r\n\r\n</details>",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31766#issuecomment-2739679633",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31766"
    }
  ],
  "comments": []
}