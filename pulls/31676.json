{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31676",
    "id": 2282680287,
    "node_id": "PR_kwDOABII586IDu_f",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31676",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31676.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31676.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31676",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31676/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31676/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31676/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/0262565f717c51996b29b6bde4b41cf2661e122d",
    "number": 31676,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "fuzz: add targets for PCP and NAT-PMP port mapping requests",
    "user": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Based on https://github.com/bitcoin/bitcoin/pull/31022, this introduces a fuzz target for `PCPRequestPortMap` and `NATPMPRequestPortMap`.\r\n\r\nLike in #31022 we set `CreateSock` to return a `Sock` which mocks the responses from the server and uses a mocked steady clock for the `Wait`s. Except here we simply respond with fuzzer-provided data until the client stop sending requests. We also sometimes inject errors and connection failures based on fuzzer-provided data.\r\n\r\nI ran both targets overnight and generated a combined coverage report, temporarily available [here](https://antoinep.com/pcp_fuzz_coverage_report/).",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2025-01-16T20:06:33Z",
    "updated_at": "2025-01-22T20:54:35Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "788453b511357167cecf950167079fe48b8d5784",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "darosior:2501_pcp_fuzzing",
      "ref": "2501_pcp_fuzzing",
      "sha": "0262565f717c51996b29b6bde4b41cf2661e122d",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 168868367,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjg4NjgzNjc=",
        "name": "bitcoin",
        "full_name": "darosior/bitcoin",
        "owner": {
          "login": "darosior",
          "id": 22457751,
          "node_id": "MDQ6VXNlcjIyNDU3NzUx",
          "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/darosior",
          "html_url": "https://github.com/darosior",
          "followers_url": "https://api.github.com/users/darosior/followers",
          "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
          "organizations_url": "https://api.github.com/users/darosior/orgs",
          "repos_url": "https://api.github.com/users/darosior/repos",
          "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/darosior/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/darosior/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/darosior/bitcoin",
        "archive_url": "https://api.github.com/repos/darosior/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/darosior/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/darosior/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/darosior/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/darosior/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/darosior/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/darosior/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/darosior/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/darosior/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/darosior/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/darosior/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/darosior/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/darosior/bitcoin/events",
        "forks_url": "https://api.github.com/repos/darosior/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/darosior/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/darosior/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/darosior/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/darosior/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/darosior/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/darosior/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/darosior/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/darosior/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/darosior/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/darosior/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/darosior/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/darosior/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/darosior/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/darosior/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/darosior/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:darosior/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/darosior/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/darosior/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/darosior/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/darosior/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/darosior/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/darosior/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/darosior/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/darosior/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/darosior/bitcoin/hooks",
        "svn_url": "https://github.com/darosior/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 256025,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-01-22T19:48:49Z",
        "created_at": "2019-02-02T19:20:27Z",
        "updated_at": "2024-11-20T13:45:57Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "78fa88c53ad88639ed3a52b810870caff652be2e",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36594,
        "stargazers_count": 81570,
        "watchers_count": 81570,
        "size": 274480,
        "default_branch": "master",
        "open_issues_count": 695,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-01-22T20:01:28Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-01-22T20:56:18Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31676"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 876,
    "deletions": 20,
    "changed_files": 14,
    "commits": 10,
    "review_comments": 5,
    "comments": 7
  },
  "events": [
    {
      "event": "commented",
      "id": 2596794996,
      "node_id": "IC_kwDOABII586ax_J0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2596794996",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-16T20:06:36Z",
      "updated_at": "2025-01-20T10:49:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/31676.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [laanwj](https://github.com/bitcoin/bitcoin/pull/31676#issuecomment-2602079647) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#31014](https://github.com/bitcoin/bitcoin/pull/31014) (net: Use GetAdaptersAddresses to get local addresses on Windows by laanwj)\n* [#30988](https://github.com/bitcoin/bitcoin/pull/30988) (Split CConnman by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31676#issuecomment-2596794996",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31676"
    },
    {
      "event": "labeled",
      "id": 15967084876,
      "node_id": "LE_lADOABII586mhBxjzwAAAAO3tmFM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15967084876",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-16T20:06:39Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "labeled",
      "id": 15969243516,
      "node_id": "LE_lADOABII586mhBxjzwAAAAO311F8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15969243516",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-16T23:51:06Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2597140860,
      "node_id": "IC_kwDOABII586azTl8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2597140860",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-16T23:51:07Z",
      "updated_at": "2025-01-16T23:51:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/35738346096</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31676#issuecomment-2597140860",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31676"
    },
    {
      "event": "review_requested",
      "id": 15973572869,
      "node_id": "RRE_lADOABII586mhBxjzwAAAAO4GWEF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15973572869",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-17T08:44:11Z",
      "requested_reviewer": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 2598148421,
      "node_id": "IC_kwDOABII586a3JlF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2598148421",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-17T11:24:16Z",
      "updated_at": "2025-01-17T11:25:04Z",
      "author_association": "MEMBER",
      "body": "The ASAN failure is unrelated (#31675).\r\n\r\nhttps://cirrus-ci.com/task/6569144394448896?logs=ci#L3546:\r\n```bash\r\n[17:40:31.020] #29185\tNEW    cov: 1486 ft: 2800 corp: 248/5890b lim: 63 exec/s: 2653 rss: 125Mb L: 63/63 MS: 3 ShuffleBytes-InsertRepeatedBytes-InsertRepeatedBytes-\r\n[17:40:31.020] /ci_container_base/src/common/pcp.cpp:331:13: runtime error: implicit conversion from type 'uint16_t' (aka 'unsigned short') of value 65535 (16-bit, unsigned) to type 'uint8_t' (aka 'unsigned char') changed the value to 255 (8-bit, unsigned)\r\n[17:40:31.020]     #0 0x55b9257e023e in NATPMPRequestPortMap(CNetAddr const&, unsigned short, unsigned int, int, std::chrono::duration<long, std::ratio<1l, 1000l>>) /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/./common/pcp.cpp:331:13\r\n[17:40:31.020]     #1 0x55b9253f3a3c in natpmp_request_port_map_fuzz_target(std::span<unsigned char const, 18446744073709551615ul>) /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/test/fuzz/./test/fuzz/pcp.cpp:221:20\r\n[17:40:31.020]     #2 0x55b92573acbe in std::function<void (std::span<unsigned char const, 18446744073709551615ul>)>::operator()(std::span<unsigned char const, 18446744073709551615ul>) const /usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/std_function.h:591:9\r\n[17:40:31.020]     #3 0x55b92573acbe in test_one_input(std::span<unsigned char const, 18446744073709551615ul>) /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/test/fuzz/util/./test/fuzz/fuzz.cpp:85:5\r\n[17:40:31.020]     #4 0x55b92573aa27 in LLVMFuzzerTestOneInput /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/test/fuzz/util/./test/fuzz/fuzz.cpp:223:5\r\n[17:40:31.020]     #5 0x55b924db097a in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x1ca397a) (BuildId: 50d69ac9373512dbd1c6535b75b2d7bd7d794c1e)\r\n[17:40:31.020]     #6 0x55b924daff89 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) (/ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x1ca2f89) (BuildId: 50d69ac9373512dbd1c6535b75b2d7bd7d794c1e)\r\n[17:40:31.020]     #7 0x55b924db1985 in fuzzer::Fuzzer::MutateAndTestOne() (/ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x1ca4985) (BuildId: 50d69ac9373512dbd1c6535b75b2d7bd7d794c1e)\r\n[17:40:31.020]     #8 0x55b924db2475 in fuzzer::Fuzzer::Loop(std::vector<fuzzer::SizedFile, std::allocator<fuzzer::SizedFile>>&) (/ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x1ca5475) (BuildId: 50d69ac9373512dbd1c6535b75b2d7bd7d794c1e)\r\n[17:40:31.020]     #9 0x55b924d9e925 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x1c91925) (BuildId: 50d69ac9373512dbd1c6535b75b2d7bd7d794c1e)\r\n[17:40:31.020]     #10 0x55b924dcada6 in main (/ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x1cbdda6) (BuildId: 50d69ac9373512dbd1c6535b75b2d7bd7d794c1e)\r\n[17:40:31.020]     #11 0x7fb2218571c9  (/lib/x86_64-linux-gnu/libc.so.6+0x2a1c9) (BuildId: 6d64b17fbac799e68da7ebd9985ddf9b5cb375e6)\r\n[17:40:31.020]     #12 0x7fb22185728a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2a28a) (BuildId: 6d64b17fbac799e68da7ebd9985ddf9b5cb375e6)\r\n[17:40:31.020]     #13 0x55b924d92da4 in _start (/ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x1c85da4) (BuildId: 50d69ac9373512dbd1c6535b75b2d7bd7d794c1e)\r\n[17:40:31.020] \r\n[17:40:31.020] SUMMARY: UndefinedBehaviorSanitizer: implicit-unsigned-integer-truncation /ci_container_base/src/common/pcp.cpp:331:13 \r\n[17:40:31.020] MS: 3 CrossOver-ShuffleBytes-InsertRepeatedBytes-; base unit: 75aba7b3e37ee7e5d5428a9e36ed92db26b2aa77\r\n[17:40:31.020] 0x65,0x27,0x27,0xdf,0xd8,0xff,0xff,0xb,0x0,0x80,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x0,0x0,0x0,0x0,0x0,0x0,0x5a,0x29,0xff,0x2e,0xd0,0xff,0xff,0x3b,0xd0,0x0,0x2b,0x30,0x10,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x40,0x0,0x0,0x0,0x0,0x0,0x5a,\r\n[17:40:31.020] e''\\337\\330\\377\\377\\013\\000\\200\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000Z)\\377.\\320\\377\\377;\\320\\000+0\\020\\000\\000\\000\\000\\000\\000\\000\\000\\001@\\000\\000\\000\\000\\000Z\r\n[17:40:31.020] artifact_prefix='./'; Test unit written to ./crash-0eaf33f4d4832389ed1ec1517b990f870bb6fd6f\r\n[17:40:31.020] Base64: ZScn39j//wsAgP//////////////////AAAAAAAAWin/LtD//zvQACswEAAAAAAAAAAAAUAAAAAAAFo=\r\n```\r\n\r\nhttps://github.com/bitcoin/bitcoin/actions/runs/12816725670/job/35738347958?pr=31676#step:10:491:\r\n```bash\r\n   package_eval.cpp\r\nD:\\a\\bitcoin\\bitcoin\\src\\test\\fuzz\\pcp.cpp(121,47): error C2220: the following warning is treated as an error [D:\\a\\bitcoin\\bitcoin\\build\\src\\test\\fuzz\\fuzz.vcxproj]\r\nD:\\a\\bitcoin\\bitcoin\\src\\test\\fuzz\\pcp.cpp(121,47): warning C4305: 'return': truncation from 'int' to 'bool' [D:\\a\\bitcoin\\bitcoin\\build\\src\\test\\fuzz\\fuzz.vcxproj]\r\n  parse_hd_keypath.cpp\r\n  parse_iso8601.cpp\r\n```",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31676#issuecomment-2598148421",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31676"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM5N2U5OWYyY2QzNTFkMTc4Y2FlNDcwZDg0MDFiYzkzOWZiZTlmNGY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/397e99f2cd351d178cae470d8401bc939fbe9f4f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/397e99f2cd351d178cae470d8401bc939fbe9f4f",
      "tree": {
        "sha": "92761ee8206fa30466fea4f16eb87e674b120db3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/92761ee8206fa30466fea4f16eb87e674b120db3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/89720b7a1b37af885f304350fa25f2479179ae3e",
          "sha": "89720b7a1b37af885f304350fa25f2479179ae3e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/89720b7a1b37af885f304350fa25f2479179ae3e"
        }
      ],
      "message": "net: Add optional length checking to CService::SetSockAddr\n\nIn almost all cases (the only exception is `getifaddrs`), we know the\nsize of the data passed into SetSockAddr, so we can check this to be\nwhat is expected.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2025-01-17T14:41:26Z"
      },
      "author": {
        "name": "laanwj",
        "email": "126646+laanwj@users.noreply.github.com",
        "date": "2024-10-01T14:28:28Z"
      },
      "sha": "397e99f2cd351d178cae470d8401bc939fbe9f4f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk2OTNjNjQxYmJjYzQ5ZWZkYjQ2NDY4NWFiZDQ5YjA5MDQyMzM2MDg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9693c641bbcc49efdb464685abd49b0904233608",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9693c641bbcc49efdb464685abd49b0904233608",
      "tree": {
        "sha": "dfa991f41c0d2217b4a79d12609ba92d63cf246e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dfa991f41c0d2217b4a79d12609ba92d63cf246e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/397e99f2cd351d178cae470d8401bc939fbe9f4f",
          "sha": "397e99f2cd351d178cae470d8401bc939fbe9f4f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/397e99f2cd351d178cae470d8401bc939fbe9f4f"
        }
      ],
      "message": "util: Add mockable steady_clock\n\nThis adds a NodeSteadyClock, which is a steady_clock that can be mocked\nwith millisecond precision.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2025-01-17T14:41:26Z"
      },
      "author": {
        "name": "laanwj",
        "email": "126646+laanwj@users.noreply.github.com",
        "date": "2024-10-02T20:24:58Z"
      },
      "sha": "9693c641bbcc49efdb464685abd49b0904233608"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZhN2E1NjdkNmRiZGVmOTVmNjUyNjk3NWM3Y2ViZjJhMjRhNjNiNmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a7a567d6dbdef95f6526975c7cebf2a24a63b6b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6a7a567d6dbdef95f6526975c7cebf2a24a63b6b",
      "tree": {
        "sha": "c3c22c7a19802ba02b33a7677b191be17431c189",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c3c22c7a19802ba02b33a7677b191be17431c189"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9693c641bbcc49efdb464685abd49b0904233608",
          "sha": "9693c641bbcc49efdb464685abd49b0904233608",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9693c641bbcc49efdb464685abd49b0904233608"
        }
      ],
      "message": "net: Use mockable steady clock in PCP implementation\n\nThis will be needed for the test harness.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2025-01-17T14:41:26Z"
      },
      "author": {
        "name": "laanwj",
        "email": "126646+laanwj@users.noreply.github.com",
        "date": "2024-10-02T20:26:21Z"
      },
      "sha": "6a7a567d6dbdef95f6526975c7cebf2a24a63b6b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDdhOWUxNjkxMDJmNWU4NGM0NzNjNWQ4ZWU1YTk1NDY3ZDdhNDViMzI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7a9e169102f5e84c473c5d8ee5a95467d7a45b32",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7a9e169102f5e84c473c5d8ee5a95467d7a45b32",
      "tree": {
        "sha": "ccf1c4c0045f7a5158780e2a7b452e06005d27ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ccf1c4c0045f7a5158780e2a7b452e06005d27ec"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a7a567d6dbdef95f6526975c7cebf2a24a63b6b",
          "sha": "6a7a567d6dbdef95f6526975c7cebf2a24a63b6b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6a7a567d6dbdef95f6526975c7cebf2a24a63b6b"
        }
      ],
      "message": "test: Add tests for PCP and NATPMP implementations\n\nAdd a mock for a simple scriptable UDP server, and use this to test\nvarious code paths (including successful mappings, timeouts and errors)\nin the PCP and NATPMP implementations.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2025-01-17T14:41:26Z"
      },
      "author": {
        "name": "laanwj",
        "email": "126646+laanwj@users.noreply.github.com",
        "date": "2024-10-02T20:26:54Z"
      },
      "sha": "7a9e169102f5e84c473c5d8ee5a95467d7a45b32"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk0MTEzOGRhOTA1NjQ3NmYwMmMxNjVmNjEzNTFkN2QyNDhmNDlkZDM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/941138da9056476f02c165f61351d7d248f49dd3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/941138da9056476f02c165f61351d7d248f49dd3",
      "tree": {
        "sha": "3e4c7eb282ef3ff16a1edc05835537c0b105cd62",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3e4c7eb282ef3ff16a1edc05835537c0b105cd62"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7a9e169102f5e84c473c5d8ee5a95467d7a45b32",
          "sha": "7a9e169102f5e84c473c5d8ee5a95467d7a45b32",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7a9e169102f5e84c473c5d8ee5a95467d7a45b32"
        }
      ],
      "message": "qa: cover PROTOCOL_ERROR variant in PCP unit tests",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2025-01-17T14:41:26Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2025-01-13T19:30:35Z"
      },
      "sha": "941138da9056476f02c165f61351d7d248f49dd3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRlOWE0Y2MyM2E0OWNmMTE0NzU3MGE5NGM4OWY2ODA4NDNjNzZmNWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e9a4cc23a49cf1147570a94c89f680843c76f5a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4e9a4cc23a49cf1147570a94c89f680843c76f5a",
      "tree": {
        "sha": "1adacf7c25ae976522ae33ad6b5ac0d6ff648c70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1adacf7c25ae976522ae33ad6b5ac0d6ff648c70"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/941138da9056476f02c165f61351d7d248f49dd3",
          "sha": "941138da9056476f02c165f61351d7d248f49dd3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/941138da9056476f02c165f61351d7d248f49dd3"
        }
      ],
      "message": "pcp: make the ToString method const",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2025-01-17T14:41:26Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2025-01-16T19:43:06Z"
      },
      "sha": "4e9a4cc23a49cf1147570a94c89f680843c76f5a"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15978453106,
      "node_id": "HRFPE_lADOABII586mhBxjzwAAAAO4Y9hy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15978453106",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b55cb61af50e0d04bc813eade0fa1607416b87ea",
      "commit_url": "https://api.github.com/repos/darosior/bitcoin/commits/b55cb61af50e0d04bc813eade0fa1607416b87ea",
      "created_at": "2025-01-17T14:41:41Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE5NDIzZTg2ZmRiODBiNjY2NmQ5YzVmYTY0MzllN2U5MDlhNTYzMjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/19423e86fdb80b6666d9c5fa6439e7e909a56321",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/19423e86fdb80b6666d9c5fa6439e7e909a56321",
      "tree": {
        "sha": "7b6524af7f180e3bbfdb468389bf689b9ef63444",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7b6524af7f180e3bbfdb468389bf689b9ef63444"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e9a4cc23a49cf1147570a94c89f680843c76f5a",
          "sha": "4e9a4cc23a49cf1147570a94c89f680843c76f5a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4e9a4cc23a49cf1147570a94c89f680843c76f5a"
        }
      ],
      "message": "pcp: make NAT-PMP error codes uint16_t\n\nThey are defined as being 16 bits in the RFC and correctly parsed in the code\nwhich may result in an implicit conversion from uint16_t to uint8_t.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2025-01-17T21:54:11Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2025-01-17T21:46:41Z"
      },
      "sha": "19423e86fdb80b6666d9c5fa6439e7e909a56321"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15982810468,
      "node_id": "HRFPE_lADOABII586mhBxjzwAAAAO4plVk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15982810468",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "33a4dc294a4058b4216fc451b44ad10bffde40f0",
      "commit_url": "https://api.github.com/repos/darosior/bitcoin/commits/33a4dc294a4058b4216fc451b44ad10bffde40f0",
      "created_at": "2025-01-17T21:55:06Z"
    },
    {
      "event": "commented",
      "id": 2599279456,
      "node_id": "IC_kwDOABII586a7dtg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2599279456",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-17T21:56:08Z",
      "updated_at": "2025-01-17T21:56:08Z",
      "author_association": "MEMBER",
      "body": "Pushed a new commit to avoid the implicit `u16` -> `u8` conversion, which for some reason i can't reproduce (and didn't hit) locally.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31676#issuecomment-2599279456",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31676"
    },
    {
      "event": "unlabeled",
      "id": 15985234838,
      "node_id": "UNLE_lADOABII586mhBxjzwAAAAO4y1OW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15985234838",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-18T07:48:59Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2600826248,
      "node_id": "IC_kwDOABII586bBXWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2600826248",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-19T11:51:08Z",
      "updated_at": "2025-01-19T11:51:08Z",
      "author_association": "MEMBER",
      "body": "```\r\n\r\n$ echo \"Aw8DDwAAAABzAAgAAAAAAAH1/9UAAA==\" | base64 --decode > pcp_request_port_map.crash\r\n$ FUZZ=\"pcp_request_port_map\" ./fuzz ./pcp_request_port_map.crash # MSan or valgrind required to repro\r\n==3534==WARNING: MemorySanitizer: use-of-uninitialized-value\r\n    #0 0x561cd8bb1125 in PCPRequestPortMap(std::__1::array<unsigned char, 12ul> const&, CNetAddr const&, CNetAddr const&, unsigned short, unsigned int, int, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l>>)::$_0::operator()(Span<unsigned char const>) const /workdir/bitcoin/build_fuzz/src/./common/pcp.cpp:470:62\r\n    #1 0x561cd8bb1125 in decltype(std::declval<PCPRequestPortMap(std::__1::array<unsigned char, 12ul> const&, CNetAddr const&, CNetAddr const&, unsigned short, unsigned int, int, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l>>)::$_0&>()(std::declval<Span<unsigned char const>>())) std::__1::__invoke[abi:de190104]<PCPRequestPortMap(std::__1::array<unsigned char, 12ul> const&, CNetAddr const&, CNetAddr const&, unsigned short, unsigned int, int, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l>>)::$_0&, Span<unsigned char const>>(PCPRequestPortMap(std::__1::array<unsigned char, 12ul> const&, CNetAddr const&, CNetAddr const&, unsigned short, unsigned int, int, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l>>)::$_0&, Span<unsigned char const>&&) /libcxx_msan/include/c++/v1/__type_traits/invoke.h:149:25\r\n    #2 0x561cd8bb1125 in bool std::__1::__invoke_void_return_wrapper<bool, false>::__call[abi:de190104]<PCPRequestPortMap(std::__1::array<unsigned char, 12ul> const&, CNetAddr const&, CNetAddr const&, unsigned short, unsigned int, int, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l>>)::$_0&, Span<unsigned char const>>(PCPRequestPortMap(std::__1::array<unsigned char, 12ul> const&, CNetAddr const&, CNetAddr const&, unsigned short, unsigned int, int, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l>>)::$_0&, Span<unsigned char const>&&) /libcxx_msan/include/c++/v1/__type_traits/invoke.h:216:12\r\n    #3 0x561cd8bb1125 in std::__1::__function::__alloc_func<PCPRequestPortMap(std::__1::array<unsigned char, 12ul> const&, CNetAddr const&, CNetAddr const&, unsigned short, unsigned int, int, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l>>)::$_0, std::__1::allocator<PCPRequestPortMap(std::__1::array<unsigned char, 12ul> const&, CNetAddr const&, CNetAddr const&, unsigned short, unsigned int, int, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l>>)::$_0>, bool (Span<unsigned char const>)>::operator()[abi:de190104](Span<unsigned char const>&&) /libcxx_msan/include/c++/v1/__functional/function.h:171:12\r\n    #4 0x561cd8bb1125 in std::__1::__function::__func<PCPRequestPortMap(std::__1::array<unsigned char, 12ul> const&, CNetAddr const&, CNetAddr const&, unsigned short, unsigned int, int, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l>>)::$_0, std::__1::allocator<PCPRequestPortMap(std::__1::array<unsigned char, 12ul> const&, CNetAddr const&, CNetAddr const&, unsigned short, unsigned int, int, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l>>)::$_0>, bool (Span<unsigned char const>)>::operator()(Span<unsigned char const>&&) /libcxx_msan/include/c++/v1/__functional/function.h:313:10\r\n    #5 0x561cd8ba1719 in std::__1::__function::__value_func<bool (Span<unsigned char const>)>::operator()[abi:de190104](Span<unsigned char const>&&) const /libcxx_msan/include/c++/v1/__functional/function.h:430:12\r\n    #6 0x561cd8ba1719 in std::__1::function<bool (Span<unsigned char const>)>::operator()(Span<unsigned char const>) const /libcxx_msan/include/c++/v1/__functional/function.h:989:10\r\n    #7 0x561cd8ba1719 in (anonymous namespace)::PCPSendRecv(Sock&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, Span<unsigned char const>, int, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l>>, std::__1::function<bool (Span<unsigned char const>)>) /workdir/bitcoin/build_fuzz/src/./common/pcp.cpp:259:17\r\n    #8 0x561cd8ba5d3b in PCPRequestPortMap(std::__1::array<unsigned char, 12ul> const&, CNetAddr const&, CNetAddr const&, unsigned short, unsigned int, int, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l>>) /workdir/bitcoin/build_fuzz/src/./common/pcp.cpp:459:21\r\n    #9 0x561cd86520ed in pcp_request_port_map_fuzz_target(std::__1::span<unsigned char const, 18446744073709551615ul>) /workdir/bitcoin/build_fuzz/src/test/fuzz/./test/fuzz/pcp.cpp:195:20\r\n    #10 0x561cd7f9e035 in decltype(std::declval<void (*&)(std::__1::span<unsigned char const, 18446744073709551615ul>)>()(std::declval<std::__1::span<unsigned char const, 18446744073709551615ul>>())) std::__1::__invoke[abi:de190104]<void (*&)(std::__1::span<unsigned char const, 18446744073709551615ul>), std::__1::span<unsigned char const, 18446744073709551615ul>>(void (*&)(std::__1::span<unsigned char const, 18446744073709551615ul>), std::__1::span<unsigned char const, 18446744073709551615ul>&&) /libcxx_msan/include/c++/v1/__type_traits/invoke.h:149:25\r\n    #11 0x561cd7f9e035 in void std::__1::__invoke_void_return_wrapper<void, true>::__call[abi:de190104]<void (*&)(std::__1::span<unsigned char const, 18446744073709551615ul>), std::__1::span<unsigned char const, 18446744073709551615ul>>(void (*&)(std::__1::span<unsigned char const, 18446744073709551615ul>), std::__1::span<unsigned char const, 18446744073709551615ul>&&) /libcxx_msan/include/c++/v1/__type_traits/invoke.h:224:5\r\n    #12 0x561cd7f9e035 in std::__1::__function::__alloc_func<void (*)(std::__1::span<unsigned char const, 18446744073709551615ul>), std::__1::allocator<void (*)(std::__1::span<unsigned char const, 18446744073709551615ul>)>, void (std::__1::span<unsigned char const, 18446744073709551615ul>)>::operator()[abi:de190104](std::__1::span<unsigned char const, 18446744073709551615ul>&&) /libcxx_msan/include/c++/v1/__functional/function.h:171:12\r\n    #13 0x561cd7f9e035 in std::__1::__function::__func<void (*)(std::__1::span<unsigned char const, 18446744073709551615ul>), std::__1::allocator<void (*)(std::__1::span<unsigned char const, 18446744073709551615ul>)>, void (std::__1::span<unsigned char const, 18446744073709551615ul>)>::operator()(std::__1::span<unsigned char const, 18446744073709551615ul>&&) /libcxx_msan/include/c++/v1/__functional/function.h:313:10\r\n    #14 0x561cd8ac6394 in std::__1::__function::__value_func<void (std::__1::span<unsigned char const, 18446744073709551615ul>)>::operator()[abi:de190104](std::__1::span<unsigned char const, 18446744073709551615ul>&&) const /libcxx_msan/include/c++/v1/__functional/function.h:430:12\r\n    #15 0x561cd8ac6394 in std::__1::function<void (std::__1::span<unsigned char const, 18446744073709551615ul>)>::operator()(std::__1::span<unsigned char const, 18446744073709551615ul>) const /libcxx_msan/include/c++/v1/__functional/function.h:989:10\r\n    #16 0x561cd8ac6394 in test_one_input(std::__1::span<unsigned char const, 18446744073709551615ul>) /workdir/bitcoin/build_fuzz/src/test/fuzz/util/./test/fuzz/fuzz.cpp:85:5\r\n    #17 0x561cd8ac6394 in LLVMFuzzerTestOneInput /workdir/bitcoin/build_fuzz/src/test/fuzz/util/./test/fuzz/fuzz.cpp:223:5\r\n    #18 0x561cd7e87d56 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13\r\n    #19 0x561cd7e715f2 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:328:6\r\n    #20 0x561cd7e7750f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:863:9\r\n    #21 0x561cd7ea3932 in main /llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10\r\n    #22 0x7f4fe2319d67  (/lib/x86_64-linux-gnu/libc.so.6+0x29d67) (BuildId: 3bc74dbb72522bb47e0d899e5615140b044a5b40)\r\n    #23 0x7f4fe2319e24 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e24) (BuildId: 3bc74dbb72522bb47e0d899e5615140b044a5b40)\r\n    #24 0x561cd7e69640 in _start (/workdir/out/libfuzzer_msan/fuzz+0xf18640)\r\n\r\n  Uninitialized value was created by an allocation of 'response' in the stack frame\r\n    #0 0x561cd8ba0dc2 in (anonymous namespace)::PCPSendRecv(Sock&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, Span<unsigned char const>, int, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l>>, std::__1::function<bool (Span<unsigned char const>)>) /workdir/bitcoin/build_fuzz/src/./common/pcp.cpp:224:5\r\n\r\nSUMMARY: MemorySanitizer: use-of-uninitialized-value /workdir/bitcoin/build_fuzz/src/./common/pcp.cpp:470:62 in PCPRequestPortMap(std::__1::array<unsigned char, 12ul> const&, CNetAddr const&, CNetAddr const&, unsigned short, unsigned int, int, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l>>)::$_0::operator()(Span<unsigned char const>) const\r\n```",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31676#issuecomment-2600826248",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31676"
    },
    {
      "event": "commented",
      "id": 2602079647,
      "node_id": "IC_kwDOABII586bGJWf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2602079647",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-20T10:49:02Z",
      "updated_at": "2025-01-20T10:49:02Z",
      "author_association": "MEMBER",
      "body": "Code review ACK.\r\nThe extra commits \"[pcp: make the ToString method const](https://github.com/bitcoin/bitcoin/pull/31676/commits/4e9a4cc23a49cf1147570a94c89f680843c76f5a)\"  and \"[pcp: make NAT-PMP error codes uint16_t](https://github.com/bitcoin/bitcoin/pull/31676/commits/19423e86fdb80b6666d9c5fa6439e7e909a56321)\" also LGTM.\r\n\r\nHave tried to investigate what is happening in @dergoegge 's case but was unable to find the issue, how `PCPSendRecv` can return a response while the buffer is uninitialized. Would be interesting if this already found its first bug.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31676#issuecomment-2602079647",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31676"
    },
    {
      "event": "mentioned",
      "id": 15996900062,
      "node_id": "MEE_lADOABII586mhBxjzwAAAAO5fVLe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15996900062",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-20T10:49:04Z"
    },
    {
      "event": "subscribed",
      "id": 15996900085,
      "node_id": "SE_lADOABII586mhBxjzwAAAAO5fVL1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15996900085",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-20T10:49:04Z"
    },
    {
      "event": "reviewed",
      "id": 2564001802,
      "node_id": "PRR_kwDOABII586Y05AK",
      "url": null,
      "actor": null,
      "commit_id": "33a4dc294a4058b4216fc451b44ad10bffde40f0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31676#pullrequestreview-2564001802",
      "submitted_at": "2025-01-21T09:34:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31676"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16021350072,
      "node_id": "HRFPE_lADOABII586mhBxjzwAAAAO68ma4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16021350072",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "73eaaaf4b1a08bdd510bbd1fc85eee92d4df1c83",
      "commit_url": "https://api.github.com/repos/darosior/bitcoin/commits/73eaaaf4b1a08bdd510bbd1fc85eee92d4df1c83",
      "created_at": "2025-01-21T23:21:03Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16033452835,
      "node_id": "HRFPE_lADOABII586mhBxjzwAAAAO7qxMj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16033452835",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "72b734e42be409099460ea04967a3889033d15f5",
      "commit_url": "https://api.github.com/repos/darosior/bitcoin/commits/72b734e42be409099460ea04967a3889033d15f5",
      "created_at": "2025-01-22T18:45:51Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFmNTI3MTBhMjVlYTRiYjUxZWEzNDY0MDMwMzI0MDMzMTgzYmRmNzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/af52710a25ea4bb51ea3464030324033183bdf75",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/af52710a25ea4bb51ea3464030324033183bdf75",
      "tree": {
        "sha": "113aff36eb89f5d760c4474632168a99400dce3e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/113aff36eb89f5d760c4474632168a99400dce3e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/19423e86fdb80b6666d9c5fa6439e7e909a56321",
          "sha": "19423e86fdb80b6666d9c5fa6439e7e909a56321",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/19423e86fdb80b6666d9c5fa6439e7e909a56321"
        }
      ],
      "message": "fuzz: add steady clock mocking to FuzzedSock",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2025-01-22T19:48:09Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2025-01-22T16:37:02Z"
      },
      "sha": "af52710a25ea4bb51ea3464030324033183bdf75"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZjNDIxZTY5Y2RmMGJmYjc3OWU4YTZkY2YzNDhjZjRhZDhhYjI2NTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fc421e69cdf0bfb779e8a6dcf348cf4ad8ab2656",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fc421e69cdf0bfb779e8a6dcf348cf4ad8ab2656",
      "tree": {
        "sha": "6f0c460dfe6a01a83644e74dfe92c3429407d76b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6f0c460dfe6a01a83644e74dfe92c3429407d76b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/af52710a25ea4bb51ea3464030324033183bdf75",
          "sha": "af52710a25ea4bb51ea3464030324033183bdf75",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/af52710a25ea4bb51ea3464030324033183bdf75"
        }
      ],
      "message": "fuzz: never return an uninitialized sockaddr in FuzzedSock::GetSockName\n\nThe fuzz provider's `ConsumeData` may return less data than necessary\nto fill the sockaddr struct and still return success. Fix this to avoid\nthe caller using uninitialized memory.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2025-01-22T19:48:09Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2025-01-22T16:49:33Z"
      },
      "sha": "fc421e69cdf0bfb779e8a6dcf348cf4ad8ab2656"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAyNjI1NjVmNzE3YzUxOTk2YjI5YjZiZGU0YjQxY2YyNjYxZTEyMmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0262565f717c51996b29b6bde4b41cf2661e122d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0262565f717c51996b29b6bde4b41cf2661e122d",
      "tree": {
        "sha": "7d395aa33a9354f5ec5f8360411e0e1b3cee39d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7d395aa33a9354f5ec5f8360411e0e1b3cee39d5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fc421e69cdf0bfb779e8a6dcf348cf4ad8ab2656",
          "sha": "fc421e69cdf0bfb779e8a6dcf348cf4ad8ab2656",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fc421e69cdf0bfb779e8a6dcf348cf4ad8ab2656"
        }
      ],
      "message": "fuzz: implement targets for PCP and NAT-PMP port mapping requests",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2025-01-22T19:48:09Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2025-01-15T21:14:30Z"
      },
      "sha": "0262565f717c51996b29b6bde4b41cf2661e122d"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16034107392,
      "node_id": "HRFPE_lADOABII586mhBxjzwAAAAO7tRAA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16034107392",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0262565f717c51996b29b6bde4b41cf2661e122d",
      "commit_url": "https://api.github.com/repos/darosior/bitcoin/commits/0262565f717c51996b29b6bde4b41cf2661e122d",
      "created_at": "2025-01-22T19:48:51Z"
    },
    {
      "event": "labeled",
      "id": 16034113697,
      "node_id": "LE_lADOABII586mhBxjzwAAAAO7tSih",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16034113697",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-22T19:49:32Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2608130256,
      "node_id": "IC_kwDOABII586bdOjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2608130256",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-22T19:49:33Z",
      "updated_at": "2025-01-22T19:49:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/36015736208</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31676#issuecomment-2608130256",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31676"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1923371490",
      "pull_request_review_id": 2564001802,
      "id": 1923371490,
      "node_id": "PRRC_kwDOABII585ypFHi",
      "diff_hunk": "@@ -0,0 +1,229 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/net.h>\n+\n+#include <common/pcp.h>\n+#include <util/check.h>\n+\n+using namespace std::literals;\n+\n+//! Fixed nonce to use in PCP port mapping requests.\n+constexpr PCPMappingNonce PCP_NONCE{0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc};\n+\n+//! NAT-PMP or PCP server port.\n+constexpr uint16_t SERVER_PORT{5351};\n+\n+//! Number of attempts to request a NAT-PMP or PCP port mapping to the gateway.\n+constexpr int NUM_TRIES{5};\n+\n+//! Timeout for each attempt to request a port mapping.\n+constexpr std::chrono::duration TIMEOUT{100ms};\n+\n+/** Simple mocked socket which returns fuzzer-provided data and sometimes randomly inject some faults.\n+ */\n+class PCPFuzzSock final : public Sock\n+{\n+private:\n+    // Note: we awkwardly mark all methods as const, and properties as mutable,\n+    // because Sock expects all networking calls to be const.\n+    mutable std::chrono::milliseconds m_time{MockableSteadyClock::INITIAL_MOCK_TIME};\n+    mutable bool m_connected{false};\n+    mutable CService m_bound;\n+    mutable CNetAddr m_local_ip;\n+    mutable CNetAddr m_gateway_ip;\n+    FuzzedDataProvider& m_fuzz_data;\n+\n+    void ElapseTime(std::chrono::milliseconds duration) const\n+    {\n+        m_time += duration;\n+        MockableSteadyClock::SetMockTime(m_time);\n+    }\n+\n+public:\n+    explicit PCPFuzzSock(const CNetAddr &local_ip, const CNetAddr &gateway_ip, FuzzedDataProvider& prov)\n+        : Sock{INVALID_SOCKET},\n+          m_local_ip(local_ip),\n+          m_gateway_ip(gateway_ip),\n+          m_fuzz_data(prov)\n+    {\n+        ElapseTime(std::chrono::seconds(0)); // start mocking steady time\n+    }\n+\n+    PCPFuzzSock& operator=(Sock&& other) override\n+    {\n+        Assert(false && \"Move of Sock into PCPFuzzSock not allowed.\");\n+        return *this;\n+    }\n+\n+    /** Sending bytes to the gateway normally succeeds when connected. We sometimes inject some faults. */\n+    ssize_t Send(const void* data, size_t len, int) const override {\n+        if (!m_connected) return -1;\n+        if (m_fuzz_data.ConsumeBool()) return -1;\n+        return len;\n+    }\n+\n+    /** We receive random bytes from the gateway. We make it sometimes fail, too. */\n+    ssize_t Recv(void* buf, size_t len, int flags) const override\n+    {\n+        if (m_fuzz_data.ConsumeBool()) return -1;\n+        const auto consumed_bytes{m_fuzz_data.ConsumeIntegralInRange<size_t>(0, len)};\n+        const auto data{m_fuzz_data.ConsumeBytes<uint8_t>(consumed_bytes)};\n+        if (!data.empty()) std::memcpy(buf, data.data(), data.size());\n+        return consumed_bytes;",
      "path": "src/test/fuzz/pcp.cpp",
      "position": null,
      "original_position": 77,
      "commit_id": "0262565f717c51996b29b6bde4b41cf2661e122d",
      "original_commit_id": "33a4dc294a4058b4216fc451b44ad10bffde40f0",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Here's my theory for the MSan failure:\r\n\r\n`data` might hold less bytes than `consumed_bytes` indicated because the fuzzed data provider might not have enough bytes left. This means only `data.size()` bytes of `buf` will be initialized with the memcpy but `consumed_bytes` is returned as the number of bytes \"received\".\r\n\r\nThis should work:\r\n\r\n```suggestion\r\n        const auto data{ConsumeRandomLengthByteVector(fuzzed_data_provider, len)};\r\n        if (!data.empty()) std::memcpy(buf, data.data(), data.size());\r\n        return data.size();\r\n```\r\n\r\nOr alternatively, is there a reason not use `FuzzedSock`?",
      "created_at": "2025-01-21T09:34:36Z",
      "updated_at": "2025-01-21T09:34:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31676#discussion_r1923371490",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1923371490"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31676"
        }
      },
      "start_line": null,
      "original_start_line": 74,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 77,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1923883932",
      "pull_request_review_id": 2564895386,
      "id": 1923883932,
      "node_id": "PRRC_kwDOABII585yrCOc",
      "diff_hunk": "@@ -0,0 +1,229 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/net.h>\n+\n+#include <common/pcp.h>\n+#include <util/check.h>\n+\n+using namespace std::literals;\n+\n+//! Fixed nonce to use in PCP port mapping requests.\n+constexpr PCPMappingNonce PCP_NONCE{0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc};\n+\n+//! NAT-PMP or PCP server port.\n+constexpr uint16_t SERVER_PORT{5351};\n+\n+//! Number of attempts to request a NAT-PMP or PCP port mapping to the gateway.\n+constexpr int NUM_TRIES{5};\n+\n+//! Timeout for each attempt to request a port mapping.\n+constexpr std::chrono::duration TIMEOUT{100ms};\n+\n+/** Simple mocked socket which returns fuzzer-provided data and sometimes randomly inject some faults.\n+ */\n+class PCPFuzzSock final : public Sock\n+{\n+private:\n+    // Note: we awkwardly mark all methods as const, and properties as mutable,\n+    // because Sock expects all networking calls to be const.\n+    mutable std::chrono::milliseconds m_time{MockableSteadyClock::INITIAL_MOCK_TIME};\n+    mutable bool m_connected{false};\n+    mutable CService m_bound;\n+    mutable CNetAddr m_local_ip;\n+    mutable CNetAddr m_gateway_ip;\n+    FuzzedDataProvider& m_fuzz_data;\n+\n+    void ElapseTime(std::chrono::milliseconds duration) const\n+    {\n+        m_time += duration;\n+        MockableSteadyClock::SetMockTime(m_time);\n+    }\n+\n+public:\n+    explicit PCPFuzzSock(const CNetAddr &local_ip, const CNetAddr &gateway_ip, FuzzedDataProvider& prov)\n+        : Sock{INVALID_SOCKET},\n+          m_local_ip(local_ip),\n+          m_gateway_ip(gateway_ip),\n+          m_fuzz_data(prov)\n+    {\n+        ElapseTime(std::chrono::seconds(0)); // start mocking steady time\n+    }\n+\n+    PCPFuzzSock& operator=(Sock&& other) override\n+    {\n+        Assert(false && \"Move of Sock into PCPFuzzSock not allowed.\");\n+        return *this;\n+    }\n+\n+    /** Sending bytes to the gateway normally succeeds when connected. We sometimes inject some faults. */\n+    ssize_t Send(const void* data, size_t len, int) const override {\n+        if (!m_connected) return -1;\n+        if (m_fuzz_data.ConsumeBool()) return -1;\n+        return len;\n+    }\n+\n+    /** We receive random bytes from the gateway. We make it sometimes fail, too. */\n+    ssize_t Recv(void* buf, size_t len, int flags) const override\n+    {\n+        if (m_fuzz_data.ConsumeBool()) return -1;\n+        const auto consumed_bytes{m_fuzz_data.ConsumeIntegralInRange<size_t>(0, len)};\n+        const auto data{m_fuzz_data.ConsumeBytes<uint8_t>(consumed_bytes)};\n+        if (!data.empty()) std::memcpy(buf, data.data(), data.size());\n+        return consumed_bytes;",
      "path": "src/test/fuzz/pcp.cpp",
      "position": null,
      "original_position": 77,
      "commit_id": "0262565f717c51996b29b6bde4b41cf2661e122d",
      "original_commit_id": "33a4dc294a4058b4216fc451b44ad10bffde40f0",
      "in_reply_to_id": 1923371490,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Mostly to mock the clock in `Wait` iirc. I'll reproduce your fuzz finding now and look into this. Thanks!",
      "created_at": "2025-01-21T14:59:37Z",
      "updated_at": "2025-01-21T14:59:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31676#discussion_r1923883932",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1923883932"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31676"
        }
      },
      "start_line": null,
      "original_start_line": 74,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 77,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1923890415",
      "pull_request_review_id": 2564906708,
      "id": 1923890415,
      "node_id": "PRRC_kwDOABII585yrDzv",
      "diff_hunk": "@@ -0,0 +1,229 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/net.h>\n+\n+#include <common/pcp.h>\n+#include <util/check.h>\n+\n+using namespace std::literals;\n+\n+//! Fixed nonce to use in PCP port mapping requests.\n+constexpr PCPMappingNonce PCP_NONCE{0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc};\n+\n+//! NAT-PMP or PCP server port.\n+constexpr uint16_t SERVER_PORT{5351};\n+\n+//! Number of attempts to request a NAT-PMP or PCP port mapping to the gateway.\n+constexpr int NUM_TRIES{5};\n+\n+//! Timeout for each attempt to request a port mapping.\n+constexpr std::chrono::duration TIMEOUT{100ms};\n+\n+/** Simple mocked socket which returns fuzzer-provided data and sometimes randomly inject some faults.\n+ */\n+class PCPFuzzSock final : public Sock\n+{\n+private:\n+    // Note: we awkwardly mark all methods as const, and properties as mutable,\n+    // because Sock expects all networking calls to be const.\n+    mutable std::chrono::milliseconds m_time{MockableSteadyClock::INITIAL_MOCK_TIME};\n+    mutable bool m_connected{false};\n+    mutable CService m_bound;\n+    mutable CNetAddr m_local_ip;\n+    mutable CNetAddr m_gateway_ip;\n+    FuzzedDataProvider& m_fuzz_data;\n+\n+    void ElapseTime(std::chrono::milliseconds duration) const\n+    {\n+        m_time += duration;\n+        MockableSteadyClock::SetMockTime(m_time);\n+    }\n+\n+public:\n+    explicit PCPFuzzSock(const CNetAddr &local_ip, const CNetAddr &gateway_ip, FuzzedDataProvider& prov)\n+        : Sock{INVALID_SOCKET},\n+          m_local_ip(local_ip),\n+          m_gateway_ip(gateway_ip),\n+          m_fuzz_data(prov)\n+    {\n+        ElapseTime(std::chrono::seconds(0)); // start mocking steady time\n+    }\n+\n+    PCPFuzzSock& operator=(Sock&& other) override\n+    {\n+        Assert(false && \"Move of Sock into PCPFuzzSock not allowed.\");\n+        return *this;\n+    }\n+\n+    /** Sending bytes to the gateway normally succeeds when connected. We sometimes inject some faults. */\n+    ssize_t Send(const void* data, size_t len, int) const override {\n+        if (!m_connected) return -1;\n+        if (m_fuzz_data.ConsumeBool()) return -1;\n+        return len;\n+    }\n+\n+    /** We receive random bytes from the gateway. We make it sometimes fail, too. */\n+    ssize_t Recv(void* buf, size_t len, int flags) const override\n+    {\n+        if (m_fuzz_data.ConsumeBool()) return -1;\n+        const auto consumed_bytes{m_fuzz_data.ConsumeIntegralInRange<size_t>(0, len)};\n+        const auto data{m_fuzz_data.ConsumeBytes<uint8_t>(consumed_bytes)};\n+        if (!data.empty()) std::memcpy(buf, data.data(), data.size());\n+        return consumed_bytes;",
      "path": "src/test/fuzz/pcp.cpp",
      "position": null,
      "original_position": 77,
      "commit_id": "0262565f717c51996b29b6bde4b41cf2661e122d",
      "original_commit_id": "33a4dc294a4058b4216fc451b44ad10bffde40f0",
      "in_reply_to_id": 1923371490,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I see, perhaps you can just override `Wait` of `FuzzedSock` then? Or the time mocking could also just be a part of `FuzzedSock` (seems useful for all harnesses).",
      "created_at": "2025-01-21T15:03:40Z",
      "updated_at": "2025-01-21T15:03:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31676#discussion_r1923890415",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1923890415"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31676"
        }
      },
      "start_line": null,
      "original_start_line": 74,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 77,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1924481478",
      "pull_request_review_id": 2565878469,
      "id": 1924481478,
      "node_id": "PRRC_kwDOABII585ytUHG",
      "diff_hunk": "@@ -0,0 +1,229 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/net.h>\n+\n+#include <common/pcp.h>\n+#include <util/check.h>\n+\n+using namespace std::literals;\n+\n+//! Fixed nonce to use in PCP port mapping requests.\n+constexpr PCPMappingNonce PCP_NONCE{0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc};\n+\n+//! NAT-PMP or PCP server port.\n+constexpr uint16_t SERVER_PORT{5351};\n+\n+//! Number of attempts to request a NAT-PMP or PCP port mapping to the gateway.\n+constexpr int NUM_TRIES{5};\n+\n+//! Timeout for each attempt to request a port mapping.\n+constexpr std::chrono::duration TIMEOUT{100ms};\n+\n+/** Simple mocked socket which returns fuzzer-provided data and sometimes randomly inject some faults.\n+ */\n+class PCPFuzzSock final : public Sock\n+{\n+private:\n+    // Note: we awkwardly mark all methods as const, and properties as mutable,\n+    // because Sock expects all networking calls to be const.\n+    mutable std::chrono::milliseconds m_time{MockableSteadyClock::INITIAL_MOCK_TIME};\n+    mutable bool m_connected{false};\n+    mutable CService m_bound;\n+    mutable CNetAddr m_local_ip;\n+    mutable CNetAddr m_gateway_ip;\n+    FuzzedDataProvider& m_fuzz_data;\n+\n+    void ElapseTime(std::chrono::milliseconds duration) const\n+    {\n+        m_time += duration;\n+        MockableSteadyClock::SetMockTime(m_time);\n+    }\n+\n+public:\n+    explicit PCPFuzzSock(const CNetAddr &local_ip, const CNetAddr &gateway_ip, FuzzedDataProvider& prov)\n+        : Sock{INVALID_SOCKET},\n+          m_local_ip(local_ip),\n+          m_gateway_ip(gateway_ip),\n+          m_fuzz_data(prov)\n+    {\n+        ElapseTime(std::chrono::seconds(0)); // start mocking steady time\n+    }\n+\n+    PCPFuzzSock& operator=(Sock&& other) override\n+    {\n+        Assert(false && \"Move of Sock into PCPFuzzSock not allowed.\");\n+        return *this;\n+    }\n+\n+    /** Sending bytes to the gateway normally succeeds when connected. We sometimes inject some faults. */\n+    ssize_t Send(const void* data, size_t len, int) const override {\n+        if (!m_connected) return -1;\n+        if (m_fuzz_data.ConsumeBool()) return -1;\n+        return len;\n+    }\n+\n+    /** We receive random bytes from the gateway. We make it sometimes fail, too. */\n+    ssize_t Recv(void* buf, size_t len, int flags) const override\n+    {\n+        if (m_fuzz_data.ConsumeBool()) return -1;\n+        const auto consumed_bytes{m_fuzz_data.ConsumeIntegralInRange<size_t>(0, len)};\n+        const auto data{m_fuzz_data.ConsumeBytes<uint8_t>(consumed_bytes)};\n+        if (!data.empty()) std::memcpy(buf, data.data(), data.size());\n+        return consumed_bytes;",
      "path": "src/test/fuzz/pcp.cpp",
      "position": null,
      "original_position": 77,
      "commit_id": "0262565f717c51996b29b6bde4b41cf2661e122d",
      "original_commit_id": "33a4dc294a4058b4216fc451b44ad10bffde40f0",
      "in_reply_to_id": 1923371490,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah, looks like i just reinvented (a poor man's) `FuzzedSock` for my target. I'll look into just using `FuzzedSock` instead tomorrow. Just confirmed your theory, returning `data.size()` instead of `consumed_bytes` fixed the crash.",
      "created_at": "2025-01-21T23:19:26Z",
      "updated_at": "2025-01-21T23:19:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31676#discussion_r1924481478",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1924481478"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31676"
        }
      },
      "start_line": null,
      "original_start_line": 74,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 77,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1925948802",
      "pull_request_review_id": 2568248926,
      "id": 1925948802,
      "node_id": "PRRC_kwDOABII585yy6WC",
      "diff_hunk": "@@ -0,0 +1,229 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/net.h>\n+\n+#include <common/pcp.h>\n+#include <util/check.h>\n+\n+using namespace std::literals;\n+\n+//! Fixed nonce to use in PCP port mapping requests.\n+constexpr PCPMappingNonce PCP_NONCE{0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc};\n+\n+//! NAT-PMP or PCP server port.\n+constexpr uint16_t SERVER_PORT{5351};\n+\n+//! Number of attempts to request a NAT-PMP or PCP port mapping to the gateway.\n+constexpr int NUM_TRIES{5};\n+\n+//! Timeout for each attempt to request a port mapping.\n+constexpr std::chrono::duration TIMEOUT{100ms};\n+\n+/** Simple mocked socket which returns fuzzer-provided data and sometimes randomly inject some faults.\n+ */\n+class PCPFuzzSock final : public Sock\n+{\n+private:\n+    // Note: we awkwardly mark all methods as const, and properties as mutable,\n+    // because Sock expects all networking calls to be const.\n+    mutable std::chrono::milliseconds m_time{MockableSteadyClock::INITIAL_MOCK_TIME};\n+    mutable bool m_connected{false};\n+    mutable CService m_bound;\n+    mutable CNetAddr m_local_ip;\n+    mutable CNetAddr m_gateway_ip;\n+    FuzzedDataProvider& m_fuzz_data;\n+\n+    void ElapseTime(std::chrono::milliseconds duration) const\n+    {\n+        m_time += duration;\n+        MockableSteadyClock::SetMockTime(m_time);\n+    }\n+\n+public:\n+    explicit PCPFuzzSock(const CNetAddr &local_ip, const CNetAddr &gateway_ip, FuzzedDataProvider& prov)\n+        : Sock{INVALID_SOCKET},\n+          m_local_ip(local_ip),\n+          m_gateway_ip(gateway_ip),\n+          m_fuzz_data(prov)\n+    {\n+        ElapseTime(std::chrono::seconds(0)); // start mocking steady time\n+    }\n+\n+    PCPFuzzSock& operator=(Sock&& other) override\n+    {\n+        Assert(false && \"Move of Sock into PCPFuzzSock not allowed.\");\n+        return *this;\n+    }\n+\n+    /** Sending bytes to the gateway normally succeeds when connected. We sometimes inject some faults. */\n+    ssize_t Send(const void* data, size_t len, int) const override {\n+        if (!m_connected) return -1;\n+        if (m_fuzz_data.ConsumeBool()) return -1;\n+        return len;\n+    }\n+\n+    /** We receive random bytes from the gateway. We make it sometimes fail, too. */\n+    ssize_t Recv(void* buf, size_t len, int flags) const override\n+    {\n+        if (m_fuzz_data.ConsumeBool()) return -1;\n+        const auto consumed_bytes{m_fuzz_data.ConsumeIntegralInRange<size_t>(0, len)};\n+        const auto data{m_fuzz_data.ConsumeBytes<uint8_t>(consumed_bytes)};\n+        if (!data.empty()) std::memcpy(buf, data.data(), data.size());\n+        return consumed_bytes;",
      "path": "src/test/fuzz/pcp.cpp",
      "position": null,
      "original_position": 77,
      "commit_id": "0262565f717c51996b29b6bde4b41cf2661e122d",
      "original_commit_id": "33a4dc294a4058b4216fc451b44ad10bffde40f0",
      "in_reply_to_id": 1923371490,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done. It seems to have reduced the coverage somewhat. I'll run it overnight again.",
      "created_at": "2025-01-22T20:54:34Z",
      "updated_at": "2025-01-22T20:54:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31676#discussion_r1925948802",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1925948802"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31676"
        }
      },
      "start_line": null,
      "original_start_line": 74,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 77,
      "side": "RIGHT"
    }
  ]
}