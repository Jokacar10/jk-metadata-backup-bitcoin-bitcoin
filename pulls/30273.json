{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30273",
    "id": 1916663246,
    "node_id": "PR_kwDOABII585yPfXO",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30273",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30273.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30273.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30273",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30273/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30273/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30273/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/4d81b4de339efbbb68c9785203b699e6e12ecd83",
    "number": 30273,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "fuzz: FuzzedSock::Recv() don't lose bytes from MSG_PEEK read",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Problem:                                                            \r\n                                                                       \r\nIf `FuzzedSock::Recv(N, MSG_PEEK)` is called then `N` bytes would be \r\nretrieved from the fuzz provider, saved in `m_peek_data` and returned\r\nto the caller (ok).                                           \r\n                                                                 \r\nIf after this `FuzzedSock::Recv(M, 0)` is called where `M < N`\r\nthen the first `M` bytes from `m_peek_data` would be returned       \r\nto the caller (ok), but the remaining `N - M` bytes in `m_peek_data`   \r\nwould be discarded/lost (not ok). They must be returned by a subsequent\r\n`Recv()`.                                                          \r\n                                                                      \r\nTo resolve this, only remove the head `N` bytes from `m_peek_data`.\r\n\r\n---\r\n\r\nThis is a followup to https://github.com/bitcoin/bitcoin/pull/30211, more specifically:\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/30211#discussion_r1633199919\r\nhttps://github.com/bitcoin/bitcoin/pull/30211#discussion_r1633216366",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2024-06-12T14:00:52Z",
    "updated_at": "2025-07-01T11:34:59Z",
    "closed_at": "2024-07-01T10:59:05Z",
    "mergeable_state": "unknown",
    "merged": true,
    "merged_at": "2024-07-01T10:59:04Z",
    "merged_by": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "merge_commit_sha": "c3b446a494dced2e256b7516de6626d22da41f79",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "vasild:fuzzedsock_unbreak_recv_peek",
      "ref": "fuzzedsock_unbreak_recv_peek",
      "sha": "4d81b4de339efbbb68c9785203b699e6e12ecd83",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 120608826,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMjA2MDg4MjY=",
        "name": "bitcoin",
        "full_name": "vasild/bitcoin",
        "owner": {
          "login": "vasild",
          "id": 266751,
          "node_id": "MDQ6VXNlcjI2Njc1MQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/vasild",
          "html_url": "https://github.com/vasild",
          "followers_url": "https://api.github.com/users/vasild/followers",
          "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
          "organizations_url": "https://api.github.com/users/vasild/orgs",
          "repos_url": "https://api.github.com/users/vasild/repos",
          "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/vasild/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/vasild/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/vasild/bitcoin",
        "archive_url": "https://api.github.com/repos/vasild/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/vasild/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/vasild/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/vasild/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/vasild/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/vasild/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/vasild/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/vasild/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/vasild/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/vasild/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/vasild/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/vasild/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/vasild/bitcoin/events",
        "forks_url": "https://api.github.com/repos/vasild/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/vasild/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/vasild/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/vasild/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/vasild/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/vasild/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/vasild/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/vasild/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/vasild/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/vasild/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/vasild/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/vasild/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/vasild/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/vasild/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/vasild/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/vasild/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:vasild/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/vasild/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/vasild/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/vasild/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/vasild/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/vasild/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/vasild/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/vasild/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/vasild/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/vasild/bitcoin/hooks",
        "svn_url": "https://github.com/vasild/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 7,
        "watchers_count": 7,
        "size": 259103,
        "default_branch": "master",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-06-26T07:17:07Z",
        "created_at": "2018-02-07T11:52:47Z",
        "updated_at": "2025-06-20T07:58:07Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "0b94fb87206616e475566c3667cbaad0e9faa5b0",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37450,
        "stargazers_count": 84371,
        "watchers_count": 84371,
        "size": 288492,
        "default_branch": "master",
        "open_issues_count": 752,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-07-01T08:45:30Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-07-01T11:14:27Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30273"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 36,
    "deletions": 36,
    "changed_files": 2,
    "commits": 2,
    "review_comments": 6,
    "comments": 5
  },
  "events": [
    {
      "event": "commented",
      "id": 2163088753,
      "node_id": "IC_kwDOABII586A7h1x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2163088753",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-12T14:00:56Z",
      "updated_at": "2024-07-01T09:28:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30273).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [marcofleon](https://github.com/bitcoin/bitcoin/pull/30273#pullrequestreview-2123209479), [dergoegge](https://github.com/bitcoin/bitcoin/pull/30273#pullrequestreview-2130830802), [brunoerg](https://github.com/bitcoin/bitcoin/pull/30273#pullrequestreview-2150885622) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30273#issuecomment-2163088753",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30273"
    },
    {
      "event": "labeled",
      "id": 13132457720,
      "node_id": "LE_lADOABII586MALvhzwAAAAMOwWb4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13132457720",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-12T14:00:59Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 2163813661,
      "node_id": "IC_kwDOABII586A-S0d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2163813661",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-12T20:08:42Z",
      "updated_at": "2024-06-12T20:08:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "From CI:\r\n```\r\nSUMMARY: UndefinedBehaviorSanitizer: invalid-null-argument test/fuzz/util/net.cpp:219:66 \r\nMS: 0 ; base unit: 0000000000000000000000000000000000000000\r\n0x5c,0x57,0x5c,0x57,0x5c,0xfb,0xff,0x29,0xa5,0x6,0x6,0xff,0x29,0x35,0xda,\r\n\\\\W\\\\W\\\\\\373\\377)\\245\\006\\006\\377)5\\332\r\nartifact_prefix='./'; Test unit written to ./crash-c88fdfee4792d18945ffb11a7a520d9f0fb5e56b\r\nBase64: XFdcV1z7/ymlBgb/KTXa\r\n\r\nTraceback (most recent call last):\r\n  File \"/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/fuzz/test_runner.py\", line 411, in <module>\r\n    main()\r\n  File \"/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/fuzz/test_runner.py\", line 199, in main\r\n    run_once(\r\n  File \"/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/fuzz/test_runner.py\", line 376, in run_once\r\n    assert len(done_stat) == 1\r\n```",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30273#issuecomment-2163813661",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30273"
    },
    {
      "event": "labeled",
      "id": 13138056582,
      "node_id": "LE_lADOABII586MALvhzwAAAAMPFtWG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13138056582",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-12T22:32:56Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13144132915,
      "node_id": "HRFPE_lADOABII586MALvhzwAAAAMPc40z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13144132915",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f4793257cdf11405da74d874b104dfac0f5e58e2",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/f4793257cdf11405da74d874b104dfac0f5e58e2",
      "created_at": "2024-06-13T10:08:37Z"
    },
    {
      "event": "commented",
      "id": 2165212522,
      "node_id": "IC_kwDOABII586BDoVq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2165212522",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-13T10:10:06Z",
      "updated_at": "2024-06-13T10:10:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "`3ecd1c632f...f4793257cd`: The UB sanitizer did not like the call to `memcpy(..., nullptr, 0);` which happens when the fuzzer input is exhausted. Added an explicit check about that.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30273#issuecomment-2165212522",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30273"
    },
    {
      "event": "unlabeled",
      "id": 13145211479,
      "node_id": "UNLE_lADOABII586MALvhzwAAAAMPhAJX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13145211479",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-13T11:30:55Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2118222905,
      "node_id": "PRR_kwDOABII585-QYQ5",
      "url": null,
      "actor": null,
      "commit_id": "f4793257cdf11405da74d874b104dfac0f5e58e2",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30273#pullrequestreview-2118222905",
      "submitted_at": "2024-06-14T12:04:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30273"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI1MWQ3NWVhOTdlZTBkMDFlZTU4NmU0MGEzMGNiNjhjMGJmN2ZmZDM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b51d75ea97ee0d01ee586e40a30cb68c0bf7ffd3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b51d75ea97ee0d01ee586e40a30cb68c0bf7ffd3",
      "tree": {
        "sha": "20d99de8c58bced60622a7513f109b513fcdd523",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/20d99de8c58bced60622a7513f109b513fcdd523"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 20d99de8c58bced60622a7513f109b513fcdd523\nparent 0b94fb87206616e475566c3667cbaad0e9faa5b0\nauthor Vasil Dimov <vd@FreeBSD.org> 1718189506 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1718369066 +0200\n\nfuzz: simplify FuzzedSock::m_peek_data\n\n`FuzzedSock::m_peek_data` need not be an optional of a vector.\nIt can be just a vector whereas an empty vector denotes \"no peek data\".\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmZsOyoACgkQVN8G9ktV\ny7/2fx//d6DRy4RFRODvQSwRP2u2xTyJLnbuRJGYFxSkx8IkdLy+0h+J/Bhup4mf\n0kjm8ALZ4EOmrvCZkde1rks96Vf0iz72IT1d+/5p1q5UQk2qcohVd3juv4sv4INf\nNgjtdzkvsLYu3gQP2YuBwhr98oC8HbU+8G0VjhJVrVi9IPz7hQE+lW3Jj3lSxmNt\ncGp6EXaB4rLxl4FemzXCD82QWBE14/mzGvBUMrZXKP4mzaoxMC92Ndge1nk/Vd5I\naUy247rvWovjGXogIfJO+yUl0P2sYfGU48/wPJdHSnXjP4GbFtREhJF1RAl8KlVh\nd+Csm+gMBJViAfSHqrMPzo6ARv3Mvn6oP9gYMNBmg1NbYwFRawHhIffNScfKsPcX\nv4JkJ3s6FdeqCrPQO3cTN/LfvWyRcGLTxVeNnU1rKWx5qxeEq7CTE4kwjjNmtOZp\nYdKO18dUdalZ8dZ/vndpC3zXu8D4RvRPzFKL4rJP5+o0n2JmhxXWBa0jEnpiP1Kc\ng/fHJOpHcDD2YJVkfJGnMTXe0fSUy27BOMBy1NiYHiqsow9yn5gM3o8cMO55sH4F\nwAttErhAUdZG+57I2mE+XAM3/xqdV4gbbsRuXCqnewpmI2m/XtwIESnKasGrbuW+\nR4Hr1HyFYalA6wWRIK00XtbVcf2R3wkB7t2tIXe0sOXT+AVtIltDHoeenIQceq2/\npRqc+xiBGyujJCFFBelLtyQaTLnm79jq8c0pErl+4NV1Fp+84RQIj4mGPXdwlFbt\n9l1p3Vc3KgiTqXXeIVHdGRnTKNVDWtfkCLGWs17Jx0GFVGp5c9dsr1ZgDG7dd11m\n+8kAG3ELboRf2qlkcADQ6/ES4/tdOQQHjdd5I4z9f8/hOTe3Zt4OP6jRCtb2s2VH\nFAlEuQ0oxaqgwkXPpaDbnXmiXgovqbJbV5X3JbbJ/W5KUsRXN9FV1GqaFLru/oCr\n8/B8erCKP1+3VKfcTHOotYL2XAZl0Sqb43X+BTXgY1ybFnu9Rukfn6x1uoVWUJ8v\ns7E2Ps7osvklHbAc+GL8fZPNz4OViZC/q13jtxOXkp2tt07M2M6U1PmS898Ry6f1\n1sLrlX3P00O8Ij7Ur+FNNTzYUe+mkWdR3nWHChUi/0nOetjwJlN7zPEm0qlxqj4D\nE1GC/fT0pQnoYjUXe6Ono6+sNma0p0hfQFQbjTaZZynSo2wlE9tvlnDDef155T57\nSiTZZlJelZHTu0Tt5kbS5FBgC4YR0SwtpQxwOgGwTYTw99ek5rhxTmx59rPcG+mx\nQUOWYn+XZJUuJkwdENB4wj/DnMMBKpCxw0kOEHOWC2u56dTkiU8DVH/C8RuW7EqX\nM/0kNaeR8kvtC2LuJLuJmawPZwyqfA==\n=DzXO\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0b94fb87206616e475566c3667cbaad0e9faa5b0",
          "sha": "0b94fb87206616e475566c3667cbaad0e9faa5b0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0b94fb87206616e475566c3667cbaad0e9faa5b0"
        }
      ],
      "message": "fuzz: simplify FuzzedSock::m_peek_data\n\n`FuzzedSock::m_peek_data` need not be an optional of a vector.\nIt can be just a vector whereas an empty vector denotes \"no peek data\".",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-06-14T12:44:26Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-06-12T10:51:46Z"
      },
      "sha": "b51d75ea97ee0d01ee586e40a30cb68c0bf7ffd3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRkODFiNGRlMzM5ZWZiYmI2OGM5Nzg1MjAzYjY5OWU2ZTEyZWNkODM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d81b4de339efbbb68c9785203b699e6e12ecd83",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4d81b4de339efbbb68c9785203b699e6e12ecd83",
      "tree": {
        "sha": "5b4a9e005cffcbbcd63731969cb5c63f9dc5a36e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5b4a9e005cffcbbcd63731969cb5c63f9dc5a36e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 5b4a9e005cffcbbcd63731969cb5c63f9dc5a36e\nparent b51d75ea97ee0d01ee586e40a30cb68c0bf7ffd3\nauthor Vasil Dimov <vd@FreeBSD.org> 1718196110 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1718369777 +0200\n\nfuzz: FuzzedSock::Recv() don't lose bytes from MSG_PEEK read\n\nProblem:\n\nIf `FuzzedSock::Recv(N, MSG_PEEK)` is called then `N` bytes would be\nretrieved from the fuzz provider, saved in `m_peek_data` and returned\nto the caller (ok).\n\nIf after this `FuzzedSock::Recv(M, 0)` is called where `M < N`\nthen the first `M` bytes from `m_peek_data` would be returned\nto the caller (ok), but the remaining `N - M` bytes in `m_peek_data`\nwould be discarded/lost (not ok). They must be returned by a subsequent\n`Recv()`.\n\nTo resolve this, only remove the head `N` bytes from `m_peek_data`.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmZsPfIACgkQVN8G9ktV\ny78v6B/8DQkJc3LhIPoInOaBLPLfSiBYo3/j4fIDM4K+TFeVMlrqxSTop0jjtnrk\nNBafkdwfzb93lw6cuKAgW7X3kE+Ta3J76R9PKuw2lBr3DfiAZfWTMYNagSvCVQyW\nwAYfYCRVudcerpKFVd6RULl6iq9biuVg/FCkLtYVvK2eCgqdD7MPW9cGTMtdGkWC\nXq/YBuHo81/yCzG8iyUXVMU89yVn46ZdFNImfxClVOy416csA9QNCt22NdoHVAmk\nkwQtBFj4MinHDMqwJ+uWFxmwPko3JxV3uytMMke8YQ78C0QLTKoikmkdTpdXox8C\nkqRV0cnB9YCMmu+tMcbX082LUoQLIxNOawGc4oMYe1vQ7m9SU0fhd+zQ8Q04lA7U\nBcnt4kKI66XS1TXKiUKNOFAYGdJSiXKsTLb35ZXHWj6NGprlyuMaJ/KvBkv5J3Zg\n0C5bjSTNlLIJVc+pW4elCFObOthZcxrmsSkn8pw6yy66ce2wvg19Ew+LfQv3sZEu\nDwV2dC4SqavvX9yGI/iE3NWqcT77q3g1bNIVP71OahoGuKBysn/L7W5/0HxQ027v\n6oDX4KvFsUjw0SQ0BieebTI18rGLBC30m5r46QOsxK5TF1Jm3iT+Fg5LEmRojbE/\nO/jGAqyuRVt1y0REWD5sCR/OP9XN2AkKyI1RR5TL/zhaxC7c/VoWttuulRsrntqh\n5jcTEtbdKVkh0ocOj6H5t52jCtw9j5L0MXYTj0fntT8WKMXdUke4sljfNghDo9om\nj8xvgBHSwBPtqTsBIGnfkZqqhqqW1bLzidqAkrNCOeQMAUm07n8zwu723HkfVXQs\nGrqSkWW+vHyIZFEAcaxGaFHqiR+DcGU4KjIgvT5+7T/PpWrKgljowyNOLXAfb+R6\ng6BapgwYVF7Nx/zwe3KRPMv1gG8BWM6XaPByo/6PWdN56GvJ7pFvyG9GLDfuRC6B\napeiLe6ixF9P2U5sYE/X5r/+Syw7c6bnXk79IDQbetcoQSzxkvUCn71U2iCsWfCi\nyWHKsn0pii8NCh/sFV3APzAQLJfE7jWd8PT541iRW4cdhjhCmw3Cih+SjIaYKpp1\n/jGgAv3d9bPEcnR6CLEPNeQFFz52SrLkhxNbM9ruygeTqOw+wsfZltis8uneB9Yn\nRqc49Jk/luapQTyQgcsw6o80uI6SPk270mkOEyMgyvdmsXu1KqJE65lFcazrJ072\ngKEH0tYokGiKyP5o0nXbdAgIf5/laXtz8U5GbUScLcKjBo8CRAAwcSSPz59BkqeT\nVOlNXZS3ltca0CtEeMEXAPtCWrkQUR+I98uYmRPPiHpXf0CSp3oUhQJn/GhA8i7s\nfC/SpQQ0mr/5OdYC9W2ZyRs2HV86MA==\n=TYSv\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b51d75ea97ee0d01ee586e40a30cb68c0bf7ffd3",
          "sha": "b51d75ea97ee0d01ee586e40a30cb68c0bf7ffd3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b51d75ea97ee0d01ee586e40a30cb68c0bf7ffd3"
        }
      ],
      "message": "fuzz: FuzzedSock::Recv() don't lose bytes from MSG_PEEK read\n\nProblem:\n\nIf `FuzzedSock::Recv(N, MSG_PEEK)` is called then `N` bytes would be\nretrieved from the fuzz provider, saved in `m_peek_data` and returned\nto the caller (ok).\n\nIf after this `FuzzedSock::Recv(M, 0)` is called where `M < N`\nthen the first `M` bytes from `m_peek_data` would be returned\nto the caller (ok), but the remaining `N - M` bytes in `m_peek_data`\nwould be discarded/lost (not ok). They must be returned by a subsequent\n`Recv()`.\n\nTo resolve this, only remove the head `N` bytes from `m_peek_data`.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-06-14T12:56:17Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-06-12T12:41:50Z"
      },
      "sha": "4d81b4de339efbbb68c9785203b699e6e12ecd83"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13160626631,
      "node_id": "HRFPE_lADOABII586MALvhzwAAAAMQbznH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13160626631",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4d81b4de339efbbb68c9785203b699e6e12ecd83",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/4d81b4de339efbbb68c9785203b699e6e12ecd83",
      "created_at": "2024-06-14T12:57:04Z"
    },
    {
      "event": "commented",
      "id": 2167983116,
      "node_id": "IC_kwDOABII586BOMwM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2167983116",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-14T12:57:46Z",
      "updated_at": "2024-06-14T12:57:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "`f4793257cd...4d81b4de33`: rebase and resolve https://github.com/bitcoin/bitcoin/pull/30273#discussion_r1639721875",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30273#issuecomment-2167983116",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30273"
    },
    {
      "event": "reviewed",
      "id": 2123209479,
      "node_id": "PRR_kwDOABII585-jZsH",
      "url": null,
      "actor": null,
      "commit_id": "4d81b4de339efbbb68c9785203b699e6e12ecd83",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 4d81b4de339efbbb68c9785203b699e6e12ecd83. Tested this with the I2P fuzz target and there's no loss in coverage. I think overall this is an improvement in the robustness of `Recv` in `FuzzedSock`.",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30273#pullrequestreview-2123209479",
      "submitted_at": "2024-06-17T15:22:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30273"
    },
    {
      "event": "reviewed",
      "id": 2130830802,
      "node_id": "PRR_kwDOABII585_AeXS",
      "url": null,
      "actor": null,
      "commit_id": "4d81b4de339efbbb68c9785203b699e6e12ecd83",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK 4d81b4de339efbbb68c9785203b699e6e12ecd83",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30273#pullrequestreview-2130830802",
      "submitted_at": "2024-06-20T16:02:29Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30273"
    },
    {
      "event": "labeled",
      "id": 13327144583,
      "node_id": "LE_lADOABII586MALvhzwAAAAMaXBaH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13327144583",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-28T06:28:53Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2199646499,
      "node_id": "IC_kwDOABII586DG_Ej",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2199646499",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-01T09:17:21Z",
      "updated_at": "2024-07-01T09:17:21Z",
      "author_association": "MEMBER",
      "body": "CI failure looks unrelated to me",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30273#issuecomment-2199646499",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30273"
    },
    {
      "event": "reviewed",
      "id": 2150885622,
      "node_id": "PRR_kwDOABII586AM-j2",
      "url": null,
      "actor": null,
      "commit_id": "4d81b4de339efbbb68c9785203b699e6e12ecd83",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "utACK 4d81b4de339efbbb68c9785203b699e6e12ecd83",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30273#pullrequestreview-2150885622",
      "submitted_at": "2024-07-01T09:28:06Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30273"
    },
    {
      "event": "merged",
      "id": 13349484667,
      "node_id": "ME_lADOABII586MALvhzwAAAAMbsPh7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13349484667",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c3b446a494dced2e256b7516de6626d22da41f79",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c3b446a494dced2e256b7516de6626d22da41f79",
      "created_at": "2024-07-01T10:59:04Z"
    },
    {
      "event": "closed",
      "id": 13349484718,
      "node_id": "CE_lADOABII586MALvhzwAAAAMbsPiu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13349484718",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-01T10:59:05Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 13349513368,
      "node_id": "HRDE_lADOABII586MALvhzwAAAAMbsWiY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13349513368",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-01T11:01:29Z"
    },
    {
      "event": "locked",
      "id": 18408797112,
      "node_id": "LOE_lADOABII586MALvhzwAAAARJP_O4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18408797112",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-01T11:34:59Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1639721875",
      "pull_request_review_id": 2118222905,
      "id": 1639721875,
      "node_id": "PRRC_kwDOABII585hvCuT",
      "diff_hunk": "@@ -182,54 +182,56 @@ ssize_t FuzzedSock::Recv(void* buf, size_t len, int flags) const\n         EWOULDBLOCK,\n     };\n     assert(buf != nullptr || len == 0);\n+\n+    // Do the latency before any of the \"return\" statements.\n+    if (m_fuzzed_data_provider.ConsumeBool() && std::getenv(\"FUZZED_SOCKET_FAKE_LATENCY\") != nullptr) {\n+        std::this_thread::sleep_for(std::chrono::milliseconds{2});\n+    }\n+\n     if (len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n         const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n         if (r == -1) {\n             SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n         }\n         return r;\n     }\n-    std::vector<uint8_t> random_bytes;\n-    bool pad_to_len_bytes{m_fuzzed_data_provider.ConsumeBool()};\n-    if (m_peek_data.has_value()) {\n-        // `MSG_PEEK` was used in the preceding `Recv()` call, return `m_peek_data`.\n-        random_bytes = m_peek_data.value();\n+\n+    size_t copied_so_far{0};\n+\n+    if (!m_peek_data.empty()) {\n+        // `MSG_PEEK` was used in the preceding `Recv()` call, copy the first bytes from `m_peek_data`.\n+        const size_t copy_len{std::min(len, m_peek_data.size())};\n+        std::memcpy(buf, m_peek_data.data(), copy_len);\n+        copied_so_far += copy_len;\n         if ((flags & MSG_PEEK) == 0) {\n-            m_peek_data.reset();\n+            m_peek_data.erase(m_peek_data.begin(), m_peek_data.begin() + copy_len);\n         }\n-        pad_to_len_bytes = false;\n-    } else if ((flags & MSG_PEEK) != 0) {\n-        // New call with `MSG_PEEK`.\n-        random_bytes = ConsumeRandomLengthByteVector(m_fuzzed_data_provider, len);\n-        if (!random_bytes.empty()) {\n-            m_peek_data = random_bytes;\n-            pad_to_len_bytes = false;\n-        }\n-    } else {\n-        random_bytes = ConsumeRandomLengthByteVector(m_fuzzed_data_provider, len);\n     }\n-    if (random_bytes.empty()) {\n-        const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n-        if (r == -1) {\n-            SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n-        }\n-        return r;\n+\n+    if (copied_so_far == len) {\n+        return copied_so_far;\n     }\n-    // `random_bytes` might exceed the size of `buf` if e.g. Recv is called with\n-    // len=N and MSG_PEEK first and afterwards called with len=M (M < N) and\n-    // without MSG_PEEK.\n-    size_t recv_len{std::min(random_bytes.size(), len)};\n-    std::memcpy(buf, random_bytes.data(), recv_len);\n-    if (pad_to_len_bytes) {\n-        if (len > random_bytes.size()) {\n-            std::memset((char*)buf + random_bytes.size(), 0, len - random_bytes.size());\n-        }\n-        return len;\n+\n+    assert(m_peek_data.empty());",
      "path": "src/test/fuzz/util/net.cpp",
      "position": null,
      "original_position": 66,
      "commit_id": "4d81b4de339efbbb68c9785203b699e6e12ecd83",
      "original_commit_id": "f4793257cdf11405da74d874b104dfac0f5e58e2",
      "in_reply_to_id": null,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Why would `m_peek_data` be guaranteed to be empty here? I've tested this with the I2P harness and this assert fails. The `m_peek_data` doesn't get erased, so there's still some random bytes from the previous `Recv` call. The length of the copied data is just whatever was left, which isn't equal to `len`.",
      "created_at": "2024-06-14T12:04:53Z",
      "updated_at": "2024-06-14T12:05:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30273#discussion_r1639721875",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1639721875"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 215,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1639787804",
      "pull_request_review_id": 2118326322,
      "id": 1639787804,
      "node_id": "PRRC_kwDOABII585hvS0c",
      "diff_hunk": "@@ -182,54 +182,56 @@ ssize_t FuzzedSock::Recv(void* buf, size_t len, int flags) const\n         EWOULDBLOCK,\n     };\n     assert(buf != nullptr || len == 0);\n+\n+    // Do the latency before any of the \"return\" statements.\n+    if (m_fuzzed_data_provider.ConsumeBool() && std::getenv(\"FUZZED_SOCKET_FAKE_LATENCY\") != nullptr) {\n+        std::this_thread::sleep_for(std::chrono::milliseconds{2});\n+    }\n+\n     if (len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n         const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n         if (r == -1) {\n             SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n         }\n         return r;\n     }\n-    std::vector<uint8_t> random_bytes;\n-    bool pad_to_len_bytes{m_fuzzed_data_provider.ConsumeBool()};\n-    if (m_peek_data.has_value()) {\n-        // `MSG_PEEK` was used in the preceding `Recv()` call, return `m_peek_data`.\n-        random_bytes = m_peek_data.value();\n+\n+    size_t copied_so_far{0};\n+\n+    if (!m_peek_data.empty()) {\n+        // `MSG_PEEK` was used in the preceding `Recv()` call, copy the first bytes from `m_peek_data`.\n+        const size_t copy_len{std::min(len, m_peek_data.size())};\n+        std::memcpy(buf, m_peek_data.data(), copy_len);\n+        copied_so_far += copy_len;\n         if ((flags & MSG_PEEK) == 0) {\n-            m_peek_data.reset();\n+            m_peek_data.erase(m_peek_data.begin(), m_peek_data.begin() + copy_len);\n         }\n-        pad_to_len_bytes = false;\n-    } else if ((flags & MSG_PEEK) != 0) {\n-        // New call with `MSG_PEEK`.\n-        random_bytes = ConsumeRandomLengthByteVector(m_fuzzed_data_provider, len);\n-        if (!random_bytes.empty()) {\n-            m_peek_data = random_bytes;\n-            pad_to_len_bytes = false;\n-        }\n-    } else {\n-        random_bytes = ConsumeRandomLengthByteVector(m_fuzzed_data_provider, len);\n     }\n-    if (random_bytes.empty()) {\n-        const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n-        if (r == -1) {\n-            SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n-        }\n-        return r;\n+\n+    if (copied_so_far == len) {\n+        return copied_so_far;\n     }\n-    // `random_bytes` might exceed the size of `buf` if e.g. Recv is called with\n-    // len=N and MSG_PEEK first and afterwards called with len=M (M < N) and\n-    // without MSG_PEEK.\n-    size_t recv_len{std::min(random_bytes.size(), len)};\n-    std::memcpy(buf, random_bytes.data(), recv_len);\n-    if (pad_to_len_bytes) {\n-        if (len > random_bytes.size()) {\n-            std::memset((char*)buf + random_bytes.size(), 0, len - random_bytes.size());\n-        }\n-        return len;\n+\n+    assert(m_peek_data.empty());",
      "path": "src/test/fuzz/util/net.cpp",
      "position": null,
      "original_position": 66,
      "commit_id": "4d81b4de339efbbb68c9785203b699e6e12ecd83",
      "original_commit_id": "f4793257cdf11405da74d874b104dfac0f5e58e2",
      "in_reply_to_id": 1639721875,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This assert is too strong! Removed and adjusted the code afterwards to expect that `m_peek_data` may contain some bytes.\r\n\r\nBtw, I ran `FUZZ=i2p ./src/test/fuzz/fuzz` for some time and it did not crash, maybe I did not run it long enough.",
      "created_at": "2024-06-14T12:57:08Z",
      "updated_at": "2024-06-14T12:57:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30273#discussion_r1639787804",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1639787804"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 215,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1639813563",
      "pull_request_review_id": 2118369842,
      "id": 1639813563,
      "node_id": "PRRC_kwDOABII585hvZG7",
      "diff_hunk": "@@ -182,54 +182,56 @@ ssize_t FuzzedSock::Recv(void* buf, size_t len, int flags) const\n         EWOULDBLOCK,\n     };\n     assert(buf != nullptr || len == 0);\n+\n+    // Do the latency before any of the \"return\" statements.\n+    if (m_fuzzed_data_provider.ConsumeBool() && std::getenv(\"FUZZED_SOCKET_FAKE_LATENCY\") != nullptr) {\n+        std::this_thread::sleep_for(std::chrono::milliseconds{2});\n+    }\n+\n     if (len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n         const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n         if (r == -1) {\n             SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n         }\n         return r;\n     }\n-    std::vector<uint8_t> random_bytes;\n-    bool pad_to_len_bytes{m_fuzzed_data_provider.ConsumeBool()};\n-    if (m_peek_data.has_value()) {\n-        // `MSG_PEEK` was used in the preceding `Recv()` call, return `m_peek_data`.\n-        random_bytes = m_peek_data.value();\n+\n+    size_t copied_so_far{0};\n+\n+    if (!m_peek_data.empty()) {\n+        // `MSG_PEEK` was used in the preceding `Recv()` call, copy the first bytes from `m_peek_data`.\n+        const size_t copy_len{std::min(len, m_peek_data.size())};\n+        std::memcpy(buf, m_peek_data.data(), copy_len);\n+        copied_so_far += copy_len;\n         if ((flags & MSG_PEEK) == 0) {\n-            m_peek_data.reset();\n+            m_peek_data.erase(m_peek_data.begin(), m_peek_data.begin() + copy_len);\n         }\n-        pad_to_len_bytes = false;\n-    } else if ((flags & MSG_PEEK) != 0) {\n-        // New call with `MSG_PEEK`.\n-        random_bytes = ConsumeRandomLengthByteVector(m_fuzzed_data_provider, len);\n-        if (!random_bytes.empty()) {\n-            m_peek_data = random_bytes;\n-            pad_to_len_bytes = false;\n-        }\n-    } else {\n-        random_bytes = ConsumeRandomLengthByteVector(m_fuzzed_data_provider, len);\n     }\n-    if (random_bytes.empty()) {\n-        const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n-        if (r == -1) {\n-            SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n-        }\n-        return r;\n+\n+    if (copied_so_far == len) {\n+        return copied_so_far;\n     }\n-    // `random_bytes` might exceed the size of `buf` if e.g. Recv is called with\n-    // len=N and MSG_PEEK first and afterwards called with len=M (M < N) and\n-    // without MSG_PEEK.\n-    size_t recv_len{std::min(random_bytes.size(), len)};\n-    std::memcpy(buf, random_bytes.data(), recv_len);\n-    if (pad_to_len_bytes) {\n-        if (len > random_bytes.size()) {\n-            std::memset((char*)buf + random_bytes.size(), 0, len - random_bytes.size());\n-        }\n-        return len;\n+\n+    assert(m_peek_data.empty());",
      "path": "src/test/fuzz/util/net.cpp",
      "position": null,
      "original_position": 66,
      "commit_id": "4d81b4de339efbbb68c9785203b699e6e12ecd83",
      "original_commit_id": "f4793257cdf11405da74d874b104dfac0f5e58e2",
      "in_reply_to_id": 1639721875,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nice, I'll retest.\r\n\r\n> Btw, I ran `FUZZ=i2p ./src/test/fuzz/fuzz` for some time and it did not crash, maybe I did not run it long enough.\r\n\r\nInteresting, mine crashed very quickly. Did you run it with the I2P dictionary? It's a lot faster using the dict so maybe that's why.\r\n\r\n",
      "created_at": "2024-06-14T13:16:00Z",
      "updated_at": "2024-06-14T13:17:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30273#discussion_r1639813563",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1639813563"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 215,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1640065200",
      "pull_request_review_id": 2118777669,
      "id": 1640065200,
      "node_id": "PRRC_kwDOABII585hwWiw",
      "diff_hunk": "@@ -182,54 +182,56 @@ ssize_t FuzzedSock::Recv(void* buf, size_t len, int flags) const\n         EWOULDBLOCK,\n     };\n     assert(buf != nullptr || len == 0);\n+\n+    // Do the latency before any of the \"return\" statements.\n+    if (m_fuzzed_data_provider.ConsumeBool() && std::getenv(\"FUZZED_SOCKET_FAKE_LATENCY\") != nullptr) {\n+        std::this_thread::sleep_for(std::chrono::milliseconds{2});\n+    }\n+\n     if (len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n         const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n         if (r == -1) {\n             SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n         }\n         return r;\n     }\n-    std::vector<uint8_t> random_bytes;\n-    bool pad_to_len_bytes{m_fuzzed_data_provider.ConsumeBool()};\n-    if (m_peek_data.has_value()) {\n-        // `MSG_PEEK` was used in the preceding `Recv()` call, return `m_peek_data`.\n-        random_bytes = m_peek_data.value();\n+\n+    size_t copied_so_far{0};\n+\n+    if (!m_peek_data.empty()) {\n+        // `MSG_PEEK` was used in the preceding `Recv()` call, copy the first bytes from `m_peek_data`.\n+        const size_t copy_len{std::min(len, m_peek_data.size())};\n+        std::memcpy(buf, m_peek_data.data(), copy_len);\n+        copied_so_far += copy_len;\n         if ((flags & MSG_PEEK) == 0) {\n-            m_peek_data.reset();\n+            m_peek_data.erase(m_peek_data.begin(), m_peek_data.begin() + copy_len);\n         }\n-        pad_to_len_bytes = false;\n-    } else if ((flags & MSG_PEEK) != 0) {\n-        // New call with `MSG_PEEK`.\n-        random_bytes = ConsumeRandomLengthByteVector(m_fuzzed_data_provider, len);\n-        if (!random_bytes.empty()) {\n-            m_peek_data = random_bytes;\n-            pad_to_len_bytes = false;\n-        }\n-    } else {\n-        random_bytes = ConsumeRandomLengthByteVector(m_fuzzed_data_provider, len);\n     }\n-    if (random_bytes.empty()) {\n-        const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n-        if (r == -1) {\n-            SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n-        }\n-        return r;\n+\n+    if (copied_so_far == len) {\n+        return copied_so_far;\n     }\n-    // `random_bytes` might exceed the size of `buf` if e.g. Recv is called with\n-    // len=N and MSG_PEEK first and afterwards called with len=M (M < N) and\n-    // without MSG_PEEK.\n-    size_t recv_len{std::min(random_bytes.size(), len)};\n-    std::memcpy(buf, random_bytes.data(), recv_len);\n-    if (pad_to_len_bytes) {\n-        if (len > random_bytes.size()) {\n-            std::memset((char*)buf + random_bytes.size(), 0, len - random_bytes.size());\n-        }\n-        return len;\n+\n+    assert(m_peek_data.empty());",
      "path": "src/test/fuzz/util/net.cpp",
      "position": null,
      "original_position": 66,
      "commit_id": "4d81b4de339efbbb68c9785203b699e6e12ecd83",
      "original_commit_id": "f4793257cdf11405da74d874b104dfac0f5e58e2",
      "in_reply_to_id": 1639721875,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Did you run it with the I2P dictionary?\r\n\r\nNo. How do I do that? Do you have a Base64 of the crash unit?",
      "created_at": "2024-06-14T16:32:14Z",
      "updated_at": "2024-06-14T16:32:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30273#discussion_r1640065200",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1640065200"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 215,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1642560055",
      "pull_request_review_id": 2122487798,
      "id": 1642560055,
      "node_id": "PRRC_kwDOABII585h53o3",
      "diff_hunk": "@@ -182,54 +182,56 @@ ssize_t FuzzedSock::Recv(void* buf, size_t len, int flags) const\n         EWOULDBLOCK,\n     };\n     assert(buf != nullptr || len == 0);\n+\n+    // Do the latency before any of the \"return\" statements.\n+    if (m_fuzzed_data_provider.ConsumeBool() && std::getenv(\"FUZZED_SOCKET_FAKE_LATENCY\") != nullptr) {\n+        std::this_thread::sleep_for(std::chrono::milliseconds{2});\n+    }\n+\n     if (len == 0 || m_fuzzed_data_provider.ConsumeBool()) {\n         const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n         if (r == -1) {\n             SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n         }\n         return r;\n     }\n-    std::vector<uint8_t> random_bytes;\n-    bool pad_to_len_bytes{m_fuzzed_data_provider.ConsumeBool()};\n-    if (m_peek_data.has_value()) {\n-        // `MSG_PEEK` was used in the preceding `Recv()` call, return `m_peek_data`.\n-        random_bytes = m_peek_data.value();\n+\n+    size_t copied_so_far{0};\n+\n+    if (!m_peek_data.empty()) {\n+        // `MSG_PEEK` was used in the preceding `Recv()` call, copy the first bytes from `m_peek_data`.\n+        const size_t copy_len{std::min(len, m_peek_data.size())};\n+        std::memcpy(buf, m_peek_data.data(), copy_len);\n+        copied_so_far += copy_len;\n         if ((flags & MSG_PEEK) == 0) {\n-            m_peek_data.reset();\n+            m_peek_data.erase(m_peek_data.begin(), m_peek_data.begin() + copy_len);\n         }\n-        pad_to_len_bytes = false;\n-    } else if ((flags & MSG_PEEK) != 0) {\n-        // New call with `MSG_PEEK`.\n-        random_bytes = ConsumeRandomLengthByteVector(m_fuzzed_data_provider, len);\n-        if (!random_bytes.empty()) {\n-            m_peek_data = random_bytes;\n-            pad_to_len_bytes = false;\n-        }\n-    } else {\n-        random_bytes = ConsumeRandomLengthByteVector(m_fuzzed_data_provider, len);\n     }\n-    if (random_bytes.empty()) {\n-        const ssize_t r = m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n-        if (r == -1) {\n-            SetFuzzedErrNo(m_fuzzed_data_provider, recv_errnos);\n-        }\n-        return r;\n+\n+    if (copied_so_far == len) {\n+        return copied_so_far;\n     }\n-    // `random_bytes` might exceed the size of `buf` if e.g. Recv is called with\n-    // len=N and MSG_PEEK first and afterwards called with len=M (M < N) and\n-    // without MSG_PEEK.\n-    size_t recv_len{std::min(random_bytes.size(), len)};\n-    std::memcpy(buf, random_bytes.data(), recv_len);\n-    if (pad_to_len_bytes) {\n-        if (len > random_bytes.size()) {\n-            std::memset((char*)buf + random_bytes.size(), 0, len - random_bytes.size());\n-        }\n-        return len;\n+\n+    assert(m_peek_data.empty());",
      "path": "src/test/fuzz/util/net.cpp",
      "position": null,
      "original_position": 66,
      "commit_id": "4d81b4de339efbbb68c9785203b699e6e12ecd83",
      "original_commit_id": "f4793257cdf11405da74d874b104dfac0f5e58e2",
      "in_reply_to_id": 1639721875,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You can add it to the end of the command. So `FUZZ=i2p ./src/test/fuzz/fuzz -dict=DICTFILE`. The dictionary  (`i2p.dict`) is in the qa-assets repo: https://github.com/bitcoin-core/qa-assets/tree/main/fuzz_dicts. I'm running it now on the most recent commit.",
      "created_at": "2024-06-17T10:06:19Z",
      "updated_at": "2024-06-17T10:06:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30273#discussion_r1642560055",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1642560055"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 215,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1647812026",
      "pull_request_review_id": 2130830802,
      "id": 1647812026,
      "node_id": "PRRC_kwDOABII585iN526",
      "diff_hunk": "@@ -182,54 +182,54 @@ ssize_t FuzzedSock::Recv(void* buf, size_t len, int flags) const\n         EWOULDBLOCK,\n     };\n     assert(buf != nullptr || len == 0);\n+\n+    // Do the latency before any of the \"return\" statements.\n+    if (m_fuzzed_data_provider.ConsumeBool() && std::getenv(\"FUZZED_SOCKET_FAKE_LATENCY\") != nullptr) {\n+        std::this_thread::sleep_for(std::chrono::milliseconds{2});",
      "path": "src/test/fuzz/util/net.cpp",
      "position": 7,
      "original_position": 7,
      "commit_id": "4d81b4de339efbbb68c9785203b699e6e12ecd83",
      "original_commit_id": "4d81b4de339efbbb68c9785203b699e6e12ecd83",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Unrelated to this PR but manual timeouts in a fuzz test are a bad idea. If a target requires the use of `GetTime` (or similar) then the harness needs to set mock time (as the test is otherwise non-deterministic).\r\n\r\nWe should get rid of this and replace it with calls to `SetMockTime` (we might need to make mock time more granular, i.e. currently it only supports seconds iirc).",
      "created_at": "2024-06-20T16:01:11Z",
      "updated_at": "2024-06-20T16:02:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30273#discussion_r1647812026",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1647812026"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30273"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 188,
      "original_line": 188,
      "side": "RIGHT"
    }
  ]
}