{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912",
    "id": 1397963357,
    "node_id": "PR_kwDOABII585TUzpd",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/27912",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/27912.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/27912.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27912",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27912/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/912d8e491437d3252c4ebfa36c6bd4e9582ff363",
    "number": 27912,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "net: disconnect inside AttemptToEvictConnection",
    "user": {
      "login": "willcl-ark",
      "id": 6606587,
      "node_id": "MDQ6VXNlcjY2MDY1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/willcl-ark",
      "html_url": "https://github.com/willcl-ark",
      "followers_url": "https://api.github.com/users/willcl-ark/followers",
      "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
      "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
      "repos_url": "https://api.github.com/users/willcl-ark/repos",
      "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Fixes #27843\r\n\r\nTo avoid overflowing `-maxconnections` disconnect nodes marked for eviction directly inside of `AttemptToEvictConnection()`. This has the end result that new connections will only be accepted _after_ an existing connection is dropped, otherwise the new connection is dropped.\r\n\r\nPreviously the number of connected nodes could overflow `nMaxInbound` as (multiple) new connections could be accepted from `ThreadI2PAccept` -- each marking an existing connection to drop (in the future) -- before `ThreadSocketHandler` looped through to `DisconnectNodes()` and took care of the disconnections.\r\n\r\nNode disconnection and deletion are broken out into individual functions which handle a single node so they can be called both from `DisconnectNodes()` and `AttemptToEvictConnection`. This will result in more un/locking operations to perform mass disconnections, but as this only really happens when the network becomes inactive it should not be a problem.",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      },
      {
        "id": 955867938,
        "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
        "name": "Needs rebase",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2023-06-19T10:26:52Z",
    "updated_at": "2025-05-01T07:51:49Z",
    "closed_at": "2024-05-01T08:44:25Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merged": false,
    "merge_commit_sha": "a65134e8a89f44a4af465657744c6bb9329dcb2b",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "willcl-ark:27843-i2p-thread",
      "ref": "27843-i2p-thread",
      "sha": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 164122552,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjQxMjI1NTI=",
        "name": "bitcoin",
        "full_name": "willcl-ark/bitcoin",
        "owner": {
          "login": "willcl-ark",
          "id": 6606587,
          "node_id": "MDQ6VXNlcjY2MDY1ODc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/willcl-ark",
          "html_url": "https://github.com/willcl-ark",
          "followers_url": "https://api.github.com/users/willcl-ark/followers",
          "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
          "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
          "repos_url": "https://api.github.com/users/willcl-ark/repos",
          "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/willcl-ark/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/willcl-ark/bitcoin",
        "archive_url": "https://api.github.com/repos/willcl-ark/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/willcl-ark/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/willcl-ark/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/willcl-ark/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/willcl-ark/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/willcl-ark/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/willcl-ark/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/willcl-ark/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/willcl-ark/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/willcl-ark/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/willcl-ark/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/willcl-ark/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/willcl-ark/bitcoin/events",
        "forks_url": "https://api.github.com/repos/willcl-ark/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/willcl-ark/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/willcl-ark/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/willcl-ark/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/willcl-ark/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/willcl-ark/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/willcl-ark/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/willcl-ark/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/willcl-ark/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/willcl-ark/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/willcl-ark/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/willcl-ark/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/willcl-ark/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/willcl-ark/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/willcl-ark/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/willcl-ark/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:willcl-ark/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/willcl-ark/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/willcl-ark/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/willcl-ark/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/willcl-ark/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/willcl-ark/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/willcl-ark/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/willcl-ark/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/willcl-ark/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/willcl-ark/bitcoin/hooks",
        "svn_url": "https://github.com/willcl-ark/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 277569,
        "default_branch": "master",
        "open_issues_count": 10,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-04-29T09:44:49Z",
        "created_at": "2019-01-04T15:17:29Z",
        "updated_at": "2025-04-10T13:24:07Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "d09c8bc730d8d412ddc9b040cbeeb49dff3104de",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37142,
        "stargazers_count": 83218,
        "watchers_count": 83218,
        "size": 280731,
        "default_branch": "master",
        "open_issues_count": 713,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-04-30T17:56:22Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-05-01T07:39:03Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
      }
    },
    "author_association": "MEMBER",
    "draft": true,
    "additions": 61,
    "deletions": 31,
    "changed_files": 2,
    "commits": 3,
    "review_comments": 26,
    "comments": 15
  },
  "events": [
    {
      "event": "commented",
      "id": 1596928845,
      "node_id": "IC_kwDOABII585fLzNN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1596928845",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-19T10:26:54Z",
      "updated_at": "2024-05-01T05:17:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/27912).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28222](https://github.com/bitcoin/bitcoin/pull/28222) (Use shared_ptr for CNode inside CConnman by willcl-ark)\n* [#27213](https://github.com/bitcoin/bitcoin/pull/27213) (p2p: Diversify automatic outbound connections with respect to networks by amitiuttarwar)\n* [#26938](https://github.com/bitcoin/bitcoin/pull/26938) ([WIP] p2p: asmap, avoid inbound connections from a specific AS by brunoerg)\n* [#25832](https://github.com/bitcoin/bitcoin/pull/25832) (tracing: network connection tracepoints by 0xB10C)\n* [#25572](https://github.com/bitcoin/bitcoin/pull/25572) (refactor: Introduce EvictionManager and use it for the inbound eviction logic by dergoegge)\n* [#25268](https://github.com/bitcoin/bitcoin/pull/25268) (refactor: Introduce EvictionManager by dergoegge)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#issuecomment-1596928845",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27912"
    },
    {
      "event": "labeled",
      "id": 9566593243,
      "node_id": "LE_lADOABII585pGN9OzwAAAAI6NqDb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9566593243",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-19T10:26:56Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "reviewed",
      "id": 1486091302,
      "node_id": "PRR_kwDOABII585Yk_Qm",
      "url": null,
      "actor": null,
      "commit_id": "1d28dfb751c882d2e1c6474a817cd686310d83f8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#pullrequestreview-1486091302",
      "submitted_at": "2023-06-19T12:15:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
    },
    {
      "event": "unsubscribed",
      "id": 9569099146,
      "node_id": "UE_lADOABII585pGN9OzwAAAAI6XN2K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9569099146",
      "actor": {
        "login": "joostjager",
        "id": 4638168,
        "node_id": "MDQ6VXNlcjQ2MzgxNjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4638168?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joostjager",
        "html_url": "https://github.com/joostjager",
        "followers_url": "https://api.github.com/users/joostjager/followers",
        "following_url": "https://api.github.com/users/joostjager/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/joostjager/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/joostjager/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/joostjager/subscriptions",
        "organizations_url": "https://api.github.com/users/joostjager/orgs",
        "repos_url": "https://api.github.com/users/joostjager/repos",
        "events_url": "https://api.github.com/users/joostjager/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/joostjager/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-19T14:21:38Z"
    },
    {
      "event": "reviewed",
      "id": 1486297426,
      "node_id": "PRR_kwDOABII585YlxlS",
      "url": null,
      "actor": null,
      "commit_id": "1d28dfb751c882d2e1c6474a817cd686310d83f8",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Tested it and this patch does the fix the issue",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#pullrequestreview-1486297426",
      "submitted_at": "2023-06-19T15:00:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9578904836,
      "node_id": "HRFPE_lADOABII585pGN9OzwAAAAI68n0E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9578904836",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "21dae9698aa11fcaf1f59943d963369cc0d04771",
      "commit_url": "https://api.github.com/repos/willcl-ark/bitcoin/commits/21dae9698aa11fcaf1f59943d963369cc0d04771",
      "created_at": "2023-06-20T12:14:34Z"
    },
    {
      "event": "commented",
      "id": 1598666154,
      "node_id": "IC_kwDOABII585fSbWq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1598666154",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-20T12:18:47Z",
      "updated_at": "2023-06-20T12:18:47Z",
      "author_association": "MEMBER",
      "body": "Thanks @Crypt-iQ for the review. I pushed 21dae96 which includes most of the suggested changes:\r\n\r\n* `NotifyNumConnectionsChanged` now inside `m_nodes_mutex` block\r\n* moved `advertising_listen_addr` to a class member on `CConnman` initialised to `false`\r\n* Took the suggestion to rename the thread while touching\r\n* guarded `nPrevNodeCount` with `m_nodes_mutex`",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#issuecomment-1598666154",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27912"
    },
    {
      "event": "mentioned",
      "id": 9578944871,
      "node_id": "MEE_lADOABII585pGN9OzwAAAAI68xln",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9578944871",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-20T12:18:47Z"
    },
    {
      "event": "subscribed",
      "id": 9578944881,
      "node_id": "SE_lADOABII585pGN9OzwAAAAI68xlx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9578944881",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-20T12:18:47Z"
    },
    {
      "event": "commented",
      "id": 1607731240,
      "node_id": "IC_kwDOABII585f1Ago",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1607731240",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-26T15:34:09Z",
      "updated_at": "2023-06-26T15:34:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "I acknowledge the problem described in https://github.com/bitcoin/bitcoin/issues/27843: `ThreadI2PAcceptIncoming()` calls `CreateNodeFromAcceptedSocket()`. The latter checks `nInbound >= nMaxInbound` and calls `AttemptToEvictConnection()` if that is true, but the eviction is done asynchronously - `AttemptToEvictConnection()` only marks it for disconnect and leaves the actual disconnection and socket closure to another thread for a later time (`ThreadSocketHandler()`). Until that other thread actually does the disconnect, `ThreadI2PAcceptIncoming()` may call `CreateNodeFromAcceptedSocket()` way too many times, ending up with N excess connections above 125 (the new I2P ones) and N other connections marked for disconnect, but not disconnected until `ThreadSocketHandler()` calls `DisconnectNodes()`.\r\n\r\nI intended `ThreadI2PAcceptIncoming()` to be just low level socket-accept function, an alternative to `AcceptConnection()` (which may be better named as `AcceptConnectionTCP()`). And then all the higher level logic (e.g. capping the number of connections) to happen in `CreateNodeFromAcceptedSocket()`. It indeed checks `nMaxInbound` but does the disconnect asynchronously. It works for `AcceptConnection()` because the async happens to be in the same thread. But it will not work if that is decoupled or if a new one is added later to accept connections by other means (other than TCP and I2P/SAM).\r\n\r\nI did not look deeply in the code in this PR, but I gather it drags some high level logic (cap number of connections) to `ThreadI2PAcceptIncoming()`. This seems suboptimal because now the higher level logic is in two places. If a new accept method is added, then it would have to be replicated there too. And `ThreadI2PAcceptIncoming()` becomes not just low level socket-accept function.\r\n\r\nWhat about changing `AttemptToEvictConnection()` to disconnect synchronously? It is called from just one place. Something like:\r\n\r\n```diff\r\n--- i/src/net.cpp\r\n+++ w/src/net.cpp\r\n@@ -927,12 +927,13 @@ bool CConnman::AttemptToEvictConnection()\r\n     }\r\n     LOCK(m_nodes_mutex);\r\n     for (CNode* pnode : m_nodes) {\r\n         if (pnode->GetId() == *node_id_to_evict) {\r\n             LogPrint(BCLog::NET, \"selected %s connection for eviction peer=%d; disconnecting\\n\", pnode->ConnectionType\r\n             pnode->fDisconnect = true;\r\n+            DisconnectNodes();\r\n             return true;\r\n         }\r\n     }\r\n     return false;\r\n }\r\n```\r\n\r\n(modulo trying to avoid the recursive lock of `m_nodes_mutex` and maybe some optimization because `DisconnectNodes()` iterates on all nodes and in this case we know which node is marked for disconnect).",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#issuecomment-1607731240",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27912"
    },
    {
      "event": "commented",
      "id": 1613098947,
      "node_id": "IC_kwDOABII585gJe_D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1613098947",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-29T12:37:22Z",
      "updated_at": "2023-06-29T12:37:22Z",
      "author_association": "MEMBER",
      "body": "Yes I agree and like this approach better.\r\n\r\nI had created a `ThreadI2PSocketHandler()` thread which essentially had the same loop as `ThreadSocketHandler()`. The repetition of `DisconnectNodes()` and `NotifyNumConnectionsChanged()` in two threads seemed annoying (and needed a few new locks) and I was considering whether a _new_ seperate thread should just handle disconnecting nodes marked for disconnection and notifications, but I think doing it as part of `CreateNodeFromAcceptedSocket()` (in `AttemptToEvictConnection()`) makes more sense so will work on this.",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#issuecomment-1613098947",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27912"
    },
    {
      "event": "labeled",
      "id": 9682959895,
      "node_id": "LE_lADOABII585pGN9OzwAAAAJBJj4X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9682959895",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-30T01:37:17Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9722037387,
      "node_id": "HRFPE_lADOABII585pGN9OzwAAAAJDeoSL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9722037387",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f8da79cae56f3b72f47438ef26293917e1c23af2",
      "commit_url": "https://api.github.com/repos/willcl-ark/bitcoin/commits/f8da79cae56f3b72f47438ef26293917e1c23af2",
      "created_at": "2023-07-04T13:37:01Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9722117562,
      "node_id": "HRFPE_lADOABII585pGN9OzwAAAAJDe726",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9722117562",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a3903cc1864021a47c2928c379cd17306b3f6f64",
      "commit_url": "https://api.github.com/repos/willcl-ark/bitcoin/commits/a3903cc1864021a47c2928c379cd17306b3f6f64",
      "created_at": "2023-07-04T13:44:51Z"
    },
    {
      "event": "renamed",
      "id": 9723026356,
      "node_id": "RTE_lADOABII585pGN9OzwAAAAJDiZu0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9723026356",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-04T15:13:11Z",
      "rename": {
        "from": "net: run disconnect in I2P thread",
        "to": "net: disconnect inside AttemptToEvictConnection"
      }
    },
    {
      "event": "commented",
      "id": 1620461536,
      "node_id": "IC_kwDOABII585glkfg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1620461536",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-04T15:38:38Z",
      "updated_at": "2023-07-04T15:38:38Z",
      "author_association": "MEMBER",
      "body": "OK I've pushed a new set of changes which now disconnects nodes synchronously inside of `AttemptToEvictConnection`.  \r\n\r\n@Crypt-iQ I'd be curious if you still see these new changes as resolving the issue in #27843? I havent' gotten your test patch working to my satisfaction yet (or at least, I don't see positive eviction candidate selection during it so it wouldn't overflow `nMaxInbound` even without these changes).",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#issuecomment-1620461536",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27912"
    },
    {
      "event": "mentioned",
      "id": 9723237810,
      "node_id": "MEE_lADOABII585pGN9OzwAAAAJDjNWy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9723237810",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-04T15:38:39Z"
    },
    {
      "event": "subscribed",
      "id": 9723237819,
      "node_id": "SE_lADOABII585pGN9OzwAAAAJDjNW7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9723237819",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-04T15:38:39Z"
    },
    {
      "event": "unsubscribed",
      "id": 9724179280,
      "node_id": "UE_lADOABII585pGN9OzwAAAAJDmzNQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9724179280",
      "actor": {
        "login": "19861826",
        "id": 124975449,
        "node_id": "U_kgDOB3L5WQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/124975449?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/19861826",
        "html_url": "https://github.com/19861826",
        "followers_url": "https://api.github.com/users/19861826/followers",
        "following_url": "https://api.github.com/users/19861826/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/19861826/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/19861826/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/19861826/subscriptions",
        "organizations_url": "https://api.github.com/users/19861826/orgs",
        "repos_url": "https://api.github.com/users/19861826/repos",
        "events_url": "https://api.github.com/users/19861826/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/19861826/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-04T18:14:49Z"
    },
    {
      "event": "unlabeled",
      "id": 9752066244,
      "node_id": "UNLE_lADOABII585pGN9OzwAAAAJFRLjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9752066244",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-07T08:17:21Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1524221824,
      "node_id": "PRR_kwDOABII585a2ceA",
      "url": null,
      "actor": null,
      "commit_id": "a3903cc1864021a47c2928c379cd17306b3f6f64",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I am not sure yet what would be the best approach to resolve the issues below.\r\n\r\nOne way would be to hold `m_nodes_disconnected_mutex` for the entire iteration of the `m_nodes_disconnected` list. But this would mean to call `DeleteNode()` and thus `PeerManagerImpl::FinalizeNode()` under that mutex. The latter locks `cs_main` :-(",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#pullrequestreview-1524221824",
      "submitted_at": "2023-07-11T16:24:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9836934280,
      "node_id": "HRFPE_lADOABII585pGN9OzwAAAAJKU7SI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9836934280",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "70f9af5573886f056b04cd0191bc2105b8e99c10",
      "commit_url": "https://api.github.com/repos/willcl-ark/bitcoin/commits/70f9af5573886f056b04cd0191bc2105b8e99c10",
      "created_at": "2023-07-17T12:15:04Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg4MjEzNTM2YWNhMjQ3ZmQ1MTNhNGI2MGNmNWNmZDRhMGY4Nzc4ZDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/88213536aca247fd513a4b60cf5cfd4a0f8778d9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/88213536aca247fd513a4b60cf5cfd4a0f8778d9",
      "tree": {
        "sha": "84d1970836c009e8fb95130afe20ddd85bcab3b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/84d1970836c009e8fb95130afe20ddd85bcab3b8"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 84d1970836c009e8fb95130afe20ddd85bcab3b8\nparent 600c595b8d2f4bf049b9182d4a0aa88e4b34458d\nauthor willcl-ark <will@256k1.dev> 1688477749 +0100\ncommitter willcl-ark <will@256k1.dev> 1689603197 +0100\n\nnet: add mutex on m_disconnect_nodes\n\nThis will permit safely removing nodes from multiple threads\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEoAg2YPI1onAAzTyBzm7EmUXBfqYFAmS1TH0ACgkQzm7EmUXB\nfqai/w//aeqynVZerBuhuzfIXrI/8zh6OKMGier9BYL1PQx2JwpgqlI0y4L/vmbU\nvwxFfVflo/dNn+tmq2KwM9y/pFYqz8BX+nVhSCXJv8z1c555hQaBTd0DD6F6/CA9\nO90OQzbmM62HXudFpe8fQ9ioBkJj8eJVlcGkCNzgB1bBM3QQeRQhyOqCPK72VSm8\nS5R60UJQrHp71NnReNMcV/0qWYzXa2VL/ioo/Zc9raiBead0bhE5SvNe4GpcmHkb\nVaq8B8Q3pGkvotzyYfgxppuWFJUBA9uyEzihJOsr8Gmz7juAwapj+1vO8uWlBu66\nTh5JMWTh2eY6fPFv0impYJRiTPNcZWMmwSO1yyAE1RvYlDNeifouRlJSe49styYX\nxvHODYiZVV+1Eo+qFriLEPKcnKWv++gTTcw279mudDjyJX9cXT8/mpEL6jcO1vTP\noZ08lvmis/sHrIJ9/TpXTccxoP8ZGvGbE5HcaZSntizB4eOJStzfUoDp3Qv8Uyfh\nSXmMGG3WxxPBydFe69CI6sVEQ6nGo0MEfB0glcz0nrg6NO7hf17/X95lhq/bKqrd\nyzs+KU9ovOV10RWAQsQ1G6wXGkJO2n7UDc4EIn+zX9VPahPTiOHBnMEhAOV58QyQ\nz5L1/Y5ez0/dWZ0T9lu3hS4QgQrKxxXQDnWB4jOmwDrbT7XyD2U=\n=BQEZ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/600c595b8d2f4bf049b9182d4a0aa88e4b34458d",
          "sha": "600c595b8d2f4bf049b9182d4a0aa88e4b34458d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/600c595b8d2f4bf049b9182d4a0aa88e4b34458d"
        }
      ],
      "message": "net: add mutex on m_disconnect_nodes\n\nThis will permit safely removing nodes from multiple threads",
      "committer": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2023-07-17T14:13:17Z"
      },
      "author": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2023-07-04T13:35:49Z"
      },
      "sha": "88213536aca247fd513a4b60cf5cfd4a0f8778d9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRkMDU5MTYwYmYzZmQzNDgzODg0NzM2NWYwMzg2N2UwN2IyY2RmYWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dd059160bf3fd34838847365f03867e07b2cdfab",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/dd059160bf3fd34838847365f03867e07b2cdfab",
      "tree": {
        "sha": "f21de15246389113807bd192b092dd87e1a4deb4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f21de15246389113807bd192b092dd87e1a4deb4"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f21de15246389113807bd192b092dd87e1a4deb4\nparent 88213536aca247fd513a4b60cf5cfd4a0f8778d9\nauthor willcl-ark <will@256k1.dev> 1688477757 +0100\ncommitter willcl-ark <will@256k1.dev> 1689603198 +0100\n\nnet: add disconnect node helper functions\n\nAdd DeleteDisconnectedNode() and DisconnectAndReleaseNode() functions.\n\nPermit disconnection and deletion of a single node.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEoAg2YPI1onAAzTyBzm7EmUXBfqYFAmS1TH4ACgkQzm7EmUXB\nfqYvHg/9EFdqgNfhictNowGcXIdWSwCP9VUHDUfga2QbH9omroG6eXi8vxuHMI2/\n8ZuSI95kPaYLSX5pDXcgfFktBkma3fSpuOWSn7qJ0hOX4G8hHTDOTBmpmoC69Gh0\nDx2RzxbRo42N3jUhnj62rQ2Yawqm1t5cW5RUAzuvJAimjvBGG43QirJn6PZTnl7q\nxkP1CsbWStaBkAQ1RaASDvXO+RRgzcnLBpwB4sTFfKVXDMT4Vp+D5egTAvIEBKhH\nX5n8tvbpYHUZDZ5wCW1rDVWv+QzHgdLdInjfHlOBMACkRckoGpFrngvLcIa0xzpM\nUEQnwogneeyqj3qIsl6OK1ZMILoc1badZNrX+UpA0vAPh8KbMCalhZDQRO29eZAo\ntj6DiSQvi57eHIAPMITVL5k8r11jveNQSIU5gX41efaxeCv9nfT9guWJEh+qAC2D\nKypn4N+VTfpRQ82tNGUe8u0h2W53Xn53fkmk4FqADXHaF/Jx6cngMxTQDDNLpNhZ\nE4KIkpnPeWPmE4b1KD21AjPTzFTU1HMaACGr+VYXNBXqu/gSMedm0OAv4NiEY660\nvv8SBzZhxLZAPYd0Z26DYdXPKaRXtxRhA/XzxmdbFPNXtXldbHjblAiMvYnjUlzZ\nUEe+CRdsp6liO40ufFD7LzbLqt5YVnDz4joOvJULoCvHF+k1ACA=\n=lR8f\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/88213536aca247fd513a4b60cf5cfd4a0f8778d9",
          "sha": "88213536aca247fd513a4b60cf5cfd4a0f8778d9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/88213536aca247fd513a4b60cf5cfd4a0f8778d9"
        }
      ],
      "message": "net: add disconnect node helper functions\n\nAdd DeleteDisconnectedNode() and DisconnectAndReleaseNode() functions.\n\nPermit disconnection and deletion of a single node.",
      "committer": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2023-07-17T14:13:18Z"
      },
      "author": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2023-07-04T13:35:57Z"
      },
      "sha": "dd059160bf3fd34838847365f03867e07b2cdfab"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDkxMmQ4ZTQ5MTQzN2QzMjUyYzRlYmZhMzZjNmJkNGU5NTgyZmYzNjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "tree": {
        "sha": "0dc439d0200e6224b28028350c61dea5ef96032f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0dc439d0200e6224b28028350c61dea5ef96032f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0dc439d0200e6224b28028350c61dea5ef96032f\nparent dd059160bf3fd34838847365f03867e07b2cdfab\nauthor willcl-ark <will@256k1.dev> 1688477763 +0100\ncommitter willcl-ark <will@256k1.dev> 1689603199 +0100\n\nnet: disconnect nodes in AttemptToEvictConnection\n\nDisconnect nodes using new helpers both in DisconnectNodes() and as part of\nAttemptToEvictConnection().\n\nPreviously it was possible for multiple new connections to be accepted in\none thread (e.g. ThreadI2PAccept) and evicted nodes to not be processed\nand removed atomically, instead waiting on ThreadSocketHandler() to run\nDisconnectNodes(), allowing overflow of maxconnections in the interim.\n\nUnder the new behvaiour, as part of accepting a new connection we\ndisconnect and delete the node inside of AttemptToEvictConnection(),\ndropping the new connection if this doesn't succeed. This ensures we\ndon't exceed maxconnections.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEoAg2YPI1onAAzTyBzm7EmUXBfqYFAmS1TH8ACgkQzm7EmUXB\nfqZbRA/+Pi8UZ7mSx7IiMYb6QF/2jG+XNOYNEnSKfgVOYmz2zE/JpZjPeitzy6oR\nJHc3ZSp0QKflcbndEOTul/EOJo1bDDxs2A6N5JJow36Xmc8ErfkD3ccnTpzjf6i2\nXhH/Bb+DD79Qr1vvLV/ZRcab6kEfb2jtOib9CE4VF4dGgxPqVRito5ameHLb2ndh\nlimhnZUxwhSJkunJKLcoZdaNEyHpCg6Kv1qRGOA+yM/5eMTtErm8s1CwnM5l5Dpa\nHryO8PrcLsFHVep8n0HRaR0++9gg7mtJ4H0HG2NwAHIYm8XfLzX3pI4ZGmFzKZS8\nzS8poI+u0So/qA3/GpsLCf5s+0huZBHTxiLC53EDKZGBIygHD5Z3Vm1g+m2XVN8m\nublzE6UbVzNZtWvmQU1GXjxkNgMPz7Fc4o6wK8A9ZV/6iq4uYt/IaU+cdTcfbKPK\n3CQikW/cPLzipLJXLWUqNyAFpgegIsgLhars9ARZ2HuKHI9ksh1BhUsbg4pKiS1F\n+MsuHfK4e4t+a+TP7xTiCmhx5gjgRQt7dnODKgEDkHYeG6WyH0FKeN8p1JuhD3ZJ\n9bnCkC4d3cnBS72t0WQOxV3iBLD1dnk4jfoUGYlCZ5ACcy4mYQEYZHznKBMtsoZU\nXMEUBNoaMR+3Cu0xSnQdYLXljOy2r1nGOQH+CaXQugzYDdn+Pq0=\n=l7Wa\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dd059160bf3fd34838847365f03867e07b2cdfab",
          "sha": "dd059160bf3fd34838847365f03867e07b2cdfab",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/dd059160bf3fd34838847365f03867e07b2cdfab"
        }
      ],
      "message": "net: disconnect nodes in AttemptToEvictConnection\n\nDisconnect nodes using new helpers both in DisconnectNodes() and as part of\nAttemptToEvictConnection().\n\nPreviously it was possible for multiple new connections to be accepted in\none thread (e.g. ThreadI2PAccept) and evicted nodes to not be processed\nand removed atomically, instead waiting on ThreadSocketHandler() to run\nDisconnectNodes(), allowing overflow of maxconnections in the interim.\n\nUnder the new behvaiour, as part of accepting a new connection we\ndisconnect and delete the node inside of AttemptToEvictConnection(),\ndropping the new connection if this doesn't succeed. This ensures we\ndon't exceed maxconnections.",
      "committer": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2023-07-17T14:13:19Z"
      },
      "author": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2023-07-04T13:36:03Z"
      },
      "sha": "912d8e491437d3252c4ebfa36c6bd4e9582ff363"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9838335661,
      "node_id": "HRFPE_lADOABII585pGN9OzwAAAAJKaRat",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9838335661",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "commit_url": "https://api.github.com/repos/willcl-ark/bitcoin/commits/912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "created_at": "2023-07-17T14:14:07Z"
    },
    {
      "event": "commented",
      "id": 1638306663,
      "node_id": "IC_kwDOABII585hppNn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1638306663",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-17T14:49:59Z",
      "updated_at": "2023-07-17T14:49:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "> OK I've pushed a new set of changes which now disconnects nodes synchronously inside of `AttemptToEvictConnection`.\r\n> \r\n> @Crypt-iQ I'd be curious if you still see these new changes as resolving the issue in #27843? I havent' gotten your test patch working to my satisfaction yet (or at least, I don't see positive eviction candidate selection during it so it wouldn't overflow `nMaxInbound` even without these changes).\r\n\r\nSorry I have been a bit short on time recently, but let me know when to test it and I'll do it",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#issuecomment-1638306663",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27912"
    },
    {
      "event": "mentioned",
      "id": 9838785640,
      "node_id": "MEE_lADOABII585pGN9OzwAAAAJKb_Ro",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9838785640",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-17T14:50:00Z"
    },
    {
      "event": "subscribed",
      "id": 9838785665,
      "node_id": "SE_lADOABII585pGN9OzwAAAAJKb_SB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9838785665",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-17T14:50:00Z"
    },
    {
      "event": "commented",
      "id": 1641806637,
      "node_id": "IC_kwDOABII585h2_st",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1641806637",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-19T10:09:00Z",
      "updated_at": "2023-07-19T10:09:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "Here is a patch on top of this PR that should address all concerns above about thread safetyness.\r\n\r\n<details>\r\n<summary>[patch] thread safe</summary>\r\n\r\n```diff\r\ndiff --git i/src/net.cpp w/src/net.cpp\r\nindex c2160e945f..058f615dd5 100644\r\n--- i/src/net.cpp\r\n+++ w/src/net.cpp\r\n@@ -886,12 +886,14 @@ size_t CConnman::SocketSendData(CNode& node) const\r\n  *   to forge.  In order to partition a node the attacker must be\r\n  *   simultaneously better at all of them than honest peers.\r\n  *   If we find a candidate perform the eviction.\r\n  */\r\n bool CConnman::AttemptToEvictConnection()\r\n {\r\n+    AssertLockNotHeld(m_nodes_disconnected_mutex);\r\n+\r\n     std::vector<NodeEvictionCandidate> vEvictionCandidates;\r\n     {\r\n \r\n         LOCK(m_nodes_mutex);\r\n         for (const CNode* node : m_nodes) {\r\n             if (node->fDisconnect)\r\n@@ -916,33 +918,37 @@ bool CConnman::AttemptToEvictConnection()\r\n         }\r\n     }\r\n     const std::optional<NodeId> node_id_to_evict = SelectNodeToEvict(std::move(vEvictionCandidates));\r\n     if (!node_id_to_evict) {\r\n         return false;\r\n     }\r\n-    CNode* evicted_node{nullptr};\r\n+    bool disconnected{false};\r\n     {\r\n         LOCK(m_nodes_mutex);\r\n-        for (CNode* pnode : m_nodes) {\r\n-            if (pnode->GetId() == *node_id_to_evict) {\r\n-                LogPrint(BCLog::NET, \"selected %s connection for eviction peer=%d; disconnecting\\n\", pnode->ConnectionTypeAsString(), pnode->GetId());\r\n-                pnode->fDisconnect = true;\r\n-                evicted_node = pnode;\r\n+        for (auto it = m_nodes.begin(); it != m_nodes.end(); ++it) {\r\n+            CNode* node = *it;\r\n+            if (node->GetId() == *node_id_to_evict) {\r\n+                LogPrint(BCLog::NET, \"selected %s connection for eviction peer=%d; disconnecting\\n\", node->ConnectionTypeAsString(), node->GetId());\r\n+                node->fDisconnect = true;\r\n+                DisconnectAndReleaseNode(node);\r\n+                disconnected = true;\r\n+                m_nodes.erase(it);\r\n                 break;\r\n             }\r\n         }\r\n     }\r\n-    if (evicted_node) {\r\n-        DisconnectAndReleaseNode(evicted_node);\r\n-        DeleteDisconnectedNode(evicted_node);\r\n+    if (disconnected) {\r\n+        DeleteDisconnectedNodes();\r\n         return true;\r\n     }\r\n     return false;\r\n }\r\n \r\n void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\r\n+    AssertLockNotHeld(m_nodes_disconnected_mutex);\r\n+\r\n     struct sockaddr_storage sockaddr;\r\n     socklen_t len = sizeof(sockaddr);\r\n     auto sock = hListenSocket.sock->Accept((struct sockaddr*)&sockaddr, &len);\r\n     CAddress addr;\r\n \r\n     if (!sock) {\r\n@@ -1105,45 +1111,56 @@ bool CConnman::AddConnection(const std::string& address, ConnectionType conn_typ\r\n     if (!grant) return false;\r\n \r\n     OpenNetworkConnection(CAddress(), false, &grant, address.c_str(), conn_type);\r\n     return true;\r\n }\r\n \r\n-void CConnman::DeleteDisconnectedNode(CNode* pnode)\r\n+void CConnman::DeleteDisconnectedNodes()\r\n {\r\n-    // Destroy the object only after other threads have stopped using it.\r\n-    // Prevent double free by setting nRefCount to -1 before delete.\r\n-    int expectedRefCount = 0;\r\n-    if (pnode->nRefCount.compare_exchange_strong(expectedRefCount, -1)) {\r\n-        WITH_LOCK(m_nodes_disconnected_mutex, m_nodes_disconnected.remove(pnode));\r\n-        DeleteNode(pnode);\r\n+    AssertLockNotHeld(m_nodes_disconnected_mutex);\r\n+\r\n+    // Delete disconnected nodes. Call DeleteNode() without holding m_nodes_mutex or m_nodes_disconnected_mutex.\r\n+    std::vector<CNode*> to_delete;\r\n+\r\n+    {\r\n+        LOCK(m_nodes_disconnected_mutex);\r\n+        for (auto it = m_nodes_disconnected.begin(); it != m_nodes_disconnected.end();) {\r\n+            CNode* node = *it;\r\n+            if (node->GetRefCount() == 0) {\r\n+                it = m_nodes_disconnected.erase(it);\r\n+                to_delete.push_back(node);\r\n+            } else {\r\n+                ++it;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    for (CNode* node : to_delete) {\r\n+        DeleteNode(node);\r\n     }\r\n }\r\n \r\n-void CConnman::DisconnectAndReleaseNode(CNode* pnode)\r\n+void CConnman::DisconnectAndReleaseNode(CNode* node)\r\n {\r\n-    LOCK(m_nodes_mutex);\r\n-    if (std::find(m_nodes.begin(), m_nodes.end(), pnode) != m_nodes.end()) {\r\n-\r\n-        // remove from m_nodes\r\n-        m_nodes.erase(remove(m_nodes.begin(), m_nodes.end(), pnode), m_nodes.end());\r\n+    AssertLockNotHeld(m_nodes_disconnected_mutex);\r\n \r\n-        // release outbound grant (if any)\r\n-        pnode->grantOutbound.Release();\r\n+    // release outbound grant (if any)\r\n+    node->grantOutbound.Release();\r\n \r\n-        // close socket and cleanup\r\n-        pnode->CloseSocketDisconnect();\r\n+    // close socket and cleanup\r\n+    node->CloseSocketDisconnect();\r\n \r\n-        // hold in disconnected pool until all refs are released\r\n-        pnode->Release();\r\n-        WITH_LOCK(m_nodes_disconnected_mutex, m_nodes_disconnected.push_back(pnode));\r\n-    }\r\n+    // hold in disconnected pool until all refs are released\r\n+    node->Release();\r\n+    WITH_LOCK(m_nodes_disconnected_mutex, m_nodes_disconnected.push_back(node));\r\n }\r\n \r\n void CConnman::DisconnectNodes()\r\n {\r\n+    AssertLockNotHeld(m_nodes_disconnected_mutex);\r\n+\r\n     {\r\n         LOCK(m_nodes_mutex);\r\n \r\n         if (!fNetworkActive) {\r\n             // Disconnect any connected nodes\r\n             for (CNode* pnode : m_nodes) {\r\n@@ -1152,28 +1169,25 @@ void CConnman::DisconnectNodes()\r\n                     pnode->fDisconnect = true;\r\n                 }\r\n             }\r\n         }\r\n \r\n         // Disconnect unused nodes\r\n-        std::vector<CNode*> nodes_copy = m_nodes;\r\n-        for (CNode* pnode : nodes_copy)\r\n-        {\r\n-            if (pnode->fDisconnect)\r\n-            {\r\n-                DisconnectAndReleaseNode(pnode);\r\n-            }\r\n-        }\r\n-    }\r\n-    // Delete disconnected nodes\r\n-    std::list<CNode*> disconnected_nodes_copy{};\r\n-    WITH_LOCK(m_nodes_disconnected_mutex, disconnected_nodes_copy = m_nodes_disconnected);\r\n-    for (CNode* pnode : disconnected_nodes_copy)\r\n-    {\r\n-        DeleteDisconnectedNode(pnode);\r\n+        m_nodes.erase(std::remove_if(m_nodes.begin(),\r\n+                                     m_nodes.end(),\r\n+                                     [this](CNode* node) {\r\n+                                         if (node->fDisconnect) {\r\n+                                             DisconnectAndReleaseNode(node);\r\n+                                             return true;\r\n+                                         }\r\n+                                         return false;\r\n+                                     }),\r\n+                      m_nodes.end());\r\n     }\r\n+\r\n+    DeleteDisconnectedNodes();\r\n }\r\n \r\n void CConnman::NotifyNumConnectionsChanged()\r\n {\r\n     size_t nodes_size;\r\n     {\r\n@@ -1270,12 +1284,13 @@ Sock::EventsPerSock CConnman::GenerateWaitSockets(Span<CNode* const> nodes)\r\n \r\n     return events_per_sock;\r\n }\r\n \r\n void CConnman::SocketHandler()\r\n {\r\n+    AssertLockNotHeld(m_nodes_disconnected_mutex);\r\n     AssertLockNotHeld(m_total_bytes_sent_mutex);\r\n \r\n     Sock::EventsPerSock events_per_sock;\r\n \r\n     {\r\n         const NodesSnapshot snap{*this, /*shuffle=*/false};\r\n@@ -1381,12 +1396,14 @@ void CConnman::SocketHandlerConnected(const std::vector<CNode*>& nodes,\r\n         if (InactivityCheck(*pnode)) pnode->fDisconnect = true;\r\n     }\r\n }\r\n \r\n void CConnman::SocketHandlerListening(const Sock::EventsPerSock& events_per_sock)\r\n {\r\n+    AssertLockNotHeld(m_nodes_disconnected_mutex);\r\n+\r\n     for (const ListenSocket& listen_socket : vhListenSocket) {\r\n         if (interruptNet) {\r\n             return;\r\n         }\r\n         const auto it = events_per_sock.find(listen_socket.sock);\r\n         if (it != events_per_sock.end() && it->second.occurred & Sock::RECV) {\r\n@@ -1394,12 +1411,13 @@ void CConnman::SocketHandlerListening(const Sock::EventsPerSock& events_per_sock\r\n         }\r\n     }\r\n }\r\n \r\n void CConnman::ThreadSocketHandler()\r\n {\r\n+    AssertLockNotHeld(m_nodes_disconnected_mutex);\r\n     AssertLockNotHeld(m_total_bytes_sent_mutex);\r\n \r\n     while (!interruptNet)\r\n     {\r\n         DisconnectNodes();\r\n         NotifyNumConnectionsChanged();\r\n@@ -2093,12 +2111,14 @@ void CConnman::ThreadMessageHandler()\r\n         fMsgProcWake = false;\r\n     }\r\n }\r\n \r\n void CConnman::ThreadI2PAcceptIncoming()\r\n {\r\n+    AssertLockNotHeld(m_nodes_disconnected_mutex);\r\n+\r\n     static constexpr auto err_wait_begin = 1s;\r\n     static constexpr auto err_wait_cap = 5min;\r\n     auto err_wait = err_wait_begin;\r\n \r\n     bool advertising_listen_addr = false;\r\n     i2p::Connection conn;\r\n@@ -2481,12 +2501,14 @@ void CConnman::StopThreads()\r\n     if (threadSocketHandler.joinable())\r\n         threadSocketHandler.join();\r\n }\r\n \r\n void CConnman::StopNodes()\r\n {\r\n+    AssertLockNotHeld(m_nodes_disconnected_mutex);\r\n+\r\n     if (fAddressesInitialized) {\r\n         DumpAddresses();\r\n         fAddressesInitialized = false;\r\n \r\n         if (m_use_addrman_outgoing) {\r\n             // Anchor connections are only dumped during clean shutdown.\r\ndiff --git i/src/net.h w/src/net.h\r\nindex d5833d7e2d..6cdf8cb462 100644\r\n--- i/src/net.h\r\n+++ w/src/net.h\r\n@@ -760,15 +760,17 @@ public:\r\n \r\n     ~CConnman();\r\n \r\n     bool Start(CScheduler& scheduler, const Options& options) EXCLUSIVE_LOCKS_REQUIRED(!m_total_bytes_sent_mutex, !m_added_nodes_mutex, !m_addr_fetches_mutex, !mutexMsgProc);\r\n \r\n     void StopThreads();\r\n-    void StopNodes();\r\n-    void Stop()\r\n+    void StopNodes() EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_disconnected_mutex);\r\n+    void Stop() EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_disconnected_mutex)\r\n     {\r\n+        AssertLockNotHeld(m_nodes_disconnected_mutex);\r\n+\r\n         StopThreads();\r\n         StopNodes();\r\n     };\r\n \r\n     void Interrupt() EXCLUSIVE_LOCKS_REQUIRED(!mutexMsgProc);\r\n     bool GetNetworkActive() const { return fNetworkActive; };\r\n@@ -917,31 +919,31 @@ private:\r\n \r\n     void ThreadOpenAddedConnections() EXCLUSIVE_LOCKS_REQUIRED(!m_added_nodes_mutex, !m_unused_i2p_sessions_mutex);\r\n     void AddAddrFetch(const std::string& strDest) EXCLUSIVE_LOCKS_REQUIRED(!m_addr_fetches_mutex);\r\n     void ProcessAddrFetch() EXCLUSIVE_LOCKS_REQUIRED(!m_addr_fetches_mutex, !m_unused_i2p_sessions_mutex);\r\n     void ThreadOpenConnections(std::vector<std::string> connect) EXCLUSIVE_LOCKS_REQUIRED(!m_addr_fetches_mutex, !m_added_nodes_mutex, !m_nodes_mutex, !m_unused_i2p_sessions_mutex);\r\n     void ThreadMessageHandler() EXCLUSIVE_LOCKS_REQUIRED(!mutexMsgProc);\r\n-    void ThreadI2PAcceptIncoming();\r\n-    void AcceptConnection(const ListenSocket& hListenSocket);\r\n+    void ThreadI2PAcceptIncoming() EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_disconnected_mutex);\r\n+    void AcceptConnection(const ListenSocket& hListenSocket) EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_disconnected_mutex);\r\n \r\n     /**\r\n      * Create a `CNode` object from a socket that has just been accepted and add the node to\r\n      * the `m_nodes` member.\r\n      * @param[in] sock Connected socket to communicate with the peer.\r\n      * @param[in] permission_flags The peer's permissions.\r\n      * @param[in] addr_bind The address and port at our side of the connection.\r\n      * @param[in] addr The address and port at the peer's side of the connection.\r\n      */\r\n     void CreateNodeFromAcceptedSocket(std::unique_ptr<Sock>&& sock,\r\n                                       NetPermissionFlags permission_flags,\r\n                                       const CAddress& addr_bind,\r\n-                                      const CAddress& addr);\r\n+                                      const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_disconnected_mutex);\r\n \r\n-    void DeleteDisconnectedNode(CNode* pnode);\r\n-    void DisconnectAndReleaseNode(CNode* pnode);\r\n-    void DisconnectNodes();\r\n+    void DisconnectAndReleaseNode(CNode* node) EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_disconnected_mutex);\r\n+    void DeleteDisconnectedNodes() EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_disconnected_mutex);\r\n+    void DisconnectNodes() EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_disconnected_mutex);\r\n     void NotifyNumConnectionsChanged();\r\n     /** Return true if the peer is inactive and should be disconnected. */\r\n     bool InactivityCheck(const CNode& node) const;\r\n \r\n     /**\r\n      * Generate a collection of sockets to check for IO readiness.\r\n@@ -950,13 +952,13 @@ private:\r\n      */\r\n     Sock::EventsPerSock GenerateWaitSockets(Span<CNode* const> nodes);\r\n \r\n     /**\r\n      * Check connected and listening sockets for IO readiness and process them accordingly.\r\n      */\r\n-    void SocketHandler() EXCLUSIVE_LOCKS_REQUIRED(!m_total_bytes_sent_mutex, !mutexMsgProc);\r\n+    void SocketHandler() EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_disconnected_mutex, !m_total_bytes_sent_mutex, !mutexMsgProc);\r\n \r\n     /**\r\n      * Do the read/write for connected sockets that are ready for IO.\r\n      * @param[in] nodes Nodes to process. The socket of each node is checked against `what`.\r\n      * @param[in] events_per_sock Sockets that are ready for IO.\r\n      */\r\n@@ -965,15 +967,15 @@ private:\r\n         EXCLUSIVE_LOCKS_REQUIRED(!m_total_bytes_sent_mutex, !mutexMsgProc);\r\n \r\n     /**\r\n      * Accept incoming connections, one from each read-ready listening socket.\r\n      * @param[in] events_per_sock Sockets that are ready for IO.\r\n      */\r\n-    void SocketHandlerListening(const Sock::EventsPerSock& events_per_sock);\r\n+    void SocketHandlerListening(const Sock::EventsPerSock& events_per_sock) EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_disconnected_mutex);\r\n \r\n-    void ThreadSocketHandler() EXCLUSIVE_LOCKS_REQUIRED(!m_total_bytes_sent_mutex, !mutexMsgProc);\r\n+    void ThreadSocketHandler() EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_disconnected_mutex, !m_total_bytes_sent_mutex, !mutexMsgProc);\r\n     void ThreadDNSAddressSeed() EXCLUSIVE_LOCKS_REQUIRED(!m_addr_fetches_mutex, !m_nodes_mutex);\r\n \r\n     uint64_t CalculateKeyedNetGroup(const CAddress& ad) const;\r\n \r\n     CNode* FindNode(const CNetAddr& ip);\r\n     CNode* FindNode(const CSubNet& subNet);\r\n@@ -983,13 +985,13 @@ private:\r\n     /**\r\n      * Determine whether we're already connected to a given address, in order to\r\n      * avoid initiating duplicate connections.\r\n      */\r\n     bool AlreadyConnectedToAddress(const CAddress& addr);\r\n \r\n-    bool AttemptToEvictConnection();\r\n+    bool AttemptToEvictConnection() EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_disconnected_mutex);\r\n     CNode* ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure, ConnectionType conn_type) EXCLUSIVE_LOCKS_REQUIRED(!m_unused_i2p_sessions_mutex);\r\n     void AddWhitelistPermissionFlags(NetPermissionFlags& flags, const CNetAddr &addr) const;\r\n \r\n     void DeleteNode(CNode* pnode);\r\n \r\n     NodeId GetNewNodeId();\r\n@@ -1042,13 +1044,13 @@ private:\r\n     const NetGroupManager& m_netgroupman;\r\n     std::deque<std::string> m_addr_fetches GUARDED_BY(m_addr_fetches_mutex);\r\n     Mutex m_addr_fetches_mutex;\r\n     std::vector<std::string> m_added_nodes GUARDED_BY(m_added_nodes_mutex);\r\n     mutable Mutex m_added_nodes_mutex;\r\n     std::vector<CNode*> m_nodes GUARDED_BY(m_nodes_mutex);\r\n-    GlobalMutex m_nodes_disconnected_mutex;\r\n+    Mutex m_nodes_disconnected_mutex;\r\n     std::list<CNode*> m_nodes_disconnected GUARDED_BY(m_nodes_disconnected_mutex);\r\n     mutable RecursiveMutex m_nodes_mutex;\r\n     std::atomic<NodeId> nLastNodeId{0};\r\n     unsigned int nPrevNodeCount{0};\r\n \r\n     /**\r\n```\r\n</details>",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#issuecomment-1641806637",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27912"
    },
    {
      "event": "commented",
      "id": 1665802905,
      "node_id": "IC_kwDOABII585jSiKZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1665802905",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T15:37:06Z",
      "updated_at": "2023-08-04T15:37:06Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review and patch @vasild, I will try to review it over the weekend and keep this moving forward.\r\n\r\nI have in the mean time been considering a totally different approach to thread-safe deletion of nodes from `CConnman`, but it's somewhat more invasive (in terms of LOC)... I was experimenting with whether `m_nodes` would work better as a vector of `share_ptr`, meaning they could be added and removed from `m_nodes` (and `m_nodes_disconnected`) much more safely from the perspective of other threads...\r\n\r\nIf you are also interested in this approach, I'd be curious to know what you thought of it. Althought \"cleaner\" in the end I think the change is too expensive for too-little benefit...\r\n\r\nhttps://github.com/willcl-ark/bitcoin/tree/2023-07_shared-ptr-cnode",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#issuecomment-1665802905",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27912"
    },
    {
      "event": "mentioned",
      "id": 10010772158,
      "node_id": "MEE_lADOABII585pGN9OzwAAAAJUsEK-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10010772158",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T15:37:06Z"
    },
    {
      "event": "subscribed",
      "id": 10010772174,
      "node_id": "SE_lADOABII585pGN9OzwAAAAJUsELO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10010772174",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T15:37:06Z"
    },
    {
      "event": "commented",
      "id": 1665852012,
      "node_id": "IC_kwDOABII585jSuJs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1665852012",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T16:03:21Z",
      "updated_at": "2023-08-04T16:04:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "Yes! I was thinking about the same! We are doing some manual refcounting here which is creating all kinds of headaches and is prone to bugs. There is a neat solution already for this `std::shared_ptr`. Long term, this is a must have IMO.\r\n\r\nTo minimize the size of the initial PR, I guess you can just change `CConnman::m_nodes` and `CConnman::m_nodes_disconnected` from `std::vector<CNode*>` to `std::vector<CNodeRef>` and the needed changes to get that to compile and work.\r\n\r\nLater I think we don't even need `m_nodes_disconnected` because we can do the `FinalizeNode()` from the `CNode` destructor. For example - give the `CNode` constructor a callback function that it will invoke from its destructor. Then just remove the `shared_ptr` objects from `m_nodes` or elsewhere and when their refcount drops to zero the destructor will be called and it will call `FinalizeNode()`.\r\n\r\nPS [2023-07_shared-ptr-cnode](https://github.com/willcl-ark/bitcoin/tree/2023-07_shared-ptr-cnode) does not look too bad.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#issuecomment-1665852012",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27912"
    },
    {
      "event": "labeled",
      "id": 10017690189,
      "node_id": "LE_lADOABII585pGN9OzwAAAAJVGdJN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10017690189",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-06T17:46:59Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1666931675,
      "node_id": "IC_kwDOABII585jW1vb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1666931675",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-06T17:47:00Z",
      "updated_at": "2023-08-06T17:47:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#issuecomment-1666931675",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27912"
    },
    {
      "event": "commented",
      "id": 1793273348,
      "node_id": "IC_kwDOABII585q4y4E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1793273348",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-04T00:43:15Z",
      "updated_at": "2023-11-04T00:43:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--13523179cfe9479db18ec6c5d236f789-->\nThere hasn't been much activity lately and the patch still needs rebase. What is the status here?\n\n* Is it still relevant? ➡️ Please solve the conflicts to make it ready for review and to ensure the CI passes.\n* Is it no longer relevant? ➡️ Please close.\n* Did the author lose interest or time to work on this? ➡️ Please close it and mark it 'Up for grabs' with the label, so that it can be picked up in the future.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#issuecomment-1793273348",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27912"
    },
    {
      "event": "commented",
      "id": 1922619147,
      "node_id": "IC_kwDOABII585ymNcL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1922619147",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-02T01:24:38Z",
      "updated_at": "2024-02-02T01:24:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--13523179cfe9479db18ec6c5d236f789-->\n⌛ There hasn't been much activity lately and the patch still needs rebase. What is the status here?\n\n* Is it still relevant? ➡️ Please solve the conflicts to make it ready for review and to ensure the CI passes.\n* Is it no longer relevant? ➡️ Please close.\n* Did the author lose interest or time to work on this? ➡️ Please close it and mark it 'Up for grabs' with the label, so that it can be picked up in the future.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#issuecomment-1922619147",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27912"
    },
    {
      "event": "commented",
      "id": 2087787047,
      "node_id": "IC_kwDOABII5858cRon",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2087787047",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-01T00:54:18Z",
      "updated_at": "2024-05-01T00:54:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--13523179cfe9479db18ec6c5d236f789-->\n⌛ There hasn't been much activity lately and the patch still needs rebase. What is the status here?\n\n* Is it still relevant? ➡️ Please solve the conflicts to make it ready for review and to ensure the CI passes.\n* Is it no longer relevant? ➡️ Please close.\n* Did the author lose interest or time to work on this? ➡️ Please close it and mark it 'Up for grabs' with the label, so that it can be picked up in the future.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#issuecomment-2087787047",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27912"
    },
    {
      "event": "commented",
      "id": 2087991015,
      "node_id": "IC_kwDOABII5858dDbn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2087991015",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-01T05:17:24Z",
      "updated_at": "2024-05-01T05:17:24Z",
      "author_association": "MEMBER",
      "body": "@willcl-ark ",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#issuecomment-2087991015",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27912"
    },
    {
      "event": "mentioned",
      "id": 12667165435,
      "node_id": "MEE_lADOABII585pGN9OzwAAAALzBZr7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12667165435",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-01T05:17:25Z"
    },
    {
      "event": "subscribed",
      "id": 12667165444,
      "node_id": "SE_lADOABII585pGN9OzwAAAALzBZsE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12667165444",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-01T05:17:25Z"
    },
    {
      "event": "commented",
      "id": 2088163916,
      "node_id": "IC_kwDOABII5858dtpM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2088163916",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-01T08:44:25Z",
      "updated_at": "2024-05-01T08:44:25Z",
      "author_association": "MEMBER",
      "body": "Going to close this for now as I don't have time to finish it.",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#issuecomment-2088163916",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27912"
    },
    {
      "event": "closed",
      "id": 12668358865,
      "node_id": "CE_lADOABII585pGN9OzwAAAALzF9DR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12668358865",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-01T08:44:25Z"
    },
    {
      "event": "locked",
      "id": 17484878060,
      "node_id": "LOE_lADOABII585pGN9OzwAAAAQSLhDs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17484878060",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-01T07:51:49Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1233973528",
      "pull_request_review_id": 1486091302,
      "id": 1233973528,
      "node_id": "PRRC_kwDOABII585JjPEY",
      "diff_hunk": "@@ -1122,32 +1122,36 @@ void CConnman::DisconnectNodes()\n \n         // Disconnect unused nodes\n         std::vector<CNode*> nodes_copy = m_nodes;\n-        for (CNode* pnode : nodes_copy)\n         {\n-            if (pnode->fDisconnect)\n-            {\n-                // remove from m_nodes\n-                m_nodes.erase(remove(m_nodes.begin(), m_nodes.end(), pnode), m_nodes.end());\n+            LOCK(m_disconnect_mutex);\n+            for (CNode* pnode : nodes_copy) {\n+                if (pnode->fDisconnect) {\n+                    // remove from m_nodes\n+                    m_nodes.erase(remove(m_nodes.begin(), m_nodes.end(), pnode), m_nodes.end());\n \n-                // release outbound grant (if any)\n-                pnode->grantOutbound.Release();\n+                    // release outbound grant (if any)\n+                    pnode->grantOutbound.Release();\n \n-                // close socket and cleanup\n-                pnode->CloseSocketDisconnect();\n+                    // close socket and cleanup\n+                    pnode->CloseSocketDisconnect();\n \n-                // hold in disconnected pool until all refs are released\n-                pnode->Release();\n-                m_nodes_disconnected.push_back(pnode);\n+                    // hold in disconnected pool until all refs are released\n+                    pnode->Release();\n+                    m_nodes_disconnected.push_back(pnode);\n+                }\n             }\n         }\n     }\n     {\n+        LOCK(m_disconnect_mutex);\n         // Delete disconnected nodes\n         std::list<CNode*> nodes_disconnected_copy = m_nodes_disconnected;\n         for (CNode* pnode : nodes_disconnected_copy)\n         {\n             // Destroy the object only after other threads have stopped using it.\n-            if (pnode->GetRefCount() <= 0) {\n+            // Prevent two threads trying to delete the same node: set nRefCount to -1 first",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "original_commit_id": "1d28dfb751c882d2e1c6474a817cd686310d83f8",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think `m_disconnect_mutex` already prevents this from happening",
      "created_at": "2023-06-19T12:15:21Z",
      "updated_at": "2023-06-19T12:15:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1233973528",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1233973528"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1234060495",
      "pull_request_review_id": 1486230879,
      "id": 1234060495,
      "node_id": "PRRC_kwDOABII585JjkTP",
      "diff_hunk": "@@ -1122,32 +1122,36 @@ void CConnman::DisconnectNodes()\n \n         // Disconnect unused nodes\n         std::vector<CNode*> nodes_copy = m_nodes;\n-        for (CNode* pnode : nodes_copy)\n         {\n-            if (pnode->fDisconnect)\n-            {\n-                // remove from m_nodes\n-                m_nodes.erase(remove(m_nodes.begin(), m_nodes.end(), pnode), m_nodes.end());\n+            LOCK(m_disconnect_mutex);\n+            for (CNode* pnode : nodes_copy) {\n+                if (pnode->fDisconnect) {\n+                    // remove from m_nodes\n+                    m_nodes.erase(remove(m_nodes.begin(), m_nodes.end(), pnode), m_nodes.end());\n \n-                // release outbound grant (if any)\n-                pnode->grantOutbound.Release();\n+                    // release outbound grant (if any)\n+                    pnode->grantOutbound.Release();\n \n-                // close socket and cleanup\n-                pnode->CloseSocketDisconnect();\n+                    // close socket and cleanup\n+                    pnode->CloseSocketDisconnect();\n \n-                // hold in disconnected pool until all refs are released\n-                pnode->Release();\n-                m_nodes_disconnected.push_back(pnode);\n+                    // hold in disconnected pool until all refs are released\n+                    pnode->Release();\n+                    m_nodes_disconnected.push_back(pnode);\n+                }\n             }\n         }\n     }\n     {\n+        LOCK(m_disconnect_mutex);\n         // Delete disconnected nodes\n         std::list<CNode*> nodes_disconnected_copy = m_nodes_disconnected;\n         for (CNode* pnode : nodes_disconnected_copy)\n         {\n             // Destroy the object only after other threads have stopped using it.\n-            if (pnode->GetRefCount() <= 0) {\n+            // Prevent two threads trying to delete the same node: set nRefCount to -1 first",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "original_commit_id": "1d28dfb751c882d2e1c6474a817cd686310d83f8",
      "in_reply_to_id": 1233973528,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hmm you may be right, I might have gone too far with that. What I was trying to protect against was checking the number of references in one instruction, and permitting another thread to increase the `refCount` in the meantime before we remove the node in the subsequent lines. But, it looks like we don't have any functions which would increase the `refCount` during normal operation (only incremented on new connections), so probably unnecessary here.\r\n\r\nIf I'm honest, I kind of prefer this belt-and-suspenders way myself, but would be easily persuaded that it's superfluous or worse than current behaviour (useless extra locking).\r\n\r\nI felt a bit nevous about nesting `m_disconnect_mutex` inside of `m_nodes_mutex`, but it seemed like it was slightly preferable to just locking `m_nodes_mutex` for the whole of `DisconnectNodes()` as that's used in many other operations. I don't think there is any way `StopNodes()` and `DisconnectNodes()` can lock each other here though. Would you agree?",
      "created_at": "2023-06-19T13:22:43Z",
      "updated_at": "2023-06-19T13:22:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1234060495",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1234060495"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1234096330",
      "pull_request_review_id": 1486285896,
      "id": 1234096330,
      "node_id": "PRRC_kwDOABII585JjtDK",
      "diff_hunk": "@@ -1122,32 +1122,36 @@ void CConnman::DisconnectNodes()\n \n         // Disconnect unused nodes\n         std::vector<CNode*> nodes_copy = m_nodes;\n-        for (CNode* pnode : nodes_copy)\n         {\n-            if (pnode->fDisconnect)\n-            {\n-                // remove from m_nodes\n-                m_nodes.erase(remove(m_nodes.begin(), m_nodes.end(), pnode), m_nodes.end());\n+            LOCK(m_disconnect_mutex);\n+            for (CNode* pnode : nodes_copy) {\n+                if (pnode->fDisconnect) {\n+                    // remove from m_nodes\n+                    m_nodes.erase(remove(m_nodes.begin(), m_nodes.end(), pnode), m_nodes.end());\n \n-                // release outbound grant (if any)\n-                pnode->grantOutbound.Release();\n+                    // release outbound grant (if any)\n+                    pnode->grantOutbound.Release();\n \n-                // close socket and cleanup\n-                pnode->CloseSocketDisconnect();\n+                    // close socket and cleanup\n+                    pnode->CloseSocketDisconnect();\n \n-                // hold in disconnected pool until all refs are released\n-                pnode->Release();\n-                m_nodes_disconnected.push_back(pnode);\n+                    // hold in disconnected pool until all refs are released\n+                    pnode->Release();\n+                    m_nodes_disconnected.push_back(pnode);\n+                }\n             }\n         }\n     }\n     {\n+        LOCK(m_disconnect_mutex);\n         // Delete disconnected nodes\n         std::list<CNode*> nodes_disconnected_copy = m_nodes_disconnected;\n         for (CNode* pnode : nodes_disconnected_copy)\n         {\n             // Destroy the object only after other threads have stopped using it.\n-            if (pnode->GetRefCount() <= 0) {\n+            // Prevent two threads trying to delete the same node: set nRefCount to -1 first",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "original_commit_id": "1d28dfb751c882d2e1c6474a817cd686310d83f8",
      "in_reply_to_id": 1233973528,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The CNode reference counting is a total nightmare and we should (and have in the past: https://github.com/bitcoin/bitcoin/pull/10738/) try to get rid of it at some point.\r\n\r\n> permitting another thread to increase the refCount in the meantime before we remove the node in the subsequent lines.\r\n\r\nThis is actually possible with and without your patch and the way we protect against this is by not calling `CNode::AddRef` after nodes where moved to the disconnection queue.\r\n\r\n```c++\r\nif (pnode->nRefCount.compare_exchange_strong(expectedRefCount, -1)) {\r\n    // Theoretically, nothing stops a different thread from calling `AddRef()` while we are here\r\n    m_nodes_disconnected.remove(pnode);\r\n    DeleteNode(pnode);\r\n}\r\n```\r\n\r\n>  But, it looks like we don't have any functions which would increase the refCount during normal operation (only incremented on new connections), so probably unnecessary here.\r\n\r\nOur RAII helper [`NodesSnapshot`](https://github.com/bitcoin/bitcoin/blob/7f0b79ea132d22ad5212c1d3ff4325715ca5ac12/src/net.h#L1189) does call `AddRef` during normal operation (e.g. before processing messages) but `NodesSnapshot` doesn't take a snapshot of `m_nodes_disconnected` so it's fine.\r\n\r\n> I don't think there is any way StopNodes() and DisconnectNodes() can lock each other here though. \r\n\r\nAgreed, as long as you always lock in the same order (which afaict you do).",
      "created_at": "2023-06-19T13:50:14Z",
      "updated_at": "2023-06-19T13:50:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1234096330",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1234096330"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1234104223",
      "pull_request_review_id": 1486297426,
      "id": 1234104223,
      "node_id": "PRRC_kwDOABII585Jju-f",
      "diff_hunk": "@@ -1122,32 +1122,36 @@ void CConnman::DisconnectNodes()\n \n         // Disconnect unused nodes\n         std::vector<CNode*> nodes_copy = m_nodes;\n-        for (CNode* pnode : nodes_copy)\n         {\n-            if (pnode->fDisconnect)\n-            {\n-                // remove from m_nodes\n-                m_nodes.erase(remove(m_nodes.begin(), m_nodes.end(), pnode), m_nodes.end());\n+            LOCK(m_disconnect_mutex);",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "original_commit_id": "2d33e62f6260e9bdde76a31df3b6ffbd20d17db6",
      "in_reply_to_id": null,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is it better to lock `m_disconnect_mutex` for the duration of the `node_copy` loop or to move it right before `m_nodes_disconnected`? Not sure about the performance hit of repeatedly locking+unlocking in the latter case",
      "created_at": "2023-06-19T13:56:29Z",
      "updated_at": "2023-06-19T15:00:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1234104223",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1234104223"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1234117290",
      "pull_request_review_id": 1486297426,
      "id": 1234117290,
      "node_id": "PRRC_kwDOABII585JjyKq",
      "diff_hunk": "@@ -1158,16 +1162,18 @@ void CConnman::DisconnectNodes()\n void CConnman::NotifyNumConnectionsChanged()\n {\n     size_t nodes_size;\n+    bool should_notify{false};\n     {\n         LOCK(m_nodes_mutex);\n         nodes_size = m_nodes.size();\n-    }\n-    if(nodes_size != nPrevNodeCount) {\n-        nPrevNodeCount = nodes_size;\n-        if (m_client_interface) {\n-            m_client_interface->NotifyNumConnectionsChanged(nodes_size);\n+        if(nodes_size != nPrevNodeCount) {",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 63,
      "commit_id": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "original_commit_id": "2d33e62f6260e9bdde76a31df3b6ffbd20d17db6",
      "in_reply_to_id": null,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`nPrevNodeCount` needs a mutex now since it's called from `ThreadI2PSocketHandler` also",
      "created_at": "2023-06-19T14:07:40Z",
      "updated_at": "2023-06-19T15:00:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1234117290",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1234117290"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1234125273",
      "pull_request_review_id": 1486297426,
      "id": 1234125273,
      "node_id": "PRRC_kwDOABII585Jj0HZ",
      "diff_hunk": "@@ -1158,16 +1162,18 @@ void CConnman::DisconnectNodes()\n void CConnman::NotifyNumConnectionsChanged()\n {\n     size_t nodes_size;\n+    bool should_notify{false};\n     {\n         LOCK(m_nodes_mutex);\n         nodes_size = m_nodes.size();\n-    }\n-    if(nodes_size != nPrevNodeCount) {\n-        nPrevNodeCount = nodes_size;\n-        if (m_client_interface) {\n-            m_client_interface->NotifyNumConnectionsChanged(nodes_size);\n+        if(nodes_size != nPrevNodeCount) {\n+            nPrevNodeCount = nodes_size;\n+            should_notify = true;\n         }\n     }\n+    if (should_notify && m_client_interface) {\n+        m_client_interface->NotifyNumConnectionsChanged(nodes_size);",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 69,
      "commit_id": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "original_commit_id": "2d33e62f6260e9bdde76a31df3b6ffbd20d17db6",
      "in_reply_to_id": null,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not familiar with the GUI code, but could this call to `m_client_interface->NotifyNumConnectionsChanged` race?",
      "created_at": "2023-06-19T14:14:15Z",
      "updated_at": "2023-06-19T15:00:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1234125273",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1234125273"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1175,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1234141403",
      "pull_request_review_id": 1486297426,
      "id": 1234141403,
      "node_id": "PRRC_kwDOABII585Jj4Db",
      "diff_hunk": "@@ -1122,32 +1122,36 @@ void CConnman::DisconnectNodes()\n \n         // Disconnect unused nodes\n         std::vector<CNode*> nodes_copy = m_nodes;\n-        for (CNode* pnode : nodes_copy)\n         {\n-            if (pnode->fDisconnect)\n-            {\n-                // remove from m_nodes\n-                m_nodes.erase(remove(m_nodes.begin(), m_nodes.end(), pnode), m_nodes.end());\n+            LOCK(m_disconnect_mutex);\n+            for (CNode* pnode : nodes_copy) {\n+                if (pnode->fDisconnect) {\n+                    // remove from m_nodes\n+                    m_nodes.erase(remove(m_nodes.begin(), m_nodes.end(), pnode), m_nodes.end());\n \n-                // release outbound grant (if any)\n-                pnode->grantOutbound.Release();\n+                    // release outbound grant (if any)\n+                    pnode->grantOutbound.Release();\n \n-                // close socket and cleanup\n-                pnode->CloseSocketDisconnect();\n+                    // close socket and cleanup\n+                    pnode->CloseSocketDisconnect();\n \n-                // hold in disconnected pool until all refs are released\n-                pnode->Release();\n-                m_nodes_disconnected.push_back(pnode);\n+                    // hold in disconnected pool until all refs are released\n+                    pnode->Release();\n+                    m_nodes_disconnected.push_back(pnode);\n+                }\n             }\n         }\n     }\n     {\n+        LOCK(m_disconnect_mutex);\n         // Delete disconnected nodes\n         std::list<CNode*> nodes_disconnected_copy = m_nodes_disconnected;\n         for (CNode* pnode : nodes_disconnected_copy)\n         {\n             // Destroy the object only after other threads have stopped using it.\n-            if (pnode->GetRefCount() <= 0) {\n+            // Prevent two threads trying to delete the same node: set nRefCount to -1 first",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "original_commit_id": "1d28dfb751c882d2e1c6474a817cd686310d83f8",
      "in_reply_to_id": 1233973528,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I agree with @dergoegge. Don't think `StopNodes()` can race with `DisconnectNodes()` since `StopThreads()` is called first",
      "created_at": "2023-06-19T14:28:02Z",
      "updated_at": "2023-06-19T15:00:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1234141403",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1234141403"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1234142286",
      "pull_request_review_id": 1486297426,
      "id": 1234142286,
      "node_id": "PRRC_kwDOABII585Jj4RO",
      "diff_hunk": "@@ -1390,6 +1396,18 @@ void CConnman::ThreadSocketHandler()\n     }\n }\n \n+void CConnman::ThreadI2PSocketHandler()\n+{\n+    AssertLockNotHeld(m_total_bytes_sent_mutex);\n+\n+    SetSyscallSandboxPolicy(SyscallSandboxPolicy::NET);\n+    while (!interruptNet) {\n+        DisconnectNodes();\n+        NotifyNumConnectionsChanged();",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 85,
      "commit_id": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "original_commit_id": "2d33e62f6260e9bdde76a31df3b6ffbd20d17db6",
      "in_reply_to_id": null,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't think `NotifyNumConnectionsChanged` is necessary here, but I could understand the consistency argument",
      "created_at": "2023-06-19T14:28:50Z",
      "updated_at": "2023-06-19T15:00:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1234142286",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1234142286"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1406,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1234143155",
      "pull_request_review_id": 1486297426,
      "id": 1234143155,
      "node_id": "PRRC_kwDOABII585Jj4ez",
      "diff_hunk": "@@ -1390,6 +1396,18 @@ void CConnman::ThreadSocketHandler()\n     }\n }\n \n+void CConnman::ThreadI2PSocketHandler()",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 78,
      "commit_id": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "original_commit_id": "2d33e62f6260e9bdde76a31df3b6ffbd20d17db6",
      "in_reply_to_id": null,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "github won't let me comment on untouched lines, but minor nit: `threadI2PAcceptIncoming` could be renamed to `threadI2PSocketHandler`?",
      "created_at": "2023-06-19T14:29:32Z",
      "updated_at": "2023-06-19T15:00:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1234143155",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1234143155"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1399,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1234174606",
      "pull_request_review_id": 1486297426,
      "id": 1234174606,
      "node_id": "PRRC_kwDOABII585JkAKO",
      "diff_hunk": "@@ -2089,34 +2107,31 @@ void CConnman::ThreadI2PAcceptIncoming()\n     bool advertising_listen_addr = false;\n     i2p::Connection conn;\n \n-    while (!interruptNet) {\n-\n-        if (!m_i2p_sam_session->Listen(conn)) {\n-            if (advertising_listen_addr && conn.me.IsValid()) {\n-                RemoveLocal(conn.me);\n-                advertising_listen_addr = false;\n-            }\n-\n-            interruptNet.sleep_for(err_wait);\n-            if (err_wait < err_wait_cap) {\n-                err_wait *= 2;\n-            }\n-\n-            continue;\n+    if (!m_i2p_sam_session->Listen(conn)) {\n+        if (advertising_listen_addr && conn.me.IsValid()) {\n+            RemoveLocal(conn.me);\n+            advertising_listen_addr = false;\n         }\n \n-        if (!advertising_listen_addr) {\n-            AddLocal(conn.me, LOCAL_MANUAL);\n-            advertising_listen_addr = true;\n+        interruptNet.sleep_for(err_wait);\n+        if (err_wait < err_wait_cap) {\n+            err_wait *= 2;\n         }\n \n-        if (!m_i2p_sam_session->Accept(conn)) {\n-            continue;\n-        }\n+        return;\n+    }\n+\n+    if (!advertising_listen_addr) {",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 140,
      "commit_id": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "original_commit_id": "2d33e62f6260e9bdde76a31df3b6ffbd20d17db6",
      "in_reply_to_id": null,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Setting `advertising_listen_addr` to false each time at the top of the function causes each I2P connection to log an `AddLocal(...)` line. I think this could be used to perform a disk-fill attack (my debug.log grew several MB in several minutes) . Prior to this patch, it was set once before the `while(!interrupt)` so it wouldn't trigger every time on a new connection",
      "created_at": "2023-06-19T14:56:08Z",
      "updated_at": "2023-06-19T15:00:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1234174606",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1234174606"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1235105278",
      "pull_request_review_id": 1487890956,
      "id": 1235105278,
      "node_id": "PRRC_kwDOABII585JnjX-",
      "diff_hunk": "@@ -1158,16 +1162,18 @@ void CConnman::DisconnectNodes()\n void CConnman::NotifyNumConnectionsChanged()\n {\n     size_t nodes_size;\n+    bool should_notify{false};\n     {\n         LOCK(m_nodes_mutex);\n         nodes_size = m_nodes.size();\n-    }\n-    if(nodes_size != nPrevNodeCount) {\n-        nPrevNodeCount = nodes_size;\n-        if (m_client_interface) {\n-            m_client_interface->NotifyNumConnectionsChanged(nodes_size);\n+        if(nodes_size != nPrevNodeCount) {\n+            nPrevNodeCount = nodes_size;\n+            should_notify = true;\n         }\n     }\n+    if (should_notify && m_client_interface) {\n+        m_client_interface->NotifyNumConnectionsChanged(nodes_size);",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 69,
      "commit_id": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "original_commit_id": "2d33e62f6260e9bdde76a31df3b6ffbd20d17db6",
      "in_reply_to_id": 1234125273,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I am also not familiar with the GUI code, but IIUC I don't think this should race as the lines above lock the mutex and update `nPrevNodeCount` inside it, so even if two threads called this function, t1 would lock first and update the `nPrevNodeCount``, and when it unlocked (and notified) t2 would find that `nodes_size()` was equal to `nPrevNodeCount` and so would exit without calling `NotifyNumConnectionsChanged`.\r\n\r\nBut this should still send a notification per connection count change on either thread.\r\n\r\nThat said, it's easy enough to move this block inside the `m_nodes_mutex` block to be safer, and I may do just that..\r\n\r\nCould change the function to:\r\n\r\n```cpp\r\nvoid CConnman::NotifyNumConnectionsChanged()\r\n{\r\n    size_t nodes_size;\r\n    bool should_notify{false};\r\n    {\r\n        LOCK(m_nodes_mutex);\r\n        nodes_size = m_nodes.size();\r\n        if(nodes_size != nPrevNodeCount) {\r\n            nPrevNodeCount = nodes_size;\r\n            should_notify = true;\r\n        }\r\n        if (should_notify && m_client_interface) {\r\n            m_client_interface->NotifyNumConnectionsChanged(nodes_size);\r\n        }\r\n    }\r\n}\r\n```",
      "created_at": "2023-06-20T11:05:57Z",
      "updated_at": "2023-06-20T11:05:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1235105278",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1235105278"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1175,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1235123227",
      "pull_request_review_id": 1487920764,
      "id": 1235123227,
      "node_id": "PRRC_kwDOABII585Jnnwb",
      "diff_hunk": "@@ -1158,16 +1162,18 @@ void CConnman::DisconnectNodes()\n void CConnman::NotifyNumConnectionsChanged()\n {\n     size_t nodes_size;\n+    bool should_notify{false};\n     {\n         LOCK(m_nodes_mutex);\n         nodes_size = m_nodes.size();\n-    }\n-    if(nodes_size != nPrevNodeCount) {\n-        nPrevNodeCount = nodes_size;\n-        if (m_client_interface) {\n-            m_client_interface->NotifyNumConnectionsChanged(nodes_size);\n+        if(nodes_size != nPrevNodeCount) {",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 63,
      "commit_id": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "original_commit_id": "2d33e62f6260e9bdde76a31df3b6ffbd20d17db6",
      "in_reply_to_id": 1234117290,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "ignore this, I was confused by github's indentation",
      "created_at": "2023-06-20T11:23:21Z",
      "updated_at": "2023-06-20T11:23:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1235123227",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1235123227"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1235143245",
      "pull_request_review_id": 1487952389,
      "id": 1235143245,
      "node_id": "PRRC_kwDOABII585JnspN",
      "diff_hunk": "@@ -1158,16 +1162,18 @@ void CConnman::DisconnectNodes()\n void CConnman::NotifyNumConnectionsChanged()\n {\n     size_t nodes_size;\n+    bool should_notify{false};\n     {\n         LOCK(m_nodes_mutex);\n         nodes_size = m_nodes.size();\n-    }\n-    if(nodes_size != nPrevNodeCount) {\n-        nPrevNodeCount = nodes_size;\n-        if (m_client_interface) {\n-            m_client_interface->NotifyNumConnectionsChanged(nodes_size);\n+        if(nodes_size != nPrevNodeCount) {\n+            nPrevNodeCount = nodes_size;\n+            should_notify = true;\n         }\n     }\n+    if (should_notify && m_client_interface) {\n+        m_client_interface->NotifyNumConnectionsChanged(nodes_size);",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 69,
      "commit_id": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "original_commit_id": "2d33e62f6260e9bdde76a31df3b6ffbd20d17db6",
      "in_reply_to_id": 1234125273,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think it's possible that:\r\n- t1 locks `m_nodes_mutex`, checks `nodes_size` and updates `nPrevNodeCount` & `should_notify`\r\n- t1 unlocks the mutex and something else gets scheduled by the CPU\r\n- the connection count is updated again\r\n- t2 locks `m_nodes_mutex` and sets `should_notify`\r\n- t2 unlocks the mutex and calls `NotifyNumConnectionsChanged`\r\n- t1 gets scheduled and calls `NotifyNumConnectionsChanged`\r\n\r\nMy concern here was whether it's ok if `NotifyNumConnectionsChanged` is called simultaneously from 2 threads? I think it'd be good to have `nPrevNodeCount` to have a `GUARDED_BY(m_nodes_mutex)` annotation",
      "created_at": "2023-06-20T11:42:29Z",
      "updated_at": "2023-06-20T11:43:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1235143245",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1235143245"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1175,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1235173474",
      "pull_request_review_id": 1488000560,
      "id": 1235173474,
      "node_id": "PRRC_kwDOABII585Jn0Bi",
      "diff_hunk": "@@ -1122,32 +1122,36 @@ void CConnman::DisconnectNodes()\n \n         // Disconnect unused nodes\n         std::vector<CNode*> nodes_copy = m_nodes;\n-        for (CNode* pnode : nodes_copy)\n         {\n-            if (pnode->fDisconnect)\n-            {\n-                // remove from m_nodes\n-                m_nodes.erase(remove(m_nodes.begin(), m_nodes.end(), pnode), m_nodes.end());\n+            LOCK(m_disconnect_mutex);",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "original_commit_id": "2d33e62f6260e9bdde76a31df3b6ffbd20d17db6",
      "in_reply_to_id": 1234104223,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think that's as currently implemented (perhap GitHub diff throwing you again)?\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/2d33e62f6260e9bdde76a31df3b6ffbd20d17db6/src/net.cpp#L1125-L1143",
      "created_at": "2023-06-20T12:10:53Z",
      "updated_at": "2023-06-20T12:10:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1235173474",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1235173474"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1236582023",
      "pull_request_review_id": 1490076603,
      "id": 1236582023,
      "node_id": "PRRC_kwDOABII585JtL6H",
      "diff_hunk": "@@ -1122,32 +1122,36 @@ void CConnman::DisconnectNodes()\n \n         // Disconnect unused nodes\n         std::vector<CNode*> nodes_copy = m_nodes;\n-        for (CNode* pnode : nodes_copy)\n         {\n-            if (pnode->fDisconnect)\n-            {\n-                // remove from m_nodes\n-                m_nodes.erase(remove(m_nodes.begin(), m_nodes.end(), pnode), m_nodes.end());\n+            LOCK(m_disconnect_mutex);",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "original_commit_id": "2d33e62f6260e9bdde76a31df3b6ffbd20d17db6",
      "in_reply_to_id": 1234104223,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I meant like _rightttt_ before `m_nodes_disconnect.push_back(pnode)`. But don't think it matters so feel free to ignore",
      "created_at": "2023-06-21T08:11:43Z",
      "updated_at": "2023-06-21T08:11:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1236582023",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1236582023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1259704670",
      "pull_request_review_id": 1524221824,
      "id": 1259704670,
      "node_id": "PRRC_kwDOABII585LFZFe",
      "diff_hunk": "@@ -1043,7 +1045,8 @@ class CConnman\n     std::vector<std::string> m_added_nodes GUARDED_BY(m_added_nodes_mutex);\n     mutable Mutex m_added_nodes_mutex;\n     std::vector<CNode*> m_nodes GUARDED_BY(m_nodes_mutex);\n-    std::list<CNode*> m_nodes_disconnected;\n+    mutable RecursiveMutex m_nodes_disconnected_mutex;",
      "path": "src/net.h",
      "position": null,
      "original_position": 14,
      "commit_id": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "original_commit_id": "a3903cc1864021a47c2928c379cd17306b3f6f64",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This need not be `RecursiveMutex`?\r\n\r\n```suggestion\r\n    mutable Mutex m_nodes_disconnected_mutex;\r\n```",
      "created_at": "2023-07-11T13:02:37Z",
      "updated_at": "2023-07-11T16:24:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1259704670",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1259704670"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1048,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1259711622",
      "pull_request_review_id": 1524221824,
      "id": 1259711622,
      "node_id": "PRRC_kwDOABII585LFayG",
      "diff_hunk": "@@ -1119,32 +1157,16 @@ void CConnman::DisconnectNodes()\n         {\n             if (pnode->fDisconnect)\n             {\n-                // remove from m_nodes\n-                m_nodes.erase(remove(m_nodes.begin(), m_nodes.end(), pnode), m_nodes.end());\n-\n-                // release outbound grant (if any)\n-                pnode->grantOutbound.Release();\n-\n-                // close socket and cleanup\n-                pnode->CloseSocketDisconnect();\n-\n-                // hold in disconnected pool until all refs are released\n-                pnode->Release();\n-                m_nodes_disconnected.push_back(pnode);\n+                DisconnectAndReleaseNode(pnode);\n             }\n         }\n     }\n+    // Delete disconnected nodes\n+    std::list<CNode*> disconnected_nodes_copy{};\n+    WITH_LOCK(m_nodes_disconnected_mutex, disconnected_nodes_copy = m_nodes_disconnected);\n+    for (CNode* pnode : disconnected_nodes_copy)\n     {\n-        // Delete disconnected nodes\n-        std::list<CNode*> nodes_disconnected_copy = m_nodes_disconnected;\n-        for (CNode* pnode : nodes_disconnected_copy)\n-        {\n-            // Destroy the object only after other threads have stopped using it.\n-            if (pnode->GetRefCount() <= 0) {\n-                m_nodes_disconnected.remove(pnode);\n-                DeleteNode(pnode);\n-            }\n-        }\n+        DeleteDisconnectedNode(pnode);\n     }",
      "path": "src/net.cpp",
      "position": 112,
      "original_position": 109,
      "commit_id": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "original_commit_id": "a3903cc1864021a47c2928c379cd17306b3f6f64",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This can end up with a double-free if two threads concurrently execute it.\r\n\r\n1. Thread1 makes a copy of `m_nodes_disconnected` and releases `m_nodes_disconnected_mutex`\r\n2. Thread2 does the same\r\n3. Thread1 starts iterating on its own copy and calls `DeleteDisconnectedNode()` on the first element which calls `DeleteNode()` which calls `delete pnode;`\r\n4. Thread2 does the same on its own copy, a second `delete` on the same `CNode` object.",
      "created_at": "2023-07-11T13:08:14Z",
      "updated_at": "2023-07-11T16:24:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1259711622",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1259711622"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
        }
      },
      "start_line": 1169,
      "original_start_line": 1166,
      "start_side": "RIGHT",
      "line": 1173,
      "original_line": 1173,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1259736855",
      "pull_request_review_id": 1524221824,
      "id": 1259736855,
      "node_id": "PRRC_kwDOABII585LFg8X",
      "diff_hunk": "@@ -2481,10 +2503,12 @@ void CConnman::StopNodes()\n         DeleteNode(pnode);\n     }\n \n-    for (CNode* pnode : m_nodes_disconnected) {\n+    std::list<CNode*> disconnected_nodes{};\n+    WITH_LOCK(m_nodes_disconnected_mutex, disconnected_nodes = m_nodes_disconnected);\n+    for (CNode* pnode : disconnected_nodes) {\n         DeleteNode(pnode);\n     }\n-    m_nodes_disconnected.clear();\n+    WITH_LOCK(m_nodes_disconnected_mutex, m_nodes_disconnected.clear());",
      "path": "src/net.cpp",
      "position": 126,
      "original_position": 123,
      "commit_id": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "original_commit_id": "a3903cc1864021a47c2928c379cd17306b3f6f64",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Same double-free as above (even though when this code in `StopNodes()` is executed, then the other threads that could access `m_nodes_disconnected` should have been exited by `StopThreads()` already, but better not rely on that).",
      "created_at": "2023-07-11T13:26:23Z",
      "updated_at": "2023-07-11T16:24:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1259736855",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1259736855"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
        }
      },
      "start_line": 2484,
      "original_start_line": 2484,
      "start_side": "LEFT",
      "line": 2514,
      "original_line": 2514,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1259898235",
      "pull_request_review_id": 1524221824,
      "id": 1259898235,
      "node_id": "PRRC_kwDOABII585LGIV7",
      "diff_hunk": "@@ -918,14 +919,23 @@ bool CConnman::AttemptToEvictConnection()\n     if (!node_id_to_evict) {\n         return false;\n     }\n-    LOCK(m_nodes_mutex);\n-    for (CNode* pnode : m_nodes) {\n-        if (pnode->GetId() == *node_id_to_evict) {\n-            LogPrint(BCLog::NET, \"selected %s connection for eviction peer=%d; disconnecting\\n\", pnode->ConnectionTypeAsString(), pnode->GetId());\n-            pnode->fDisconnect = true;\n-            return true;\n+    CNode* evicted_node{nullptr};\n+    {\n+        LOCK(m_nodes_mutex);\n+        for (CNode* pnode : m_nodes) {\n+            if (pnode->GetId() == *node_id_to_evict) {\n+                LogPrint(BCLog::NET, \"selected %s connection for eviction peer=%d; disconnecting\\n\", pnode->ConnectionTypeAsString(), pnode->GetId());\n+                pnode->fDisconnect = true;\n+                evicted_node = pnode;\n+                break;\n+            }\n         }\n     }\n+    if (evicted_node) {\n+        DisconnectAndReleaseNode(evicted_node);\n+        DeleteDisconnectedNode(evicted_node);",
      "path": "src/net.cpp",
      "position": 32,
      "original_position": 32,
      "commit_id": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "original_commit_id": "a3903cc1864021a47c2928c379cd17306b3f6f64",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This could be called concurrently by two threads for the same `CNode`.",
      "created_at": "2023-07-11T15:19:28Z",
      "updated_at": "2023-07-11T16:24:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1259898235",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1259898235"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
        }
      },
      "start_line": 934,
      "original_start_line": 934,
      "start_side": "RIGHT",
      "line": 936,
      "original_line": 936,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260735849",
      "pull_request_review_id": 1525709158,
      "id": 1260735849,
      "node_id": "PRRC_kwDOABII585LJU1p",
      "diff_hunk": "@@ -1119,32 +1157,16 @@ void CConnman::DisconnectNodes()\n         {\n             if (pnode->fDisconnect)\n             {\n-                // remove from m_nodes\n-                m_nodes.erase(remove(m_nodes.begin(), m_nodes.end(), pnode), m_nodes.end());\n-\n-                // release outbound grant (if any)\n-                pnode->grantOutbound.Release();\n-\n-                // close socket and cleanup\n-                pnode->CloseSocketDisconnect();\n-\n-                // hold in disconnected pool until all refs are released\n-                pnode->Release();\n-                m_nodes_disconnected.push_back(pnode);\n+                DisconnectAndReleaseNode(pnode);\n             }\n         }\n     }\n+    // Delete disconnected nodes\n+    std::list<CNode*> disconnected_nodes_copy{};\n+    WITH_LOCK(m_nodes_disconnected_mutex, disconnected_nodes_copy = m_nodes_disconnected);\n+    for (CNode* pnode : disconnected_nodes_copy)\n     {\n-        // Delete disconnected nodes\n-        std::list<CNode*> nodes_disconnected_copy = m_nodes_disconnected;\n-        for (CNode* pnode : nodes_disconnected_copy)\n-        {\n-            // Destroy the object only after other threads have stopped using it.\n-            if (pnode->GetRefCount() <= 0) {\n-                m_nodes_disconnected.remove(pnode);\n-                DeleteNode(pnode);\n-            }\n-        }\n+        DeleteDisconnectedNode(pnode);\n     }",
      "path": "src/net.cpp",
      "position": 112,
      "original_position": 109,
      "commit_id": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "original_commit_id": "a3903cc1864021a47c2928c379cd17306b3f6f64",
      "in_reply_to_id": 1259711622,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Right, this is what I tried to prevent against in an [earlier version](https://github.com/bitcoin/bitcoin/commit/7ad6edb44d599bdd9f8c6e5aae5899c97436b675#diff-00021eed586a482abdb09d6cdada1d90115abe988a91421851960e26658bed02R1152-R1154), but in that version I think it was [superfluous](https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1233973528), however here it would be appropriate to use so that only one thread would actually perform the deletion ever.",
      "created_at": "2023-07-12T07:37:07Z",
      "updated_at": "2023-07-12T07:37:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1260735849",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260735849"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
        }
      },
      "start_line": 1169,
      "original_start_line": 1166,
      "start_side": "RIGHT",
      "line": 1173,
      "original_line": 1173,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1265436928",
      "pull_request_review_id": 1532916522,
      "id": 1265436928,
      "node_id": "PRRC_kwDOABII585LbQkA",
      "diff_hunk": "@@ -1043,7 +1045,8 @@ class CConnman\n     std::vector<std::string> m_added_nodes GUARDED_BY(m_added_nodes_mutex);\n     mutable Mutex m_added_nodes_mutex;\n     std::vector<CNode*> m_nodes GUARDED_BY(m_nodes_mutex);\n-    std::list<CNode*> m_nodes_disconnected;\n+    mutable RecursiveMutex m_nodes_disconnected_mutex;",
      "path": "src/net.h",
      "position": null,
      "original_position": 14,
      "commit_id": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "original_commit_id": "a3903cc1864021a47c2928c379cd17306b3f6f64",
      "in_reply_to_id": 1259704670,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ok I've used a `GlobalMutex` for this now. I never Recursive behaviour but was getting clang static analysis errors without. Looking at _sync.h_ it seems that `GlobalMutex` should be the correct type for this I think.",
      "created_at": "2023-07-17T14:17:10Z",
      "updated_at": "2023-07-17T14:17:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1265436928",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1265436928"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1048,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1265441313",
      "pull_request_review_id": 1532922905,
      "id": 1265441313,
      "node_id": "PRRC_kwDOABII585LbRoh",
      "diff_hunk": "@@ -1119,32 +1157,16 @@ void CConnman::DisconnectNodes()\n         {\n             if (pnode->fDisconnect)\n             {\n-                // remove from m_nodes\n-                m_nodes.erase(remove(m_nodes.begin(), m_nodes.end(), pnode), m_nodes.end());\n-\n-                // release outbound grant (if any)\n-                pnode->grantOutbound.Release();\n-\n-                // close socket and cleanup\n-                pnode->CloseSocketDisconnect();\n-\n-                // hold in disconnected pool until all refs are released\n-                pnode->Release();\n-                m_nodes_disconnected.push_back(pnode);\n+                DisconnectAndReleaseNode(pnode);\n             }\n         }\n     }\n+    // Delete disconnected nodes\n+    std::list<CNode*> disconnected_nodes_copy{};\n+    WITH_LOCK(m_nodes_disconnected_mutex, disconnected_nodes_copy = m_nodes_disconnected);\n+    for (CNode* pnode : disconnected_nodes_copy)\n     {\n-        // Delete disconnected nodes\n-        std::list<CNode*> nodes_disconnected_copy = m_nodes_disconnected;\n-        for (CNode* pnode : nodes_disconnected_copy)\n-        {\n-            // Destroy the object only after other threads have stopped using it.\n-            if (pnode->GetRefCount() <= 0) {\n-                m_nodes_disconnected.remove(pnode);\n-                DeleteNode(pnode);\n-            }\n-        }\n+        DeleteDisconnectedNode(pnode);\n     }",
      "path": "src/net.cpp",
      "position": 112,
      "original_position": 109,
      "commit_id": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "original_commit_id": "a3903cc1864021a47c2928c379cd17306b3f6f64",
      "in_reply_to_id": 1259711622,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`DeleteNode()` now gated behind `if (pnode->nRefCount.compare_exchange_strong(expectedRefCount, -1))` so it can only be called once (by a single thread).",
      "created_at": "2023-07-17T14:19:57Z",
      "updated_at": "2023-07-17T14:19:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1265441313",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1265441313"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
        }
      },
      "start_line": 1169,
      "original_start_line": 1166,
      "start_side": "RIGHT",
      "line": 1173,
      "original_line": 1173,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1266938623",
      "pull_request_review_id": 1534955685,
      "id": 1266938623,
      "node_id": "PRRC_kwDOABII585Lg_L_",
      "diff_hunk": "@@ -1043,7 +1045,8 @@ class CConnman\n     std::vector<std::string> m_added_nodes GUARDED_BY(m_added_nodes_mutex);\n     mutable Mutex m_added_nodes_mutex;\n     std::vector<CNode*> m_nodes GUARDED_BY(m_nodes_mutex);\n-    std::list<CNode*> m_nodes_disconnected;\n+    mutable RecursiveMutex m_nodes_disconnected_mutex;",
      "path": "src/net.h",
      "position": null,
      "original_position": 14,
      "commit_id": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "original_commit_id": "a3903cc1864021a47c2928c379cd17306b3f6f64",
      "in_reply_to_id": 1259704670,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`GlobalMutex` silences some of the thread safety analysis and was introduced to overcome some limitations on those, is supposed to be used only for mutexes that are defined globally. I agree it is confusing. I don't like it and have a plan to remove `GlobalMutex` but it is stuck at https://github.com/bitcoin/bitcoin/pull/25390.\r\n\r\n<details>\r\n<summary>[patch] change to Mutex</summary>\r\n\r\n```diff\r\ndiff --git i/src/net.cpp w/src/net.cpp\r\nindex c2160e945f..c8ee95a3d0 100644\r\n--- i/src/net.cpp\r\n+++ w/src/net.cpp\r\n@@ -886,12 +886,14 @@ size_t CConnman::SocketSendData(CNode& node) const\r\n  *   to forge.  In order to partition a node the attacker must be\r\n  *   simultaneously better at all of them than honest peers.\r\n  *   If we find a candidate perform the eviction.\r\n  */\r\n bool CConnman::AttemptToEvictConnection()\r\n {\r\n+    AssertLockNotHeld(m_nodes_disconnected_mutex);\r\n+\r\n     std::vector<NodeEvictionCandidate> vEvictionCandidates;\r\n     {\r\n \r\n         LOCK(m_nodes_mutex);\r\n         for (const CNode* node : m_nodes) {\r\n             if (node->fDisconnect)\r\n@@ -937,12 +939,14 @@ bool CConnman::AttemptToEvictConnection()\r\n         return true;\r\n     }\r\n     return false;\r\n }\r\n \r\n void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\r\n+    AssertLockNotHeld(m_nodes_disconnected_mutex);\r\n+\r\n     struct sockaddr_storage sockaddr;\r\n     socklen_t len = sizeof(sockaddr);\r\n     auto sock = hListenSocket.sock->Accept((struct sockaddr*)&sockaddr, &len);\r\n     CAddress addr;\r\n \r\n     if (!sock) {\r\n@@ -1107,23 +1111,27 @@ bool CConnman::AddConnection(const std::string& address, ConnectionType conn_typ\r\n     OpenNetworkConnection(CAddress(), false, &grant, address.c_str(), conn_type);\r\n     return true;\r\n }\r\n \r\n void CConnman::DeleteDisconnectedNode(CNode* pnode)\r\n {\r\n+    AssertLockNotHeld(m_nodes_disconnected_mutex);\r\n+\r\n     // Destroy the object only after other threads have stopped using it.\r\n     // Prevent double free by setting nRefCount to -1 before delete.\r\n     int expectedRefCount = 0;\r\n     if (pnode->nRefCount.compare_exchange_strong(expectedRefCount, -1)) {\r\n         WITH_LOCK(m_nodes_disconnected_mutex, m_nodes_disconnected.remove(pnode));\r\n         DeleteNode(pnode);\r\n     }\r\n }\r\n \r\n void CConnman::DisconnectAndReleaseNode(CNode* pnode)\r\n {\r\n+    AssertLockNotHeld(m_nodes_disconnected_mutex);\r\n+\r\n     LOCK(m_nodes_mutex);\r\n     if (std::find(m_nodes.begin(), m_nodes.end(), pnode) != m_nodes.end()) {\r\n \r\n         // remove from m_nodes\r\n         m_nodes.erase(remove(m_nodes.begin(), m_nodes.end(), pnode), m_nodes.end());\r\n \r\n@@ -1138,12 +1146,14 @@ void CConnman::DisconnectAndReleaseNode(CNode* pnode)\r\n         WITH_LOCK(m_nodes_disconnected_mutex, m_nodes_disconnected.push_back(pnode));\r\n     }\r\n }\r\n \r\n void CConnman::DisconnectNodes()\r\n {\r\n+    AssertLockNotHeld(m_nodes_disconnected_mutex);\r\n+\r\n     {\r\n         LOCK(m_nodes_mutex);\r\n \r\n         if (!fNetworkActive) {\r\n             // Disconnect any connected nodes\r\n             for (CNode* pnode : m_nodes) {\r\n@@ -1270,12 +1280,13 @@ Sock::EventsPerSock CConnman::GenerateWaitSockets(Span<CNode* const> nodes)\r\n \r\n     return events_per_sock;\r\n }\r\n \r\n void CConnman::SocketHandler()\r\n {\r\n+    AssertLockNotHeld(m_nodes_disconnected_mutex);\r\n     AssertLockNotHeld(m_total_bytes_sent_mutex);\r\n \r\n     Sock::EventsPerSock events_per_sock;\r\n \r\n     {\r\n         const NodesSnapshot snap{*this, /*shuffle=*/false};\r\n@@ -1381,12 +1392,14 @@ void CConnman::SocketHandlerConnected(const std::vector<CNode*>& nodes,\r\n         if (InactivityCheck(*pnode)) pnode->fDisconnect = true;\r\n     }\r\n }\r\n \r\n void CConnman::SocketHandlerListening(const Sock::EventsPerSock& events_per_sock)\r\n {\r\n+    AssertLockNotHeld(m_nodes_disconnected_mutex);\r\n+\r\n     for (const ListenSocket& listen_socket : vhListenSocket) {\r\n         if (interruptNet) {\r\n             return;\r\n         }\r\n         const auto it = events_per_sock.find(listen_socket.sock);\r\n         if (it != events_per_sock.end() && it->second.occurred & Sock::RECV) {\r\n@@ -1394,12 +1407,13 @@ void CConnman::SocketHandlerListening(const Sock::EventsPerSock& events_per_sock\r\n         }\r\n     }\r\n }\r\n \r\n void CConnman::ThreadSocketHandler()\r\n {\r\n+    AssertLockNotHeld(m_nodes_disconnected_mutex);\r\n     AssertLockNotHeld(m_total_bytes_sent_mutex);\r\n \r\n     while (!interruptNet)\r\n     {\r\n         DisconnectNodes();\r\n         NotifyNumConnectionsChanged();\r\n@@ -2093,12 +2107,14 @@ void CConnman::ThreadMessageHandler()\r\n         fMsgProcWake = false;\r\n     }\r\n }\r\n \r\n void CConnman::ThreadI2PAcceptIncoming()\r\n {\r\n+    AssertLockNotHeld(m_nodes_disconnected_mutex);\r\n+\r\n     static constexpr auto err_wait_begin = 1s;\r\n     static constexpr auto err_wait_cap = 5min;\r\n     auto err_wait = err_wait_begin;\r\n \r\n     bool advertising_listen_addr = false;\r\n     i2p::Connection conn;\r\n@@ -2481,12 +2497,14 @@ void CConnman::StopThreads()\r\n     if (threadSocketHandler.joinable())\r\n         threadSocketHandler.join();\r\n }\r\n \r\n void CConnman::StopNodes()\r\n {\r\n+    AssertLockNotHeld(m_nodes_disconnected_mutex);\r\n+\r\n     if (fAddressesInitialized) {\r\n         DumpAddresses();\r\n         fAddressesInitialized = false;\r\n \r\n         if (m_use_addrman_outgoing) {\r\n             // Anchor connections are only dumped during clean shutdown.\r\ndiff --git i/src/net.h w/src/net.h\r\nindex d5833d7e2d..d45f3c606f 100644\r\n--- i/src/net.h\r\n+++ w/src/net.h\r\n@@ -760,15 +760,17 @@ public:\r\n \r\n     ~CConnman();\r\n \r\n     bool Start(CScheduler& scheduler, const Options& options) EXCLUSIVE_LOCKS_REQUIRED(!m_total_bytes_sent_mutex, !m_added_nodes_mutex, !m_addr_fetches_mutex, !mutexMsgProc);\r\n \r\n     void StopThreads();\r\n-    void StopNodes();\r\n-    void Stop()\r\n+    void StopNodes() EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_disconnected_mutex);\r\n+    void Stop() EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_disconnected_mutex)\r\n     {\r\n+        AssertLockNotHeld(m_nodes_disconnected_mutex);\r\n+\r\n         StopThreads();\r\n         StopNodes();\r\n     };\r\n \r\n     void Interrupt() EXCLUSIVE_LOCKS_REQUIRED(!mutexMsgProc);\r\n     bool GetNetworkActive() const { return fNetworkActive; };\r\n@@ -917,31 +919,31 @@ private:\r\n \r\n     void ThreadOpenAddedConnections() EXCLUSIVE_LOCKS_REQUIRED(!m_added_nodes_mutex, !m_unused_i2p_sessions_mutex);\r\n     void AddAddrFetch(const std::string& strDest) EXCLUSIVE_LOCKS_REQUIRED(!m_addr_fetches_mutex);\r\n     void ProcessAddrFetch() EXCLUSIVE_LOCKS_REQUIRED(!m_addr_fetches_mutex, !m_unused_i2p_sessions_mutex);\r\n     void ThreadOpenConnections(std::vector<std::string> connect) EXCLUSIVE_LOCKS_REQUIRED(!m_addr_fetches_mutex, !m_added_nodes_mutex, !m_nodes_mutex, !m_unused_i2p_sessions_mutex);\r\n     void ThreadMessageHandler() EXCLUSIVE_LOCKS_REQUIRED(!mutexMsgProc);\r\n-    void ThreadI2PAcceptIncoming();\r\n-    void AcceptConnection(const ListenSocket& hListenSocket);\r\n+    void ThreadI2PAcceptIncoming() EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_disconnected_mutex);\r\n+    void AcceptConnection(const ListenSocket& hListenSocket) EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_disconnected_mutex);\r\n \r\n     /**\r\n      * Create a `CNode` object from a socket that has just been accepted and add the node to\r\n      * the `m_nodes` member.\r\n      * @param[in] sock Connected socket to communicate with the peer.\r\n      * @param[in] permission_flags The peer's permissions.\r\n      * @param[in] addr_bind The address and port at our side of the connection.\r\n      * @param[in] addr The address and port at the peer's side of the connection.\r\n      */\r\n     void CreateNodeFromAcceptedSocket(std::unique_ptr<Sock>&& sock,\r\n                                       NetPermissionFlags permission_flags,\r\n                                       const CAddress& addr_bind,\r\n-                                      const CAddress& addr);\r\n+                                      const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_disconnected_mutex);\r\n \r\n-    void DeleteDisconnectedNode(CNode* pnode);\r\n-    void DisconnectAndReleaseNode(CNode* pnode);\r\n-    void DisconnectNodes();\r\n+    void DeleteDisconnectedNode(CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_disconnected_mutex);\r\n+    void DisconnectAndReleaseNode(CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_disconnected_mutex);\r\n+    void DisconnectNodes() EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_disconnected_mutex);\r\n     void NotifyNumConnectionsChanged();\r\n     /** Return true if the peer is inactive and should be disconnected. */\r\n     bool InactivityCheck(const CNode& node) const;\r\n \r\n     /**\r\n      * Generate a collection of sockets to check for IO readiness.\r\n@@ -950,13 +952,13 @@ private:\r\n      */\r\n     Sock::EventsPerSock GenerateWaitSockets(Span<CNode* const> nodes);\r\n \r\n     /**\r\n      * Check connected and listening sockets for IO readiness and process them accordingly.\r\n      */\r\n-    void SocketHandler() EXCLUSIVE_LOCKS_REQUIRED(!m_total_bytes_sent_mutex, !mutexMsgProc);\r\n+    void SocketHandler() EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_disconnected_mutex, !m_total_bytes_sent_mutex, !mutexMsgProc);\r\n \r\n     /**\r\n      * Do the read/write for connected sockets that are ready for IO.\r\n      * @param[in] nodes Nodes to process. The socket of each node is checked against `what`.\r\n      * @param[in] events_per_sock Sockets that are ready for IO.\r\n      */\r\n@@ -965,15 +967,15 @@ private:\r\n         EXCLUSIVE_LOCKS_REQUIRED(!m_total_bytes_sent_mutex, !mutexMsgProc);\r\n \r\n     /**\r\n      * Accept incoming connections, one from each read-ready listening socket.\r\n      * @param[in] events_per_sock Sockets that are ready for IO.\r\n      */\r\n-    void SocketHandlerListening(const Sock::EventsPerSock& events_per_sock);\r\n+    void SocketHandlerListening(const Sock::EventsPerSock& events_per_sock) EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_disconnected_mutex);\r\n \r\n-    void ThreadSocketHandler() EXCLUSIVE_LOCKS_REQUIRED(!m_total_bytes_sent_mutex, !mutexMsgProc);\r\n+    void ThreadSocketHandler() EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_disconnected_mutex, !m_total_bytes_sent_mutex, !mutexMsgProc);\r\n     void ThreadDNSAddressSeed() EXCLUSIVE_LOCKS_REQUIRED(!m_addr_fetches_mutex, !m_nodes_mutex);\r\n \r\n     uint64_t CalculateKeyedNetGroup(const CAddress& ad) const;\r\n \r\n     CNode* FindNode(const CNetAddr& ip);\r\n     CNode* FindNode(const CSubNet& subNet);\r\n@@ -983,13 +985,13 @@ private:\r\n     /**\r\n      * Determine whether we're already connected to a given address, in order to\r\n      * avoid initiating duplicate connections.\r\n      */\r\n     bool AlreadyConnectedToAddress(const CAddress& addr);\r\n \r\n-    bool AttemptToEvictConnection();\r\n+    bool AttemptToEvictConnection() EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_disconnected_mutex);\r\n     CNode* ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure, ConnectionType conn_type) EXCLUSIVE_LOCKS_REQUIRED(!m_unused_i2p_sessions_mutex);\r\n     void AddWhitelistPermissionFlags(NetPermissionFlags& flags, const CNetAddr &addr) const;\r\n \r\n     void DeleteNode(CNode* pnode);\r\n \r\n     NodeId GetNewNodeId();\r\n@@ -1042,13 +1044,13 @@ private:\r\n     const NetGroupManager& m_netgroupman;\r\n     std::deque<std::string> m_addr_fetches GUARDED_BY(m_addr_fetches_mutex);\r\n     Mutex m_addr_fetches_mutex;\r\n     std::vector<std::string> m_added_nodes GUARDED_BY(m_added_nodes_mutex);\r\n     mutable Mutex m_added_nodes_mutex;\r\n     std::vector<CNode*> m_nodes GUARDED_BY(m_nodes_mutex);\r\n-    GlobalMutex m_nodes_disconnected_mutex;\r\n+    Mutex m_nodes_disconnected_mutex;\r\n     std::list<CNode*> m_nodes_disconnected GUARDED_BY(m_nodes_disconnected_mutex);\r\n     mutable RecursiveMutex m_nodes_mutex;\r\n     std::atomic<NodeId> nLastNodeId{0};\r\n     unsigned int nPrevNodeCount{0};\r\n \r\n     /**\r\n\r\n```\r\n\r\n</details>",
      "created_at": "2023-07-18T15:22:14Z",
      "updated_at": "2023-07-19T04:55:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1266938623",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1266938623"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1048,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1266975864",
      "pull_request_review_id": 1534955685,
      "id": 1266975864,
      "node_id": "PRRC_kwDOABII585LhIR4",
      "diff_hunk": "@@ -2481,10 +2503,12 @@ void CConnman::StopNodes()\n         DeleteNode(pnode);\n     }\n \n-    for (CNode* pnode : m_nodes_disconnected) {\n+    std::list<CNode*> disconnected_nodes{};\n+    WITH_LOCK(m_nodes_disconnected_mutex, disconnected_nodes = m_nodes_disconnected);\n+    for (CNode* pnode : disconnected_nodes) {\n         DeleteNode(pnode);\n     }\n-    m_nodes_disconnected.clear();\n+    WITH_LOCK(m_nodes_disconnected_mutex, m_nodes_disconnected.clear());",
      "path": "src/net.cpp",
      "position": 126,
      "original_position": 123,
      "commit_id": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "original_commit_id": "a3903cc1864021a47c2928c379cd17306b3f6f64",
      "in_reply_to_id": 1259736855,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```\r\nwith lock: copy x to temp\r\nprocess temp without lock\r\nwith lock: clear x <-- some element may have been inserted between the locks and it will be removed without processing\r\n```\r\n\r\nbetter do:\r\n```cpp\r\n{\r\n    LOCK(m_nodes_disconnected_mutex);\r\n    disconnected_nodes = m_nodes_disconnected;\r\n    m_nodes_disconnected.clear();\r\n}\r\n\r\nfor (CNode* pnode : disconnected_nodes) {\r\n    DeleteNode(pnode);\r\n}\r\n```\r\n\r\nthis will avoid the double-free as well",
      "created_at": "2023-07-18T15:47:07Z",
      "updated_at": "2023-07-19T04:55:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1266975864",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1266975864"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
        }
      },
      "start_line": 2484,
      "original_start_line": 2484,
      "start_side": "LEFT",
      "line": 2514,
      "original_line": 2514,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267530707",
      "pull_request_review_id": 1534955685,
      "id": 1267530707,
      "node_id": "PRRC_kwDOABII585LjPvT",
      "diff_hunk": "@@ -1119,32 +1157,16 @@ void CConnman::DisconnectNodes()\n         {\n             if (pnode->fDisconnect)\n             {\n-                // remove from m_nodes\n-                m_nodes.erase(remove(m_nodes.begin(), m_nodes.end(), pnode), m_nodes.end());\n-\n-                // release outbound grant (if any)\n-                pnode->grantOutbound.Release();\n-\n-                // close socket and cleanup\n-                pnode->CloseSocketDisconnect();\n-\n-                // hold in disconnected pool until all refs are released\n-                pnode->Release();\n-                m_nodes_disconnected.push_back(pnode);\n+                DisconnectAndReleaseNode(pnode);\n             }\n         }\n     }\n+    // Delete disconnected nodes\n+    std::list<CNode*> disconnected_nodes_copy{};\n+    WITH_LOCK(m_nodes_disconnected_mutex, disconnected_nodes_copy = m_nodes_disconnected);\n+    for (CNode* pnode : disconnected_nodes_copy)\n     {\n-        // Delete disconnected nodes\n-        std::list<CNode*> nodes_disconnected_copy = m_nodes_disconnected;\n-        for (CNode* pnode : nodes_disconnected_copy)\n-        {\n-            // Destroy the object only after other threads have stopped using it.\n-            if (pnode->GetRefCount() <= 0) {\n-                m_nodes_disconnected.remove(pnode);\n-                DeleteNode(pnode);\n-            }\n-        }\n+        DeleteDisconnectedNode(pnode);\n     }",
      "path": "src/net.cpp",
      "position": 112,
      "original_position": 109,
      "commit_id": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "original_commit_id": "a3903cc1864021a47c2928c379cd17306b3f6f64",
      "in_reply_to_id": 1259711622,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I love this lock free pattern!\r\n\r\nThe variable used as a guard (`nRefCount`) has to be outside of the object being protected. Otherwise if two threads execute it concurrently the first one may swap from 0 to -1 and `delete` the object. Then the second thread will end up reading freed memory when it tries to use `nRefCount`.\r\n\r\nThis should be safe:\r\n\r\n```cpp\r\n    // Delete disconnected nodes. Call DeleteNode() without holding m_nodes_mutex or m_nodes_disconnected_mutex.\r\n    std::vector<CNode*> to_delete;\r\n    { \r\n        LOCK(m_nodes_disconnected_mutex);\r\n        for (auto it = m_nodes_disconnected.begin(); it != m_nodes_disconnected.end();) { \r\n            CNode* node = *it;\r\n            if (node->GetRefCount() == 0) { \r\n                it = m_nodes_disconnected.erase(it);\r\n                to_delete.push_back(node);\r\n            } else { \r\n                ++it;\r\n            } \r\n        } \r\n    } \r\n    for (CNode* node : to_delete) { \r\n        DeleteNode(node);\r\n    } \r\n```",
      "created_at": "2023-07-19T04:48:19Z",
      "updated_at": "2023-07-19T04:55:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1267530707",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267530707"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
        }
      },
      "start_line": 1169,
      "original_start_line": 1166,
      "start_side": "RIGHT",
      "line": 1173,
      "original_line": 1173,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267534028",
      "pull_request_review_id": 1534955685,
      "id": 1267534028,
      "node_id": "PRRC_kwDOABII585LjQjM",
      "diff_hunk": "@@ -918,14 +919,23 @@ bool CConnman::AttemptToEvictConnection()\n     if (!node_id_to_evict) {\n         return false;\n     }\n-    LOCK(m_nodes_mutex);\n-    for (CNode* pnode : m_nodes) {\n-        if (pnode->GetId() == *node_id_to_evict) {\n-            LogPrint(BCLog::NET, \"selected %s connection for eviction peer=%d; disconnecting\\n\", pnode->ConnectionTypeAsString(), pnode->GetId());\n-            pnode->fDisconnect = true;\n-            return true;\n+    CNode* evicted_node{nullptr};\n+    {\n+        LOCK(m_nodes_mutex);\n+        for (CNode* pnode : m_nodes) {\n+            if (pnode->GetId() == *node_id_to_evict) {\n+                LogPrint(BCLog::NET, \"selected %s connection for eviction peer=%d; disconnecting\\n\", pnode->ConnectionTypeAsString(), pnode->GetId());\n+                pnode->fDisconnect = true;\n+                evicted_node = pnode;\n+                break;\n+            }\n         }\n     }\n+    if (evicted_node) {\n+        DisconnectAndReleaseNode(evicted_node);\n+        DeleteDisconnectedNode(evicted_node);",
      "path": "src/net.cpp",
      "position": 32,
      "original_position": 32,
      "commit_id": "912d8e491437d3252c4ebfa36c6bd4e9582ff363",
      "original_commit_id": "a3903cc1864021a47c2928c379cd17306b3f6f64",
      "in_reply_to_id": 1259898235,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`DisconnectAndReleaseNode()` is safe because its body is protected by `m_nodes_mutex`. But `DeleteDisconnectedNode()` is not - two threads could race to call `delete` on the `CNode` object. It looks ok to iterate the whole `m_disconnected_nodes` here to avoid that, like in the [other place](https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1267530707).\r\n",
      "created_at": "2023-07-19T04:55:05Z",
      "updated_at": "2023-07-19T04:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27912#discussion_r1267534028",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267534028"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27912"
        }
      },
      "start_line": 934,
      "original_start_line": 934,
      "start_side": "RIGHT",
      "line": 936,
      "original_line": 936,
      "side": "RIGHT"
    }
  ]
}