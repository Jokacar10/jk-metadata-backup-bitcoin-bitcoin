{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631",
    "id": 2549950946,
    "node_id": "PR_kwDOABII586X_Sni",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/32631",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/32631.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/32631.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32631",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32631/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/a60f863d3e276534444571282f432b913d3967db",
    "number": 32631,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "refactor: Convert GenTxid to `std::variant`",
    "user": {
      "login": "marcofleon",
      "id": 95179662,
      "node_id": "U_kgDOBaxTjg",
      "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcofleon",
      "html_url": "https://github.com/marcofleon",
      "followers_url": "https://api.github.com/users/marcofleon/followers",
      "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
      "organizations_url": "https://api.github.com/users/marcofleon/orgs",
      "repos_url": "https://api.github.com/users/marcofleon/repos",
      "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/marcofleon/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Part of the [type safety refactor](https://github.com/bitcoin/bitcoin/pull/32189).\r\n\r\nThis PR changes the GenTxid class to a variant, which holds both Txids and Wtxids. This provides compile-time type safety and eliminates the manual type check (bool m_is_wtxid). Variables that can be either a Txid or a Wtxid are now using the new GenTxid variant, instead of uint256.",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      }
    ],
    "created_at": "2025-05-28T15:45:16Z",
    "updated_at": "2025-07-18T10:13:53Z",
    "closed_at": "2025-07-11T17:47:34Z",
    "mergeable_state": "unknown",
    "merged": true,
    "merged_at": "2025-07-11T17:47:34Z",
    "merged_by": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "merge_commit_sha": "23e15d40b96a23112fba24cece5fe513ae1a2877",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "marcofleon:2025/05/gentxid-variant",
      "ref": "2025/05/gentxid-variant",
      "sha": "a60f863d3e276534444571282f432b913d3967db",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 593603618,
        "node_id": "R_kgDOI2GsIg",
        "name": "bitcoin",
        "full_name": "marcofleon/bitcoin",
        "owner": {
          "login": "marcofleon",
          "id": 95179662,
          "node_id": "U_kgDOBaxTjg",
          "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/marcofleon",
          "html_url": "https://github.com/marcofleon",
          "followers_url": "https://api.github.com/users/marcofleon/followers",
          "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
          "organizations_url": "https://api.github.com/users/marcofleon/orgs",
          "repos_url": "https://api.github.com/users/marcofleon/repos",
          "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/marcofleon/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/marcofleon/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/marcofleon/bitcoin",
        "archive_url": "https://api.github.com/repos/marcofleon/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/marcofleon/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/marcofleon/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/marcofleon/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/marcofleon/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/marcofleon/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/marcofleon/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/marcofleon/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/marcofleon/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/marcofleon/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/marcofleon/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/marcofleon/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/marcofleon/bitcoin/events",
        "forks_url": "https://api.github.com/repos/marcofleon/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/marcofleon/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/marcofleon/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/marcofleon/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/marcofleon/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/marcofleon/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/marcofleon/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/marcofleon/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/marcofleon/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/marcofleon/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/marcofleon/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/marcofleon/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/marcofleon/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/marcofleon/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/marcofleon/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/marcofleon/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:marcofleon/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/marcofleon/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/marcofleon/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/marcofleon/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/marcofleon/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/marcofleon/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/marcofleon/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/marcofleon/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/marcofleon/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/marcofleon/bitcoin/hooks",
        "svn_url": "https://github.com/marcofleon/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 246966,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-07-17T19:38:11Z",
        "created_at": "2023-01-26T12:28:27Z",
        "updated_at": "2025-07-15T15:30:25Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "b7e9dc8e468b9a6714fea59432b3c33a723e2bdf",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37531,
        "stargazers_count": 84619,
        "watchers_count": 84619,
        "size": 289148,
        "default_branch": "master",
        "open_issues_count": 757,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-07-16T12:49:29Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-07-18T09:15:42Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 313,
    "deletions": 316,
    "changed_files": 33,
    "commits": 11,
    "review_comments": 64,
    "comments": 10
  },
  "events": [
    {
      "event": "commented",
      "id": 2916818743,
      "node_id": "IC_kwDOABII586t2x83",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2916818743",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-28T15:45:20Z",
      "updated_at": "2025-07-11T17:20:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/32631.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [w0xlt](https://github.com/bitcoin/bitcoin/pull/32631#pullrequestreview-3007546189), [dergoegge](https://github.com/bitcoin/bitcoin/pull/32631#pullrequestreview-3009607187), [maflcko](https://github.com/bitcoin/bitcoin/pull/32631#pullrequestreview-3009084888), [theStack](https://github.com/bitcoin/bitcoin/pull/32631#pullrequestreview-3011294284) |\n| Concept ACK | [instagibbs](https://github.com/bitcoin/bitcoin/pull/32631#issuecomment-2919973134), [hodlinator](https://github.com/bitcoin/bitcoin/pull/32631#pullrequestreview-2909638652) |\n| Approach ACK | [stickies-v](https://github.com/bitcoin/bitcoin/pull/32631#pullrequestreview-2975363560) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#32941](https://github.com/bitcoin/bitcoin/pull/32941) (p2p: TxOrphanage revamp cleanups by glozow)\n* [#32730](https://github.com/bitcoin/bitcoin/pull/32730) (p2p: avoid traversing blocks (twice) during IBD by furszy)\n* [#32189](https://github.com/bitcoin/bitcoin/pull/32189) (refactor: Txid type safety (parent PR) by marcofleon)\n* [#31829](https://github.com/bitcoin/bitcoin/pull/31829) (p2p: improve TxOrphanage denial of service bounds by glozow)\n* [#30116](https://github.com/bitcoin/bitcoin/pull/30116) (p2p: Fill reconciliation sets (Erlay) attempt 2 by sr-gi)\n* [#29415](https://github.com/bitcoin/bitcoin/pull/29415) (Broadcast own transactions only via short-lived Tor or I2P connections by vasild)\n* [#28676](https://github.com/bitcoin/bitcoin/pull/28676) ([WIP] Cluster mempool implementation by sdaftuar)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#issuecomment-2916818743",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32631"
    },
    {
      "event": "labeled",
      "id": 17853733249,
      "node_id": "LE_lADOABII5864pPcazwAAAAQoKlmB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17853733249",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-28T15:45:29Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "commented",
      "id": 2916823179,
      "node_id": "IC_kwDOABII586t2zCL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2916823179",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-28T15:46:55Z",
      "updated_at": "2025-05-28T15:46:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "In `txrequest` the `ByPeer` and `ByTxHash` indexes still sort announcements by the underlying uint256 txhash only, as opposed to using the GenTxid comparators which sort by type and then hash. The patch below can be used to make sure that there are no accidental switches from uint256 comparisons to GenTxid comparisons.\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 011e3cd928..1a47a39dfd 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -206,6 +206,12 @@ struct QueuedBlock {\r\n     std::unique_ptr<PartiallyDownloadedBlock> partialBlock;\r\n };\r\n \r\n+struct CompareGenTxid {\r\n+    bool operator()(const GenTxid& a, const GenTxid& b) const {\r\n+        return std::tuple(a.index(), a.ToUint256()) < std::tuple(b.index(), b.ToUint256());\r\n+    }\r\n+};\r\n+\r\n /**\r\n  * Data structure for an individual peer. This struct is not protected by\r\n  * cs_main since it does not contain validation-critical data.\r\n@@ -302,7 +308,7 @@ struct Peer {\r\n          *  non-wtxid-relay peers, wtxid for wtxid-relay peers). We use the\r\n          *  mempool to sort transactions in dependency order before relay, so\r\n          *  this does not have to be sorted. */\r\n-        std::set<GenTxid> m_tx_inventory_to_send GUARDED_BY(m_tx_inventory_mutex);\r\n+        std::set<GenTxid, CompareGenTxid> m_tx_inventory_to_send GUARDED_BY(m_tx_inventory_mutex);\r\n         /** Whether the peer has requested us to send our complete mempool. Only\r\n          *  permitted if the peer has NetPermissionFlags::Mempool or we advertise\r\n          *  NODE_BLOOM. See BIP35. */\r\n@@ -856,7 +862,7 @@ private:\r\n     std::shared_ptr<const CBlock> m_most_recent_block GUARDED_BY(m_most_recent_block_mutex);\r\n     std::shared_ptr<const CBlockHeaderAndShortTxIDs> m_most_recent_compact_block GUARDED_BY(m_most_recent_block_mutex);\r\n     uint256 m_most_recent_block_hash GUARDED_BY(m_most_recent_block_mutex);\r\n-    std::unique_ptr<const std::map<GenTxid, CTransactionRef>> m_most_recent_block_txs GUARDED_BY(m_most_recent_block_mutex);\r\n+    std::unique_ptr<const std::map<GenTxid, CTransactionRef, CompareGenTxid>> m_most_recent_block_txs GUARDED_BY(m_most_recent_block_mutex);\r\n \r\n     // Data about the low-work headers synchronization, aggregated from all peers' HeadersSyncStates.\r\n     /** Mutex guarding the other m_headers_presync_* variables. */\r\n@@ -2027,7 +2033,7 @@ void PeerManagerImpl::NewPoWValidBlock(const CBlockIndex *pindex, const std::sha\r\n         std::async(std::launch::deferred, [&] { return NetMsg::Make(NetMsgType::CMPCTBLOCK, *pcmpctblock); })};\r\n \r\n     {\r\n-        auto most_recent_block_txs = std::make_unique<std::map<GenTxid, CTransactionRef>>();\r\n+        auto most_recent_block_txs = std::make_unique<std::map<GenTxid, CTransactionRef, CompareGenTxid>>();\r\n         for (const auto& tx : pblock->vtx) {\r\n             most_recent_block_txs->emplace(tx->GetHash(), tx);\r\n             most_recent_block_txs->emplace(tx->GetWitnessHash(), tx);\r\ndiff --git a/src/util/transaction_identifier.h b/src/util/transaction_identifier.h\r\nindex 3cdeb664d4..6ab5d98263 100644\r\n--- a/src/util/transaction_identifier.h\r\n+++ b/src/util/transaction_identifier.h\r\n@@ -88,13 +88,12 @@ public:\r\n         return std::visit([](const auto& id) -> const uint256& { return id.ToUint256(); }, *this);\r\n     }\r\n \r\n-    friend bool operator==(const GenTxid& a, const GenTxid& b) {\r\n-        return a.index() == b.index() && a.ToUint256() == b.ToUint256();\r\n-    }\r\n-\r\n-    friend bool operator<(const GenTxid& a, const GenTxid& b) {\r\n-        return std::tuple(a.index(), a.ToUint256()) < std::tuple(b.index(), b.ToUint256());\r\n-    }\r\n+    friend bool operator==(const GenTxid& a, const GenTxid& b) = delete;\r\n+    friend bool operator!=(const GenTxid& a, const GenTxid& b) = delete;\r\n+    friend bool operator<(const GenTxid& a, const GenTxid& b) = delete;\r\n+    friend bool operator<=(const GenTxid& a, const GenTxid& b) = delete;\r\n+    friend bool operator>(const GenTxid& a, const GenTxid& b) = delete;\r\n+    friend bool operator>=(const GenTxid& a, const GenTxid& b) = delete;\r\n };\r\n \r\n #endif // BITCOIN_UTIL_TRANSACTION_IDENTIFIER_H\r\n \r\n ```\r\n Then run `cmake --build build --target bitcoind`. To check all tests as well, comment out the unit and fuzz tests for `txrequest`, as these tests directly compare GenTxid objects.",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#issuecomment-2916823179",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32631"
    },
    {
      "event": "reviewed",
      "id": 2875685507,
      "node_id": "PRR_kwDOABII586rZ3qD",
      "url": null,
      "actor": null,
      "commit_id": "e66a5540e22d11df42b59bd25e6939ed2a294a4b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#pullrequestreview-2875685507",
      "submitted_at": "2025-05-28T16:13:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17854259469,
      "node_id": "HRFPE_lADOABII5864pPcazwAAAAQoMmEN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17854259469",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "98358c4d855650495be854316feb6d5a27bd391e",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/98358c4d855650495be854316feb6d5a27bd391e",
      "created_at": "2025-05-28T16:19:17Z"
    },
    {
      "event": "reviewed",
      "id": 2875707019,
      "node_id": "PRR_kwDOABII586rZ86L",
      "url": null,
      "actor": null,
      "commit_id": "98358c4d855650495be854316feb6d5a27bd391e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nI'm not sure if the intermediate commits make things better here. Looking at the final diff seems simple enough.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#pullrequestreview-2875707019",
      "submitted_at": "2025-05-29T09:52:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
    },
    {
      "event": "reviewed",
      "id": 2877628308,
      "node_id": "PRR_kwDOABII586rhR-U",
      "url": null,
      "actor": null,
      "commit_id": "98358c4d855650495be854316feb6d5a27bd391e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, the new `GenTxid` allows us to better benefit from the type safety of `Txid` and `Wtxid` and this PR takes a clear and structured approach that seems straightforward to review.\r\n\r\nApproach-wise, I think I have a slightly different view. I find code generally easier to understand when we use the underlying types {`Txid`, `Wtxid`} directly and as such would prefer functions to be overloaded with those types, pushing the handling of variants to the edge as much as possible. This also has the side benefit of gently nudging users of those functions to not using variants if they don't have to. I have left 2 such comments on the first commits, but I suspect it applies to later commits too (did not investigate that in detail yet). This is largely a style preference, and I don't want to block the PRs progress over it if other reviewers disagree.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#pullrequestreview-2877628308",
      "submitted_at": "2025-05-29T10:31:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
    },
    {
      "event": "commented",
      "id": 2919973134,
      "node_id": "IC_kwDOABII586uC0EO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2919973134",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-29T16:42:20Z",
      "updated_at": "2025-05-29T16:42:20Z",
      "author_association": "MEMBER",
      "body": "concept ACK",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#issuecomment-2919973134",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32631"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17963837561,
      "node_id": "HRFPE_lADOABII5864pPcazwAAAAQuumh5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17963837561",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f7c8f3fa6b60c652720550cc009797e31c698786",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/f7c8f3fa6b60c652720550cc009797e31c698786",
      "created_at": "2025-06-03T17:20:22Z"
    },
    {
      "event": "labeled",
      "id": 17964215552,
      "node_id": "LE_lADOABII5864pPcazwAAAAQuwC0A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17964215552",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-03T17:42:49Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2936464439,
      "node_id": "IC_kwDOABII586vBuQ3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2936464439",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-03T17:42:51Z",
      "updated_at": "2025-06-03T17:42:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `TSan, depends, gui`: https://github.com/bitcoin/bitcoin/runs/43405323838</sub>\n<sub>LLM reason (✨ experimental): The CI failure is caused by compilation errors due to missing 'util::Overloaded' and 'gtxid.ToVariant' members, indicating code incompatibility or missing definitions.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#issuecomment-2936464439",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32631"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17964314522,
      "node_id": "HRFPE_lADOABII5864pPcazwAAAAQuwa-a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17964314522",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a3286b9e3bef6508c5f2240ecb092342337072c6",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/a3286b9e3bef6508c5f2240ecb092342337072c6",
      "created_at": "2025-06-03T17:47:47Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17964534288,
      "node_id": "HRFPE_lADOABII5864pPcazwAAAAQuxQoQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17964534288",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a853dcb0efb4568c0f6174470059dd25bd7ca1c8",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/a853dcb0efb4568c0f6174470059dd25bd7ca1c8",
      "created_at": "2025-06-03T18:00:20Z"
    },
    {
      "event": "commented",
      "id": 2939644770,
      "node_id": "IC_kwDOABII586vN2ti",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2939644770",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-04T11:21:46Z",
      "updated_at": "2025-06-04T11:21:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#issuecomment-2939644770",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32631"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17982066446,
      "node_id": "HRFPE_lADOABII5864pPcazwAAAAQv0I8O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17982066446",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "17af8a7e69c0360538aa729f6bb6ba1ead7344cc",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/17af8a7e69c0360538aa729f6bb6ba1ead7344cc",
      "created_at": "2025-06-04T13:37:39Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17982472119,
      "node_id": "HRFPE_lADOABII5864pPcazwAAAAQv1r-3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17982472119",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b740b6f9479a2351cd3b66a0f6e53848452b6bf8",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/b740b6f9479a2351cd3b66a0f6e53848452b6bf8",
      "created_at": "2025-06-04T13:58:00Z"
    },
    {
      "event": "commented",
      "id": 2940454325,
      "node_id": "IC_kwDOABII586vQ8W1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2940454325",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-04T15:24:15Z",
      "updated_at": "2025-06-04T15:24:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for reviewing @stickies-v! I took your suggestion for mempool's `exists`, `info`, and `info_for_relay`. These are all fairly simple functions where I agree that the separate txid/wtxid overloads make the code clearer.\r\n\r\nI looked at `txrequest` and `txdownloadman_impl` to see where txid and wtxid could be used internally in place of the variant, but it seems to be a less straightfoward refactor. Maybe `AddTxAnnouncement` could be a good candidate? If you see something that I'm missing (or isn't as complicated as I might think it is), let me know and I'll give it a go, if not in this PR then in a follow-up.",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#issuecomment-2940454325",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32631"
    },
    {
      "event": "mentioned",
      "id": 17984186762,
      "node_id": "MEE_lADOABII5864pPcazwAAAAQv8OmK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17984186762",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-04T15:24:16Z"
    },
    {
      "event": "subscribed",
      "id": 17984186786,
      "node_id": "SE_lADOABII5864pPcazwAAAAQv8Omi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17984186786",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-04T15:24:16Z"
    },
    {
      "event": "unlabeled",
      "id": 17984316858,
      "node_id": "UNLE_lADOABII5864pPcazwAAAAQv8uW6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17984316858",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-04T15:31:20Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2909638652,
      "node_id": "PRR_kwDOABII586tbY_8",
      "url": null,
      "actor": null,
      "commit_id": "b740b6f9479a2351cd3b66a0f6e53848452b6bf8",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK b740b6f9479a2351cd3b66a0f6e53848452b6bf8\r\n",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#pullrequestreview-2909638652",
      "submitted_at": "2025-06-09T13:20:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18077012997,
      "node_id": "HRFPE_lADOABII5864pPcazwAAAAQ1eVQF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18077012997",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5276daaea2b0d3d2e063c1e7344361b83e22bf75",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/5276daaea2b0d3d2e063c1e7344361b83e22bf75",
      "created_at": "2025-06-10T14:38:51Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18077845665,
      "node_id": "HRFPE_lADOABII5864pPcazwAAAAQ1hgih",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18077845665",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "67fbc3a18499484c7b6ec939cffb0eddc50dfe85",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/67fbc3a18499484c7b6ec939cffb0eddc50dfe85",
      "created_at": "2025-06-10T15:18:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18078667525,
      "node_id": "HRFPE_lADOABII5864pPcazwAAAAQ1kpMF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18078667525",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d5a6e7a0a40bb78c2fcadd2662f2d64b86c374b7",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/d5a6e7a0a40bb78c2fcadd2662f2d64b86c374b7",
      "created_at": "2025-06-10T16:01:04Z"
    },
    {
      "event": "reviewed",
      "id": 2916032256,
      "node_id": "PRR_kwDOABII586tzx8A",
      "url": null,
      "actor": null,
      "commit_id": "d5a6e7a0a40bb78c2fcadd2662f2d64b86c374b7",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review d5a6e7a0a40bb78c2fcadd2662f2d64b86c374b7\r\n\r\nThanks for incorporating most of my feedback!\r\n\r\nMostly focused on reviewing non-test code.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#pullrequestreview-2916032256",
      "submitted_at": "2025-06-11T12:29:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
    },
    {
      "event": "reviewed",
      "id": 2932907497,
      "node_id": "PRR_kwDOABII586u0J3p",
      "url": null,
      "actor": null,
      "commit_id": "d5a6e7a0a40bb78c2fcadd2662f2d64b86c374b7",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#pullrequestreview-2932907497",
      "submitted_at": "2025-06-16T18:02:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18193794953,
      "node_id": "HRFPE_lADOABII5864pPcazwAAAAQ8b0eJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18193794953",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f73fe949904de327bae75a3174773925c5aae612",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/f73fe949904de327bae75a3174773925c5aae612",
      "created_at": "2025-06-17T15:47:56Z"
    },
    {
      "event": "reviewed",
      "id": 2922292106,
      "node_id": "PRR_kwDOABII586uLqOK",
      "url": null,
      "actor": null,
      "commit_id": "f73fe949904de327bae75a3174773925c5aae612",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#pullrequestreview-2922292106",
      "submitted_at": "2025-06-19T21:37:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
    },
    {
      "event": "reviewed",
      "id": 2949718938,
      "node_id": "PRR_kwDOABII586v0SOa",
      "url": null,
      "actor": null,
      "commit_id": "f73fe949904de327bae75a3174773925c5aae612",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I think the changes here can be simplified quite a bit by first replacing `get_iter_from_wtxid` with a `GetIter(const wtxid&)` overload, see my suggestions [here](https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2163728201) and [here](https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2163747520) (or full branch https://github.com/bitcoin/bitcoin/compare/master...stickies-v:bitcoin:2025-06/overload-getiter).\r\n\r\nThere are also quite a few clang-tidy violations that would be helpful to address here, left per-commit comments.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#pullrequestreview-2949718938",
      "submitted_at": "2025-06-24T11:57:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDExZDI4ZjIxYmI4ZjBjMzA5NDkzNGIzZmVmNDU4NzFmNzNiYjIxNmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/11d28f21bb8f0c3094934b3fef45871f73bb216a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/11d28f21bb8f0c3094934b3fef45871f73bb216a",
      "tree": {
        "sha": "c5936cd18eaa3b95eb3d281856c68c316e3eb638",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c5936cd18eaa3b95eb3d281856c68c316e3eb638"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1be688f575151109816fa8956d54a5b5220e3b00",
          "sha": "1be688f575151109816fa8956d54a5b5220e3b00",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1be688f575151109816fa8956d54a5b5220e3b00"
        }
      ],
      "message": "Implement GenTxid as a variant\n\nReimplements the GenTxid class as a variant for better type safety.\nAlso adds two temporary functions to the old GenTxid class that\nconvert to and from the new variant.",
      "committer": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2025-06-25T22:08:15Z"
      },
      "author": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2025-03-31T11:37:38Z"
      },
      "sha": "11d28f21bb8f0c3094934b3fef45871f73bb216a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZjZjkyZmQ2NDBlYWU2MGQxZjYwMTEzNmE0ZTFjOWRlOGNjYjY4YjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fcf92fd640eae60d1f601136a4e1c9de8ccb68b5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fcf92fd640eae60d1f601136a4e1c9de8ccb68b5",
      "tree": {
        "sha": "398e2495014c6af82e3d776e9e6bee29c91ce6c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/398e2495014c6af82e3d776e9e6bee29c91ce6c6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/11d28f21bb8f0c3094934b3fef45871f73bb216a",
          "sha": "11d28f21bb8f0c3094934b3fef45871f73bb216a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/11d28f21bb8f0c3094934b3fef45871f73bb216a"
        }
      ],
      "message": "refactor: make CTxMemPool::GetIter strongly typed\n\nThis allows adding a GetIter(const Wtxid&) overload in a next\ncommit, making it easier to visit this function from a variant.\n\nCo-authored-by: stickies-v <stickies-v@protonmail.com>",
      "committer": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2025-07-01T08:00:27Z"
      },
      "author": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2025-06-23T13:52:13Z"
      },
      "sha": "fcf92fd640eae60d1f601136a4e1c9de8ccb68b5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI0MzU1M2Q1OTA3MWYzZTQzYTQyZjM4MDk3MDY3OTA0OTViMTdmZmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/243553d59071f3e43a42f3809706790495b17ffc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/243553d59071f3e43a42f3809706790495b17ffc",
      "tree": {
        "sha": "06250a5d8a00c4c748470b197256981a07bfe7ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/06250a5d8a00c4c748470b197256981a07bfe7ce"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fcf92fd640eae60d1f601136a4e1c9de8ccb68b5",
          "sha": "fcf92fd640eae60d1f601136a4e1c9de8ccb68b5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fcf92fd640eae60d1f601136a4e1c9de8ccb68b5"
        }
      ],
      "message": "refactor: replace get_iter_from_wtxid with GetIter(const Wtxid&)\n\nOverloading GetIter makes it easier to use std::visit patterns\nfrom a GenTxid.",
      "committer": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2025-07-01T08:21:12Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2025-06-23T14:14:10Z"
      },
      "sha": "243553d59071f3e43a42f3809706790495b17ffc"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18407388108,
      "node_id": "HRFPE_lADOABII5864pPcazwAAAARJKnPM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18407388108",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6775bb42ba9bbeef131016db7529c70c08d15cf3",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/6775bb42ba9bbeef131016db7529c70c08d15cf3",
      "created_at": "2025-07-01T10:34:04Z"
    },
    {
      "event": "commented",
      "id": 3023473293,
      "node_id": "IC_kwDOABII5860NoqN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3023473293",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-01T11:13:21Z",
      "updated_at": "2025-07-01T11:13:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for reviewing @hodlinator and @stickies-v! Pretty sure I addressed all comments, but let me know if I missed anything in the most recent push (very possible I did). After taking your suggestions, it's looking better and cleaner now for sure. The `txrequest` changes should be quite a bit easier to review now as well.",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#issuecomment-3023473293",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32631"
    },
    {
      "event": "mentioned",
      "id": 18408312522,
      "node_id": "MEE_lADOABII5864pPcazwAAAARJOI7K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18408312522",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-01T11:13:23Z"
    },
    {
      "event": "subscribed",
      "id": 18408312559,
      "node_id": "SE_lADOABII5864pPcazwAAAARJOI7v",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18408312559",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-01T11:13:23Z"
    },
    {
      "event": "mentioned",
      "id": 18408312590,
      "node_id": "MEE_lADOABII5864pPcazwAAAARJOI8O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18408312590",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-01T11:13:23Z"
    },
    {
      "event": "subscribed",
      "id": 18408312619,
      "node_id": "SE_lADOABII5864pPcazwAAAARJOI8r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18408312619",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-01T11:13:23Z"
    },
    {
      "event": "labeled",
      "id": 18409444466,
      "node_id": "LE_lADOABII5864pPcazwAAAARJSdRy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18409444466",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-01T12:07:48Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3023714895,
      "node_id": "IC_kwDOABII5860OjpP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3023714895",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-01T12:07:50Z",
      "updated_at": "2025-07-01T12:07:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `lint`: https://github.com/bitcoin/bitcoin/runs/45122218183</sub>\n<sub>LLM reason (✨ experimental): The CI failure is caused by a lint error in the script check.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#issuecomment-3023714895",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32631"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18419404003,
      "node_id": "HRFPE_lADOABII5864pPcazwAAAARJ4czj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18419404003",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "700819f87b019f854340886dc8d35e66e813b53f",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/700819f87b019f854340886dc8d35e66e813b53f",
      "created_at": "2025-07-01T21:09:57Z"
    },
    {
      "event": "unlabeled",
      "id": 18421376375,
      "node_id": "UNLE_lADOABII5864pPcazwAAAARJ_-V3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18421376375",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-02T00:22:16Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2975363560,
      "node_id": "PRR_kwDOABII586xWHHo",
      "url": null,
      "actor": null,
      "commit_id": "700819f87b019f854340886dc8d35e66e813b53f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK 700819f87b019f854340886dc8d35e66e813b53f\r\n\r\nI did a full code review and while the changes are numerous, type-safety or pre-existing usage of `GenTxid::{Txid,Wtxid}` makes many of them trivially obvious to be a refactor, which in my opinion makes this PR reviewable even without in-depth knowledge of the p2p code this PR touches.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#pullrequestreview-2975363560",
      "submitted_at": "2025-07-04T16:10:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVlZTQ3M2Q5ZjMwMTlhMGVhNGViYmM5YzQxNzgxODEzYWQ1NzRhODY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eee473d9f3019a0ea4ebbc9c41781813ad574a86",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/eee473d9f3019a0ea4ebbc9c41781813ad574a86",
      "tree": {
        "sha": "44002460afb9f7c4046cf2788f490b94d73233c7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/44002460afb9f7c4046cf2788f490b94d73233c7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/243553d59071f3e43a42f3809706790495b17ffc",
          "sha": "243553d59071f3e43a42f3809706790495b17ffc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/243553d59071f3e43a42f3809706790495b17ffc"
        }
      ],
      "message": "Convert `CompareInvMempoolOrder` to GenTxidVariant\n\nNow that we are storing `CTxMemPool::CompareDepthAndScore` parameters using\n`std::variant` we have no portable zero-overhead way of accessing them,\nso use `std::visit` and drop `bool wtxid` in-parameter.\n\nCo-authored-by: stickies-v <stickies-v@protonmail.com>",
      "committer": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2025-07-08T15:03:05Z"
      },
      "author": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2025-03-31T16:42:20Z"
      },
      "sha": "eee473d9f3019a0ea4ebbc9c41781813ad574a86"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18531369698,
      "node_id": "HRFPE_lADOABII5864pPcazwAAAARQjkLi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18531369698",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e32685140b7719738b46ed67eeae94dd65bc2de1",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/e32685140b7719738b46ed67eeae94dd65bc2de1",
      "created_at": "2025-07-08T17:56:42Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRlODU4Y2UyYmVhODNjNTM2MzVkZWU5YTQ5YzhjMjczYTEyNDQwZGQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/de858ce2bea83c53635dee9a49c8c273a12440dd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/de858ce2bea83c53635dee9a49c8c273a12440dd",
      "tree": {
        "sha": "3e5e90cad17bcbec07a078b1b9c13ded4d2a8c99",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3e5e90cad17bcbec07a078b1b9c13ded4d2a8c99"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eee473d9f3019a0ea4ebbc9c41781813ad574a86",
          "sha": "eee473d9f3019a0ea4ebbc9c41781813ad574a86",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/eee473d9f3019a0ea4ebbc9c41781813ad574a86"
        }
      ],
      "message": "move-only: make GetInfo a private CTxMemPool member\n\nThis allows it to be used by templated functions in a future commit.",
      "committer": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2025-07-08T18:30:48Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2025-06-23T17:19:55Z"
      },
      "sha": "de858ce2bea83c53635dee9a49c8c273a12440dd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM4NzZhODkyZWMwYjA0ODUxYmVhMGE2ODhkNzY4MWI2YWFjYTRjYjc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c876a892ec0b04851bea0a688d7681b6aaca4cb7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c876a892ec0b04851bea0a688d7681b6aaca4cb7",
      "tree": {
        "sha": "6f5c5fe318c227b5860cfd16ae26b1f0482c3cde",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6f5c5fe318c227b5860cfd16ae26b1f0482c3cde"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/de858ce2bea83c53635dee9a49c8c273a12440dd",
          "sha": "de858ce2bea83c53635dee9a49c8c273a12440dd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/de858ce2bea83c53635dee9a49c8c273a12440dd"
        }
      ],
      "message": "Replace GenTxid with Txid/Wtxid overloads in `txmempool`\n\nCo-authored-by: stickies-v <stickies-v@protonmail.com>",
      "committer": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2025-07-08T18:31:02Z"
      },
      "author": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2025-03-31T15:28:50Z"
      },
      "sha": "c876a892ec0b04851bea0a688d7681b6aaca4cb7"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18531934681,
      "node_id": "HRFPE_lADOABII5864pPcazwAAAARQluHZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18531934681",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6003a98c4a3a4f15fe2ddb6b94afcbeca2ff3092",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/6003a98c4a3a4f15fe2ddb6b94afcbeca2ff3092",
      "created_at": "2025-07-08T18:32:41Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJkZTQ1NzliMDc4MGFhMzc1NGFmMzViZWZmYmNmZWIzMWYyODA0NWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bde4579b0780aa3754af35beffbcfeb31f28045b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bde4579b0780aa3754af35beffbcfeb31f28045b",
      "tree": {
        "sha": "cfcacd5fe3b6ea584f713b3e0eeac115f7c32312",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cfcacd5fe3b6ea584f713b3e0eeac115f7c32312"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c876a892ec0b04851bea0a688d7681b6aaca4cb7",
          "sha": "c876a892ec0b04851bea0a688d7681b6aaca4cb7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c876a892ec0b04851bea0a688d7681b6aaca4cb7"
        }
      ],
      "message": "Convert `txdownloadman_impl` to GenTxidVariant\n\nConvert all of `txdownloadman_impl` to the new variant except for\n`GetRequestsToSend`, which will be easier to switch at the same\ntime as `txrequest`.",
      "committer": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2025-07-08T19:00:43Z"
      },
      "author": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2025-03-31T18:30:35Z"
      },
      "sha": "bde4579b0780aa3754af35beffbcfeb31f28045b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFiNTI4MzkxYzc5NDk3YWUxOWY3ZTQ4MTQzOWUzNTA1MzNjN2NkMWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1b528391c79497ae19f7e481439e350533c7cd1a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1b528391c79497ae19f7e481439e350533c7cd1a",
      "tree": {
        "sha": "094801c012f2dd7ccefb830ef14d9791ac224f1a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/094801c012f2dd7ccefb830ef14d9791ac224f1a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bde4579b0780aa3754af35beffbcfeb31f28045b",
          "sha": "bde4579b0780aa3754af35beffbcfeb31f28045b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bde4579b0780aa3754af35beffbcfeb31f28045b"
        }
      ],
      "message": "Convert `txrequest` to GenTxidVariant\n\nSwitch all instances of GenTxid to the new variant\nin `txrequest` and complete `txdownloadman_impl` by\nconverting `GetRequestsToSend`.",
      "committer": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2025-07-08T19:00:51Z"
      },
      "author": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2025-03-31T19:46:48Z"
      },
      "sha": "1b528391c79497ae19f7e481439e350533c7cd1a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA3MmExOThlYTRiYzlmMWU4NDQ5Y2QzMWU1NWQzOTdiNzVjZTRhZDU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/072a198ea4bc9f1e8449cd31e55d397b75ce4ad5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/072a198ea4bc9f1e8449cd31e55d397b75ce4ad5",
      "tree": {
        "sha": "5e79e4662c1b953580ff52f9c589121448a9c7f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5e79e4662c1b953580ff52f9c589121448a9c7f8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1b528391c79497ae19f7e481439e350533c7cd1a",
          "sha": "1b528391c79497ae19f7e481439e350533c7cd1a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1b528391c79497ae19f7e481439e350533c7cd1a"
        }
      ],
      "message": "Convert remaining instances of GenTxid to GenTxidVariant",
      "committer": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2025-07-08T19:00:51Z"
      },
      "author": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2025-04-01T10:47:49Z"
      },
      "sha": "072a198ea4bc9f1e8449cd31e55d397b75ce4ad5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM4YmExOTk1OTg2MzIzY2Q5ZTc2MDk3YWNjMWYxNWVlZDdjNjA5NDM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c8ba1995986323cd9e76097acc1f15eed7c60943",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c8ba1995986323cd9e76097acc1f15eed7c60943",
      "tree": {
        "sha": "7a7d1b4f51119309d0d8ad393a69ee6d8434f9ef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7a7d1b4f51119309d0d8ad393a69ee6d8434f9ef"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/072a198ea4bc9f1e8449cd31e55d397b75ce4ad5",
          "sha": "072a198ea4bc9f1e8449cd31e55d397b75ce4ad5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/072a198ea4bc9f1e8449cd31e55d397b75ce4ad5"
        }
      ],
      "message": "Remove old GenTxid class",
      "committer": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2025-07-08T19:00:51Z"
      },
      "author": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2025-04-01T10:59:19Z"
      },
      "sha": "c8ba1995986323cd9e76097acc1f15eed7c60943"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE2MGY4NjNkM2UyNzY1MzQ0NDQ1NzEyODJmNDMyYjkxM2QzOTY3ZGI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a60f863d3e276534444571282f432b913d3967db",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a60f863d3e276534444571282f432b913d3967db",
      "tree": {
        "sha": "21f60ee3a7591f29e76b329971429ddd0c648ff2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/21f60ee3a7591f29e76b329971429ddd0c648ff2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c8ba1995986323cd9e76097acc1f15eed7c60943",
          "sha": "c8ba1995986323cd9e76097acc1f15eed7c60943",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c8ba1995986323cd9e76097acc1f15eed7c60943"
        }
      ],
      "message": "scripted-diff: Replace GenTxidVariant with GenTxid\n\n-BEGIN VERIFY SCRIPT-\nsed -i 's/GenTxidVariant/GenTxid/g' $(git grep -l 'GenTxidVariant')\n-END VERIFY SCRIPT-",
      "committer": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2025-07-08T19:00:51Z"
      },
      "author": {
        "name": "marcofleon",
        "email": "marleo23@proton.me",
        "date": "2025-07-01T21:06:01Z"
      },
      "sha": "a60f863d3e276534444571282f432b913d3967db"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18532342705,
      "node_id": "HRFPE_lADOABII5864pPcazwAAAARQnRux",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18532342705",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/a60f863d3e276534444571282f432b913d3967db",
      "created_at": "2025-07-08T19:01:16Z"
    },
    {
      "event": "reviewed",
      "id": 3007546189,
      "node_id": "PRR_kwDOABII586zQ4NN",
      "url": null,
      "actor": null,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK https://github.com/bitcoin/bitcoin/pull/32631/commits/a60f863d3e276534444571282f432b913d3967db",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#pullrequestreview-3007546189",
      "submitted_at": "2025-07-10T22:06:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
    },
    {
      "event": "review_requested",
      "id": 18574577585,
      "node_id": "RRE_lADOABII5864pPcazwAAAARTIY-x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18574577585",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-10T22:06:45Z",
      "requested_reviewer": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 18574577710,
      "node_id": "RRE_lADOABII5864pPcazwAAAARTIZAu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18574577710",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-10T22:06:45Z",
      "requested_reviewer": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 18574577809,
      "node_id": "RRE_lADOABII5864pPcazwAAAARTIZCR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18574577809",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-10T22:06:46Z",
      "requested_reviewer": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 18574577911,
      "node_id": "RRE_lADOABII5864pPcazwAAAARTIZD3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18574577911",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-10T22:06:47Z",
      "requested_reviewer": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 18574578020,
      "node_id": "RRE_lADOABII5864pPcazwAAAARTIZFk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18574578020",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-10T22:06:48Z",
      "requested_reviewer": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 3009607187,
      "node_id": "PRR_kwDOABII586zYvYT",
      "url": null,
      "actor": null,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK a60f863d3e276534444571282f432b913d3967db",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#pullrequestreview-3009607187",
      "submitted_at": "2025-07-11T10:13:06Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
    },
    {
      "event": "reviewed",
      "id": 3009084888,
      "node_id": "PRR_kwDOABII586zWv3Y",
      "url": null,
      "actor": null,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "left two nits that can be ignored or followed-up  later on.\n\nreview ACK a60f863d3e276534444571282f432b913d3967db 🎽\n\n<details><summary>Show signature</summary>\n\nSignature:\n\n```\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\ntrusted comment: review ACK a60f863d3e276534444571282f432b913d3967db 🎽\nY4M+5Nl4FOcgYfClv1qRnd5797LuKUVoDluobop5CMpD3562zy81q/G5Wgo0lri3tMAlaUzCOjdjwFe/zausCw==\n```\n\n</details>\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#pullrequestreview-3009084888",
      "submitted_at": "2025-07-11T11:54:26Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
    },
    {
      "event": "reviewed",
      "id": 3011294284,
      "node_id": "PRR_kwDOABII586zfLRM",
      "url": null,
      "actor": null,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code-review ACK a60f863d3e276534444571282f432b913d3967db",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#pullrequestreview-3011294284",
      "submitted_at": "2025-07-11T17:20:52Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
    },
    {
      "event": "merged",
      "id": 18591516846,
      "node_id": "ME_lADOABII5864pPcazwAAAARUJAiu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18591516846",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "23e15d40b96a23112fba24cece5fe513ae1a2877",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23e15d40b96a23112fba24cece5fe513ae1a2877",
      "created_at": "2025-07-11T17:47:34Z"
    },
    {
      "event": "closed",
      "id": 18591516857,
      "node_id": "CE_lADOABII5864pPcazwAAAARUJAi5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18591516857",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-11T17:47:34Z"
    },
    {
      "event": "commented",
      "id": 3063383775,
      "node_id": "IC_kwDOABII5862l4bf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3063383775",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-11T18:52:06Z",
      "updated_at": "2025-07-11T18:52:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "i get that this is an overall improvement to the type safety, but I think that it's gone about sort of the wrong way since it leaves a lot of data-structures that are supposed to be made homogeneous as hetergeneous still. E.g.,         \r\n\r\n```\r\nstd::set<GenTxid> m_tx_inventory_to_send;\r\n ```\r\n\r\nis _supposed_ to be     `std::variant<std::set<Txid>, std::set<WTxid>>`.\r\n\r\nYou can create a templated wrapper to encapsulate a generic container interface for this. \r\n",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#issuecomment-3063383775",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32631"
    },
    {
      "event": "reviewed",
      "id": 3010366559,
      "node_id": "PRR_kwDOABII586zboxf",
      "url": null,
      "actor": null,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Light post-merge ACK",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#pullrequestreview-3010366559",
      "submitted_at": "2025-07-11T22:22:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
    },
    {
      "event": "referenced",
      "id": 18641186772,
      "node_id": "REFE_lADOABII5864pPcazwAAAARXGe_U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18641186772",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a625638433f67b57bf64ab5b7782644844e2f3f1",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/a625638433f67b57bf64ab5b7782644844e2f3f1",
      "created_at": "2025-07-15T15:29:46Z"
    },
    {
      "event": "referenced",
      "id": 18641920976,
      "node_id": "REFE_lADOABII5864pPcazwAAAARXJSPQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18641920976",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e662bca72a30e6a7f174de28f3b1e5c9d7018776",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/e662bca72a30e6a7f174de28f3b1e5c9d7018776",
      "created_at": "2025-07-15T16:07:25Z"
    },
    {
      "event": "referenced",
      "id": 18641921032,
      "node_id": "REFE_lADOABII5864pPcazwAAAARXJSQI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18641921032",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "bc56473f43c6bec3068eeac58c67d5b894202709",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/bc56473f43c6bec3068eeac58c67d5b894202709",
      "created_at": "2025-07-15T16:07:25Z"
    },
    {
      "event": "referenced",
      "id": 18685888118,
      "node_id": "REFE_lADOABII5864pPcazwAAAARZxAZ2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18685888118",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f86d1453a9c1d34abe4fa0e19710d3907c8572fe",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/f86d1453a9c1d34abe4fa0e19710d3907c8572fe",
      "created_at": "2025-07-17T18:42:46Z"
    },
    {
      "event": "referenced",
      "id": 18686730276,
      "node_id": "REFE_lADOABII5864pPcazwAAAARZ0OAk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18686730276",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "67837bb426049918004fe48525db71b515940e6f",
      "commit_url": "https://api.github.com/repos/marcofleon/bitcoin/commits/67837bb426049918004fe48525db71b515940e6f",
      "created_at": "2025-07-17T19:38:11Z"
    },
    {
      "event": "commented",
      "id": 3088912601,
      "node_id": "IC_kwDOABII5864HRDZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3088912601",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-18T10:12:21Z",
      "updated_at": "2025-07-18T10:13:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "Follow ups to these last few comments can be found here: https://github.com/bitcoin/bitcoin/pull/33005\r\n\r\nedit: after I fix CI...",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#issuecomment-3088912601",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32631"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2112279755",
      "pull_request_review_id": 2875685507,
      "id": 2112279755,
      "node_id": "PRRC_kwDOABII58595tTL",
      "diff_hunk": "@@ -373,9 +376,12 @@ FUZZ_TARGET(txdownloadman_impl, .init = initialize)\n                 if (!reject_contains_wtxid) Assert(todo.m_unique_parents.size() <= rand_tx->vin.size());\n             },\n             [&] {\n-                GenTxid gtxid = fuzzed_data_provider.ConsumeBool() ?\n-                                GenTxid::Txid(rand_tx->GetHash()) :\n-                                GenTxid::Wtxid(rand_tx->GetWitnessHash());\n+                GenTxid gtxid;\n+                if (fuzzed_data_provider.ConsumeBool()) {\n+                    rand_tx->GetHash();\n+                } else {\n+                    rand_tx->GetWitnessHash();\n+                }",
      "path": "src/test/fuzz/txdownloadman.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "e66a5540e22d11df42b59bd25e6939ed2a294a4b",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The return values for `GetHash` and `GetWitnessHash` need to be assigned to gtxid",
      "created_at": "2025-05-28T16:13:08Z",
      "updated_at": "2025-05-28T16:13:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2112279755",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2112279755"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": 379,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 383,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2112292253",
      "pull_request_review_id": 2875707019,
      "id": 2112292253,
      "node_id": "PRRC_kwDOABII58595wWd",
      "diff_hunk": "@@ -5810,14 +5814,14 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                     while (!vInvTx.empty() && nRelayedTransactions < broadcast_max) {\n                         // Fetch the top element from the heap\n                         std::pop_heap(vInvTx.begin(), vInvTx.end(), compareInvMempoolOrder);\n-                        std::set<uint256>::iterator it = vInvTx.back();\n+                        std::set<GenTxid>::iterator it = vInvTx.back();\n                         vInvTx.pop_back();\n-                        uint256 hash = *it;\n-                        CInv inv(peer->m_wtxid_relay ? MSG_WTX : MSG_TX, hash);\n+                        GenTxid hash = *it;\n+                        CInv inv(peer->m_wtxid_relay ? MSG_WTX : MSG_TX, hash.ToUint256());",
      "path": "src/net_processing.cpp",
      "position": 203,
      "original_position": 169,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "98358c4d855650495be854316feb6d5a27bd391e",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n                        Assume(peer->m_wtxid_relay == std::holds_alternative<Wtxid>(hash));\r\n                        CInv inv(peer->m_wtxid_relay ? MSG_WTX : MSG_TX, hash.ToUint256());\r\n```",
      "created_at": "2025-05-28T16:19:53Z",
      "updated_at": "2025-05-29T09:52:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2112292253",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2112292253"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5819,
      "original_line": 5819,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2112303886",
      "pull_request_review_id": 2875707019,
      "id": 2112303886,
      "node_id": "PRRC_kwDOABII58595zMO",
      "diff_hunk": "@@ -378,27 +378,27 @@ node::RejectedTxTodo TxDownloadManagerImpl::MempoolRejectedTx(const CTransaction\n             // We can tolerate having up to 1 parent in m_lazy_recent_rejects_reconsiderable since we\n             // submit 1p1c packages. However, fail immediately if any are in m_lazy_recent_rejects.\n             std::optional<uint256> rejected_parent_reconsiderable;",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 118,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "98358c4d855650495be854316feb6d5a27bd391e",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "not that it really matters but could do \r\n\r\n```suggestion\r\n            std::optional<Txid> rejected_parent_reconsiderable;\r\n```",
      "created_at": "2025-05-28T16:26:08Z",
      "updated_at": "2025-05-29T09:52:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2112303886",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2112303886"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 380,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2113548178",
      "pull_request_review_id": 2877628308,
      "id": 2113548178,
      "node_id": "PRRC_kwDOABII5859-i-S",
      "diff_hunk": "@@ -76,4 +78,23 @@ using Txid = transaction_identifier<false>;\n /** Wtxid commits to all transaction fields including the witness. */\n using Wtxid = transaction_identifier<true>;\n \n+/** A generic txid reference (txid or wtxid). */\n+class GenTxid : public std::variant<Txid, Wtxid>\n+{\n+public:\n+    using variant::variant;\n+\n+    const uint256& ToUint256() const LIFETIMEBOUND {\n+        return std::visit([](const auto& id) -> const uint256& { return id.ToUint256(); }, *this);\n+    }\n+\n+    friend bool operator==(const GenTxid& a, const GenTxid& b) {\n+        return a.index() == b.index() && a.ToUint256() == b.ToUint256();\n+    }\n+\n+    friend bool operator<(const GenTxid& a, const GenTxid& b) {\n+        return std::tuple(a.index(), a.ToUint256()) < std::tuple(b.index(), b.ToUint256());\n+    }",
      "path": "src/util/transaction_identifier.h",
      "position": null,
      "original_position": 29,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "98358c4d855650495be854316feb6d5a27bd391e",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: can also be implemented as a single three-way operator:\r\n\r\n```suggestion\r\n    friend auto operator<=>(const GenTxid& a, const GenTxid& b) {\r\n        return std::tuple(a.index(), a.ToUint256()) <=> std::tuple(b.index(), b.ToUint256());\r\n    }\r\n```\r\n\r\n(needs to include `<compare>` and `<tuple>`)",
      "created_at": "2025-05-29T09:12:07Z",
      "updated_at": "2025-05-29T10:31:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2113548178",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2113548178"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": 91,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2113608840",
      "pull_request_review_id": 2877628308,
      "id": 2113608840,
      "node_id": "PRRC_kwDOABII5859-xyI",
      "diff_hunk": "@@ -647,10 +649,10 @@ class CTxMemPool\n     bool exists(const GenTxid& gtxid) const\n     {\n         LOCK(cs);\n-        if (gtxid.IsWtxid()) {\n-            return (mapTx.get<index_by_wtxid>().count(gtxid.GetHash()) != 0);\n-        }\n-        return (mapTx.count(gtxid.GetHash()) != 0);\n+        return std::visit(util::Overloaded{\n+            [this](const Wtxid& wtxid) EXCLUSIVE_LOCKS_REQUIRED(cs) { return (mapTx.get<index_by_wtxid>().count(wtxid) != 0); },\n+            [this](const Txid& txid) EXCLUSIVE_LOCKS_REQUIRED(cs) { return (mapTx.count(txid) != 0); }\n+        }, gtxid);\n     }",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 37,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "98358c4d855650495be854316feb6d5a27bd391e",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 811d2f34a0309a62a69897a15db47214bbfec776:\r\n\r\nIsn't it more straightforward to just to have two `bool exists(const Txid& txid)` and `bool exists(const Wtxid& wtxid)` overloads?",
      "created_at": "2025-05-29T09:51:34Z",
      "updated_at": "2025-05-29T10:31:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2113608840",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2113608840"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": 652,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 664,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2113659770",
      "pull_request_review_id": 2877628308,
      "id": 2113659770,
      "node_id": "PRRC_kwDOABII5859--N6",
      "diff_hunk": "@@ -893,7 +901,11 @@ CTransactionRef CTxMemPool::get(const uint256& hash) const\n TxMempoolInfo CTxMemPool::info(const GenTxid& gtxid) const\n {\n     LOCK(cs);\n-    indexed_transaction_set::const_iterator i = (gtxid.IsWtxid() ? get_iter_from_wtxid(gtxid.GetHash()) : mapTx.find(gtxid.GetHash()));\n+    indexed_transaction_set::const_iterator i = std::visit(util::Overloaded{\n+        [this](const Wtxid& wtxid) EXCLUSIVE_LOCKS_REQUIRED(cs) { return get_iter_from_wtxid(wtxid); },\n+        [this](const Txid& txid) EXCLUSIVE_LOCKS_REQUIRED(cs) { return mapTx.find(txid); }\n+    }, gtxid);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "98358c4d855650495be854316feb6d5a27bd391e",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Similarly to my comment about `TxMempool::exists()`, I think it would be better here to just overload `info`:\r\n\r\n<details>\r\n<summary>git diff on ad6d02720c</summary>\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex c0f6ac3f03..c34511d27d 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -5821,7 +5821,7 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\r\n                             continue;\r\n                         }\r\n                         // Not in the mempool anymore? don't bother sending it.\r\n-                        auto txinfo = m_mempool.info(ToGenTxid(inv).ToVariant());\r\n+                        auto txinfo{std::visit([&](const auto& tx) { return m_mempool.info(tx); }, ToGenTxid(inv).ToVariant())};\r\n                         if (!txinfo.tx) {\r\n                             continue;\r\n                         }\r\ndiff --git a/src/txmempool.cpp b/src/txmempool.cpp\r\nindex 4153794218..a60c692e84 100644\r\n--- a/src/txmempool.cpp\r\n+++ b/src/txmempool.cpp\r\n@@ -890,17 +890,18 @@ CTransactionRef CTxMemPool::get(const uint256& hash) const\r\n     return i->GetSharedTx();\r\n }\r\n \r\n-TxMempoolInfo CTxMemPool::info(const GenTxidVariant& gtxid) const\r\n+TxMempoolInfo CTxMemPool::info(const Txid& txid) const\r\n {\r\n     LOCK(cs);\r\n-    indexed_transaction_set::const_iterator i = std::visit(util::Overloaded{\r\n-        [this](const Wtxid& wtxid) EXCLUSIVE_LOCKS_REQUIRED(cs) { return get_iter_from_wtxid(wtxid); },\r\n-        [this](const Txid& txid) EXCLUSIVE_LOCKS_REQUIRED(cs) { return mapTx.find(txid); }\r\n-    }, gtxid);\r\n+    indexed_transaction_set::const_iterator i{mapTx.find(txid)};\r\n+    return i == mapTx.end() ? TxMempoolInfo{} : GetInfo(i);\r\n+}\r\n \r\n-    if (i == mapTx.end())\r\n-        return TxMempoolInfo();\r\n-    return GetInfo(i);\r\n+TxMempoolInfo CTxMemPool::info(const Wtxid& wtxid) const\r\n+{\r\n+    LOCK(cs);\r\n+    indexed_transaction_set::const_iterator i{get_iter_from_wtxid(wtxid)};\r\n+    return i == mapTx.end() ? TxMempoolInfo{} : GetInfo(i);\r\n }\r\n \r\n TxMempoolInfo CTxMemPool::info_for_relay(const GenTxidVariant& gtxid, uint64_t last_sequence) const\r\ndiff --git a/src/txmempool.h b/src/txmempool.h\r\nindex f96434a344..5421f029bb 100644\r\n--- a/src/txmempool.h\r\n+++ b/src/txmempool.h\r\n@@ -663,7 +663,8 @@ public:\r\n         AssertLockHeld(cs);\r\n         return mapTx.project<0>(mapTx.get<index_by_wtxid>().find(wtxid));\r\n     }\r\n-    TxMempoolInfo info(const GenTxidVariant& gtxid) const;\r\n+    TxMempoolInfo info(const Txid& txid) const;\r\n+    TxMempoolInfo info(const Wtxid& wtxid) const;\r\n \r\n     /** Returns info for a transaction if its entry_sequence < last_sequence */\r\n     TxMempoolInfo info_for_relay(const GenTxidVariant& gtxid, uint64_t last_sequence) const;\r\n\r\n```\r\n</details>\r\n",
      "created_at": "2025-05-29T10:23:24Z",
      "updated_at": "2025-05-29T10:31:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2113659770",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2113659770"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": 904,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 907,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2124510957",
      "pull_request_review_id": 2893476528,
      "id": 2124510957,
      "node_id": "PRRC_kwDOABII585-oXbt",
      "diff_hunk": "@@ -5810,14 +5814,14 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                     while (!vInvTx.empty() && nRelayedTransactions < broadcast_max) {\n                         // Fetch the top element from the heap\n                         std::pop_heap(vInvTx.begin(), vInvTx.end(), compareInvMempoolOrder);\n-                        std::set<uint256>::iterator it = vInvTx.back();\n+                        std::set<GenTxid>::iterator it = vInvTx.back();\n                         vInvTx.pop_back();\n-                        uint256 hash = *it;\n-                        CInv inv(peer->m_wtxid_relay ? MSG_WTX : MSG_TX, hash);\n+                        GenTxid hash = *it;\n+                        CInv inv(peer->m_wtxid_relay ? MSG_WTX : MSG_TX, hash.ToUint256());",
      "path": "src/net_processing.cpp",
      "position": 203,
      "original_position": 169,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "98358c4d855650495be854316feb6d5a27bd391e",
      "in_reply_to_id": 2112292253,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2025-06-03T17:41:04Z",
      "updated_at": "2025-06-03T17:41:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2124510957",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2124510957"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5819,
      "original_line": 5819,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2124511972",
      "pull_request_review_id": 2893478040,
      "id": 2124511972,
      "node_id": "PRRC_kwDOABII585-oXrk",
      "diff_hunk": "@@ -378,27 +378,27 @@ node::RejectedTxTodo TxDownloadManagerImpl::MempoolRejectedTx(const CTransaction\n             // We can tolerate having up to 1 parent in m_lazy_recent_rejects_reconsiderable since we\n             // submit 1p1c packages. However, fail immediately if any are in m_lazy_recent_rejects.\n             std::optional<uint256> rejected_parent_reconsiderable;",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 118,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "98358c4d855650495be854316feb6d5a27bd391e",
      "in_reply_to_id": 2112303886,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "completed",
      "created_at": "2025-06-03T17:41:35Z",
      "updated_at": "2025-06-03T17:41:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2124511972",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2124511972"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 380,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2126881339",
      "pull_request_review_id": 2897193520,
      "id": 2126881339,
      "node_id": "PRRC_kwDOABII585-xaI7",
      "diff_hunk": "@@ -76,4 +78,23 @@ using Txid = transaction_identifier<false>;\n /** Wtxid commits to all transaction fields including the witness. */\n using Wtxid = transaction_identifier<true>;\n \n+/** A generic txid reference (txid or wtxid). */\n+class GenTxid : public std::variant<Txid, Wtxid>\n+{\n+public:\n+    using variant::variant;\n+\n+    const uint256& ToUint256() const LIFETIMEBOUND {\n+        return std::visit([](const auto& id) -> const uint256& { return id.ToUint256(); }, *this);\n+    }\n+\n+    friend bool operator==(const GenTxid& a, const GenTxid& b) {\n+        return a.index() == b.index() && a.ToUint256() == b.ToUint256();\n+    }\n+\n+    friend bool operator<(const GenTxid& a, const GenTxid& b) {\n+        return std::tuple(a.index(), a.ToUint256()) < std::tuple(b.index(), b.ToUint256());\n+    }",
      "path": "src/util/transaction_identifier.h",
      "position": null,
      "original_position": 29,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "98358c4d855650495be854316feb6d5a27bd391e",
      "in_reply_to_id": 2113548178,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2025-06-04T15:24:30Z",
      "updated_at": "2025-06-04T15:24:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2126881339",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2126881339"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": 91,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2126882401",
      "pull_request_review_id": 2897195061,
      "id": 2126882401,
      "node_id": "PRRC_kwDOABII585-xaZh",
      "diff_hunk": "@@ -647,10 +649,10 @@ class CTxMemPool\n     bool exists(const GenTxid& gtxid) const\n     {\n         LOCK(cs);\n-        if (gtxid.IsWtxid()) {\n-            return (mapTx.get<index_by_wtxid>().count(gtxid.GetHash()) != 0);\n-        }\n-        return (mapTx.count(gtxid.GetHash()) != 0);\n+        return std::visit(util::Overloaded{\n+            [this](const Wtxid& wtxid) EXCLUSIVE_LOCKS_REQUIRED(cs) { return (mapTx.get<index_by_wtxid>().count(wtxid) != 0); },\n+            [this](const Txid& txid) EXCLUSIVE_LOCKS_REQUIRED(cs) { return (mapTx.count(txid) != 0); }\n+        }, gtxid);\n     }",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 37,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "98358c4d855650495be854316feb6d5a27bd391e",
      "in_reply_to_id": 2113608840,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I gotchu",
      "created_at": "2025-06-04T15:25:00Z",
      "updated_at": "2025-06-04T15:25:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2126882401",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2126882401"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": 652,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 664,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2126883263",
      "pull_request_review_id": 2897196366,
      "id": 2126883263,
      "node_id": "PRRC_kwDOABII585-xam_",
      "diff_hunk": "@@ -893,7 +901,11 @@ CTransactionRef CTxMemPool::get(const uint256& hash) const\n TxMempoolInfo CTxMemPool::info(const GenTxid& gtxid) const\n {\n     LOCK(cs);\n-    indexed_transaction_set::const_iterator i = (gtxid.IsWtxid() ? get_iter_from_wtxid(gtxid.GetHash()) : mapTx.find(gtxid.GetHash()));\n+    indexed_transaction_set::const_iterator i = std::visit(util::Overloaded{\n+        [this](const Wtxid& wtxid) EXCLUSIVE_LOCKS_REQUIRED(cs) { return get_iter_from_wtxid(wtxid); },\n+        [this](const Txid& txid) EXCLUSIVE_LOCKS_REQUIRED(cs) { return mapTx.find(txid); }\n+    }, gtxid);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "98358c4d855650495be854316feb6d5a27bd391e",
      "in_reply_to_id": 2113659770,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thank you for the patch, it helped.",
      "created_at": "2025-06-04T15:25:24Z",
      "updated_at": "2025-06-04T15:25:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2126883263",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2126883263"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": 904,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 907,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2135464192",
      "pull_request_review_id": 2909638652,
      "id": 2135464192,
      "node_id": "PRRC_kwDOABII585_SJkA",
      "diff_hunk": "@@ -5770,7 +5774,7 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                                 txinfo.tx->GetWitnessHash().ToUint256() :\n                                 txinfo.tx->GetHash().ToUint256(),\n                         };\n-                        tx_relay->m_tx_inventory_to_send.erase(inv.hash);\n+                        tx_relay->m_tx_inventory_to_send.erase(Txid::FromUint256(inv.hash));",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 86,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "ea58f45b43fcabef02019c5f8d2b3c79ba3340ca",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "ea58f45b43fcabef02019c5f8d2b3c79ba3340ca:\r\nThe hash could be referring to a wtxid here, and erasing would not work for peers supporting wtxid, making the code buggier at this commit (only to be fixed in later commits)?\r\nSuggestion:\r\n```C++\r\ntx_relay->m_tx_inventory_to_send.erase(peer->m_wtxid_relay ? GenTxidVariant{Wtxid::FromUint256(inv.hash)} : GenTxidVariant{Txid::FromUint256(inv.hash)});\r\n```",
      "created_at": "2025-06-09T10:19:56Z",
      "updated_at": "2025-06-09T13:20:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2135464192",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2135464192"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5777,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2135498545",
      "pull_request_review_id": 2909638652,
      "id": 2135498545,
      "node_id": "PRRC_kwDOABII585_SR8x",
      "diff_hunk": "@@ -2166,11 +2167,17 @@ void PeerManagerImpl::RelayTransaction(const uint256& txid, const uint256& wtxid\n         // in the announcement.\n         if (tx_relay->m_next_inv_send_time == 0s) continue;\n \n-        const uint256& hash{peer.m_wtxid_relay ? wtxid : txid};\n-        if (!tx_relay->m_tx_inventory_known_filter.contains(hash)) {\n-            tx_relay->m_tx_inventory_to_send.insert(hash);\n+        GenTxid gtxid;\n+        if (peer.m_wtxid_relay) {\n+            gtxid = wtxid;\n+        } else {\n+            gtxid = txid;\n         }",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 76,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "b740b6f9479a2351cd3b66a0f6e53848452b6bf8",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Avoid default-initialized `GenTxid`:\r\n```suggestion\r\n        auto gtxid{peer.m_wtxid_relay ? GenTxid{wtxid} : GenTxid{txid}};\r\n```",
      "created_at": "2025-06-09T10:45:56Z",
      "updated_at": "2025-06-09T13:20:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2135498545",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2135498545"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": 2170,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2175,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2135549808",
      "pull_request_review_id": 2909638652,
      "id": 2135549808,
      "node_id": "PRRC_kwDOABII585_Sedw",
      "diff_hunk": "@@ -794,18 +795,26 @@ void CTxMemPool::check(const CCoinsViewCache& active_coins_tip, int64_t spendhei\n     assert(innerUsage == cachedInnerUsage);\n }\n \n-bool CTxMemPool::CompareDepthAndScore(const uint256& hasha, const uint256& hashb, bool wtxid)\n+bool CTxMemPool::CompareDepthAndScore(const GenTxid& hasha, const GenTxid& hashb)\n {\n     /* Return `true` if hasha should be considered sooner than hashb. Namely when:\n      *   a is not in the mempool, but b is\n      *   both are in the mempool and a has fewer ancestors than b\n      *   both are in the mempool and a has a higher score than b\n      */\n     LOCK(cs);\n-    indexed_transaction_set::const_iterator j = wtxid ? get_iter_from_wtxid(hashb) : mapTx.find(hashb);\n+    indexed_transaction_set::const_iterator j = std::visit(util::Overloaded{\n+        [this](const Wtxid& wtxid) EXCLUSIVE_LOCKS_REQUIRED(cs) { return get_iter_from_wtxid(wtxid); },\n+        [this](const Txid& txid) EXCLUSIVE_LOCKS_REQUIRED(cs) { return mapTx.find(txid); }\n+    }, hashb);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "b740b6f9479a2351cd3b66a0f6e53848452b6bf8",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in ea58f45b43fcabef02019c5f8d2b3c79ba3340ca:\r\n\r\nAt first it seems more optimal to keep taking `bool wtxid` as a function parameter, and assume our `GenTxidVariant`s are of the expected type. The current way gives the impression that we may be mixing `Txid` with `Wtxid` for the same peer.\r\n\r\n```suggestion\r\n    indexed_transaction_set::const_iterator j = wtxid ? get_iter_from_wtxid(std::get<Wtxid>(hashb)) : mapTx.find(std::get<Txid>(hashb));\r\n```\r\nA strong argument against reverting to that is that `std::get` still checks the index matches internally, and `std::variant` has no zero-overhead alternative. So we might as well use `std::visit` and drop the function parameter as you have done.\r\n\r\nMight be worth adding something to the commit message such as:\r\n\"Now that we are storing `CTxMemPool::CompareDepthAndScore` parameters using `std::variant` we have no portable zero-overhead way of accessing them, so use `std::visit` and drop `bool wtxid` in-parameter.\"",
      "created_at": "2025-06-09T11:26:01Z",
      "updated_at": "2025-06-09T13:20:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2135549808",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2135549808"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": 806,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 809,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2135710312",
      "pull_request_review_id": 2909638652,
      "id": 2135710312,
      "node_id": "PRRC_kwDOABII585_TFpo",
      "diff_hunk": "@@ -1583,7 +1584,7 @@ void PeerManagerImpl::ReattemptInitialBroadcast(CScheduler& scheduler)\n         CTransactionRef tx = m_mempool.get(txid);\n \n         if (tx != nullptr) {\n-            RelayTransaction(txid, tx->GetWitnessHash());\n+            RelayTransaction(Txid::FromUint256(txid), tx->GetWitnessHash());",
      "path": "src/net_processing.cpp",
      "position": 41,
      "original_position": 42,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "b740b6f9479a2351cd3b66a0f6e53848452b6bf8",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: It's tempting to avoid this change in the final diff through making `unbroadcast_txids` more strongly typed:\r\n\r\n<details><summary>Diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 1246628b75..06b8a5e39f 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -1578,13 +1578,13 @@ void PeerManagerImpl::InitializeNode(const CNode& node, ServiceFlags our_service\r\n \r\n void PeerManagerImpl::ReattemptInitialBroadcast(CScheduler& scheduler)\r\n {\r\n-    std::set<uint256> unbroadcast_txids = m_mempool.GetUnbroadcastTxs();\r\n+    std::set<Txid> unbroadcast_txids = m_mempool.GetUnbroadcastTxs();\r\n \r\n     for (const auto& txid : unbroadcast_txids) {\r\n         CTransactionRef tx = m_mempool.get(txid);\r\n \r\n         if (tx != nullptr) {\r\n-            RelayTransaction(Txid::FromUint256(txid), tx->GetWitnessHash());\r\n+            RelayTransaction(txid, tx->GetWitnessHash());\r\n         } else {\r\n             m_mempool.RemoveUnbroadcastTx(txid, true);\r\n         }\r\ndiff --git a/src/node/mempool_persist.cpp b/src/node/mempool_persist.cpp\r\nindex 437645f139..488f3ad195 100644\r\n--- a/src/node/mempool_persist.cpp\r\n+++ b/src/node/mempool_persist.cpp\r\n@@ -127,7 +127,7 @@ bool LoadMempool(CTxMemPool& pool, const fs::path& load_path, Chainstate& active\r\n             }\r\n         }\r\n \r\n-        std::set<uint256> unbroadcast_txids;\r\n+        std::set<Txid> unbroadcast_txids;\r\n         file >> unbroadcast_txids;\r\n         if (opts.apply_unbroadcast_set) {\r\n             unbroadcast = unbroadcast_txids.size();\r\n@@ -152,7 +152,7 @@ bool DumpMempool(const CTxMemPool& pool, const fs::path& dump_path, FopenFn mock\r\n \r\n     std::map<uint256, CAmount> mapDeltas;\r\n     std::vector<TxMempoolInfo> vinfo;\r\n-    std::set<uint256> unbroadcast_txids;\r\n+    std::set<Txid> unbroadcast_txids;\r\n \r\n     static Mutex dump_mutex;\r\n     LOCK(dump_mutex);\r\ndiff --git a/src/txmempool.cpp b/src/txmempool.cpp\r\nindex 625d88d807..f311df2581 100644\r\n--- a/src/txmempool.cpp\r\n+++ b/src/txmempool.cpp\r\n@@ -1083,7 +1083,7 @@ size_t CTxMemPool::DynamicMemoryUsage() const {\r\n     return memusage::MallocUsage(sizeof(CTxMemPoolEntry) + 15 * sizeof(void*)) * mapTx.size() + memusage::DynamicUsage(mapNextTx) + memusage::DynamicUsage(mapDeltas) + memusage::DynamicUsage(txns_randomized) + cachedInnerUsage;\r\n }\r\n \r\n-void CTxMemPool::RemoveUnbroadcastTx(const uint256& txid, const bool unchecked) {\r\n+void CTxMemPool::RemoveUnbroadcastTx(const Txid& txid, const bool unchecked) {\r\n     LOCK(cs);\r\n \r\n     if (m_unbroadcast_txids.erase(txid))\r\ndiff --git a/src/txmempool.h b/src/txmempool.h\r\nindex e61ba9d4ca..5175b8bea8 100644\r\n--- a/src/txmempool.h\r\n+++ b/src/txmempool.h\r\n@@ -411,7 +411,7 @@ private:\r\n     /**\r\n      * Track locally submitted transactions to periodically retry initial broadcast.\r\n      */\r\n-    std::set<uint256> m_unbroadcast_txids GUARDED_BY(cs);\r\n+    std::set<Txid> m_unbroadcast_txids GUARDED_BY(cs);\r\n \r\n \r\n     /**\r\n @@ -678,26 +678,26 @@ public:\r\n     size_t DynamicMemoryUsage() const;\r\n \r\n     /** Adds a transaction to the unbroadcast set */\r\n-    void AddUnbroadcastTx(const uint256& txid)\r\n+    void AddUnbroadcastTx(const Txid& txid)\r\n     {\r\n         LOCK(cs);\r\n         // Sanity check the transaction is in the mempool & insert into\r\n         // unbroadcast set.\r\n-        if (exists(Txid::FromUint256(txid))) m_unbroadcast_txids.insert(txid);\r\n+        if (exists(txid)) m_unbroadcast_txids.insert(txid);\r\n     };\r\n \r\n     /** Removes a transaction from the unbroadcast set */\r\n-    void RemoveUnbroadcastTx(const uint256& txid, const bool unchecked = false);\r\n+    void RemoveUnbroadcastTx(const Txid& txid, const bool unchecked = false);\r\n \r\n     /** Returns transactions in unbroadcast set */\r\n-    std::set<uint256> GetUnbroadcastTxs() const\r\n+    std::set<Txid> GetUnbroadcastTxs() const\r\n     {\r\n         LOCK(cs);\r\n         return m_unbroadcast_txids;\r\n     }\r\n \r\n     /** Returns whether a txid is in the unbroadcast set */\r\n-    bool IsUnbroadcastTx(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(cs)\r\n+    bool IsUnbroadcastTx(const Txid& txid) const EXCLUSIVE_LOCKS_REQUIRED(cs)\r\n     {\r\n         AssertLockHeld(cs);\r\n         return m_unbroadcast_txids.count(txid) != 0;\r\n```\r\n</details>\r\n\r\nEdit: Added missing part of diff.",
      "created_at": "2025-06-09T13:19:53Z",
      "updated_at": "2025-06-11T07:47:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2135710312",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2135710312"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1586,
      "original_line": 1586,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2138092334",
      "pull_request_review_id": 2913900830,
      "id": 2138092334,
      "node_id": "PRRC_kwDOABII585_cLMu",
      "diff_hunk": "@@ -5770,7 +5774,7 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                                 txinfo.tx->GetWitnessHash().ToUint256() :\n                                 txinfo.tx->GetHash().ToUint256(),\n                         };\n-                        tx_relay->m_tx_inventory_to_send.erase(inv.hash);\n+                        tx_relay->m_tx_inventory_to_send.erase(Txid::FromUint256(inv.hash));",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 86,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "ea58f45b43fcabef02019c5f8d2b3c79ba3340ca",
      "in_reply_to_id": 2135464192,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good catch, fixed. It's eventually changed to `ToGenTxid(inv)` so I use `ToVariant()` here and remove that later on.",
      "created_at": "2025-06-10T14:44:34Z",
      "updated_at": "2025-06-10T14:44:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2138092334",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2138092334"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5777,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2138107221",
      "pull_request_review_id": 2913927895,
      "id": 2138107221,
      "node_id": "PRRC_kwDOABII585_cO1V",
      "diff_hunk": "@@ -2166,11 +2167,17 @@ void PeerManagerImpl::RelayTransaction(const uint256& txid, const uint256& wtxid\n         // in the announcement.\n         if (tx_relay->m_next_inv_send_time == 0s) continue;\n \n-        const uint256& hash{peer.m_wtxid_relay ? wtxid : txid};\n-        if (!tx_relay->m_tx_inventory_known_filter.contains(hash)) {\n-            tx_relay->m_tx_inventory_to_send.insert(hash);\n+        GenTxid gtxid;\n+        if (peer.m_wtxid_relay) {\n+            gtxid = wtxid;\n+        } else {\n+            gtxid = txid;\n         }",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 76,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "b740b6f9479a2351cd3b66a0f6e53848452b6bf8",
      "in_reply_to_id": 2135498545,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed. I thought there was some reason I chose not to do this from the start, but I forgot.. so yeah I agree this is better.",
      "created_at": "2025-06-10T14:49:06Z",
      "updated_at": "2025-06-10T14:49:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2138107221",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2138107221"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": 2170,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2175,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2138114543",
      "pull_request_review_id": 2913939946,
      "id": 2138114543,
      "node_id": "PRRC_kwDOABII585_cQnv",
      "diff_hunk": "@@ -794,18 +795,26 @@ void CTxMemPool::check(const CCoinsViewCache& active_coins_tip, int64_t spendhei\n     assert(innerUsage == cachedInnerUsage);\n }\n \n-bool CTxMemPool::CompareDepthAndScore(const uint256& hasha, const uint256& hashb, bool wtxid)\n+bool CTxMemPool::CompareDepthAndScore(const GenTxid& hasha, const GenTxid& hashb)\n {\n     /* Return `true` if hasha should be considered sooner than hashb. Namely when:\n      *   a is not in the mempool, but b is\n      *   both are in the mempool and a has fewer ancestors than b\n      *   both are in the mempool and a has a higher score than b\n      */\n     LOCK(cs);\n-    indexed_transaction_set::const_iterator j = wtxid ? get_iter_from_wtxid(hashb) : mapTx.find(hashb);\n+    indexed_transaction_set::const_iterator j = std::visit(util::Overloaded{\n+        [this](const Wtxid& wtxid) EXCLUSIVE_LOCKS_REQUIRED(cs) { return get_iter_from_wtxid(wtxid); },\n+        [this](const Txid& txid) EXCLUSIVE_LOCKS_REQUIRED(cs) { return mapTx.find(txid); }\n+    }, hashb);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "b740b6f9479a2351cd3b66a0f6e53848452b6bf8",
      "in_reply_to_id": 2135549808,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks for reviewing. I don't think I can improve upon your suggested commit message, so hope you don't mind that I took this directly.",
      "created_at": "2025-06-10T14:51:05Z",
      "updated_at": "2025-06-10T14:51:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2138114543",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2138114543"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": 806,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 809,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2138142820",
      "pull_request_review_id": 2913984446,
      "id": 2138142820,
      "node_id": "PRRC_kwDOABII585_cXhk",
      "diff_hunk": "@@ -1583,7 +1584,7 @@ void PeerManagerImpl::ReattemptInitialBroadcast(CScheduler& scheduler)\n         CTransactionRef tx = m_mempool.get(txid);\n \n         if (tx != nullptr) {\n-            RelayTransaction(txid, tx->GetWitnessHash());\n+            RelayTransaction(Txid::FromUint256(txid), tx->GetWitnessHash());",
      "path": "src/net_processing.cpp",
      "position": 41,
      "original_position": 42,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "b740b6f9479a2351cd3b66a0f6e53848452b6bf8",
      "in_reply_to_id": 2135710312,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm leaving the rest of the mempool for the next (and final) type safety PR. My goal for this PR is to only touch GenTxid instances. I think if I start changing things here, it cascades and I would have to address a lot more of the mempool.",
      "created_at": "2025-06-10T15:01:29Z",
      "updated_at": "2025-06-10T15:01:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2138142820",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2138142820"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1586,
      "original_line": 1586,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2139451786",
      "pull_request_review_id": 2916032256,
      "id": 2139451786,
      "node_id": "PRRC_kwDOABII585_hXGK",
      "diff_hunk": "@@ -1583,7 +1584,7 @@ void PeerManagerImpl::ReattemptInitialBroadcast(CScheduler& scheduler)\n         CTransactionRef tx = m_mempool.get(txid);\n \n         if (tx != nullptr) {\n-            RelayTransaction(txid, tx->GetWitnessHash());\n+            RelayTransaction(Txid::FromUint256(txid), tx->GetWitnessHash());",
      "path": "src/net_processing.cpp",
      "position": 41,
      "original_position": 42,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "b740b6f9479a2351cd3b66a0f6e53848452b6bf8",
      "in_reply_to_id": 2135710312,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah, makes sense to draw the line somewhere. (Noticed I had accidentally omitted the last 30 lines of the diff, fixed FWIW).",
      "created_at": "2025-06-11T07:49:04Z",
      "updated_at": "2025-06-11T12:29:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2139451786",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2139451786"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1586,
      "original_line": 1586,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2139469824",
      "pull_request_review_id": 2916032256,
      "id": 2139469824,
      "node_id": "PRRC_kwDOABII585_hbgA",
      "diff_hunk": "@@ -5810,14 +5808,15 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                     while (!vInvTx.empty() && nRelayedTransactions < broadcast_max) {\n                         // Fetch the top element from the heap\n                         std::pop_heap(vInvTx.begin(), vInvTx.end(), compareInvMempoolOrder);\n-                        std::set<uint256>::iterator it = vInvTx.back();\n+                        std::set<GenTxidVariant>::iterator it = vInvTx.back();\n                         vInvTx.pop_back();\n-                        uint256 hash = *it;\n-                        CInv inv(peer->m_wtxid_relay ? MSG_WTX : MSG_TX, hash);\n+                        GenTxidVariant hash = *it;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 112,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "a105a10d71c266cf7971fc66109c9ac8558e6d60",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in a105a10d71c266cf7971fc66109c9ac8558e6d60:\r\nCould avoid copy as `it` will keep the instance alive.\r\n```C++\r\nconst GenTxidVariant& hash = *it;\r\n```",
      "created_at": "2025-06-11T07:58:25Z",
      "updated_at": "2025-06-11T12:29:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2139469824",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2139469824"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5813,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2139485731",
      "pull_request_review_id": 2916032256,
      "id": 2139485731,
      "node_id": "PRRC_kwDOABII585_hfYj",
      "diff_hunk": "@@ -2437,7 +2439,9 @@ void PeerManagerImpl::ProcessGetData(CNode& pfrom, Peer& peer, const std::atomic\n             continue;\n         }\n \n-        CTransactionRef tx = FindTxForGetData(*tx_relay, ToGenTxid(inv));\n+        CTransactionRef tx{inv.IsMsgWtx() ?\n+                                 FindTxForGetData(*tx_relay, Wtxid::FromUint256(inv.hash)) :\n+                                 FindTxForGetData(*tx_relay, Txid::FromUint256(inv.hash))};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "ab954a169f07c86f85e292d3f488df0cc066b722",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "(nit in ab954a169f07c86f85e292d3f488df0cc066b722: Happy to see Freemasons have embraced Bitcoin. Might be neater to have 32 spaces for a multiple of 4 instead of current 33).",
      "created_at": "2025-06-11T08:06:43Z",
      "updated_at": "2025-06-11T12:29:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2139485731",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2139485731"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": 2443,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2444,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2139967356",
      "pull_request_review_id": 2916032256,
      "id": 2139967356,
      "node_id": "PRRC_kwDOABII585_jU98",
      "diff_hunk": "@@ -435,7 +426,7 @@ class TxRequestTracker::Impl {\n             auto it_prev = std::prev(it);\n             // The next best CANDIDATE_READY, if any, immediately precedes the REQUESTED or CANDIDATE_BEST\n             // announcement in the ByTxHash index.\n-            if (it_prev->m_txhash == it->m_txhash && it_prev->GetState() == State::CANDIDATE_READY) {\n+            if (it_prev->m_txhash.ToUint256() == it->m_txhash.ToUint256() && it_prev->GetState() == State::CANDIDATE_READY) {",
      "path": "src/txrequest.cpp",
      "position": null,
      "original_position": 91,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "d5a6e7a0a40bb78c2fcadd2662f2d64b86c374b7",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "So for segwit peers we use `Wtxid` and for non-segwit peers we use `Txid`?\r\nScary that the `variant` fails comparison although the hash is the same, so we have to manually find places where it shouldn't matter and do this kind of thing. :\\\r\n\r\nMight be easier to ACK this PR if you peel off txrequest.cpp/h into it's own PR.",
      "created_at": "2025-06-11T12:08:08Z",
      "updated_at": "2025-06-11T12:29:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2139967356",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2139967356"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 429,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2142885418",
      "pull_request_review_id": 2921401299,
      "id": 2142885418,
      "node_id": "PRRC_kwDOABII585_udYq",
      "diff_hunk": "@@ -435,7 +426,7 @@ class TxRequestTracker::Impl {\n             auto it_prev = std::prev(it);\n             // The next best CANDIDATE_READY, if any, immediately precedes the REQUESTED or CANDIDATE_BEST\n             // announcement in the ByTxHash index.\n-            if (it_prev->m_txhash == it->m_txhash && it_prev->GetState() == State::CANDIDATE_READY) {\n+            if (it_prev->m_txhash.ToUint256() == it->m_txhash.ToUint256() && it_prev->GetState() == State::CANDIDATE_READY) {",
      "path": "src/txrequest.cpp",
      "position": null,
      "original_position": 91,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "d5a6e7a0a40bb78c2fcadd2662f2d64b86c374b7",
      "in_reply_to_id": 2139967356,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah the inv should match the peer's wtxid relay setting. The announcements are converted to GenTxids in `ProcessMessage` and that's what's passed into `AddTxAnnouncement` and used throughout `txdownloadman_impl` and `txrequest`.\r\n\r\nI would prefer to keep it all in this PR, as I don't want both the old GenTxid class and the new variant in master. But I agree it's a bit iffy to have to manually ensure that we didn't miss a place where a previous `uint256` comparison is now suddenly a `GenTxid` comparison. The patch I provide at the top should catch anywhere that I might've missed.\r\n\r\nYes, with this PR's change, we would have be intentional about when we're comparing GenTxid objects (type first, then hash) and when we're comparing only the underlying hash. Another option would be to make the patch an actual part of the code, deleting the GenTxid comparators and having custom comparators wherever GenTxids are involved. This felt like overkill to me though, and I think one of the goals of this type safety refactor is to, from now on, differentiate between the transaction identifiers and the underlying transaction hash. In that case, it makes sense to me to have a standard way to compare GenTxids and then make the conversion to `uint256` explicit if comparison of the hash is needed.",
      "created_at": "2025-06-12T14:13:48Z",
      "updated_at": "2025-06-12T18:26:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2142885418",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2142885418"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 429,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2142885949",
      "pull_request_review_id": 2921402307,
      "id": 2142885949,
      "node_id": "PRRC_kwDOABII585_udg9",
      "diff_hunk": "@@ -5810,14 +5808,15 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n                     while (!vInvTx.empty() && nRelayedTransactions < broadcast_max) {\n                         // Fetch the top element from the heap\n                         std::pop_heap(vInvTx.begin(), vInvTx.end(), compareInvMempoolOrder);\n-                        std::set<uint256>::iterator it = vInvTx.back();\n+                        std::set<GenTxidVariant>::iterator it = vInvTx.back();\n                         vInvTx.pop_back();\n-                        uint256 hash = *it;\n-                        CInv inv(peer->m_wtxid_relay ? MSG_WTX : MSG_TX, hash);\n+                        GenTxidVariant hash = *it;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 112,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "a105a10d71c266cf7971fc66109c9ac8558e6d60",
      "in_reply_to_id": 2139469824,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We erase the iterator soon after but still use the hash, so making a copy here is correct.",
      "created_at": "2025-06-12T14:14:03Z",
      "updated_at": "2025-06-12T14:14:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2142885949",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2142885949"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5813,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2142887549",
      "pull_request_review_id": 2921405002,
      "id": 2142887549,
      "node_id": "PRRC_kwDOABII585_ud59",
      "diff_hunk": "@@ -2437,7 +2439,9 @@ void PeerManagerImpl::ProcessGetData(CNode& pfrom, Peer& peer, const std::atomic\n             continue;\n         }\n \n-        CTransactionRef tx = FindTxForGetData(*tx_relay, ToGenTxid(inv));\n+        CTransactionRef tx{inv.IsMsgWtx() ?\n+                                 FindTxForGetData(*tx_relay, Wtxid::FromUint256(inv.hash)) :\n+                                 FindTxForGetData(*tx_relay, Txid::FromUint256(inv.hash))};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "ab954a169f07c86f85e292d3f488df0cc066b722",
      "in_reply_to_id": 2139485731,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'll include this with my next push.",
      "created_at": "2025-06-12T14:14:47Z",
      "updated_at": "2025-06-12T14:14:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2142887549",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2142887549"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": 2443,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2444,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2143425747",
      "pull_request_review_id": 2922292106,
      "id": 2143425747,
      "node_id": "PRRC_kwDOABII585_whTT",
      "diff_hunk": "@@ -435,7 +426,7 @@ class TxRequestTracker::Impl {\n             auto it_prev = std::prev(it);\n             // The next best CANDIDATE_READY, if any, immediately precedes the REQUESTED or CANDIDATE_BEST\n             // announcement in the ByTxHash index.\n-            if (it_prev->m_txhash == it->m_txhash && it_prev->GetState() == State::CANDIDATE_READY) {\n+            if (it_prev->m_txhash.ToUint256() == it->m_txhash.ToUint256() && it_prev->GetState() == State::CANDIDATE_READY) {",
      "path": "src/txrequest.cpp",
      "position": null,
      "original_position": 91,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "d5a6e7a0a40bb78c2fcadd2662f2d64b86c374b7",
      "in_reply_to_id": 2139967356,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Had a closer look at `TxRequestTracker`.\r\n\r\n1. I support replacing `uint256 Announcement::m_txhash`+`bool Announcement::m_is_wtxid` with a `GenTxId`, but would prefer renaming the field just to force out any issues.\r\n\r\n2. On master the interface seems to deliberately use either `GenTxId` or `uint256` depending on what we want to match on:\r\nhttps://github.com/bitcoin/bitcoin/blob/1be688f575151109816fa8956d54a5b5220e3b00/src/txrequest.h#L135-L178\r\n  All of the below are changed in the current version of this PR to use `GenTxId` instead of `uint256`, but then only end up using the `uint256`-part internally:\r\n   * `ForgetTxHash()`\r\n   * `RequestedTx()`\r\n   * `ReceivedResponse()`\r\n   * `GetCandidatePeers()`\r\n   * `ComputePriority()`\r\n\r\n   It feels safer to at least drop those kind of changes on principle, even if they currently do not introduce bugs. We don't want to accidentally introduce cases where a `Wtxid` of a transaction without any witness data does not match a `Txid` with the same exact hash.",
      "created_at": "2025-06-12T19:00:37Z",
      "updated_at": "2025-06-19T21:38:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2143425747",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2143425747"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 429,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2150489952",
      "pull_request_review_id": 2932907497,
      "id": 2150489952,
      "node_id": "PRRC_kwDOABII586ALd9g",
      "diff_hunk": "@@ -437,6 +437,19 @@ class GenTxid\n     const uint256& GetHash() const LIFETIMEBOUND { return m_hash; }\n     friend bool operator==(const GenTxid& a, const GenTxid& b) { return a.m_is_wtxid == b.m_is_wtxid && a.m_hash == b.m_hash; }\n     friend bool operator<(const GenTxid& a, const GenTxid& b) { return std::tie(a.m_is_wtxid, a.m_hash) < std::tie(b.m_is_wtxid, b.m_hash); }\n+\n+    GenTxidVariant ToVariant() const {\n+        return m_is_wtxid ?\n+            GenTxidVariant{Wtxid::FromUint256(m_hash)} :\n+            GenTxidVariant{Txid::FromUint256(m_hash)};\n+    }\n+\n+    static GenTxid FromVariant(const GenTxidVariant& variant) {\n+        return GenTxid{\n+            variant.index() == 1, // true if Wtxid, false if Txid",
      "path": "src/primitives/transaction.h",
      "position": null,
      "original_position": 13,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "715b81ef23c9944386d7186fe4590cf53e3df455",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "in commit 715b81ef23c9944386d7186fe4590cf53e3df455: nit: avoids the magic number and is more self-explanatory\r\n```suggestion\r\n            std::holds_alternative<::Wtxid>(variant),\r\n```\r\n\r\n(but no big deal, especially since this code is deleted in the last commit anyways)",
      "created_at": "2025-06-16T17:18:06Z",
      "updated_at": "2025-06-16T18:02:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2150489952",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2150489952"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 449,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2150560490",
      "pull_request_review_id": 2932907497,
      "id": 2150560490,
      "node_id": "PRRC_kwDOABII586ALvLq",
      "diff_hunk": "@@ -220,11 +221,11 @@ bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid,\n     //     MAX_PEER_TX_REQUEST_IN_FLIGHT requests in flight (and don't have NetPermissionFlags::Relay).\n     auto delay{0us};\n     if (!info.m_preferred) delay += NONPREF_PEER_TX_DELAY;\n-    if (!gtxid.IsWtxid() && m_num_wtxid_peers > 0) delay += TXID_RELAY_DELAY;\n+    if (!std::holds_alternative<Wtxid>(gtxid) && m_num_wtxid_peers > 0) delay += TXID_RELAY_DELAY;",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "5b7119fd54d75f11ca9a4fe8eb19ccb344a38b8d",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I wonder if it's worth it to retain the `.IsWtxid()` interface in the variant-based `GenTxid` class for better readability and shorter code at the call-sites? Should be as simple as e.g.\r\n```\r\nclass GenTxid : public std::variant<Txid, Wtxid>\r\n{\r\npublic:\r\n    .....\r\n    bool IsWtxid() const { return std::holds_alternative<Wtxid>(*this); }\r\n    .....\r\n}\r\n```",
      "created_at": "2025-06-16T18:02:03Z",
      "updated_at": "2025-06-16T18:02:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2150560490",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2150560490"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": 223,
      "start_side": "LEFT",
      "line": null,
      "original_line": 224,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2152615589",
      "pull_request_review_id": 2936221034,
      "id": 2152615589,
      "node_id": "PRRC_kwDOABII586ATk6l",
      "diff_hunk": "@@ -437,6 +437,19 @@ class GenTxid\n     const uint256& GetHash() const LIFETIMEBOUND { return m_hash; }\n     friend bool operator==(const GenTxid& a, const GenTxid& b) { return a.m_is_wtxid == b.m_is_wtxid && a.m_hash == b.m_hash; }\n     friend bool operator<(const GenTxid& a, const GenTxid& b) { return std::tie(a.m_is_wtxid, a.m_hash) < std::tie(b.m_is_wtxid, b.m_hash); }\n+\n+    GenTxidVariant ToVariant() const {\n+        return m_is_wtxid ?\n+            GenTxidVariant{Wtxid::FromUint256(m_hash)} :\n+            GenTxidVariant{Txid::FromUint256(m_hash)};\n+    }\n+\n+    static GenTxid FromVariant(const GenTxidVariant& variant) {\n+        return GenTxid{\n+            variant.index() == 1, // true if Wtxid, false if Txid",
      "path": "src/primitives/transaction.h",
      "position": null,
      "original_position": 13,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "715b81ef23c9944386d7186fe4590cf53e3df455",
      "in_reply_to_id": 2150489952,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2025-06-17T15:50:16Z",
      "updated_at": "2025-06-17T15:50:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2152615589",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2152615589"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 449,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2152624485",
      "pull_request_review_id": 2936236530,
      "id": 2152624485,
      "node_id": "PRRC_kwDOABII586ATnFl",
      "diff_hunk": "@@ -220,11 +221,11 @@ bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid,\n     //     MAX_PEER_TX_REQUEST_IN_FLIGHT requests in flight (and don't have NetPermissionFlags::Relay).\n     auto delay{0us};\n     if (!info.m_preferred) delay += NONPREF_PEER_TX_DELAY;\n-    if (!gtxid.IsWtxid() && m_num_wtxid_peers > 0) delay += TXID_RELAY_DELAY;\n+    if (!std::holds_alternative<Wtxid>(gtxid) && m_num_wtxid_peers > 0) delay += TXID_RELAY_DELAY;",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "5b7119fd54d75f11ca9a4fe8eb19ccb344a38b8d",
      "in_reply_to_id": 2150560490,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, agreed that that's better. I also changed the comparator in the new class to use `IsWtxid()` over `index()`.",
      "created_at": "2025-06-17T15:53:48Z",
      "updated_at": "2025-06-17T15:53:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2152624485",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2152624485"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": 223,
      "start_side": "LEFT",
      "line": null,
      "original_line": 224,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2157099448",
      "pull_request_review_id": 2922292106,
      "id": 2157099448,
      "node_id": "PRRC_kwDOABII586Akrm4",
      "diff_hunk": "@@ -76,4 +80,21 @@ using Txid = transaction_identifier<false>;\n /** Wtxid commits to all transaction fields including the witness. */\n using Wtxid = transaction_identifier<true>;\n \n+/** A generic txid reference (txid or wtxid). */\n+class GenTxid : public std::variant<Txid, Wtxid>\n+{\n+public:\n+    using variant::variant;\n+\n+    bool IsWtxid() const { return std::holds_alternative<Wtxid>(*this); }\n+\n+    const uint256& ToUint256() const LIFETIMEBOUND {",
      "path": "src/util/transaction_identifier.h",
      "position": null,
      "original_position": 23,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "f73fe949904de327bae75a3174773925c5aae612",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Braces should be on newline for functions as per developer-notes.md, here and for the next one:\r\n```suggestion\r\n    const uint256& ToUint256() const LIFETIMEBOUND\r\n    {\r\n```",
      "created_at": "2025-06-19T13:59:30Z",
      "updated_at": "2025-06-19T21:37:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2157099448",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2157099448"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2161385282",
      "pull_request_review_id": 2949718938,
      "id": 2161385282,
      "node_id": "PRRC_kwDOABII586A1B9C",
      "diff_hunk": "@@ -76,4 +80,21 @@ using Txid = transaction_identifier<false>;\n /** Wtxid commits to all transaction fields including the witness. */\n using Wtxid = transaction_identifier<true>;\n \n+/** A generic txid reference (txid or wtxid). */",
      "path": "src/util/transaction_identifier.h",
      "position": null,
      "original_position": 15,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "f73fe949904de327bae75a3174773925c5aae612",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: this docstring imo doesn't add anything useful. Would either remove or beef up (e.g. explaining when (not) to use this).",
      "created_at": "2025-06-23T11:27:43Z",
      "updated_at": "2025-06-24T11:57:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2161385282",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2161385282"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 83,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2161772934",
      "pull_request_review_id": 2949718938,
      "id": 2161772934,
      "node_id": "PRRC_kwDOABII586A2gmG",
      "diff_hunk": "@@ -5443,19 +5447,17 @@ namespace {\n class CompareInvMempoolOrder\n {\n     CTxMemPool* mp;\n-    bool m_wtxid_relay;\n public:\n-    explicit CompareInvMempoolOrder(CTxMemPool *_mempool, bool use_wtxid)\n+    explicit CompareInvMempoolOrder(CTxMemPool *_mempool)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 144,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "f73fe949904de327bae75a3174773925c5aae612",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "clang-tidy nit:\r\n\r\n```suggestion\r\n    explicit CompareInvMempoolOrder(CTxMemPool* _mempool)\r\n```",
      "created_at": "2025-06-23T14:27:39Z",
      "updated_at": "2025-06-24T11:57:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2161772934",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2161772934"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5451,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163691934",
      "pull_request_review_id": 2949718938,
      "id": 2163691934,
      "node_id": "PRRC_kwDOABII586A91Ge",
      "diff_hunk": "@@ -437,6 +437,19 @@ class GenTxid\n     const uint256& GetHash() const LIFETIMEBOUND { return m_hash; }\n     friend bool operator==(const GenTxid& a, const GenTxid& b) { return a.m_is_wtxid == b.m_is_wtxid && a.m_hash == b.m_hash; }\n     friend bool operator<(const GenTxid& a, const GenTxid& b) { return std::tie(a.m_is_wtxid, a.m_hash) < std::tie(b.m_is_wtxid, b.m_hash); }\n+\n+    GenTxidVariant ToVariant() const {",
      "path": "src/primitives/transaction.h",
      "position": null,
      "original_position": 5,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "5b5abf88de7975babe2264456076f85f1c9f11a0",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "clang-tidy nit for 5b5abf88de7975babe2264456076f85f1c9f11a0:\r\n\r\n<details>\r\n<summary>git diff on a6f1af5f55</summary>\r\n\r\n```diff\r\ndiff --git a/src/primitives/transaction.h b/src/primitives/transaction.h\r\nindex 54c2fb578f..adadb2a3e7 100644\r\n--- a/src/primitives/transaction.h\r\n+++ b/src/primitives/transaction.h\r\n@@ -438,17 +438,18 @@ public:\r\n     friend bool operator==(const GenTxid& a, const GenTxid& b) { return a.m_is_wtxid == b.m_is_wtxid && a.m_hash == b.m_hash; }\r\n     friend bool operator<(const GenTxid& a, const GenTxid& b) { return std::tie(a.m_is_wtxid, a.m_hash) < std::tie(b.m_is_wtxid, b.m_hash); }\r\n \r\n-    GenTxidVariant ToVariant() const {\r\n+    GenTxidVariant ToVariant() const\r\n+    {\r\n         return m_is_wtxid ?\r\n-            GenTxidVariant{Wtxid::FromUint256(m_hash)} :\r\n-            GenTxidVariant{Txid::FromUint256(m_hash)};\r\n+                   GenTxidVariant{Wtxid::FromUint256(m_hash)} :\r\n+                   GenTxidVariant{Txid::FromUint256(m_hash)};\r\n     }\r\n \r\n-    static GenTxid FromVariant(const GenTxidVariant& variant) {\r\n+    static GenTxid FromVariant(const GenTxidVariant& variant)\r\n+    {\r\n         return GenTxid{\r\n             std::holds_alternative<::Wtxid>(variant),\r\n-            variant.ToUint256()\r\n-        };\r\n+            variant.ToUint256()};\r\n     }\r\n };\r\n \r\ndiff --git a/src/util/transaction_identifier.h b/src/util/transaction_identifier.h\r\nindex 4137dd7040..39104a1a5c 100644\r\n--- a/src/util/transaction_identifier.h\r\n+++ b/src/util/transaction_identifier.h\r\n@@ -88,11 +88,13 @@ public:\r\n \r\n     bool IsWtxid() const { return std::holds_alternative<Wtxid>(*this); }\r\n \r\n-    const uint256& ToUint256() const LIFETIMEBOUND {\r\n+    const uint256& ToUint256() const LIFETIMEBOUND\r\n+    {\r\n         return std::visit([](const auto& id) -> const uint256& { return id.ToUint256(); }, *this);\r\n     }\r\n \r\n-    friend auto operator<=>(const GenTxidVariant& a, const GenTxidVariant& b) {\r\n+    friend auto operator<=>(const GenTxidVariant& a, const GenTxidVariant& b)\r\n+    {\r\n         return std::tuple(a.IsWtxid(), a.ToUint256()) <=> std::tuple(b.IsWtxid(), b.ToUint256());\r\n     }\r\n };\r\n\r\n```\r\n</details>\r\n",
      "created_at": "2025-06-24T11:19:10Z",
      "updated_at": "2025-06-24T11:57:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2163691934",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163691934"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 441,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163696012",
      "pull_request_review_id": 2949718938,
      "id": 2163696012,
      "node_id": "PRRC_kwDOABII586A92GM",
      "diff_hunk": "@@ -2437,7 +2439,9 @@ void PeerManagerImpl::ProcessGetData(CNode& pfrom, Peer& peer, const std::atomic\n             continue;\n         }\n \n-        CTransactionRef tx = FindTxForGetData(*tx_relay, ToGenTxid(inv));\n+        CTransactionRef tx{inv.IsMsgWtx() ?\n+                                FindTxForGetData(*tx_relay, Wtxid::FromUint256(inv.hash)) :",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "da9927139b0f4583c9245aa3b29185612f94cdc7",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "clang-tidy nit for da9927139b0f4583c9245aa3b29185612f94cdc7:\r\n\r\n<details>\r\n<summary>git diff on 07822f5386</summary>\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex df66d4c93d..a0ed1e2620 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -2440,8 +2440,8 @@ void PeerManagerImpl::ProcessGetData(CNode& pfrom, Peer& peer, const std::atomic\r\n         }\r\n \r\n         CTransactionRef tx{inv.IsMsgWtx() ?\r\n-                                FindTxForGetData(*tx_relay, Wtxid::FromUint256(inv.hash)) :\r\n-                                FindTxForGetData(*tx_relay, Txid::FromUint256(inv.hash))};\r\n+                               FindTxForGetData(*tx_relay, Wtxid::FromUint256(inv.hash)) :\r\n+                               FindTxForGetData(*tx_relay, Txid::FromUint256(inv.hash))};\r\n         if (tx) {\r\n             // WTX and WITNESS_TX imply we serialize with witness\r\n             const auto maybe_with_witness = (inv.IsMsgTx() ? TX_NO_WITNESS : TX_WITH_WITNESS);\r\ndiff --git a/src/validation.cpp b/src/validation.cpp\r\nindex 9d788b50f6..c0bc5f28fc 100644\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -1135,8 +1135,7 @@ bool MemPoolAccept::PackageMempoolChecks(const std::vector<CTransactionRef>& txn\r\n     AssertLockHeld(m_pool.cs);\r\n \r\n     // CheckPackageLimits expects the package transactions to not already be in the mempool.\r\n-    assert(std::all_of(txns.cbegin(), txns.cend(), [this](const auto& tx)\r\n-                       { return !m_pool.exists(tx->GetHash());}));\r\n+    assert(std::all_of(txns.cbegin(), txns.cend(), [this](const auto& tx) { return !m_pool.exists(tx->GetHash()); }));\r\n \r\n     assert(txns.size() == workspaces.size());\r\n \r\n@@ -1346,8 +1345,7 @@ bool MemPoolAccept::SubmitPackage(const ATMPArgs& args, std::vector<Workspace>&\r\n     AssertLockHeld(m_pool.cs);\r\n     // Sanity check: none of the transactions should be in the mempool, and none of the transactions\r\n     // should have a same-txid-different-witness equivalent in the mempool.\r\n-    assert(std::all_of(workspaces.cbegin(), workspaces.cend(), [this](const auto& ws){\r\n-        return !m_pool.exists(ws.m_ptx->GetHash()); }));\r\n+    assert(std::all_of(workspaces.cbegin(), workspaces.cend(), [this](const auto& ws) { return !m_pool.exists(ws.m_ptx->GetHash()); }));\r\n \r\n     bool all_submitted = true;\r\n     FinalizeSubpackage(args);\r\n\r\n```\r\n</details>\r\n",
      "created_at": "2025-06-24T11:21:29Z",
      "updated_at": "2025-06-24T11:57:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2163696012",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163696012"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2443,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163699389",
      "pull_request_review_id": 2949718938,
      "id": 2163699389,
      "node_id": "PRRC_kwDOABII586A9269",
      "diff_hunk": "@@ -122,14 +123,11 @@ void TxDownloadManagerImpl::BlockDisconnected()\n     RecentConfirmedTransactionsFilter().reset();\n }\n \n-bool TxDownloadManagerImpl::AlreadyHaveTx(const GenTxid& gtxid, bool include_reconsiderable)\n+bool TxDownloadManagerImpl::AlreadyHaveTx(const GenTxidVariant& gtxid, bool include_reconsiderable)\n {\n-    const uint256& hash = gtxid.GetHash();\n-\n-    if (gtxid.IsWtxid()) {\n+    bool in_orphanage = std::visit(util::Overloaded{",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "151ab0e50bf37dae4631ba0b7e6bdccf788cbc11",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "clang-tidy nit in 151ab0e50bf37dae4631ba0b7e6bdccf788cbc11:\r\n\r\n<details>\r\n<summary>git diff on 44c6c811ba</summary>\r\n\r\n```diff\r\ndiff --git a/src/node/txdownloadman_impl.cpp b/src/node/txdownloadman_impl.cpp\r\nindex c169c3bf41..054c8fb7dd 100644\r\n--- a/src/node/txdownloadman_impl.cpp\r\n+++ b/src/node/txdownloadman_impl.cpp\r\n@@ -126,21 +126,21 @@ void TxDownloadManagerImpl::BlockDisconnected()\r\n bool TxDownloadManagerImpl::AlreadyHaveTx(const GenTxidVariant& gtxid, bool include_reconsiderable)\r\n {\r\n     bool in_orphanage = std::visit(util::Overloaded{\r\n-        // Normal query by wtxid.\r\n-        [this](const Wtxid& wtxid) { return m_orphanage.HaveTx(wtxid); },\r\n-        // Never query by txid: it is possible that the transaction in the orphanage has the same\r\n-        // txid but a different witness, which would give us a false positive result. If we decided\r\n-        // not to request the transaction based on this result, an attacker could prevent us from\r\n-        // downloading a transaction by intentionally creating a malleated version of it.  While\r\n-        // only one (or none!) of these transactions can ultimately be confirmed, we have no way of\r\n-        // discerning which one that is, so the orphanage can store multiple transactions with the\r\n-        // same txid.\r\n-        //\r\n-        // While we won't query by txid, we can try to \"guess\" what the wtxid is based on the txid.\r\n-        // A non-segwit transaction's txid == wtxid. Query this txid \"casted\" to a wtxid. This will\r\n-        // help us find non-segwit transactions, saving bandwidth, and should have no false positives.\r\n-        [this](const Txid& txid) { return m_orphanage.HaveTx(Wtxid::FromUint256(txid.ToUint256())); }\r\n-    }, gtxid);\r\n+                                       // Normal query by wtxid.\r\n+                                       [this](const Wtxid& wtxid) { return m_orphanage.HaveTx(wtxid); },\r\n+                                       // Never query by txid: it is possible that the transaction in the orphanage has the same\r\n+                                       // txid but a different witness, which would give us a false positive result. If we decided\r\n+                                       // not to request the transaction based on this result, an attacker could prevent us from\r\n+                                       // downloading a transaction by intentionally creating a malleated version of it.  While\r\n+                                       // only one (or none!) of these transactions can ultimately be confirmed, we have no way of\r\n+                                       // discerning which one that is, so the orphanage can store multiple transactions with the\r\n+                                       // same txid.\r\n+                                       //\r\n+                                       // While we won't query by txid, we can try to \"guess\" what the wtxid is based on the txid.\r\n+                                       // A non-segwit transaction's txid == wtxid. Query this txid \"casted\" to a wtxid. This will\r\n+                                       // help us find non-segwit transactions, saving bandwidth, and should have no false positives.\r\n+                                       [this](const Txid& txid) { return m_orphanage.HaveTx(Wtxid::FromUint256(txid.ToUint256())); }},\r\n+                                   gtxid);\r\n \r\n     if (in_orphanage) return true;\r\n \r\n@@ -183,7 +183,7 @@ bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxidVariant&\r\n     if (const auto* wtxid = std::get_if<Wtxid>(&gtxid)) {\r\n         if (auto orphan_tx{m_orphanage.GetTx(*wtxid)}) {\r\n             auto unique_parents{GetUniqueParents(*orphan_tx)};\r\n-            std::erase_if(unique_parents, [&](const auto& txid){\r\n+            std::erase_if(unique_parents, [&](const auto& txid) {\r\n                 return AlreadyHaveTx(txid, /*include_reconsiderable=*/false);\r\n             });\r\n \r\n@@ -398,7 +398,7 @@ node::RejectedTxTodo TxDownloadManagerImpl::MempoolRejectedTx(const CTransaction\r\n                 // Filter parents that we already have.\r\n                 // Exclude m_lazy_recent_rejects_reconsiderable: the missing parent may have been\r\n                 // previously rejected for being too low feerate. This orphan might CPFP it.\r\n-                std::erase_if(unique_parents, [&](const auto& txid){\r\n+                std::erase_if(unique_parents, [&](const auto& txid) {\r\n                     return AlreadyHaveTx(txid, /*include_reconsiderable=*/false);\r\n                 });\r\n                 const auto now{GetTime<std::chrono::microseconds>()};\r\ndiff --git a/src/test/fuzz/txdownloadman.cpp b/src/test/fuzz/txdownloadman.cpp\r\nindex bdb38242f6..f2fb186b8e 100644\r\n--- a/src/test/fuzz/txdownloadman.cpp\r\n+++ b/src/test/fuzz/txdownloadman.cpp\r\n@@ -263,8 +263,7 @@ FUZZ_TARGET(txdownloadman, .init = initialize)\r\n                     // returned true.\r\n                     Assert(expect_work);\r\n                 }\r\n-            }\r\n-        );\r\n+            });\r\n         // Jump forwards or backwards\r\n         auto time_skip = fuzzed_data_provider.PickValueInArray(TIME_SKIPS);\r\n         if (fuzzed_data_provider.ConsumeBool()) time_skip *= -1;\r\n@@ -438,8 +437,7 @@ FUZZ_TARGET(txdownloadman_impl, .init = initialize)\r\n                     state_missing_inputs.Invalid(TxValidationResult::TX_MISSING_INPUTS, \"\");\r\n                     txdownload_impl.MempoolRejectedTx(ptx, state_missing_inputs, rand_peer, fuzzed_data_provider.ConsumeBool());\r\n                 }\r\n-            }\r\n-        );\r\n+            });\r\n \r\n         auto time_skip = fuzzed_data_provider.PickValueInArray(TIME_SKIPS);\r\n         if (fuzzed_data_provider.ConsumeBool()) time_skip *= -1;\r\n\r\n```\r\n</details>\r\n",
      "created_at": "2025-06-24T11:23:23Z",
      "updated_at": "2025-06-24T11:57:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2163699389",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163699389"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 128,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163701736",
      "pull_request_review_id": 2949718938,
      "id": 2163701736,
      "node_id": "PRRC_kwDOABII586A93fo",
      "diff_hunk": "@@ -262,31 +262,31 @@ bool TxDownloadManagerImpl::MaybeAddOrphanResolutionCandidate(const std::vector<\n     // Treat finding orphan resolution candidate as equivalent to the peer announcing all missing parents.\n     // In the future, orphan resolution may include more explicit steps\n     for (const auto& parent_txid : unique_parents) {\n-        m_txrequest.ReceivedInv(nodeid, GenTxid::Txid(parent_txid), info.m_preferred, now + delay);\n+        m_txrequest.ReceivedInv(nodeid, parent_txid, info.m_preferred, now + delay);\n     }\n     LogDebug(BCLog::TXPACKAGES, \"added peer=%d as a candidate for resolving orphan %s\\n\", nodeid, wtxid.ToString());\n     return true;\n }\n \n-std::vector<GenTxid> TxDownloadManagerImpl::GetRequestsToSend(NodeId nodeid, std::chrono::microseconds current_time)\n+std::vector<GenTxidVariant> TxDownloadManagerImpl::GetRequestsToSend(NodeId nodeid, std::chrono::microseconds current_time)\n {\n-    std::vector<GenTxid> requests;\n-    std::vector<std::pair<NodeId, GenTxid>> expired;\n+    std::vector<GenTxidVariant> requests;\n+    std::vector<std::pair<NodeId, GenTxidVariant>> expired;\n     auto requestable = m_txrequest.GetRequestable(nodeid, current_time, &expired);\n     for (const auto& entry : expired) {\n         LogDebug(BCLog::NET, \"timeout of inflight %s %s from peer=%d\\n\", entry.second.IsWtxid() ? \"wtx\" : \"tx\",\n-            entry.second.GetHash().ToString(), entry.first);\n+            entry.second.ToUint256().ToString(), entry.first);",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "6c2ba583d5dde911b4cf32edf5baf5acdb9824fb",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "clang-tidy nit in 6c2ba583d5dde911b4cf32edf5baf5acdb9824fb:\r\n\r\n<details>\r\n<summary>git diff on 50c04bce87</summary>\r\n\r\n```diff\r\ndiff --git a/src/node/txdownloadman_impl.cpp b/src/node/txdownloadman_impl.cpp\r\nindex 8db30d21d1..a514ac8143 100644\r\n--- a/src/node/txdownloadman_impl.cpp\r\n+++ b/src/node/txdownloadman_impl.cpp\r\n@@ -275,12 +275,12 @@ std::vector<GenTxidVariant> TxDownloadManagerImpl::GetRequestsToSend(NodeId node\r\n     auto requestable = m_txrequest.GetRequestable(nodeid, current_time, &expired);\r\n     for (const auto& entry : expired) {\r\n         LogDebug(BCLog::NET, \"timeout of inflight %s %s from peer=%d\\n\", entry.second.IsWtxid() ? \"wtx\" : \"tx\",\r\n-            entry.second.ToUint256().ToString(), entry.first);\r\n+                 entry.second.ToUint256().ToString(), entry.first);\r\n     }\r\n     for (const GenTxidVariant& gtxid : requestable) {\r\n         if (!AlreadyHaveTx(gtxid, /*include_reconsiderable=*/false)) {\r\n             LogDebug(BCLog::NET, \"Requesting %s %s peer=%d\\n\", gtxid.IsWtxid() ? \"wtx\" : \"tx\",\r\n-                gtxid.ToUint256().ToString(), nodeid);\r\n+                     gtxid.ToUint256().ToString(), nodeid);\r\n             requests.emplace_back(gtxid);\r\n             m_txrequest.RequestedTx(nodeid, gtxid, current_time + GETDATA_TX_INTERVAL);\r\n         } else {\r\ndiff --git a/src/test/txrequest_tests.cpp b/src/test/txrequest_tests.cpp\r\nindex 298586db37..e6b3e8bc15 100644\r\n--- a/src/test/txrequest_tests.cpp\r\n+++ b/src/test/txrequest_tests.cpp\r\n@@ -161,17 +161,18 @@ public:\r\n      *                   backwards (but note that the ordering of this event only follows the scenario's m_now.\r\n      */\r\n     void Check(NodeId peer, const std::vector<GenTxidVariant>& expected, size_t candidates, size_t inflight,\r\n-        size_t completed, const std::string& checkname,\r\n-        std::chrono::microseconds offset = std::chrono::microseconds{0})\r\n+               size_t completed, const std::string& checkname,\r\n+               std::chrono::microseconds offset = std::chrono::microseconds{0})\r\n     {\r\n         const auto comment = m_testname + \" \" + checkname;\r\n         auto& runner = m_runner;\r\n         const auto now = m_now;\r\n         assert(offset.count() <= 0);\r\n-        runner.actions.emplace_back(m_now, [=,&runner]() {\r\n+        runner.actions.emplace_back(m_now, [=, &runner]() {\r\n             std::vector<std::pair<NodeId, GenTxidVariant>> expired_now;\r\n             auto ret = runner.txrequest.GetRequestable(peer, now + offset, &expired_now);\r\n-            for (const auto& entry : expired_now) runner.expired.insert(entry);\r\n+            for (const auto& entry : expired_now)\r\n+                runner.expired.insert(entry);\r\n             runner.txrequest.SanityCheck();\r\n             runner.txrequest.PostGetRequestableSanityCheck(now + offset);\r\n             size_t total = candidates + inflight + completed;\r\n@@ -193,7 +194,7 @@ public:\r\n     {\r\n         const auto& testname = m_testname;\r\n         auto& runner = m_runner;\r\n-        runner.actions.emplace_back(m_now, [=,&runner]() {\r\n+        runner.actions.emplace_back(m_now, [=, &runner]() {\r\n             auto it = runner.expired.find(std::pair<NodeId, GenTxidVariant>{peer, gtxid});\r\n             BOOST_CHECK_MESSAGE(it != runner.expired.end(), \"[\" + testname + \"] missing expiration\");\r\n             if (it != runner.expired.end()) runner.expired.erase(it);\r\ndiff --git a/src/txrequest.cpp b/src/txrequest.cpp\r\nindex ec2ebe978b..0d0e7543d1 100644\r\n--- a/src/txrequest.cpp\r\n+++ b/src/txrequest.cpp\r\n@@ -575,7 +575,7 @@ public:\r\n     }\r\n \r\n     void ReceivedInv(NodeId peer, const GenTxidVariant& gtxid, bool preferred,\r\n-        std::chrono::microseconds reqtime)\r\n+                     std::chrono::microseconds reqtime)\r\n     {\r\n         // Bail out if we already have a CANDIDATE_BEST announcement for this (txhash, peer) combination. The case\r\n         // where there is a non-CANDIDATE_BEST announcement already will be caught by the uniqueness property of the\r\n@@ -595,7 +595,7 @@ public:\r\n \r\n     //! Find the GenTxids to request now from peer.\r\n     std::vector<GenTxidVariant> GetRequestable(NodeId peer, std::chrono::microseconds now,\r\n-        std::vector<std::pair<NodeId, GenTxidVariant>>* expired)\r\n+                                               std::vector<std::pair<NodeId, GenTxidVariant>>* expired)\r\n     {\r\n         // Move time.\r\n         SetTimePoint(now, expired);\r\n@@ -730,7 +730,7 @@ void TxRequestTracker::PostGetRequestableSanityCheck(std::chrono::microseconds n\r\n }\r\n \r\n void TxRequestTracker::ReceivedInv(NodeId peer, const GenTxidVariant& gtxid, bool preferred,\r\n-    std::chrono::microseconds reqtime)\r\n+                                   std::chrono::microseconds reqtime)\r\n {\r\n     m_impl->ReceivedInv(peer, gtxid, preferred, reqtime);\r\n }\r\n@@ -746,7 +746,7 @@ void TxRequestTracker::ReceivedResponse(NodeId peer, const GenTxidVariant& txhas\r\n }\r\n \r\n std::vector<GenTxidVariant> TxRequestTracker::GetRequestable(NodeId peer, std::chrono::microseconds now,\r\n-    std::vector<std::pair<NodeId, GenTxidVariant>>* expired)\r\n+                                                             std::vector<std::pair<NodeId, GenTxidVariant>>* expired)\r\n {\r\n     return m_impl->GetRequestable(peer, now, expired);\r\n }\r\ndiff --git a/src/txrequest.h b/src/txrequest.h\r\nindex f32fb1f2b9..3f2acef3a3 100644\r\n--- a/src/txrequest.h\r\n+++ b/src/txrequest.h\r\n@@ -133,7 +133,7 @@ public:\r\n      * from the specified gtxid.\r\n      */\r\n     void ReceivedInv(NodeId peer, const GenTxidVariant& gtxid, bool preferred,\r\n-        std::chrono::microseconds reqtime);\r\n+                     std::chrono::microseconds reqtime);\r\n \r\n     /** Deletes all announcements for a given peer.\r\n      *\r\n@@ -164,7 +164,7 @@ public:\r\n      *    simultaneously by one peer, and end up being requested from them, the requests will happen in announcement order.\r\n      */\r\n     std::vector<GenTxidVariant> GetRequestable(NodeId peer, std::chrono::microseconds now,\r\n-        std::vector<std::pair<NodeId, GenTxidVariant>>* expired = nullptr);\r\n+                                               std::vector<std::pair<NodeId, GenTxidVariant>>* expired = nullptr);\r\n \r\n     /** Marks a transaction as requested, with a specified expiry.\r\n      *\r\n\r\n```\r\n</details>\r\n",
      "created_at": "2025-06-24T11:24:40Z",
      "updated_at": "2025-06-24T11:57:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2163701736",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163701736"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163728201",
      "pull_request_review_id": 2949718938,
      "id": 2163728201,
      "node_id": "PRRC_kwDOABII586A999J",
      "diff_hunk": "@@ -794,18 +795,26 @@ void CTxMemPool::check(const CCoinsViewCache& active_coins_tip, int64_t spendhei\n     assert(innerUsage == cachedInnerUsage);\n }\n \n-bool CTxMemPool::CompareDepthAndScore(const uint256& hasha, const uint256& hashb, bool wtxid)\n+bool CTxMemPool::CompareDepthAndScore(const GenTxidVariant& hasha, const GenTxidVariant& hashb)\n {\n     /* Return `true` if hasha should be considered sooner than hashb. Namely when:\n      *   a is not in the mempool, but b is\n      *   both are in the mempool and a has fewer ancestors than b\n      *   both are in the mempool and a has a higher score than b\n      */\n     LOCK(cs);\n-    indexed_transaction_set::const_iterator j = wtxid ? get_iter_from_wtxid(hashb) : mapTx.find(hashb);\n+    indexed_transaction_set::const_iterator j = std::visit(util::Overloaded{\n+        [this](const Wtxid& wtxid) EXCLUSIVE_LOCKS_REQUIRED(cs) { return get_iter_from_wtxid(wtxid); },\n+        [this](const Txid& txid) EXCLUSIVE_LOCKS_REQUIRED(cs) { return mapTx.find(txid); }\n+    }, hashb);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "3e378fd6594d1811773153e14b9e34cb538ac66e",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 3e378fd6594d1811773153e14b9e34cb538ac66e:\r\n\r\nThese visitors can be cleaned up quite a bit by first replacing `get_iter_from_wtxid` with a new `GetIter(const Wtxid&)` overload (see https://github.com/stickies-v/bitcoin/commit/2585f12836bd5ef599c75e338066e2a13d6e58f7 and https://github.com/stickies-v/bitcoin/commit/589357b193b98d15b6db8db48f521ab193fc0136). This code block then becomes quite a bit more concise. It increases the diff a bit in other places, but part of that is from increased type safety. Overall, I think it's sensible to make this change in this PR?\r\n\r\n```cpp\r\n    auto j{std::visit([&](const auto& id) EXCLUSIVE_LOCKS_REQUIRED(cs) { return GetIter(id); }, hashb)};\r\n    if (!j.has_value()) return false;\r\n    auto i{std::visit([&](const auto& id) EXCLUSIVE_LOCKS_REQUIRED(cs) { return GetIter(id); }, hasha)};\r\n    if (!i.has_value()) return true;\r\n    uint64_t counta = i.value()->GetCountWithAncestors();\r\n    uint64_t countb = j.value()->GetCountWithAncestors();\r\n```\r\n\r\nSee the diff [here](https://github.com/marcofleon/bitcoin/compare/3e378fd6594d1811773153e14b9e34cb538ac66e..01e12dbee295e5b8621f4ee1c0feb42c86c4c1d1#diff-c065d4cd2398ad0dbcef393c5dfc53f465bf44723348892395fffd2fb3bac522R806-R811) (from branch https://github.com/bitcoin/bitcoin/compare/master...stickies-v:bitcoin:2025-06/overload-getiter)",
      "created_at": "2025-06-24T11:40:19Z",
      "updated_at": "2025-06-24T11:57:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2163728201",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163728201"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": 806,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 809,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163747520",
      "pull_request_review_id": 2949718938,
      "id": 2163747520,
      "node_id": "PRRC_kwDOABII586A-CrA",
      "diff_hunk": "@@ -899,24 +899,32 @@ CTransactionRef CTxMemPool::get(const uint256& hash) const\n     return i->GetSharedTx();\n }\n \n-TxMempoolInfo CTxMemPool::info(const GenTxid& gtxid) const\n+TxMempoolInfo CTxMemPool::info(const Txid& txid) const\n {\n     LOCK(cs);\n-    indexed_transaction_set::const_iterator i = (gtxid.IsWtxid() ? get_iter_from_wtxid(gtxid.GetHash()) : mapTx.find(gtxid.GetHash()));\n-    if (i == mapTx.end())\n-        return TxMempoolInfo();\n-    return GetInfo(i);\n+    indexed_transaction_set::const_iterator i{mapTx.find(txid)};\n+    return i == mapTx.end() ? TxMempoolInfo{} : GetInfo(i);\n }\n \n-TxMempoolInfo CTxMemPool::info_for_relay(const GenTxid& gtxid, uint64_t last_sequence) const\n+TxMempoolInfo CTxMemPool::info(const Wtxid& wtxid) const",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "da9927139b0f4583c9245aa3b29185612f94cdc7",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In da9927139b0f4583c9245aa3b29185612f94cdc7:\r\n\r\nWith my other suggestion to implement `GetIter(const Wtxid&)`, the `info` and `info_for_relay` duplication can be avoided, because they can now be trivially templated (moving them into `txmempool.h`). It does also require moving `GetInfo` to the header (see https://github.com/stickies-v/bitcoin/commit/8d62f6eb0c279cda82dcb5fa867ba8ae5d39fa97), but I think that's okay (ideally that function would just be replaced with a `TxMempoolInfo(txiter)` ctor but that's a much bigger diff).\r\n\r\nThese two functions can then be implemented as\r\n\r\n```cpp\r\n    template <typename T>\r\n        requires std::is_same_v<T, Txid> || std::is_same_v<T, Wtxid>\r\n    TxMempoolInfo info(const T& txid) const\r\n    {\r\n        LOCK(cs);\r\n        auto i{GetIter(txid)};\r\n        return i.has_value() ? GetInfo(*i) : TxMempoolInfo{};\r\n    }\r\n\r\n    /** Returns info for a transaction if its entry_sequence < last_sequence */\r\n    template <typename T>\r\n        requires std::is_same_v<T, Txid> || std::is_same_v<T, Wtxid>\r\n    TxMempoolInfo info_for_relay(const T& txid, uint64_t last_sequence) const\r\n    {\r\n        LOCK(cs);\r\n        auto i{GetIter(txid)};\r\n        return (i.has_value() && i.value()->GetSequence() < last_sequence) ? GetInfo(*i) : TxMempoolInfo{};\r\n    }\r\n```\r\n\r\nSee the [diff](https://github.com/marcofleon/bitcoin/compare/da9927139b0f4583c9245aa3b29185612f94cdc7..07822f53866b48d4f547b97d74766f933cc21254) here as part of branch https://github.com/bitcoin/bitcoin/compare/master...stickies-v:bitcoin:2025-06/overload-getiter",
      "created_at": "2025-06-24T11:51:40Z",
      "updated_at": "2025-06-24T11:57:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2163747520",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163747520"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 909,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2177272359",
      "pull_request_review_id": 2974916006,
      "id": 2177272359,
      "node_id": "PRRC_kwDOABII586Bxoon",
      "diff_hunk": "@@ -435,7 +426,7 @@ class TxRequestTracker::Impl {\n             auto it_prev = std::prev(it);\n             // The next best CANDIDATE_READY, if any, immediately precedes the REQUESTED or CANDIDATE_BEST\n             // announcement in the ByTxHash index.\n-            if (it_prev->m_txhash == it->m_txhash && it_prev->GetState() == State::CANDIDATE_READY) {\n+            if (it_prev->m_txhash.ToUint256() == it->m_txhash.ToUint256() && it_prev->GetState() == State::CANDIDATE_READY) {",
      "path": "src/txrequest.cpp",
      "position": null,
      "original_position": 91,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "d5a6e7a0a40bb78c2fcadd2662f2d64b86c374b7",
      "in_reply_to_id": 2139967356,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Took this suggestion. After staring at `txrequest` some more, I agree that it makes more sense conceptually to keep functions that are only used to look up announcements as `uint256`. You're right that there is already a distinction made on master between a `GenTxid` and a `txhash` so I don't see a reason to change that in this PR (other than making the actual `Announcement` type safe).",
      "created_at": "2025-07-01T11:04:13Z",
      "updated_at": "2025-07-01T11:04:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2177272359",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2177272359"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 429,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2177284171",
      "pull_request_review_id": 2974932315,
      "id": 2177284171,
      "node_id": "PRRC_kwDOABII586BxrhL",
      "diff_hunk": "@@ -794,18 +795,26 @@ void CTxMemPool::check(const CCoinsViewCache& active_coins_tip, int64_t spendhei\n     assert(innerUsage == cachedInnerUsage);\n }\n \n-bool CTxMemPool::CompareDepthAndScore(const uint256& hasha, const uint256& hashb, bool wtxid)\n+bool CTxMemPool::CompareDepthAndScore(const GenTxidVariant& hasha, const GenTxidVariant& hashb)\n {\n     /* Return `true` if hasha should be considered sooner than hashb. Namely when:\n      *   a is not in the mempool, but b is\n      *   both are in the mempool and a has fewer ancestors than b\n      *   both are in the mempool and a has a higher score than b\n      */\n     LOCK(cs);\n-    indexed_transaction_set::const_iterator j = wtxid ? get_iter_from_wtxid(hashb) : mapTx.find(hashb);\n+    indexed_transaction_set::const_iterator j = std::visit(util::Overloaded{\n+        [this](const Wtxid& wtxid) EXCLUSIVE_LOCKS_REQUIRED(cs) { return get_iter_from_wtxid(wtxid); },\n+        [this](const Txid& txid) EXCLUSIVE_LOCKS_REQUIRED(cs) { return mapTx.find(txid); }\n+    }, hashb);",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "3e378fd6594d1811773153e14b9e34cb538ac66e",
      "in_reply_to_id": 2163728201,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Used your commits, thanks. I agree it's a lot cleaner and a minimal change so it makes sense as part of this refactor. Also, making `GetIter` type safe was going to happen in the next PR anyway. ",
      "created_at": "2025-07-01T11:08:19Z",
      "updated_at": "2025-07-01T11:08:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2177284171",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2177284171"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": 806,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 809,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2177289598",
      "pull_request_review_id": 2974940489,
      "id": 2177289598,
      "node_id": "PRRC_kwDOABII586Bxs1-",
      "diff_hunk": "@@ -899,24 +899,32 @@ CTransactionRef CTxMemPool::get(const uint256& hash) const\n     return i->GetSharedTx();\n }\n \n-TxMempoolInfo CTxMemPool::info(const GenTxid& gtxid) const\n+TxMempoolInfo CTxMemPool::info(const Txid& txid) const\n {\n     LOCK(cs);\n-    indexed_transaction_set::const_iterator i = (gtxid.IsWtxid() ? get_iter_from_wtxid(gtxid.GetHash()) : mapTx.find(gtxid.GetHash()));\n-    if (i == mapTx.end())\n-        return TxMempoolInfo();\n-    return GetInfo(i);\n+    indexed_transaction_set::const_iterator i{mapTx.find(txid)};\n+    return i == mapTx.end() ? TxMempoolInfo{} : GetInfo(i);\n }\n \n-TxMempoolInfo CTxMemPool::info_for_relay(const GenTxid& gtxid, uint64_t last_sequence) const\n+TxMempoolInfo CTxMemPool::info(const Wtxid& wtxid) const",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "da9927139b0f4583c9245aa3b29185612f94cdc7",
      "in_reply_to_id": 2163747520,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Took this suggestion too and used `concepts` for the templates. Definitely better to not have to repeat these two two functions.",
      "created_at": "2025-07-01T11:10:50Z",
      "updated_at": "2025-07-01T11:10:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2177289598",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2177289598"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 909,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2177557370",
      "pull_request_review_id": 2975363560,
      "id": 2177557370,
      "node_id": "PRRC_kwDOABII586ByuN6",
      "diff_hunk": "@@ -5443,19 +5447,17 @@ namespace {\n class CompareInvMempoolOrder\n {\n     CTxMemPool* mp;\n-    bool m_wtxid_relay;\n public:\n-    explicit CompareInvMempoolOrder(CTxMemPool *_mempool, bool use_wtxid)\n+    explicit CompareInvMempoolOrder(CTxMemPool* _mempool)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 144,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "6775bb42ba9bbeef131016db7529c70c08d15cf3",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in e5a1ccd5d6e83d1027e3d2516ffd36d0e88291c4: this ctor can be simplified with member initialization lists. And while these lines are changed anyway, it might be good to add some constness guarantees and modernize naming.\r\n\r\nComplete diff would be:\r\n\r\n<details>\r\n<summary>git diff on e5a1ccd5d6</summary>\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 7a97071052..f390b0f944 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -5442,18 +5442,15 @@ void PeerManagerImpl::MaybeSendFeefilter(CNode& pto, Peer& peer, std::chrono::mi\r\n namespace {\r\n class CompareInvMempoolOrder\r\n {\r\n-    CTxMemPool* mp;\r\n+    const CTxMemPool* m_mempool;\r\n public:\r\n-    explicit CompareInvMempoolOrder(CTxMemPool* _mempool)\r\n-    {\r\n-        mp = _mempool;\r\n-    }\r\n+    explicit CompareInvMempoolOrder(CTxMemPool* mempool) : m_mempool{mempool} {}\r\n \r\n     bool operator()(std::set<GenTxidVariant>::iterator a, std::set<GenTxidVariant>::iterator b)\r\n     {\r\n         /* As std::make_heap produces a max-heap, we want the entries with the\r\n          * fewest ancestors/highest fee to sort later. */\r\n-        return mp->CompareDepthAndScore(*b, *a);\r\n+        return m_mempool->CompareDepthAndScore(*b, *a);\r\n     }\r\n };\r\n } // namespace\r\ndiff --git a/src/txmempool.cpp b/src/txmempool.cpp\r\nindex 819e7e0550..e3660d9aea 100644\r\n--- a/src/txmempool.cpp\r\n+++ b/src/txmempool.cpp\r\n@@ -794,7 +794,7 @@ void CTxMemPool::check(const CCoinsViewCache& active_coins_tip, int64_t spendhei\r\n     assert(innerUsage == cachedInnerUsage);\r\n }\r\n \r\n-bool CTxMemPool::CompareDepthAndScore(const GenTxidVariant& hasha, const GenTxidVariant& hashb)\r\n+bool CTxMemPool::CompareDepthAndScore(const GenTxidVariant& hasha, const GenTxidVariant& hashb) const\r\n {\r\n     /* Return `true` if hasha should be considered sooner than hashb. Namely when:\r\n      *   a is not in the mempool, but b is\r\ndiff --git a/src/txmempool.h b/src/txmempool.h\r\nindex 205cfa346b..ca1d1e870e 100644\r\n--- a/src/txmempool.h\r\n+++ b/src/txmempool.h\r\n@@ -467,7 +467,7 @@ public:\r\n     void removeConflicts(const CTransaction& tx) EXCLUSIVE_LOCKS_REQUIRED(cs);\r\n     void removeForBlock(const std::vector<CTransactionRef>& vtx, unsigned int nBlockHeight) EXCLUSIVE_LOCKS_REQUIRED(cs);\r\n \r\n-    bool CompareDepthAndScore(const GenTxidVariant& hasha, const GenTxidVariant& hashb);\r\n+    bool CompareDepthAndScore(const GenTxidVariant& hasha, const GenTxidVariant& hashb) const;\r\n     bool isSpent(const COutPoint& outpoint) const;\r\n     unsigned int GetTransactionsUpdated() const;\r\n     void AddTransactionsUpdated(unsigned int n);\r\n\r\n```\r\n</details>\r\n",
      "created_at": "2025-07-01T13:05:43Z",
      "updated_at": "2025-07-04T16:10:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2177557370",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2177557370"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5451,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2177932020",
      "pull_request_review_id": 2975363560,
      "id": 2177932020,
      "node_id": "PRRC_kwDOABII586B0Jr0",
      "diff_hunk": "@@ -844,10 +844,6 @@ std::vector<CTxMemPool::indexed_transaction_set::const_iterator> CTxMemPool::Get\n     return iters;\n }\n \n-static TxMempoolInfo GetInfo(CTxMemPool::indexed_transaction_set::const_iterator it) {",
      "path": "src/txmempool.cpp",
      "position": 44,
      "original_position": 44,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "6775bb42ba9bbeef131016db7529c70c08d15cf3",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in 472849c747334f52cb87bf13b9ee6d23e24d3494:\r\n\r\nI think keeping this (see https://github.com/stickies-v/bitcoin/commit/8d62f6eb0c279cda82dcb5fa867ba8ae5d39fa97)  in a separate move-only commit is a bit easier for review.",
      "created_at": "2025-07-01T15:42:34Z",
      "updated_at": "2025-07-04T16:10:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2177932020",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2177932020"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 847,
      "original_line": 847,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2178043768",
      "pull_request_review_id": 2975363560,
      "id": 2178043768,
      "node_id": "PRRC_kwDOABII586B0k94",
      "diff_hunk": "@@ -76,4 +81,25 @@ using Txid = transaction_identifier<false>;\n /** Wtxid commits to all transaction fields including the witness. */\n using Wtxid = transaction_identifier<true>;\n \n+template <typename T>\n+concept TransactionIdentifier = std::is_same_v<T, Txid> || std::is_same_v<T, Wtxid>;",
      "path": "src/util/transaction_identifier.h",
      "position": null,
      "original_position": 17,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "6775bb42ba9bbeef131016db7529c70c08d15cf3",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: `TransactionIdentifier` could be interpreted as the unabbreviated `Txid`. Perhaps `TxidOrWtxid` is both more clear and shorter? I realize all naming approaches here are probably going to kinda suck in some way, especially as we already have `GenTxid` as a variant too. Don't want to bikeshed, disregard if you don't think it's an improvement.",
      "created_at": "2025-07-01T16:28:15Z",
      "updated_at": "2025-07-04T16:10:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2178043768",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2178043768"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2179710076",
      "pull_request_review_id": 2975363560,
      "id": 2179710076,
      "node_id": "PRRC_kwDOABII586B67x8",
      "diff_hunk": "@@ -2437,7 +2439,9 @@ void PeerManagerImpl::ProcessGetData(CNode& pfrom, Peer& peer, const std::atomic\n             continue;\n         }\n \n-        CTransactionRef tx = FindTxForGetData(*tx_relay, ToGenTxid(inv));\n+        CTransactionRef tx{inv.IsMsgWtx() ?\n+                               FindTxForGetData(*tx_relay, Wtxid::FromUint256(inv.hash)) :\n+                               FindTxForGetData(*tx_relay, Txid::FromUint256(inv.hash))};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "472849c747334f52cb87bf13b9ee6d23e24d3494",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "in 472849c747334f52cb87bf13b9ee6d23e24d3494: this looks like it still just should be using `ToGenTxid`? Using the visitor pattern here makes things quite verbose wrt thread safety annotations, but then that made me realize - perhaps `FindTxForGetData` should just take an `inv`? It's a net_processing function, it seems like an intuitive fit and avoids duplication.\r\n\r\n<details>\r\n<summary>git diff on 472849c747</summary>\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 785f6d799a..128a188d00 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -947,8 +947,7 @@ private:\r\n     std::atomic<std::chrono::seconds> m_last_tip_update{0s};\r\n \r\n     /** Determine whether or not a peer can request a transaction, and return it (or nullptr if not found or not allowed). */\r\n-    template <TransactionIdentifier T>\r\n-    CTransactionRef FindTxForGetData(const Peer::TxRelay& tx_relay, const T& txid)\r\n+    CTransactionRef FindTxForGetData(const Peer::TxRelay& tx_relay, const CInv& inv)\r\n         EXCLUSIVE_LOCKS_REQUIRED(!m_most_recent_block_mutex, NetEventsInterface::g_msgproc_mutex);\r\n \r\n     void ProcessGetData(CNode& pfrom, Peer& peer, const std::atomic<bool>& interruptMsgProc)\r\n@@ -2392,11 +2391,15 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\r\n     }\r\n }\r\n \r\n-template <TransactionIdentifier T>\r\n-CTransactionRef PeerManagerImpl::FindTxForGetData(const Peer::TxRelay& tx_relay, const T& txid)\r\n+CTransactionRef PeerManagerImpl::FindTxForGetData(const Peer::TxRelay& tx_relay, const CInv& inv)\r\n {\r\n+    auto gtxid{ToGenTxid(inv).ToVariant()};\r\n     // If a tx was in the mempool prior to the last INV for this peer, permit the request.\r\n-    auto txinfo = m_mempool.info_for_relay(txid, tx_relay.m_last_inv_sequence);\r\n+    auto txinfo{std::visit(\r\n+        [&](const auto& id) EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex) {\r\n+            return m_mempool.info_for_relay(id, tx_relay.m_last_inv_sequence);\r\n+        },\r\n+        gtxid)};\r\n     if (txinfo.tx) {\r\n         return std::move(txinfo.tx);\r\n     }\r\n@@ -2405,7 +2408,7 @@ CTransactionRef PeerManagerImpl::FindTxForGetData(const Peer::TxRelay& tx_relay,\r\n     {\r\n         LOCK(m_most_recent_block_mutex);\r\n         if (m_most_recent_block_txs != nullptr) {\r\n-            auto it = m_most_recent_block_txs->find(txid.ToUint256());\r\n+            auto it = m_most_recent_block_txs->find(gtxid.ToUint256());\r\n             if (it != m_most_recent_block_txs->end()) return it->second;\r\n         }\r\n     }\r\n@@ -2439,10 +2442,7 @@ void PeerManagerImpl::ProcessGetData(CNode& pfrom, Peer& peer, const std::atomic\r\n             continue;\r\n         }\r\n \r\n-        CTransactionRef tx{inv.IsMsgWtx() ?\r\n-                               FindTxForGetData(*tx_relay, Wtxid::FromUint256(inv.hash)) :\r\n-                               FindTxForGetData(*tx_relay, Txid::FromUint256(inv.hash))};\r\n-        if (tx) {\r\n+        if (auto tx{FindTxForGetData(*tx_relay, inv)}) {\r\n             // WTX and WITNESS_TX imply we serialize with witness\r\n             const auto maybe_with_witness = (inv.IsMsgTx() ? TX_NO_WITNESS : TX_WITH_WITNESS);\r\n             MakeAndPushMessage(pfrom, NetMsgType::TX, maybe_with_witness(*tx));\r\n\r\n```\r\n</details>\r\n",
      "created_at": "2025-07-02T10:31:29Z",
      "updated_at": "2025-07-04T16:10:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2179710076",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2179710076"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": 2442,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2444,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2179725939",
      "pull_request_review_id": 2975363560,
      "id": 2179725939,
      "node_id": "PRRC_kwDOABII586B6_pz",
      "diff_hunk": "@@ -673,7 +673,7 @@ class ChainImpl : public Chain\n     {\n         if (!m_node.mempool) return false;\n         LOCK(m_node.mempool->cs);\n-        return m_node.mempool->exists(GenTxid::Txid(txid));\n+        return m_node.mempool->exists(Txid::FromUint256(txid));",
      "path": "src/node/interfaces.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "472849c747334f52cb87bf13b9ee6d23e24d3494",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit on 472849c747: `isInMempool` can be changed to take a `Txid` without any further code changes and avoids the conversion and having to touch it again in the future.\r\n\r\n<details>\r\n<summary>git diff on 472849c747</summary>\r\n\r\n```diff\r\ndiff --git a/src/interfaces/chain.h b/src/interfaces/chain.h\r\nindex f6e831624d..511ba41568 100644\r\n--- a/src/interfaces/chain.h\r\n+++ b/src/interfaces/chain.h\r\n@@ -208,7 +208,7 @@ public:\r\n     virtual RBFTransactionState isRBFOptIn(const CTransaction& tx) = 0;\r\n \r\n     //! Check if transaction is in mempool.\r\n-    virtual bool isInMempool(const uint256& txid) = 0;\r\n+    virtual bool isInMempool(const Txid& txid) = 0;\r\n \r\n     //! Check if transaction has descendants in mempool.\r\n     virtual bool hasDescendantsInMempool(const uint256& txid) = 0;\r\ndiff --git a/src/node/interfaces.cpp b/src/node/interfaces.cpp\r\nindex 6bead3ea1e..0b7cea347c 100644\r\n--- a/src/node/interfaces.cpp\r\n+++ b/src/node/interfaces.cpp\r\n@@ -669,11 +669,11 @@ public:\r\n         LOCK(m_node.mempool->cs);\r\n         return IsRBFOptIn(tx, *m_node.mempool);\r\n     }\r\n-    bool isInMempool(const uint256& txid) override\r\n+    bool isInMempool(const Txid& txid) override\r\n     {\r\n         if (!m_node.mempool) return false;\r\n         LOCK(m_node.mempool->cs);\r\n-        return m_node.mempool->exists(Txid::FromUint256(txid));\r\n+        return m_node.mempool->exists(txid);\r\n     }\r\n     bool hasDescendantsInMempool(const uint256& txid) override\r\n     {\r\n\r\n```\r\n</details>\r\n",
      "created_at": "2025-07-02T10:40:09Z",
      "updated_at": "2025-07-04T16:10:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2179725939",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2179725939"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 676,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2179755821",
      "pull_request_review_id": 2975363560,
      "id": 2179755821,
      "node_id": "PRRC_kwDOABII586B7G8t",
      "diff_hunk": "@@ -122,33 +123,34 @@ void TxDownloadManagerImpl::BlockDisconnected()\n     RecentConfirmedTransactionsFilter().reset();\n }\n \n-bool TxDownloadManagerImpl::AlreadyHaveTx(const GenTxid& gtxid, bool include_reconsiderable)\n-{\n-    const uint256& hash = gtxid.GetHash();\n-\n-    if (gtxid.IsWtxid()) {\n-        // Normal query by wtxid.\n-        if (m_orphanage.HaveTx(Wtxid::FromUint256(hash))) return true;\n-    } else {\n-        // Never query by txid: it is possible that the transaction in the orphanage has the same\n-        // txid but a different witness, which would give us a false positive result. If we decided\n-        // not to request the transaction based on this result, an attacker could prevent us from\n-        // downloading a transaction by intentionally creating a malleated version of it.  While\n-        // only one (or none!) of these transactions can ultimately be confirmed, we have no way of\n-        // discerning which one that is, so the orphanage can store multiple transactions with the\n-        // same txid.\n-        //\n-        // While we won't query by txid, we can try to \"guess\" what the wtxid is based on the txid.\n-        // A non-segwit transaction's txid == wtxid. Query this txid \"casted\" to a wtxid. This will\n-        // help us find non-segwit transactions, saving bandwidth, and should have no false positives.\n-        if (m_orphanage.HaveTx(Wtxid::FromUint256(hash))) return true;\n+bool TxDownloadManagerImpl::AlreadyHaveTx(const GenTxidVariant& gtxid, bool include_reconsiderable)\n+{\n+    if (std::visit(util::Overloaded{",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 55,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "7c4eb58fb089decd9532fbef43419f632b5c16bd",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 7c4eb58fb0:\r\n\r\nI don't really see the point of using `util::Overloaded` here when we're always doing a `Wtxid` query?\r\n\r\nThis looks more straightforward to me:\r\n\r\n<details>\r\n<summary>git diff on 7c4eb58fb0</summary>\r\n\r\n```diff\r\ndiff --git a/src/node/txdownloadman_impl.cpp b/src/node/txdownloadman_impl.cpp\r\nindex a16490ceb9..87a47b30ee 100644\r\n--- a/src/node/txdownloadman_impl.cpp\r\n+++ b/src/node/txdownloadman_impl.cpp\r\n@@ -9,7 +9,6 @@\r\n #include <consensus/validation.h>\r\n #include <logging.h>\r\n #include <txmempool.h>\r\n-#include <util/overloaded.h>\r\n #include <validation.h>\r\n #include <validationinterface.h>\r\n \r\n@@ -125,26 +124,19 @@ void TxDownloadManagerImpl::BlockDisconnected()\r\n \r\n bool TxDownloadManagerImpl::AlreadyHaveTx(const GenTxidVariant& gtxid, bool include_reconsiderable)\r\n {\r\n-    if (std::visit(util::Overloaded{\r\n-                       // Normal query by wtxid.\r\n-                       [this](const Wtxid& wtxid) { return m_orphanage.HaveTx(wtxid); },\r\n-                       // Never query by txid: it is possible that the transaction in the orphanage has the same\r\n-                       // txid but a different witness, which would give us a false positive result. If we decided\r\n-                       // not to request the transaction based on this result, an attacker could prevent us from\r\n-                       // downloading a transaction by intentionally creating a malleated version of it.  While\r\n-                       // only one (or none!) of these transactions can ultimately be confirmed, we have no way of\r\n-                       // discerning which one that is, so the orphanage can store multiple transactions with the\r\n-                       // same txid.\r\n-                       //\r\n-                       // While we won't query by txid, we can try to \"guess\" what the wtxid is based on the txid.\r\n-                       // A non-segwit transaction's txid == wtxid. Query this txid \"casted\" to a wtxid. This will\r\n-                       // help us find non-segwit transactions, saving bandwidth, and should have no false positives.\r\n-                       [this](const Txid& txid) { return m_orphanage.HaveTx(Wtxid::FromUint256(txid.ToUint256())); }},\r\n-                   gtxid)) {\r\n-        return true;\r\n-    }\r\n-\r\n     const uint256& hash = gtxid.ToUint256();\r\n+    // Never query by txid: it is possible that the transaction in the orphanage has the same\r\n+    // txid but a different witness, which would give us a false positive result. If we decided\r\n+    // not to request the transaction based on this result, an attacker could prevent us from\r\n+    // downloading a transaction by intentionally creating a malleated version of it.  While\r\n+    // only one (or none!) of these transactions can ultimately be confirmed, we have no way of\r\n+    // discerning which one that is, so the orphanage can store multiple transactions with the\r\n+    // same txid.\r\n+    //\r\n+    // While we won't query by txid, we can try to \"guess\" what the wtxid is based on the txid.\r\n+    // A non-segwit transaction's txid == wtxid. Query this txid \"casted\" to a wtxid. This will\r\n+    // help us find non-segwit transactions, saving bandwidth, and should have no false positives.\r\n+    if (m_orphanage.HaveTx(Wtxid::FromUint256(hash))) return true;\r\n \r\n     if (include_reconsiderable && RecentRejectsReconsiderableFilter().contains(hash)) return true;\r\n \r\n\r\n```\r\n</details>\r\n",
      "created_at": "2025-07-02T10:56:45Z",
      "updated_at": "2025-07-04T16:10:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2179755821",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2179755821"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 128,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2185661544",
      "pull_request_review_id": 2975363560,
      "id": 2185661544,
      "node_id": "PRRC_kwDOABII586CRoxo",
      "diff_hunk": "@@ -161,17 +161,18 @@ class Scenario\n      *                   backwards (but note that the ordering of this event only follows the scenario's m_now.\n      */\n     void Check(NodeId peer, const std::vector<GenTxid>& expected, size_t candidates, size_t inflight,\n-        size_t completed, const std::string& checkname,\n-        std::chrono::microseconds offset = std::chrono::microseconds{0})\n+               size_t completed, const std::string& checkname,\n+               std::chrono::microseconds offset = std::chrono::microseconds{0})\n     {\n         const auto comment = m_testname + \" \" + checkname;\n         auto& runner = m_runner;\n         const auto now = m_now;\n         assert(offset.count() <= 0);\n-        runner.actions.emplace_back(m_now, [=,&runner]() {\n+        runner.actions.emplace_back(m_now, [=, &runner]() {\n             std::vector<std::pair<NodeId, GenTxid>> expired_now;\n             auto ret = runner.txrequest.GetRequestable(peer, now + offset, &expired_now);\n-            for (const auto& entry : expired_now) runner.expired.insert(entry);\n+            for (const auto& entry : expired_now)\n+                runner.expired.insert(entry);",
      "path": "src/test/txrequest_tests.cpp",
      "position": null,
      "original_position": 64,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "700819f87b019f854340886dc8d35e66e813b53f",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in db125fed333a74999a63ac0e8d8b038cab96a3f4: multiline statements require braces as per developer notes, so would revert this change (or add braces)",
      "created_at": "2025-07-04T15:27:17Z",
      "updated_at": "2025-07-04T16:10:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2185661544",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2185661544"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": 174,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 175,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2185673548",
      "pull_request_review_id": 2975363560,
      "id": 2185673548,
      "node_id": "PRRC_kwDOABII586CRrtM",
      "diff_hunk": "@@ -274,29 +275,29 @@ std::vector<GenTxid> TxDownloadManagerImpl::GetRequestsToSend(NodeId nodeid, std\n     auto requestable = m_txrequest.GetRequestable(nodeid, current_time, &expired);\n     for (const auto& entry : expired) {\n         LogDebug(BCLog::NET, \"timeout of inflight %s %s from peer=%d\\n\", entry.second.IsWtxid() ? \"wtx\" : \"tx\",\n-            entry.second.GetHash().ToString(), entry.first);\n+                 entry.second.ToUint256().ToString(), entry.first);",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 123,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "700819f87b019f854340886dc8d35e66e813b53f",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in db125fed333a74999a63ac0e8d8b038cab96a3f4:\r\n\r\ncould consider modernizing with structured bindings while touching this:\r\n\r\n<details>\r\n<summary>git diff on db125fed33</summary>\r\n\r\n```diff\r\ndiff --git a/src/node/txdownloadman_impl.cpp b/src/node/txdownloadman_impl.cpp\r\nindex 7116c433be..32f3ae7931 100644\r\n--- a/src/node/txdownloadman_impl.cpp\r\n+++ b/src/node/txdownloadman_impl.cpp\r\n@@ -273,9 +273,9 @@ std::vector<GenTxidVariant> TxDownloadManagerImpl::GetRequestsToSend(NodeId node\r\n     std::vector<GenTxidVariant> requests;\r\n     std::vector<std::pair<NodeId, GenTxidVariant>> expired;\r\n     auto requestable = m_txrequest.GetRequestable(nodeid, current_time, &expired);\r\n-    for (const auto& entry : expired) {\r\n-        LogDebug(BCLog::NET, \"timeout of inflight %s %s from peer=%d\\n\", entry.second.IsWtxid() ? \"wtx\" : \"tx\",\r\n-                 entry.second.ToUint256().ToString(), entry.first);\r\n+    for (const auto& [node_id, gtxid] : expired) {\r\n+        LogDebug(BCLog::NET, \"timeout of inflight %s %s from peer=%d\\n\", gtxid.IsWtxid() ? \"wtx\" : \"tx\",\r\n+                 gtxid.ToUint256().ToString(), node_id);\r\n     }\r\n     for (const GenTxidVariant& gtxid : requestable) {\r\n         if (!AlreadyHaveTx(gtxid, /*include_reconsiderable=*/false)) {\r\n\r\n```\r\n</details>\r\n",
      "created_at": "2025-07-04T15:38:09Z",
      "updated_at": "2025-07-04T16:10:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2185673548",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2185673548"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2185683937",
      "pull_request_review_id": 2975363560,
      "id": 2185683937,
      "node_id": "PRRC_kwDOABII586CRuPh",
      "diff_hunk": "@@ -413,8 +413,8 @@ node::RejectedTxTodo TxDownloadManagerImpl::MempoolRejectedTx(const CTransaction\n                 //\n                 // Search by txid and, if the tx has a witness, wtxid\n                 std::vector<NodeId> orphan_resolution_candidates{nodeid};\n-                m_txrequest.GetCandidatePeers(ptx->GetHash(), orphan_resolution_candidates);\n-                if (ptx->HasWitness()) m_txrequest.GetCandidatePeers(ptx->GetWitnessHash(), orphan_resolution_candidates);\n+                m_txrequest.GetCandidatePeers(ptx->GetHash().ToUint256(), orphan_resolution_candidates);\n+                if (ptx->HasWitness()) m_txrequest.GetCandidatePeers(ptx->GetWitnessHash().ToUint256(), orphan_resolution_candidates);",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 89,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "db125fed333a74999a63ac0e8d8b038cab96a3f4",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "These changes seem unnecessary and unrelated to any code changes made in this PR?",
      "created_at": "2025-07-04T15:46:47Z",
      "updated_at": "2025-07-04T16:10:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2185683937",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2185683937"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": 416,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 417,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2185685399",
      "pull_request_review_id": 2975363560,
      "id": 2185685399,
      "node_id": "PRRC_kwDOABII586CRumX",
      "diff_hunk": "@@ -520,8 +520,8 @@ std::pair<bool, std::optional<PackageToValidate>> TxDownloadManagerImpl::Receive\n     const Wtxid& wtxid = ptx->GetWitnessHash();\n \n     // Mark that we have received a response\n-    m_txrequest.ReceivedResponse(nodeid, txid);\n-    if (ptx->HasWitness()) m_txrequest.ReceivedResponse(nodeid, wtxid);\n+    m_txrequest.ReceivedResponse(nodeid, txid.ToUint256());\n+    if (ptx->HasWitness()) m_txrequest.ReceivedResponse(nodeid, wtxid.ToUint256());",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 140,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "db125fed333a74999a63ac0e8d8b038cab96a3f4",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "These changes seem unnecessary and unrelated to any code changes made in this PR?",
      "created_at": "2025-07-04T15:48:20Z",
      "updated_at": "2025-07-04T16:10:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2185685399",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2185685399"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": 523,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 524,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193207335",
      "pull_request_review_id": 2998746867,
      "id": 2193207335,
      "node_id": "PRRC_kwDOABII586CubAn",
      "diff_hunk": "@@ -76,4 +81,25 @@ using Txid = transaction_identifier<false>;\n /** Wtxid commits to all transaction fields including the witness. */\n using Wtxid = transaction_identifier<true>;\n \n+template <typename T>\n+concept TransactionIdentifier = std::is_same_v<T, Txid> || std::is_same_v<T, Wtxid>;",
      "path": "src/util/transaction_identifier.h",
      "position": null,
      "original_position": 17,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "6775bb42ba9bbeef131016db7529c70c08d15cf3",
      "in_reply_to_id": 2178043768,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done. I didn't really know the best name for this initially. I like `TxidOrWtxid` a bit better.",
      "created_at": "2025-07-08T18:38:22Z",
      "updated_at": "2025-07-08T18:38:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2193207335",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193207335"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193209465",
      "pull_request_review_id": 2998750312,
      "id": 2193209465,
      "node_id": "PRRC_kwDOABII586Cubh5",
      "diff_hunk": "@@ -2437,7 +2439,9 @@ void PeerManagerImpl::ProcessGetData(CNode& pfrom, Peer& peer, const std::atomic\n             continue;\n         }\n \n-        CTransactionRef tx = FindTxForGetData(*tx_relay, ToGenTxid(inv));\n+        CTransactionRef tx{inv.IsMsgWtx() ?\n+                               FindTxForGetData(*tx_relay, Wtxid::FromUint256(inv.hash)) :\n+                               FindTxForGetData(*tx_relay, Txid::FromUint256(inv.hash))};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "472849c747334f52cb87bf13b9ee6d23e24d3494",
      "in_reply_to_id": 2179710076,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Took this suggestion 🤝",
      "created_at": "2025-07-08T18:39:51Z",
      "updated_at": "2025-07-08T18:39:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2193209465",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193209465"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": 2442,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2444,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193216368",
      "pull_request_review_id": 2998760678,
      "id": 2193216368,
      "node_id": "PRRC_kwDOABII586CudNw",
      "diff_hunk": "@@ -122,33 +123,34 @@ void TxDownloadManagerImpl::BlockDisconnected()\n     RecentConfirmedTransactionsFilter().reset();\n }\n \n-bool TxDownloadManagerImpl::AlreadyHaveTx(const GenTxid& gtxid, bool include_reconsiderable)\n-{\n-    const uint256& hash = gtxid.GetHash();\n-\n-    if (gtxid.IsWtxid()) {\n-        // Normal query by wtxid.\n-        if (m_orphanage.HaveTx(Wtxid::FromUint256(hash))) return true;\n-    } else {\n-        // Never query by txid: it is possible that the transaction in the orphanage has the same\n-        // txid but a different witness, which would give us a false positive result. If we decided\n-        // not to request the transaction based on this result, an attacker could prevent us from\n-        // downloading a transaction by intentionally creating a malleated version of it.  While\n-        // only one (or none!) of these transactions can ultimately be confirmed, we have no way of\n-        // discerning which one that is, so the orphanage can store multiple transactions with the\n-        // same txid.\n-        //\n-        // While we won't query by txid, we can try to \"guess\" what the wtxid is based on the txid.\n-        // A non-segwit transaction's txid == wtxid. Query this txid \"casted\" to a wtxid. This will\n-        // help us find non-segwit transactions, saving bandwidth, and should have no false positives.\n-        if (m_orphanage.HaveTx(Wtxid::FromUint256(hash))) return true;\n+bool TxDownloadManagerImpl::AlreadyHaveTx(const GenTxidVariant& gtxid, bool include_reconsiderable)\n+{\n+    if (std::visit(util::Overloaded{",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 55,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "7c4eb58fb089decd9532fbef43419f632b5c16bd",
      "in_reply_to_id": 2179755821,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I agree that there isn't a need for branching on wtxid/txid and that having the comment there is enough. Just to be sure, @glozow if you prefer to keep the branching, let me know and I can revert.\r\n\r\nedit: I'm also open to making the comment clearer if we opt for no branch.",
      "created_at": "2025-07-08T18:44:17Z",
      "updated_at": "2025-07-08T19:03:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2193216368",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193216368"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 128,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193217740",
      "pull_request_review_id": 2998762759,
      "id": 2193217740,
      "node_id": "PRRC_kwDOABII586CudjM",
      "diff_hunk": "@@ -413,8 +413,8 @@ node::RejectedTxTodo TxDownloadManagerImpl::MempoolRejectedTx(const CTransaction\n                 //\n                 // Search by txid and, if the tx has a witness, wtxid\n                 std::vector<NodeId> orphan_resolution_candidates{nodeid};\n-                m_txrequest.GetCandidatePeers(ptx->GetHash(), orphan_resolution_candidates);\n-                if (ptx->HasWitness()) m_txrequest.GetCandidatePeers(ptx->GetWitnessHash(), orphan_resolution_candidates);\n+                m_txrequest.GetCandidatePeers(ptx->GetHash().ToUint256(), orphan_resolution_candidates);\n+                if (ptx->HasWitness()) m_txrequest.GetCandidatePeers(ptx->GetWitnessHash().ToUint256(), orphan_resolution_candidates);",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 89,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "db125fed333a74999a63ac0e8d8b038cab96a3f4",
      "in_reply_to_id": 2185683937,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good catch, same for `ForgetTxHash`.",
      "created_at": "2025-07-08T18:45:10Z",
      "updated_at": "2025-07-08T18:45:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2193217740",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193217740"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": 416,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 417,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193219736",
      "pull_request_review_id": 2998765870,
      "id": 2193219736,
      "node_id": "PRRC_kwDOABII586CueCY",
      "diff_hunk": "@@ -673,7 +673,7 @@ class ChainImpl : public Chain\n     {\n         if (!m_node.mempool) return false;\n         LOCK(m_node.mempool->cs);\n-        return m_node.mempool->exists(GenTxid::Txid(txid));\n+        return m_node.mempool->exists(Txid::FromUint256(txid));",
      "path": "src/node/interfaces.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "472849c747334f52cb87bf13b9ee6d23e24d3494",
      "in_reply_to_id": 2179725939,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good looks",
      "created_at": "2025-07-08T18:46:25Z",
      "updated_at": "2025-07-08T18:46:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2193219736",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2193219736"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 676,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2199951996",
      "pull_request_review_id": 3009084888,
      "id": 2199951996,
      "node_id": "PRRC_kwDOABII586DIJp8",
      "diff_hunk": "@@ -76,4 +80,22 @@ using Txid = transaction_identifier<false>;\n /** Wtxid commits to all transaction fields including the witness. */\n using Wtxid = transaction_identifier<true>;\n \n+class GenTxidVariant : public std::variant<Txid, Wtxid>\n+{\n+public:\n+    using variant::variant;\n+\n+    bool IsWtxid() const { return std::holds_alternative<Wtxid>(*this); }\n+\n+    const uint256& ToUint256() const LIFETIMEBOUND\n+    {\n+        return std::visit([](const auto& id) -> const uint256& { return id.ToUint256(); }, *this);\n+    }\n+\n+    friend auto operator<=>(const GenTxidVariant& a, const GenTxidVariant& b)\n+    {\n+        return std::tuple(a.IsWtxid(), a.ToUint256()) <=> std::tuple(b.IsWtxid(), b.ToUint256());",
      "path": "src/util/transaction_identifier.h",
      "position": 33,
      "original_position": 29,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "11d28f21bb8f0c3094934b3fef45871f73bb216a",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit 11d28f21bb8f0c3094934b3fef45871f73bb216a: This creates a copy, when read-only access is needed. (clang -O2 seems to strip the copy, but gcc may not). You can avoid it via:\r\n\r\n```cpp\r\n        return std::tuple<bool,const uint256&>(a.IsWtxid(), a.ToUint256()) <=> std::tuple<bool,const uint256&>(b.IsWtxid(), b.ToUint256());\r\n```",
      "created_at": "2025-07-11T07:52:29Z",
      "updated_at": "2025-07-11T11:54:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2199951996",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2199951996"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 101,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2200149905",
      "pull_request_review_id": 3009084888,
      "id": 2200149905,
      "node_id": "PRRC_kwDOABII586DI5-R",
      "diff_hunk": "@@ -437,6 +437,20 @@ class GenTxid\n     const uint256& GetHash() const LIFETIMEBOUND { return m_hash; }\n     friend bool operator==(const GenTxid& a, const GenTxid& b) { return a.m_is_wtxid == b.m_is_wtxid && a.m_hash == b.m_hash; }\n     friend bool operator<(const GenTxid& a, const GenTxid& b) { return std::tie(a.m_is_wtxid, a.m_hash) < std::tie(b.m_is_wtxid, b.m_hash); }\n+\n+    GenTxidVariant ToVariant() const\n+    {\n+        return m_is_wtxid ?\n+                   GenTxidVariant{Wtxid::FromUint256(m_hash)} :\n+                   GenTxidVariant{Txid::FromUint256(m_hash)};\n+    }\n+\n+    static GenTxid FromVariant(const GenTxidVariant& variant)\n+    {\n+        return GenTxid{\n+            std::holds_alternative<::Wtxid>(variant),\n+            variant.ToUint256()};\n+    }\n };",
      "path": "src/primitives/transaction.h",
      "position": null,
      "original_position": 18,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "11d28f21bb8f0c3094934b3fef45871f73bb216a",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in 11d28f21bb8f0c3094934b3fef45871f73bb216a (first commit): Could add a comment to this class, documenting that it will be removed in the last commit?",
      "created_at": "2025-07-11T09:07:39Z",
      "updated_at": "2025-07-11T11:54:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2200149905",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2200149905"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 454,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2200291621",
      "pull_request_review_id": 3009607187,
      "id": 2200291621,
      "node_id": "PRRC_kwDOABII586DJckl",
      "diff_hunk": "@@ -2391,10 +2391,15 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n     }\n }\n \n-CTransactionRef PeerManagerImpl::FindTxForGetData(const Peer::TxRelay& tx_relay, const GenTxid& gtxid)\n+CTransactionRef PeerManagerImpl::FindTxForGetData(const Peer::TxRelay& tx_relay, const CInv& inv)",
      "path": "src/net_processing.cpp",
      "position": 84,
      "original_position": 84,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Imo, function parameters should reflect what a function needs to do its job, as opposed to passing it what you have available at the call sites.\r\n\r\n`CInv` can be more than a tx announcement, and it's only used here to be passed to `ToGenTxid` (which crashes if its not a tx inv). Distinguishing tx from other announcements is not the job of `FindTxForGetData`. It only needs a wtxid/txid to do its job and should take a `GenTxid` (or be templated).",
      "created_at": "2025-07-11T10:04:11Z",
      "updated_at": "2025-07-11T10:13:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2200291621",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2200291621"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2394,
      "original_line": 2394,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201848886",
      "pull_request_review_id": 3010366559,
      "id": 2201848886,
      "node_id": "PRRC_kwDOABII586DPYw2",
      "diff_hunk": "@@ -435,7 +426,7 @@ class TxRequestTracker::Impl {\n             auto it_prev = std::prev(it);\n             // The next best CANDIDATE_READY, if any, immediately precedes the REQUESTED or CANDIDATE_BEST\n             // announcement in the ByTxHash index.\n-            if (it_prev->m_txhash == it->m_txhash && it_prev->GetState() == State::CANDIDATE_READY) {\n+            if (it_prev->m_txhash.ToUint256() == it->m_txhash.ToUint256() && it_prev->GetState() == State::CANDIDATE_READY) {",
      "path": "src/txrequest.cpp",
      "position": null,
      "original_position": 91,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "d5a6e7a0a40bb78c2fcadd2662f2d64b86c374b7",
      "in_reply_to_id": 2139967356,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks for taking this suggestion, including renaming the field!",
      "created_at": "2025-07-11T21:04:06Z",
      "updated_at": "2025-07-11T22:22:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2201848886",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201848886"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 429,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201874252",
      "pull_request_review_id": 3010366559,
      "id": 2201874252,
      "node_id": "PRRC_kwDOABII586DPe9M",
      "diff_hunk": "@@ -158,14 +158,13 @@ class TxRequestTracker {\n      *    exists, and for which the specified peer is the best choice among all (reqtime <= now) CANDIDATE\n      *    announcements with the same txhash (subject to preferredness rules, and tiebreaking using a deterministic\n      *    salted hash of peer and txhash).\n-     *  - The selected announcements are converted to GenTxids using their is_wtxid flag, and returned in\n-     *    announcement order (even if multiple were added at the same time, or when the clock went backwards while\n-     *    they were being added). This is done to minimize disruption from dependent transactions being requested\n-     *    out of order: if multiple dependent transactions are announced simultaneously by one peer, and end up\n-     *    being requested from them, the requests will happen in announcement order.\n+     *  - The selected announcements are returned in announcement order (even if multiple were added at the same\n+     *    time, or when the clock went backwards while they were being added). This is done to minimize disruption\n+     *    from dependent transactions being requested out of order: if multiple dependent transactions are announced\n+     *    simultaneously by one peer, and end up being requested from them, the requests will happen in announcement order.\n      */\n     std::vector<GenTxid> GetRequestable(NodeId peer, std::chrono::microseconds now,\n-        std::vector<std::pair<NodeId, GenTxid>>* expired = nullptr);\n+                                               std::vector<std::pair<NodeId, GenTxid>>* expired = nullptr);",
      "path": "src/txrequest.h",
      "position": 25,
      "original_position": 25,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: There's 7 extra spaces in function prototypes for `GetRequestable` (this is 1 of 3 occurrences). This is due to changes to the code before the scripted-diff not accounting for a loss of `Variant` from the previous lines return value.",
      "created_at": "2025-07-11T21:11:21Z",
      "updated_at": "2025-07-11T22:22:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2201874252",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201874252"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 167,
      "original_line": 167,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201918072",
      "pull_request_review_id": 3010366559,
      "id": 2201918072,
      "node_id": "PRRC_kwDOABII586DPpp4",
      "diff_hunk": "@@ -984,13 +960,20 @@ const CTransaction* CTxMemPool::GetConflictTx(const COutPoint& prevout) const\n     return it == mapNextTx.end() ? nullptr : it->second;\n }\n \n-std::optional<CTxMemPool::txiter> CTxMemPool::GetIter(const uint256& txid) const\n+std::optional<CTxMemPool::txiter> CTxMemPool::GetIter(const Txid& txid) const\n {\n-    auto it = mapTx.find(txid);\n+    auto it = mapTx.find(txid.ToUint256());\n     if (it != mapTx.end()) return it;\n     return std::nullopt;\n }\n \n+std::optional<CTxMemPool::txiter> CTxMemPool::GetIter(const Wtxid& wtxid) const\n+{\n+    AssertLockHeld(cs);",
      "path": "src/txmempool.cpp",
      "position": 93,
      "original_position": 93,
      "commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "original_commit_id": "a60f863d3e276534444571282f432b913d3967db",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Missing `AssertLockHeld` in pre-existing `TxId` overload?",
      "created_at": "2025-07-11T21:36:53Z",
      "updated_at": "2025-07-11T22:22:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32631#discussion_r2201918072",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2201918072"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32631"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 972,
      "original_line": 972,
      "side": "RIGHT"
    }
  ]
}