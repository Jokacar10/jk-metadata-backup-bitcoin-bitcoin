{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33105",
    "id": 2708279020,
    "node_id": "PR_kwDOABII586hbQ7s",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/33105",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/33105.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/33105.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33105",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33105/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33105/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33105/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/0e22a1401c7edee8946f404dd0deb59a94231340",
    "number": 33105,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "validation: detect witness stripping early on",
    "user": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Since it was introduced in 4eb515574e1012bc8ea5dafc3042dcdf4c766f26 (#18044), the detection of a stripped witness relies on running the Script checks 3 times. In the worst case, this consists in running Script validation for every single input 3 times.\r\n\r\nDetection of a stripped witness is necessary because in this case wtxid==txid, and the transaction's wtxid must not be added to the reject filter or it could allow a malicious peer to interfere with txid-based orphan resolution as used in 1p1c package relay.\r\n\r\nHowever it is not necessary to run Script validation to detect a stripped witness (much less so doing it 3 times in a row). There are 3 types of witness program: defined program types (Taproot, P2WPKH and P2WSH), undefined types, and the Pay-to-anchor carve-out.\r\n\r\nFor defined program types, Script validation with an empty witness will always fail (by consensus). For undefined program types, Script validation is always going to fail regardless of the witness (by standardness). For P2A, an empty witness is never going to lead to a failure.\r\n\r\nTherefore it holds that we can always detect a stripped witness beforehand: the transaction's witness is empty and it spends a non-P2A Segwit program.\r\n\r\nh/t AJ: this essentially implements a variant of https://github.com/bitcoin/bitcoin/pull/33066#issuecomment-3135258539.",
    "labels": [
      {
        "id": 118379652,
        "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
        "name": "Validation",
        "color": "6060aa",
        "default": false
      }
    ],
    "created_at": "2025-07-30T20:13:44Z",
    "updated_at": "2025-08-04T04:42:54Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "db561c699b822550c6dbd266e0476778b249158d",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "darosior:2507_early_witstrip_detection",
      "ref": "2507_early_witstrip_detection",
      "sha": "0e22a1401c7edee8946f404dd0deb59a94231340",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 168868367,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjg4NjgzNjc=",
        "name": "bitcoin",
        "full_name": "darosior/bitcoin",
        "owner": {
          "login": "darosior",
          "id": 22457751,
          "node_id": "MDQ6VXNlcjIyNDU3NzUx",
          "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/darosior",
          "html_url": "https://github.com/darosior",
          "followers_url": "https://api.github.com/users/darosior/followers",
          "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
          "organizations_url": "https://api.github.com/users/darosior/orgs",
          "repos_url": "https://api.github.com/users/darosior/repos",
          "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/darosior/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/darosior/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/darosior/bitcoin",
        "archive_url": "https://api.github.com/repos/darosior/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/darosior/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/darosior/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/darosior/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/darosior/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/darosior/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/darosior/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/darosior/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/darosior/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/darosior/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/darosior/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/darosior/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/darosior/bitcoin/events",
        "forks_url": "https://api.github.com/repos/darosior/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/darosior/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/darosior/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/darosior/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/darosior/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/darosior/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/darosior/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/darosior/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/darosior/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/darosior/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/darosior/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/darosior/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/darosior/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/darosior/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/darosior/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/darosior/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:darosior/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/darosior/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/darosior/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/darosior/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/darosior/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/darosior/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/darosior/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/darosior/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/darosior/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/darosior/bitcoin/hooks",
        "svn_url": "https://github.com/darosior/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 270684,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-01T13:30:04Z",
        "created_at": "2019-02-02T19:20:27Z",
        "updated_at": "2024-11-20T13:45:57Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "e6bfd95d5012fa1d91f83bf4122cb292afd6277f",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37604,
        "stargazers_count": 84875,
        "watchers_count": 84875,
        "size": 290064,
        "default_branch": "master",
        "open_issues_count": 757,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-03T10:53:32Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-08-04T04:53:50Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33105"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 22,
    "deletions": 16,
    "changed_files": 2,
    "commits": 1,
    "review_comments": 9,
    "comments": 5
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBlMjJhMTQwMWM3ZWRlZTg5NDZmNDA0ZGQwZGViNTlhOTQyMzEzNDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0e22a1401c7edee8946f404dd0deb59a94231340",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0e22a1401c7edee8946f404dd0deb59a94231340",
      "tree": {
        "sha": "7b122d6c0ab2bcf28561a468cef8f731340a3434",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7b122d6c0ab2bcf28561a468cef8f731340a3434"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/91058877ff7842564d98d13465132ae497ae3997",
          "sha": "91058877ff7842564d98d13465132ae497ae3997",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/91058877ff7842564d98d13465132ae497ae3997"
        }
      ],
      "message": "validation: detect witness stripping early on\n\nSince it was introduced in 4eb515574e1012bc8ea5dafc3042dcdf4c766f26 (#18044), the detection of a\nstripped witness relies on running the Script checks 3 times. In the worst case, this consists in\nrunning Script validation for every single input.\n\nDetection of a stripped witness is necessary because in this case wtxid==txid, and the transaction's\nwtxid must not be added to the reject filter or it could allow a malicious peer to interfere with\ntxid-based orphan resolution as used in 1p1c package relay.\n\nHowever it is not necessary to run Script validation to detect a stripped witness (much less so\ndoing it 3 times in a row). There are 3 types of witness program: defined program types (Taproot,\nP2WPKH and P2WSH), undefined types, and the Pay-to-anchor carve-out.\n\nFor defined program types, Script validation with an empty witness will always fail (by consensus).\nFor undefined program types, Script validation is always going to fail regardless of the witness (by\nstandardness). For P2A, an empty witness is never going to lead to a failure.\n\nTherefore it holds that we can always detect a stripped witness beforehand: the transaction's\nwitness is empty and it spends a non-P2A Segwit program.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2025-07-30T19:56:57Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2025-07-30T19:56:57Z"
      },
      "sha": "0e22a1401c7edee8946f404dd0deb59a94231340"
    },
    {
      "event": "labeled",
      "id": 18906869640,
      "node_id": "LE_lADOABII587DZzRzzwAAAARm7--I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18906869640",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-30T20:13:47Z",
      "label": {
        "name": "Validation",
        "color": "6060aa"
      }
    },
    {
      "event": "commented",
      "id": 3137685212,
      "node_id": "IC_kwDOABII5867BUbc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3137685212",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-30T20:13:49Z",
      "updated_at": "2025-08-01T18:37:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/33105.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [achow101](https://github.com/bitcoin/bitcoin/pull/33105#issuecomment-3141419839), [nervana21](https://github.com/bitcoin/bitcoin/pull/33105#issuecomment-3143760463) |\n| Concept ACK | [glozow](https://github.com/bitcoin/bitcoin/pull/33105#pullrequestreview-3080155389) |\n| Approach ACK | [ajtowns](https://github.com/bitcoin/bitcoin/pull/33105#pullrequestreview-3073725534) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#33050](https://github.com/bitcoin/bitcoin/pull/33050) (net, validation: don't punish peers for consensus-invalid txs by ajtowns)\n* [#32317](https://github.com/bitcoin/bitcoin/pull/32317) (kernel: Separate UTXO set access from validation functions by TheCharlatan)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33105#issuecomment-3137685212",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33105"
    },
    {
      "event": "reviewed",
      "id": 3073725534,
      "node_id": "PRR_kwDOABII5863NVRe",
      "url": null,
      "actor": null,
      "commit_id": "0e22a1401c7edee8946f404dd0deb59a94231340",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33105#pullrequestreview-3073725534",
      "submitted_at": "2025-07-31T01:23:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33105"
    },
    {
      "event": "reviewed",
      "id": 3075514947,
      "node_id": "PRR_kwDOABII5863UKJD",
      "url": null,
      "actor": null,
      "commit_id": "0e22a1401c7edee8946f404dd0deb59a94231340",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33105#pullrequestreview-3075514947",
      "submitted_at": "2025-07-31T13:46:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33105"
    },
    {
      "event": "reviewed",
      "id": 3075715872,
      "node_id": "PRR_kwDOABII5863U7Mg",
      "url": null,
      "actor": null,
      "commit_id": "0e22a1401c7edee8946f404dd0deb59a94231340",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "nervana21",
        "id": 205626986,
        "node_id": "U_kgDODEGeag",
        "avatar_url": "https://avatars.githubusercontent.com/u/205626986?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nervana21",
        "html_url": "https://github.com/nervana21",
        "followers_url": "https://api.github.com/users/nervana21/followers",
        "following_url": "https://api.github.com/users/nervana21/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nervana21/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nervana21/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nervana21/subscriptions",
        "organizations_url": "https://api.github.com/users/nervana21/orgs",
        "repos_url": "https://api.github.com/users/nervana21/repos",
        "events_url": "https://api.github.com/users/nervana21/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nervana21/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33105#pullrequestreview-3075715872",
      "submitted_at": "2025-07-31T14:37:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33105"
    },
    {
      "event": "commented",
      "id": 3141419839,
      "node_id": "IC_kwDOABII5867PkM_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3141419839",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-31T21:39:52Z",
      "updated_at": "2025-07-31T21:39:52Z",
      "author_association": "MEMBER",
      "body": "ACK 0e22a1401c7edee8946f404dd0deb59a94231340",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33105#issuecomment-3141419839",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33105"
    },
    {
      "event": "review_requested",
      "id": 18927272027,
      "node_id": "RRE_lADOABII587DZzRzzwAAAARoJ0Bb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18927272027",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-31T21:39:56Z",
      "requested_reviewer": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 3143760463,
      "node_id": "IC_kwDOABII5867YfpP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3143760463",
      "actor": {
        "login": "nervana21",
        "id": 205626986,
        "node_id": "U_kgDODEGeag",
        "avatar_url": "https://avatars.githubusercontent.com/u/205626986?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nervana21",
        "html_url": "https://github.com/nervana21",
        "followers_url": "https://api.github.com/users/nervana21/followers",
        "following_url": "https://api.github.com/users/nervana21/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nervana21/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nervana21/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nervana21/subscriptions",
        "organizations_url": "https://api.github.com/users/nervana21/orgs",
        "repos_url": "https://api.github.com/users/nervana21/repos",
        "events_url": "https://api.github.com/users/nervana21/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nervana21/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-01T08:46:44Z",
      "updated_at": "2025-08-01T08:46:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "tACK 0e22a14\r\n\r\nAfter understanding the larger context of this PR, I thoroughly reviewed all code. I also ran the updated tests locally and modified them such that they all passed and failed in the expected manner.",
      "user": {
        "login": "nervana21",
        "id": 205626986,
        "node_id": "U_kgDODEGeag",
        "avatar_url": "https://avatars.githubusercontent.com/u/205626986?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nervana21",
        "html_url": "https://github.com/nervana21",
        "followers_url": "https://api.github.com/users/nervana21/followers",
        "following_url": "https://api.github.com/users/nervana21/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nervana21/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nervana21/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nervana21/subscriptions",
        "organizations_url": "https://api.github.com/users/nervana21/orgs",
        "repos_url": "https://api.github.com/users/nervana21/repos",
        "events_url": "https://api.github.com/users/nervana21/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nervana21/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33105#issuecomment-3143760463",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33105"
    },
    {
      "event": "reviewed",
      "id": 3080155389,
      "node_id": "PRR_kwDOABII5863l3D9",
      "url": null,
      "actor": null,
      "commit_id": "0e22a1401c7edee8946f404dd0deb59a94231340",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "approach ACK - I'm not super confident in my script knowledge but I can't think of why you couldn't detect witness stripped this way.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33105#pullrequestreview-3080155389",
      "submitted_at": "2025-08-01T18:37:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33105"
    },
    {
      "event": "commented",
      "id": 3148912384,
      "node_id": "IC_kwDOABII5867sJcA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3148912384",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-04T02:03:45Z",
      "updated_at": "2025-08-04T02:28:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "I'm a little out of my depth and it is getting late so might be off-base, but reviewing this PR I think it's a slight behavior change in what we see as witness-stripped? P2SH-P2WSH are not caught by `IsWitnessProgram` in this PR, but they are caught as witness-stripped in master. I checked by running the test_p2sh_witness subtest in p2p_segwit.py and printing if witness-stripped was detected. I didn't test P2SH-P2WPKH. Not sure if it matters, figured I'd point it out.",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33105#issuecomment-3148912384",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33105"
    },
    {
      "event": "commented",
      "id": 3149108432,
      "node_id": "IC_kwDOABII5867s5TQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3149108432",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-04T04:42:54Z",
      "updated_at": "2025-08-04T04:42:54Z",
      "author_association": "MEMBER",
      "body": "Good catch.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33105#issuecomment-3149108432",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33105"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2244141585",
      "pull_request_review_id": 3073725534,
      "id": 2244141585,
      "node_id": "PRRC_kwDOABII586FwuIR",
      "diff_hunk": "@@ -902,8 +902,24 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     }\n \n     // Check for non-standard witnesses.\n-    if (tx.HasWitness() && m_pool.m_opts.require_standard && !IsWitnessStandard(tx, m_view)) {\n-        return state.Invalid(TxValidationResult::TX_WITNESS_MUTATED, \"bad-witness-nonstandard\");\n+    if (tx.HasWitness()) {\n+        if (m_pool.m_opts.require_standard && !IsWitnessStandard(tx, m_view)) {\n+            return state.Invalid(TxValidationResult::TX_WITNESS_MUTATED, \"bad-witness-nonstandard\");\n+        }\n+    } else {",
      "path": "src/validation.cpp",
      "position": 10,
      "original_position": 10,
      "commit_id": "0e22a1401c7edee8946f404dd0deb59a94231340",
      "original_commit_id": "0e22a1401c7edee8946f404dd0deb59a94231340",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Shouldn't this check also be gated by `m_opts.require_standard` ? I guess that could be done in #29843 presuming this is merged first.",
      "created_at": "2025-07-31T01:13:28Z",
      "updated_at": "2025-07-31T01:23:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33105#discussion_r2244141585",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2244141585"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33105"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 909,
      "original_line": 909,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2244144979",
      "pull_request_review_id": 3073725534,
      "id": 2244144979,
      "node_id": "PRRC_kwDOABII586Fwu9T",
      "diff_hunk": "@@ -902,8 +902,24 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     }\n \n     // Check for non-standard witnesses.\n-    if (tx.HasWitness() && m_pool.m_opts.require_standard && !IsWitnessStandard(tx, m_view)) {\n-        return state.Invalid(TxValidationResult::TX_WITNESS_MUTATED, \"bad-witness-nonstandard\");\n+    if (tx.HasWitness()) {\n+        if (m_pool.m_opts.require_standard && !IsWitnessStandard(tx, m_view)) {\n+            return state.Invalid(TxValidationResult::TX_WITNESS_MUTATED, \"bad-witness-nonstandard\");\n+        }\n+    } else {\n+        // All standard Segwit programs but P2A require a non-empty witness. Detect if it is spending a non-P2A Segwit\n+        // program with no witness. We specifically detect the case of stripped witness because in this case wtxid==txid\n+        // and adding the wtxid to the reject filter upon Script validation failure could allow a malicious peer to\n+        // interfere with orphan parent resolution (which is necessarily done by txid) as used in 1p1c package relay. For\n+        // more details see this brief historical summary: https://github.com/bitcoin/bitcoin/pull/32379#issuecomment-2985252920.\n+        int version;\n+        std::vector<uint8_t> program;\n+        for (const auto& txin: tx.vin) {\n+            const auto& prev_spk{m_view.AccessCoin(txin.prevout).out.scriptPubKey};\n+            if (prev_spk.IsWitnessProgram(version, program) && !prev_spk.IsPayToAnchor(version, program)) {",
      "path": "src/validation.cpp",
      "position": 20,
      "original_position": 20,
      "commit_id": "0e22a1401c7edee8946f404dd0deb59a94231340",
      "original_commit_id": "0e22a1401c7edee8946f404dd0deb59a94231340",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe put this logic in policy.h and call `if (RequiresNonEmptyWitness(prev_spk))` or `if (RequiresNonEmptyWitness(tx))`?",
      "created_at": "2025-07-31T01:17:49Z",
      "updated_at": "2025-07-31T01:23:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33105#discussion_r2244144979",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2244144979"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33105"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 919,
      "original_line": 919,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2245380170",
      "pull_request_review_id": 3075411239,
      "id": 2245380170,
      "node_id": "PRRC_kwDOABII586F1chK",
      "diff_hunk": "@@ -902,8 +902,24 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     }\n \n     // Check for non-standard witnesses.\n-    if (tx.HasWitness() && m_pool.m_opts.require_standard && !IsWitnessStandard(tx, m_view)) {\n-        return state.Invalid(TxValidationResult::TX_WITNESS_MUTATED, \"bad-witness-nonstandard\");\n+    if (tx.HasWitness()) {\n+        if (m_pool.m_opts.require_standard && !IsWitnessStandard(tx, m_view)) {\n+            return state.Invalid(TxValidationResult::TX_WITNESS_MUTATED, \"bad-witness-nonstandard\");\n+        }\n+    } else {",
      "path": "src/validation.cpp",
      "position": 10,
      "original_position": 10,
      "commit_id": "0e22a1401c7edee8946f404dd0deb59a94231340",
      "original_commit_id": "0e22a1401c7edee8946f404dd0deb59a94231340",
      "in_reply_to_id": 2244141585,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I considered it and decided against because 1) whether to add the txid to the reject filter seems unrelated to standardness (and surprising that `-acceptnonstdtxn=1` would now break 1p1c in the adversarial case) and 2) a failure here means the witness is invalid by consensus, #29843 would already not allow it today on master.",
      "created_at": "2025-07-31T13:19:08Z",
      "updated_at": "2025-07-31T13:19:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33105#discussion_r2245380170",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2245380170"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33105"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 909,
      "original_line": 909,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2245449707",
      "pull_request_review_id": 3075509933,
      "id": 2245449707,
      "node_id": "PRRC_kwDOABII586F1tfr",
      "diff_hunk": "@@ -902,8 +902,24 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     }\n \n     // Check for non-standard witnesses.\n-    if (tx.HasWitness() && m_pool.m_opts.require_standard && !IsWitnessStandard(tx, m_view)) {\n-        return state.Invalid(TxValidationResult::TX_WITNESS_MUTATED, \"bad-witness-nonstandard\");\n+    if (tx.HasWitness()) {\n+        if (m_pool.m_opts.require_standard && !IsWitnessStandard(tx, m_view)) {\n+            return state.Invalid(TxValidationResult::TX_WITNESS_MUTATED, \"bad-witness-nonstandard\");\n+        }\n+    } else {\n+        // All standard Segwit programs but P2A require a non-empty witness. Detect if it is spending a non-P2A Segwit\n+        // program with no witness. We specifically detect the case of stripped witness because in this case wtxid==txid\n+        // and adding the wtxid to the reject filter upon Script validation failure could allow a malicious peer to\n+        // interfere with orphan parent resolution (which is necessarily done by txid) as used in 1p1c package relay. For\n+        // more details see this brief historical summary: https://github.com/bitcoin/bitcoin/pull/32379#issuecomment-2985252920.\n+        int version;\n+        std::vector<uint8_t> program;\n+        for (const auto& txin: tx.vin) {\n+            const auto& prev_spk{m_view.AccessCoin(txin.prevout).out.scriptPubKey};\n+            if (prev_spk.IsWitnessProgram(version, program) && !prev_spk.IsPayToAnchor(version, program)) {",
      "path": "src/validation.cpp",
      "position": 20,
      "original_position": 20,
      "commit_id": "0e22a1401c7edee8946f404dd0deb59a94231340",
      "original_commit_id": "0e22a1401c7edee8946f404dd0deb59a94231340",
      "in_reply_to_id": 2244144979,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think this would be a bit confusing because it would need to return `true` for undefined program types, whereas we don't know yes if this type will require a witness or not (presumably yes, but hey). I also think it's brief enough to not warrant its own function. Happy to change it, but it seems cleaner this way.",
      "created_at": "2025-07-31T13:45:19Z",
      "updated_at": "2025-07-31T13:45:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33105#discussion_r2245449707",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2245449707"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33105"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 919,
      "original_line": 919,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2245453045",
      "pull_request_review_id": 3075514947,
      "id": 2245453045,
      "node_id": "PRRC_kwDOABII586F1uT1",
      "diff_hunk": "@@ -902,8 +902,24 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     }",
      "path": "src/validation.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "0e22a1401c7edee8946f404dd0deb59a94231340",
      "original_commit_id": "0e22a1401c7edee8946f404dd0deb59a94231340",
      "in_reply_to_id": null,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "self nit: if i retouch, 0e22a1401c7edee8946f404dd0deb59a94231340's message is missing a word at the end of the second sentence.",
      "created_at": "2025-07-31T13:46:42Z",
      "updated_at": "2025-07-31T13:46:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33105#discussion_r2245453045",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2245453045"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33105"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 902,
      "original_line": 902,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2245589620",
      "pull_request_review_id": 3075715872,
      "id": 2245589620,
      "node_id": "PRRC_kwDOABII586F2Pp0",
      "diff_hunk": "@@ -902,8 +902,24 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     }\n \n     // Check for non-standard witnesses.",
      "path": "src/validation.cpp",
      "position": 3,
      "original_position": 3,
      "commit_id": "0e22a1401c7edee8946f404dd0deb59a94231340",
      "original_commit_id": "0e22a1401c7edee8946f404dd0deb59a94231340",
      "in_reply_to_id": null,
      "user": {
        "login": "nervana21",
        "id": 205626986,
        "node_id": "U_kgDODEGeag",
        "avatar_url": "https://avatars.githubusercontent.com/u/205626986?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nervana21",
        "html_url": "https://github.com/nervana21",
        "followers_url": "https://api.github.com/users/nervana21/followers",
        "following_url": "https://api.github.com/users/nervana21/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nervana21/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nervana21/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nervana21/subscriptions",
        "organizations_url": "https://api.github.com/users/nervana21/orgs",
        "repos_url": "https://api.github.com/users/nervana21/repos",
        "events_url": "https://api.github.com/users/nervana21/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nervana21/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Small nit. This comment could be updated now that we're checking for both `nonstandard` and `stripped` witnesses\r\n\r\n```suggestion\r\n    // Check for witness-related policy violations.\r\n```",
      "created_at": "2025-07-31T14:37:15Z",
      "updated_at": "2025-07-31T14:37:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33105#discussion_r2245589620",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2245589620"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33105"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 904,
      "original_line": 904,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2247057170",
      "pull_request_review_id": 3077863439,
      "id": 2247057170,
      "node_id": "PRRC_kwDOABII586F718S",
      "diff_hunk": "@@ -902,8 +902,24 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     }\n \n     // Check for non-standard witnesses.\n-    if (tx.HasWitness() && m_pool.m_opts.require_standard && !IsWitnessStandard(tx, m_view)) {\n-        return state.Invalid(TxValidationResult::TX_WITNESS_MUTATED, \"bad-witness-nonstandard\");\n+    if (tx.HasWitness()) {\n+        if (m_pool.m_opts.require_standard && !IsWitnessStandard(tx, m_view)) {\n+            return state.Invalid(TxValidationResult::TX_WITNESS_MUTATED, \"bad-witness-nonstandard\");\n+        }\n+    } else {\n+        // All standard Segwit programs but P2A require a non-empty witness. Detect if it is spending a non-P2A Segwit\n+        // program with no witness. We specifically detect the case of stripped witness because in this case wtxid==txid\n+        // and adding the wtxid to the reject filter upon Script validation failure could allow a malicious peer to\n+        // interfere with orphan parent resolution (which is necessarily done by txid) as used in 1p1c package relay. For\n+        // more details see this brief historical summary: https://github.com/bitcoin/bitcoin/pull/32379#issuecomment-2985252920.\n+        int version;\n+        std::vector<uint8_t> program;\n+        for (const auto& txin: tx.vin) {\n+            const auto& prev_spk{m_view.AccessCoin(txin.prevout).out.scriptPubKey};\n+            if (prev_spk.IsWitnessProgram(version, program) && !prev_spk.IsPayToAnchor(version, program)) {",
      "path": "src/validation.cpp",
      "position": 20,
      "original_position": 20,
      "commit_id": "0e22a1401c7edee8946f404dd0deb59a94231340",
      "original_commit_id": "0e22a1401c7edee8946f404dd0deb59a94231340",
      "in_reply_to_id": 2244144979,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think that's fine -- if `require_standard` is true, then undefined program types will have already given an INPUTS_NOT_STANDARD response; if it's not true and #29843 has been merged, then we'll accept any witness including a null witness for undefined program types, so `RequiresNonEmptyWitness` should return false for them. That can change to true when they're defined in a soft-fork, but that's soft-fork behaviour, so should be fine.\r\n\r\nBut worrying about it in 29843 rather than here seems best.",
      "created_at": "2025-08-01T06:20:10Z",
      "updated_at": "2025-08-01T06:20:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33105#discussion_r2247057170",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2247057170"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33105"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 919,
      "original_line": 919,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2247327447",
      "pull_request_review_id": 3078250820,
      "id": 2247327447,
      "node_id": "PRRC_kwDOABII586F837X",
      "diff_hunk": "@@ -902,8 +902,24 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     }\n \n     // Check for non-standard witnesses.\n-    if (tx.HasWitness() && m_pool.m_opts.require_standard && !IsWitnessStandard(tx, m_view)) {\n-        return state.Invalid(TxValidationResult::TX_WITNESS_MUTATED, \"bad-witness-nonstandard\");\n+    if (tx.HasWitness()) {\n+        if (m_pool.m_opts.require_standard && !IsWitnessStandard(tx, m_view)) {\n+            return state.Invalid(TxValidationResult::TX_WITNESS_MUTATED, \"bad-witness-nonstandard\");\n+        }\n+    } else {\n+        // All standard Segwit programs but P2A require a non-empty witness. Detect if it is spending a non-P2A Segwit\n+        // program with no witness. We specifically detect the case of stripped witness because in this case wtxid==txid\n+        // and adding the wtxid to the reject filter upon Script validation failure could allow a malicious peer to\n+        // interfere with orphan parent resolution (which is necessarily done by txid) as used in 1p1c package relay. For\n+        // more details see this brief historical summary: https://github.com/bitcoin/bitcoin/pull/32379#issuecomment-2985252920.\n+        int version;\n+        std::vector<uint8_t> program;\n+        for (const auto& txin: tx.vin) {\n+            const auto& prev_spk{m_view.AccessCoin(txin.prevout).out.scriptPubKey};\n+            if (prev_spk.IsWitnessProgram(version, program) && !prev_spk.IsPayToAnchor(version, program)) {",
      "path": "src/validation.cpp",
      "position": 20,
      "original_position": 20,
      "commit_id": "0e22a1401c7edee8946f404dd0deb59a94231340",
      "original_commit_id": "0e22a1401c7edee8946f404dd0deb59a94231340",
      "in_reply_to_id": 2244144979,
      "user": {
        "login": "nervana21",
        "id": 205626986,
        "node_id": "U_kgDODEGeag",
        "avatar_url": "https://avatars.githubusercontent.com/u/205626986?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nervana21",
        "html_url": "https://github.com/nervana21",
        "followers_url": "https://api.github.com/users/nervana21/followers",
        "following_url": "https://api.github.com/users/nervana21/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nervana21/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nervana21/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nervana21/subscriptions",
        "organizations_url": "https://api.github.com/users/nervana21/orgs",
        "repos_url": "https://api.github.com/users/nervana21/repos",
        "events_url": "https://api.github.com/users/nervana21/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nervana21/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I followed ajtowns suggestion and moved the logic to `policy.h` as defined in the patch below. Instead of `RequiresNonEmptyWitness`, the function is named `IsNonAnchorWitnessProgram`. This way, returning `true` for undefined program types that are non-P2A witness programs still makes sense.\r\n<details>\r\n<summary>Expand patch</summary>\r\n\r\n```diff \r\ndiff --git a/src/policy/policy.cpp b/src/policy/policy.cpp\r\nindex 48f2a6a744..2b03a404a9 100644\r\n--- a/src/policy/policy.cpp\r\n+++ b/src/policy/policy.cpp\r\n@@ -96,6 +96,14 @@ bool IsStandard(const CScript& scriptPubKey, TxoutType& whichType)\r\n     return true;\r\n }\r\n \r\n+bool IsNonAnchorWitnessProgram(const CScript& scriptPubKey)\r\n+{\r\n+    int version;\r\n+    std::vector<uint8_t> program;\r\n+    return scriptPubKey.IsWitnessProgram(version, program) &&\r\n+           !scriptPubKey.IsPayToAnchor(version, program);\r\n+}\r\n+\r\n bool IsStandardTx(const CTransaction& tx, const std::optional<unsigned>& max_datacarrier_bytes, bool permit_bare_multisig, const CFeeRate& dust_relay_fee, std::string& reason)\r\n {\r\n     if (tx.version > TX_MAX_STANDARD_VERSION || tx.version < 1) {\r\ndiff --git a/src/policy/policy.h b/src/policy/policy.h\r\nindex f9a18561bc..f3982bfa9f 100644\r\n--- a/src/policy/policy.h\r\n+++ b/src/policy/policy.h\r\n@@ -139,6 +139,23 @@ bool IsDust(const CTxOut& txout, const CFeeRate& dustRelayFee);\r\n \r\n bool IsStandard(const CScript& scriptPubKey, TxoutType& whichType);\r\n \r\n+/**\r\n+ * Check if the script is a witness program that is not P2A (Pay-to-Anchor).\r\n+ *\r\n+ * All standard Segwit programs but P2A require a non-empty witness.\r\n+ * Detect if it is spending a non-P2A Segwit program with no witness.\r\n+ * We specifically detect the case of stripped witness because in this\r\n+ * case wtxid==txid and adding the wtxid to the reject filter upon Script\r\n+ * validation failure could allow a malicious peer to interfere with orphan\r\n+ * parent resolution (which is necessarily done by txid) as used in 1p1c\r\n+ * package relay. For more details see this brief historical summary:\r\n+ * https://github.com/bitcoin/bitcoin/pull/32379#issuecomment-2985252920.\r\n+ *\r\n+ * @param[in] scriptPubKey The script to check.\r\n+ * @return True if the script is a witness program that is not P2A.\r\n+ */\r\n+bool IsNonAnchorWitnessProgram(const CScript& scriptPubKey);\r\n+\r\n /** Get the vout index numbers of all dust outputs */\r\n std::vector<uint32_t> GetDust(const CTransaction& tx, CFeeRate dust_relay_rate);\r\n \r\ndiff --git a/src/validation.cpp b/src/validation.cpp\r\nindex ac4eac45e9..9813f1553e 100644\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -901,22 +901,16 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\r\n         return state.Invalid(TxValidationResult::TX_INPUTS_NOT_STANDARD, \"bad-txns-nonstandard-inputs\");\r\n     }\r\n \r\n-    // Check for non-standard witnesses.\r\n+    // Check for witness-related policy violations.\r\n     if (tx.HasWitness()) {\r\n         if (m_pool.m_opts.require_standard && !IsWitnessStandard(tx, m_view)) {\r\n             return state.Invalid(TxValidationResult::TX_WITNESS_MUTATED, \"bad-witness-nonstandard\");\r\n         }\r\n     } else {\r\n-        // All standard Segwit programs but P2A require a non-empty witness. Detect if it is spending a non-P2A Segwit\r\n-        // program with no witness. We specifically detect the case of stripped witness because in this case wtxid==txid\r\n-        // and adding the wtxid to the reject filter upon Script validation failure could allow a malicious peer to\r\n-        // interfere with orphan parent resolution (which is necessarily done by txid) as used in 1p1c package relay. For\r\n-        // more details see this brief historical summary: https://github.com/bitcoin/bitcoin/pull/32379#issuecomment-2985252920.\r\n-        int version;\r\n-        std::vector<uint8_t> program;\r\n+        // Check if any input is spending a witness output without providing a witness\r\n         for (const auto& txin: tx.vin) {\r\n             const auto& prev_spk{m_view.AccessCoin(txin.prevout).out.scriptPubKey};\r\n-            if (prev_spk.IsWitnessProgram(version, program) && !prev_spk.IsPayToAnchor(version, program)) {\r\n+            if (IsNonAnchorWitnessProgram(prev_spk)) {\r\n                 return state.Invalid(TxValidationResult::TX_WITNESS_STRIPPED, \"bad-witness-stripped\");\r\n             }\r\n         }\r\n\r\n```\r\n</details>\r\n\r\nPlease feel free to use if helpful — or disregard if not :)",
      "created_at": "2025-08-01T08:34:31Z",
      "updated_at": "2025-08-01T08:34:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33105#discussion_r2247327447",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2247327447"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33105"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 919,
      "original_line": 919,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2248582026",
      "pull_request_review_id": 3080155389,
      "id": 2248582026,
      "node_id": "PRRC_kwDOABII586GBqOK",
      "diff_hunk": "@@ -902,8 +902,24 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     }\n \n     // Check for non-standard witnesses.\n-    if (tx.HasWitness() && m_pool.m_opts.require_standard && !IsWitnessStandard(tx, m_view)) {\n-        return state.Invalid(TxValidationResult::TX_WITNESS_MUTATED, \"bad-witness-nonstandard\");\n+    if (tx.HasWitness()) {\n+        if (m_pool.m_opts.require_standard && !IsWitnessStandard(tx, m_view)) {\n+            return state.Invalid(TxValidationResult::TX_WITNESS_MUTATED, \"bad-witness-nonstandard\");\n+        }\n+    } else {\n+        // All standard Segwit programs but P2A require a non-empty witness. Detect if it is spending a non-P2A Segwit\n+        // program with no witness. We specifically detect the case of stripped witness because in this case wtxid==txid\n+        // and adding the wtxid to the reject filter upon Script validation failure could allow a malicious peer to\n+        // interfere with orphan parent resolution (which is necessarily done by txid) as used in 1p1c package relay. For\n+        // more details see this brief historical summary: https://github.com/bitcoin/bitcoin/pull/32379#issuecomment-2985252920.",
      "path": "src/validation.cpp",
      "position": 15,
      "original_position": 15,
      "commit_id": "0e22a1401c7edee8946f404dd0deb59a94231340",
      "original_commit_id": "0e22a1401c7edee8946f404dd0deb59a94231340",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't think this comment belongs here. It has too many details about net_processing logic that shouldn't really be mentioned in validation / are already covered in the code that does rejection caching.\r\n```suggestion\r\n        // Detect a missing witness so that p2p code can handle rejection caching appropriately.\r\n```",
      "created_at": "2025-08-01T18:17:12Z",
      "updated_at": "2025-08-01T18:37:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33105#discussion_r2248582026",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2248582026"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33105"
        }
      },
      "start_line": 910,
      "original_start_line": 910,
      "start_side": "RIGHT",
      "line": 914,
      "original_line": 914,
      "side": "RIGHT"
    }
  ]
}