{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122",
    "id": 1652349675,
    "node_id": "PR_kwDOABII585ifNrr",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/29122",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/29122.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/29122.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/d53d84834747c37f4060a9ef379e0a6b50155246",
    "number": 29122,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "test: adds outbound eviction functional tests, updates comment in ConsiderEviction",
    "user": {
      "login": "sr-gi",
      "id": 6665628,
      "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sr-gi",
      "html_url": "https://github.com/sr-gi",
      "followers_url": "https://api.github.com/users/sr-gi/followers",
      "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
      "organizations_url": "https://api.github.com/users/sr-gi/orgs",
      "repos_url": "https://api.github.com/users/sr-gi/repos",
      "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sr-gi/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "## Motivation\r\n\r\nWhile checking the outbound eviction code I realized a case was not considered within the comments, which in turn made me realize we had no functional tests for the outbound eviction case (when I went to check/add the test case).\r\n\r\nThis PR updates the aforementioned comment and adds functional tests to cover the outbound eviction logic, in addition to the existing unit tests found at `src/test/denialofservice_tests.cpp`.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2023-12-20T16:00:14Z",
    "updated_at": "2025-05-09T07:54:17Z",
    "closed_at": "2024-05-09T20:20:59Z",
    "mergeable_state": "unknown",
    "merged": true,
    "merged_at": "2024-05-09T20:20:59Z",
    "merged_by": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "merge_commit_sha": "012e540acee4c06dbade5451e76c606f987e5957",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "sr-gi:2023-12-20-eviction-tests",
      "ref": "2023-12-20-eviction-tests",
      "sha": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 217783888,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTc3ODM4ODg=",
        "name": "bitcoin",
        "full_name": "sr-gi/bitcoin",
        "owner": {
          "login": "sr-gi",
          "id": 6665628,
          "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sr-gi",
          "html_url": "https://github.com/sr-gi",
          "followers_url": "https://api.github.com/users/sr-gi/followers",
          "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
          "organizations_url": "https://api.github.com/users/sr-gi/orgs",
          "repos_url": "https://api.github.com/users/sr-gi/repos",
          "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sr-gi/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/sr-gi/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sr-gi/bitcoin",
        "archive_url": "https://api.github.com/repos/sr-gi/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sr-gi/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sr-gi/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sr-gi/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sr-gi/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sr-gi/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sr-gi/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sr-gi/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sr-gi/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sr-gi/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sr-gi/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sr-gi/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sr-gi/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sr-gi/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sr-gi/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sr-gi/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sr-gi/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sr-gi/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sr-gi/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sr-gi/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sr-gi/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sr-gi/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sr-gi/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sr-gi/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sr-gi/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sr-gi/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sr-gi/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sr-gi/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sr-gi/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sr-gi/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sr-gi/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sr-gi/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sr-gi/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sr-gi/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sr-gi/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sr-gi/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sr-gi/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sr-gi/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sr-gi/bitcoin/hooks",
        "svn_url": "https://github.com/sr-gi/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 261870,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-05-01T19:18:31Z",
        "created_at": "2019-10-27T00:01:30Z",
        "updated_at": "2025-04-24T14:24:00Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "7973a670915632b75a6aa16f24f98b936865c48f",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37187,
        "stargazers_count": 83459,
        "watchers_count": 83459,
        "size": 281525,
        "default_branch": "master",
        "open_issues_count": 717,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-05-08T20:57:53Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-05-09T07:44:45Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 261,
    "deletions": 4,
    "changed_files": 3,
    "commits": 2,
    "review_comments": 53,
    "comments": 32
  },
  "events": [
    {
      "event": "commented",
      "id": 1864737433,
      "node_id": "IC_kwDOABII585vJaKZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1864737433",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-20T16:00:17Z",
      "updated_at": "2024-05-09T20:14:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29122).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [davidgumberg](https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-2080236283), [cbergqvist](https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-2027367015), [tdb3](https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-2094859146), [achow101](https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-2103348027) |\n| Concept ACK | [sipa](https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-2002529945), [stratospher](https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-1947868943), [marcofleon](https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-2048227292) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-1864737433",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "labeled",
      "id": 11304564568,
      "node_id": "LE_lADOABII5856PZKxzwAAAAKhzfdY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11304564568",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-20T16:00:20Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 1864741013,
      "node_id": "IC_kwDOABII585vJbCV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1864741013",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-20T16:02:17Z",
      "updated_at": "2023-12-20T16:02:17Z",
      "author_association": "MEMBER",
      "body": "While the tests seem to run fine, I noticed a warning that appears every now and then:\r\n\r\n```\r\nTestFramework.p2p (WARNING): Connection lost to 0:0 due to [Errno 54] Connection reset by peer\r\n```\r\n\r\nI'm not sure if something unintended is happening under the hood. Disconnections are expected, but it's our node who is supposed to trigger them, so maybe I'm missing something.",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-1864741013",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11304718584,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAKh0FD4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11304718584",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cd11dab86d07b6a12acb031daca9f2e07ddb28db",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/cd11dab86d07b6a12acb031daca9f2e07ddb28db",
      "created_at": "2023-12-20T16:13:30Z"
    },
    {
      "event": "labeled",
      "id": 11304719653,
      "node_id": "LE_lADOABII5856PZKxzwAAAAKh0FUl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11304719653",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-20T16:13:36Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11304987780,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAKh1GyE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11304987780",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "34646beec3da0a99a352e30527be1bd881d80890",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/34646beec3da0a99a352e30527be1bd881d80890",
      "created_at": "2023-12-20T16:37:41Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11306365003,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAKh6XBL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11306365003",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6d6eda73d626f40a7aea58f2fed334156b104685",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/6d6eda73d626f40a7aea58f2fed334156b104685",
      "created_at": "2023-12-20T18:58:22Z"
    },
    {
      "event": "renamed",
      "id": 11306438301,
      "node_id": "RTE_lADOABII5856PZKxzwAAAAKh6o6d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11306438301",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-20T19:06:49Z",
      "rename": {
        "from": "test: adds outbound eviction functional tests, updated comment on ConsiderEviction",
        "to": "test: adds outbound eviction functional tests, updates comment in ConsiderEviction"
      }
    },
    {
      "event": "unlabeled",
      "id": 11306730207,
      "node_id": "UNLE_lADOABII5856PZKxzwAAAAKh7wLf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11306730207",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-20T19:39:46Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11306831122,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAKh8I0S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11306831122",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9ba568c816794698507793a7c1d2a9935bb269b2",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/9ba568c816794698507793a7c1d2a9935bb269b2",
      "created_at": "2023-12-20T19:51:48Z"
    },
    {
      "event": "reviewed",
      "id": 1794219517,
      "node_id": "PRR_kwDOABII585q8Z39",
      "url": null,
      "actor": null,
      "commit_id": "9ba568c816794698507793a7c1d2a9935bb269b2",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-1794219517",
      "submitted_at": "2023-12-22T09:34:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11382187026,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAKmbmQS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11382187026",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1444a261a7fa4ed9ac54957468a2ab03c2b3a13d",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/1444a261a7fa4ed9ac54957468a2ab03c2b3a13d",
      "created_at": "2024-01-03T18:47:39Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11382395291,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAKmcZGb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11382395291",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8833aa6df009050b34d1075d73baa33479a6203e",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/8833aa6df009050b34d1075d73baa33479a6203e",
      "created_at": "2024-01-03T19:15:59Z"
    },
    {
      "event": "labeled",
      "id": 11382396776,
      "node_id": "LE_lADOABII5856PZKxzwAAAAKmcZdo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11382396776",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-03T19:16:11Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11382844423,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAKmeGwH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11382844423",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "599e98451dfcbc2f4851cc676bb28a3dbf1d9aab",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/599e98451dfcbc2f4851cc676bb28a3dbf1d9aab",
      "created_at": "2024-01-03T20:17:34Z"
    },
    {
      "event": "unlabeled",
      "id": 11383234393,
      "node_id": "UNLE_lADOABII5856PZKxzwAAAAKmfl9Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11383234393",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-03T21:14:31Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11391928749,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAKnAwmt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11391928749",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2e15c4fed2aa1a9e89e36f1a5e5dcaa33cc7ab74",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/2e15c4fed2aa1a9e89e36f1a5e5dcaa33cc7ab74",
      "created_at": "2024-01-04T16:12:04Z"
    },
    {
      "event": "labeled",
      "id": 11491736974,
      "node_id": "LE_lADOABII5856PZKxzwAAAAKs9f2O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11491736974",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-15T19:58:58Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11633837724,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAK1bkac",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11633837724",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "24b790680340b5d11366af0e7dd415c9a455100e",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/24b790680340b5d11366af0e7dd415c9a455100e",
      "created_at": "2024-01-29T22:06:26Z"
    },
    {
      "event": "commented",
      "id": 1915658857,
      "node_id": "IC_kwDOABII585yLqJp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1915658857",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-29T22:06:39Z",
      "updated_at": "2024-01-29T22:06:39Z",
      "author_association": "MEMBER",
      "body": "Rebased to fix CI",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-1915658857",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "unlabeled",
      "id": 11634550743,
      "node_id": "UNLE_lADOABII5856PZKxzwAAAAK1eSfX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11634550743",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-29T23:41:35Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 11711371556,
      "node_id": "LE_lADOABII5856PZKxzwAAAAK6DVkk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11711371556",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-06T00:09:30Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11719491372,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAK6iT8s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11719491372",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b8b2370f2d6a20cee1c449c5ebe71d60619cdea5",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/b8b2370f2d6a20cee1c449c5ebe71d60619cdea5",
      "created_at": "2024-02-06T14:52:52Z"
    },
    {
      "event": "commented",
      "id": 1929956244,
      "node_id": "IC_kwDOABII585zCMuU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1929956244",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-06T14:55:12Z",
      "updated_at": "2024-02-06T14:59:07Z",
      "author_association": "MEMBER",
      "body": "Rebased. This has failed CI once when waiting for the disconnection after:\r\n\r\n```\r\ncur_mock_time += (HEADERS_RESPONSE_TIME + 1)\r\n```\r\nI've tried to reproduce it but I cannot in my local setup, the only thing that comes to mind is that mock time may be too close to the timeout (only one second ahead), so I gave it a delta of 10 seconds instead.\r\n\r\nPS: For context, you can check the failure here: https://cirrus-ci.com/task/4624744360706048?logs=ci#L6520. See how the peer is given the final notice by sending a getheaders message, but the check is performed before the peer gets disconnected. \r\n",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-1929956244",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11720259525,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAK6lPfF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11720259525",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "edc14bc9da332cae39f8803db559b532b3c74e16",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/edc14bc9da332cae39f8803db559b532b3c74e16",
      "created_at": "2024-02-06T15:45:35Z"
    },
    {
      "event": "unlabeled",
      "id": 11721889891,
      "node_id": "UNLE_lADOABII5856PZKxzwAAAAK6rdhj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11721889891",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-06T17:36:23Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1874277464,
      "node_id": "PRR_kwDOABII585vtzRY",
      "url": null,
      "actor": null,
      "commit_id": "edc14bc9da332cae39f8803db559b532b3c74e16",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Excellent work finding a gap and filling it by increasing functional test robustness.\r\nACK for edc14bc9da332cae39f8803db559b532b3c74e16\r\n\r\nChecked out the PR branch, built, and ran all functional tests (all passed).\r\n\r\nThe review was focused on verifying edge case coverage of the tests and that tests will accurately catch both pass and fail conditions.\r\n\r\nDid not observe previously reported warning message:\r\n```\r\nTestFramework.p2p (WARNING): Connection lost to 0:0 due to [Errno 54] Connection reset by peer\r\n```",
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-1874277464",
      "submitted_at": "2024-02-11T00:06:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
    },
    {
      "event": "reviewed",
      "id": 1875503633,
      "node_id": "PRR_kwDOABII585vyeoR",
      "url": null,
      "actor": null,
      "commit_id": "edc14bc9da332cae39f8803db559b532b3c74e16",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Thanks for the review @tdb3 ",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-1875503633",
      "submitted_at": "2024-02-12T16:00:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
    },
    {
      "event": "commented",
      "id": 1939071798,
      "node_id": "IC_kwDOABII585zk-M2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1939071798",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-12T16:22:34Z",
      "updated_at": "2024-02-12T16:22:34Z",
      "author_association": "MEMBER",
      "body": "I redefined how peers are split in `p2p_eviction:test_outbound_eviction_protected_mixed` to address https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1485375517. Both commits can be squashed (leaving them as they are for now in case someone does not agree with the approach)",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-1939071798",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11780097098,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAK-JgRK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11780097098",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "986329f850c76a8730b1c8fade59f76f28618a95",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/986329f850c76a8730b1c8fade59f76f28618a95",
      "created_at": "2024-02-12T21:31:02Z"
    },
    {
      "event": "commented",
      "id": 1939619126,
      "node_id": "IC_kwDOABII585znD02",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1939619126",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-12T21:31:14Z",
      "updated_at": "2024-02-12T21:31:14Z",
      "author_association": "MEMBER",
      "body": "> Rebased. This has failed CI once when waiting for the disconnection after:\r\n> \r\n> ```\r\n> cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\r\n> ```\r\n> \r\n> I've tried to reproduce it but I cannot in my local setup, the only thing that comes to mind is that mock time may be too close to the timeout (only one second ahead), so I gave it a delta of 10 seconds instead.\r\n> \r\n> PS: For context, you can check the failure here: https://cirrus-ci.com/task/4624744360706048?logs=ci#L6520. See how the peer is given the final notice by sending a getheaders message, but the check is performed before the peer gets disconnected.\r\n\r\nI've been looking more into this, given an error showed up again on CI. I think the issue arose from the initial mock time not being properly set. I've reset the increments to be just one second apart, plus set the initial mock time before the tests were run.\r\n\r\nAlso, I've moved the outbound eviction tests to their own file, given `p2p_eviction` was being described as testing inbound eviction, plus used some custom classes that were only relevant for inbounds.",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-1939619126",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11780110249,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAK-Jjep",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11780110249",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1d9f10595e5127659a129834b20208cbf2a9f802",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/1d9f10595e5127659a129834b20208cbf2a9f802",
      "created_at": "2024-02-12T21:32:36Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11780202539,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAK-J6Ar",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11780202539",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "949320088628a7bdb5b281a70950d4e0cb0bb9b4",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/949320088628a7bdb5b281a70950d4e0cb0bb9b4",
      "created_at": "2024-02-12T21:42:45Z"
    },
    {
      "event": "commented",
      "id": 1939637205,
      "node_id": "IC_kwDOABII585znIPV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1939637205",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-12T21:42:50Z",
      "updated_at": "2024-02-12T21:42:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/21495911628</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-1939637205",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "labeled",
      "id": 11780203217,
      "node_id": "LE_lADOABII5856PZKxzwAAAAK-J6LR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11780203217",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-12T21:42:50Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11780280433,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAAK-KNBx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11780280433",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/f06b50dfd45000f34bf258d48101718b4b5f9772",
      "created_at": "2024-02-12T21:51:44Z"
    },
    {
      "event": "unlabeled",
      "id": 11781114130,
      "node_id": "UNLE_lADOABII5856PZKxzwAAAAK-NYkS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11781114130",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-12T23:41:29Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1939902686,
      "node_id": "IC_kwDOABII585zoJDe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1939902686",
      "actor": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-13T00:41:05Z",
      "updated_at": "2024-02-13T00:41:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "> > Rebased. This has failed CI once when waiting for the disconnection after:\r\n> > ```\r\n> > cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\r\n> > ```\r\n> > \r\n> > \r\n> >     \r\n> >       \r\n> >     \r\n> > \r\n> >       \r\n> >     \r\n> > \r\n> >     \r\n> >   \r\n> > I've tried to reproduce it but I cannot in my local setup, the only thing that comes to mind is that mock time may be too close to the timeout (only one second ahead), so I gave it a delta of 10 seconds instead.\r\n> > PS: For context, you can check the failure here: https://cirrus-ci.com/task/4624744360706048?logs=ci#L6520. See how the peer is given the final notice by sending a getheaders message, but the check is performed before the peer gets disconnected.\r\n> \r\n> I've been looking more into this, given an error showed up again on CI. I think the issue arose from the initial mock time not being properly set. I've reset the increments to be just one second apart, plus set the initial mock time before the tests were run.\r\n> \r\n> Also, I've moved the outbound eviction tests to their own file, given `p2p_eviction` was being described as testing inbound eviction, plus used some custom classes that were only relevant for inbounds.\r\n\r\n(now non-stale) ACK for f06b50dfd45000f34bf258d48101718b4b5f9772.\r\nPulled.  Built.  Ran `p2p_eviction.py` and `p2p_outbound_eviction.py`.  Both passed.",
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-1939902686",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "reviewed",
      "id": 1895842788,
      "node_id": "PRR_kwDOABII585xAEPk",
      "url": null,
      "actor": null,
      "commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Reviewed f06b50d. Appreciate the additional test coverage!",
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-1895842788",
      "submitted_at": "2024-02-22T22:08:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
    },
    {
      "event": "commented",
      "id": 1960407242,
      "node_id": "IC_kwDOABII58502XDK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1960407242",
      "actor": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-22T22:15:37Z",
      "updated_at": "2024-02-22T22:15:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "Couldn't reproduce the CI timeout issue btw. But I have encountered the warning:\r\n```\r\n2024-02-22T22:01:47.354000Z TestFramework.p2p (WARNING): Connection lost to 0:0 due to [Errno 104] Connection reset by peer\r\n```",
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-1960407242",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "reviewed",
      "id": 1897212961,
      "node_id": "PRR_kwDOABII585xFSwh",
      "url": null,
      "actor": null,
      "commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-1897212961",
      "submitted_at": "2024-02-23T00:30:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
    },
    {
      "event": "reviewed",
      "id": 1897238654,
      "node_id": "PRR_kwDOABII585xFZB-",
      "url": null,
      "actor": null,
      "commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK. Well done on the new test. Seems like a good number of cases are included. Only thing I commented on was the backslash nit in `net_processing.cpp`. \r\n\r\nNo issues or warnings when built and tested. Tests `p2p_eviction.py` and `p2p_outbound_eviction.py` ran successfully.",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-1897238654",
      "submitted_at": "2024-02-23T00:55:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11957583267,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAALIuj2j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11957583267",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "bffbb176d8a4f545c26ff7e437ab33cb004852bb",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/bffbb176d8a4f545c26ff7e437ab33cb004852bb",
      "created_at": "2024-02-28T21:09:49Z"
    },
    {
      "event": "commented",
      "id": 1969922806,
      "node_id": "IC_kwDOABII5851aqL2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1969922806",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-28T21:11:01Z",
      "updated_at": "2024-02-28T21:11:01Z",
      "author_association": "MEMBER",
      "body": "Thanks for the reviews @cbergqvist and @marcofleon, I've addressed the comments of both.\r\n\r\nI also squashed the two commits from @tdb3 given looks like no one ha opposed to those",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-1969922806",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "mentioned",
      "id": 11957595536,
      "node_id": "MEE_lADOABII5856PZKxzwAAAALIum2Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11957595536",
      "actor": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-28T21:11:02Z"
    },
    {
      "event": "subscribed",
      "id": 11957595550,
      "node_id": "SE_lADOABII5856PZKxzwAAAALIum2e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11957595550",
      "actor": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-28T21:11:02Z"
    },
    {
      "event": "mentioned",
      "id": 11957595564,
      "node_id": "MEE_lADOABII5856PZKxzwAAAALIum2s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11957595564",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-28T21:11:02Z"
    },
    {
      "event": "subscribed",
      "id": 11957595575,
      "node_id": "SE_lADOABII5856PZKxzwAAAALIum23",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11957595575",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-28T21:11:02Z"
    },
    {
      "event": "mentioned",
      "id": 11957595588,
      "node_id": "MEE_lADOABII5856PZKxzwAAAALIum3E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11957595588",
      "actor": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-28T21:11:03Z"
    },
    {
      "event": "subscribed",
      "id": 11957595615,
      "node_id": "SE_lADOABII5856PZKxzwAAAALIum3f",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11957595615",
      "actor": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-28T21:11:03Z"
    },
    {
      "event": "reviewed",
      "id": 1908308987,
      "node_id": "PRR_kwDOABII585xvnv7",
      "url": null,
      "actor": null,
      "commit_id": "bffbb176d8a4f545c26ff7e437ab33cb004852bb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK bffbb17!\r\n\r\n(Diffed `test/functional/p2p_outbound_eviction.py` against previous implementation and ran it a couple of times).",
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-1908308987",
      "submitted_at": "2024-02-29T08:58:06Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
    },
    {
      "event": "review_requested",
      "id": 11962803710,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALJCeX-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11962803710",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-29T08:58:09Z",
      "requested_reviewer": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11962803851,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALJCeaL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11962803851",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-29T08:58:10Z",
      "requested_reviewer": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11962804274,
      "node_id": "RRRE_lADOABII5856PZKxzwAAAALJCegy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11962804274",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-29T08:58:12Z",
      "requested_reviewer": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11962804297,
      "node_id": "RRRE_lADOABII5856PZKxzwAAAALJCehJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11962804297",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-29T08:58:12Z",
      "requested_reviewer": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11962804429,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALJCejN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11962804429",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-29T08:58:13Z",
      "requested_reviewer": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11962804566,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALJCelW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11962804566",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-29T08:58:14Z",
      "requested_reviewer": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11962841932,
      "node_id": "RRRE_lADOABII5856PZKxzwAAAALJCntM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11962841932",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-29T09:01:28Z",
      "requested_reviewer": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11962841949,
      "node_id": "RRRE_lADOABII5856PZKxzwAAAALJCntd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11962841949",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-29T09:01:29Z",
      "requested_reviewer": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11962842052,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALJCnvE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11962842052",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-29T09:01:29Z",
      "requested_reviewer": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11962842204,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALJCnxc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11962842204",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-29T09:01:30Z",
      "requested_reviewer": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 1972620541,
      "node_id": "IC_kwDOABII5851k8z9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1972620541",
      "actor": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T07:02:21Z",
      "updated_at": "2024-03-01T07:03:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "What do you think about testing that block-relay-only nodes get evicted and aren't eligible for protection? \r\n\r\nFor example:\r\n```python\r\n# Ensure that block-relay-only peers are not granted protection and ARE evicted\r\nself.log.info(\"Create an outbound connection to a peer that shares our tip but is block-relay only, so it does not get protection\")\r\ntest_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=1, connection_type=\"block-relay-only\")\r\n\r\ntest_node.send_and_ping(msg_headers([from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))]))\r\n\r\nself.log.info(\"Mine a new block and sync with our peer\")\r\nself.generateblock(node, output=\"raw(42)\", transactions=[])\r\ntest_node.sync_with_ping()\r\n\r\nself.log.info(\"Let enough time pass for the timeouts to go off\")\r\n# Trigger the timeouts and check how we are still connected\r\ncur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\r\nnode.setmocktime(cur_mock_time)\r\ntest_node.sync_with_ping()\r\ntest_node.wait_for_getheaders()\r\ncur_mock_time += (HEADERS_RESPONSE_TIME + 1)\r\nnode.setmocktime(cur_mock_time)\r\nself.log.info(\"Test that the block-relay-only peer gets evicted\")\r\ntest_node.wait_for_disconnect()\r\n```\r\n\r\nOtherwise, reviewed `ConsiderEviction` and the tests added here provide good coverage. I ran the `p2p_outbound_eviction.py` tests and they passed, I was unable to reproduce the connection reset mentioned above.\r\n\r\nACK https://github.com/bitcoin/bitcoin/pull/29122/commits/bffbb176d8a4f545c26ff7e437ab33cb004852bb",
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-1972620541",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "review_request_removed",
      "id": 11975418210,
      "node_id": "RRRE_lADOABII5856PZKxzwAAAALJymFi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11975418210",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T07:02:25Z",
      "requested_reviewer": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11975418219,
      "node_id": "RRRE_lADOABII5856PZKxzwAAAALJymFr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11975418219",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T07:02:25Z",
      "requested_reviewer": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11975418304,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALJymHA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11975418304",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T07:02:25Z",
      "requested_reviewer": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11975418380,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALJymIM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11975418380",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T07:02:26Z",
      "requested_reviewer": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11975426832,
      "node_id": "RRRE_lADOABII5856PZKxzwAAAALJyoMQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11975426832",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T07:03:35Z",
      "requested_reviewer": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11975426848,
      "node_id": "RRRE_lADOABII5856PZKxzwAAAALJyoMg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11975426848",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T07:03:35Z",
      "requested_reviewer": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11975426926,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALJyoNu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11975426926",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T07:03:36Z",
      "requested_reviewer": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11975427009,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALJyoPB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11975427009",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T07:03:37Z",
      "requested_reviewer": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11975429240,
      "node_id": "RRRE_lADOABII5856PZKxzwAAAALJyox4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11975429240",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T07:03:54Z",
      "requested_reviewer": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11975429252,
      "node_id": "RRRE_lADOABII5856PZKxzwAAAALJyoyE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11975429252",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T07:03:54Z",
      "requested_reviewer": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11975429352,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALJyozo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11975429352",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T07:03:55Z",
      "requested_reviewer": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11975429445,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALJyo1F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11975429445",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T07:03:56Z",
      "requested_reviewer": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 1973109552,
      "node_id": "IC_kwDOABII5851m0Mw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1973109552",
      "actor": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T12:32:21Z",
      "updated_at": "2024-03-01T12:32:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "re ACK bffbb176d8a4f545c26ff7e437ab33cb004852bb",
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-1973109552",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "review_request_removed",
      "id": 11978912505,
      "node_id": "RRRE_lADOABII5856PZKxzwAAAALJ_7L5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11978912505",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T12:32:25Z",
      "requested_reviewer": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11978912524,
      "node_id": "RRRE_lADOABII5856PZKxzwAAAALJ_7MM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11978912524",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T12:32:25Z",
      "requested_reviewer": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11978912640,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALJ_7OA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11978912640",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T12:32:26Z",
      "requested_reviewer": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 1973437237,
      "node_id": "IC_kwDOABII5851oEM1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1973437237",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T15:55:27Z",
      "updated_at": "2024-03-01T15:55:27Z",
      "author_association": "MEMBER",
      "body": "> What do you think about testing that block-relay-only nodes get evicted and aren't eligible for protection?\r\n\r\nThis was already pointed out by @tdb3 in his review: https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1486369882\r\n\r\nTL;DR; Protected peers imply `outbound-full-relay`, but given this seems to be a recurring question I'll add it to the test. I guess it wouldn't hurt having it to make sure we don't change the logic without noticing it.",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-1973437237",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "mentioned",
      "id": 11981177835,
      "node_id": "MEE_lADOABII5856PZKxzwAAAALKIkPr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11981177835",
      "actor": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T15:55:29Z"
    },
    {
      "event": "subscribed",
      "id": 11981177867,
      "node_id": "SE_lADOABII5856PZKxzwAAAALKIkQL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11981177867",
      "actor": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T15:55:30Z"
    },
    {
      "event": "review_request_removed",
      "id": 11981178179,
      "node_id": "RRRE_lADOABII5856PZKxzwAAAALKIkVD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11981178179",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T15:55:31Z",
      "requested_reviewer": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11981178280,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALKIkWo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11981178280",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T15:55:32Z",
      "requested_reviewer": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11981358020,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAALKJQPE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11981358020",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4fdc0b302063d17123f15dbe20385347fa108c35",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/4fdc0b302063d17123f15dbe20385347fa108c35",
      "created_at": "2024-03-01T16:10:21Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11981440764,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAALKJkb8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11981440764",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "099cb25aa9b1de2a88eab5a31338dc8b802d7535",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/099cb25aa9b1de2a88eab5a31338dc8b802d7535",
      "created_at": "2024-03-01T16:17:22Z"
    },
    {
      "event": "commented",
      "id": 1973478968,
      "node_id": "IC_kwDOABII5851oOY4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1973478968",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T16:19:30Z",
      "updated_at": "2024-03-01T16:19:30Z",
      "author_association": "MEMBER",
      "body": "I've added a test to cover for @tdb3 and @davidgumberg comments on non-outbound-full-relay peers eviction, plus amended the original commit to rename `test_outbound_eviction_mixed` and added a missing comment to the method.",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-1973478968",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "mentioned",
      "id": 11981465493,
      "node_id": "MEE_lADOABII5856PZKxzwAAAALKJqeV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11981465493",
      "actor": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T16:19:32Z"
    },
    {
      "event": "subscribed",
      "id": 11981465515,
      "node_id": "SE_lADOABII5856PZKxzwAAAALKJqer",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11981465515",
      "actor": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T16:19:32Z"
    },
    {
      "event": "mentioned",
      "id": 11981465537,
      "node_id": "MEE_lADOABII5856PZKxzwAAAALKJqfB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11981465537",
      "actor": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T16:19:32Z"
    },
    {
      "event": "subscribed",
      "id": 11981465555,
      "node_id": "SE_lADOABII5856PZKxzwAAAALKJqfT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11981465555",
      "actor": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T16:19:32Z"
    },
    {
      "event": "commented",
      "id": 1973641848,
      "node_id": "IC_kwDOABII5851o2J4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1973641848",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T17:59:57Z",
      "updated_at": "2024-03-01T17:59:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/22178847360</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-1973641848",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "labeled",
      "id": 11982511530,
      "node_id": "LE_lADOABII5856PZKxzwAAAALKNp2q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11982511530",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T17:59:57Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11982529380,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAALKNuNk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11982529380",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0af28b019a63cd59ae03b95685c4bd892830b099",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/0af28b019a63cd59ae03b95685c4bd892830b099",
      "created_at": "2024-03-01T18:01:54Z"
    },
    {
      "event": "unlabeled",
      "id": 11983873157,
      "node_id": "UNLE_lADOABII5856PZKxzwAAAALKS2SF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11983873157",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T20:26:25Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1912019739,
      "node_id": "PRR_kwDOABII585x9xsb",
      "url": null,
      "actor": null,
      "commit_id": "0af28b019a63cd59ae03b95685c4bd892830b099",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-1912019739",
      "submitted_at": "2024-03-01T21:11:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11984543546,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAALKVZ86",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11984543546",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "33353b7723d0704d64c0dfc1b0f5d072692e68b9",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/33353b7723d0704d64c0dfc1b0f5d072692e68b9",
      "created_at": "2024-03-01T21:50:30Z"
    },
    {
      "event": "reviewed",
      "id": 1912454791,
      "node_id": "PRR_kwDOABII585x_b6H",
      "url": null,
      "actor": null,
      "commit_id": "33353b7723d0704d64c0dfc1b0f5d072692e68b9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "re-ACK 33353b7723d0704d64c0dfc1b0f5d072692e68b9. I've reviewed the new changes, focusing on the added negative test. I think it's a valuable addition, expanding the test's coverage of different scenarios in the network. I built and ran `p2p_outbound_eviction` multiple times and observed no issues or warnings.\r\n\r\nWell done on addressing the feedback and enhancing the test suite.",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-1912454791",
      "submitted_at": "2024-03-02T01:27:14Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
    },
    {
      "event": "review_requested",
      "id": 11985806345,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALKaOQJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11985806345",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-02T01:27:18Z",
      "requested_reviewer": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11985806475,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALKaOSL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11985806475",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-02T01:27:19Z",
      "requested_reviewer": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1912488924,
      "node_id": "PRR_kwDOABII585x_kPc",
      "url": null,
      "actor": null,
      "commit_id": "33353b7723d0704d64c0dfc1b0f5d072692e68b9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-1912488924",
      "submitted_at": "2024-03-02T02:05:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
    },
    {
      "event": "review_request_removed",
      "id": 11986000341,
      "node_id": "RRRE_lADOABII5856PZKxzwAAAALKa9nV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11986000341",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-02T02:05:29Z",
      "requested_reviewer": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11986000343,
      "node_id": "RRRE_lADOABII5856PZKxzwAAAALKa9nX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11986000343",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-02T02:05:29Z",
      "requested_reviewer": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11986000373,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALKa9n1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11986000373",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-02T02:05:30Z",
      "requested_reviewer": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11986000403,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALKa9oT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11986000403",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-02T02:05:30Z",
      "requested_reviewer": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11986000424,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALKa9oo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11986000424",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-02T02:05:31Z",
      "requested_reviewer": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1912652035,
      "node_id": "PRR_kwDOABII585yAMED",
      "url": null,
      "actor": null,
      "commit_id": "33353b7723d0704d64c0dfc1b0f5d072692e68b9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 33353b7.\r\n\r\nDiffed `p2p_outbound_eviction.py` against previously acked  version.\r\n\r\nRan the new version a few times, switched the node type from `block-relay-only` to `outbound-full-relay` and confirmed that `wait_for_disconnect()` times out  (decreased timeout to 10s locally, but should still be more than enough).",
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-1912652035",
      "submitted_at": "2024-03-02T12:14:41Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
    },
    {
      "event": "review_request_removed",
      "id": 11987279769,
      "node_id": "RRRE_lADOABII5856PZKxzwAAAALKf1-Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11987279769",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-02T12:14:45Z",
      "requested_reviewer": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 11987279771,
      "node_id": "RRRE_lADOABII5856PZKxzwAAAALKf1-b",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11987279771",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-02T12:14:45Z",
      "requested_reviewer": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11987279778,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALKf1-i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11987279778",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-02T12:14:46Z",
      "requested_reviewer": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11987279791,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALKf1-v",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11987279791",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-02T12:14:46Z",
      "requested_reviewer": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 1986677047,
      "node_id": "IC_kwDOABII5852akk3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1986677047",
      "actor": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-09T01:26:30Z",
      "updated_at": "2024-03-09T01:26:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK https://github.com/bitcoin/bitcoin/pull/29122/commits/33353b7723d0704d64c0dfc1b0f5d072692e68b9\r\n\r\nTested by modifying `bool IsOutboundOrBlockRelayConn()`, and `CHAIN_SYNC_TIMEOUT` and this test catches. It would be nice if we also had a test that made sure we don't punish peers and set the timeout to `HEADERS_RESPONSE_TIME` *before* we've given them `CHAIN_SYNC_TIMEOUT` to catch up, but I think this PR looks great as it stands!",
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-1986677047",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "review_request_removed",
      "id": 12061971912,
      "node_id": "RRRE_lADOABII5856PZKxzwAAAALO8xXI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12061971912",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-09T01:26:33Z",
      "requested_reviewer": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 12061971914,
      "node_id": "RRRE_lADOABII5856PZKxzwAAAALO8xXK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12061971914",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-09T01:26:33Z",
      "requested_reviewer": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 12061971936,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALO8xXg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12061971936",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-09T01:26:34Z",
      "requested_reviewer": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "labeled",
      "id": 12074644951,
      "node_id": "LE_lADOABII5856PZKxzwAAAALPtHXX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12074644951",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-11T14:33:06Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12075236545,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAALPvXzB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12075236545",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "59affd0bf9042d746a6b32739edb0cd45d28d569",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/59affd0bf9042d746a6b32739edb0cd45d28d569",
      "created_at": "2024-03-11T15:11:01Z"
    },
    {
      "event": "commented",
      "id": 1988674026,
      "node_id": "IC_kwDOABII5852iMHq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1988674026",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-11T15:11:22Z",
      "updated_at": "2024-03-11T15:11:22Z",
      "author_association": "MEMBER",
      "body": "Rebased to deal with merge conflicts",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-1988674026",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "unlabeled",
      "id": 12076775589,
      "node_id": "UNLE_lADOABII5856PZKxzwAAAALP1Pil",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12076775589",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-11T16:51:33Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1989794014,
      "node_id": "IC_kwDOABII5852mdje",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1989794014",
      "actor": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-12T02:03:54Z",
      "updated_at": "2024-03-12T02:03:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "reACK https://github.com/bitcoin/bitcoin/commit/59affd0bf9042d746a6b32739edb0cd45d28d569",
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-1989794014",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "review_requested",
      "id": 12082104704,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALQJkmA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12082104704",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-12T02:03:58Z",
      "requested_reviewer": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 12082104756,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALQJkm0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12082104756",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-12T02:03:59Z",
      "requested_reviewer": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 1992684188,
      "node_id": "IC_kwDOABII5852xfKc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1992684188",
      "actor": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-12T22:27:30Z",
      "updated_at": "2024-03-12T22:27:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "re ACK for 59affd0bf9042d746a6b32739edb0cd45d28d569.\r\nBuilt and re-ran functional tests locally.  All passed.",
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-1992684188",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "reviewed",
      "id": 1936070563,
      "node_id": "PRR_kwDOABII585zZhej",
      "url": null,
      "actor": null,
      "commit_id": "cd5b7a11ee55b1f86bb7662c4fc83616ffa735b1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "re ACK 59affd0bf9042d746a6b32739edb0cd45d28d569\r\n\r\nBuilt & ran `test/functional/test_runner.py --cachedir=/mnt/tmp/cache --tmpdir=/mnt/tmp` successfully.",
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-1936070563",
      "submitted_at": "2024-03-14T08:55:37Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
    },
    {
      "event": "reviewed",
      "id": 1937922332,
      "node_id": "PRR_kwDOABII585zglkc",
      "url": null,
      "actor": null,
      "commit_id": "cd5b7a11ee55b1f86bb7662c4fc83616ffa735b1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "re-ACK 59affd0bf9042d746a6b32739edb0cd45d28d569. Ran all functional tests, no issues.",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-1937922332",
      "submitted_at": "2024-03-15T00:20:42Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12136815661,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAALTaRwt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12136815661",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cd5b7a11ee55b1f86bb7662c4fc83616ffa735b1",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/cd5b7a11ee55b1f86bb7662c4fc83616ffa735b1",
      "created_at": "2024-03-15T21:15:27Z"
    },
    {
      "event": "commented",
      "id": 2000449253,
      "node_id": "IC_kwDOABII5853PG7l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2000449253",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-15T21:15:33Z",
      "updated_at": "2024-03-15T21:15:33Z",
      "author_association": "MEMBER",
      "body": "Rebased to fix CI due to https://github.com/bitcoin/bitcoin/pull/29610",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-2000449253",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "commented",
      "id": 2001967910,
      "node_id": "IC_kwDOABII5853U5sm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2001967910",
      "actor": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-16T12:11:31Z",
      "updated_at": "2024-03-16T12:11:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "reACK https://github.com/bitcoin/bitcoin/pull/29122/commits/cd5b7a11ee55b1f86bb7662c4fc83616ffa735b1\r\n\r\n```console\r\n$ git range-diff a945f09...59affd0 015ac13...cd5b7a1                                              \r\n1:  a12a4dfa90 = 1:  8fa272dccc test: adds outbound eviction functional tests, updates comment in ConsiderEviction     \r\n2:  59affd0bf9 = 2:  cd5b7a11ee test: adds outbound eviction tests for non outbound-full-relay peers \r\n\r\n$ python ./test/functional/test_runner.py\r\nALL                                                    | ✓ Passed  | 1350 s (accumulated) \r\n```\r\n",
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-2001967910",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "review_requested",
      "id": 12139876294,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALTl8_G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12139876294",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-16T12:11:35Z",
      "requested_reviewer": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 12139876318,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALTl8_e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12139876318",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-16T12:11:36Z",
      "requested_reviewer": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1941334945,
      "node_id": "PRR_kwDOABII585ztmuh",
      "url": null,
      "actor": null,
      "commit_id": "cd5b7a11ee55b1f86bb7662c4fc83616ffa735b1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "reACK cd5b7a11ee55b1f86bb7662c4fc83616ffa735b1\r\n\r\n(Diff didn't change). Built & ran functional tests.",
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-1941334945",
      "submitted_at": "2024-03-16T21:38:00Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
    },
    {
      "event": "commented",
      "id": 2002529945,
      "node_id": "IC_kwDOABII5853XC6Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2002529945",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-17T16:26:12Z",
      "updated_at": "2024-03-17T16:26:12Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-2002529945",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "reviewed",
      "id": 1941626817,
      "node_id": "PRR_kwDOABII585zut_B",
      "url": null,
      "actor": null,
      "commit_id": "cd5b7a11ee55b1f86bb7662c4fc83616ffa735b1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "re ACK for cd5b7a11ee55b1f86bb7662c4fc83616ffa735b1.\r\nBuilt and re-ran functional tests locally. All passed.",
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-1941626817",
      "submitted_at": "2024-03-18T00:07:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
    },
    {
      "event": "review_requested",
      "id": 12144463118,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALT3c0O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12144463118",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-18T00:07:26Z",
      "requested_reviewer": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1943990274,
      "node_id": "PRR_kwDOABII585z3vAC",
      "url": null,
      "actor": null,
      "commit_id": "cd5b7a11ee55b1f86bb7662c4fc83616ffa735b1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "re-ACK cd5b7a11ee55b1f86bb7662c4fc83616ffa735b1. All functional tests passed.",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-1943990274",
      "submitted_at": "2024-03-18T19:22:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
    },
    {
      "event": "reviewed",
      "id": 1947868943,
      "node_id": "PRR_kwDOABII5850Gh8P",
      "url": null,
      "actor": null,
      "commit_id": "cd5b7a11ee55b1f86bb7662c4fc83616ffa735b1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "cool test! Concept ACK. left some suggestions, nits and 1 problem.\r\n\r\nsomething I found interesting was when `generateblock`  is called - `inv`, `getdata` and `block` messages are exchanged between node and peer. so in the tests (ex: `test_outbound_eviction_unprotected`), the peer is sending the header of an older block it already knows about! I don't think it affects the behaviour in the tests. but would like to make sure that this is expected.",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-1947868943",
      "submitted_at": "2024-03-25T06:03:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12236996958,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAALZYcFe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12236996958",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5cdebc382d3b2d4260b1f2f6fad606f6b6687b66",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/5cdebc382d3b2d4260b1f2f6fad606f6b6687b66",
      "created_at": "2024-03-25T16:02:19Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12237002901,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAALZYdiV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12237002901",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "368389d973a85d21aa9ebf030ef5e7f7ac5343de",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/368389d973a85d21aa9ebf030ef5e7f7ac5343de",
      "created_at": "2024-03-25T16:02:46Z"
    },
    {
      "event": "commented",
      "id": 2018361767,
      "node_id": "IC_kwDOABII5854TcGn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2018361767",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-25T16:05:50Z",
      "updated_at": "2024-03-25T16:05:50Z",
      "author_association": "MEMBER",
      "body": "Rebased + addressed comments from @stratospher. I had to slightly reshape `test_outbound_eviction_unprotected` to fit https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1535542317 given some time mocks + waits were unnecessary",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-2018361767",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "mentioned",
      "id": 12237043765,
      "node_id": "MEE_lADOABII5856PZKxzwAAAALZYng1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12237043765",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-25T16:05:52Z"
    },
    {
      "event": "subscribed",
      "id": 12237043796,
      "node_id": "SE_lADOABII5856PZKxzwAAAALZYnhU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12237043796",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-25T16:05:52Z"
    },
    {
      "event": "reviewed",
      "id": 1959258446,
      "node_id": "PRR_kwDOABII5850x-lO",
      "url": null,
      "actor": null,
      "commit_id": "368389d973a85d21aa9ebf030ef5e7f7ac5343de",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-1959258446",
      "submitted_at": "2024-03-26T08:10:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
    },
    {
      "event": "commented",
      "id": 2025458080,
      "node_id": "IC_kwDOABII5854ugmg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2025458080",
      "actor": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-28T15:09:13Z",
      "updated_at": "2024-03-28T15:09:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "reACK for 368389d973a85d21aa9ebf030ef5e7f7ac5343de.\r\nPulled, built, ran all unit/functional tests (all passed).",
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-2025458080",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "review_requested",
      "id": 12283202614,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALcIsw2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12283202614",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-28T15:09:18Z",
      "requested_reviewer": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 12283202979,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALcIs2j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12283202979",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-28T15:09:19Z",
      "requested_reviewer": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 12283203124,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALcIs40",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12283203124",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-28T15:09:20Z",
      "requested_reviewer": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 12283203305,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALcIs7p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12283203305",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-28T15:09:21Z",
      "requested_reviewer": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2014465811,
      "node_id": "PRR_kwDOABII5854Ek8T",
      "url": null,
      "actor": null,
      "commit_id": "368389d973a85d21aa9ebf030ef5e7f7ac5343de",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-2014465811",
      "submitted_at": "2024-04-22T11:09:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
    },
    {
      "event": "review_requested",
      "id": 12558106253,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALshX6N",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12558106253",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-22T11:09:12Z",
      "requested_reviewer": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12613351633,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAALv0HjR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12613351633",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "15a00a9a1be6deac2449985c5acc2bbbef5ce7af",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/15a00a9a1be6deac2449985c5acc2bbbef5ce7af",
      "created_at": "2024-04-25T18:14:57Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12613384147,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAALv0PfT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12613384147",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8980e150d61231d6fb736c0ab36559819840b21d",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/8980e150d61231d6fb736c0ab36559819840b21d",
      "created_at": "2024-04-25T18:17:04Z"
    },
    {
      "event": "commented",
      "id": 2077888934,
      "node_id": "IC_kwDOABII58572hGm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2077888934",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-25T18:18:30Z",
      "updated_at": "2024-04-25T18:18:30Z",
      "author_association": "MEMBER",
      "body": "Rebased on top of https://github.com/bitcoin/bitcoin/pull/29736. Now this is using `wait_for_getheaders` to reduce the boilerplate of having to manually pop the results from `last_message`.\r\n\r\ncc/ @stratospher ",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-2077888934",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "mentioned",
      "id": 12613404346,
      "node_id": "MEE_lADOABII5856PZKxzwAAAALv0Ua6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12613404346",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-25T18:18:31Z"
    },
    {
      "event": "subscribed",
      "id": 12613404368,
      "node_id": "SE_lADOABII5856PZKxzwAAAALv0UbQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12613404368",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-25T18:18:31Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12613447307,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAALv0e6L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12613447307",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "be2c5510521081119f62ef3b29f76bb9097d0f34",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/be2c5510521081119f62ef3b29f76bb9097d0f34",
      "created_at": "2024-04-25T18:21:44Z"
    },
    {
      "event": "labeled",
      "id": 12613448157,
      "node_id": "LE_lADOABII5856PZKxzwAAAALv0fHd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12613448157",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-25T18:21:48Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2077894001,
      "node_id": "IC_kwDOABII58572iVx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2077894001",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-25T18:21:49Z",
      "updated_at": "2024-04-25T18:21:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/24266342152</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-2077894001",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "commented",
      "id": 2078316239,
      "node_id": "IC_kwDOABII58574JbP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2078316239",
      "actor": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-25T23:11:34Z",
      "updated_at": "2024-04-25T23:11:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK https://github.com/bitcoin/bitcoin/pull/29122/commits/be2c5510521081119f62ef3b29f76bb9097d0f34\r\nRe-reviewed code, and attempted to break tests by making `ConsiderEviction` misbehave.\r\n\r\nIt is worth noting that these tests will not catch if outbound eviction logic gets triggered too early. e.g.:\r\n\r\n```cpp\r\n/** How long to wait for a peer to respond to a getheaders request */\r\nstatic constexpr auto HEADERS_RESPONSE_TIME{0s};\r\n// [...]\r\n/** Timeout for (unprotected) outbound peers to sync to our chainwork */\r\nstatic constexpr auto CHAIN_SYNC_TIMEOUT{0s};\r\n```\r\n will pass. That seems fine to me, maybe something for a follow up.",
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-2078316239",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "review_requested",
      "id": 12616439623,
      "node_id": "RRE_lADOABII5856PZKxzwAAAALv_5dH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12616439623",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-25T23:11:40Z",
      "requested_reviewer": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "unlabeled",
      "id": 12618402924,
      "node_id": "UNLE_lADOABII5856PZKxzwAAAALwHYxs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12618402924",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-26T04:18:16Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE4ZDlhMGVkYzdjZWYyYzMxYTU1N2VmNTNlYjQ1NTIwOTc2YjBkNjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a8d9a0edc7cef2c31a557ef53eb45520976b0d65",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a8d9a0edc7cef2c31a557ef53eb45520976b0d65",
      "tree": {
        "sha": "c239e184e88a6b074a1be6e4ca20c8608a9af978",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c239e184e88a6b074a1be6e4ca20c8608a9af978"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c88eac28e8984893746caebb313dc3b2fca90db",
          "sha": "3c88eac28e8984893746caebb313dc3b2fca90db",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3c88eac28e8984893746caebb313dc3b2fca90db"
        }
      ],
      "message": "test: adds outbound eviction functional tests, updates comment in ConsiderEviction",
      "committer": {
        "name": "Sergi Delgado Segura",
        "email": "sergi.delgado.s@gmail.com",
        "date": "2024-04-26T15:14:20Z"
      },
      "author": {
        "name": "Sergi Delgado Segura",
        "email": "sergi.delgado.s@gmail.com",
        "date": "2023-12-20T15:53:49Z"
      },
      "sha": "a8d9a0edc7cef2c31a557ef53eb45520976b0d65"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ1M2Q4NDgzNDc0N2MzN2Y0MDYwYTllZjM3OWUwYTZiNTAxNTUyNDY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d53d84834747c37f4060a9ef379e0a6b50155246",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d53d84834747c37f4060a9ef379e0a6b50155246",
      "tree": {
        "sha": "fc61a2cae3f857ede33a4e342e4e57b67494e05e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fc61a2cae3f857ede33a4e342e4e57b67494e05e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a8d9a0edc7cef2c31a557ef53eb45520976b0d65",
          "sha": "a8d9a0edc7cef2c31a557ef53eb45520976b0d65",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a8d9a0edc7cef2c31a557ef53eb45520976b0d65"
        }
      ],
      "message": "test: adds outbound eviction tests for non outbound-full-relay peers\n\nPeer protection is only given to outbound-full-relay peers. Add a negative\ntest to check that other type of outbound peers are not given protection under\nthe circumstances that outbound-full-relay would",
      "committer": {
        "name": "Sergi Delgado Segura",
        "email": "sergi.delgado.s@gmail.com",
        "date": "2024-04-26T15:15:22Z"
      },
      "author": {
        "name": "Sergi Delgado Segura",
        "email": "sergi.delgado.s@gmail.com",
        "date": "2024-03-01T16:08:39Z"
      },
      "sha": "d53d84834747c37f4060a9ef379e0a6b50155246"
    },
    {
      "event": "commented",
      "id": 2079604399,
      "node_id": "IC_kwDOABII58579D6v",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2079604399",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-26T15:20:34Z",
      "updated_at": "2024-04-26T15:20:34Z",
      "author_association": "MEMBER",
      "body": "> ACK [be2c551](https://github.com/bitcoin/bitcoin/commit/be2c5510521081119f62ef3b29f76bb9097d0f34) Re-reviewed code, and attempted to break tests by making `ConsiderEviction` misbehave.\r\n> \r\n> It is worth noting that these tests will not catch if outbound eviction logic gets triggered too early. e.g.:\r\n> \r\n> ```c++\r\n> /** How long to wait for a peer to respond to a getheaders request */\r\n> static constexpr auto HEADERS_RESPONSE_TIME{0s};\r\n> // [...]\r\n> /** Timeout for (unprotected) outbound peers to sync to our chainwork */\r\n> static constexpr auto CHAIN_SYNC_TIMEOUT{0s};\r\n> ```\r\n> \r\n> will pass. That seems fine to me, maybe something for a follow-up.\r\n\r\nI don't think I follow you here. `HEADERS_RESPONSE_TIME` and `CHAIN_SYNC_TIMEOUT` are constants hardcoded in `net_processing.cpp` (and mapped here). I would expect unit test to fail if those are updated.",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-2079604399",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12625299485,
      "node_id": "HRFPE_lADOABII5856PZKxzwAAAALwhsgd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12625299485",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "commit_url": "https://api.github.com/repos/sr-gi/bitcoin/commits/d53d84834747c37f4060a9ef379e0a6b50155246",
      "created_at": "2024-04-26T15:20:43Z"
    },
    {
      "event": "commented",
      "id": 2079606752,
      "node_id": "IC_kwDOABII58579Efg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2079606752",
      "actor": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-26T15:21:54Z",
      "updated_at": "2024-04-26T15:21:54Z",
      "author_association": "MEMBER",
      "body": "Updated to address https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1580221364 ",
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-2079606752",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "commented",
      "id": 2080236283,
      "node_id": "IC_kwDOABII5857_eL7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2080236283",
      "actor": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-26T23:38:23Z",
      "updated_at": "2024-04-26T23:38:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "reACK https://github.com/bitcoin/bitcoin/commit/d53d84834747c37f4060a9ef379e0a6b50155246\r\n\r\n> I don't think I follow you here. `HEADERS_RESPONSE_TIME` and `CHAIN_SYNC_TIMEOUT` are constants hardcoded in `net_processing.cpp` (and mapped here). I would expect unit test to fail if those are updated.\r\n\r\nI didn't mean to say that these tests should be responsible for enforcing the particular values of `HEADERS_RESPONSE_TIME` and `CHAIN_SYNC_TIMEOUT`, just that they would not catch a regression where outbound eviction logic gets triggered earlier than expected on peers, which can be demonstrated by setting both values to zero.\r\n\r\nAnyways, I think if what I'm saying isn't confused in some way, it is more pedantic than useful.",
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-2080236283",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "reviewed",
      "id": 2027367015,
      "node_id": "PRR_kwDOABII58541ypn",
      "url": null,
      "actor": null,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK d53d84834747c37f4060a9ef379e0a6b50155246\r\n\r\nFunctional including `--extended` tests passed (skipped unrelated `feature_dbcrash`).",
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-2027367015",
      "submitted_at": "2024-04-28T21:53:27Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
    },
    {
      "event": "commented",
      "id": 2094859146,
      "node_id": "IC_kwDOABII58583QOK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2094859146",
      "actor": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-05T15:54:56Z",
      "updated_at": "2024-05-05T15:55:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "Re ACK for d53d84834747c37f4060a9ef379e0a6b50155246\r\nPulled, built, ran all unit/functional tests (all passed).\r\nPerformed code review, but didn't see anything noteworthy over previous review.",
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-2094859146",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "comment_deleted",
      "id": 12707904752,
      "node_id": "CDE_lADOABII5856PZKxzwAAAAL1czzw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12707904752",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-05T17:11:24Z"
    },
    {
      "event": "reviewed",
      "id": 2048227292,
      "node_id": "PRR_kwDOABII5856FXfc",
      "url": null,
      "actor": null,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Re ACK. Reviewed the code and the tests look good to me. I ran `p2p_outbound_eviction.py` individually and along with all the other functional tests and everything looks good.",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#pullrequestreview-2048227292",
      "submitted_at": "2024-05-09T15:30:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
    },
    {
      "event": "commented",
      "id": 2103348027,
      "node_id": "IC_kwDOABII5859Xos7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2103348027",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-09T20:13:56Z",
      "updated_at": "2024-05-09T20:13:56Z",
      "author_association": "MEMBER",
      "body": "ACK d53d84834747c37f4060a9ef379e0a6b50155246",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#issuecomment-2103348027",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29122"
    },
    {
      "event": "review_requested",
      "id": 12761657776,
      "node_id": "RRE_lADOABII5856PZKxzwAAAAL4p3Gw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12761657776",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-09T20:14:01Z",
      "requested_reviewer": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "merged",
      "id": 12761718985,
      "node_id": "ME_lADOABII5856PZKxzwAAAAL4qGDJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12761718985",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "012e540acee4c06dbade5451e76c606f987e5957",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/012e540acee4c06dbade5451e76c606f987e5957",
      "created_at": "2024-05-09T20:20:59Z"
    },
    {
      "event": "closed",
      "id": 12761719017,
      "node_id": "CE_lADOABII5856PZKxzwAAAAL4qGDp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12761719017",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-09T20:20:59Z"
    },
    {
      "event": "referenced",
      "id": 16326967599,
      "node_id": "REFE_lADOABII5856PZKxzwAAAAPNKcEv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16326967599",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9db73d205c38f3cb8707e108a094bc624ac68c13",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/9db73d205c38f3cb8707e108a094bc624ac68c13",
      "created_at": "2025-02-17T03:58:37Z"
    },
    {
      "event": "referenced",
      "id": 16338965664,
      "node_id": "REFE_lADOABII5856PZKxzwAAAAPN4NSg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16338965664",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cc9330c98e520d854e60bcd4e440e59453307f24",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/cc9330c98e520d854e60bcd4e440e59453307f24",
      "created_at": "2025-02-17T21:12:24Z"
    },
    {
      "event": "locked",
      "id": 17586387521,
      "node_id": "LOE_lADOABII5856PZKxzwAAAAQYOvpB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17586387521",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-09T07:54:16Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1434889375",
      "pull_request_review_id": 1794219517,
      "id": 1434889375,
      "node_id": "PRRC_kwDOABII585Vhqyf",
      "diff_hunk": "@@ -5098,9 +5098,10 @@ void PeerManagerImpl::ConsiderEviction(CNode& pto, Peer& peer, std::chrono::seco\n                 state.m_chain_sync.m_sent_getheaders = false;\n             }\n         } else if (state.m_chain_sync.m_timeout == 0s || (state.m_chain_sync.m_work_header != nullptr && state.pindexBestKnownBlock != nullptr && state.pindexBestKnownBlock->nChainWork >= state.m_chain_sync.m_work_header->nChainWork)) {\n-            // Our best block known by this peer is behind our tip, and we're either noticing\n-            // that for the first time, OR this peer was able to catch up to some earlier point\n-            // where we checked against our tip.\n+            // Either:",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "9ba568c816794698507793a7c1d2a9935bb269b2",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've spent a ridiculous amount of time understanding what's going on here, and I'm still far from being 100% sure. Perhaps if you touch this comment, you can expand it even further? E.g., connecting to each of the conditions in `else if`",
      "created_at": "2023-12-22T09:34:52Z",
      "updated_at": "2023-12-22T09:34:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1434889375",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1434889375"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435164703",
      "pull_request_review_id": 1794642629,
      "id": 1435164703,
      "node_id": "PRRC_kwDOABII585ViuAf",
      "diff_hunk": "@@ -5098,9 +5098,10 @@ void PeerManagerImpl::ConsiderEviction(CNode& pto, Peer& peer, std::chrono::seco\n                 state.m_chain_sync.m_sent_getheaders = false;\n             }\n         } else if (state.m_chain_sync.m_timeout == 0s || (state.m_chain_sync.m_work_header != nullptr && state.pindexBestKnownBlock != nullptr && state.pindexBestKnownBlock->nChainWork >= state.m_chain_sync.m_work_header->nChainWork)) {\n-            // Our best block known by this peer is behind our tip, and we're either noticing\n-            // that for the first time, OR this peer was able to catch up to some earlier point\n-            // where we checked against our tip.\n+            // Either:",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "9ba568c816794698507793a7c1d2a9935bb269b2",
      "in_reply_to_id": 1434889375,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Looks like I'm not the only one who took a minute to get this 😅 \r\n\r\nI wouldn't mind expanding the comment if there is am overall agreement that it is incomplete",
      "created_at": "2023-12-22T15:32:47Z",
      "updated_at": "2023-12-22T15:32:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1435164703",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435164703"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1440804107",
      "pull_request_review_id": 1802898789,
      "id": 1440804107,
      "node_id": "PRRC_kwDOABII585V4O0L",
      "diff_hunk": "@@ -5098,9 +5098,10 @@ void PeerManagerImpl::ConsiderEviction(CNode& pto, Peer& peer, std::chrono::seco\n                 state.m_chain_sync.m_sent_getheaders = false;\n             }\n         } else if (state.m_chain_sync.m_timeout == 0s || (state.m_chain_sync.m_work_header != nullptr && state.pindexBestKnownBlock != nullptr && state.pindexBestKnownBlock->nChainWork >= state.m_chain_sync.m_work_header->nChainWork)) {\n-            // Our best block known by this peer is behind our tip, and we're either noticing\n-            // that for the first time, OR this peer was able to catch up to some earlier point\n-            // where we checked against our tip.\n+            // Either:",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "9ba568c816794698507793a7c1d2a9935bb269b2",
      "in_reply_to_id": 1434889375,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Rebased and updated the comment. I also extended the test slightly to cover all possible cases",
      "created_at": "2024-01-03T18:48:12Z",
      "updated_at": "2024-01-03T18:48:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1440804107",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1440804107"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1485367696",
      "pull_request_review_id": 1874277464,
      "id": 1485367696,
      "node_id": "PRRC_kwDOABII585YiOmQ",
      "diff_hunk": "@@ -5132,16 +5132,19 @@ void PeerManagerImpl::ConsiderEviction(CNode& pto, Peer& peer, std::chrono::seco\n         // unless it's invalid, in which case we should find that out and\n         // disconnect from them elsewhere).\n         if (state.pindexBestKnownBlock != nullptr && state.pindexBestKnownBlock->nChainWork >= m_chainman.ActiveChain().Tip()->nChainWork) {",
      "path": "src/net_processing.cpp",
      "position": 3,
      "original_position": 3,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "edc14bc9da332cae39f8803db559b532b3c74e16",
      "in_reply_to_id": null,
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I could be missing something, but a test case covering the reset of eviction timeout when an outbound peer sends us a valid block with more chainwork (i.e. the timeout set to 0 to prevent eviction, and m_work_header/m_sent_getheaders also reinitialized) was not observed.  Do you think it's worth adding?",
      "created_at": "2024-02-10T23:44:44Z",
      "updated_at": "2024-02-11T00:09:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1485367696",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1485367696"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5167,
      "original_line": 5167,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1485370601",
      "pull_request_review_id": 1874277464,
      "id": 1485370601,
      "node_id": "PRRC_kwDOABII585YiPTp",
      "diff_hunk": "@@ -122,6 +129,178 @@ def run_test(self):\n         self.log.debug(\"{} protected peers: {}\".format(len(protected_peers), protected_peers))\n         assert evicted_peers[0] not in protected_peers\n \n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_unprotected(self):",
      "path": "test/functional/p2p_eviction.py",
      "position": null,
      "original_position": 45,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "edc14bc9da332cae39f8803db559b532b3c74e16",
      "in_reply_to_id": null,
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added notes below to provide insight into what was reviewed:\r\n\r\nIf eviction does not occur when it should, then `wait_for_disconnect()` will raise (AssertionError, originally from `wait_until_helper_internal()`).  Confirmed by temporarily setting `cur_mock_time` to a value significantly lower than CHAIN_SYNC_TIMEOUT.\r\n\r\nSimilarly, if unexpected eviction occurs (e.g. in the \"keep catching up\" case), then `send_and_ping()` or `sync_with_ping()` will raise IOError (`from send_raw_message()`).  Confirmed by temporarily inserting a call to `disconnect_p2ps()`.\r\n",
      "created_at": "2024-02-10T23:51:51Z",
      "updated_at": "2024-02-11T00:06:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1485370601",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1485370601"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 134,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1485374401",
      "pull_request_review_id": 1874277464,
      "id": 1485374401,
      "node_id": "PRRC_kwDOABII585YiQPB",
      "diff_hunk": "@@ -122,6 +129,178 @@ def run_test(self):\n         self.log.debug(\"{} protected peers: {}\".format(len(protected_peers), protected_peers))\n         assert evicted_peers[0] not in protected_peers\n \n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime if node.mocktime else int(time.time())\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 10)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        headers_message = msg_headers()\n+        headers_message.headers = [prev_header]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Trigger the timeouts\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 10)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and keep lagging behind, but not too much\")\n+        # Test that if the peer never catches up with our current tip, but it does with the\n+        # expected work that we set when setting the timer (that is, our tip at the time)\n+        # we do not disconnect the peer\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        self.log.info(\"Mine a block so our peer starts lagging\")\n+        best_block_hash = self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])[\"hash\"]\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+        test_node.sync_with_ping()\n+        self.log.info(\"Keep catching up with the old tip and check that we are not evicted\")\n+        for _ in range(10):\n+            # Advance time but not enough to evict the peer\n+            best_block_hash = self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])[\"hash\"]\n+            cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+            node.setmocktime(cur_mock_time)\n+\n+            # Send a header with the old tip\n+            headers_message = msg_headers()\n+            headers_message.headers = [tip_header]\n+            test_node.send_and_ping(headers_message)\n+            tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+\n+            # Check that we are not evicted\n+            cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+            node.setmocktime(cur_mock_time)\n+            test_node.sync_with_ping()\n+\n+        self.log.info(\"Create an outbound connection and take some time to catch up, but do it in time\")\n+        # Check that if the peer manages to catch up within time, the timeouts are removed (and the peer is not disconnected)\n+        # We are reusing the peer from the previous case which already sent us a valid (but old) block and whose timer is ticking\n+\n+        # Send an updated headers message matching our tip\n+        headers_message = msg_headers()\n+        headers_message.headers = [from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Wait for long enough for the timeouts to have triggered and check that we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer does not get evicted\")\n+        test_node.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_protected(self):",
      "path": "test/functional/p2p_eviction.py",
      "position": null,
      "original_position": 133,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "edc14bc9da332cae39f8803db559b532b3c74e16",
      "in_reply_to_id": null,
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added notes below to provide insight into what was reviewed:\r\n\r\nIn `test_outbound_eviction_protected()` if unexpected eviction occurs (i.e. the P2P connection is no longer present), then `sync_with_ping()` will raise (`IOError('Not connected')`, causing the test to fail.  Moved node.disconnect_p2ps() above the last test_node.sync_with_ping() call and, as expected, this occurred.\r\n\r\nnit: The heading comment in the `test_outbound_eviction_protected()` omits that a protected peer is also non-block-only, but this is implicit in the call to `add_outbound_p2p_connection()` using `outbound-full-relay` as the connection_type.\r\n\r\nnet_processing.cpp:\r\n```\r\nA peer is marked as protected if all of these are true:\r\n - its connection type is IsBlockOnlyConn() == false\r\n - it gave us a valid connecting header\r\n - we haven't reached MAX_OUTBOUND_PEERS_TO_PROTECT_FROM_DISCONNECT yet\r\n - its chain tip has at least as much work as ours\r\n```\r\n",
      "created_at": "2024-02-11T00:00:52Z",
      "updated_at": "2024-02-11T00:14:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1485374401",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1485374401"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 222,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1485375517",
      "pull_request_review_id": 1874277464,
      "id": 1485375517,
      "node_id": "PRRC_kwDOABII585YiQgd",
      "diff_hunk": "@@ -122,6 +129,178 @@ def run_test(self):\n         self.log.debug(\"{} protected peers: {}\".format(len(protected_peers), protected_peers))\n         assert evicted_peers[0] not in protected_peers\n \n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime if node.mocktime else int(time.time())\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 10)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        headers_message = msg_headers()\n+        headers_message.headers = [prev_header]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Trigger the timeouts\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 10)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and keep lagging behind, but not too much\")\n+        # Test that if the peer never catches up with our current tip, but it does with the\n+        # expected work that we set when setting the timer (that is, our tip at the time)\n+        # we do not disconnect the peer\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        self.log.info(\"Mine a block so our peer starts lagging\")\n+        best_block_hash = self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])[\"hash\"]\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+        test_node.sync_with_ping()\n+        self.log.info(\"Keep catching up with the old tip and check that we are not evicted\")\n+        for _ in range(10):\n+            # Advance time but not enough to evict the peer\n+            best_block_hash = self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])[\"hash\"]\n+            cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+            node.setmocktime(cur_mock_time)\n+\n+            # Send a header with the old tip\n+            headers_message = msg_headers()\n+            headers_message.headers = [tip_header]\n+            test_node.send_and_ping(headers_message)\n+            tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+\n+            # Check that we are not evicted\n+            cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+            node.setmocktime(cur_mock_time)\n+            test_node.sync_with_ping()\n+\n+        self.log.info(\"Create an outbound connection and take some time to catch up, but do it in time\")\n+        # Check that if the peer manages to catch up within time, the timeouts are removed (and the peer is not disconnected)\n+        # We are reusing the peer from the previous case which already sent us a valid (but old) block and whose timer is ticking\n+\n+        # Send an updated headers message matching our tip\n+        headers_message = msg_headers()\n+        headers_message.headers = [from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Wait for long enough for the timeouts to have triggered and check that we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer does not get evicted\")\n+        test_node.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_protected(self):\n+        # This tests the eviction logic for **protected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        # Outbound connections are flagged as protected as long as they have sent us a connecting block with at least as\n+        # much work as our current tip and we have enough empty protected_peers slots.\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime if node.mocktime else int(time.time())\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+\n+        self.log.info(\"Create an outbound connection to a peer that shares our tip so it gets granted protection\")\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        headers_message = msg_headers()\n+        headers_message.headers = [tip_header]\n+        test_node.send_and_ping(headers_message)\n+\n+        self.log.info(\"Mine a new block and sync with our peer\")\n+        self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])\n+        test_node.sync_with_ping()\n+\n+        self.log.info(\"Let enough time pass for the timeouts to go off\")\n+        # Trigger the timeouts and check how we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the node does not get evicted\")\n+        test_node.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_protected_mixed(self):",
      "path": "test/functional/p2p_eviction.py",
      "position": null,
      "original_position": 163,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "edc14bc9da332cae39f8803db559b532b3c74e16",
      "in_reply_to_id": null,
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:  I could be missing something, but a test case covering the limit of protected outbound peers (i.e. `MAX_OUTBOUND_PEERS_TO_PROTECT_FROM_DISCONNECT`) was not observed.  Do you think it's worth adding?  \r\n\r\nThinking out loud:\r\n`MAX_OUTBOUND_PEERS_TO_PROTECT_FROM_DISCONNECT = 4`, so maybe adding another peer that would normally be considered protected and seeing that it is not protected could test this?\r\n",
      "created_at": "2024-02-11T00:03:41Z",
      "updated_at": "2024-02-11T00:18:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1485375517",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1485375517"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 252,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1486346242",
      "pull_request_review_id": 1875503633,
      "id": 1486346242,
      "node_id": "PRRC_kwDOABII585Yl9gC",
      "diff_hunk": "@@ -5132,16 +5132,19 @@ void PeerManagerImpl::ConsiderEviction(CNode& pto, Peer& peer, std::chrono::seco\n         // unless it's invalid, in which case we should find that out and\n         // disconnect from them elsewhere).\n         if (state.pindexBestKnownBlock != nullptr && state.pindexBestKnownBlock->nChainWork >= m_chainman.ActiveChain().Tip()->nChainWork) {",
      "path": "src/net_processing.cpp",
      "position": 3,
      "original_position": 3,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "edc14bc9da332cae39f8803db559b532b3c74e16",
      "in_reply_to_id": 1485367696,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That's covered in the last part of `test_outbound_eviction_unprotected`\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/edc14bc9da332cae39f8803db559b532b3c74e16/test/functional/p2p_eviction.py#L202-L218",
      "created_at": "2024-02-12T15:28:44Z",
      "updated_at": "2024-02-12T16:00:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1486346242",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1486346242"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5167,
      "original_line": 5167,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1486369882",
      "pull_request_review_id": 1875503633,
      "id": 1486369882,
      "node_id": "PRRC_kwDOABII585YmDRa",
      "diff_hunk": "@@ -122,6 +129,178 @@ def run_test(self):\n         self.log.debug(\"{} protected peers: {}\".format(len(protected_peers), protected_peers))\n         assert evicted_peers[0] not in protected_peers\n \n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime if node.mocktime else int(time.time())\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 10)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        headers_message = msg_headers()\n+        headers_message.headers = [prev_header]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Trigger the timeouts\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 10)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and keep lagging behind, but not too much\")\n+        # Test that if the peer never catches up with our current tip, but it does with the\n+        # expected work that we set when setting the timer (that is, our tip at the time)\n+        # we do not disconnect the peer\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        self.log.info(\"Mine a block so our peer starts lagging\")\n+        best_block_hash = self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])[\"hash\"]\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+        test_node.sync_with_ping()\n+        self.log.info(\"Keep catching up with the old tip and check that we are not evicted\")\n+        for _ in range(10):\n+            # Advance time but not enough to evict the peer\n+            best_block_hash = self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])[\"hash\"]\n+            cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+            node.setmocktime(cur_mock_time)\n+\n+            # Send a header with the old tip\n+            headers_message = msg_headers()\n+            headers_message.headers = [tip_header]\n+            test_node.send_and_ping(headers_message)\n+            tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+\n+            # Check that we are not evicted\n+            cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+            node.setmocktime(cur_mock_time)\n+            test_node.sync_with_ping()\n+\n+        self.log.info(\"Create an outbound connection and take some time to catch up, but do it in time\")\n+        # Check that if the peer manages to catch up within time, the timeouts are removed (and the peer is not disconnected)\n+        # We are reusing the peer from the previous case which already sent us a valid (but old) block and whose timer is ticking\n+\n+        # Send an updated headers message matching our tip\n+        headers_message = msg_headers()\n+        headers_message.headers = [from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Wait for long enough for the timeouts to have triggered and check that we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer does not get evicted\")\n+        test_node.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_protected(self):",
      "path": "test/functional/p2p_eviction.py",
      "position": null,
      "original_position": 133,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "edc14bc9da332cae39f8803db559b532b3c74e16",
      "in_reply_to_id": 1485374401,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Protected peer actually implies `outbound-full-relay`. The comment you mentioned may be outdated. I may add an update to it to the PR.\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/edc14bc9da332cae39f8803db559b532b3c74e16/src/net_processing.cpp#L2875-L2885",
      "created_at": "2024-02-12T15:44:54Z",
      "updated_at": "2024-02-12T16:00:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1486369882",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1486369882"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 222,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1486391103",
      "pull_request_review_id": 1875503633,
      "id": 1486391103,
      "node_id": "PRRC_kwDOABII585YmIc_",
      "diff_hunk": "@@ -122,6 +129,178 @@ def run_test(self):\n         self.log.debug(\"{} protected peers: {}\".format(len(protected_peers), protected_peers))\n         assert evicted_peers[0] not in protected_peers\n \n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime if node.mocktime else int(time.time())\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 10)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        headers_message = msg_headers()\n+        headers_message.headers = [prev_header]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Trigger the timeouts\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 10)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and keep lagging behind, but not too much\")\n+        # Test that if the peer never catches up with our current tip, but it does with the\n+        # expected work that we set when setting the timer (that is, our tip at the time)\n+        # we do not disconnect the peer\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        self.log.info(\"Mine a block so our peer starts lagging\")\n+        best_block_hash = self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])[\"hash\"]\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+        test_node.sync_with_ping()\n+        self.log.info(\"Keep catching up with the old tip and check that we are not evicted\")\n+        for _ in range(10):\n+            # Advance time but not enough to evict the peer\n+            best_block_hash = self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])[\"hash\"]\n+            cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+            node.setmocktime(cur_mock_time)\n+\n+            # Send a header with the old tip\n+            headers_message = msg_headers()\n+            headers_message.headers = [tip_header]\n+            test_node.send_and_ping(headers_message)\n+            tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+\n+            # Check that we are not evicted\n+            cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+            node.setmocktime(cur_mock_time)\n+            test_node.sync_with_ping()\n+\n+        self.log.info(\"Create an outbound connection and take some time to catch up, but do it in time\")\n+        # Check that if the peer manages to catch up within time, the timeouts are removed (and the peer is not disconnected)\n+        # We are reusing the peer from the previous case which already sent us a valid (but old) block and whose timer is ticking\n+\n+        # Send an updated headers message matching our tip\n+        headers_message = msg_headers()\n+        headers_message.headers = [from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Wait for long enough for the timeouts to have triggered and check that we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer does not get evicted\")\n+        test_node.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_protected(self):\n+        # This tests the eviction logic for **protected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        # Outbound connections are flagged as protected as long as they have sent us a connecting block with at least as\n+        # much work as our current tip and we have enough empty protected_peers slots.\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime if node.mocktime else int(time.time())\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+\n+        self.log.info(\"Create an outbound connection to a peer that shares our tip so it gets granted protection\")\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        headers_message = msg_headers()\n+        headers_message.headers = [tip_header]\n+        test_node.send_and_ping(headers_message)\n+\n+        self.log.info(\"Mine a new block and sync with our peer\")\n+        self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])\n+        test_node.sync_with_ping()\n+\n+        self.log.info(\"Let enough time pass for the timeouts to go off\")\n+        # Trigger the timeouts and check how we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the node does not get evicted\")\n+        test_node.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_protected_mixed(self):",
      "path": "test/functional/p2p_eviction.py",
      "position": null,
      "original_position": 163,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "edc14bc9da332cae39f8803db559b532b3c74e16",
      "in_reply_to_id": 1485375517,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The limit is tested in this test. We create 8 connections, from which only 4 are protected. If you mean that there are no unprotected peers that behave properly, that could be added. e.g.\r\n\r\n4 protected, send initial headers, do nothing, don't get evicted\r\n2 unprotected, keep in sync, don't get evicted\r\n2 unprotected, do not keep up, get evicted ",
      "created_at": "2024-02-12T15:58:29Z",
      "updated_at": "2024-02-12T16:00:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1486391103",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1486391103"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 252,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1486417918",
      "pull_request_review_id": 1875620153,
      "id": 1486417918,
      "node_id": "PRRC_kwDOABII585YmO_-",
      "diff_hunk": "@@ -5132,16 +5132,19 @@ void PeerManagerImpl::ConsiderEviction(CNode& pto, Peer& peer, std::chrono::seco\n         // unless it's invalid, in which case we should find that out and\n         // disconnect from them elsewhere).\n         if (state.pindexBestKnownBlock != nullptr && state.pindexBestKnownBlock->nChainWork >= m_chainman.ActiveChain().Tip()->nChainWork) {",
      "path": "src/net_processing.cpp",
      "position": 3,
      "original_position": 3,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "edc14bc9da332cae39f8803db559b532b3c74e16",
      "in_reply_to_id": 1485367696,
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Correct. >= rather than >.",
      "created_at": "2024-02-12T16:12:37Z",
      "updated_at": "2024-02-12T16:12:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1486417918",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1486417918"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5167,
      "original_line": 5167,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1486449111",
      "pull_request_review_id": 1875666331,
      "id": 1486449111,
      "node_id": "PRRC_kwDOABII585YmWnX",
      "diff_hunk": "@@ -122,6 +129,178 @@ def run_test(self):\n         self.log.debug(\"{} protected peers: {}\".format(len(protected_peers), protected_peers))\n         assert evicted_peers[0] not in protected_peers\n \n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime if node.mocktime else int(time.time())\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 10)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        headers_message = msg_headers()\n+        headers_message.headers = [prev_header]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Trigger the timeouts\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 10)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and keep lagging behind, but not too much\")\n+        # Test that if the peer never catches up with our current tip, but it does with the\n+        # expected work that we set when setting the timer (that is, our tip at the time)\n+        # we do not disconnect the peer\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        self.log.info(\"Mine a block so our peer starts lagging\")\n+        best_block_hash = self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])[\"hash\"]\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+        test_node.sync_with_ping()\n+        self.log.info(\"Keep catching up with the old tip and check that we are not evicted\")\n+        for _ in range(10):\n+            # Advance time but not enough to evict the peer\n+            best_block_hash = self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])[\"hash\"]\n+            cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+            node.setmocktime(cur_mock_time)\n+\n+            # Send a header with the old tip\n+            headers_message = msg_headers()\n+            headers_message.headers = [tip_header]\n+            test_node.send_and_ping(headers_message)\n+            tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+\n+            # Check that we are not evicted\n+            cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+            node.setmocktime(cur_mock_time)\n+            test_node.sync_with_ping()\n+\n+        self.log.info(\"Create an outbound connection and take some time to catch up, but do it in time\")\n+        # Check that if the peer manages to catch up within time, the timeouts are removed (and the peer is not disconnected)\n+        # We are reusing the peer from the previous case which already sent us a valid (but old) block and whose timer is ticking\n+\n+        # Send an updated headers message matching our tip\n+        headers_message = msg_headers()\n+        headers_message.headers = [from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Wait for long enough for the timeouts to have triggered and check that we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer does not get evicted\")\n+        test_node.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_protected(self):\n+        # This tests the eviction logic for **protected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        # Outbound connections are flagged as protected as long as they have sent us a connecting block with at least as\n+        # much work as our current tip and we have enough empty protected_peers slots.\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime if node.mocktime else int(time.time())\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+\n+        self.log.info(\"Create an outbound connection to a peer that shares our tip so it gets granted protection\")\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        headers_message = msg_headers()\n+        headers_message.headers = [tip_header]\n+        test_node.send_and_ping(headers_message)\n+\n+        self.log.info(\"Mine a new block and sync with our peer\")\n+        self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])\n+        test_node.sync_with_ping()\n+\n+        self.log.info(\"Let enough time pass for the timeouts to go off\")\n+        # Trigger the timeouts and check how we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the node does not get evicted\")\n+        test_node.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_protected_mixed(self):",
      "path": "test/functional/p2p_eviction.py",
      "position": null,
      "original_position": 163,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "edc14bc9da332cae39f8803db559b532b3c74e16",
      "in_reply_to_id": 1485375517,
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thank you, yes, I should have been clearer.  The updated `test_outbound_eviction_protected_mixed` in 91005f7459993e1f7139e46b53eef1bb04860a7c looks great (includes 4 protected, 4 unprotected (2 honest, 2 misbehaving by sending no headers or old)).  ACK 91005f7459993e1f7139e46b53eef1bb04860a7c",
      "created_at": "2024-02-12T16:28:29Z",
      "updated_at": "2024-02-12T16:30:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1486449111",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1486449111"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 252,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499234183",
      "pull_request_review_id": 1895842788,
      "id": 1499234183,
      "node_id": "PRRC_kwDOABII585ZXH-H",
      "diff_hunk": "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of out outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer' behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in minutes)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        headers_message = msg_headers()\n+        headers_message.headers = [prev_header]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Trigger the timeouts\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and keep lagging behind, but not too much\")\n+        # Test that if the peer never catches up with our current tip, but it does with the\n+        # expected work that we set when setting the timer (that is, our tip at the time)\n+        # we do not disconnect the peer\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        self.log.info(\"Mine a block so our peer starts lagging\")\n+        best_block_hash = self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])[\"hash\"]",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": null,
      "original_position": 84,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "in_reply_to_id": null,
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`self.nodes[0]` => `node` here and in a few other places.",
      "created_at": "2024-02-22T13:22:08Z",
      "updated_at": "2024-02-22T22:08:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1499234183",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499234183"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499234794",
      "pull_request_review_id": 1895842788,
      "id": 1499234794,
      "node_id": "PRRC_kwDOABII585ZXIHq",
      "diff_hunk": "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of out outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer' behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in minutes)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        headers_message = msg_headers()\n+        headers_message.headers = [prev_header]\n+        test_node.send_and_ping(headers_message)",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": null,
      "original_position": 67,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "in_reply_to_id": null,
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nit: Why not make these more succinct, as in\r\n```python\r\n       test_node.send_and_ping(msg_headers([prev_header]))\r\n```\r\n? There's no risk of raising exceptions from the first 2 lines.",
      "created_at": "2024-02-22T13:22:37Z",
      "updated_at": "2024-02-22T22:08:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1499234794",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499234794"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": 65,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499242364",
      "pull_request_review_id": 1895842788,
      "id": 1499242364,
      "node_id": "PRRC_kwDOABII585ZXJ98",
      "diff_hunk": "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of out outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer' behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in minutes)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        headers_message = msg_headers()\n+        headers_message.headers = [prev_header]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Trigger the timeouts\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and keep lagging behind, but not too much\")\n+        # Test that if the peer never catches up with our current tip, but it does with the\n+        # expected work that we set when setting the timer (that is, our tip at the time)\n+        # we do not disconnect the peer\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        self.log.info(\"Mine a block so our peer starts lagging\")\n+        best_block_hash = self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])[\"hash\"]\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+        test_node.sync_with_ping()\n+        self.log.info(\"Keep catching up with the old tip and check that we are not evicted\")\n+        for _ in range(10):\n+            # Advance time but not enough to evict the peer\n+            best_block_hash = self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])[\"hash\"]\n+            cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+            node.setmocktime(cur_mock_time)\n+\n+            # Send a header with the old tip\n+            headers_message = msg_headers()\n+            headers_message.headers = [tip_header]\n+            test_node.send_and_ping(headers_message)\n+            tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+\n+            # Check that we are not evicted\n+            cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+            node.setmocktime(cur_mock_time)\n+            test_node.sync_with_ping()\n+\n+        self.log.info(\"Create an outbound connection and take some time to catch up, but do it in time\")\n+        # Check that if the peer manages to catch up within time, the timeouts are removed (and the peer is not disconnected)\n+        # We are reusing the peer from the previous case which already sent us a valid (but old) block and whose timer is ticking\n+\n+        # Send an updated headers message matching our tip\n+        headers_message = msg_headers()\n+        headers_message.headers = [from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Wait for long enough for the timeouts to have triggered and check that we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer does not get evicted\")\n+        test_node.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_protected(self):\n+        # This tests the eviction logic for **protected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        # Outbound connections are flagged as protected as long as they have sent us a connecting block with at least as\n+        # much work as our current tip and we have enough empty protected_peers slots.\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+\n+        self.log.info(\"Create an outbound connection to a peer that shares our tip so it gets granted protection\")\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        headers_message = msg_headers()\n+        headers_message.headers = [tip_header]\n+        test_node.send_and_ping(headers_message)\n+\n+        self.log.info(\"Mine a new block and sync with our peer\")\n+        self.generateblock(self.nodes[0], output=\"raw(42)\", transactions=[])\n+        test_node.sync_with_ping()\n+\n+        self.log.info(\"Let enough time pass for the timeouts to go off\")\n+        # Trigger the timeouts and check how we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the node does not get evicted\")\n+        test_node.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_protected_mixed(self):\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create a mix of protected and unprotected outbound connections to check against eviction\")\n+\n+        # Lets try this logic having multiple peers, some protected and some unprotected\n+        # We protect up to 4 peers as long as they have provided a block with the same amount of work as our tip\n+        self.log.info(\"The first 4 peers are protected by sending us a valid block with enough work\")\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        headers_message = msg_headers()\n+        headers_message.headers = [tip_header]\n+        protected_peers = []\n+        for i in range(4):\n+            peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\")\n+            peer.send_and_ping(headers_message)\n+            protected_peers.append(peer)\n+\n+        # We can create 4 additional outbound connections to peers that are unprotected. 2 of them will be well behaved,\n+        # whereas the other 2 will misbehave (1 sending no headers, 1 sending old ones)\n+        self.log.info(\"The remaining 4 peers will be mixed between honest (2) and misbehaving peers (2)\")\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+        headers_message = msg_headers()\n+        headers_message.headers = [prev_header]\n+        honest_unprotected_peers = []\n+        for i in range(2):\n+            peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=4+i, connection_type=\"outbound-full-relay\")\n+            peer.send_and_ping(headers_message)\n+            honest_unprotected_peers.append(peer)\n+\n+        unprotected_peers_misbehaving = []",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": null,
      "original_position": 185,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "in_reply_to_id": null,
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Suggestion: rename `unprotected_peers_misbehaving` => `misbehaving_unprotected_peers` to match `honest_unprotected_peers`.",
      "created_at": "2024-02-22T13:28:14Z",
      "updated_at": "2024-02-22T22:08:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1499242364",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499242364"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": 179,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 185,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499971404",
      "pull_request_review_id": 1895842788,
      "id": 1499971404,
      "node_id": "PRRC_kwDOABII585ZZ79M",
      "diff_hunk": "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of out outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer' behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in minutes)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        headers_message = msg_headers()\n+        headers_message.headers = [prev_header]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Trigger the timeouts\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": null,
      "original_position": 72,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "in_reply_to_id": null,
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It's a bit opaque to me that `.sync_with_ping()` doesn't sync `test_node` all the way up to the tip of `node`. What is preventing that from happening?",
      "created_at": "2024-02-22T21:43:58Z",
      "updated_at": "2024-02-22T22:08:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1499971404",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499971404"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499975415",
      "pull_request_review_id": 1895842788,
      "id": 1499975415,
      "node_id": "PRRC_kwDOABII585ZZ873",
      "diff_hunk": "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of out outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer' behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in minutes)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        headers_message = msg_headers()\n+        headers_message.headers = [prev_header]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Trigger the timeouts\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": 70,
      "original_position": 73,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "in_reply_to_id": null,
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "How about also verifying whether `MaybeSendGetHeaders()` is actually sent (or not) from `node` to `test_node` by `PeerManagerImpl::ConsiderEviction()` in relevant cases?",
      "created_at": "2024-02-22T21:48:40Z",
      "updated_at": "2024-02-22T22:08:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1499975415",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499975415"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 70,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500100950",
      "pull_request_review_id": 1897212961,
      "id": 1500100950,
      "node_id": "PRRC_kwDOABII585ZablW",
      "diff_hunk": "@@ -5132,16 +5132,19 @@ void PeerManagerImpl::ConsiderEviction(CNode& pto, Peer& peer, std::chrono::seco\n         // unless it's invalid, in which case we should find that out and\n         // disconnect from them elsewhere).\n         if (state.pindexBestKnownBlock != nullptr && state.pindexBestKnownBlock->nChainWork >= m_chainman.ActiveChain().Tip()->nChainWork) {\n+            // The outbound peer has sent us a block with at least as much work as our current tip, so reset the timeout if it was set\n             if (state.m_chain_sync.m_timeout != 0s) {\n                 state.m_chain_sync.m_timeout = 0s;\n                 state.m_chain_sync.m_work_header = nullptr;\n                 state.m_chain_sync.m_sent_getheaders = false;\n             }\n-        } else if (state.m_chain_sync.m_timeout == 0s || (state.m_chain_sync.m_work_header != nullptr && state.pindexBestKnownBlock != nullptr && state.pindexBestKnownBlock->nChainWork >= state.m_chain_sync.m_work_header->nChainWork)) {\n-            // Our best block known by this peer is behind our tip, and we're either noticing\n-            // that for the first time, OR this peer was able to catch up to some earlier point\n-            // where we checked against our tip.\n-            // Either way, set a new timeout based on current tip.\n+        } else if (state.m_chain_sync.m_timeout == 0s || (state.m_chain_sync.m_work_header != nullptr && state.pindexBestKnownBlock != nullptr && state.pindexBestKnownBlock->nChainWork >= state.m_chain_sync.m_work_header->nChainWork)) {\\",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "in_reply_to_id": null,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: It looks like the backslash at the end of this line is a typo, yes? Could be removed for clarity.",
      "created_at": "2024-02-23T00:30:17Z",
      "updated_at": "2024-02-23T00:30:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1500100950",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500100950"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506634012",
      "pull_request_review_id": 1907373422,
      "id": 1506634012,
      "node_id": "PRRC_kwDOABII585ZzWkc",
      "diff_hunk": "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of out outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer' behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in minutes)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        headers_message = msg_headers()\n+        headers_message.headers = [prev_header]\n+        test_node.send_and_ping(headers_message)",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": null,
      "original_position": 67,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "in_reply_to_id": 1499234794,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You're right, I didn't realize that the `msg_headers` constructor accepted an optional `headers` param",
      "created_at": "2024-02-28T20:34:10Z",
      "updated_at": "2024-02-28T20:34:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1506634012",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506634012"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": 65,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506651406",
      "pull_request_review_id": 1907405133,
      "id": 1506651406,
      "node_id": "PRRC_kwDOABII585Zza0O",
      "diff_hunk": "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of out outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer' behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in minutes)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        headers_message = msg_headers()\n+        headers_message.headers = [prev_header]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Trigger the timeouts\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": null,
      "original_position": 72,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "in_reply_to_id": 1499971404,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "From the `sync_with_ping` docs/comments:\r\n\r\n```\r\n# Sending two pings back-to-back, requires that the node calls\r\n# `ProcessMessage` twice, and thus ensures `SendMessages` must have\r\n# been called at least once\r\n```\r\n\r\nFor the sake of this test, this means that we are triggering the outbound eviction checks given we mock the node time right before the call to be past the check timeout",
      "created_at": "2024-02-28T20:52:23Z",
      "updated_at": "2024-02-28T20:53:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1506651406",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506651406"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506664119",
      "pull_request_review_id": 1907425215,
      "id": 1506664119,
      "node_id": "PRRC_kwDOABII585Zzd63",
      "diff_hunk": "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of out outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer' behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in minutes)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        headers_message = msg_headers()\n+        headers_message.headers = [prev_header]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Trigger the timeouts\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": 70,
      "original_position": 73,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "in_reply_to_id": 1499975415,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That is already being tested implicitly by `sync_with_ping()` + wait + check for the disconnection.\r\n\r\nBy mocking a time passed `CHAIN_SYNC_TIMEOUT` and syncing (and not getting an error) we test that the connection has not been dropped, therefore `node` must have followed to send the get headers message.\r\n\r\nI'll add it for clarity anyway",
      "created_at": "2024-02-28T21:05:04Z",
      "updated_at": "2024-02-28T21:05:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1506664119",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506664119"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 70,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506665796",
      "pull_request_review_id": 1907427422,
      "id": 1506665796,
      "node_id": "PRRC_kwDOABII585ZzeVE",
      "diff_hunk": "@@ -5132,16 +5132,19 @@ void PeerManagerImpl::ConsiderEviction(CNode& pto, Peer& peer, std::chrono::seco\n         // unless it's invalid, in which case we should find that out and\n         // disconnect from them elsewhere).\n         if (state.pindexBestKnownBlock != nullptr && state.pindexBestKnownBlock->nChainWork >= m_chainman.ActiveChain().Tip()->nChainWork) {\n+            // The outbound peer has sent us a block with at least as much work as our current tip, so reset the timeout if it was set\n             if (state.m_chain_sync.m_timeout != 0s) {\n                 state.m_chain_sync.m_timeout = 0s;\n                 state.m_chain_sync.m_work_header = nullptr;\n                 state.m_chain_sync.m_sent_getheaders = false;\n             }\n-        } else if (state.m_chain_sync.m_timeout == 0s || (state.m_chain_sync.m_work_header != nullptr && state.pindexBestKnownBlock != nullptr && state.pindexBestKnownBlock->nChainWork >= state.m_chain_sync.m_work_header->nChainWork)) {\n-            // Our best block known by this peer is behind our tip, and we're either noticing\n-            // that for the first time, OR this peer was able to catch up to some earlier point\n-            // where we checked against our tip.\n-            // Either way, set a new timeout based on current tip.\n+        } else if (state.m_chain_sync.m_timeout == 0s || (state.m_chain_sync.m_work_header != nullptr && state.pindexBestKnownBlock != nullptr && state.pindexBestKnownBlock->nChainWork >= state.m_chain_sync.m_work_header->nChainWork)) {\\",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "in_reply_to_id": 1500100950,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nice catch!",
      "created_at": "2024-02-28T21:06:39Z",
      "updated_at": "2024-02-28T21:06:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1506665796",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506665796"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506719513",
      "pull_request_review_id": 1907516335,
      "id": 1506719513,
      "node_id": "PRRC_kwDOABII585ZzrcZ",
      "diff_hunk": "@@ -5132,16 +5132,19 @@ void PeerManagerImpl::ConsiderEviction(CNode& pto, Peer& peer, std::chrono::seco\n         // unless it's invalid, in which case we should find that out and\n         // disconnect from them elsewhere).\n         if (state.pindexBestKnownBlock != nullptr && state.pindexBestKnownBlock->nChainWork >= m_chainman.ActiveChain().Tip()->nChainWork) {\n+            // The outbound peer has sent us a block with at least as much work as our current tip, so reset the timeout if it was set\n             if (state.m_chain_sync.m_timeout != 0s) {\n                 state.m_chain_sync.m_timeout = 0s;\n                 state.m_chain_sync.m_work_header = nullptr;\n                 state.m_chain_sync.m_sent_getheaders = false;\n             }\n-        } else if (state.m_chain_sync.m_timeout == 0s || (state.m_chain_sync.m_work_header != nullptr && state.pindexBestKnownBlock != nullptr && state.pindexBestKnownBlock->nChainWork >= state.m_chain_sync.m_work_header->nChainWork)) {\n-            // Our best block known by this peer is behind our tip, and we're either noticing\n-            // that for the first time, OR this peer was able to catch up to some earlier point\n-            // where we checked against our tip.\n-            // Either way, set a new timeout based on current tip.\n+        } else if (state.m_chain_sync.m_timeout == 0s || (state.m_chain_sync.m_work_header != nullptr && state.pindexBestKnownBlock != nullptr && state.pindexBestKnownBlock->nChainWork >= state.m_chain_sync.m_work_header->nChainWork)) {\\",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "in_reply_to_id": 1500100950,
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I assumed it was some super-rare syntax for making tooling understand the comment below applied to the line before it. :D",
      "created_at": "2024-02-28T22:03:36Z",
      "updated_at": "2024-02-28T22:03:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1506719513",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506719513"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1507226913",
      "pull_request_review_id": 1908308987,
      "id": 1507226913,
      "node_id": "PRRC_kwDOABII585Z1nUh",
      "diff_hunk": "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of out outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer' behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in minutes)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        headers_message = msg_headers()\n+        headers_message.headers = [prev_header]\n+        test_node.send_and_ping(headers_message)\n+\n+        # Trigger the timeouts\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": null,
      "original_position": 72,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "f06b50dfd45000f34bf258d48101718b4b5f9772",
      "in_reply_to_id": 1499971404,
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah, I saw that comment. Your explanation for the context of this test helps clarify it, thanks!\r\n\r\nCalling \"sync\" (synchronize) on a bitcoin node and having it get the highest tip from it's peers would be less surprising. Maybe \"update\" or \"process\" would be better verbs but let's not rename it in this PR.",
      "created_at": "2024-02-29T08:56:17Z",
      "updated_at": "2024-02-29T08:58:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1507226913",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1507226913"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509539625",
      "pull_request_review_id": 1912019739,
      "id": 1509539625,
      "node_id": "PRRC_kwDOABII585Z-b8p",
      "diff_hunk": "@@ -0,0 +1,246 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of out outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer' behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in minutes)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        test_node.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        test_node.send_and_ping(msg_headers([prev_header]))\n+\n+        # Trigger the timeouts\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        test_node.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and keep lagging behind, but not too much\")\n+        # Test that if the peer never catches up with our current tip, but it does with the\n+        # expected work that we set when setting the timer (that is, our tip at the time)\n+        # we do not disconnect the peer\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        self.log.info(\"Mine a block so our peer starts lagging\")\n+        best_block_hash = self.generateblock(node, output=\"raw(42)\", transactions=[])[\"hash\"]\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+        test_node.sync_with_ping()\n+        self.log.info(\"Keep catching up with the old tip and check that we are not evicted\")\n+        for _ in range(10):\n+            # Advance time but not enough to evict the peer\n+            best_block_hash = self.generateblock(node, output=\"raw(42)\", transactions=[])[\"hash\"]\n+            cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+            node.setmocktime(cur_mock_time)\n+\n+            # Send a header with the old tip\n+            test_node.send_and_ping(msg_headers([tip_header]))\n+            tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+\n+            # Check that we are not evicted\n+            test_node.wait_for_getheaders()\n+            cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+            node.setmocktime(cur_mock_time)\n+            test_node.sync_with_ping()\n+\n+        self.log.info(\"Create an outbound connection and take some time to catch up, but do it in time\")\n+        # Check that if the peer manages to catch up within time, the timeouts are removed (and the peer is not disconnected)\n+        # We are reusing the peer from the previous case which already sent us a valid (but old) block and whose timer is ticking\n+\n+        # Send an updated headers message matching our tip\n+        test_node.send_and_ping(msg_headers([from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))]))\n+\n+        # Wait for long enough for the timeouts to have triggered and check that we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        test_node.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer does not get evicted\")\n+        test_node.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_protected(self):\n+        # This tests the eviction logic for **protected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        # Outbound connections are flagged as protected as long as they have sent us a connecting block with at least as\n+        # much work as our current tip and we have enough empty protected_peers slots.\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection to a peer that shares our tip so it gets granted protection\")\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        test_node.send_and_ping(msg_headers([from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))]))\n+\n+        self.log.info(\"Mine a new block and sync with our peer\")\n+        self.generateblock(node, output=\"raw(42)\", transactions=[])\n+        test_node.sync_with_ping()\n+\n+        self.log.info(\"Let enough time pass for the timeouts to go off\")\n+        # Trigger the timeouts and check how we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        test_node.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the node does not get evicted\")\n+        test_node.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_mixed(self):\n+        # This tests the outbound eviction logic for a mix of protected and unprotected peers.\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create a mix of protected and unprotected outbound connections to check against eviction\")\n+\n+        # Lets try this logic having multiple peers, some protected and some unprotected\n+        # We protect up to 4 peers as long as they have provided a block with the same amount of work as our tip\n+        self.log.info(\"The first 4 peers are protected by sending us a valid block with enough work\")\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        headers_message = msg_headers([tip_header])\n+        protected_peers = []\n+        for i in range(4):\n+            peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\")\n+            peer.send_and_ping(headers_message)\n+            protected_peers.append(peer)\n+\n+        # We can create 4 additional outbound connections to peers that are unprotected. 2 of them will be well behaved,\n+        # whereas the other 2 will misbehave (1 sending no headers, 1 sending old ones)\n+        self.log.info(\"The remaining 4 peers will be mixed between honest (2) and misbehaving peers (2)\")\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+        headers_message = msg_headers([prev_header])\n+        honest_unprotected_peers = []\n+        for i in range(2):\n+            peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=4+i, connection_type=\"outbound-full-relay\")\n+            peer.send_and_ping(headers_message)\n+            honest_unprotected_peers.append(peer)\n+\n+        misbehaving_unprotected_peers = []\n+        for i in range(2):\n+            peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=6+i, connection_type=\"outbound-full-relay\")\n+            if i%2==0:\n+                peer.send_and_ping(headers_message)\n+            misbehaving_unprotected_peers.append(peer)\n+\n+        self.log.info(\"Mine a new block and keep the unprotected honest peer on sync, all the rest off-sync\")\n+        # Mine a block so all peers become outdated\n+        self.generateblock(node, output=\"raw(42)\", transactions=[])\n+        new_headers_message = msg_headers([from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))])\n+\n+        # Let the timeouts hit and check back\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        for peer in protected_peers + misbehaving_unprotected_peers:\n+            peer.sync_with_ping()\n+            peer.wait_for_getheaders()\n+        for peer in honest_unprotected_peers:\n+            peer.send_and_ping(new_headers_message)\n+            peer.wait_for_getheaders()\n+\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Check how none of the honest nor protected peers was evicted but all the misbehaving unprotected were\")\n+        for peer in protected_peers + honest_unprotected_peers:\n+            peer.sync_with_ping()\n+        for peer in misbehaving_unprotected_peers:\n+            peer.wait_for_disconnect()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_blocks_relay_only(self):\n+        # The logic for outbound eviction protection only applies to outbound-full-relay peers\n+        # This tests that other types of peers (blocks-relay-only for instance) are not granted protection\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an blocks-only outbound connection to a peer that shares our tip. This would usually grant protection\")\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"block-relay-only\")\n+        test_node.send_and_ping(msg_headers([from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))]))\n+\n+        self.log.info(\"Mine a new block and sync with our peer\")\n+        self.generateblock(node, output=\"raw(42)\", transactions=[])\n+        test_node.sync_with_ping()\n+\n+        self.log.info(\"Let enough time pass for the timeouts to go off\")\n+        # Trigger the timeouts and check how the peer gets evicted, since protection is only given to outbound-full-relay peers\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        test_node.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+\n+    def run_test(self):",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": 244,
      "original_position": 238,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "0af28b019a63cd59ae03b95685c4bd892830b099",
      "in_reply_to_id": null,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I could be missing something here but the new test `test_outbound_eviction_blocks_relay_only` isn't included in `run_test`. It does look good from just reading it though :)",
      "created_at": "2024-03-01T21:11:17Z",
      "updated_at": "2024-03-01T21:11:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1509539625",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509539625"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 244,
      "original_line": 244,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509592700",
      "pull_request_review_id": 1912114784,
      "id": 1509592700,
      "node_id": "PRRC_kwDOABII585Z-o58",
      "diff_hunk": "@@ -0,0 +1,246 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of out outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer' behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in minutes)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        test_node.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        test_node.send_and_ping(msg_headers([prev_header]))\n+\n+        # Trigger the timeouts\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        test_node.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and keep lagging behind, but not too much\")\n+        # Test that if the peer never catches up with our current tip, but it does with the\n+        # expected work that we set when setting the timer (that is, our tip at the time)\n+        # we do not disconnect the peer\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        self.log.info(\"Mine a block so our peer starts lagging\")\n+        best_block_hash = self.generateblock(node, output=\"raw(42)\", transactions=[])[\"hash\"]\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+        test_node.sync_with_ping()\n+        self.log.info(\"Keep catching up with the old tip and check that we are not evicted\")\n+        for _ in range(10):\n+            # Advance time but not enough to evict the peer\n+            best_block_hash = self.generateblock(node, output=\"raw(42)\", transactions=[])[\"hash\"]\n+            cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+            node.setmocktime(cur_mock_time)\n+\n+            # Send a header with the old tip\n+            test_node.send_and_ping(msg_headers([tip_header]))\n+            tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+\n+            # Check that we are not evicted\n+            test_node.wait_for_getheaders()\n+            cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+            node.setmocktime(cur_mock_time)\n+            test_node.sync_with_ping()\n+\n+        self.log.info(\"Create an outbound connection and take some time to catch up, but do it in time\")\n+        # Check that if the peer manages to catch up within time, the timeouts are removed (and the peer is not disconnected)\n+        # We are reusing the peer from the previous case which already sent us a valid (but old) block and whose timer is ticking\n+\n+        # Send an updated headers message matching our tip\n+        test_node.send_and_ping(msg_headers([from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))]))\n+\n+        # Wait for long enough for the timeouts to have triggered and check that we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        test_node.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer does not get evicted\")\n+        test_node.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_protected(self):\n+        # This tests the eviction logic for **protected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        # Outbound connections are flagged as protected as long as they have sent us a connecting block with at least as\n+        # much work as our current tip and we have enough empty protected_peers slots.\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection to a peer that shares our tip so it gets granted protection\")\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        test_node.send_and_ping(msg_headers([from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))]))\n+\n+        self.log.info(\"Mine a new block and sync with our peer\")\n+        self.generateblock(node, output=\"raw(42)\", transactions=[])\n+        test_node.sync_with_ping()\n+\n+        self.log.info(\"Let enough time pass for the timeouts to go off\")\n+        # Trigger the timeouts and check how we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        test_node.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the node does not get evicted\")\n+        test_node.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_mixed(self):\n+        # This tests the outbound eviction logic for a mix of protected and unprotected peers.\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create a mix of protected and unprotected outbound connections to check against eviction\")\n+\n+        # Lets try this logic having multiple peers, some protected and some unprotected\n+        # We protect up to 4 peers as long as they have provided a block with the same amount of work as our tip\n+        self.log.info(\"The first 4 peers are protected by sending us a valid block with enough work\")\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        headers_message = msg_headers([tip_header])\n+        protected_peers = []\n+        for i in range(4):\n+            peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\")\n+            peer.send_and_ping(headers_message)\n+            protected_peers.append(peer)\n+\n+        # We can create 4 additional outbound connections to peers that are unprotected. 2 of them will be well behaved,\n+        # whereas the other 2 will misbehave (1 sending no headers, 1 sending old ones)\n+        self.log.info(\"The remaining 4 peers will be mixed between honest (2) and misbehaving peers (2)\")\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+        headers_message = msg_headers([prev_header])\n+        honest_unprotected_peers = []\n+        for i in range(2):\n+            peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=4+i, connection_type=\"outbound-full-relay\")\n+            peer.send_and_ping(headers_message)\n+            honest_unprotected_peers.append(peer)\n+\n+        misbehaving_unprotected_peers = []\n+        for i in range(2):\n+            peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=6+i, connection_type=\"outbound-full-relay\")\n+            if i%2==0:\n+                peer.send_and_ping(headers_message)\n+            misbehaving_unprotected_peers.append(peer)\n+\n+        self.log.info(\"Mine a new block and keep the unprotected honest peer on sync, all the rest off-sync\")\n+        # Mine a block so all peers become outdated\n+        self.generateblock(node, output=\"raw(42)\", transactions=[])\n+        new_headers_message = msg_headers([from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))])\n+\n+        # Let the timeouts hit and check back\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        for peer in protected_peers + misbehaving_unprotected_peers:\n+            peer.sync_with_ping()\n+            peer.wait_for_getheaders()\n+        for peer in honest_unprotected_peers:\n+            peer.send_and_ping(new_headers_message)\n+            peer.wait_for_getheaders()\n+\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Check how none of the honest nor protected peers was evicted but all the misbehaving unprotected were\")\n+        for peer in protected_peers + honest_unprotected_peers:\n+            peer.sync_with_ping()\n+        for peer in misbehaving_unprotected_peers:\n+            peer.wait_for_disconnect()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_blocks_relay_only(self):\n+        # The logic for outbound eviction protection only applies to outbound-full-relay peers\n+        # This tests that other types of peers (blocks-relay-only for instance) are not granted protection\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an blocks-only outbound connection to a peer that shares our tip. This would usually grant protection\")\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"block-relay-only\")\n+        test_node.send_and_ping(msg_headers([from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))]))\n+\n+        self.log.info(\"Mine a new block and sync with our peer\")\n+        self.generateblock(node, output=\"raw(42)\", transactions=[])\n+        test_node.sync_with_ping()\n+\n+        self.log.info(\"Let enough time pass for the timeouts to go off\")\n+        # Trigger the timeouts and check how the peer gets evicted, since protection is only given to outbound-full-relay peers\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        test_node.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+\n+    def run_test(self):",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": 244,
      "original_position": 238,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "0af28b019a63cd59ae03b95685c4bd892830b099",
      "in_reply_to_id": 1509539625,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You're right, this may have been removed while rebasing. Nice catch!\r\n\r\nThis should be fixed now",
      "created_at": "2024-03-01T21:51:09Z",
      "updated_at": "2024-03-01T21:51:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1509592700",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509592700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 244,
      "original_line": 244,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509816567",
      "pull_request_review_id": 1912488924,
      "id": 1509816567,
      "node_id": "PRRC_kwDOABII585Z_fj3",
      "diff_hunk": "@@ -207,12 +207,40 @@ def test_outbound_eviction_mixed(self):\n         for peer in misbehaving_unprotected_peers:\n             peer.wait_for_disconnect()\n \n+        node.disconnect_p2ps()",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": 213,
      "original_position": 4,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "33353b7723d0704d64c0dfc1b0f5d072692e68b9",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "(feel free to disregard) nit: This should be in the previous commit ",
      "created_at": "2024-03-02T02:05:26Z",
      "updated_at": "2024-03-02T02:35:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1509816567",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509816567"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 213,
      "original_line": 213,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1531460342",
      "pull_request_review_id": 1947868943,
      "id": 1531460342,
      "node_id": "PRRC_kwDOABII585bSDr2",
      "diff_hunk": "@@ -0,0 +1,219 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of out outbound peers are subject to eviction logic if they cannot keep up",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": null,
      "original_position": 8,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "8fa272dccc1ebd11e5ed3995e4ad6ec91a748fd7",
      "in_reply_to_id": null,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "8fa272d: typo - s/out/our",
      "created_at": "2024-03-20T02:53:55Z",
      "updated_at": "2024-03-25T06:03:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1531460342",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1531460342"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1531460767",
      "pull_request_review_id": 1947868943,
      "id": 1531460767,
      "node_id": "PRRC_kwDOABII585bSDyf",
      "diff_hunk": "@@ -0,0 +1,219 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of out outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer' behavior and on whether they are protected",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": null,
      "original_position": 13,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "8fa272dccc1ebd11e5ed3995e4ad6ec91a748fd7",
      "in_reply_to_id": null,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "8fa272d: typo - peer's",
      "created_at": "2024-03-20T02:54:49Z",
      "updated_at": "2024-03-25T06:03:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1531460767",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1531460767"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1531461335",
      "pull_request_review_id": 1947868943,
      "id": 1531461335,
      "node_id": "PRRC_kwDOABII585bSD7X",
      "diff_hunk": "@@ -0,0 +1,219 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of out outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer' behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in minutes)",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": null,
      "original_position": 28,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "8fa272dccc1ebd11e5ed3995e4ad6ec91a748fd7",
      "in_reply_to_id": null,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "8fa272d: maybe remove minutes? since multiplying with 60 means seconds.",
      "created_at": "2024-03-20T02:56:23Z",
      "updated_at": "2024-03-25T06:03:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1531461335",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1531461335"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1531465214",
      "pull_request_review_id": 1947868943,
      "id": 1531465214,
      "node_id": "PRRC_kwDOABII585bSE3-",
      "diff_hunk": "@@ -0,0 +1,219 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of out outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer' behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in minutes)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": null,
      "original_position": 44,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "8fa272dccc1ebd11e5ed3995e4ad6ec91a748fd7",
      "in_reply_to_id": null,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "8fa272d: can we call `test_node` variable `peer` instead? `add_outbound_p2p_connection` returns `P2PInterface` objects and not a `TestNode` object like `test_node` implies.",
      "created_at": "2024-03-20T03:06:12Z",
      "updated_at": "2024-03-25T06:03:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1531465214",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1531465214"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1531467290",
      "pull_request_review_id": 1947868943,
      "id": 1531467290,
      "node_id": "PRRC_kwDOABII585bSFYa",
      "diff_hunk": "@@ -0,0 +1,219 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of out outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer' behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in minutes)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": null,
      "original_position": 46,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "8fa272dccc1ebd11e5ed3995e4ad6ec91a748fd7",
      "in_reply_to_id": null,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "8fa272d: `add_outbound_p2p_connection` calls `sync_with_ping()` internally. do we need to do it again?",
      "created_at": "2024-03-20T03:12:02Z",
      "updated_at": "2024-03-25T06:03:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1531467290",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1531467290"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1534015965",
      "pull_request_review_id": 1952385495,
      "id": 1534015965,
      "node_id": "PRRC_kwDOABII585bbznd",
      "diff_hunk": "@@ -207,12 +207,40 @@ def test_outbound_eviction_mixed(self):\n         for peer in misbehaving_unprotected_peers:\n             peer.wait_for_disconnect()\n \n+        node.disconnect_p2ps()",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": 213,
      "original_position": 4,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "33353b7723d0704d64c0dfc1b0f5d072692e68b9",
      "in_reply_to_id": 1509816567,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't think that's the case. In the previous commit this was the last test so there was no need to manually disconnect the nodes. This is only needed after the last commit to start fresh",
      "created_at": "2024-03-21T14:24:09Z",
      "updated_at": "2024-03-21T14:24:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1534015965",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1534015965"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 213,
      "original_line": 213,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1535542317",
      "pull_request_review_id": 1947868943,
      "id": 1535542317,
      "node_id": "PRRC_kwDOABII585bhoQt",
      "diff_hunk": "@@ -0,0 +1,247 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of out outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer' behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in minutes)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        test_node.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        test_node.send_and_ping(msg_headers([prev_header]))\n+\n+        # Trigger the timeouts\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        test_node.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and keep lagging behind, but not too much\")\n+        # Test that if the peer never catches up with our current tip, but it does with the\n+        # expected work that we set when setting the timer (that is, our tip at the time)\n+        # we do not disconnect the peer\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        self.log.info(\"Mine a block so our peer starts lagging\")\n+        best_block_hash = self.generateblock(node, output=\"raw(42)\", transactions=[])[\"hash\"]\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+        test_node.sync_with_ping()\n+        self.log.info(\"Keep catching up with the old tip and check that we are not evicted\")\n+        for _ in range(10):\n+            # Advance time but not enough to evict the peer\n+            best_block_hash = self.generateblock(node, output=\"raw(42)\", transactions=[])[\"hash\"]\n+            cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+            node.setmocktime(cur_mock_time)\n+\n+            # Send a header with the old tip\n+            test_node.send_and_ping(msg_headers([tip_header]))\n+            tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+\n+            # Check that we are not evicted\n+            test_node.wait_for_getheaders()",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": null,
      "original_position": 99,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "cd5b7a11ee55b1f86bb7662c4fc83616ffa735b1",
      "in_reply_to_id": null,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "8fa272dc: `last_message` needs to be explicitly cleared:\r\n```\r\nwith p2p_lock:\r\n    test_node.last_message.pop(\"getheaders\", None)\r\n```\r\nbefore calling `wait_for_getheaders()`. otherwise, it will always pass.",
      "created_at": "2024-03-22T13:04:04Z",
      "updated_at": "2024-03-25T06:03:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1535542317",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1535542317"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 99,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1536561844",
      "pull_request_review_id": 1947868943,
      "id": 1536561844,
      "node_id": "PRRC_kwDOABII585blhK0",
      "diff_hunk": "@@ -0,0 +1,219 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of out outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer' behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in minutes)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        test_node.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        test_node.send_and_ping(msg_headers([prev_header]))\n+\n+        # Trigger the timeouts\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        test_node.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and keep lagging behind, but not too much\")\n+        # Test that if the peer never catches up with our current tip, but it does with the\n+        # expected work that we set when setting the timer (that is, our tip at the time)\n+        # we do not disconnect the peer\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        self.log.info(\"Mine a block so our peer starts lagging\")\n+        best_block_hash = self.generateblock(node, output=\"raw(42)\", transactions=[])[\"hash\"]\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+        test_node.sync_with_ping()\n+        self.log.info(\"Keep catching up with the old tip and check that we are not evicted\")\n+        for _ in range(10):\n+            # Advance time but not enough to evict the peer\n+            best_block_hash = self.generateblock(node, output=\"raw(42)\", transactions=[])[\"hash\"]\n+            cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+            node.setmocktime(cur_mock_time)\n+\n+            # Send a header with the old tip\n+            test_node.send_and_ping(msg_headers([tip_header]))\n+            tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+\n+            # Check that we are not evicted\n+            test_node.wait_for_getheaders()\n+            cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+            node.setmocktime(cur_mock_time)\n+            test_node.sync_with_ping()\n+\n+        self.log.info(\"Create an outbound connection and take some time to catch up, but do it in time\")\n+        # Check that if the peer manages to catch up within time, the timeouts are removed (and the peer is not disconnected)\n+        # We are reusing the peer from the previous case which already sent us a valid (but old) block and whose timer is ticking\n+\n+        # Send an updated headers message matching our tip\n+        test_node.send_and_ping(msg_headers([from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))]))\n+\n+        # Wait for long enough for the timeouts to have triggered and check that we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        test_node.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer does not get evicted\")\n+        test_node.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_protected(self):\n+        # This tests the eviction logic for **protected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        # Outbound connections are flagged as protected as long as they have sent us a connecting block with at least as\n+        # much work as our current tip and we have enough empty protected_peers slots.\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection to a peer that shares our tip so it gets granted protection\")\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        test_node.send_and_ping(msg_headers([from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))]))\n+\n+        self.log.info(\"Mine a new block and sync with our peer\")\n+        self.generateblock(node, output=\"raw(42)\", transactions=[])\n+        test_node.sync_with_ping()\n+\n+        self.log.info(\"Let enough time pass for the timeouts to go off\")\n+        # Trigger the timeouts and check how we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        test_node.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the node does not get evicted\")\n+        test_node.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_mixed(self):\n+        # This tests the outbound eviction logic for a mix of protected and unprotected peers.\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create a mix of protected and unprotected outbound connections to check against eviction\")\n+\n+        # Lets try this logic having multiple peers, some protected and some unprotected",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": null,
      "original_position": 158,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "8fa272dccc1ebd11e5ed3995e4ad6ec91a748fd7",
      "in_reply_to_id": null,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "8fa272dc: Let's",
      "created_at": "2024-03-23T04:58:07Z",
      "updated_at": "2024-03-25T06:03:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1536561844",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1536561844"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 158,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537167840",
      "pull_request_review_id": 1957052665,
      "id": 1537167840,
      "node_id": "PRRC_kwDOABII585bn1Hg",
      "diff_hunk": "@@ -0,0 +1,219 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of out outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer' behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in minutes)",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": null,
      "original_position": 28,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "8fa272dccc1ebd11e5ed3995e4ad6ec91a748fd7",
      "in_reply_to_id": 1531461335,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'll change it for seconds 🤦 ",
      "created_at": "2024-03-25T07:53:34Z",
      "updated_at": "2024-03-25T07:53:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1537167840",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537167840"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537170378",
      "pull_request_review_id": 1957056847,
      "id": 1537170378,
      "node_id": "PRRC_kwDOABII585bn1vK",
      "diff_hunk": "@@ -0,0 +1,219 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of out outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer' behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in minutes)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": null,
      "original_position": 44,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "8fa272dccc1ebd11e5ed3995e4ad6ec91a748fd7",
      "in_reply_to_id": 1531465214,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah, I see your point. The rationale was that it was the node being tested, but that's indeed confusing given `TestNode`, I'll rename it to peer.",
      "created_at": "2024-03-25T07:56:29Z",
      "updated_at": "2024-03-25T07:56:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1537170378",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537170378"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537175854",
      "pull_request_review_id": 1957065896,
      "id": 1537175854,
      "node_id": "PRRC_kwDOABII585bn3Eu",
      "diff_hunk": "@@ -0,0 +1,219 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of out outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer' behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in minutes)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": null,
      "original_position": 46,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "8fa272dccc1ebd11e5ed3995e4ad6ec91a748fd7",
      "in_reply_to_id": 1531467290,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't think we do",
      "created_at": "2024-03-25T08:02:25Z",
      "updated_at": "2024-03-25T08:02:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1537175854",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537175854"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537179744",
      "pull_request_review_id": 1957072278,
      "id": 1537179744,
      "node_id": "PRRC_kwDOABII585bn4Bg",
      "diff_hunk": "@@ -0,0 +1,247 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of out outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer' behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in minutes)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        test_node.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        test_node.send_and_ping(msg_headers([prev_header]))\n+\n+        # Trigger the timeouts\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        test_node.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and keep lagging behind, but not too much\")\n+        # Test that if the peer never catches up with our current tip, but it does with the\n+        # expected work that we set when setting the timer (that is, our tip at the time)\n+        # we do not disconnect the peer\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        self.log.info(\"Mine a block so our peer starts lagging\")\n+        best_block_hash = self.generateblock(node, output=\"raw(42)\", transactions=[])[\"hash\"]\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+        test_node.sync_with_ping()\n+        self.log.info(\"Keep catching up with the old tip and check that we are not evicted\")\n+        for _ in range(10):\n+            # Advance time but not enough to evict the peer\n+            best_block_hash = self.generateblock(node, output=\"raw(42)\", transactions=[])[\"hash\"]\n+            cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+            node.setmocktime(cur_mock_time)\n+\n+            # Send a header with the old tip\n+            test_node.send_and_ping(msg_headers([tip_header]))\n+            tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+\n+            # Check that we are not evicted\n+            test_node.wait_for_getheaders()",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": null,
      "original_position": 99,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "cd5b7a11ee55b1f86bb7662c4fc83616ffa735b1",
      "in_reply_to_id": 1535542317,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ohh, TIL, I'm guessing this is because the collection is already populated with the `getheaders` from the interaction `i-1` and we find it all the time ",
      "created_at": "2024-03-25T08:06:30Z",
      "updated_at": "2024-03-25T08:06:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1537179744",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537179744"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 99,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537182344",
      "pull_request_review_id": 1957076384,
      "id": 1537182344,
      "node_id": "PRRC_kwDOABII585bn4qI",
      "diff_hunk": "@@ -0,0 +1,219 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of out outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer' behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in minutes)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": null,
      "original_position": 46,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "8fa272dccc1ebd11e5ed3995e4ad6ec91a748fd7",
      "in_reply_to_id": 1531467290,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "[this line](https://github.com/bitcoin/bitcoin/blob/c1223188e0a5fb11c3a1b9224511a49dc2f848ed/test/functional/test_framework/test_node.py#L787) - but not a blocker, maybe the test is more consistent to read this way.",
      "created_at": "2024-03-25T08:09:15Z",
      "updated_at": "2024-03-25T08:09:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1537182344",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537182344"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537188261",
      "pull_request_review_id": 1957085431,
      "id": 1537188261,
      "node_id": "PRRC_kwDOABII585bn6Gl",
      "diff_hunk": "@@ -0,0 +1,247 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of out outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer' behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in minutes)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        test_node.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        test_node.send_and_ping(msg_headers([prev_header]))\n+\n+        # Trigger the timeouts\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        test_node.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and keep lagging behind, but not too much\")\n+        # Test that if the peer never catches up with our current tip, but it does with the\n+        # expected work that we set when setting the timer (that is, our tip at the time)\n+        # we do not disconnect the peer\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        self.log.info(\"Mine a block so our peer starts lagging\")\n+        best_block_hash = self.generateblock(node, output=\"raw(42)\", transactions=[])[\"hash\"]\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+        test_node.sync_with_ping()\n+        self.log.info(\"Keep catching up with the old tip and check that we are not evicted\")\n+        for _ in range(10):\n+            # Advance time but not enough to evict the peer\n+            best_block_hash = self.generateblock(node, output=\"raw(42)\", transactions=[])[\"hash\"]\n+            cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+            node.setmocktime(cur_mock_time)\n+\n+            # Send a header with the old tip\n+            test_node.send_and_ping(msg_headers([tip_header]))\n+            tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+\n+            # Check that we are not evicted\n+            test_node.wait_for_getheaders()",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": null,
      "original_position": 99,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "cd5b7a11ee55b1f86bb7662c4fc83616ffa735b1",
      "in_reply_to_id": 1535542317,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "yeah! follow up idea, out of scope for this PR - it'd be awesome to modify `wait_for_getheaders()` to make sure that it's the same getheaders (which was sent from TestNode's `MaybeSendGetHeaders`) we're expecting that is received! ",
      "created_at": "2024-03-25T08:14:59Z",
      "updated_at": "2024-03-25T08:14:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1537188261",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537188261"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 99,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537515142",
      "pull_request_review_id": 1957626271,
      "id": 1537515142,
      "node_id": "PRRC_kwDOABII585bpJ6G",
      "diff_hunk": "@@ -0,0 +1,247 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of out outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer' behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in minutes)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        test_node.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        test_node.send_and_ping(msg_headers([prev_header]))\n+\n+        # Trigger the timeouts\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        test_node.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and keep lagging behind, but not too much\")\n+        # Test that if the peer never catches up with our current tip, but it does with the\n+        # expected work that we set when setting the timer (that is, our tip at the time)\n+        # we do not disconnect the peer\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        self.log.info(\"Mine a block so our peer starts lagging\")\n+        best_block_hash = self.generateblock(node, output=\"raw(42)\", transactions=[])[\"hash\"]\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+        test_node.sync_with_ping()\n+        self.log.info(\"Keep catching up with the old tip and check that we are not evicted\")\n+        for _ in range(10):\n+            # Advance time but not enough to evict the peer\n+            best_block_hash = self.generateblock(node, output=\"raw(42)\", transactions=[])[\"hash\"]\n+            cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+            node.setmocktime(cur_mock_time)\n+\n+            # Send a header with the old tip\n+            test_node.send_and_ping(msg_headers([tip_header]))\n+            tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+\n+            # Check that we are not evicted\n+            test_node.wait_for_getheaders()",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": null,
      "original_position": 99,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "cd5b7a11ee55b1f86bb7662c4fc83616ffa735b1",
      "in_reply_to_id": 1535542317,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "oh see #29318.",
      "created_at": "2024-03-25T12:31:21Z",
      "updated_at": "2024-03-25T12:31:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1537515142",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537515142"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 99,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537545071",
      "pull_request_review_id": 1957665697,
      "id": 1537545071,
      "node_id": "PRRC_kwDOABII585bpRNv",
      "diff_hunk": "@@ -0,0 +1,219 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of out outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer' behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in minutes)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": null,
      "original_position": 46,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "8fa272dccc1ebd11e5ed3995e4ad6ec91a748fd7",
      "in_reply_to_id": 1531467290,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Oh no, I meant I don't think we need to do it again 😆 ",
      "created_at": "2024-03-25T12:51:07Z",
      "updated_at": "2024-03-25T12:51:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1537545071",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537545071"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537843593",
      "pull_request_review_id": 1958159780,
      "id": 1537843593,
      "node_id": "PRRC_kwDOABII585bqaGJ",
      "diff_hunk": "@@ -0,0 +1,247 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of out outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer' behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in minutes)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        test_node.sync_with_ping()\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        test_node.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        test_node.send_and_ping(msg_headers([prev_header]))\n+\n+        # Trigger the timeouts\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        test_node.sync_with_ping()\n+        test_node.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        test_node.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and keep lagging behind, but not too much\")\n+        # Test that if the peer never catches up with our current tip, but it does with the\n+        # expected work that we set when setting the timer (that is, our tip at the time)\n+        # we do not disconnect the peer\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        self.log.info(\"Mine a block so our peer starts lagging\")\n+        best_block_hash = self.generateblock(node, output=\"raw(42)\", transactions=[])[\"hash\"]\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+        test_node.sync_with_ping()\n+        self.log.info(\"Keep catching up with the old tip and check that we are not evicted\")\n+        for _ in range(10):\n+            # Advance time but not enough to evict the peer\n+            best_block_hash = self.generateblock(node, output=\"raw(42)\", transactions=[])[\"hash\"]\n+            cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+            node.setmocktime(cur_mock_time)\n+\n+            # Send a header with the old tip\n+            test_node.send_and_ping(msg_headers([tip_header]))\n+            tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+\n+            # Check that we are not evicted\n+            test_node.wait_for_getheaders()",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": null,
      "original_position": 99,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "cd5b7a11ee55b1f86bb7662c4fc83616ffa735b1",
      "in_reply_to_id": 1535542317,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed it by popping from `last_message`, may open a followup simplifying it after \r\nhttps://github.com/bitcoin/bitcoin/issues/18614 gets fixed",
      "created_at": "2024-03-25T16:04:29Z",
      "updated_at": "2024-04-25T17:30:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1537843593",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1537843593"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 99,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1538560735",
      "pull_request_review_id": 1959258446,
      "id": 1538560735,
      "node_id": "PRRC_kwDOABII585btJLf",
      "diff_hunk": "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of our outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer's behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface, p2p_lock",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": null,
      "original_position": 24,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "0f5193199aef0f5210e17c547ba83b9cd5d4b590",
      "in_reply_to_id": null,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "0f51931: style nit - different lines",
      "created_at": "2024-03-26T04:09:38Z",
      "updated_at": "2024-03-26T08:10:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1538560735",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1538560735"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1538578493",
      "pull_request_review_id": 1959258446,
      "id": 1538578493,
      "node_id": "PRRC_kwDOABII585btNg9",
      "diff_hunk": "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of our outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer's behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface, p2p_lock\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in seconds)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": 46,
      "original_position": 44,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "0f5193199aef0f5210e17c547ba83b9cd5d4b590",
      "in_reply_to_id": null,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "0f51931: I think we need to clear the [initial getheaders](https://github.com/bitcoin/bitcoin/blob/b44f9e4645c00ee7dd669fdc9024716acdfb4720/src/net_processing.cpp#L5640) which gets sent every time `add_outbound_p2p_connection` is done too. this makes `test_outbound_eviction_protected` fail :(",
      "created_at": "2024-03-26T04:41:08Z",
      "updated_at": "2024-03-26T08:10:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1538578493",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1538578493"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 46,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1538925255",
      "pull_request_review_id": 1959890198,
      "id": 1538925255,
      "node_id": "PRRC_kwDOABII585buiLH",
      "diff_hunk": "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of our outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer's behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface, p2p_lock\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in seconds)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": 46,
      "original_position": 44,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "0f5193199aef0f5210e17c547ba83b9cd5d4b590",
      "in_reply_to_id": 1538578493,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah, I noticed that while patching your last comments for `test_outbound_eviction_unprotected` (which already has that change applied). I'm assessing how easy would be to supersede #29318 so this PR does not become super verbose and hacky",
      "created_at": "2024-03-26T10:03:09Z",
      "updated_at": "2024-03-26T10:03:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1538925255",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1538925255"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 46,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1540952753",
      "pull_request_review_id": 1963078587,
      "id": 1540952753,
      "node_id": "PRRC_kwDOABII585b2RKx",
      "diff_hunk": "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of our outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer's behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface, p2p_lock\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in seconds)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": 46,
      "original_position": 44,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "0f5193199aef0f5210e17c547ba83b9cd5d4b590",
      "in_reply_to_id": 1538578493,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "#29736\r\n\r\nWill rebase on top of that one once it gets merged",
      "created_at": "2024-03-27T11:44:04Z",
      "updated_at": "2024-03-27T11:44:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1540952753",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1540952753"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 46,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1541321224",
      "pull_request_review_id": 1963663079,
      "id": 1541321224,
      "node_id": "PRRC_kwDOABII585b3rII",
      "diff_hunk": "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of our outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer's behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface, p2p_lock\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in seconds)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": 46,
      "original_position": 44,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "0f5193199aef0f5210e17c547ba83b9cd5d4b590",
      "in_reply_to_id": 1538578493,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I patched this locally on top of the aforementioned PR and looks like all issues are gone :)",
      "created_at": "2024-03-27T15:16:04Z",
      "updated_at": "2024-03-27T15:16:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1541321224",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1541321224"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 46,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1574574102",
      "pull_request_review_id": 2014465811,
      "id": 1574574102,
      "node_id": "PRRC_kwDOABII585d2hgW",
      "diff_hunk": "@@ -0,0 +1,250 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of our outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer's behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface, p2p_lock\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in seconds)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        peer.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        peer.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        peer.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        peer.send_and_ping(msg_headers([prev_header]))\n+\n+        # Trigger the timeouts\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        peer.sync_with_ping()\n+        peer.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        peer.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and keep lagging behind, but not too much\")\n+        # Test that if the peer never catches up with our current tip, but it does with the\n+        # expected work that we set when setting the timer (that is, our tip at the time)\n+        # we do not disconnect the peer\n+        peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        with p2p_lock:\n+            peer.last_message.pop(\"getheaders\", None)\n+\n+        self.log.info(\"Mine a block so our peer starts lagging\")\n+        best_block_hash = self.generateblock(node, output=\"raw(42)\", transactions=[])[\"hash\"]\n+        peer.sync_with_ping()\n+        self.log.info(\"Keep catching up with the old tip and check that we are not evicted\")\n+        for _ in range(10):\n+            # Generate an additional block so the peers is 2 blocks behind\n+            prev_tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+            best_block_hash = self.generateblock(node, output=\"raw(42)\", transactions=[])[\"hash\"]\n+            peer.sync_with_ping()\n+\n+            # Advance time but not enough to evict the peer\n+            cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+            node.setmocktime(cur_mock_time)\n+            peer.sync_with_ping()\n+\n+            # Check that we are not evicted\n+            peer.wait_for_getheaders()\n+            with p2p_lock:\n+                peer.last_message.pop(\"getheaders\", None)\n+\n+            # Send a header with the previous tip (so we go back to 1 block behind)\n+            peer.send_and_ping(msg_headers([prev_tip_header]))\n+\n+        self.log.info(\"Create an outbound connection and take some time to catch up, but do it in time\")\n+        # Check that if the peer manages to catch up within time, the timeouts are removed (and the peer is not disconnected)\n+        # We are reusing the peer from the previous case which already sent us a valid (but old) block and whose timer is ticking\n+\n+        # Send an updated headers message matching our tip\n+        peer.send_and_ping(msg_headers([from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))]))\n+\n+        # Wait for long enough for the timeouts to have triggered and check that we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        peer.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer does not get evicted\")\n+        peer.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_protected(self):\n+        # This tests the eviction logic for **protected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        # Outbound connections are flagged as protected as long as they have sent us a connecting block with at least as\n+        # much work as our current tip and we have enough empty protected_peers slots.\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection to a peer that shares our tip so it gets granted protection\")\n+        peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        peer.send_and_ping(msg_headers([from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))]))\n+\n+        self.log.info(\"Mine a new block and sync with our peer\")\n+        self.generateblock(node, output=\"raw(42)\", transactions=[])\n+        peer.sync_with_ping()\n+\n+        self.log.info(\"Let enough time pass for the timeouts to go off\")\n+        # Trigger the timeouts and check how we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        peer.sync_with_ping()\n+        peer.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the node does not get evicted\")\n+        peer.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_mixed(self):\n+        # This tests the outbound eviction logic for a mix of protected and unprotected peers.\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create a mix of protected and unprotected outbound connections to check against eviction\")\n+\n+        # Let's try this logic having multiple peers, some protected and some unprotected\n+        # We protect up to 4 peers as long as they have provided a block with the same amount of work as our tip\n+        self.log.info(\"The first 4 peers are protected by sending us a valid block with enough work\")\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        headers_message = msg_headers([tip_header])\n+        protected_peers = []\n+        for i in range(4):\n+            peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\")\n+            peer.send_and_ping(headers_message)\n+            protected_peers.append(peer)\n+\n+        # We can create 4 additional outbound connections to peers that are unprotected. 2 of them will be well behaved,\n+        # whereas the other 2 will misbehave (1 sending no headers, 1 sending old ones)\n+        self.log.info(\"The remaining 4 peers will be mixed between honest (2) and misbehaving peers (2)\")\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+        headers_message = msg_headers([prev_header])\n+        honest_unprotected_peers = []\n+        for i in range(2):\n+            peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=4+i, connection_type=\"outbound-full-relay\")\n+            peer.send_and_ping(headers_message)\n+            honest_unprotected_peers.append(peer)\n+\n+        misbehaving_unprotected_peers = []\n+        for i in range(2):\n+            peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=6+i, connection_type=\"outbound-full-relay\")\n+            if i%2==0:\n+                peer.send_and_ping(headers_message)\n+            misbehaving_unprotected_peers.append(peer)\n+\n+        self.log.info(\"Mine a new block and keep the unprotected honest peer on sync, all the rest off-sync\")\n+        # Mine a block so all peers become outdated\n+        self.generateblock(node, output=\"raw(42)\", transactions=[])\n+        new_headers_message = msg_headers([from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))])\n+\n+        # Let the timeouts hit and check back\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        for peer in protected_peers + misbehaving_unprotected_peers:\n+            peer.sync_with_ping()\n+            peer.wait_for_getheaders()\n+        for peer in honest_unprotected_peers:\n+            peer.send_and_ping(new_headers_message)\n+            peer.wait_for_getheaders()\n+\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Check how none of the honest nor protected peers was evicted but all the misbehaving unprotected were\")\n+        for peer in protected_peers + honest_unprotected_peers:\n+            peer.sync_with_ping()\n+        for peer in misbehaving_unprotected_peers:\n+            peer.wait_for_disconnect()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_blocks_relay_only(self):\n+        # The logic for outbound eviction protection only applies to outbound-full-relay peers\n+        # This tests that other types of peers (blocks-relay-only for instance) are not granted protection\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an blocks-only outbound connection to a peer that shares our tip. This would usually grant protection\")\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"block-relay-only\")",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": null,
      "original_position": 222,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "368389d973a85d21aa9ebf030ef5e7f7ac5343de",
      "in_reply_to_id": null,
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Noticed you renamed `test_node` -> `peer` above (based off https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1531465214) but not inside `test_outbound_eviction_blocks_relay_only()`.\r\n\r\n(Was diffing against older head (59affd0bf9042d746a6b32739edb0cd45d28d569)).\r\n\r\nMight be worth changing once you rebase on top of #29736.",
      "created_at": "2024-04-22T11:09:08Z",
      "updated_at": "2024-04-22T11:09:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1574574102",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1574574102"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 223,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1579936778",
      "pull_request_review_id": 2023274302,
      "id": 1579936778,
      "node_id": "PRRC_kwDOABII585eK-wK",
      "diff_hunk": "@@ -0,0 +1,250 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\" Test node outbound peer eviction logic\n+\n+A subset of our outbound peers are subject to eviction logic if they cannot keep up\n+with our vision of the best chain. This criteria applies only to non-protected peers,\n+and can be triggered by either not learning about any blocks from an outbound peer after\n+a certain deadline, or by them not being able to catch up fast enough (under the same deadline).\n+\n+This tests the different eviction paths based on the peer's behavior and on whether they are protected\n+or not.\n+\"\"\"\n+import time\n+\n+from test_framework.messages import (\n+    from_hex,\n+    msg_headers,\n+    CBlockHeader,\n+)\n+from test_framework.p2p import (\n+    P2PInterface, p2p_lock\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+# Timeouts (in seconds)\n+CHAIN_SYNC_TIMEOUT = 20 * 60\n+HEADERS_RESPONSE_TIME = 2 * 60\n+\n+\n+class P2POutEvict(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def test_outbound_eviction_unprotected(self):\n+        # This tests the eviction logic for **unprotected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection and don't send any headers\")\n+        # Test disconnect due to no block being announced in 22+ minutes (headers are not even exchanged)\n+        peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        # Wait for over 20 min to trigger the first eviction timeout. This sets the last call past 2 min in the future.\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        peer.sync_with_ping()\n+        # Wait for over 2 more min to trigger the disconnection\n+        peer.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        peer.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and send header but never catch up\")\n+        # Mimic a node that just falls behind for long enough\n+        # This should also apply for a node doing IBD that does not catch up in time\n+        # Get our tip header and its parent\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+\n+        # Connect a peer and make it send us headers ending in our tip's parent\n+        peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        peer.send_and_ping(msg_headers([prev_header]))\n+\n+        # Trigger the timeouts\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        peer.sync_with_ping()\n+        peer.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer gets evicted\")\n+        peer.wait_for_disconnect()\n+\n+        self.log.info(\"Create an outbound connection and keep lagging behind, but not too much\")\n+        # Test that if the peer never catches up with our current tip, but it does with the\n+        # expected work that we set when setting the timer (that is, our tip at the time)\n+        # we do not disconnect the peer\n+        peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        with p2p_lock:\n+            peer.last_message.pop(\"getheaders\", None)\n+\n+        self.log.info(\"Mine a block so our peer starts lagging\")\n+        best_block_hash = self.generateblock(node, output=\"raw(42)\", transactions=[])[\"hash\"]\n+        peer.sync_with_ping()\n+        self.log.info(\"Keep catching up with the old tip and check that we are not evicted\")\n+        for _ in range(10):\n+            # Generate an additional block so the peers is 2 blocks behind\n+            prev_tip_header = from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))\n+            best_block_hash = self.generateblock(node, output=\"raw(42)\", transactions=[])[\"hash\"]\n+            peer.sync_with_ping()\n+\n+            # Advance time but not enough to evict the peer\n+            cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+            node.setmocktime(cur_mock_time)\n+            peer.sync_with_ping()\n+\n+            # Check that we are not evicted\n+            peer.wait_for_getheaders()\n+            with p2p_lock:\n+                peer.last_message.pop(\"getheaders\", None)\n+\n+            # Send a header with the previous tip (so we go back to 1 block behind)\n+            peer.send_and_ping(msg_headers([prev_tip_header]))\n+\n+        self.log.info(\"Create an outbound connection and take some time to catch up, but do it in time\")\n+        # Check that if the peer manages to catch up within time, the timeouts are removed (and the peer is not disconnected)\n+        # We are reusing the peer from the previous case which already sent us a valid (but old) block and whose timer is ticking\n+\n+        # Send an updated headers message matching our tip\n+        peer.send_and_ping(msg_headers([from_hex(CBlockHeader(), node.getblockheader(best_block_hash, False))]))\n+\n+        # Wait for long enough for the timeouts to have triggered and check that we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        peer.sync_with_ping()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the peer does not get evicted\")\n+        peer.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_protected(self):\n+        # This tests the eviction logic for **protected** outbound peers (that is, PeerManagerImpl::ConsiderEviction)\n+        # Outbound connections are flagged as protected as long as they have sent us a connecting block with at least as\n+        # much work as our current tip and we have enough empty protected_peers slots.\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an outbound connection to a peer that shares our tip so it gets granted protection\")\n+        peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        peer.send_and_ping(msg_headers([from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))]))\n+\n+        self.log.info(\"Mine a new block and sync with our peer\")\n+        self.generateblock(node, output=\"raw(42)\", transactions=[])\n+        peer.sync_with_ping()\n+\n+        self.log.info(\"Let enough time pass for the timeouts to go off\")\n+        # Trigger the timeouts and check how we are still connected\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        peer.sync_with_ping()\n+        peer.wait_for_getheaders()\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Test that the node does not get evicted\")\n+        peer.sync_with_ping()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_mixed(self):\n+        # This tests the outbound eviction logic for a mix of protected and unprotected peers.\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create a mix of protected and unprotected outbound connections to check against eviction\")\n+\n+        # Let's try this logic having multiple peers, some protected and some unprotected\n+        # We protect up to 4 peers as long as they have provided a block with the same amount of work as our tip\n+        self.log.info(\"The first 4 peers are protected by sending us a valid block with enough work\")\n+        tip_header = from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))\n+        headers_message = msg_headers([tip_header])\n+        protected_peers = []\n+        for i in range(4):\n+            peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"outbound-full-relay\")\n+            peer.send_and_ping(headers_message)\n+            protected_peers.append(peer)\n+\n+        # We can create 4 additional outbound connections to peers that are unprotected. 2 of them will be well behaved,\n+        # whereas the other 2 will misbehave (1 sending no headers, 1 sending old ones)\n+        self.log.info(\"The remaining 4 peers will be mixed between honest (2) and misbehaving peers (2)\")\n+        prev_header = from_hex(CBlockHeader(), node.getblockheader(f\"{tip_header.hashPrevBlock:064x}\", False))\n+        headers_message = msg_headers([prev_header])\n+        honest_unprotected_peers = []\n+        for i in range(2):\n+            peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=4+i, connection_type=\"outbound-full-relay\")\n+            peer.send_and_ping(headers_message)\n+            honest_unprotected_peers.append(peer)\n+\n+        misbehaving_unprotected_peers = []\n+        for i in range(2):\n+            peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=6+i, connection_type=\"outbound-full-relay\")\n+            if i%2==0:\n+                peer.send_and_ping(headers_message)\n+            misbehaving_unprotected_peers.append(peer)\n+\n+        self.log.info(\"Mine a new block and keep the unprotected honest peer on sync, all the rest off-sync\")\n+        # Mine a block so all peers become outdated\n+        self.generateblock(node, output=\"raw(42)\", transactions=[])\n+        new_headers_message = msg_headers([from_hex(CBlockHeader(), node.getblockheader(node.getbestblockhash(), False))])\n+\n+        # Let the timeouts hit and check back\n+        cur_mock_time += (CHAIN_SYNC_TIMEOUT + 1)\n+        node.setmocktime(cur_mock_time)\n+        for peer in protected_peers + misbehaving_unprotected_peers:\n+            peer.sync_with_ping()\n+            peer.wait_for_getheaders()\n+        for peer in honest_unprotected_peers:\n+            peer.send_and_ping(new_headers_message)\n+            peer.wait_for_getheaders()\n+\n+        cur_mock_time += (HEADERS_RESPONSE_TIME + 1)\n+        node.setmocktime(cur_mock_time)\n+        self.log.info(\"Check how none of the honest nor protected peers was evicted but all the misbehaving unprotected were\")\n+        for peer in protected_peers + honest_unprotected_peers:\n+            peer.sync_with_ping()\n+        for peer in misbehaving_unprotected_peers:\n+            peer.wait_for_disconnect()\n+\n+        node.disconnect_p2ps()\n+\n+    def test_outbound_eviction_blocks_relay_only(self):\n+        # The logic for outbound eviction protection only applies to outbound-full-relay peers\n+        # This tests that other types of peers (blocks-relay-only for instance) are not granted protection\n+        node = self.nodes[0]\n+        cur_mock_time = node.mocktime\n+\n+        self.log.info(\"Create an blocks-only outbound connection to a peer that shares our tip. This would usually grant protection\")\n+        test_node = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"block-relay-only\")",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": null,
      "original_position": 222,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "368389d973a85d21aa9ebf030ef5e7f7ac5343de",
      "in_reply_to_id": 1574574102,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nice catch!",
      "created_at": "2024-04-25T18:16:49Z",
      "updated_at": "2024-04-25T18:16:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1579936778",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1579936778"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 223,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1580221364",
      "pull_request_review_id": 2023739900,
      "id": 1580221364,
      "node_id": "PRRC_kwDOABII585eMEO0",
      "diff_hunk": "@@ -207,12 +207,40 @@ def test_outbound_eviction_mixed(self):\n         for peer in misbehaving_unprotected_peers:\n             peer.wait_for_disconnect()\n \n+        node.disconnect_p2ps()",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": 213,
      "original_position": 4,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "33353b7723d0704d64c0dfc1b0f5d072692e68b9",
      "in_reply_to_id": 1509816567,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "(still nit) On second thought it seems a bad idea to depend on the order in which tests are called for deciding whether or not to perform cleanup. I think that might be kind of a footgun for anyone modifying the test in the future (more relevant for `test_outbound_eviction_blocks_relay_only`)",
      "created_at": "2024-04-25T22:50:21Z",
      "updated_at": "2024-04-25T22:52:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1580221364",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1580221364"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 213,
      "original_line": 213,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1581185454",
      "pull_request_review_id": 2025303889,
      "id": 1581185454,
      "node_id": "PRRC_kwDOABII585ePvmu",
      "diff_hunk": "@@ -207,12 +207,40 @@ def test_outbound_eviction_mixed(self):\n         for peer in misbehaving_unprotected_peers:\n             peer.wait_for_disconnect()\n \n+        node.disconnect_p2ps()",
      "path": "test/functional/p2p_outbound_eviction.py",
      "position": 213,
      "original_position": 4,
      "commit_id": "d53d84834747c37f4060a9ef379e0a6b50155246",
      "original_commit_id": "33353b7723d0704d64c0dfc1b0f5d072692e68b9",
      "in_reply_to_id": 1509816567,
      "user": {
        "login": "sr-gi",
        "id": 6665628,
        "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sr-gi",
        "html_url": "https://github.com/sr-gi",
        "followers_url": "https://api.github.com/users/sr-gi/followers",
        "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
        "organizations_url": "https://api.github.com/users/sr-gi/orgs",
        "repos_url": "https://api.github.com/users/sr-gi/repos",
        "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sr-gi/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ok, agreed",
      "created_at": "2024-04-26T15:18:24Z",
      "updated_at": "2024-04-26T15:18:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29122#discussion_r1581185454",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1581185454"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 213,
      "original_line": 213,
      "side": "RIGHT"
    }
  ]
}