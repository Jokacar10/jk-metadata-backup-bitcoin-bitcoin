{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245",
    "id": 1909162960,
    "node_id": "PR_kwDOABII585xy4PQ",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30245",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30245.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30245.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30245",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30245/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/23333b7ed243071c9b4e4f04c727556d8065acbb",
    "number": 30245,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "net: Allow -proxy=[::1] on nodes with IPV6 lo only",
    "user": {
      "login": "m3dwards",
      "id": 1204616,
      "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/m3dwards",
      "html_url": "https://github.com/m3dwards",
      "followers_url": "https://api.github.com/users/m3dwards/followers",
      "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
      "organizations_url": "https://api.github.com/users/m3dwards/orgs",
      "repos_url": "https://api.github.com/users/m3dwards/repos",
      "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/m3dwards/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This is similar to (but does not fix) https://github.com/bitcoin/bitcoin/issues/13155 which I believe is the same issue but in libevent.\r\n\r\nThe issue is on a host that has IPV6 enabled but only a loopback IP address `-proxy=[::1]` will fail as `[::1]` is not considered valid by `getaddrinfo` with `AI_ADDRCONFIG` flag. I think the loopback interface should be considered valid and we have a functional test that will try to test this: `feature_proxy.py`.\r\n\r\nTo replicate the issue, run `feature_proxy.py` inside a docker container that has IPV6 loopback ::1 address without specifically giving that container an external IPV6 address. This should be the default with recent versions of docker. IPV6 on loopback interface was enabled in docker engine 26 and later ([https://docs.docker.com/engine/release-notes/26.0/#bug-fixes-and-enhancements-2](https://docs.docker.com/engine/release-notes/26.0/#bug-fixes-and-enhancements-2)).\r\n\r\n`AI_ADDRCONFIG` was introduced to prevent slow DNS lookups on systems that were IPV4 only.\r\n\r\nReferences:\r\n\r\nMan section on `AI_ADDRCONFIG`:\r\n\r\n```\r\nIf hints.ai_flags includes the AI_ADDRCONFIG flag, then IPv4 addresses are returned in the list pointed to by res only if the local system has at least one IPv4 address configured, and  IPv6  addresses\r\n       are  returned only if the local system has at least one IPv6 address configured.  The loopback address is not considered for this case as valid as a configured address.  This flag is useful on, for ex‚Äê\r\n       ample, IPv4-only systems, to ensure that getaddrinfo() does not return IPv6 socket addresses that would always fail in connect(2) or bind(2).\r\n```\r\n\r\n[AI_ADDRCONFIG considered harmful Wiki entry by Fedora](https://fedoraproject.org/wiki/QA/Networking/NameResolution/ADDRCONFIG)\r\n\r\n[Mozilla discussing slow DNS without AI_ADDRCONFIG and also localhost issues with it](https://bugzilla.mozilla.org/show_bug.cgi?id=467497)\r\n",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "created_at": "2024-06-07T12:53:49Z",
    "updated_at": "2025-07-18T14:12:49Z",
    "closed_at": "2024-07-18T21:51:26Z",
    "mergeable_state": "unknown",
    "merged": true,
    "merged_at": "2024-07-18T21:51:26Z",
    "merged_by": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "merge_commit_sha": "ec74f457416a11938361ef4829e701cc15cfe2b2",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "m3dwards:allow-dns-ipv6-lo-only",
      "ref": "allow-dns-ipv6-lo-only",
      "sha": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "user": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 727882334,
        "node_id": "R_kgDOK2KaXg",
        "name": "bitcoin",
        "full_name": "m3dwards/bitcoin",
        "owner": {
          "login": "m3dwards",
          "id": 1204616,
          "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/m3dwards",
          "html_url": "https://github.com/m3dwards",
          "followers_url": "https://api.github.com/users/m3dwards/followers",
          "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
          "organizations_url": "https://api.github.com/users/m3dwards/orgs",
          "repos_url": "https://api.github.com/users/m3dwards/repos",
          "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/m3dwards/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/m3dwards/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/m3dwards/bitcoin",
        "archive_url": "https://api.github.com/repos/m3dwards/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/m3dwards/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/m3dwards/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/m3dwards/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/m3dwards/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/m3dwards/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/m3dwards/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/m3dwards/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/m3dwards/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/m3dwards/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/m3dwards/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/m3dwards/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/m3dwards/bitcoin/events",
        "forks_url": "https://api.github.com/repos/m3dwards/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/m3dwards/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/m3dwards/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/m3dwards/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/m3dwards/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/m3dwards/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/m3dwards/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/m3dwards/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/m3dwards/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/m3dwards/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/m3dwards/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/m3dwards/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/m3dwards/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/m3dwards/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/m3dwards/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/m3dwards/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:m3dwards/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/m3dwards/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/m3dwards/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/m3dwards/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/m3dwards/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/m3dwards/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/m3dwards/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/m3dwards/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/m3dwards/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/m3dwards/bitcoin/hooks",
        "svn_url": "https://github.com/m3dwards/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 248056,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-07-18T14:23:48Z",
        "created_at": "2023-12-05T19:14:11Z",
        "updated_at": "2025-07-18T14:23:55Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "6ae903e24afa95214e59a9dc87dc74db3535a5b5",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37533,
        "stargazers_count": 84619,
        "watchers_count": 84619,
        "size": 289174,
        "default_branch": "master",
        "open_issues_count": 756,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-07-18T13:24:29Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-07-18T13:24:35Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 12,
    "deletions": 1,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 22,
    "comments": 8
  },
  "events": [
    {
      "event": "commented",
      "id": 2154778040,
      "node_id": "IC_kwDOABII586Ab024",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2154778040",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-07T12:53:51Z",
      "updated_at": "2024-07-18T21:41:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30245).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [tdb3](https://github.com/bitcoin/bitcoin/pull/30245#pullrequestreview-2178157576), [pinheadmz](https://github.com/bitcoin/bitcoin/pull/30245#pullrequestreview-2178514340), [achow101](https://github.com/bitcoin/bitcoin/pull/30245#issuecomment-2237670866) |\n| Stale ACK | [vasild](https://github.com/bitcoin/bitcoin/pull/30245#pullrequestreview-2139044652) |\n\nIf your review is incorrectly listed, please react with üëé to this comment and the bot will ignore it on the next update.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#issuecomment-2154778040",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30245"
    },
    {
      "event": "labeled",
      "id": 13080409380,
      "node_id": "LE_lADOABII586Lf3k7zwAAAAMLpzUk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13080409380",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-07T12:53:53Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "reviewed",
      "id": 2117955181,
      "node_id": "PRR_kwDOABII585-PW5t",
      "url": null,
      "actor": null,
      "commit_id": "84e63f34af0396c2a79276be8996403768b65dee",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK on allowing usage of `[::1]` on nodes with IPv6 lo only.\r\n\r\nA workaround is to use `-dns=0` (which will avoid `AI_ADDRCONFIG` but will make it impossible to use hostnames).\r\n\r\nI can reproduce the problem on Linux. FreeBSD treats the loopback address as valid, so this problem is non-existent on FreeBSD.\r\n\r\nI think there is a merit in this for our use cases of `getaddrinfo()` / `Lookup*()`:\r\n\r\n> IPv4 addresses are returned in the list pointed  to  by res  only if the local system has at least one IPv4 address configured ... _(and same for IPv6)_\r\n\r\nBut not this:\r\n\r\n> The loopback address is  not  considered  for  this case  as valid as a configured address. This flag is useful on, for example, IPv4-only systems, to ensure that getaddrinfo() does not return IPv6 socket addresses that would always fail in connect(2) or bind(2).\r\n\r\nThis is even bogus to some extent - if the system has only `[::1]` configured and we want to `connect(2)` or `bind(2)` to `[::1]` that will work. So the \"always\" is too strong / untrue.\r\n\r\n---\r\n\r\nNow, can we have the `AI_ADDRCONFIG` behavior but get it to consider loopback addresses as valid? For example, after running `getaddrinfo()` with `AI_ADDRCONFIG` run it again without `AI_ADDRCONFIG` and append any loopback addresses from the second run to the results?",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#pullrequestreview-2117955181",
      "submitted_at": "2024-06-14T11:35:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
    },
    {
      "event": "commented",
      "id": 2168391558,
      "node_id": "IC_kwDOABII586BPweG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2168391558",
      "actor": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-14T16:39:51Z",
      "updated_at": "2024-06-14T16:39:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Now, can we have the `AI_ADDRCONFIG` behavior but get it to consider loopback addresses as valid? For example, after running `getaddrinfo()` with `AI_ADDRCONFIG` run it again without `AI_ADDRCONFIG` and append any loopback addresses from the second run to the results?\r\n\r\nI like this idea, I'll have a go at implementing it.",
      "user": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#issuecomment-2168391558",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30245"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13197893361,
      "node_id": "HRFPE_lADOABII586Lf3k7zwAAAAMSp97x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13197893361",
      "actor": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d1337d575cfede6284c210dbde31453bbc45bd6d",
      "commit_url": "https://api.github.com/repos/m3dwards/bitcoin/commits/d1337d575cfede6284c210dbde31453bbc45bd6d",
      "created_at": "2024-06-18T09:06:59Z"
    },
    {
      "event": "reviewed",
      "id": 2125072155,
      "node_id": "PRR_kwDOABII585-qgcb",
      "url": null,
      "actor": null,
      "commit_id": "d1337d575cfede6284c210dbde31453bbc45bd6d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#pullrequestreview-2125072155",
      "submitted_at": "2024-06-18T10:00:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
    },
    {
      "event": "commented",
      "id": 2175762192,
      "node_id": "IC_kwDOABII586Br38Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2175762192",
      "actor": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-18T10:28:39Z",
      "updated_at": "2024-06-18T10:28:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "Pushed new approach of calling `getaddrinfo` twice. First pass is unchanged from original behaviour, second pass adds local IP addresses should they have not been found on the first pass.",
      "user": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#issuecomment-2175762192",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30245"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13204949094,
      "node_id": "HRFPE_lADOABII586Lf3k7zwAAAAMTE4hm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13204949094",
      "actor": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a7cbc27101677ee5ff357da9595f386b03b4756d",
      "commit_url": "https://api.github.com/repos/m3dwards/bitcoin/commits/a7cbc27101677ee5ff357da9595f386b03b4756d",
      "created_at": "2024-06-18T18:21:23Z"
    },
    {
      "event": "labeled",
      "id": 13207811889,
      "node_id": "LE_lADOABII586Lf3k7zwAAAAMTPzcx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13207811889",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-18T23:09:08Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 13213373837,
      "node_id": "UNLE_lADOABII586Lf3k7zwAAAAMTlBWN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13213373837",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-19T09:29:36Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2132345212,
      "node_id": "PRR_kwDOABII585_GQF8",
      "url": null,
      "actor": null,
      "commit_id": "a7cbc27101677ee5ff357da9595f386b03b4756d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK a7cbc27101677ee5ff357da9595f386b03b4756d",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#pullrequestreview-2132345212",
      "submitted_at": "2024-06-21T10:52:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13244324307,
      "node_id": "HRFPE_lADOABII586Lf3k7zwAAAAMVbFnT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13244324307",
      "actor": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "eacb5596c7e5ffa88857fbcc043e5b788c35aeab",
      "commit_url": "https://api.github.com/repos/m3dwards/bitcoin/commits/eacb5596c7e5ffa88857fbcc043e5b788c35aeab",
      "created_at": "2024-06-21T15:46:16Z"
    },
    {
      "event": "mentioned",
      "id": 13244345879,
      "node_id": "MEE_lADOABII586Lf3k7zwAAAAMVbK4X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13244345879",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T15:48:16Z"
    },
    {
      "event": "subscribed",
      "id": 13244345896,
      "node_id": "SE_lADOABII586Lf3k7zwAAAAMVbK4o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13244345896",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T15:48:16Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13244557615,
      "node_id": "HRFPE_lADOABII586Lf3k7zwAAAAMVb-kv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13244557615",
      "actor": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "60a753b7b38fbe89494f8df66f13a84f28af244b",
      "commit_url": "https://api.github.com/repos/m3dwards/bitcoin/commits/60a753b7b38fbe89494f8df66f13a84f28af244b",
      "created_at": "2024-06-21T16:08:23Z"
    },
    {
      "event": "commented",
      "id": 2183040402,
      "node_id": "IC_kwDOABII586CHo2S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2183040402",
      "actor": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T16:10:03Z",
      "updated_at": "2024-06-21T16:10:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for your review @vasild, should have addressed all of your comments.",
      "user": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#issuecomment-2183040402",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30245"
    },
    {
      "event": "mentioned",
      "id": 13244575156,
      "node_id": "MEE_lADOABII586Lf3k7zwAAAAMVcC20",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13244575156",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T16:10:04Z"
    },
    {
      "event": "subscribed",
      "id": 13244575172,
      "node_id": "SE_lADOABII586Lf3k7zwAAAAMVcC3E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13244575172",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T16:10:04Z"
    },
    {
      "event": "reviewed",
      "id": 2139044652,
      "node_id": "PRR_kwDOABII585_fzss",
      "url": null,
      "actor": null,
      "commit_id": "60a753b7b38fbe89494f8df66f13a84f28af244b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 60a753b7b38fbe89494f8df66f13a84f28af244b\r\n\r\nThank you!",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#pullrequestreview-2139044652",
      "submitted_at": "2024-06-25T15:31:01Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
    },
    {
      "event": "reviewed",
      "id": 2151672225,
      "node_id": "PRR_kwDOABII586AP-mh",
      "url": null,
      "actor": null,
      "commit_id": "60a753b7b38fbe89494f8df66f13a84f28af244b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 60a753b7b38fbe89494f8df66f13a84f28af244b\r\n\r\nTested in an ubuntu docker container with local ipv6 but not external ipv6:\r\n\r\n```\r\n# ip address | grep inet \r\n    inet 127.0.0.1/8 scope host lo\r\n    inet6 ::1/128 scope host \r\n    inet 172.17.0.2/16 brd 172.17.255.255 scope global eth0\r\n```\r\n\r\nConfirmed the `feature_proxy` test fails without the patch. Added extra logging to confirm the error:\r\n\r\n```\r\ngetaddrinfo: ::1 error: Address family for hostname not supported\r\n```\r\n\r\nWith the patch, `getaddrinfo` is called a second time with `flags=0` and the call succeeds.\r\n\r\nA few questions below.\r\n\r\n<details><summary>Show Signature</summary>\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA256\r\n\r\nACK 60a753b7b38fbe89494f8df66f13a84f28af244b\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQIzBAEBCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmaC23IACgkQ5+KYS2KJ\r\nyTrxpQ/8Cz+gj6bv5wNZ/Nuf3N4uV1I2xScdU8LEjt9RfkppplQaDvExq7Bv3rBt\r\n7eSOeuODMWmy+yjSS69NYcuHIg79mDWHNz7XVFX2uqQ0dpix+CaQPYvGDMfiOYR0\r\nXbXNTcx8tCID+TdvPE1QC4iLQitjwwAtD8c9CNupzEy0r5z5JtyxMjUCWcB68LJa\r\nNvKDjRQtO/+D4I7uv0U0Mq+lDFloRYr6byWP9US6Z/mBeBdlvev/82+jkrhstB3q\r\ntYspNR725QBxh5rLjgxoBGjPmjJfyLBpwCGqGFzLVI8BM1oGaa/YYFLE9NK0WRuk\r\n8xKAbXwIu7CkjF859vlgthzROJPq3FHcK/8T9wZFpv6QvDZbaaN4WwpDjI8zFgqI\r\nBH658s+7yNlrjM6JJL5qHD71h3bztvYp6EpzUD1eTqHTY9OumDPc7av4E2ooDDFv\r\na3xjokiP1JB4qmjqkXExqwdPQ8WayXAOolMAHCu7+IqvhWjzSFBoovbdpChz/kIX\r\nF3fJXbF1qEM8ybjk0Oroja6jVIeCjdKlDajR3ZUmFevkTTMRy7kDPktlbKXKBFz7\r\nuItf5JZ94aQg9TobJLbKXAkTUeFY57rt1Ucxn0vs7zGJQCLVloxOXNhc13FX8iD8\r\nKoUULcryDATRMNxKWieBKMA7RnEOAiJjEZmj47X73pnuxsIL9kc=\r\n=zVvS\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\npinheadmz's public key is [on keybase](https://keybase.io/pinheadmz/pgp_keys.asc?fingerprint=e61773cd6e01040e2f1bd78ce7e2984b6289c93a)\r\n</details>\r\n",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#pullrequestreview-2151672225",
      "submitted_at": "2024-07-01T16:40:54Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
    },
    {
      "event": "reviewed",
      "id": 2152531616,
      "node_id": "PRR_kwDOABII586ATQag",
      "url": null,
      "actor": null,
      "commit_id": "60a753b7b38fbe89494f8df66f13a84f28af244b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\nGood find.  Left a couple of comments.",
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#pullrequestreview-2152531616",
      "submitted_at": "2024-07-02T02:27:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13381811879,
      "node_id": "HRFPE_lADOABII586Lf3k7zwAAAAMdnj6n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13381811879",
      "actor": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "017a3f7c3b607f494c3d4e553558baf35cb4dbf8",
      "commit_url": "https://api.github.com/repos/m3dwards/bitcoin/commits/017a3f7c3b607f494c3d4e553558baf35cb4dbf8",
      "created_at": "2024-07-03T14:34:32Z"
    },
    {
      "event": "commented",
      "id": 2206621790,
      "node_id": "IC_kwDOABII586DhmBe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2206621790",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-03T15:44:48Z",
      "updated_at": "2024-07-03T15:44:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\nüöß At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/27000088118</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#issuecomment-2206621790",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30245"
    },
    {
      "event": "labeled",
      "id": 13382821943,
      "node_id": "LE_lADOABII586Lf3k7zwAAAAMdrag3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13382821943",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-03T15:44:48Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13383312002,
      "node_id": "HRFPE_lADOABII586Lf3k7zwAAAAMdtSKC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13383312002",
      "actor": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f95fb4a1d826765553f3319ee6f1024094954073",
      "commit_url": "https://api.github.com/repos/m3dwards/bitcoin/commits/f95fb4a1d826765553f3319ee6f1024094954073",
      "created_at": "2024-07-03T16:26:32Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13393648366,
      "node_id": "HRFPE_lADOABII586Lf3k7zwAAAAMeUtru",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13393648366",
      "actor": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e047f4e166b37ad28482e05d78ff84020f4b4ea0",
      "commit_url": "https://api.github.com/repos/m3dwards/bitcoin/commits/e047f4e166b37ad28482e05d78ff84020f4b4ea0",
      "created_at": "2024-07-04T11:37:31Z"
    },
    {
      "event": "unlabeled",
      "id": 13395083460,
      "node_id": "UNLE_lADOABII586Lf3k7zwAAAAMeaMDE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13395083460",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-04T13:29:55Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2217001579,
      "node_id": "IC_kwDOABII586EJMJr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2217001579",
      "actor": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-09T08:52:12Z",
      "updated_at": "2024-07-09T08:52:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "@pinheadmz @tdb3 I should have addressed all of your comments.\r\n\r\n@vasild the change since your review is rather than always check twice and discard duplicates, we now only check on error. I chose not to look for the specific error as it was not POSIX and was different on different platforms.",
      "user": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#issuecomment-2217001579",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30245"
    },
    {
      "event": "mentioned",
      "id": 13436217501,
      "node_id": "MEE_lADOABII586Lf3k7zwAAAAMg3Gid",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13436217501",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-09T08:52:13Z"
    },
    {
      "event": "subscribed",
      "id": 13436217528,
      "node_id": "SE_lADOABII586Lf3k7zwAAAAMg3Gi4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13436217528",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-09T08:52:14Z"
    },
    {
      "event": "mentioned",
      "id": 13436217554,
      "node_id": "MEE_lADOABII586Lf3k7zwAAAAMg3GjS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13436217554",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-09T08:52:14Z"
    },
    {
      "event": "subscribed",
      "id": 13436217575,
      "node_id": "SE_lADOABII586Lf3k7zwAAAAMg3Gjn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13436217575",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-09T08:52:14Z"
    },
    {
      "event": "mentioned",
      "id": 13436217595,
      "node_id": "MEE_lADOABII586Lf3k7zwAAAAMg3Gj7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13436217595",
      "actor": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-09T08:52:14Z"
    },
    {
      "event": "subscribed",
      "id": 13436217617,
      "node_id": "SE_lADOABII586Lf3k7zwAAAAMg3GkR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13436217617",
      "actor": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-09T08:52:14Z"
    },
    {
      "event": "reviewed",
      "id": 2167594504,
      "node_id": "PRR_kwDOABII586BMt4I",
      "url": null,
      "actor": null,
      "commit_id": "e047f4e166b37ad28482e05d78ff84020f4b4ea0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I think this is really close.  Left one more comment.",
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#pullrequestreview-2167594504",
      "submitted_at": "2024-07-09T22:12:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIzMzMzYjdlZDI0MzA3MWM5YjRlNGYwNGM3Mjc1NTZkODA2NWFjYmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23333b7ed243071c9b4e4f04c727556d8065acbb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/23333b7ed243071c9b4e4f04c727556d8065acbb",
      "tree": {
        "sha": "0421d18fb3113ec8e4f87cc31232921950a12b36",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0421d18fb3113ec8e4f87cc31232921950a12b36"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a020ca443ba370bf41583962d16aa8551876f53",
          "sha": "4a020ca443ba370bf41583962d16aa8551876f53",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4a020ca443ba370bf41583962d16aa8551876f53"
        }
      ],
      "message": "net: Allow DNS lookups on nodes with IPV6 lo only\n\nAI_ADDRCONFIG prevents ::1 from being considered a valid address on hosts that have a IPV6 loopback IP address but no other IPV6 interfaces.",
      "committer": {
        "name": "Max Edwards",
        "email": "youwontforgetthis@gmail.com",
        "date": "2024-07-13T12:02:21Z"
      },
      "author": {
        "name": "Max Edwards",
        "email": "youwontforgetthis@gmail.com",
        "date": "2024-06-07T12:24:04Z"
      },
      "sha": "23333b7ed243071c9b4e4f04c727556d8065acbb"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13503188162,
      "node_id": "HRFPE_lADOABII586Lf3k7zwAAAAMk2kzC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13503188162",
      "actor": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "commit_url": "https://api.github.com/repos/m3dwards/bitcoin/commits/23333b7ed243071c9b4e4f04c727556d8065acbb",
      "created_at": "2024-07-15T10:08:28Z"
    },
    {
      "event": "reviewed",
      "id": 2178157576,
      "node_id": "PRR_kwDOABII586B1AwI",
      "url": null,
      "actor": null,
      "commit_id": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 23333b7ed243071c9b4e4f04c727556d8065acbb\r\n\r\nTested with a similar approach to https://github.com/bitcoin/bitcoin/pull/30245#pullrequestreview-2151672225\r\n\r\nCreated an LXC container with an external and loopback IPv4 address, and with a loopback IPv6 address.\r\n\r\n```\r\nroot@test30245:~/bitcoin# ip a | grep inet\r\n    inet 127.0.0.1/8 scope host lo\r\n    inet6 ::1/128 scope host noprefixroute \r\n    inet 192.168.10.81/24 brd 192.168.10.255 scope global eth0\r\n```\r\n\r\nInserted some extra log statments:\r\n```\r\n2024-07-15T12:06:09Z =============First try\r\n2024-07-15T12:06:09Z =============n_err != 0\r\n2024-07-15T12:06:09Z =============Trying a second time\r\n2024-07-15T12:06:09Z =============Second time worked!\r\n```\r\n\r\nAppeared to work well.\r\n\r\nAlso synced approx 8000 blocks on signet with a tor proxy set up to listen on [::1]:9050 (`-proxy=[::1]` with bitcoind).",
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#pullrequestreview-2178157576",
      "submitted_at": "2024-07-15T16:16:23Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
    },
    {
      "event": "review_requested",
      "id": 13508064692,
      "node_id": "RRE_lADOABII586Lf3k7zwAAAAMlJLW0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13508064692",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-15T16:16:27Z",
      "requested_reviewer": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 13508064834,
      "node_id": "RRE_lADOABII586Lf3k7zwAAAAMlJLZC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13508064834",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-15T16:16:27Z",
      "requested_reviewer": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 2229124568,
      "node_id": "IC_kwDOABII586E3b3Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2229124568",
      "actor": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-15T18:26:10Z",
      "updated_at": "2024-07-15T18:26:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "@pinheadmz @vasild\r\n\r\nReady for you to take a second look if you have any time.",
      "user": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#issuecomment-2229124568",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30245"
    },
    {
      "event": "mentioned",
      "id": 13509486349,
      "node_id": "MEE_lADOABII586Lf3k7zwAAAAMlOmcN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13509486349",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-15T18:26:12Z"
    },
    {
      "event": "subscribed",
      "id": 13509486364,
      "node_id": "SE_lADOABII586Lf3k7zwAAAAMlOmcc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13509486364",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-15T18:26:12Z"
    },
    {
      "event": "mentioned",
      "id": 13509486382,
      "node_id": "MEE_lADOABII586Lf3k7zwAAAAMlOmcu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13509486382",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-15T18:26:12Z"
    },
    {
      "event": "subscribed",
      "id": 13509486395,
      "node_id": "SE_lADOABII586Lf3k7zwAAAAMlOmc7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13509486395",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-15T18:26:12Z"
    },
    {
      "event": "reviewed",
      "id": 2178514340,
      "node_id": "PRR_kwDOABII586B2X2k",
      "url": null,
      "actor": null,
      "commit_id": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 23333b7ed243071c9b4e4f04c727556d8065acbb\r\n\r\nReviewed updated code change and tested in linux VM with local ipv6 only.\r\n\r\n<details><summary>Show Signature</summary>\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA256\r\n\r\nACK 23333b7ed243071c9b4e4f04c727556d8065acbb\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQIzBAEBCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmaVfcgACgkQ5+KYS2KJ\r\nyTorBw/7BFoooqdMN+Zb000m/qKsUoMhW36vZBdGTuxt3xkWrRHlggm8ym/fQfen\r\njt9VcWYl6vmZFnU+nUvJbdN+GLTdf+fDT8vdJdYKjKSxmflEIGLRnf5Pktf2E8lG\r\nrycNQqa6rxcMcnHu0p69VWUU2Ay3vXTV3OOZ/UJFMTLo1twLyljxsSwu6JvMSKgM\r\n4qOqFnqxVeJ1fq3Lw7TtjbwvKweDU8iw2B/YE6kXg711u0qdbSHe3MiPiXKl0sRp\r\nRCkFXuO/q0GICUfW+XHqfs4tDikD+5TRhZ4bBRond7KIdYSdizZzgkNdI1elcI9B\r\n/exMlaLD4cJAEeqovhgNpSByI3rJKQMmzUWS2GrzU78Rsk1zg3a0L+XioM7BMrMm\r\nClZs82CER6VDNApCv1pEZkdF2AsrbCXDT9GmmpIearoTWAKhR2GP9hccUxKOeZB6\r\nqtb5ep5SvyjM+hIj4IBTM6g0i24SvfdP3/9WcuYj5G1Cl7sWVI1tdXJIDP2hMCij\r\n7J9yC9YznQpvx9626yASNpFq/WRcC4Iug7WdTrSlnIBCQDJ9wMt1uzK6Aj/SdDI+\r\nvKE45GqpYag7MPKnNSobDSe83JWssPy8ZNP1W8FmBV1Vd4yRMdKJea4yrmNYDCwC\r\nCiC31ZufOkWBdb4n+rduarigMQxEOQMm/8nqFCKdl7GFaIcUjPQ=\r\n=wUuO\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\npinheadmz's public key is [on keybase](https://keybase.io/pinheadmz/pgp_keys.asc?fingerprint=e61773cd6e01040e2f1bd78ce7e2984b6289c93a)\r\n</details>\r\n",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#pullrequestreview-2178514340",
      "submitted_at": "2024-07-15T19:50:11Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
    },
    {
      "event": "commented",
      "id": 2237670866,
      "node_id": "IC_kwDOABII586FYCXS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2237670866",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-18T21:41:31Z",
      "updated_at": "2024-07-18T21:41:31Z",
      "author_association": "MEMBER",
      "body": "ACK 23333b7ed243071c9b4e4f04c727556d8065acbb",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#issuecomment-2237670866",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30245"
    },
    {
      "event": "merged",
      "id": 13563879480,
      "node_id": "ME_lADOABII586Lf3k7zwAAAAMoeGA4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13563879480",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ec74f457416a11938361ef4829e701cc15cfe2b2",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec74f457416a11938361ef4829e701cc15cfe2b2",
      "created_at": "2024-07-18T21:51:26Z"
    },
    {
      "event": "closed",
      "id": 13563879507,
      "node_id": "CE_lADOABII586Lf3k7zwAAAAMoeGBT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13563879507",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-18T21:51:26Z"
    },
    {
      "event": "referenced",
      "id": 13733304507,
      "node_id": "REFE_lADOABII586Lf3k7zwAAAAMykZi7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13733304507",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "bffa0a7c28b6a38d7bc6b69df893bfdd59018808",
      "commit_url": "https://api.github.com/repos/bitcoinknots/bitcoin/commits/bffa0a7c28b6a38d7bc6b69df893bfdd59018808",
      "created_at": "2024-08-01T22:51:32Z"
    },
    {
      "event": "referenced",
      "id": 14883486371,
      "node_id": "REFE_lADOABII586Lf3k7zwAAAAN3H_qj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14883486371",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3e009ea12f90011a8373f6e36ec87c89e741467d",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/3e009ea12f90011a8373f6e36ec87c89e741467d",
      "created_at": "2024-10-25T20:35:46Z"
    },
    {
      "event": "referenced",
      "id": 14917329302,
      "node_id": "REFE_lADOABII586Lf3k7zwAAAAN5JGGW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14917329302",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "745addf6a7c2218705663c5f65ccefa78996f076",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/745addf6a7c2218705663c5f65ccefa78996f076",
      "created_at": "2024-10-27T00:14:17Z"
    },
    {
      "event": "referenced",
      "id": 14930439749,
      "node_id": "REFE_lADOABII586Lf3k7zwAAAAN57G5F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14930439749",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "565f2db930263b2a49fcdb8104fe28574b0409d1",
      "commit_url": "https://api.github.com/repos/dashpay/dash/commits/565f2db930263b2a49fcdb8104fe28574b0409d1",
      "created_at": "2024-10-27T19:15:16Z"
    },
    {
      "event": "locked",
      "id": 18701567682,
      "node_id": "LOE_lADOABII586Lf3k7zwAAAARas0bC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18701567682",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-18T14:12:49Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1639560684",
      "pull_request_review_id": 2117955181,
      "id": 1639560684,
      "node_id": "PRRC_kwDOABII585hubXs",
      "diff_hunk": "@@ -54,7 +54,7 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     // If we don't allow lookups, then use the AI_NUMERICHOST flag for\n     // getaddrinfo to only decode numerical network addresses and suppress\n     // hostname lookups.\n-    ai_hint.ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "original_commit_id": "84e63f34af0396c2a79276be8996403768b65dee",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "There is a comment above which has to be removed if this patch makes it as it is:\r\n```\r\n// If we allow lookups of hostnames, use the AI_ADDRCONFIG flag to only\r\n// return addresses whose family we have an address configured for.\r\n```",
      "created_at": "2024-06-14T09:38:13Z",
      "updated_at": "2024-06-14T11:35:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1639560684",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1639560684"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1644188203",
      "pull_request_review_id": 2125072155,
      "id": 1644188203,
      "node_id": "PRRC_kwDOABII585iAFIr",
      "diff_hunk": "@@ -56,29 +57,64 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     // hostname lookups.\n     ai_hint.ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n \n+    std::set<CNetAddr> resolved_addresses_set;\n+\n     addrinfo* ai_res{nullptr};\n-    const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n-    if (n_err != 0) {\n-        return {};\n-    }",
      "path": "src/netbase.cpp",
      "position": 24,
      "original_position": 18,
      "commit_id": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "original_commit_id": "d1337d575cfede6284c210dbde31453bbc45bd6d",
      "in_reply_to_id": null,
      "user": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I removed the error handling here for two reasons:\r\n\r\nFirstly it just returns an empty vector which is what I believe this function will do anyway if it fails to get address info.\r\n\r\nSecondly, if `getaddrinfo` doesn't allow loopback only IPV6 then that is returned as an error code 1 \"address family for hostname not supported\" so this specific case would have to be allowed.",
      "created_at": "2024-06-18T10:00:22Z",
      "updated_at": "2024-06-18T10:00:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1644188203",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1644188203"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 63,
      "original_line": 63,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1648772483",
      "pull_request_review_id": 2132345212,
      "id": 1648772483,
      "node_id": "PRRC_kwDOABII585iRkWD",
      "diff_hunk": "@@ -48,36 +48,59 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     ai_hint.ai_protocol = IPPROTO_TCP;\n     // We don't care which address family (IPv4 or IPv6) is returned\n     ai_hint.ai_family = AF_UNSPEC;\n+\n     // If we allow lookups of hostnames, use the AI_ADDRCONFIG flag to only\n     // return addresses whose family we have an address configured for.\n     //\n     // If we don't allow lookups, then use the AI_NUMERICHOST flag for\n     // getaddrinfo to only decode numerical network addresses and suppress\n     // hostname lookups.\n-    ai_hint.ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n+    const int ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n+\n+    // getaddrinfo is called twice and to prevent duplicates a set is used\n+    // std::set used over a std::unordered_set as CNetAddr does not have a hash function\n+    std::set<CNetAddr> resolved_addresses_set;\n+\n+    auto callgetaddrinfo = [&](const int flags, const bool only_add_local_addr) {",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "original_commit_id": "a7cbc27101677ee5ff357da9595f386b03b4756d",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: function arguments that are passed by value need not be `const`\r\n```suggestion\r\n    auto callgetaddrinfo = [&](int flags, bool only_add_local_addr) {\r\n```\r\nhttp://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rf-in",
      "created_at": "2024-06-21T10:26:32Z",
      "updated_at": "2024-06-21T10:52:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1648772483",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1648772483"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1648787209",
      "pull_request_review_id": 2132345212,
      "id": 1648787209,
      "node_id": "PRRC_kwDOABII585iRn8J",
      "diff_hunk": "@@ -48,36 +48,59 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     ai_hint.ai_protocol = IPPROTO_TCP;\n     // We don't care which address family (IPv4 or IPv6) is returned\n     ai_hint.ai_family = AF_UNSPEC;\n+\n     // If we allow lookups of hostnames, use the AI_ADDRCONFIG flag to only\n     // return addresses whose family we have an address configured for.\n     //\n     // If we don't allow lookups, then use the AI_NUMERICHOST flag for\n     // getaddrinfo to only decode numerical network addresses and suppress\n     // hostname lookups.\n-    ai_hint.ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n+    const int ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n+\n+    // getaddrinfo is called twice and to prevent duplicates a set is used\n+    // std::set used over a std::unordered_set as CNetAddr does not have a hash function\n+    std::set<CNetAddr> resolved_addresses_set;\n+\n+    auto callgetaddrinfo = [&](const int flags, const bool only_add_local_addr) {\n+        ai_hint.ai_flags = flags;\n+        addrinfo* ai_res{nullptr};\n+        getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res);\n+\n+        // Traverse the linked list of addrinfo structures\n+        addrinfo* ai_trav{ai_res};\n+        while (ai_trav != nullptr) {\n+            CNetAddr addr;\n+            if (ai_trav->ai_family == AF_INET) {\n+                assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in));\n+                addr = CNetAddr{reinterpret_cast<sockaddr_in*>(ai_trav->ai_addr)->sin_addr};\n+            }\n+            if (ai_trav->ai_family == AF_INET6) {\n+                assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in6));\n+                const sockaddr_in6* s6{reinterpret_cast<sockaddr_in6*>(ai_trav->ai_addr)};\n+                addr = CNetAddr{s6->sin6_addr, s6->sin6_scope_id};\n+            }\n+            if (!only_add_local_addr || (only_add_local_addr && addr.IsLocal())) {",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "original_commit_id": "a7cbc27101677ee5ff357da9595f386b03b4756d",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit, feel free to ignore if you find the current one more readable, but this is equivalent to:\r\n\r\n```suggestion\r\n            if (!only_add_local_addr || addr.IsLocal()) {\r\n```",
      "created_at": "2024-06-21T10:40:09Z",
      "updated_at": "2024-06-21T10:52:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1648787209",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1648787209"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1648799369",
      "pull_request_review_id": 2132345212,
      "id": 1648799369,
      "node_id": "PRRC_kwDOABII585iRq6J",
      "diff_hunk": "@@ -48,36 +48,59 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     ai_hint.ai_protocol = IPPROTO_TCP;\n     // We don't care which address family (IPv4 or IPv6) is returned\n     ai_hint.ai_family = AF_UNSPEC;\n+\n     // If we allow lookups of hostnames, use the AI_ADDRCONFIG flag to only\n     // return addresses whose family we have an address configured for.\n     //\n     // If we don't allow lookups, then use the AI_NUMERICHOST flag for\n     // getaddrinfo to only decode numerical network addresses and suppress\n     // hostname lookups.\n-    ai_hint.ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n+    const int ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n+\n+    // getaddrinfo is called twice and to prevent duplicates a set is used\n+    // std::set used over a std::unordered_set as CNetAddr does not have a hash function\n+    std::set<CNetAddr> resolved_addresses_set;\n+\n+    auto callgetaddrinfo = [&](const int flags, const bool only_add_local_addr) {\n+        ai_hint.ai_flags = flags;\n+        addrinfo* ai_res{nullptr};\n+        getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res);\n+\n+        // Traverse the linked list of addrinfo structures\n+        addrinfo* ai_trav{ai_res};\n+        while (ai_trav != nullptr) {\n+            CNetAddr addr;\n+            if (ai_trav->ai_family == AF_INET) {\n+                assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in));\n+                addr = CNetAddr{reinterpret_cast<sockaddr_in*>(ai_trav->ai_addr)->sin_addr};\n+            }\n+            if (ai_trav->ai_family == AF_INET6) {\n+                assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in6));\n+                const sockaddr_in6* s6{reinterpret_cast<sockaddr_in6*>(ai_trav->ai_addr)};\n+                addr = CNetAddr{s6->sin6_addr, s6->sin6_scope_id};\n+            }\n+            if (!only_add_local_addr || (only_add_local_addr && addr.IsLocal())) {\n+                resolved_addresses_set.emplace(addr);\n+            }\n+            ai_trav = ai_trav->ai_next;\n+        }\n+        freeaddrinfo(ai_res);\n+    };\n \n-    addrinfo* ai_res{nullptr};\n-    const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n-    if (n_err != 0) {\n-        return {};\n+    callgetaddrinfo(ai_flags, false);\n+\n+    // AI_ADDRCONFIG on some systems may exclude loopback only addresses, especially IPV6\n+    // We perform a second lookup with ai_flags set to 0 and add local addresses to the set\n+    if (ai_flags == AI_ADDRCONFIG) {\n+        callgetaddrinfo(0, true);\n     }\n \n-    // Traverse the linked list starting with ai_trav.\n-    addrinfo* ai_trav{ai_res};\n+    // Convert the set to a vector\n     std::vector<CNetAddr> resolved_addresses;\n-    while (ai_trav != nullptr) {\n-        if (ai_trav->ai_family == AF_INET) {\n-            assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in));\n-            resolved_addresses.emplace_back(reinterpret_cast<sockaddr_in*>(ai_trav->ai_addr)->sin_addr);\n-        }\n-        if (ai_trav->ai_family == AF_INET6) {\n-            assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in6));\n-            const sockaddr_in6* s6{reinterpret_cast<sockaddr_in6*>(ai_trav->ai_addr)};\n-            resolved_addresses.emplace_back(s6->sin6_addr, s6->sin6_scope_id);\n-        }\n-        ai_trav = ai_trav->ai_next;\n+    resolved_addresses.reserve(resolved_addresses_set.size());\n+    for (auto it = resolved_addresses_set.begin(); it != resolved_addresses_set.end(); ) {\n+        resolved_addresses.push_back(std::move(resolved_addresses_set.extract(it++).value()));\n     }\n-    freeaddrinfo(ai_res);\n \n     return resolved_addresses;",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 77,
      "commit_id": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "original_commit_id": "a7cbc27101677ee5ff357da9595f386b03b4756d",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Simpler:\r\n\r\n```diff\r\n-    // Convert the set to a vector\r\n-    std::vector<CNetAddr> resolved_addresses;\r\n-    resolved_addresses.reserve(resolved_addresses_set.size());\r\n-    for (auto it = resolved_addresses_set.begin(); it != resolved_addresses_set.end(); ) {\r\n-        resolved_addresses.push_back(std::move(resolved_addresses_set.extract(it++).value()));\r\n-    }\r\n-\r\n-    return resolved_addresses;\r\n+    return {resolved_addresses_set.begin(), resolved_addresses_set.end()};\r\n```",
      "created_at": "2024-06-21T10:51:07Z",
      "updated_at": "2024-06-21T10:52:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1648799369",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1648799369"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": null,
      "original_start_line": 100,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1648805702",
      "pull_request_review_id": 2132396345,
      "id": 1648805702,
      "node_id": "PRRC_kwDOABII585iRsdG",
      "diff_hunk": "@@ -56,29 +57,64 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     // hostname lookups.\n     ai_hint.ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n \n+    std::set<CNetAddr> resolved_addresses_set;\n+\n     addrinfo* ai_res{nullptr};\n-    const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n-    if (n_err != 0) {\n-        return {};\n-    }",
      "path": "src/netbase.cpp",
      "position": 24,
      "original_position": 18,
      "commit_id": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "original_commit_id": "d1337d575cfede6284c210dbde31453bbc45bd6d",
      "in_reply_to_id": 1644188203,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Are you sure that `getaddrinfo()` would return error (ie `n_err != 0`) and still set something useful in `ai_res`? That sounds strange.\r\n\r\nI am worried that it may return an error (for whatever reason) and set `ai_res` to a bogus pointer which we later try to dereference.\r\n\r\nJust returning from the lambda and not from `WrappedGetAddrInfo()` if `getaddrinfo()` returns an error seems reasonable to me.",
      "created_at": "2024-06-21T10:57:28Z",
      "updated_at": "2024-06-21T10:57:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1648805702",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1648805702"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 63,
      "original_line": 63,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1649164186",
      "pull_request_review_id": 2132986002,
      "id": 1649164186,
      "node_id": "PRRC_kwDOABII585iTD-a",
      "diff_hunk": "@@ -56,29 +57,64 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     // hostname lookups.\n     ai_hint.ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n \n+    std::set<CNetAddr> resolved_addresses_set;\n+\n     addrinfo* ai_res{nullptr};\n-    const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n-    if (n_err != 0) {\n-        return {};\n-    }",
      "path": "src/netbase.cpp",
      "position": 24,
      "original_position": 18,
      "commit_id": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "original_commit_id": "d1337d575cfede6284c210dbde31453bbc45bd6d",
      "in_reply_to_id": 1644188203,
      "user": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It was working but I agree handling the error is safer.\r\n\r\nAlso I was wrong that it would need to handle the specific \"address family for hostname not supported\" error.\r\n\r\nImplemented your suggestion of just returning from the lambda.",
      "created_at": "2024-06-21T16:08:27Z",
      "updated_at": "2024-06-21T16:08:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1649164186",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1649164186"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 63,
      "original_line": 63,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1661217742",
      "pull_request_review_id": 2151672225,
      "id": 1661217742,
      "node_id": "PRRC_kwDOABII585jBCvO",
      "diff_hunk": "@@ -48,38 +48,57 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     ai_hint.ai_protocol = IPPROTO_TCP;\n     // We don't care which address family (IPv4 or IPv6) is returned\n     ai_hint.ai_family = AF_UNSPEC;\n+\n     // If we allow lookups of hostnames, use the AI_ADDRCONFIG flag to only\n     // return addresses whose family we have an address configured for.\n     //\n     // If we don't allow lookups, then use the AI_NUMERICHOST flag for\n     // getaddrinfo to only decode numerical network addresses and suppress\n     // hostname lookups.\n-    ai_hint.ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n-\n-    addrinfo* ai_res{nullptr};\n-    const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n-    if (n_err != 0) {\n-        return {};\n-    }\n-\n-    // Traverse the linked list starting with ai_trav.\n-    addrinfo* ai_trav{ai_res};\n-    std::vector<CNetAddr> resolved_addresses;\n-    while (ai_trav != nullptr) {\n-        if (ai_trav->ai_family == AF_INET) {\n-            assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in));\n-            resolved_addresses.emplace_back(reinterpret_cast<sockaddr_in*>(ai_trav->ai_addr)->sin_addr);\n+    const int ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n+\n+    // getaddrinfo is called twice and to prevent duplicates a set is used\n+    // std::set used over a std::unordered_set as CNetAddr does not have a hash function\n+    std::set<CNetAddr> resolved_addresses_set;\n+\n+    auto callgetaddrinfo = [&](int flags, bool only_add_local_addr) {\n+        ai_hint.ai_flags = flags;\n+        addrinfo* ai_res{nullptr};\n+        const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n+        if (n_err != 0) {\n+            return;\n         }\n-        if (ai_trav->ai_family == AF_INET6) {\n-            assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in6));\n-            const sockaddr_in6* s6{reinterpret_cast<sockaddr_in6*>(ai_trav->ai_addr)};\n-            resolved_addresses.emplace_back(s6->sin6_addr, s6->sin6_scope_id);\n+\n+        // Traverse the linked list of addrinfo structures\n+        addrinfo* ai_trav{ai_res};\n+        while (ai_trav != nullptr) {\n+            CNetAddr addr;\n+            if (ai_trav->ai_family == AF_INET) {\n+                assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in));\n+                addr = CNetAddr{reinterpret_cast<sockaddr_in*>(ai_trav->ai_addr)->sin_addr};\n+            }\n+            if (ai_trav->ai_family == AF_INET6) {\n+                assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in6));\n+                const sockaddr_in6* s6{reinterpret_cast<sockaddr_in6*>(ai_trav->ai_addr)};\n+                addr = CNetAddr{s6->sin6_addr, s6->sin6_scope_id};\n+            }\n+            if (!only_add_local_addr || addr.IsLocal()) {\n+                resolved_addresses_set.emplace(addr);\n+            }\n+            ai_trav = ai_trav->ai_next;\n         }\n-        ai_trav = ai_trav->ai_next;\n+        freeaddrinfo(ai_res);\n+    };\n+\n+    callgetaddrinfo(ai_flags, false);\n+\n+    // AI_ADDRCONFIG on some systems may exclude loopback only addresses, especially IPV6\n+    // We perform a second lookup with ai_flags set to 0 and add local addresses to the set\n+    if (ai_flags == AI_ADDRCONFIG) {",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 70,
      "commit_id": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "original_commit_id": "60a753b7b38fbe89494f8df66f13a84f28af244b",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Might consider using `&` here since we're dealing with bitfield flags and not absolute values",
      "created_at": "2024-07-01T15:23:39Z",
      "updated_at": "2024-07-01T16:40:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1661217742",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1661217742"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1661299539",
      "pull_request_review_id": 2151672225,
      "id": 1661299539,
      "node_id": "PRRC_kwDOABII585jBWtT",
      "diff_hunk": "@@ -48,38 +48,57 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     ai_hint.ai_protocol = IPPROTO_TCP;\n     // We don't care which address family (IPv4 or IPv6) is returned\n     ai_hint.ai_family = AF_UNSPEC;\n+\n     // If we allow lookups of hostnames, use the AI_ADDRCONFIG flag to only\n     // return addresses whose family we have an address configured for.\n     //\n     // If we don't allow lookups, then use the AI_NUMERICHOST flag for\n     // getaddrinfo to only decode numerical network addresses and suppress\n     // hostname lookups.\n-    ai_hint.ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n-\n-    addrinfo* ai_res{nullptr};\n-    const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n-    if (n_err != 0) {\n-        return {};\n-    }\n-\n-    // Traverse the linked list starting with ai_trav.\n-    addrinfo* ai_trav{ai_res};\n-    std::vector<CNetAddr> resolved_addresses;\n-    while (ai_trav != nullptr) {\n-        if (ai_trav->ai_family == AF_INET) {\n-            assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in));\n-            resolved_addresses.emplace_back(reinterpret_cast<sockaddr_in*>(ai_trav->ai_addr)->sin_addr);\n+    const int ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n+\n+    // getaddrinfo is called twice and to prevent duplicates a set is used\n+    // std::set used over a std::unordered_set as CNetAddr does not have a hash function\n+    std::set<CNetAddr> resolved_addresses_set;\n+\n+    auto callgetaddrinfo = [&](int flags, bool only_add_local_addr) {\n+        ai_hint.ai_flags = flags;\n+        addrinfo* ai_res{nullptr};\n+        const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n+        if (n_err != 0) {\n+            return;",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "original_commit_id": "60a753b7b38fbe89494f8df66f13a84f28af244b",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You could check specifically for `EAI_FAMILY` and then only recheck without `AI_ADDRCONFIG` in that condition. I think the code you have now will always check everything twice, but ignore duplicates?",
      "created_at": "2024-07-01T16:35:09Z",
      "updated_at": "2024-07-01T16:40:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1661299539",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1661299539"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": null,
      "original_start_line": 68,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1661728878",
      "pull_request_review_id": 2152531616,
      "id": 1661728878,
      "node_id": "PRRC_kwDOABII585jC_hu",
      "diff_hunk": "@@ -48,38 +48,57 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     ai_hint.ai_protocol = IPPROTO_TCP;\n     // We don't care which address family (IPv4 or IPv6) is returned\n     ai_hint.ai_family = AF_UNSPEC;\n+\n     // If we allow lookups of hostnames, use the AI_ADDRCONFIG flag to only\n     // return addresses whose family we have an address configured for.\n     //\n     // If we don't allow lookups, then use the AI_NUMERICHOST flag for\n     // getaddrinfo to only decode numerical network addresses and suppress\n     // hostname lookups.\n-    ai_hint.ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n-\n-    addrinfo* ai_res{nullptr};\n-    const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n-    if (n_err != 0) {\n-        return {};\n-    }\n-\n-    // Traverse the linked list starting with ai_trav.\n-    addrinfo* ai_trav{ai_res};\n-    std::vector<CNetAddr> resolved_addresses;\n-    while (ai_trav != nullptr) {\n-        if (ai_trav->ai_family == AF_INET) {\n-            assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in));\n-            resolved_addresses.emplace_back(reinterpret_cast<sockaddr_in*>(ai_trav->ai_addr)->sin_addr);\n+    const int ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n+\n+    // getaddrinfo is called twice and to prevent duplicates a set is used\n+    // std::set used over a std::unordered_set as CNetAddr does not have a hash function\n+    std::set<CNetAddr> resolved_addresses_set;\n+\n+    auto callgetaddrinfo = [&](int flags, bool only_add_local_addr) {\n+        ai_hint.ai_flags = flags;\n+        addrinfo* ai_res{nullptr};\n+        const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n+        if (n_err != 0) {\n+            return;",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "original_commit_id": "60a753b7b38fbe89494f8df66f13a84f28af244b",
      "in_reply_to_id": 1661299539,
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This comment from @pinheadmz about checking for the specific error we care about makes sense to me as well.  It might make for a significantly smaller code change and prevent extraneous calls to `getaddrinfo`.",
      "created_at": "2024-07-02T02:19:11Z",
      "updated_at": "2024-07-02T02:29:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1661728878",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1661728878"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": null,
      "original_start_line": 68,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1661731868",
      "pull_request_review_id": 2152531616,
      "id": 1661731868,
      "node_id": "PRRC_kwDOABII585jDAQc",
      "diff_hunk": "@@ -48,38 +48,57 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     ai_hint.ai_protocol = IPPROTO_TCP;\n     // We don't care which address family (IPv4 or IPv6) is returned\n     ai_hint.ai_family = AF_UNSPEC;\n+\n     // If we allow lookups of hostnames, use the AI_ADDRCONFIG flag to only\n     // return addresses whose family we have an address configured for.\n     //\n     // If we don't allow lookups, then use the AI_NUMERICHOST flag for\n     // getaddrinfo to only decode numerical network addresses and suppress\n     // hostname lookups.\n-    ai_hint.ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n-\n-    addrinfo* ai_res{nullptr};\n-    const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n-    if (n_err != 0) {\n-        return {};\n-    }\n-\n-    // Traverse the linked list starting with ai_trav.\n-    addrinfo* ai_trav{ai_res};\n-    std::vector<CNetAddr> resolved_addresses;\n-    while (ai_trav != nullptr) {\n-        if (ai_trav->ai_family == AF_INET) {\n-            assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in));\n-            resolved_addresses.emplace_back(reinterpret_cast<sockaddr_in*>(ai_trav->ai_addr)->sin_addr);\n+    const int ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n+\n+    // getaddrinfo is called twice and to prevent duplicates a set is used\n+    // std::set used over a std::unordered_set as CNetAddr does not have a hash function\n+    std::set<CNetAddr> resolved_addresses_set;\n+\n+    auto callgetaddrinfo = [&](int flags, bool only_add_local_addr) {\n+        ai_hint.ai_flags = flags;\n+        addrinfo* ai_res{nullptr};\n+        const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n+        if (n_err != 0) {\n+            return;\n         }\n-        if (ai_trav->ai_family == AF_INET6) {\n-            assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in6));\n-            const sockaddr_in6* s6{reinterpret_cast<sockaddr_in6*>(ai_trav->ai_addr)};\n-            resolved_addresses.emplace_back(s6->sin6_addr, s6->sin6_scope_id);\n+\n+        // Traverse the linked list of addrinfo structures\n+        addrinfo* ai_trav{ai_res};\n+        while (ai_trav != nullptr) {\n+            CNetAddr addr;\n+            if (ai_trav->ai_family == AF_INET) {\n+                assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in));\n+                addr = CNetAddr{reinterpret_cast<sockaddr_in*>(ai_trav->ai_addr)->sin_addr};\n+            }\n+            if (ai_trav->ai_family == AF_INET6) {\n+                assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in6));\n+                const sockaddr_in6* s6{reinterpret_cast<sockaddr_in6*>(ai_trav->ai_addr)};\n+                addr = CNetAddr{s6->sin6_addr, s6->sin6_scope_id};\n+            }\n+            if (!only_add_local_addr || addr.IsLocal()) {\n+                resolved_addresses_set.emplace(addr);\n+            }\n+            ai_trav = ai_trav->ai_next;\n         }\n-        ai_trav = ai_trav->ai_next;\n+        freeaddrinfo(ai_res);\n+    };\n+\n+    callgetaddrinfo(ai_flags, false);\n+\n+    // AI_ADDRCONFIG on some systems may exclude loopback only addresses, especially IPV6\n+    // We perform a second lookup with ai_flags set to 0 and add local addresses to the set\n+    if (ai_flags == AI_ADDRCONFIG) {\n+        callgetaddrinfo(0, true);",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 71,
      "commit_id": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "original_commit_id": "60a753b7b38fbe89494f8df66f13a84f28af244b",
      "in_reply_to_id": null,
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Instead of using 0 as the first argument, might be better to remove only `AI_ADDRCONFIG`, e.g. something like\r\n```c++\r\ncallgetaddrinfo(ai_flags & (~AI_ADDRCONFIG), true);\r\n```",
      "created_at": "2024-07-02T02:24:28Z",
      "updated_at": "2024-07-02T02:27:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1661731868",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1661731868"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664231914",
      "pull_request_review_id": 2156517236,
      "id": 1664231914,
      "node_id": "PRRC_kwDOABII585jMinq",
      "diff_hunk": "@@ -48,38 +48,57 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     ai_hint.ai_protocol = IPPROTO_TCP;\n     // We don't care which address family (IPv4 or IPv6) is returned\n     ai_hint.ai_family = AF_UNSPEC;\n+\n     // If we allow lookups of hostnames, use the AI_ADDRCONFIG flag to only\n     // return addresses whose family we have an address configured for.\n     //\n     // If we don't allow lookups, then use the AI_NUMERICHOST flag for\n     // getaddrinfo to only decode numerical network addresses and suppress\n     // hostname lookups.\n-    ai_hint.ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n-\n-    addrinfo* ai_res{nullptr};\n-    const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n-    if (n_err != 0) {\n-        return {};\n-    }\n-\n-    // Traverse the linked list starting with ai_trav.\n-    addrinfo* ai_trav{ai_res};\n-    std::vector<CNetAddr> resolved_addresses;\n-    while (ai_trav != nullptr) {\n-        if (ai_trav->ai_family == AF_INET) {\n-            assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in));\n-            resolved_addresses.emplace_back(reinterpret_cast<sockaddr_in*>(ai_trav->ai_addr)->sin_addr);\n+    const int ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n+\n+    // getaddrinfo is called twice and to prevent duplicates a set is used\n+    // std::set used over a std::unordered_set as CNetAddr does not have a hash function\n+    std::set<CNetAddr> resolved_addresses_set;\n+\n+    auto callgetaddrinfo = [&](int flags, bool only_add_local_addr) {\n+        ai_hint.ai_flags = flags;\n+        addrinfo* ai_res{nullptr};\n+        const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n+        if (n_err != 0) {\n+            return;\n         }\n-        if (ai_trav->ai_family == AF_INET6) {\n-            assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in6));\n-            const sockaddr_in6* s6{reinterpret_cast<sockaddr_in6*>(ai_trav->ai_addr)};\n-            resolved_addresses.emplace_back(s6->sin6_addr, s6->sin6_scope_id);\n+\n+        // Traverse the linked list of addrinfo structures\n+        addrinfo* ai_trav{ai_res};\n+        while (ai_trav != nullptr) {\n+            CNetAddr addr;\n+            if (ai_trav->ai_family == AF_INET) {\n+                assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in));\n+                addr = CNetAddr{reinterpret_cast<sockaddr_in*>(ai_trav->ai_addr)->sin_addr};\n+            }\n+            if (ai_trav->ai_family == AF_INET6) {\n+                assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in6));\n+                const sockaddr_in6* s6{reinterpret_cast<sockaddr_in6*>(ai_trav->ai_addr)};\n+                addr = CNetAddr{s6->sin6_addr, s6->sin6_scope_id};\n+            }\n+            if (!only_add_local_addr || addr.IsLocal()) {\n+                resolved_addresses_set.emplace(addr);\n+            }\n+            ai_trav = ai_trav->ai_next;\n         }\n-        ai_trav = ai_trav->ai_next;\n+        freeaddrinfo(ai_res);\n+    };\n+\n+    callgetaddrinfo(ai_flags, false);\n+\n+    // AI_ADDRCONFIG on some systems may exclude loopback only addresses, especially IPV6\n+    // We perform a second lookup with ai_flags set to 0 and add local addresses to the set\n+    if (ai_flags == AI_ADDRCONFIG) {\n+        callgetaddrinfo(0, true);",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 71,
      "commit_id": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "original_commit_id": "60a753b7b38fbe89494f8df66f13a84f28af244b",
      "in_reply_to_id": 1661731868,
      "user": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`ai_flags` only had `AI_ADDRCONFIG` set so without it it would be 0 anyway right?",
      "created_at": "2024-07-03T13:51:37Z",
      "updated_at": "2024-07-03T13:51:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1664231914",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664231914"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664879365",
      "pull_request_review_id": 2157608154,
      "id": 1664879365,
      "node_id": "PRRC_kwDOABII585jPAsF",
      "diff_hunk": "@@ -48,38 +48,57 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     ai_hint.ai_protocol = IPPROTO_TCP;\n     // We don't care which address family (IPv4 or IPv6) is returned\n     ai_hint.ai_family = AF_UNSPEC;\n+\n     // If we allow lookups of hostnames, use the AI_ADDRCONFIG flag to only\n     // return addresses whose family we have an address configured for.\n     //\n     // If we don't allow lookups, then use the AI_NUMERICHOST flag for\n     // getaddrinfo to only decode numerical network addresses and suppress\n     // hostname lookups.\n-    ai_hint.ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n-\n-    addrinfo* ai_res{nullptr};\n-    const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n-    if (n_err != 0) {\n-        return {};\n-    }\n-\n-    // Traverse the linked list starting with ai_trav.\n-    addrinfo* ai_trav{ai_res};\n-    std::vector<CNetAddr> resolved_addresses;\n-    while (ai_trav != nullptr) {\n-        if (ai_trav->ai_family == AF_INET) {\n-            assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in));\n-            resolved_addresses.emplace_back(reinterpret_cast<sockaddr_in*>(ai_trav->ai_addr)->sin_addr);\n+    const int ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n+\n+    // getaddrinfo is called twice and to prevent duplicates a set is used\n+    // std::set used over a std::unordered_set as CNetAddr does not have a hash function\n+    std::set<CNetAddr> resolved_addresses_set;\n+\n+    auto callgetaddrinfo = [&](int flags, bool only_add_local_addr) {\n+        ai_hint.ai_flags = flags;\n+        addrinfo* ai_res{nullptr};\n+        const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n+        if (n_err != 0) {\n+            return;\n         }\n-        if (ai_trav->ai_family == AF_INET6) {\n-            assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in6));\n-            const sockaddr_in6* s6{reinterpret_cast<sockaddr_in6*>(ai_trav->ai_addr)};\n-            resolved_addresses.emplace_back(s6->sin6_addr, s6->sin6_scope_id);\n+\n+        // Traverse the linked list of addrinfo structures\n+        addrinfo* ai_trav{ai_res};\n+        while (ai_trav != nullptr) {\n+            CNetAddr addr;\n+            if (ai_trav->ai_family == AF_INET) {\n+                assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in));\n+                addr = CNetAddr{reinterpret_cast<sockaddr_in*>(ai_trav->ai_addr)->sin_addr};\n+            }\n+            if (ai_trav->ai_family == AF_INET6) {\n+                assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in6));\n+                const sockaddr_in6* s6{reinterpret_cast<sockaddr_in6*>(ai_trav->ai_addr)};\n+                addr = CNetAddr{s6->sin6_addr, s6->sin6_scope_id};\n+            }\n+            if (!only_add_local_addr || addr.IsLocal()) {\n+                resolved_addresses_set.emplace(addr);\n+            }\n+            ai_trav = ai_trav->ai_next;\n         }\n-        ai_trav = ai_trav->ai_next;\n+        freeaddrinfo(ai_res);\n+    };\n+\n+    callgetaddrinfo(ai_flags, false);\n+\n+    // AI_ADDRCONFIG on some systems may exclude loopback only addresses, especially IPV6\n+    // We perform a second lookup with ai_flags set to 0 and add local addresses to the set\n+    if (ai_flags == AI_ADDRCONFIG) {\n+        callgetaddrinfo(0, true);",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 71,
      "commit_id": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "original_commit_id": "60a753b7b38fbe89494f8df66f13a84f28af244b",
      "in_reply_to_id": 1661731868,
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah, that's true for the time being.  The thought here is to increase resilience in the code, so that if ai_flags changes we're not hard-coded to 0.  Seems like the scope of this `if` condition is intended as \"if AI_ADDRCONFIG set\" rather than \"is only AI_ADDRCONFIG set\" (which is now updated in f95fb4a1d826765553f3319ee6f1024094954073).  I'm thinking we would want `callgetaddrinfo()` to use similar logic (i.e. focus on the specific flag of interest and keep existing flags defined except for AI_ADDRCONFIG).",
      "created_at": "2024-07-03T22:30:58Z",
      "updated_at": "2024-07-03T22:33:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1664879365",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664879365"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1665606867",
      "pull_request_review_id": 2158762850,
      "id": 1665606867,
      "node_id": "PRRC_kwDOABII585jRyTT",
      "diff_hunk": "@@ -48,38 +48,57 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     ai_hint.ai_protocol = IPPROTO_TCP;\n     // We don't care which address family (IPv4 or IPv6) is returned\n     ai_hint.ai_family = AF_UNSPEC;\n+\n     // If we allow lookups of hostnames, use the AI_ADDRCONFIG flag to only\n     // return addresses whose family we have an address configured for.\n     //\n     // If we don't allow lookups, then use the AI_NUMERICHOST flag for\n     // getaddrinfo to only decode numerical network addresses and suppress\n     // hostname lookups.\n-    ai_hint.ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n-\n-    addrinfo* ai_res{nullptr};\n-    const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n-    if (n_err != 0) {\n-        return {};\n-    }\n-\n-    // Traverse the linked list starting with ai_trav.\n-    addrinfo* ai_trav{ai_res};\n-    std::vector<CNetAddr> resolved_addresses;\n-    while (ai_trav != nullptr) {\n-        if (ai_trav->ai_family == AF_INET) {\n-            assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in));\n-            resolved_addresses.emplace_back(reinterpret_cast<sockaddr_in*>(ai_trav->ai_addr)->sin_addr);\n+    const int ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n+\n+    // getaddrinfo is called twice and to prevent duplicates a set is used\n+    // std::set used over a std::unordered_set as CNetAddr does not have a hash function\n+    std::set<CNetAddr> resolved_addresses_set;\n+\n+    auto callgetaddrinfo = [&](int flags, bool only_add_local_addr) {\n+        ai_hint.ai_flags = flags;\n+        addrinfo* ai_res{nullptr};\n+        const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n+        if (n_err != 0) {\n+            return;",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "original_commit_id": "60a753b7b38fbe89494f8df66f13a84f28af244b",
      "in_reply_to_id": 1661299539,
      "user": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I looked into catching specifically `EAI_ADDRFAMILY` errors but this only applies on GNU Libc and is not POSIX. I checked windows and they have different errors. Rather than try to catalogue every possible system and libc implementation, the code now retries on any error (assuming you first tried with `AI_ADDRCONFIG` in the first place).",
      "created_at": "2024-07-04T12:00:27Z",
      "updated_at": "2024-07-04T12:00:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1665606867",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1665606867"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": null,
      "original_start_line": 68,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1665607508",
      "pull_request_review_id": 2158763912,
      "id": 1665607508,
      "node_id": "PRRC_kwDOABII585jRydU",
      "diff_hunk": "@@ -48,38 +48,57 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     ai_hint.ai_protocol = IPPROTO_TCP;\n     // We don't care which address family (IPv4 or IPv6) is returned\n     ai_hint.ai_family = AF_UNSPEC;\n+\n     // If we allow lookups of hostnames, use the AI_ADDRCONFIG flag to only\n     // return addresses whose family we have an address configured for.\n     //\n     // If we don't allow lookups, then use the AI_NUMERICHOST flag for\n     // getaddrinfo to only decode numerical network addresses and suppress\n     // hostname lookups.\n-    ai_hint.ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n-\n-    addrinfo* ai_res{nullptr};\n-    const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n-    if (n_err != 0) {\n-        return {};\n-    }\n-\n-    // Traverse the linked list starting with ai_trav.\n-    addrinfo* ai_trav{ai_res};\n-    std::vector<CNetAddr> resolved_addresses;\n-    while (ai_trav != nullptr) {\n-        if (ai_trav->ai_family == AF_INET) {\n-            assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in));\n-            resolved_addresses.emplace_back(reinterpret_cast<sockaddr_in*>(ai_trav->ai_addr)->sin_addr);\n+    const int ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n+\n+    // getaddrinfo is called twice and to prevent duplicates a set is used\n+    // std::set used over a std::unordered_set as CNetAddr does not have a hash function\n+    std::set<CNetAddr> resolved_addresses_set;\n+\n+    auto callgetaddrinfo = [&](int flags, bool only_add_local_addr) {\n+        ai_hint.ai_flags = flags;\n+        addrinfo* ai_res{nullptr};\n+        const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n+        if (n_err != 0) {\n+            return;\n         }\n-        if (ai_trav->ai_family == AF_INET6) {\n-            assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in6));\n-            const sockaddr_in6* s6{reinterpret_cast<sockaddr_in6*>(ai_trav->ai_addr)};\n-            resolved_addresses.emplace_back(s6->sin6_addr, s6->sin6_scope_id);\n+\n+        // Traverse the linked list of addrinfo structures\n+        addrinfo* ai_trav{ai_res};\n+        while (ai_trav != nullptr) {\n+            CNetAddr addr;\n+            if (ai_trav->ai_family == AF_INET) {\n+                assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in));\n+                addr = CNetAddr{reinterpret_cast<sockaddr_in*>(ai_trav->ai_addr)->sin_addr};\n+            }\n+            if (ai_trav->ai_family == AF_INET6) {\n+                assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in6));\n+                const sockaddr_in6* s6{reinterpret_cast<sockaddr_in6*>(ai_trav->ai_addr)};\n+                addr = CNetAddr{s6->sin6_addr, s6->sin6_scope_id};\n+            }\n+            if (!only_add_local_addr || addr.IsLocal()) {\n+                resolved_addresses_set.emplace(addr);\n+            }\n+            ai_trav = ai_trav->ai_next;\n         }\n-        ai_trav = ai_trav->ai_next;\n+        freeaddrinfo(ai_res);\n+    };\n+\n+    callgetaddrinfo(ai_flags, false);\n+\n+    // AI_ADDRCONFIG on some systems may exclude loopback only addresses, especially IPV6\n+    // We perform a second lookup with ai_flags set to 0 and add local addresses to the set\n+    if (ai_flags == AI_ADDRCONFIG) {\n+        callgetaddrinfo(0, true);",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 71,
      "commit_id": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "original_commit_id": "60a753b7b38fbe89494f8df66f13a84f28af244b",
      "in_reply_to_id": 1661731868,
      "user": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good suggestion thanks, implemented.",
      "created_at": "2024-07-04T12:01:02Z",
      "updated_at": "2024-07-04T12:01:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1665607508",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1665607508"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1671300188",
      "pull_request_review_id": 2167594504,
      "id": 1671300188,
      "node_id": "PRRC_kwDOABII585jngRc",
      "diff_hunk": "@@ -48,36 +48,50 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     ai_hint.ai_protocol = IPPROTO_TCP;\n     // We don't care which address family (IPv4 or IPv6) is returned\n     ai_hint.ai_family = AF_UNSPEC;\n+\n     // If we allow lookups of hostnames, use the AI_ADDRCONFIG flag to only\n     // return addresses whose family we have an address configured for.\n     //\n     // If we don't allow lookups, then use the AI_NUMERICHOST flag for\n     // getaddrinfo to only decode numerical network addresses and suppress\n     // hostname lookups.\n-    ai_hint.ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n+    const int ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n \n-    addrinfo* ai_res{nullptr};\n-    const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n-    if (n_err != 0) {\n-        return {};\n-    }\n-\n-    // Traverse the linked list starting with ai_trav.\n-    addrinfo* ai_trav{ai_res};\n     std::vector<CNetAddr> resolved_addresses;\n-    while (ai_trav != nullptr) {\n-        if (ai_trav->ai_family == AF_INET) {\n-            assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in));\n-            resolved_addresses.emplace_back(reinterpret_cast<sockaddr_in*>(ai_trav->ai_addr)->sin_addr);\n+\n+    auto callgetaddrinfo = [&](int flags) -> int {",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "original_commit_id": "e047f4e166b37ad28482e05d78ff84020f4b4ea0",
      "in_reply_to_id": null,
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Unless I'm overlooking something, might be able to simplify/shorten the change by calling `getaddrinfo()` again just when needed.  `ai_res` should be set up leaving the `if` either way (or we return an empty vector).  Would avoid the lambda function and might also get rid of the copy/standalone `ai_flags`.\r\n\r\nHere's a commit on a fork:\r\nhttps://github.com/bitcoin/bitcoin/commit/bba1b42a8e533aa33319c7c9ca471dc0fab2ddd8\r\n\r\n```diff\r\ndiff --git a/src/netbase.cpp b/src/netbase.cpp\r\nindex e231766487..8914bbb2c4 100644\r\n--- a/src/netbase.cpp\r\n+++ b/src/netbase.cpp\r\n@@ -59,7 +59,17 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\r\n     addrinfo* ai_res{nullptr};\r\n     const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\r\n     if (n_err != 0) {\r\n-        return {};\r\n+        if ((ai_hint.ai_flags & AI_ADDRCONFIG) == AI_ADDRCONFIG) {\r\n+            // AI_ADDRCONFIG on some systems may exclude loopback-only addresses\r\n+            // If first lookup failed we perform a second lookup without AI_ADDRCONFIG\r\n+            ai_hint.ai_flags = (ai_hint.ai_flags & ~AI_ADDRCONFIG);\r\n+            const int n_err_retry{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\r\n+            if (n_err_retry != 0) {\r\n+                return {};\r\n+            }\r\n+        } else {\r\n+            return {};\r\n+        }\r\n     }\r\n \r\n     // Traverse the linked list starting with ai_trav.\r\n```\r\n\r\nNote:  I did not heavily test this yet.",
      "created_at": "2024-07-09T22:12:08Z",
      "updated_at": "2024-07-10T03:36:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1671300188",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1671300188"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1674387539",
      "pull_request_review_id": 2172528881,
      "id": 1674387539,
      "node_id": "PRRC_kwDOABII585jzSBT",
      "diff_hunk": "@@ -48,36 +48,50 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     ai_hint.ai_protocol = IPPROTO_TCP;\n     // We don't care which address family (IPv4 or IPv6) is returned\n     ai_hint.ai_family = AF_UNSPEC;\n+\n     // If we allow lookups of hostnames, use the AI_ADDRCONFIG flag to only\n     // return addresses whose family we have an address configured for.\n     //\n     // If we don't allow lookups, then use the AI_NUMERICHOST flag for\n     // getaddrinfo to only decode numerical network addresses and suppress\n     // hostname lookups.\n-    ai_hint.ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n+    const int ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n \n-    addrinfo* ai_res{nullptr};\n-    const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n-    if (n_err != 0) {\n-        return {};\n-    }\n-\n-    // Traverse the linked list starting with ai_trav.\n-    addrinfo* ai_trav{ai_res};\n     std::vector<CNetAddr> resolved_addresses;\n-    while (ai_trav != nullptr) {\n-        if (ai_trav->ai_family == AF_INET) {\n-            assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in));\n-            resolved_addresses.emplace_back(reinterpret_cast<sockaddr_in*>(ai_trav->ai_addr)->sin_addr);\n+\n+    auto callgetaddrinfo = [&](int flags) -> int {",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "original_commit_id": "e047f4e166b37ad28482e05d78ff84020f4b4ea0",
      "in_reply_to_id": 1671300188,
      "user": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If pursuing this approach do we think it would be prudent to reset `ai_res` to a nullptr before the second call?",
      "created_at": "2024-07-11T17:18:19Z",
      "updated_at": "2024-07-11T17:18:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1674387539",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1674387539"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1674830641",
      "pull_request_review_id": 2173323196,
      "id": 1674830641,
      "node_id": "PRRC_kwDOABII585j0-Mx",
      "diff_hunk": "@@ -48,36 +48,50 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     ai_hint.ai_protocol = IPPROTO_TCP;\n     // We don't care which address family (IPv4 or IPv6) is returned\n     ai_hint.ai_family = AF_UNSPEC;\n+\n     // If we allow lookups of hostnames, use the AI_ADDRCONFIG flag to only\n     // return addresses whose family we have an address configured for.\n     //\n     // If we don't allow lookups, then use the AI_NUMERICHOST flag for\n     // getaddrinfo to only decode numerical network addresses and suppress\n     // hostname lookups.\n-    ai_hint.ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n+    const int ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n \n-    addrinfo* ai_res{nullptr};\n-    const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n-    if (n_err != 0) {\n-        return {};\n-    }\n-\n-    // Traverse the linked list starting with ai_trav.\n-    addrinfo* ai_trav{ai_res};\n     std::vector<CNetAddr> resolved_addresses;\n-    while (ai_trav != nullptr) {\n-        if (ai_trav->ai_family == AF_INET) {\n-            assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in));\n-            resolved_addresses.emplace_back(reinterpret_cast<sockaddr_in*>(ai_trav->ai_addr)->sin_addr);\n+\n+    auto callgetaddrinfo = [&](int flags) -> int {",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "original_commit_id": "e047f4e166b37ad28482e05d78ff84020f4b4ea0",
      "in_reply_to_id": 1671300188,
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good thought.  At least from an initial look, makes sense to check if it's already null and if not call `freeaddrinfo()` (`getaddrinfo()` handles allocation and `freeaddrinfo()` handles cleanup).  I suspect this could be somewhat overkill (or not happen if unsuccessful `getaddrinfo()` never sets `ai_res` to non-null), but we don't want a memory leak.  I haven't seen concrete guarantees yet in documentation (and we'd need to potentially compare guarantees for different platforms), so the extra check seems safer.\r\n\r\nAs a side note, `freeaddrinfo(NULL)` doesn't crash/segfault (at least on Debian/glibc), so the null check before `freeaddrinfo()` might be redundant (but defensive).",
      "created_at": "2024-07-11T23:52:51Z",
      "updated_at": "2024-07-12T00:49:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1674830641",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1674830641"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675595527",
      "pull_request_review_id": 2174312963,
      "id": 1675595527,
      "node_id": "PRRC_kwDOABII585j348H",
      "diff_hunk": "@@ -48,36 +48,50 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     ai_hint.ai_protocol = IPPROTO_TCP;\n     // We don't care which address family (IPv4 or IPv6) is returned\n     ai_hint.ai_family = AF_UNSPEC;\n+\n     // If we allow lookups of hostnames, use the AI_ADDRCONFIG flag to only\n     // return addresses whose family we have an address configured for.\n     //\n     // If we don't allow lookups, then use the AI_NUMERICHOST flag for\n     // getaddrinfo to only decode numerical network addresses and suppress\n     // hostname lookups.\n-    ai_hint.ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n+    const int ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n \n-    addrinfo* ai_res{nullptr};\n-    const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n-    if (n_err != 0) {\n-        return {};\n-    }\n-\n-    // Traverse the linked list starting with ai_trav.\n-    addrinfo* ai_trav{ai_res};\n     std::vector<CNetAddr> resolved_addresses;\n-    while (ai_trav != nullptr) {\n-        if (ai_trav->ai_family == AF_INET) {\n-            assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in));\n-            resolved_addresses.emplace_back(reinterpret_cast<sockaddr_in*>(ai_trav->ai_addr)->sin_addr);\n+\n+    auto callgetaddrinfo = [&](int flags) -> int {",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "original_commit_id": "e047f4e166b37ad28482e05d78ff84020f4b4ea0",
      "in_reply_to_id": 1671300188,
      "user": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think it's overkill. In all the examples and documentation I've read, `freeaddrinfo()` is only called when `getaddrinfo()` succeeds.",
      "created_at": "2024-07-12T09:39:33Z",
      "updated_at": "2024-07-12T09:39:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1675595527",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675595527"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1676117378",
      "pull_request_review_id": 2175208354,
      "id": 1676117378,
      "node_id": "PRRC_kwDOABII585j54WC",
      "diff_hunk": "@@ -48,36 +48,50 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     ai_hint.ai_protocol = IPPROTO_TCP;\n     // We don't care which address family (IPv4 or IPv6) is returned\n     ai_hint.ai_family = AF_UNSPEC;\n+\n     // If we allow lookups of hostnames, use the AI_ADDRCONFIG flag to only\n     // return addresses whose family we have an address configured for.\n     //\n     // If we don't allow lookups, then use the AI_NUMERICHOST flag for\n     // getaddrinfo to only decode numerical network addresses and suppress\n     // hostname lookups.\n-    ai_hint.ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n+    const int ai_flags = allow_lookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n \n-    addrinfo* ai_res{nullptr};\n-    const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n-    if (n_err != 0) {\n-        return {};\n-    }\n-\n-    // Traverse the linked list starting with ai_trav.\n-    addrinfo* ai_trav{ai_res};\n     std::vector<CNetAddr> resolved_addresses;\n-    while (ai_trav != nullptr) {\n-        if (ai_trav->ai_family == AF_INET) {\n-            assert(ai_trav->ai_addrlen >= sizeof(sockaddr_in));\n-            resolved_addresses.emplace_back(reinterpret_cast<sockaddr_in*>(ai_trav->ai_addr)->sin_addr);\n+\n+    auto callgetaddrinfo = [&](int flags) -> int {",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "original_commit_id": "e047f4e166b37ad28482e05d78ff84020f4b4ea0",
      "in_reply_to_id": 1671300188,
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Probably, but the examples I've seen are all typically small and exit the program if `getaddrinfo()` returns non-zero.",
      "created_at": "2024-07-12T15:37:41Z",
      "updated_at": "2024-07-12T15:37:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1676117378",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1676117378"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1678310386",
      "pull_request_review_id": 2178514340,
      "id": 1678310386,
      "node_id": "PRRC_kwDOABII585kCPvy",
      "diff_hunk": "@@ -59,7 +60,17 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     addrinfo* ai_res{nullptr};\n     const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n     if (n_err != 0) {\n-        return {};\n+        if ((ai_hint.ai_flags & AI_ADDRCONFIG) == AI_ADDRCONFIG) {\n+            // AI_ADDRCONFIG on some systems may exclude loopback-only addresses\n+            // If first lookup failed we perform a second lookup without AI_ADDRCONFIG\n+            ai_hint.ai_flags = (ai_hint.ai_flags & ~AI_ADDRCONFIG);",
      "path": "src/netbase.cpp",
      "position": 16,
      "original_position": 16,
      "commit_id": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "original_commit_id": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If you need to retouch, you might consider using a local `addrinfo` variable for the second call since it serves a specific purpose only inside this if condition. It doesn't matter because it's not like it gets used again later, just something I noticed.",
      "created_at": "2024-07-15T19:44:37Z",
      "updated_at": "2024-07-15T19:50:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1678310386",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1678310386"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 66,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1678338506",
      "pull_request_review_id": 2178561064,
      "id": 1678338506,
      "node_id": "PRRC_kwDOABII585kCWnK",
      "diff_hunk": "@@ -59,7 +60,17 @@ std::vector<CNetAddr> WrappedGetAddrInfo(const std::string& name, bool allow_loo\n     addrinfo* ai_res{nullptr};\n     const int n_err{getaddrinfo(name.c_str(), nullptr, &ai_hint, &ai_res)};\n     if (n_err != 0) {\n-        return {};\n+        if ((ai_hint.ai_flags & AI_ADDRCONFIG) == AI_ADDRCONFIG) {\n+            // AI_ADDRCONFIG on some systems may exclude loopback-only addresses\n+            // If first lookup failed we perform a second lookup without AI_ADDRCONFIG\n+            ai_hint.ai_flags = (ai_hint.ai_flags & ~AI_ADDRCONFIG);",
      "path": "src/netbase.cpp",
      "position": 16,
      "original_position": 16,
      "commit_id": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "original_commit_id": "23333b7ed243071c9b4e4f04c727556d8065acbb",
      "in_reply_to_id": 1678310386,
      "user": {
        "login": "m3dwards",
        "id": 1204616,
        "node_id": "MDQ6VXNlcjEyMDQ2MTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1204616?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/m3dwards",
        "html_url": "https://github.com/m3dwards",
        "followers_url": "https://api.github.com/users/m3dwards/followers",
        "following_url": "https://api.github.com/users/m3dwards/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/m3dwards/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/m3dwards/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/m3dwards/subscriptions",
        "organizations_url": "https://api.github.com/users/m3dwards/orgs",
        "repos_url": "https://api.github.com/users/m3dwards/repos",
        "events_url": "https://api.github.com/users/m3dwards/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/m3dwards/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Don't have strong feeling either way but there is an argument that doing it with one variable means any changes to flags passed to the first call get automatically added to the second call which is I think better default behaviour.",
      "created_at": "2024-07-15T20:13:38Z",
      "updated_at": "2024-07-15T20:13:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30245#discussion_r1678338506",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1678338506"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30245"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 66,
      "original_line": 66,
      "side": "RIGHT"
    }
  ]
}