{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212",
    "id": 2161013041,
    "node_id": "PR_kwDOABII586AznEx",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31212",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31212.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31212.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31212",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31212/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/95a0104f2e9869799db84add108ae8c57b56d360",
    "number": 31212,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "util: Improve documentation and negation of args",
    "user": {
      "login": "hodlinator",
      "id": 172445034,
      "node_id": "U_kgDOCkdNag",
      "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hodlinator",
      "html_url": "https://github.com/hodlinator",
      "followers_url": "https://api.github.com/users/hodlinator/followers",
      "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
      "organizations_url": "https://api.github.com/users/hodlinator/orgs",
      "repos_url": "https://api.github.com/users/hodlinator/repos",
      "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/hodlinator/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "- Document `-color` as only applying to `-getinfo`, to be less confusing for bitcoin-cli users.\r\n- No longer print version information when getting passed `-noversion`.\r\n- Disallow `-nodatadir` as we cannot run without one. It was previously interpreted as a mix of unset and as a relative path of \"0\".\r\n- Support `-norpccookiefile`\r\n- Support `-nopid`\r\n- Properly support `-noconf` (instead of working by accident). Also detect when directories are specified instead of files.\r\n\r\nPrompted by investigation in https://github.com/bitcoin/bitcoin/pull/16545#pullrequestreview-2316714013.",
    "labels": [
      {
        "id": 241832923,
        "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
        "name": "Utils/log/libs",
        "description": "",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2024-11-04T14:15:32Z",
    "updated_at": "2025-02-05T14:59:21Z",
    "closed_at": "2024-12-04T18:20:58Z",
    "mergeable_state": "unknown",
    "merged_at": "2024-12-04T18:20:58Z",
    "merged_by": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "merge_commit_sha": "11f68cc8108494c709bc6d6c0654c7e1d0261840",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "hodlinator:2024/11/invalid_args",
      "ref": "2024/11/invalid_args",
      "sha": "95a0104f2e9869799db84add108ae8c57b56d360",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 813856282,
        "node_id": "R_kgDOMIJ2Gg",
        "name": "bitcoin",
        "full_name": "hodlinator/bitcoin",
        "owner": {
          "login": "hodlinator",
          "id": 172445034,
          "node_id": "U_kgDOCkdNag",
          "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hodlinator",
          "html_url": "https://github.com/hodlinator",
          "followers_url": "https://api.github.com/users/hodlinator/followers",
          "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
          "organizations_url": "https://api.github.com/users/hodlinator/orgs",
          "repos_url": "https://api.github.com/users/hodlinator/repos",
          "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/hodlinator/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/hodlinator/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/hodlinator/bitcoin",
        "archive_url": "https://api.github.com/repos/hodlinator/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/hodlinator/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/hodlinator/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/hodlinator/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/hodlinator/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/hodlinator/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/hodlinator/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/hodlinator/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/hodlinator/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/hodlinator/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/hodlinator/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/hodlinator/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/hodlinator/bitcoin/events",
        "forks_url": "https://api.github.com/repos/hodlinator/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/hodlinator/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/hodlinator/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/hodlinator/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/hodlinator/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/hodlinator/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/hodlinator/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/hodlinator/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/hodlinator/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/hodlinator/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/hodlinator/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/hodlinator/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/hodlinator/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/hodlinator/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/hodlinator/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/hodlinator/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:hodlinator/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/hodlinator/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/hodlinator/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/hodlinator/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/hodlinator/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/hodlinator/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/hodlinator/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/hodlinator/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/hodlinator/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/hodlinator/bitcoin/hooks",
        "svn_url": "https://github.com/hodlinator/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 233894,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-02-02T15:08:22Z",
        "created_at": "2024-06-11T22:00:51Z",
        "updated_at": "2025-01-10T10:26:56Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "ebe4cac38bf6c510b00b8e080acab079c54016d6",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36664,
        "stargazers_count": 81823,
        "watchers_count": 81823,
        "size": 275107,
        "default_branch": "master",
        "open_issues_count": 693,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-02-05T13:30:53Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-02-05T14:20:52Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 212,
    "deletions": 75,
    "changed_files": 16,
    "commits": 14,
    "review_comments": 120,
    "comments": 21
  },
  "events": [
    {
      "event": "commented",
      "id": 2454831459,
      "node_id": "IC_kwDOABII586SUcFj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2454831459",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-04T14:15:35Z",
      "updated_at": "2024-12-05T00:40:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/31212.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [ryanofsky](https://github.com/bitcoin/bitcoin/pull/31212#pullrequestreview-2476098921) |\n| Concept ACK | [rkrux](https://github.com/bitcoin/bitcoin/pull/31212#pullrequestreview-2420533755) |\n| Ignored review | [l0rinc](https://github.com/bitcoin/bitcoin/pull/31212#issuecomment-2517591742) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#31349](https://github.com/bitcoin/bitcoin/pull/31349) (ci: detect outbound internet traffic generated while running tests by vasild)\n* [#31260](https://github.com/bitcoin/bitcoin/pull/31260) (scripted-diff: Type-safe settings retrieval by ryanofsky)\n* [#30529](https://github.com/bitcoin/bitcoin/pull/30529) (Fix -norpcwhitelist, -norpcallowip, and similar corner case behavior by ryanofsky)\n* [#29641](https://github.com/bitcoin/bitcoin/pull/29641) (scripted-diff: Use LogInfo over LogPrintf [WIP, NOMERGE, DRAFT] by maflcko)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#issuecomment-2454831459",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31212"
    },
    {
      "event": "labeled",
      "id": 15104703060,
      "node_id": "LE_lADOABII586c73o_zwAAAAOET3pU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15104703060",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-04T14:15:38Z",
      "label": {
        "name": "Utils/log/libs",
        "color": "5319e7"
      }
    },
    {
      "event": "reviewed",
      "id": 2420533755,
      "node_id": "PRR_kwDOABII586QRmn7",
      "url": null,
      "actor": null,
      "commit_id": "9e130811a3f68aea77ddeecf667aa8389a2940e8",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "Concept ACK 9e130811a3f68aea77ddeecf667aa8389a2940e8\r\n\r\nThanks for catching issues here, gave me an opportunity to read the app init code a bit more!\r\n\r\nSuccessful make and functional tests. Left couple suggestions in the first 2 commits. Disallowing `noconf` and `nodatadir` conceptually makes sense to me. I tested with these 2 args and the output I received seems okay to me.\r\n\r\n```\r\n➜  bitcoin git:(2024/11/invalid_args) ✗ bitcoinclireg -noconf\r\nError parsing command line arguments: Negating of -conf is meaningless and therefore forbidden\r\n➜  bitcoin git:(2024/11/invalid_args) ✗ bitcoinclireg -nodatadir\r\nError parsing command line arguments: Negating of -datadir is meaningless and therefore forbidden\r\n```\r\n\r\nThough I don't completely understand why this comment _\"ok to not have a config file\"_ (and subsequent flow) is allowed because when I ran the CLI without any arg I received the version info, help options, & too few args message.\r\nhttps://github.com/hodlinator/bitcoin/blob/2024/11/invalid_args/src/common/config.cpp#L138 ",
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#pullrequestreview-2420533755",
      "submitted_at": "2024-11-07T10:59:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
    },
    {
      "event": "reviewed",
      "id": 2420676640,
      "node_id": "PRR_kwDOABII586QSJgg",
      "url": null,
      "actor": null,
      "commit_id": "a8a41f1c967c00f011483725b73072aa8bdab184",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#pullrequestreview-2420676640",
      "submitted_at": "2024-11-07T11:15:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
    },
    {
      "event": "commented",
      "id": 2462108426,
      "node_id": "IC_kwDOABII586SwMsK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2462108426",
      "actor": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-07T12:25:40Z",
      "updated_at": "2024-11-07T12:25:40Z",
      "author_association": "NONE",
      "body": "> Though I don't completely understand why this comment \"ok to not have a config file\" (and subsequent flow) is allowed\r\n\r\nMy guess it is applicable when the daemon is run without a conf because this portion lies in `common/`.",
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#issuecomment-2462108426",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31212"
    },
    {
      "event": "commented",
      "id": 2464690214,
      "node_id": "IC_kwDOABII586S6DAm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2464690214",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-08T12:55:37Z",
      "updated_at": "2024-11-08T13:49:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "> > Though I don't completely understand why this comment \"ok to not have a config file\" (and subsequent flow) is allowed\r\n> \r\n> My guess it is applicable when the daemon is run without a conf because this portion lies in `common/`.\r\n\r\nMy interpretation is that we shouldn't trigger an error on not finding a configuration file in the ~specified or~ default location. If it's there we read it, otherwise just skip. (The code does error [just above](https://github.com/hodlinator/bitcoin/blob/2024/11/invalid_args/src/common/config.cpp#L134) if one is unable to open a configuration file at a non-default location).",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#issuecomment-2464690214",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31212"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15215326637,
      "node_id": "HRFPE_lADOABII586c73o_zwAAAAOK53Wt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15215326637",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6fbea754d18669eadcbd49016efca3567a894925",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/6fbea754d18669eadcbd49016efca3567a894925",
      "created_at": "2024-11-08T13:06:48Z"
    },
    {
      "event": "labeled",
      "id": 15223931725,
      "node_id": "LE_lADOABII586c73o_zwAAAAOLasNN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15223931725",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-08T19:08:34Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2466406625,
      "node_id": "IC_kwDOABII586TAmDh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2466406625",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-09T18:40:44Z",
      "updated_at": "2024-11-09T18:40:44Z",
      "author_association": "MEMBER",
      "body": ">Disallow -noconf since a config file is required \r\n\r\nBut it's not. Seems like `-noconf` should work to ignore the config file.",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#issuecomment-2466406625",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31212"
    },
    {
      "event": "commented",
      "id": 2468421728,
      "node_id": "IC_kwDOABII586TISBg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2468421728",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-11T15:18:20Z",
      "updated_at": "2024-11-11T15:18:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "> > Disallow -noconf since a config file is required\r\n> \r\n> But it's not. Seems like `-noconf` should work to ignore the config file.\r\n\r\nAs mentioned in the commit message for 2d65e6ae0756b87e82dbafd032308e8687ec7941:\r\n\r\n> ArgsManager::GetConfigFilePath() asserts that a path is always set. Explicitly negating it is therefore invalid.\"\r\n>\r\n> Previously, -noconf would result in an ifstream being opened to the \".bitcoin\"-directory (not a file) in ArgsManager::ReadConfigFiles(), also circumventing the assert in aforementioned GetConfigFilePath().\r\n> \r\n> (-conf=\"\" is still allowed to reset to the default bitcoin.conf-file location).\"\r\n\r\nIt's sheer luck when it comes to how `ifstream` treats opening of directories that has allowed this before the PR.\r\n\r\nHere is `GetConfigFilePath`:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/2d65e6ae0756b87e82dbafd032308e8687ec7941/src/common/args.cpp#L761-L765\r\n\r\nThe part of `ArgsManager::ReadConfigFiles` which with `-noconf` would open a directory in the `ifstream`, and treat it as `.good()`.\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/2d65e6ae0756b87e82dbafd032308e8687ec7941/src/common/config.cpp#L121-L140\r\n\r\n`ReadConfigStream` calls into `GetConfigOptions` which gets as far as trying to `getline` from the directory `ifstream`, only to return true (success).\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/2d65e6ae0756b87e82dbafd032308e8687ec7941/src/common/config.cpp#L33-L38\r\n\r\nIt would be good to add detection of \"directory as config path\" and trigger an error, regardless of which path is given. But I'm still inclined to disallow `-noconf` because of the assert in `GetConfigFilePath`.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#issuecomment-2468421728",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31212"
    },
    {
      "event": "commented",
      "id": 2468446882,
      "node_id": "IC_kwDOABII586TIYKi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2468446882",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-11T15:29:37Z",
      "updated_at": "2024-11-11T15:29:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#issuecomment-2468446882",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31212"
    },
    {
      "event": "commented",
      "id": 2468495898,
      "node_id": "IC_kwDOABII586TIkIa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2468495898",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-11T15:52:14Z",
      "updated_at": "2024-11-11T15:52:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "Added commit which now guards against passing directory paths as `-conf` values as per https://github.com/bitcoin/bitcoin/pull/31212#issuecomment-2468421728.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#issuecomment-2468495898",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31212"
    },
    {
      "event": "commented",
      "id": 2470510859,
      "node_id": "IC_kwDOABII586TQQEL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2470510859",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-12T13:18:44Z",
      "updated_at": "2024-11-12T13:18:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "Code review d9cfb2a314caa1cdcae8e47a03dad557ad96e069.\r\n\r\nThis generally looks good except commit 2d65e6ae0756b87e82dbafd032308e8687ec7941 disallowing `-noconf`. Specifying `-noconf` to disable reading from the default config file path is useful and something that should be supported, even if now it's only working in a very quirky way by treating the datadir as an empty configuration file. I think a better implementation would not look too different though, maybe like:\r\n\r\n```diff\r\n--- a/src/common/config.cpp\r\n+++ b/src/common/config.cpp\r\n@@ -131,7 +131,7 @@ bool ArgsManager::ReadConfigFiles(std::string& error, bool ignore_invalid_keys)\r\n     std::ifstream stream{conf_path};\r\n \r\n     // not ok to have a config file specified that cannot be opened\r\n-    if (IsArgSet(\"-conf\") && !stream.good()) {\r\n+    if ((IsArgSet(\"-conf\") && !IsArgNegated(\"-conf\")) && !stream.good()) {\r\n         error = strprintf(\"specified config file \\\"%s\\\" could not be opened.\", fs::PathToString(conf_path));\r\n         return false;\r\n     }\r\n@@ -213,7 +213,7 @@ bool ArgsManager::ReadConfigFiles(std::string& error, bool ignore_invalid_keys)\r\n \r\n fs::path AbsPathForConfigVal(const ArgsManager& args, const fs::path& path, bool net_specific)\r\n {\r\n-    if (path.is_absolute()) {\r\n+    if (path.is_absolute() || path.empty()) {\r\n         return path;\r\n     }\r\n     return fsbridge::AbsPathJoin(net_specific ? args.GetDataDirNet() : args.GetDataDirBase(), path);\r\n```\r\n\r\nI don't think it's right to infer from `Assert(m_config_path)` that a configuration file is always required by because that assert is really meant to catch initialization order bugs. The type of `m_config_path` is `std::optional<fs::path>` not `fs::path` so an empty path is ok there.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#issuecomment-2470510859",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31212"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15305434407,
      "node_id": "HRFPE_lADOABII586c73o_zwAAAAOQRmUn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15305434407",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "20e950b2b875751d5b5cf70e4c0fe6d93d654eda",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/20e950b2b875751d5b5cf70e4c0fe6d93d654eda",
      "created_at": "2024-11-14T23:17:54Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15305437852,
      "node_id": "HRFPE_lADOABII586c73o_zwAAAAOQRnKc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15305437852",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "77c8a538b7164f8b65576600eb4668ac160f6b14",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/77c8a538b7164f8b65576600eb4668ac160f6b14",
      "created_at": "2024-11-14T23:18:31Z"
    },
    {
      "event": "commented",
      "id": 2477602934,
      "node_id": "IC_kwDOABII586TrTh2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2477602934",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-14T23:19:51Z",
      "updated_at": "2024-11-14T23:19:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "@ryanofsky thanks for the review! Updated to cover negation for all users of `AbsPathForConfigVal`.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#issuecomment-2477602934",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31212"
    },
    {
      "event": "mentioned",
      "id": 15305445578,
      "node_id": "MEE_lADOABII586c73o_zwAAAAOQRpDK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15305445578",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-14T23:19:52Z"
    },
    {
      "event": "subscribed",
      "id": 15305445588,
      "node_id": "SE_lADOABII586c73o_zwAAAAOQRpDU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15305445588",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-14T23:19:52Z"
    },
    {
      "event": "renamed",
      "id": 15305475041,
      "node_id": "RTE_lADOABII586c73o_zwAAAAOQRwPh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15305475041",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-14T23:25:04Z",
      "rename": {
        "from": "util: Narrow scope of args (-color, -version, -conf, -datadir)",
        "to": "util: Improve documentation and negation of args (-color, -version, -datadir, -rpccookiefile, -pid, -conf)"
      }
    },
    {
      "event": "renamed",
      "id": 15305478109,
      "node_id": "RTE_lADOABII586c73o_zwAAAAOQRw_d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15305478109",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-14T23:25:36Z",
      "rename": {
        "from": "util: Improve documentation and negation of args (-color, -version, -datadir, -rpccookiefile, -pid, -conf)",
        "to": "util: Improve documentation and negation of args"
      }
    },
    {
      "event": "reviewed",
      "id": 2437584042,
      "node_id": "PRR_kwDOABII586RSpSq",
      "url": null,
      "actor": null,
      "commit_id": "77c8a538b7164f8b65576600eb4668ac160f6b14",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review 77c8a538b7164f8b65576600eb4668ac160f6b14. Thanks for the updates! This all looks great, my only substantial comments are about the RPC commit which I think is more complicated than it needs to be and may have a bug where it may allow an empty auth string to be accepted if -norpccookiefile is specified, or if there is an initialization failure.\r\n\r\nIt may be nice to add python functional tests to exercise some of the new behaviors. It would be nontrivial work to add test coverage for all of these behaviors, but it doesn't have to be all-or-nothing. Just having some new end-to-end tests of argument parsing edge cases would be a nice improvement to our existing test coverage.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#pullrequestreview-2437584042",
      "submitted_at": "2024-11-15T05:10:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15314045599,
      "node_id": "HRFPE_lADOABII586c73o_zwAAAAOQycqf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15314045599",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "602d656767297054954777251d08d55579147fba",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/602d656767297054954777251d08d55579147fba",
      "created_at": "2024-11-15T15:21:59Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15314392362,
      "node_id": "HRFPE_lADOABII586c73o_zwAAAAOQzxUq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15314392362",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3c223b06aaf800507412ecc647f7b6ed2affc7c9",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/3c223b06aaf800507412ecc647f7b6ed2affc7c9",
      "created_at": "2024-11-15T15:40:47Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15314455607,
      "node_id": "HRFPE_lADOABII586c73o_zwAAAAOQ0Aw3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15314455607",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4680accc54a0fb77571510893f893ecadbcecac9",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/4680accc54a0fb77571510893f893ecadbcecac9",
      "created_at": "2024-11-15T15:44:19Z"
    },
    {
      "event": "convert_to_draft",
      "id": 15314549807,
      "node_id": "CTDE_lADOABII586c73o_zwAAAAOQ0Xwv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15314549807",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-15T15:51:00Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15340731536,
      "node_id": "HRFPE_lADOABII586c73o_zwAAAAOSYPyQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15340731536",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "41fc05c6f624f0bcba11cfd912a4c3d71c915c73",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/41fc05c6f624f0bcba11cfd912a4c3d71c915c73",
      "created_at": "2024-11-18T21:49:29Z"
    },
    {
      "event": "reviewed",
      "id": 2443807751,
      "node_id": "PRR_kwDOABII586RqYwH",
      "url": null,
      "actor": null,
      "commit_id": "41fc05c6f624f0bcba11cfd912a4c3d71c915c73",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for continued review and reminding me to raise the bar for the PR @ryanofsky.\r\n\r\nAdded tests which helped uncover that *bitcoin-cli* might as well also support `-norpccookiefile` too, and part of *src/common/init.cpp* which was not handling `-noconf` correctly.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#pullrequestreview-2443807751",
      "submitted_at": "2024-11-18T22:01:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU4YTIwNTRlZGM4MTRiMmM0NjYxYjk2YTNkY2U5MWRhOWJlNjhmYTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e8a2054edc814b2c4661b96a3dce91da9be68fa4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e8a2054edc814b2c4661b96a3dce91da9be68fa4",
      "tree": {
        "sha": "9022b68ff079e4e14c3c1aa42581a3df7b9968e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9022b68ff079e4e14c3c1aa42581a3df7b9968e4"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 9022b68ff079e4e14c3c1aa42581a3df7b9968e4\nparent ccc2d3abcd39c64a78e366f3e4794de729155e9e\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1731064522 +0100\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1731967459 +0100\n\ndoc args: Document narrow scope of -color\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQHZScR/KznMg2rReW/9MprW/JKtDu5aLgZkkVtSyJCSpwBeeS3qv7+1rUGUiiL24k+\nyqOEzRNBaCSyK5im93BAs=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ccc2d3abcd39c64a78e366f3e4794de729155e9e",
          "sha": "ccc2d3abcd39c64a78e366f3e4794de729155e9e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ccc2d3abcd39c64a78e366f3e4794de729155e9e"
        }
      ],
      "message": "doc args: Document narrow scope of -color",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-11-18T22:04:19Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-11-08T11:15:22Z"
      },
      "sha": "e8a2054edc814b2c4661b96a3dce91da9be68fa4"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15340915423,
      "node_id": "HRFPE_lADOABII586c73o_zwAAAAOSY8rf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15340915423",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1465250ac0286031cb30c70c5a844dd44037d309",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/1465250ac0286031cb30c70c5a844dd44037d309",
      "created_at": "2024-11-18T22:09:32Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15341143672,
      "node_id": "HRFPE_lADOABII586c73o_zwAAAAOSZ0Z4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15341143672",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c30e89fd4719cf3e4157a42b3a0bbc3c2d73f2b3",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/c30e89fd4719cf3e4157a42b3a0bbc3c2d73f2b3",
      "created_at": "2024-11-18T22:35:59Z"
    },
    {
      "event": "labeled",
      "id": 15341144312,
      "node_id": "LE_lADOABII586c73o_zwAAAAOSZ0j4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15341144312",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-18T22:36:04Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2484276936,
      "node_id": "IC_kwDOABII586UEw7I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2484276936",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-18T22:36:05Z",
      "updated_at": "2024-11-18T22:36:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/33166175203</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#issuecomment-2484276936",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31212"
    },
    {
      "event": "unlabeled",
      "id": 15341325751,
      "node_id": "UNLE_lADOABII586c73o_zwAAAAOSag23",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15341325751",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-18T22:56:16Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 15341573305,
      "node_id": "UNLE_lADOABII586c73o_zwAAAAOSbdS5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15341573305",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-18T23:17:13Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15347158016,
      "node_id": "HRFPE_lADOABII586c73o_zwAAAAOSwwwA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15347158016",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d555cfbd44060ee09c217cf148529502a09c4837",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/d555cfbd44060ee09c217cf148529502a09c4837",
      "created_at": "2024-11-19T10:21:36Z"
    },
    {
      "event": "commented",
      "id": 2485465760,
      "node_id": "IC_kwDOABII586UJTKg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2485465760",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-19T11:33:28Z",
      "updated_at": "2024-11-19T11:33:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "I'd like to review this, but first, I'd like to understand why it is still in draft form.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#issuecomment-2485465760",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31212"
    },
    {
      "event": "ready_for_review",
      "id": 15348223739,
      "node_id": "RFRE_lADOABII586c73o_zwAAAAOS0077",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15348223739",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-19T11:44:24Z"
    },
    {
      "event": "commented",
      "id": 2485490965,
      "node_id": "IC_kwDOABII586UJZUV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2485490965",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-19T11:45:54Z",
      "updated_at": "2024-11-19T11:45:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I'd like to review this, but first, I'd like to understand why it is still in draft form.\r\n\r\nHad a linefeed issue on Windows in the previous push (and was in a WIP state over the weekend, before that).. but pretty sure it's ready to go.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#issuecomment-2485490965",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31212"
    },
    {
      "event": "reviewed",
      "id": 2449278047,
      "node_id": "PRR_kwDOABII586R_QRf",
      "url": null,
      "actor": null,
      "commit_id": "d555cfbd44060ee09c217cf148529502a09c4837",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I love that you search for these inconsistencies and attack them head on.\r\n+1 for adding representative tests (which I didn't review in detail yet, will do in the next round of reviews).\r\n",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#pullrequestreview-2449278047",
      "submitted_at": "2024-11-20T18:25:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZmZjk2NjI3NjAwOTljNDA1Y2YxMzE1M2RkMWRlMjI5MDAwNDVmNWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ff9662760099c405cf13153dd1de22900045f5e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6ff9662760099c405cf13153dd1de22900045f5e",
      "tree": {
        "sha": "aa2ab6ec16f93e8f02b568d26fe02caa2b649913",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aa2ab6ec16f93e8f02b568d26fe02caa2b649913"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree aa2ab6ec16f93e8f02b568d26fe02caa2b649913\nparent e8a2054edc814b2c4661b96a3dce91da9be68fa4\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1732139723 +0100\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1732139723 +0100\n\nscripted-diff: Avoid printing version information for -noversion\n\n-BEGIN VERIFY SCRIPT-\nsed -i --regexp-extended 's/\\b(gArgs|args)\\.IsArgSet\\(\"-version\"\\)/\\1.GetBoolArg(\"-version\", false)/g' $(git grep -l '-version')\n-END VERIFY SCRIPT-\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQGObkgB6JplAEmhKfm1S2xOOM7/IXzgPXV7/PLJaH2AYEnExxtgNs0au7oSHupqWRe\nm3LHWHC1eEZ6VuNd8ZZwg=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e8a2054edc814b2c4661b96a3dce91da9be68fa4",
          "sha": "e8a2054edc814b2c4661b96a3dce91da9be68fa4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e8a2054edc814b2c4661b96a3dce91da9be68fa4"
        }
      ],
      "message": "scripted-diff: Avoid printing version information for -noversion\n\n-BEGIN VERIFY SCRIPT-\nsed -i --regexp-extended 's/\\b(gArgs|args)\\.IsArgSet\\(\"-version\"\\)/\\1.GetBoolArg(\"-version\", false)/g' $(git grep -l '-version')\n-END VERIFY SCRIPT-",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-11-20T21:55:23Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-11-20T21:55:23Z"
      },
      "sha": "6ff9662760099c405cf13153dd1de22900045f5e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDEyZjhkODQ4ZmQ5MWIxMWQ1Y2ZmZTIxZGZjM2JhMTI0MTAyZWUyMzY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/12f8d848fd91b11d5cffe21dfc3ba124102ee236",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/12f8d848fd91b11d5cffe21dfc3ba124102ee236",
      "tree": {
        "sha": "a1a1de1435db660044b104f4ceca953d204f1980",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a1a1de1435db660044b104f4ceca953d204f1980"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a1a1de1435db660044b104f4ceca953d204f1980\nparent 6ff9662760099c405cf13153dd1de22900045f5e\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1730726151 +0100\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1732139725 +0100\n\nargs: Disallow -nodatadir\n\nDoes not make sense to run without a datadir.\n\nPrior to this change it would be interpreted as a mix of unset and as a relative path of \"0\".\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQNsJ0OSyNJOhj45N1H3Q89SNz0c5C5Xh9tPCZT9VjLjbpS1605MogeJ/BF4lA4wruV\nNi1Y8zu2kJSYetpqCxQwI=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ff9662760099c405cf13153dd1de22900045f5e",
          "sha": "6ff9662760099c405cf13153dd1de22900045f5e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6ff9662760099c405cf13153dd1de22900045f5e"
        }
      ],
      "message": "args: Disallow -nodatadir\n\nDoes not make sense to run without a datadir.\n\nPrior to this change it would be interpreted as a mix of unset and as a relative path of \"0\".",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-11-20T21:55:25Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-11-04T13:15:51Z"
      },
      "sha": "12f8d848fd91b11d5cffe21dfc3ba124102ee236"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJmZmQ5MmYwMGY1YmZiYjVhNjIyZDBiZDIwYmZlZWQ5ZjhiMTA5Mjg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bffd92f00f5bfbb5a622d0bd20bfeed9f8b10928",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bffd92f00f5bfbb5a622d0bd20bfeed9f8b10928",
      "tree": {
        "sha": "3d95af31fc1aea9810c7760b6d61bd9538d2229f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3d95af31fc1aea9810c7760b6d61bd9538d2229f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3d95af31fc1aea9810c7760b6d61bd9538d2229f\nparent 12f8d848fd91b11d5cffe21dfc3ba124102ee236\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1731618864 +0100\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1732139726 +0100\n\nargs: Support -nopid\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQEVNSzp0v0Yz/W43DyXCjottg3BAB2lnzssUfyFq8lzGY2wIEyXSVHP5ISCRi03xpT\n2B+IlKt+VNwX+4ydFtAg4=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/12f8d848fd91b11d5cffe21dfc3ba124102ee236",
          "sha": "12f8d848fd91b11d5cffe21dfc3ba124102ee236",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/12f8d848fd91b11d5cffe21dfc3ba124102ee236"
        }
      ],
      "message": "args: Support -nopid",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-11-20T21:55:26Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-11-14T21:14:24Z"
      },
      "sha": "bffd92f00f5bfbb5a622d0bd20bfeed9f8b10928"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15373711948,
      "node_id": "HRFPE_lADOABII586c73o_zwAAAAOUWDpM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15373711948",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d28d1786c55230d625b1dfeca26f7580bf54ed75",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/d28d1786c55230d625b1dfeca26f7580bf54ed75",
      "created_at": "2024-11-20T22:55:03Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15373796247,
      "node_id": "HRFPE_lADOABII586c73o_zwAAAAOUWYOX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15373796247",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2bf7e59776fcfb2c8a477cf2abb59606f7b4aacc",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/2bf7e59776fcfb2c8a477cf2abb59606f7b4aacc",
      "created_at": "2024-11-20T23:07:06Z"
    },
    {
      "event": "reviewed",
      "id": 2451143073,
      "node_id": "PRR_kwDOABII586SGXmh",
      "url": null,
      "actor": null,
      "commit_id": "2bf7e59776fcfb2c8a477cf2abb59606f7b4aacc",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 2bf7e59776fcfb2c8a477cf2abb59606f7b4aacc. This is a nice improvement over status quo, but I'm pretty sure two of the commits 21bc3a3657fea5ed44172963639ee8ca5cd8e46c and 879a8d3a6820a86e6faa8d91f92d0cf374700fb8 are more complicated than they need to be and less robust than they could be.\r\n\r\nI posted a simplified [branch](https://github.com/ryanofsky/bitcoin/commits/review.31212.4-edit) ([diff](https://github.com/ryanofsky/bitcoin/compare/review.31212.4..review.31212.4-edit)) and would recommend replacing:\r\n\r\n- 21bc3a3657fea5ed44172963639ee8ca5cd8e46c with 43ec65a6bd5786a47fba91eec96cb68232104904\r\n- 879a8d3a6820a86e6faa8d91f92d0cf374700fb8 with 3a856c86685a5ab6f3cb78b17cb52cbb1b9ad95b\r\n- 2bf7e59776fcfb2c8a477cf2abb59606f7b4aacc with ebadf80f2fed1fc3513e76a48696e4f561ce577d (to fix tests)\r\n\r\nIssues with current commit \"args: Support -norpccookiefile for bitcoind and bitcoin-cli\" (21bc3a3657fea5ed44172963639ee8ca5cd8e46c) are:\r\n\r\n- Tristate optional\\<bool> is unnecessary when the function can just return true in successful states and false in failed ones.\r\n\r\n- New \"Unable to set specified permissions on cookie file as we aren't generating one\" warning doesn't seem like a good idea. Warning about valid but unused options is not consistent with how most other options are handled, and having a warning for this niche case makes the code harder to follow. Also the warning is not shown reliably, such as when when -rpcpassword is specified and -rpccookieperms is also ignored.\r\n\r\n- New `g_http_rpc_auth_initialized` variable is unnecessary. Its only purpose to preserve an old \"Belt-and-suspenders\" check but there is nothing particularly useful about that check. The check made sense previously to detect the formerly invalid state of the \"user:pass\" string being empty. But now that -norpccookiefile works, it makes sense for that string to be empty, and doesn't make sense to add a *new* invalid state just for the sake of having some invalid state. At least I can think of more ways adding an unnecessary invalid state could cause bugs than it could prevent them.\r\n\r\n- New \"RPC authentication cookie file reading is disabled\" debug log in bitcoin-cli code doesn't seem useful. AFAICT bitcoin-cli doesn't show debug messages and this message doesn't add much information beyond what the more actionable `bitcoin-cli` error message already conveys. Having this doesn't seem worth hit to complexity & readability of the GetAuthCookie function, and if the error message is unclear it would be better to just improve the error message.\r\n\r\n- Very subjective, but I think the unrelated code cleanups in this commit make it hard to follow and are very distracting. Would be much happier to see them dropped or moved to a refactoring commit.\r\n\r\nIssues with current commit \"args: Properly support -noconf and catch directories\" (879a8d3a6820a86e6faa8d91f92d0cf374700fb8) are:\r\n\r\n- The `fs::is_directory` checks seem to be covering up a problem rather than fixing it. AFAICT the problem with `ReadConfigFiles` is that is reading all the config files without bothering to check that the reads are successful. If the code changed to check `ifstream::eof` and verify that the files were read successfully it would be simpler and more reliable.\r\n\r\n- The \"included config file \\\"%s\\\" is a directory.\" error formatting is buggy. It references the path of the main config file not the included file.\r\n\r\n- The \"data directory contains a config file which is ignored because -noconf is specified error\" seems to introduce an inconsistency with how -noconf is handled. I would expect -noconf to always ignore the configuration file, not sometimes ignore it and other times show an error an error about it, and for which of these happens to depend on how the data directory was located.\r\n\r\n- The new IsArgNegated call in StartLogging seems to be modifying dead code. Or I don't see how the \"The specified config file %s does not exist\" warning would be triggered when there is already an error about that. Seems better to just drop the redundant code here.\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#pullrequestreview-2451143073",
      "submitted_at": "2024-11-22T03:11:28Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
    },
    {
      "event": "review_requested",
      "id": 15391613350,
      "node_id": "RRE_lADOABII586c73o_zwAAAAOVaWGm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15391613350",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-22T03:11:31Z",
      "requested_reviewer": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 15391613406,
      "node_id": "RRE_lADOABII586c73o_zwAAAAOVaWHe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15391613406",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-22T03:11:32Z",
      "requested_reviewer": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2454047570,
      "node_id": "PRR_kwDOABII586SRctS",
      "url": null,
      "actor": null,
      "commit_id": "2bf7e59776fcfb2c8a477cf2abb59606f7b4aacc",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#pullrequestreview-2454047570",
      "submitted_at": "2024-11-22T10:35:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
    },
    {
      "event": "review_requested",
      "id": 15395673278,
      "node_id": "RRE_lADOABII586c73o_zwAAAAOVp1S-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15395673278",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-22T10:35:30Z",
      "requested_reviewer": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15418434006,
      "node_id": "HRFPE_lADOABII586c73o_zwAAAAOXAqHW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15418434006",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "301927ea7f9b5660a345ecef3a25b6743fbfb9f7",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/301927ea7f9b5660a345ecef3a25b6743fbfb9f7",
      "created_at": "2024-11-25T10:40:05Z"
    },
    {
      "event": "commented",
      "id": 2497640819,
      "node_id": "IC_kwDOABII586U3vlz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2497640819",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-25T10:42:41Z",
      "updated_at": "2024-11-25T10:42:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "Re: https://github.com/bitcoin/bitcoin/pull/31212#pullrequestreview-2451143073\r\n\r\n21bc3a3657fea5ed44172963639ee8ca5cd8e46c\r\n\r\n> Very subjective, but I think the unrelated code cleanups in this commit make it hard to follow and are very distracting. Would be much happier to see them dropped or moved to a refactoring commit.\r\n\r\nBroke out 215be3dfba90a6d5b2b37f0f94bcb621dd3d4a9a from commit. Also broke out eb23f55ae2470bd2376307ca293feb0be972de50 from test-commit.\r\n\r\n\r\n---\r\n\r\n879a8d3a6820a86e6faa8d91f92d0cf374700fb8\r\n\r\n> The new IsArgNegated call in StartLogging seems to be modifying dead code. Or I don't see how the \"The specified config file %s does not exist\" warning would be triggered when there is already an error about that. Seems better to just drop the redundant code here.\r\n\r\nIt is true that *bitcoind.cpp* calls into `ArgsManager::ReadConfigFiles()` before `init::StartLogging()`, but I prefer keeping it for belt & suspenders reasons, maybe the implicit initializing test inside the call to `args.GetConfigFilePath()` is changed and a future client of `kernel` reverses the order compared to bitcoind. Also realized we should add special output for the `-noconf` case to make things clear to readers of the log.\r\n",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#issuecomment-2497640819",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31212"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15418498255,
      "node_id": "HRFPE_lADOABII586c73o_zwAAAAOXA5zP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15418498255",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9b83c3ec0bfa8becf87a1e54766b7bd8a6b159b6",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/9b83c3ec0bfa8becf87a1e54766b7bd8a6b159b6",
      "created_at": "2024-11-25T10:44:25Z"
    },
    {
      "event": "labeled",
      "id": 15418499468,
      "node_id": "LE_lADOABII586c73o_zwAAAAOXA6GM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15418499468",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-25T10:44:30Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2497645796,
      "node_id": "IC_kwDOABII586U3wzk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2497645796",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-25T10:44:31Z",
      "updated_at": "2024-11-25T10:44:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/33470556641</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#issuecomment-2497645796",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31212"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15418561021,
      "node_id": "HRFPE_lADOABII586c73o_zwAAAAOXBJH9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15418561021",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "27e66ee70740c0e979a5d440237ae15104512329",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/27e66ee70740c0e979a5d440237ae15104512329",
      "created_at": "2024-11-25T10:47:45Z"
    },
    {
      "event": "commented",
      "id": 2498039344,
      "node_id": "IC_kwDOABII586U5Q4w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2498039344",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-25T13:34:27Z",
      "updated_at": "2024-11-28T11:13:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "Can understand the checks failing on MacOS or Windows, but surprised that what I assume to be Linux on Cirrus CI is also failing (https://cirrus-ci.com/task/5004562262654976?logs=ci#L172). Will move to Windows and see how it behaves there. Might have to revert to explicitly checking `is_directory()`.\r\n\r\nEdit: Could not reproduce the failure on my Windows install.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#issuecomment-2498039344",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31212"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15427139513,
      "node_id": "HRFPE_lADOABII586c73o_zwAAAAOXh3e5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15427139513",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9c2787e1deb29bfa5a2951225bf69ea26f535572",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/9c2787e1deb29bfa5a2951225bf69ea26f535572",
      "created_at": "2024-11-25T21:44:26Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15427169855,
      "node_id": "HRFPE_lADOABII586c73o_zwAAAAOXh-4_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15427169855",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "16038b0fe7022133a75675db2dcf9cd37bd1caf4",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/16038b0fe7022133a75675db2dcf9cd37bd1caf4",
      "created_at": "2024-11-25T21:47:40Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15433804267,
      "node_id": "HRFPE_lADOABII586c73o_zwAAAAOX7Snr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15433804267",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6c755e0e222ea54eab6e7b92220d385284740324",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/6c755e0e222ea54eab6e7b92220d385284740324",
      "created_at": "2024-11-26T10:25:49Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15465526230,
      "node_id": "HRFPE_lADOABII586c73o_zwAAAAOZ0TPW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15465526230",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "51e34ca022d6704dcf1fa955e3764a97d91bbba8",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/51e34ca022d6704dcf1fa955e3764a97d91bbba8",
      "created_at": "2024-11-28T13:22:27Z"
    },
    {
      "event": "commented",
      "id": 2506175947,
      "node_id": "IC_kwDOABII586VYTXL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2506175947",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-28T13:51:15Z",
      "updated_at": "2024-11-28T19:51:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "Pushed ~51e34ca022d6704dcf1fa955e3764a97d91bbba8~ c972e691d937f49d7d3f44d2b19b4035c6e67aaf\r\n\r\n---\r\n\r\nUnfortunately I wasn't able to use the simplification suggested by @ryanofsky:\r\nhttps://github.com/bitcoin/bitcoin/blob/3a856c86685a5ab6f3cb78b17cb52cbb1b9ad95b/src/common/config.cpp#L138-L141\r\n\r\nWhen opening a directory with an `ifstream`, Windows CI would return `false` for `is_open()`:\r\nhttps://github.com/hodlinator/bitcoin/actions/runs/12052081230/job/33604594555#step:12:3324\r\n\r\nWhen opening a directory with an `ifstream` on MacOS CI, `is_open()` would return `true`, but the EOF-bit would also be set:\r\nhttps://github.com/hodlinator/bitcoin/actions/runs/12052081230/job/33604593738#step:7:6158\r\n\r\nSo reverted to using `is_directory()` as it is more robust and clear.\r\n\r\n---\r\n\r\n\\+ Commit 86c6b1e0744d8d767fe75ddaa9fc9dd3643e15aa - Improves *combine_logs.py* which helped me track down that I had forgotten to pass `-regtest` in a couple of calls to `assert_start_raises_init_error()` (creating mainnet *debug.log*s).\r\n\r\n\\+ Commit eb2d96bb66f109e610ee44cf3fed5c6701e3b8e3 - Refactors *feature_config_args.py* towards starting the node at beginning of test functions and stopping it at the end to reduce implicit dependencies.\r\n\r\nBroke up `-noconf` and directory checking changes and tests into separate commits.\r\n\r\nSimplified warning about ignored config file in *common/init.cpp*.\r\n\r\nAdded special output for config file being a directory in *init/common.cpp*.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#issuecomment-2506175947",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31212"
    },
    {
      "event": "mentioned",
      "id": 15465870699,
      "node_id": "MEE_lADOABII586c73o_zwAAAAOZ1nVr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15465870699",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-28T13:51:17Z"
    },
    {
      "event": "subscribed",
      "id": 15465870716,
      "node_id": "SE_lADOABII586c73o_zwAAAAOZ1nV8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15465870716",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-28T13:51:17Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15466896754,
      "node_id": "HRFPE_lADOABII586c73o_zwAAAAOZ5h1y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15466896754",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "created_at": "2024-11-28T15:10:38Z"
    },
    {
      "event": "unlabeled",
      "id": 15467360455,
      "node_id": "UNLE_lADOABII586c73o_zwAAAAOZ7TDH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15467360455",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-28T15:53:57Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2469613723,
      "node_id": "PRR_kwDOABII586TM1Cb",
      "url": null,
      "actor": null,
      "commit_id": "c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for enduring through the struggles the Windows gods bestow upon you.\r\nWhile there are parts I can't meaningfully review yet (no idea what to do with the cookies yet), I left a few comments about how some restructuring could help me understand the context better: if a commit should not be merged without another one, I would prefer combining them into a single commit - to avoid the bloat, it makes review harder.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#pullrequestreview-2469613723",
      "submitted_at": "2024-11-29T11:31:19Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
    },
    {
      "event": "reviewed",
      "id": 2473436614,
      "node_id": "PRR_kwDOABII586TbaXG",
      "url": null,
      "actor": null,
      "commit_id": "c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK c972e691d937f49d7d3f44d2b19b4035c6e67aaf. Thanks for breaking the commits up make making things easy to understand.\r\n\r\nChanges since last review were simplifying the -norpccookiefile and -noconf fixes by breaking them up and changing some implementation details. There are also new combine_logs and feature_config args test improvements.\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#pullrequestreview-2473436614",
      "submitted_at": "2024-12-02T22:26:15Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
    },
    {
      "event": "review_requested",
      "id": 15500235562,
      "node_id": "RRE_lADOABII586c73o_zwAAAAOb4tMq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15500235562",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-02T22:26:19Z",
      "requested_reviewer": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc1YmFjYWJiNTVmM2Q1NGFkOWIyYzY2MGNhZmM4MmMxNjdlNGY2NDQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/75bacabb55f3d54ad9b2c660cafc82c167e4f644",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/75bacabb55f3d54ad9b2c660cafc82c167e4f644",
      "tree": {
        "sha": "f08338e3ed2364cf4907ce11159e00905f5821c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f08338e3ed2364cf4907ce11159e00905f5821c4"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f08338e3ed2364cf4907ce11159e00905f5821c4\nparent bffd92f00f5bfbb5a622d0bd20bfeed9f8b10928\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1733218700 +0100\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1733218700 +0100\n\ntest: combine_logs.py - Output debug.log paths on error\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQNZY2gyNqAt5LnYB1wyrlKgmJSeAqGiYo0VwDLbplBItQwyyApUGYQQRi+mVvb6BhQ\ndabhBg+f+aRqTnTzDsgQ0=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bffd92f00f5bfbb5a622d0bd20bfeed9f8b10928",
          "sha": "bffd92f00f5bfbb5a622d0bd20bfeed9f8b10928",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bffd92f00f5bfbb5a622d0bd20bfeed9f8b10928"
        }
      ],
      "message": "test: combine_logs.py - Output debug.log paths on error",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-12-03T09:38:20Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-12-03T09:38:20Z"
      },
      "sha": "75bacabb55f3d54ad9b2c660cafc82c167e4f644"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZlMjhjNzY5MDdjYTAwMTJiMWE0NTU2ZDlhOTgyZGZmZmI1YWJhZjY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6e28c76907ca0012b1a4556d9a982dfffb5abaf6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6e28c76907ca0012b1a4556d9a982dfffb5abaf6",
      "tree": {
        "sha": "c22092a056484a005e35492f03c3c4466b262736",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c22092a056484a005e35492f03c3c4466b262736"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c22092a056484a005e35492f03c3c4466b262736\nparent 75bacabb55f3d54ad9b2c660cafc82c167e4f644\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1732527710 +0100\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1733218701 +0100\n\ntest: Harden testing of cookie file existence\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQHAIu050i1+LLjUv1t2j1AIK0tr9dIbzrwrgfuevv46zvxM6P2ba5YeEuS42YuYmu4\nlNoy5ee1j8mHFp0Y1vAAg=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/75bacabb55f3d54ad9b2c660cafc82c167e4f644",
          "sha": "75bacabb55f3d54ad9b2c660cafc82c167e4f644",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/75bacabb55f3d54ad9b2c660cafc82c167e4f644"
        }
      ],
      "message": "test: Harden testing of cookie file existence",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-12-03T09:38:21Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-11-25T09:41:50Z"
      },
      "sha": "6e28c76907ca0012b1a4556d9a982dfffb5abaf6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU4MmFkODg0NTJiY2U0MTMyZTQ1ODM3MjdlNjEwZDUyZGNmOWFkOWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e82ad88452bce4132e4583727e610d52dcf9ad9e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e82ad88452bce4132e4583727e610d52dcf9ad9e",
      "tree": {
        "sha": "67f38a973dc7dccb3eabe4a77306a04b6b559f10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/67f38a973dc7dccb3eabe4a77306a04b6b559f10"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 67f38a973dc7dccb3eabe4a77306a04b6b559f10\nparent 6e28c76907ca0012b1a4556d9a982dfffb5abaf6\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1733132287 +0100\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1733218701 +0100\n\nlogs: Use correct path and more appropriate macros in cookie-related code\n\nfilepath_tmp -> filepath in last message.\n\nMore material changes to nearby code in next commit.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQKxaiDdE3SKQKD4cF2JhGbCaztSEeswOUwrtZVTCSVQK1PqClLsJ73oi0cNQgfP8er\nSRS84+JFAW55ROdyE2twI=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6e28c76907ca0012b1a4556d9a982dfffb5abaf6",
          "sha": "6e28c76907ca0012b1a4556d9a982dfffb5abaf6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6e28c76907ca0012b1a4556d9a982dfffb5abaf6"
        }
      ],
      "message": "logs: Use correct path and more appropriate macros in cookie-related code\n\nfilepath_tmp -> filepath in last message.\n\nMore material changes to nearby code in next commit.",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-12-03T09:38:21Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-12-02T09:38:07Z"
      },
      "sha": "e82ad88452bce4132e4583727e610d52dcf9ad9e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM5Y2JkNGYzN2MzZDNhMzJjZDk5M2NiYzc4MDUyZDUzZjcwMDk4OWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/39cbd4f37c3d3a32cd993cbc78052d53f700989b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/39cbd4f37c3d3a32cd993cbc78052d53f700989b",
      "tree": {
        "sha": "9d143d5593ce3201682443aec20735b406097ad0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9d143d5593ce3201682443aec20735b406097ad0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 9d143d5593ce3201682443aec20735b406097ad0\nparent e82ad88452bce4132e4583727e610d52dcf9ad9e\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1733217631 +0100\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1733218701 +0100\n\nargs: Support -norpccookiefile for bitcoind and bitcoin-cli\n\nReplaces belt & suspenders check for initialization in RPCAuthorized() with not allowing empty passwords further down.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQJEKIwpnAxiBNTHyagq8N3tgvekZyK2yUublpvO2r06QH2tDj0RClXfNrfzRZFqM2x\n3QDzDYZMForOtZUCyWOgo=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e82ad88452bce4132e4583727e610d52dcf9ad9e",
          "sha": "e82ad88452bce4132e4583727e610d52dcf9ad9e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e82ad88452bce4132e4583727e610d52dcf9ad9e"
        }
      ],
      "message": "args: Support -norpccookiefile for bitcoind and bitcoin-cli\n\nReplaces belt & suspenders check for initialization in RPCAuthorized() with not allowing empty passwords further down.",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-12-03T09:38:21Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-12-03T09:20:31Z"
      },
      "sha": "39cbd4f37c3d3a32cd993cbc78052d53f700989b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc0MDI2NThiYzJiOWQ4MzViMjQwZWRiOWMxZGFjMzA4ODU5Njg3YzM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7402658bc2b9d835b240edb9c1dac308859687c3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7402658bc2b9d835b240edb9c1dac308859687c3",
      "tree": {
        "sha": "3ea8525d73eaa70e76f2115883de9bdbdba8a11d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3ea8525d73eaa70e76f2115883de9bdbdba8a11d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3ea8525d73eaa70e76f2115883de9bdbdba8a11d\nparent 39cbd4f37c3d3a32cd993cbc78052d53f700989b\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1732528240 +0100\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1733218701 +0100\n\ntest: -norpccookiefile\n\nBoth bitcoind and bitcoin-cli.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQOW7G4UiON735llIvNKWwBKtHFc407licu1JmYrD9xd4RFNTzdoJnqS+KQ3so3Wjnj\nHvlANwMkuVMGR3H3rXhQw=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/39cbd4f37c3d3a32cd993cbc78052d53f700989b",
          "sha": "39cbd4f37c3d3a32cd993cbc78052d53f700989b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/39cbd4f37c3d3a32cd993cbc78052d53f700989b"
        }
      ],
      "message": "test: -norpccookiefile\n\nBoth bitcoind and bitcoin-cli.",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-12-03T09:38:21Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-11-25T09:50:40Z"
      },
      "sha": "7402658bc2b9d835b240edb9c1dac308859687c3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDMxMmVjNjRjYzA2MTlmNThjNmU4YWJjNTg1NWZkMmZhMGU5MjBjM2Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/312ec64cc0619f58c6e8abc5855fd2fa0e920c3f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/312ec64cc0619f58c6e8abc5855fd2fa0e920c3f",
      "tree": {
        "sha": "645266a889d40513b04d0a16488506eb3bc54c45",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/645266a889d40513b04d0a16488506eb3bc54c45"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 645266a889d40513b04d0a16488506eb3bc54c45\nparent 7402658bc2b9d835b240edb9c1dac308859687c3\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1733218340 +0100\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1733218961 +0100\n\ntest refactor: feature_config_args.py - Stop nodes at the end of tests, not at the beginning\n\nThis ensures we don't needlessly start the node, and reduces implicit dependencies between test functions.\n\ntest_seed_peers() - Move assert calling RPC to verify correct chain after our own function actually started the node.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQIbYTI7ma0NBFbiVVDBV3fdX2/+HpRs+ayOuxBBMsa9tSSW3zfvD/8Rl+eKCZW2a2Y\nxBZEW2fiWShYWqLBoBug0=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7402658bc2b9d835b240edb9c1dac308859687c3",
          "sha": "7402658bc2b9d835b240edb9c1dac308859687c3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7402658bc2b9d835b240edb9c1dac308859687c3"
        }
      ],
      "message": "test refactor: feature_config_args.py - Stop nodes at the end of tests, not at the beginning\n\nThis ensures we don't needlessly start the node, and reduces implicit dependencies between test functions.\n\ntest_seed_peers() - Move assert calling RPC to verify correct chain after our own function actually started the node.",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-12-03T09:42:41Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-12-03T09:32:20Z"
      },
      "sha": "312ec64cc0619f58c6e8abc5855fd2fa0e920c3f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ4M2YwZGFjYzQxM2Y0YjFiYTFiNzRjMjQyOWM0MzY3Yjg3ZTdmMTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/483f0dacc413f4b1ba1b74c2429c4367b87e7f11",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/483f0dacc413f4b1ba1b74c2429c4367b87e7f11",
      "tree": {
        "sha": "a45e96f57d2bd41ee1d4dae32ca9f6dd94e5b71a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a45e96f57d2bd41ee1d4dae32ca9f6dd94e5b71a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a45e96f57d2bd41ee1d4dae32ca9f6dd94e5b71a\nparent 312ec64cc0619f58c6e8abc5855fd2fa0e920c3f\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1733215547 +0100\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1733220250 +0100\n\nargs: Properly support -noconf\n\n-noconf would previously lead to an ifstream \"successfully\" being opened to the \".bitcoin\"-directory (not a file). (Guards against the general case of directories as configs are added in grandchild commit to this one).\n\nOther users of AbsPathForConfigVal() in combination with negated args have been updated earlier in this PR (\"args: Support -nopid\" and \"args: Support -norpccookiefile...\").\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQA7RBOTx3A8e0vuK72N5jBlcQiHipwOPABlXgNAgbr98dLybwBZUhvvqEvXY/qn4B4\nAEIbO1TnuKklu9ykbDvg4=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/312ec64cc0619f58c6e8abc5855fd2fa0e920c3f",
          "sha": "312ec64cc0619f58c6e8abc5855fd2fa0e920c3f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/312ec64cc0619f58c6e8abc5855fd2fa0e920c3f"
        }
      ],
      "message": "args: Properly support -noconf\n\n-noconf would previously lead to an ifstream \"successfully\" being opened to the \".bitcoin\"-directory (not a file). (Guards against the general case of directories as configs are added in grandchild commit to this one).\n\nOther users of AbsPathForConfigVal() in combination with negated args have been updated earlier in this PR (\"args: Support -nopid\" and \"args: Support -norpccookiefile...\").",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-12-03T10:04:10Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-12-03T08:45:47Z"
      },
      "sha": "483f0dacc413f4b1ba1b74c2429c4367b87e7f11"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU0YjZiMTgyMmNlMDA0MzY1YmUxMWM1NGM4ZjVmMDJmOTUzMDNmYjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e4b6b1822ce004365be11c54c8f5f02f95303fb0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e4b6b1822ce004365be11c54c8f5f02f95303fb0",
      "tree": {
        "sha": "94fc47cbac05ca91d27e7d7f014b56fb0cb2e874",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/94fc47cbac05ca91d27e7d7f014b56fb0cb2e874"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 94fc47cbac05ca91d27e7d7f014b56fb0cb2e874\nparent 483f0dacc413f4b1ba1b74c2429c4367b87e7f11\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1733219713 +0100\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1733220250 +0100\n\ntest: Add tests for -noconf\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQERipfoHuCPCC20WtHS9lOsMDCDslcJdhMWn/R5HjQxNAVAvC+Gpq3uH7zrI+20vWA\n3z+Pg6DJqQHXD7MTpDegA=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/483f0dacc413f4b1ba1b74c2429c4367b87e7f11",
          "sha": "483f0dacc413f4b1ba1b74c2429c4367b87e7f11",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/483f0dacc413f4b1ba1b74c2429c4367b87e7f11"
        }
      ],
      "message": "test: Add tests for -noconf",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-12-03T10:04:10Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-12-03T09:55:13Z"
      },
      "sha": "e4b6b1822ce004365be11c54c8f5f02f95303fb0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU4NWFiZTkyYzdjYzUzODA0ODljMDI4NDc5ZjBkNDJmOTE4MjdlZmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e85abe92c7cc5380489c028479f0d42f91827efd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e85abe92c7cc5380489c028479f0d42f91827efd",
      "tree": {
        "sha": "f60cccce9d3063c1f5c5c192e7835f54f24881df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f60cccce9d3063c1f5c5c192e7835f54f24881df"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f60cccce9d3063c1f5c5c192e7835f54f24881df\nparent e4b6b1822ce004365be11c54c8f5f02f95303fb0\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1733131879 +0100\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1733220250 +0100\n\nargs: Catch directories in place of config files\n\nPreviously passing a directory path as -conf would lead to an ifstream being opened for it, and would not trigger any errors.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQEiYrljj9JeJniZBWvWQYZnMcQGlqcLeisn11VQt8aj/ZiNqD8nyY6OhKzO3mxQbrJ\nALCsvcpT9SVRGN1En3CQQ=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e4b6b1822ce004365be11c54c8f5f02f95303fb0",
          "sha": "e4b6b1822ce004365be11c54c8f5f02f95303fb0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e4b6b1822ce004365be11c54c8f5f02f95303fb0"
        }
      ],
      "message": "args: Catch directories in place of config files\n\nPreviously passing a directory path as -conf would lead to an ifstream being opened for it, and would not trigger any errors.",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-12-03T10:04:10Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-12-02T09:31:19Z"
      },
      "sha": "e85abe92c7cc5380489c028479f0d42f91827efd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk1YTAxMDRmMmU5ODY5Nzk5ZGI4NGFkZDEwOGFlOGM1N2I1NmQzNjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/95a0104f2e9869799db84add108ae8c57b56d360",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/95a0104f2e9869799db84add108ae8c57b56d360",
      "tree": {
        "sha": "7aebd73afdaf2d16bedcf1d5a36173add43a1d8b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7aebd73afdaf2d16bedcf1d5a36173add43a1d8b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7aebd73afdaf2d16bedcf1d5a36173add43a1d8b\nparent e85abe92c7cc5380489c028479f0d42f91827efd\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1732787197 +0100\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1733220250 +0100\n\ntest: Add tests for directories in place of config files\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQNhGnriAxszUiur/PPjMIGdGh8RWQH8z8AEoJnKJXkBs4ETMNyznFNPkhqpz9AsB8E\nllpwPNnd1GQy1tT4Horw0=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e85abe92c7cc5380489c028479f0d42f91827efd",
          "sha": "e85abe92c7cc5380489c028479f0d42f91827efd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e85abe92c7cc5380489c028479f0d42f91827efd"
        }
      ],
      "message": "test: Add tests for directories in place of config files",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-12-03T10:04:10Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-11-28T09:46:37Z"
      },
      "sha": "95a0104f2e9869799db84add108ae8c57b56d360"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15506874751,
      "node_id": "HRFPE_lADOABII586c73o_zwAAAAOcSCF_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15506874751",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/95a0104f2e9869799db84add108ae8c57b56d360",
      "created_at": "2024-12-03T10:04:49Z"
    },
    {
      "event": "reviewed",
      "id": 2476098921,
      "node_id": "PRR_kwDOABII586TlkVp",
      "url": null,
      "actor": null,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 95a0104f2e9869799db84add108ae8c57b56d360. Looks good! Thanks for all your work on this breaking the changes down and making them simple.\r\n\r\nSince last review, more log newlines are removed, -norpccookiefile code is reorganized a little without changing behavior, combine_logs.py assert is improved, feature_config_args.py more consistently stops nodes after tests, and using -noconf now triggers an info log instead of a warning.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#pullrequestreview-2476098921",
      "submitted_at": "2024-12-03T15:49:07Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
    },
    {
      "event": "reviewed",
      "id": 2478197206,
      "node_id": "PRR_kwDOABII586TtknW",
      "url": null,
      "actor": null,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I find a lot of negations very confusing, but I guess it's existing functionality, so we might as well embrace it",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#pullrequestreview-2478197206",
      "submitted_at": "2024-12-04T12:25:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
    },
    {
      "event": "commented",
      "id": 2517591742,
      "node_id": "IC_kwDOABII586WD2a-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2517591742",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-04T14:25:09Z",
      "updated_at": "2024-12-04T14:25:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "utACK 95a0104f2e9869799db84add108ae8c57b56d360\r\nThe code seems better than before, though most of these negations seem confusing to me - but it wasn't introduced here.\r\nI have tested the negation of the parameters and reviewed most of the code - but couldn't meaningfully opine on the cookie related new tests, I will leave that to other reviewers.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#issuecomment-2517591742",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31212"
    },
    {
      "event": "commented",
      "id": 2518147266,
      "node_id": "IC_kwDOABII586WF-DC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2518147266",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-04T17:53:13Z",
      "updated_at": "2024-12-04T17:53:13Z",
      "author_association": "MEMBER",
      "body": "ACK 95a0104f2e9869799db84add108ae8c57b56d360",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#issuecomment-2518147266",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31212"
    },
    {
      "event": "merged",
      "id": 15530717308,
      "node_id": "ME_lADOABII586c73o_zwAAAAOds_B8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15530717308",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "11f68cc8108494c709bc6d6c0654c7e1d0261840",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11f68cc8108494c709bc6d6c0654c7e1d0261840",
      "created_at": "2024-12-04T18:20:58Z"
    },
    {
      "event": "closed",
      "id": 15530717377,
      "node_id": "CE_lADOABII586c73o_zwAAAAOds_DB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15530717377",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-04T18:20:58Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 15533007387,
      "node_id": "HRDE_lADOABII586c73o_zwAAAAOd1uIb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15533007387",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-04T21:58:53Z"
    },
    {
      "event": "commented",
      "id": 2519529282,
      "node_id": "IC_kwDOABII586WLPdC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2519529282",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-05T08:10:06Z",
      "updated_at": "2024-12-05T08:10:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "Further idea:\r\n\r\n`-noconnect=0` is interpreted as `-connect=1` which is interpreted as `-connect=0.0.0.1`",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#issuecomment-2519529282",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31212"
    },
    {
      "event": "commented",
      "id": 2519596178,
      "node_id": "IC_kwDOABII586WLfyS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2519596178",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-05T08:24:09Z",
      "updated_at": "2024-12-05T08:24:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Further idea:\r\n> \r\n> `-noconnect=0` is interpreted as `-connect=1` which is interpreted as `-connect=0.0.0.1`\r\n\r\n:sweat_smile: Good one! I'll create a \"Good first issue\" for it.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#issuecomment-2519596178",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31212"
    },
    {
      "event": "commented",
      "id": 2519655824,
      "node_id": "IC_kwDOABII586WLuWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2519655824",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-05T08:52:42Z",
      "updated_at": "2024-12-05T08:52:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "Done! #31426. @vasild let me know what you think of the issue description and proposed solution.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#issuecomment-2519655824",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31212"
    },
    {
      "event": "mentioned",
      "id": 15540452033,
      "node_id": "MEE_lADOABII586c73o_zwAAAAOeSHrB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15540452033",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-05T08:52:45Z"
    },
    {
      "event": "subscribed",
      "id": 15540452051,
      "node_id": "SE_lADOABII586c73o_zwAAAAOeSHrT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15540452051",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-05T08:52:45Z"
    },
    {
      "event": "referenced",
      "id": 15573533650,
      "node_id": "REFE_lADOABII586c73o_zwAAAAOgQUPS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15573533650",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "35000e34cf339e46d62b757c3723057724d23637",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35000e34cf339e46d62b757c3723057724d23637",
      "created_at": "2024-12-08T16:33:36Z"
    },
    {
      "event": "referenced",
      "id": 15974413126,
      "node_id": "REFE_lADOABII586c73o_zwAAAAO4JjNG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15974413126",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "230a439a4a86ef76f8ff775ae8d4606f53be2645",
      "commit_url": "https://api.github.com/repos/TheCharlatan/rust-bitcoinkernel/commits/230a439a4a86ef76f8ff775ae8d4606f53be2645",
      "created_at": "2025-01-17T09:56:59Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1832423387",
      "pull_request_review_id": 2420533755,
      "id": 1832423387,
      "node_id": "PRRC_kwDOABII585tOI_b",
      "diff_hunk": "@@ -93,7 +93,7 @@ static void SetupCliArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-netinfo\", \"Get network peer connection information from the remote server. An optional integer argument from 0 to 4 can be passed for different peers listings (default: 0). Pass \\\"help\\\" for detailed help documentation.\", ArgsManager::ALLOW_ANY, OptionsCategory::CLI_COMMANDS);\n \n     SetupChainParamsBaseOptions(argsman);\n-    argsman.AddArg(\"-color=<when>\", strprintf(\"Color setting for CLI output (default: %s). Valid values: always, auto (add color codes when standard output is connected to a terminal and OS is not WIN32), never.\", DEFAULT_COLOR_SETTING), ArgsManager::ALLOW_ANY | ArgsManager::DISALLOW_NEGATION, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-color=<when>\", strprintf(\"Color setting for CLI output (default: %s). Valid values: always, auto (add color codes when standard output is connected to a terminal and OS is not WIN32), never. Only applies in combination with -getinfo.\", DEFAULT_COLOR_SETTING), ArgsManager::ALLOW_ANY | ArgsManager::DISALLOW_NEGATION, OptionsCategory::OPTIONS);",
      "path": "src/bitcoin-cli.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "1cfbe0ca227222f598bb9ecdabd22880bffc172a",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good catch. I was confused initially wondering why doesn't color show up on explicitly setting this arg. `in combination` gives an impression that somehow both these args need to be passed together.\r\n```\r\nOnly applies to the output of -getinfo.\r\n```",
      "created_at": "2024-11-07T10:20:05Z",
      "updated_at": "2024-11-07T10:59:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1832423387",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1832423387"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": 96,
      "start_side": "LEFT",
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1832430228",
      "pull_request_review_id": 2420533755,
      "id": 1832430228,
      "node_id": "PRRC_kwDOABII585tOKqU",
      "diff_hunk": "@@ -144,10 +144,10 @@ static int AppInitRPC(int argc, char* argv[])\n         tfm::format(std::cerr, \"Error parsing command line arguments: %s\\n\", error);\n         return EXIT_FAILURE;\n     }\n-    if (argc < 2 || HelpRequested(gArgs) || gArgs.IsArgSet(\"-version\")) {\n+    if (argc < 2 || HelpRequested(gArgs) || gArgs.GetBoolArg(\"-version\", false)) {",
      "path": "src/bitcoin-cli.cpp",
      "position": 23,
      "original_position": 5,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "a8a41f1c967c00f011483725b73072aa8bdab184",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Again great catch. I noticed the difference in the output in master and this branch. \r\n\r\n```\r\n➜  bitcoin git:(master) ✗ bitcoinclireg -noversion\r\nBitcoin Core RPC client version v28.99.0-65b194193661\r\nCopyright (C) 2009-2024 The Bitcoin Core developers\r\n\r\nPlease contribute if you find Bitcoin Core useful. Visit\r\n<https://bitcoincore.org/> for further information about the software.\r\nThe source code is available from <https://github.com/bitcoin/bitcoin>.\r\n\r\nThis is experimental software.\r\nDistributed under the MIT software license, see the accompanying file COPYING\r\nor <https://opensource.org/licenses/MIT>\r\n\r\n➜  bitcoin git:(master) ✗ bitcoinclireg -noversion\r\nerror: too few parameters (need at least command)\r\n```\r\n\r\nWondering now maybe we should disallow negation for `version` altogether? The output of `noversion` now is too few params and I fail to see any benefit in allowing this (maybe I'm missing something here). Might as well throw this error?\r\n\r\n```\r\nNegating of -version is meaningless and therefore forbidden\r\n```",
      "created_at": "2024-11-07T10:24:00Z",
      "updated_at": "2024-11-07T10:59:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1832430228",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1832430228"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": 148,
      "original_start_line": 147,
      "start_side": "LEFT",
      "line": 148,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1832502588",
      "pull_request_review_id": 2420676640,
      "id": 1832502588,
      "node_id": "PRRC_kwDOABII585tOcU8",
      "diff_hunk": "@@ -144,10 +144,10 @@ static int AppInitRPC(int argc, char* argv[])\n         tfm::format(std::cerr, \"Error parsing command line arguments: %s\\n\", error);\n         return EXIT_FAILURE;\n     }\n-    if (argc < 2 || HelpRequested(gArgs) || gArgs.IsArgSet(\"-version\")) {\n+    if (argc < 2 || HelpRequested(gArgs) || gArgs.GetBoolArg(\"-version\", false)) {\n         std::string strUsage = CLIENT_NAME \" RPC client version \" + FormatFullVersion() + \"\\n\";\n \n-        if (gArgs.IsArgSet(\"-version\")) {\n+        if (gArgs.GetBoolArg(\"-version\", false)) {",
      "path": "src/bitcoin-cli.cpp",
      "position": 27,
      "original_position": 9,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "a8a41f1c967c00f011483725b73072aa8bdab184",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Could this commit be a scripted-diff?",
      "created_at": "2024-11-07T11:15:20Z",
      "updated_at": "2024-11-07T11:15:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1832502588",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1832502588"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 151,
      "original_line": 151,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1834366452",
      "pull_request_review_id": 2423738994,
      "id": 1834366452,
      "node_id": "PRRC_kwDOABII585tVjX0",
      "diff_hunk": "@@ -93,7 +93,7 @@ static void SetupCliArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-netinfo\", \"Get network peer connection information from the remote server. An optional integer argument from 0 to 4 can be passed for different peers listings (default: 0). Pass \\\"help\\\" for detailed help documentation.\", ArgsManager::ALLOW_ANY, OptionsCategory::CLI_COMMANDS);\n \n     SetupChainParamsBaseOptions(argsman);\n-    argsman.AddArg(\"-color=<when>\", strprintf(\"Color setting for CLI output (default: %s). Valid values: always, auto (add color codes when standard output is connected to a terminal and OS is not WIN32), never.\", DEFAULT_COLOR_SETTING), ArgsManager::ALLOW_ANY | ArgsManager::DISALLOW_NEGATION, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-color=<when>\", strprintf(\"Color setting for CLI output (default: %s). Valid values: always, auto (add color codes when standard output is connected to a terminal and OS is not WIN32), never. Only applies in combination with -getinfo.\", DEFAULT_COLOR_SETTING), ArgsManager::ALLOW_ANY | ArgsManager::DISALLOW_NEGATION, OptionsCategory::OPTIONS);",
      "path": "src/bitcoin-cli.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "1cfbe0ca227222f598bb9ecdabd22880bffc172a",
      "in_reply_to_id": 1832423387,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks! Applied.",
      "created_at": "2024-11-08T12:58:29Z",
      "updated_at": "2024-11-08T13:07:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1834366452",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1834366452"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": 96,
      "start_side": "LEFT",
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1834375774",
      "pull_request_review_id": 2423738994,
      "id": 1834375774,
      "node_id": "PRRC_kwDOABII585tVlpe",
      "diff_hunk": "@@ -144,10 +144,10 @@ static int AppInitRPC(int argc, char* argv[])\n         tfm::format(std::cerr, \"Error parsing command line arguments: %s\\n\", error);\n         return EXIT_FAILURE;\n     }\n-    if (argc < 2 || HelpRequested(gArgs) || gArgs.IsArgSet(\"-version\")) {\n+    if (argc < 2 || HelpRequested(gArgs) || gArgs.GetBoolArg(\"-version\", false)) {",
      "path": "src/bitcoin-cli.cpp",
      "position": 23,
      "original_position": 5,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "a8a41f1c967c00f011483725b73072aa8bdab184",
      "in_reply_to_id": 1832430228,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm relying on this comment from unmerged #16545:\r\nhttps://github.com/bitcoin/bitcoin/blob/b5ef85497436c3e9e60c760465d8991592efef07/src/common/args.h#L112-L114\r\n\r\nOne could imagine a user having a config file containing:\r\n```\r\nversion=1\r\n<...many lines...>\r\nnoversion=1\r\n```\r\nThe last occurrence of a bool option takes precedence. Agree it feels very contrived for this specific setting, but I'm trying to stick to the general principle of trying to allow negation if possible.",
      "created_at": "2024-11-08T13:05:08Z",
      "updated_at": "2024-11-08T13:07:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1834375774",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1834375774"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": 148,
      "original_start_line": 147,
      "start_side": "LEFT",
      "line": 148,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1834376280",
      "pull_request_review_id": 2423738994,
      "id": 1834376280,
      "node_id": "PRRC_kwDOABII585tVlxY",
      "diff_hunk": "@@ -144,10 +144,10 @@ static int AppInitRPC(int argc, char* argv[])\n         tfm::format(std::cerr, \"Error parsing command line arguments: %s\\n\", error);\n         return EXIT_FAILURE;\n     }\n-    if (argc < 2 || HelpRequested(gArgs) || gArgs.IsArgSet(\"-version\")) {\n+    if (argc < 2 || HelpRequested(gArgs) || gArgs.GetBoolArg(\"-version\", false)) {\n         std::string strUsage = CLIENT_NAME \" RPC client version \" + FormatFullVersion() + \"\\n\";\n \n-        if (gArgs.IsArgSet(\"-version\")) {\n+        if (gArgs.GetBoolArg(\"-version\", false)) {",
      "path": "src/bitcoin-cli.cpp",
      "position": 27,
      "original_position": 9,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "a8a41f1c967c00f011483725b73072aa8bdab184",
      "in_reply_to_id": 1832502588,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done!",
      "created_at": "2024-11-08T13:05:34Z",
      "updated_at": "2024-11-08T13:07:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1834376280",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1834376280"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 151,
      "original_line": 151,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1843140875",
      "pull_request_review_id": 2437584042,
      "id": 1843140875,
      "node_id": "PRRC_kwDOABII585t3BkL",
      "diff_hunk": "@@ -96,6 +96,11 @@ static bool g_generated_cookie = false;\n \n bool GenerateAuthCookie(std::string* cookie_out, std::optional<fs::perms> cookie_perms)\n {\n+    if (gArgs.IsArgNegated(\"-rpccookiefile\")) {",
      "path": "src/rpc/request.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "cf3e4edc803bf950f280b24c5283a2838c86faf6",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"args: Support -norpccookiefile\" (cf3e4edc803bf950f280b24c5283a2838c86faf6)\r\n\r\nI think having two separate accesses to the -rpccookiefile in different functions is fragile since `GetAuthCookieFile` will not do the right thing if called in a different context. It is also not taking advantage of GetPathArg's built in handling of negation. I think a change like:\r\n\r\n```diff\r\n--- a/src/rpc/request.cpp\r\n+++ b/src/rpc/request.cpp\r\n@@ -86,6 +86,7 @@ static const char* const COOKIEAUTH_FILE = \".cookie\";\r\n static fs::path GetAuthCookieFile(bool temp=false)\r\n {\r\n     fs::path arg = gArgs.GetPathArg(\"-rpccookiefile\", COOKIEAUTH_FILE);\r\n+    if (arg.empty()) return {}; // -norpccookiefile was specified\r\n     if (temp) {\r\n         arg += \".tmp\";\r\n     }\r\n@@ -96,11 +97,6 @@ static bool g_generated_cookie = false;\r\n \r\n bool GenerateAuthCookie(std::string* cookie_out, std::optional<fs::perms> cookie_perms)\r\n {\r\n-    if (gArgs.IsArgNegated(\"-rpccookiefile\")) {\r\n-        LogInfo(\"RPC authentication cookie file generation is disabled.\");\r\n-        return true;\r\n-    }\r\n-\r\n     const size_t COOKIE_SIZE = 32;\r\n     unsigned char rand_pwd[COOKIE_SIZE];\r\n     GetRandBytes(rand_pwd);\r\n@@ -111,6 +107,11 @@ bool GenerateAuthCookie(std::string* cookie_out, std::optional<fs::perms> cookie\r\n      */\r\n     std::ofstream file;\r\n     fs::path filepath_tmp = GetAuthCookieFile(true);\r\n+    if (filepath_tmp.empty()) {\r\n+        LogInfo(\"RPC authentication cookie file generation is disabled.\");\r\n+        return true;\r\n+    }\r\n+\r\n     file.open(filepath_tmp);\r\n     if (!file.is_open()) {\r\n         LogInfo(\"Unable to open cookie authentication file %s for writing\\n\", fs::PathToString(filepath_tmp));\r\n\r\n```\r\n\r\nwould make this safer and clearer.",
      "created_at": "2024-11-15T03:24:37Z",
      "updated_at": "2024-11-15T05:10:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1843140875",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1843140875"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 99,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1843179490",
      "pull_request_review_id": 2437584042,
      "id": 1843179490,
      "node_id": "PRRC_kwDOABII585t3K_i",
      "diff_hunk": "@@ -70,7 +70,7 @@ class HTTPRPCTimerInterface : public RPCTimerInterface\n \n \n /* Pre-base64-encoded authentication token */\n-static std::string strRPCUserColonPass;\n+static std::optional<std::string> strRPCUserColonPass;",
      "path": "src/httprpc.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "cf3e4edc803bf950f280b24c5283a2838c86faf6",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"args: Support -norpccookiefile\" (cf3e4edc803bf950f280b24c5283a2838c86faf6)\r\n\r\nThe changes to `httprpc.cpp` seem too complicated and I don't think they are safe because now that an empty `strRPCUserColonPass` string is allowed by `RPCAuthorized`, the `TimingResistantEqual` function can return true when the client provides an empty auth string.\r\n\r\nI also think changing `strRPCUserColonPass` to `std::optional` makes state more complicated and code more confusing to think about, even as it weakens the \"belt and suspenders\" check it is trying to preserve by intializing the variable at the top of the `InitRPCAuthentication` function and leaving it set even when the function fails.\r\n\r\nTo fix these issue, I would leave `strRPCUserColonPass` as `std::string` instead of making it into a `std::optional`, leave the `InitRPCAuthentication` function unchanged, and just change the `RPCAuthorized` function as follows:\r\n\r\n```diff\r\n--- a/src/httprpc.cpp\r\n+++ b/src/httprpc.cpp\r\n@@ -134,8 +134,6 @@ static bool multiUserAuthorized(std::string strUserPass)\r\n \r\n static bool RPCAuthorized(const std::string& strAuth, std::string& strAuthUsernameOut)\r\n {\r\n-    if (strRPCUserColonPass.empty()) // Belt-and-suspenders measure if InitRPCAuthentication was not called\r\n-        return false;\r\n     if (strAuth.substr(0, 6) != \"Basic \")\r\n         return false;\r\n     std::string_view strUserPass64 = TrimStringView(std::string_view{strAuth}.substr(6));\r\n@@ -148,7 +146,8 @@ static bool RPCAuthorized(const std::string& strAuth, std::string& strAuthUserna\r\n         strAuthUsernameOut = strUserPass.substr(0, strUserPass.find(':'));\r\n \r\n     //Check if authorized under single-user field\r\n-    if (TimingResistantEqual(strUserPass, strRPCUserColonPass)) {\r\n+    // strRPCUserColonPass is empty when -norpccookiefile is specified\r\n+    if (!strRPCUserColonPass.empty() && TimingResistantEqual(strUserPass, strRPCUserColonPass)) {\r\n         return true;\r\n     }\r\n     return multiUserAuthorized(strUserPass);\r\n\r\n```\r\n\r\nI don't think it is worth complicating the code so much just to support keeping a belt and suspender check that is no longer valid now that `strRPCUserColonPass` being empty is a valid state.",
      "created_at": "2024-11-15T04:37:55Z",
      "updated_at": "2024-11-15T05:10:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1843179490",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1843179490"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1843188789",
      "pull_request_review_id": 2437584042,
      "id": 1843188789,
      "node_id": "PRRC_kwDOABII585t3NQ1",
      "diff_hunk": "@@ -129,9 +129,11 @@ bool ArgsManager::ReadConfigFiles(std::string& error, bool ignore_invalid_keys)\n \n     const auto conf_path{GetConfigFilePath()};\n     std::ifstream stream{conf_path};",
      "path": "src/common/config.cpp",
      "position": null,
      "original_position": 3,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "77c8a538b7164f8b65576600eb4668ac160f6b14",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"args: Properly support -noconf and catch directories\" (77c8a538b7164f8b65576600eb4668ac160f6b14)\r\n\r\nIt doesn't seem good to try to open a file with an empty path. This behavior doesn't seem well defined and the call will unnecessarily be passed down to the os when it shouldn't be. I think it would also clarify the code and avoid the need to add a second IsArgNegated call if this checked for an empty path. Would suggest:\r\n\r\n```c++\r\n    const auto conf_path{GetConfigFilePath()};\r\n    std::ifstream stream;\r\n    if (!conf_path.empty()) { // path is empty when -noconf is specified\r\n        stream = std::ifstream{conf_path};\r\n        // Calling peek() on ifstreams opened on directories flags them as !good().\r\n        (void)stream.peek();\r\n\r\n        // not ok to have a config file specified that cannot be opened\r\n        if (IsArgSet(\"-conf\") && !stream.good()) {\r\n            error = strprintf(\"specified config file \\\"%s\\\" could not be opened.\", fs::PathToString(conf_path));\r\n            return false;\r\n        }\r\n    }\r\n```",
      "created_at": "2024-11-15T04:55:49Z",
      "updated_at": "2024-11-15T05:10:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1843188789",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1843188789"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 136,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1847326060",
      "pull_request_review_id": 2443807751,
      "id": 1847326060,
      "node_id": "PRRC_kwDOABII585uG_Vs",
      "diff_hunk": "@@ -96,6 +96,11 @@ static bool g_generated_cookie = false;\n \n bool GenerateAuthCookie(std::string* cookie_out, std::optional<fs::perms> cookie_perms)\n {\n+    if (gArgs.IsArgNegated(\"-rpccookiefile\")) {",
      "path": "src/rpc/request.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "cf3e4edc803bf950f280b24c5283a2838c86faf6",
      "in_reply_to_id": 1843140875,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks! Implemented in latest push with some variation.",
      "created_at": "2024-11-18T21:53:21Z",
      "updated_at": "2024-11-18T22:01:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1847326060",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1847326060"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 99,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1847328295",
      "pull_request_review_id": 2443807751,
      "id": 1847328295,
      "node_id": "PRRC_kwDOABII585uG_4n",
      "diff_hunk": "@@ -70,7 +70,7 @@ class HTTPRPCTimerInterface : public RPCTimerInterface\n \n \n /* Pre-base64-encoded authentication token */\n-static std::string strRPCUserColonPass;\n+static std::optional<std::string> strRPCUserColonPass;",
      "path": "src/httprpc.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "cf3e4edc803bf950f280b24c5283a2838c86faf6",
      "in_reply_to_id": 1843179490,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks for catching this. Was not my intention to leave the door wide open when users pass `-norpccookiefile`. :man_facepalming: \r\nKept a belt & suspenders `bool` in latest push.",
      "created_at": "2024-11-18T21:55:31Z",
      "updated_at": "2024-11-19T19:52:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1847328295",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1847328295"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1847330326",
      "pull_request_review_id": 2443807751,
      "id": 1847330326,
      "node_id": "PRRC_kwDOABII585uHAYW",
      "diff_hunk": "@@ -129,9 +129,11 @@ bool ArgsManager::ReadConfigFiles(std::string& error, bool ignore_invalid_keys)\n \n     const auto conf_path{GetConfigFilePath()};\n     std::ifstream stream{conf_path};",
      "path": "src/common/config.cpp",
      "position": null,
      "original_position": 3,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "77c8a538b7164f8b65576600eb4668ac160f6b14",
      "in_reply_to_id": 1843188789,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed in latest push. Also switched from `ifstream::peek()` to `fs::is_directory()` after verifying the latter returns true for directory-symlinks as well.",
      "created_at": "2024-11-18T21:57:21Z",
      "updated_at": "2024-11-18T22:01:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1847330326",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1847330326"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 136,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850720954",
      "pull_request_review_id": 2449278047,
      "id": 1850720954,
      "node_id": "PRRC_kwDOABII585uT8K6",
      "diff_hunk": "@@ -94,7 +94,7 @@ static void SetupCliArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-netinfo\", strprintf(\"Get network peer connection information from the remote server. An optional argument from 0 to %d can be passed for different peers listings (default: 0). If a non-zero value is passed, an additional \\\"outonly\\\" (or \\\"o\\\") argument can be passed to see outbound peers only. Pass \\\"help\\\" (or \\\"h\\\") for detailed help documentation.\", NETINFO_MAX_LEVEL), ArgsManager::ALLOW_ANY, OptionsCategory::CLI_COMMANDS);\n \n     SetupChainParamsBaseOptions(argsman);\n-    argsman.AddArg(\"-color=<when>\", strprintf(\"Color setting for CLI output (default: %s). Valid values: always, auto (add color codes when standard output is connected to a terminal and OS is not WIN32), never.\", DEFAULT_COLOR_SETTING), ArgsManager::ALLOW_ANY | ArgsManager::DISALLOW_NEGATION, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-color=<when>\", strprintf(\"Color setting for CLI output (default: %s). Valid values: always, auto (add color codes when standard output is connected to a terminal and OS is not WIN32), never. Only applies to the output of -getinfo.\", DEFAULT_COLOR_SETTING), ArgsManager::ALLOW_ANY | ArgsManager::DISALLOW_NEGATION, OptionsCategory::OPTIONS);",
      "path": "src/bitcoin-cli.cpp",
      "position": 14,
      "original_position": 5,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "e8a2054edc814b2c4661b96a3dce91da9be68fa4",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "slightly unrelated: Checking the different options, it's not always trivial to assess what negation would mean, but\r\n```C++\r\n    if (gArgs.IsArgSet(\"-color\")) {\r\n        const std::string color{gArgs.GetArg(\"-color\", DEFAULT_COLOR_SETTING)};\r\n        if (color == \"always\") {\r\n            should_colorize = true;\r\n        } else if (color == \"never\") {\r\n            should_colorize = false;\r\n        } else if (color != \"auto\") {\r\n            throw std::runtime_error(\"Invalid value for -color option. Valid values: always, auto, never.\");\r\n        }\r\n    }\r\n```\r\nIndicated that a `-nocolor` == `-color=never` could make sense.\r\nOr is the `ArgsManager::DISALLOW_NEGATION` meant to discourage people from requesting that :D?",
      "created_at": "2024-11-20T17:24:30Z",
      "updated_at": "2024-11-20T18:25:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1850720954",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850720954"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 97,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850737479",
      "pull_request_review_id": 2449278047,
      "id": 1850737479,
      "node_id": "PRRC_kwDOABII585uUANH",
      "diff_hunk": "",
      "path": "src/bitcoin-cli.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "d555cfbd44060ee09c217cf148529502a09c4837",
      "original_commit_id": "f02c4c020caf8ea97224105cc610a0e1dc62571b",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "in `scripted-diff: Avoid printing version information for -noversion`:\r\n\r\nNit: the replacement doesn't need any escapes, if you edit again, consider simplifying:\r\n```bash\r\n-BEGIN VERIFY SCRIPT-\r\nsed -i --regexp-extended 's/\\b(gArgs|args)\\.IsArgSet\\(\"-version\"\\)/\\1.GetBoolArg(\"-version\", false)/g' $(git grep -l '-version')\r\n-END VERIFY SCRIPT-\r\n```",
      "created_at": "2024-11-20T17:37:57Z",
      "updated_at": "2024-11-20T18:25:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1850737479",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850737479"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850740240",
      "pull_request_review_id": 2449278047,
      "id": 1850740240,
      "node_id": "PRRC_kwDOABII585uUA4Q",
      "diff_hunk": "@@ -105,11 +105,11 @@ static int AppInitRawTx(int argc, char* argv[])\n \n     fCreateBlank = gArgs.GetBoolArg(\"-create\", false);\n \n-    if (argc < 2 || HelpRequested(gArgs) || gArgs.IsArgSet(\"-version\")) {\n+    if (argc < 2 || HelpRequested(gArgs) || gArgs.GetBoolArg(\"-version\", false)) {",
      "path": "src/bitcoin-tx.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "f02c4c020caf8ea97224105cc610a0e1dc62571b",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: since we're using all values later (here and in a few other examples below), we might as well leave this as `IsArgSet` at the top - it would simplify the PR diff, but make the scripted diff more complicated. Will leave it for you to decide, don't have strong feelings either way.",
      "created_at": "2024-11-20T17:40:19Z",
      "updated_at": "2024-11-20T18:25:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1850740240",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850740240"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 108,
      "original_line": 108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850750700",
      "pull_request_review_id": 2449278047,
      "id": 1850750700,
      "node_id": "PRRC_kwDOABII585uUDbs",
      "diff_hunk": "@@ -483,7 +483,7 @@ void SetupServerArgs(ArgsManager& argsman, bool can_listen_ipc)\n     argsman.AddArg(\"-blocksonly\", strprintf(\"Whether to reject transactions from network peers. Disables automatic broadcast and rebroadcast of transactions, unless the source peer has the 'forcerelay' permission. RPC transactions are not affected. (default: %u)\", DEFAULT_BLOCKSONLY), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-coinstatsindex\", strprintf(\"Maintain coinstats index used by the gettxoutsetinfo RPC (default: %u)\", DEFAULT_COINSTATSINDEX), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-conf=<file>\", strprintf(\"Specify path to read-only configuration file. Relative paths will be prefixed by datadir location (only useable from command line, not configuration file) (default: %s)\", BITCOIN_CONF_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n-    argsman.AddArg(\"-datadir=<dir>\", \"Specify data directory\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-datadir=<dir>\", \"Specify data directory\", ArgsManager::ALLOW_ANY | ArgsManager::DISALLOW_NEGATION, OptionsCategory::OPTIONS);",
      "path": "src/init.cpp",
      "position": 14,
      "original_position": 5,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "4ccc53aff7b16c883c8222443645cd2ba2adacfe",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Do these same arguments apply to `blocksdir` & `walletdir`?",
      "created_at": "2024-11-20T17:49:10Z",
      "updated_at": "2024-11-20T18:25:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1850750700",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850750700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 488,
      "original_line": 488,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850760249",
      "pull_request_review_id": 2449278047,
      "id": 1850760249,
      "node_id": "PRRC_kwDOABII585uUFw5",
      "diff_hunk": "@@ -294,21 +296,26 @@ static bool InitRPCAuthentication()\n {\n     if (gArgs.GetArg(\"-rpcpassword\", \"\") == \"\")\n     {\n-        LogInfo(\"Using random cookie authentication.\\n\");\n-\n         std::optional<fs::perms> cookie_perms{std::nullopt};\n         auto cookie_perms_arg{gArgs.GetArg(\"-rpccookieperms\")};\n         if (cookie_perms_arg) {\n             auto perm_opt = InterpretPermString(*cookie_perms_arg);\n             if (!perm_opt) {\n-                LogInfo(\"Invalid -rpccookieperms=%s; must be one of 'owner', 'group', or 'all'.\\n\", *cookie_perms_arg);\n+                LogError(\"Invalid -rpccookieperms=%s; must be one of 'owner', 'group', or 'all'.\\n\", *cookie_perms_arg);",
      "path": "src/httprpc.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "80fcd0473a0483b8f9e91bf9853c62a6831f15af",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Since you edit these already, could you please check if the trailing newline is still needed?",
      "created_at": "2024-11-20T17:57:37Z",
      "updated_at": "2024-11-20T18:25:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1850760249",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850760249"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 304,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850762988",
      "pull_request_review_id": 2449278047,
      "id": 1850762988,
      "node_id": "PRRC_kwDOABII585uUGbs",
      "diff_hunk": "@@ -148,7 +149,8 @@ static bool RPCAuthorized(const std::string& strAuth, std::string& strAuthUserna\n         strAuthUsernameOut = strUserPass.substr(0, strUserPass.find(':'));\n \n     //Check if authorized under single-user field\n-    if (TimingResistantEqual(strUserPass, strRPCUserColonPass)) {\n+    // strRPCUserColonPass is empty when -norpccookiefile is specified",
      "path": "src/httprpc.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "80fcd0473a0483b8f9e91bf9853c62a6831f15af",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "super-nit: formatting seems a bit off (whitespace and missing trailing full stop in first line)",
      "created_at": "2024-11-20T17:59:46Z",
      "updated_at": "2024-11-20T18:25:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1850762988",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850762988"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": 151,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850768609",
      "pull_request_review_id": 2449278047,
      "id": 1850768609,
      "node_id": "PRRC_kwDOABII585uUHzh",
      "diff_hunk": "@@ -294,21 +296,26 @@ static bool InitRPCAuthentication()\n {\n     if (gArgs.GetArg(\"-rpcpassword\", \"\") == \"\")\n     {\n-        LogInfo(\"Using random cookie authentication.\\n\");\n-\n         std::optional<fs::perms> cookie_perms{std::nullopt};\n         auto cookie_perms_arg{gArgs.GetArg(\"-rpccookieperms\")};\n         if (cookie_perms_arg) {\n             auto perm_opt = InterpretPermString(*cookie_perms_arg);\n             if (!perm_opt) {\n-                LogInfo(\"Invalid -rpccookieperms=%s; must be one of 'owner', 'group', or 'all'.\\n\", *cookie_perms_arg);\n+                LogError(\"Invalid -rpccookieperms=%s; must be one of 'owner', 'group', or 'all'.\\n\", *cookie_perms_arg);\n                 return false;\n             }\n             cookie_perms = *perm_opt;\n         }\n \n-        if (!GenerateAuthCookie(&strRPCUserColonPass, cookie_perms)) {\n-            return false;\n+        if (std::optional<bool> result{GenerateAuthCookie(&strRPCUserColonPass, cookie_perms)}) {",
      "path": "src/httprpc.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "80fcd0473a0483b8f9e91bf9853c62a6831f15af",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You gotta' love these 3-state-booleans :)\r\n\r\nnit: To reduce the noise, consider simplified to either\r\n```suggestion\r\n        if (std::optional result{GenerateAuthCookie(&strRPCUserColonPass, cookie_perms)}) {\r\n```\r\nor\r\n```suggestion\r\n        if (auto result{GenerateAuthCookie(&strRPCUserColonPass, cookie_perms)}) {\r\n```",
      "created_at": "2024-11-20T18:03:29Z",
      "updated_at": "2024-11-20T18:25:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1850768609",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850768609"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 310,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850771750",
      "pull_request_review_id": 2449278047,
      "id": 1850771750,
      "node_id": "PRRC_kwDOABII585uUIkm",
      "diff_hunk": "@@ -294,21 +296,26 @@ static bool InitRPCAuthentication()\n {\n     if (gArgs.GetArg(\"-rpcpassword\", \"\") == \"\")\n     {\n-        LogInfo(\"Using random cookie authentication.\\n\");\n-\n         std::optional<fs::perms> cookie_perms{std::nullopt};\n         auto cookie_perms_arg{gArgs.GetArg(\"-rpccookieperms\")};\n         if (cookie_perms_arg) {\n             auto perm_opt = InterpretPermString(*cookie_perms_arg);\n             if (!perm_opt) {\n-                LogInfo(\"Invalid -rpccookieperms=%s; must be one of 'owner', 'group', or 'all'.\\n\", *cookie_perms_arg);\n+                LogError(\"Invalid -rpccookieperms=%s; must be one of 'owner', 'group', or 'all'.\\n\", *cookie_perms_arg);\n                 return false;\n             }\n             cookie_perms = *perm_opt;\n         }\n \n-        if (!GenerateAuthCookie(&strRPCUserColonPass, cookie_perms)) {\n-            return false;\n+        if (std::optional<bool> result{GenerateAuthCookie(&strRPCUserColonPass, cookie_perms)}) {\n+            if (*result) {\n+                LogInfo(\"Using random cookie authentication.\\n\");\n+            } else {\n+                // Failure reason message expected to already have been logged.\n+                return false;\n+            }\n+        } else {\n+            LogInfo(\"RPC authentication cookie file generation is disabled.\");\n         }\n     } else {\n         LogPrintf(\"Config options rpcuser and rpcpassword will soon be deprecated. Locally-run instances may remove rpcuser to use cookie-based auth, or may be replaced with rpcauth. Please see share/rpcauth for rpcauth auth generation.\\n\");",
      "path": "src/httprpc.cpp",
      "position": 49,
      "original_position": 58,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "80fcd0473a0483b8f9e91bf9853c62a6831f15af",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "this seems like a slight behavior change: previously when `GenerateAuthCookie` returned `true`, this was logged, now it seems to me it may not be (haven't tried the code)",
      "created_at": "2024-11-20T18:05:52Z",
      "updated_at": "2024-11-20T18:25:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1850771750",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850771750"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 317,
      "original_line": 317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850774218",
      "pull_request_review_id": 2449278047,
      "id": 1850774218,
      "node_id": "PRRC_kwDOABII585uUJLK",
      "diff_hunk": "@@ -164,6 +164,9 @@ def run_test(self):\n         self.log.info(\"Test connecting with non-existing RPC cookie file\")\n         assert_raises_process_error(1, \"Could not locate RPC credentials\", self.nodes[0].cli('-rpccookiefile=does-not-exist', '-rpcpassword=').echo)\n \n+        self.log.info(\"Test connecting without RPC cookie file and with password arg\")\n+        assert_equal(BLOCKS, self.nodes[0].cli('-norpccookiefile', '-rpcuser=' + user, '-rpcpassword=' + password).getblockcount())",
      "path": "test/functional/interface_bitcoin_cli.py",
      "position": null,
      "original_position": 5,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "d412946cc235e026dca67a2e3176c1555441bd15",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: we might as well use f-strings here:\r\n```suggestion\r\n        assert_equal(BLOCKS, self.nodes[0].cli('-norpccookiefile', f'-rpcuser={user}', f'-rpcpassword={password}').getblockcount())\r\n```",
      "created_at": "2024-11-20T18:08:18Z",
      "updated_at": "2024-11-20T18:25:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1850774218",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850774218"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 168,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850776235",
      "pull_request_review_id": 2449278047,
      "id": 1850776235,
      "node_id": "PRRC_kwDOABII585uUJqr",
      "diff_hunk": "@@ -121,6 +121,29 @@ def test_perm(perm: Optional[str]):\n         for perm in [\"owner\", \"group\", \"all\"]:\n             test_perm(perm)\n \n+    def test_norpccookiefile(self, node0_cookie_file_path):\n+        assert not self.nodes[0].is_node_stopped(), \"We expect previous test to have left the node running\"\n+        assert node0_cookie_file_path.exists()\n+        self.stop_node(0)\n+        self.stop_node(1)\n+        assert not node0_cookie_file_path.exists()\n+\n+        self.log.info('Starting with -norpccookiefile')\n+        # Start, but don't wait for RPC connection as TestNode.wait_for_rpc_connection() requires the cookie.\n+        with self.nodes[0].busy_wait_for_debug_log([b'init message: Done loading']):\n+            # Pass -rpccookieperms for bonus code coverage of warning\n+            self.nodes[0].start(extra_args=[f\"-norpccookiefile\", \"-rpccookieperms=owner\"])",
      "path": "test/functional/rpc_users.py",
      "position": null,
      "original_position": 31,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "d412946cc235e026dca67a2e3176c1555441bd15",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: we don't actually need f-string here:\r\n```suggestion\r\n            self.nodes[0].start(extra_args=[\"-norpccookiefile\", \"-rpccookieperms=owner\"])\r\n```",
      "created_at": "2024-11-20T18:09:59Z",
      "updated_at": "2024-11-20T18:25:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1850776235",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850776235"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 135,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850778259",
      "pull_request_review_id": 2449278047,
      "id": 1850778259,
      "node_id": "PRRC_kwDOABII585uUKKT",
      "diff_hunk": "",
      "path": "test/functional/interface_bitcoin_cli.py",
      "position": 1,
      "original_position": 1,
      "commit_id": "d555cfbd44060ee09c217cf148529502a09c4837",
      "original_commit_id": "d412946cc235e026dca67a2e3176c1555441bd15",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "in `test: -norpccookiefile`:\r\n\r\nWhat's the reason for separating the test from the impl? I would understand if this were before the fix (we could check that it reproduces the desired behavior and fails - but we can't do that here since all tests should fail)",
      "created_at": "2024-11-20T18:11:50Z",
      "updated_at": "2024-11-20T18:25:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1850778259",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850778259"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850779435",
      "pull_request_review_id": 2449278047,
      "id": 1850779435,
      "node_id": "PRRC_kwDOABII585uUKcr",
      "diff_hunk": "",
      "path": "src/common/config.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "d555cfbd44060ee09c217cf148529502a09c4837",
      "original_commit_id": "1607d8d1a9015a7b95b5cb7a14b7dd83704bafb2",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in `args: Properly support -noconf and catch directories` - typo in commit message",
      "created_at": "2024-11-20T18:12:53Z",
      "updated_at": "2024-11-20T18:25:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1850779435",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850779435"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850782398",
      "pull_request_review_id": 2449278047,
      "id": 1850782398,
      "node_id": "PRRC_kwDOABII585uULK-",
      "diff_hunk": "@@ -128,13 +129,21 @@ bool ArgsManager::ReadConfigFiles(std::string& error, bool ignore_invalid_keys)\n     }\n \n     const auto conf_path{GetConfigFilePath()};\n-    std::ifstream stream{conf_path};\n+    std::ifstream stream;\n+    if (!conf_path.empty()) { // path is empty when -noconf is specified\n+        if (fs::is_directory(conf_path)) {\n+            error = strprintf(\"config file \\\"%s\\\" is a directory.\", fs::PathToString(conf_path));\n+            return false;\n+        }\n+        stream = std::ifstream{conf_path};\n \n-    // not ok to have a config file specified that cannot be opened\n-    if (IsArgSet(\"-conf\") && !stream.good()) {\n-        error = strprintf(\"specified config file \\\"%s\\\" could not be opened.\", fs::PathToString(conf_path));\n-        return false;\n+        // not ok to have a config file specified that cannot be opened",
      "path": "src/common/config.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "1607d8d1a9015a7b95b5cb7a14b7dd83704bafb2",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: double negation makes it more complicated than need be. If you insist on having a comment:\r\n```suggestion\r\n        // Config file must be accessible\r\n```",
      "created_at": "2024-11-20T18:15:47Z",
      "updated_at": "2024-11-20T18:25:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1850782398",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850782398"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 140,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850785285",
      "pull_request_review_id": 2449278047,
      "id": 1850785285,
      "node_id": "PRRC_kwDOABII585uUL4F",
      "diff_hunk": "@@ -125,8 +125,10 @@ bool StartLogging(const ArgsManager& args)\n     if (fs::exists(config_file_path)) {\n         LogPrintf(\"Config file: %s\\n\", fs::PathToString(config_file_path));\n     } else if (args.IsArgSet(\"-conf\")) {\n-        // Warn if no conf file exists at path provided by user\n-        InitWarning(strprintf(_(\"The specified config file %s does not exist\"), fs::PathToString(config_file_path)));\n+        if (!args.IsArgNegated(\"-conf\")) {\n+            // Warn if no conf file exists at path provided by user",
      "path": "src/init/common.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "1607d8d1a9015a7b95b5cb7a14b7dd83704bafb2",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "not sure what this comments adds that the code doesn't already explain",
      "created_at": "2024-11-20T18:18:20Z",
      "updated_at": "2024-11-20T18:25:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1850785285",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850785285"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850786120",
      "pull_request_review_id": 2449278047,
      "id": 1850786120,
      "node_id": "PRRC_kwDOABII585uUMFI",
      "diff_hunk": "",
      "path": "test/functional/feature_config_args.py",
      "position": 1,
      "original_position": 1,
      "commit_id": "d555cfbd44060ee09c217cf148529502a09c4837",
      "original_commit_id": "d555cfbd44060ee09c217cf148529502a09c4837",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "in `test: Add tests for directory in place of config files, -noconf`:\r\n\r\nSame as with the other test, I think it belongs with the related modification",
      "created_at": "2024-11-20T18:19:00Z",
      "updated_at": "2024-11-20T18:25:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1850786120",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1850786120"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851027198",
      "pull_request_review_id": 2449770873,
      "id": 1851027198,
      "node_id": "PRRC_kwDOABII585uVG7-",
      "diff_hunk": "@@ -94,7 +94,7 @@ static void SetupCliArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-netinfo\", strprintf(\"Get network peer connection information from the remote server. An optional argument from 0 to %d can be passed for different peers listings (default: 0). If a non-zero value is passed, an additional \\\"outonly\\\" (or \\\"o\\\") argument can be passed to see outbound peers only. Pass \\\"help\\\" (or \\\"h\\\") for detailed help documentation.\", NETINFO_MAX_LEVEL), ArgsManager::ALLOW_ANY, OptionsCategory::CLI_COMMANDS);\n \n     SetupChainParamsBaseOptions(argsman);\n-    argsman.AddArg(\"-color=<when>\", strprintf(\"Color setting for CLI output (default: %s). Valid values: always, auto (add color codes when standard output is connected to a terminal and OS is not WIN32), never.\", DEFAULT_COLOR_SETTING), ArgsManager::ALLOW_ANY | ArgsManager::DISALLOW_NEGATION, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-color=<when>\", strprintf(\"Color setting for CLI output (default: %s). Valid values: always, auto (add color codes when standard output is connected to a terminal and OS is not WIN32), never. Only applies to the output of -getinfo.\", DEFAULT_COLOR_SETTING), ArgsManager::ALLOW_ANY | ArgsManager::DISALLOW_NEGATION, OptionsCategory::OPTIONS);",
      "path": "src/bitcoin-cli.cpp",
      "position": 14,
      "original_position": 5,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "e8a2054edc814b2c4661b96a3dce91da9be68fa4",
      "in_reply_to_id": 1850720954,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Or is the `ArgsManager::DISALLOW_NEGATION` meant to discourage people from requesting that :D?\r\n\r\nIndeed, although I agree with `-nocolor` potentially equaling `-color=never`, it is flagged as forbidden and therefore the process is stopped before reaching the quoted code. I'm a bit hesitant to overrule the prior intent of disallowing it.",
      "created_at": "2024-11-20T21:51:01Z",
      "updated_at": "2024-11-20T21:51:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1851027198",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851027198"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 97,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851034724",
      "pull_request_review_id": 2449782562,
      "id": 1851034724,
      "node_id": "PRRC_kwDOABII585uVIxk",
      "diff_hunk": "@@ -105,11 +105,11 @@ static int AppInitRawTx(int argc, char* argv[])\n \n     fCreateBlank = gArgs.GetBoolArg(\"-create\", false);\n \n-    if (argc < 2 || HelpRequested(gArgs) || gArgs.IsArgSet(\"-version\")) {\n+    if (argc < 2 || HelpRequested(gArgs) || gArgs.GetBoolArg(\"-version\", false)) {",
      "path": "src/bitcoin-tx.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "f02c4c020caf8ea97224105cc610a0e1dc62571b",
      "in_reply_to_id": 1850740240,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`IsArgSet` would be true when the user passes `-noversion`, so the `if`-block would be entered, which is intended to be avoided in this PR.",
      "created_at": "2024-11-20T21:58:53Z",
      "updated_at": "2024-11-20T21:58:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1851034724",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851034724"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 108,
      "original_line": 108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851054194",
      "pull_request_review_id": 2449812285,
      "id": 1851054194,
      "node_id": "PRRC_kwDOABII585uVNhy",
      "diff_hunk": "",
      "path": "src/common/config.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "d555cfbd44060ee09c217cf148529502a09c4837",
      "original_commit_id": "1607d8d1a9015a7b95b5cb7a14b7dd83704bafb2",
      "in_reply_to_id": 1850779435,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I fail to see the typo, mind pointing it out?",
      "created_at": "2024-11-20T22:19:10Z",
      "updated_at": "2024-11-20T22:19:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1851054194",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851054194"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851065265",
      "pull_request_review_id": 2449829061,
      "id": 1851065265,
      "node_id": "PRRC_kwDOABII585uVQOx",
      "diff_hunk": "@@ -483,7 +483,7 @@ void SetupServerArgs(ArgsManager& argsman, bool can_listen_ipc)\n     argsman.AddArg(\"-blocksonly\", strprintf(\"Whether to reject transactions from network peers. Disables automatic broadcast and rebroadcast of transactions, unless the source peer has the 'forcerelay' permission. RPC transactions are not affected. (default: %u)\", DEFAULT_BLOCKSONLY), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-coinstatsindex\", strprintf(\"Maintain coinstats index used by the gettxoutsetinfo RPC (default: %u)\", DEFAULT_COINSTATSINDEX), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-conf=<file>\", strprintf(\"Specify path to read-only configuration file. Relative paths will be prefixed by datadir location (only useable from command line, not configuration file) (default: %s)\", BITCOIN_CONF_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n-    argsman.AddArg(\"-datadir=<dir>\", \"Specify data directory\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-datadir=<dir>\", \"Specify data directory\", ArgsManager::ALLOW_ANY | ArgsManager::DISALLOW_NEGATION, OptionsCategory::OPTIONS);",
      "path": "src/init.cpp",
      "position": 14,
      "original_position": 5,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "4ccc53aff7b16c883c8222443645cd2ba2adacfe",
      "in_reply_to_id": 1850750700,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Potentially yes, but I'm trying to keep the scope of the PR to the args I discovered here: https://github.com/bitcoin/bitcoin/pull/16545#pullrequestreview-2316714013\r\n\r\nOpen to exploring it in a follow-up!",
      "created_at": "2024-11-20T22:31:25Z",
      "updated_at": "2024-11-20T22:31:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1851065265",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851065265"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 488,
      "original_line": 488,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851068380",
      "pull_request_review_id": 2449833279,
      "id": 1851068380,
      "node_id": "PRRC_kwDOABII585uVQ_c",
      "diff_hunk": "@@ -294,21 +296,26 @@ static bool InitRPCAuthentication()\n {\n     if (gArgs.GetArg(\"-rpcpassword\", \"\") == \"\")\n     {\n-        LogInfo(\"Using random cookie authentication.\\n\");\n-\n         std::optional<fs::perms> cookie_perms{std::nullopt};\n         auto cookie_perms_arg{gArgs.GetArg(\"-rpccookieperms\")};\n         if (cookie_perms_arg) {\n             auto perm_opt = InterpretPermString(*cookie_perms_arg);\n             if (!perm_opt) {\n-                LogInfo(\"Invalid -rpccookieperms=%s; must be one of 'owner', 'group', or 'all'.\\n\", *cookie_perms_arg);\n+                LogError(\"Invalid -rpccookieperms=%s; must be one of 'owner', 'group', or 'all'.\\n\", *cookie_perms_arg);\n                 return false;\n             }\n             cookie_perms = *perm_opt;\n         }\n \n-        if (!GenerateAuthCookie(&strRPCUserColonPass, cookie_perms)) {\n-            return false;\n+        if (std::optional<bool> result{GenerateAuthCookie(&strRPCUserColonPass, cookie_perms)}) {",
      "path": "src/httprpc.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "80fcd0473a0483b8f9e91bf9853c62a6831f15af",
      "in_reply_to_id": 1850768609,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I prefer documenting the type.",
      "created_at": "2024-11-20T22:34:34Z",
      "updated_at": "2024-11-20T22:34:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1851068380",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851068380"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 310,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851080067",
      "pull_request_review_id": 2449848384,
      "id": 1851080067,
      "node_id": "PRRC_kwDOABII585uVT2D",
      "diff_hunk": "@@ -294,21 +296,26 @@ static bool InitRPCAuthentication()\n {\n     if (gArgs.GetArg(\"-rpcpassword\", \"\") == \"\")\n     {\n-        LogInfo(\"Using random cookie authentication.\\n\");\n-\n         std::optional<fs::perms> cookie_perms{std::nullopt};\n         auto cookie_perms_arg{gArgs.GetArg(\"-rpccookieperms\")};\n         if (cookie_perms_arg) {\n             auto perm_opt = InterpretPermString(*cookie_perms_arg);\n             if (!perm_opt) {\n-                LogInfo(\"Invalid -rpccookieperms=%s; must be one of 'owner', 'group', or 'all'.\\n\", *cookie_perms_arg);\n+                LogError(\"Invalid -rpccookieperms=%s; must be one of 'owner', 'group', or 'all'.\\n\", *cookie_perms_arg);\n                 return false;\n             }\n             cookie_perms = *perm_opt;\n         }\n \n-        if (!GenerateAuthCookie(&strRPCUserColonPass, cookie_perms)) {\n-            return false;\n+        if (std::optional<bool> result{GenerateAuthCookie(&strRPCUserColonPass, cookie_perms)}) {\n+            if (*result) {\n+                LogInfo(\"Using random cookie authentication.\\n\");\n+            } else {\n+                // Failure reason message expected to already have been logged.\n+                return false;\n+            }\n+        } else {\n+            LogInfo(\"RPC authentication cookie file generation is disabled.\");\n         }\n     } else {\n         LogPrintf(\"Config options rpcuser and rpcpassword will soon be deprecated. Locally-run instances may remove rpcuser to use cookie-based auth, or may be replaced with rpcauth. Please see share/rpcauth for rpcauth auth generation.\\n\");",
      "path": "src/httprpc.cpp",
      "position": 49,
      "original_position": 58,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "80fcd0473a0483b8f9e91bf9853c62a6831f15af",
      "in_reply_to_id": 1850771750,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You mean\r\n```\r\nLogInfo(\"Using random cookie authentication.\\n\");\r\n```\r\nwas run independently of whether `GenerateAuthCookie` returned `true` or `false`, but now it may not be? It seemed wrong to me so I made it only happen when the cookie was actually generated.\r\n\r\nIf you mean that\r\n```\r\nLogPrintf(\"Config options rpcuser and rpcpassword will soon be deprecated. Locally-run instances may remove rpcuser to use cookie-based auth, or may be replaced with rpcauth. Please see share/rpcauth for rpcauth auth generation.\\n\");\r\n```\r\nwas emitted when `GenerateAuthCookie` was `true`, I think you may be mixing up some braces/indentation.",
      "created_at": "2024-11-20T22:45:05Z",
      "updated_at": "2024-11-20T22:45:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1851080067",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851080067"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 317,
      "original_line": 317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851090795",
      "pull_request_review_id": 2449863634,
      "id": 1851090795,
      "node_id": "PRRC_kwDOABII585uVWdr",
      "diff_hunk": "@@ -148,7 +149,8 @@ static bool RPCAuthorized(const std::string& strAuth, std::string& strAuthUserna\n         strAuthUsernameOut = strUserPass.substr(0, strUserPass.find(':'));\n \n     //Check if authorized under single-user field\n-    if (TimingResistantEqual(strUserPass, strRPCUserColonPass)) {\n+    // strRPCUserColonPass is empty when -norpccookiefile is specified",
      "path": "src/httprpc.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "80fcd0473a0483b8f9e91bf9853c62a6831f15af",
      "in_reply_to_id": 1850762988,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah, was itching to do that too, thanks for a second vote. :)",
      "created_at": "2024-11-20T22:58:18Z",
      "updated_at": "2024-11-20T22:58:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1851090795",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851090795"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": 151,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851093183",
      "pull_request_review_id": 2449867532,
      "id": 1851093183,
      "node_id": "PRRC_kwDOABII585uVXC_",
      "diff_hunk": "",
      "path": "test/functional/interface_bitcoin_cli.py",
      "position": 1,
      "original_position": 1,
      "commit_id": "d555cfbd44060ee09c217cf148529502a09c4837",
      "original_commit_id": "d412946cc235e026dca67a2e3176c1555441bd15",
      "in_reply_to_id": 1850778259,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I want it to be easy for reviewers to drop the impl commits or re-order and run what is in the test commits to verify that I'm actually fixing issues.",
      "created_at": "2024-11-20T23:01:21Z",
      "updated_at": "2024-11-20T23:01:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1851093183",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851093183"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851093620",
      "pull_request_review_id": 2449868121,
      "id": 1851093620,
      "node_id": "PRRC_kwDOABII585uVXJ0",
      "diff_hunk": "",
      "path": "test/functional/feature_config_args.py",
      "position": 1,
      "original_position": 1,
      "commit_id": "d555cfbd44060ee09c217cf148529502a09c4837",
      "original_commit_id": "d555cfbd44060ee09c217cf148529502a09c4837",
      "in_reply_to_id": 1850786120,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1851093183",
      "created_at": "2024-11-20T23:01:50Z",
      "updated_at": "2024-11-20T23:01:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1851093620",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851093620"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851098868",
      "pull_request_review_id": 2449877695,
      "id": 1851098868,
      "node_id": "PRRC_kwDOABII585uVYb0",
      "diff_hunk": "@@ -128,13 +129,21 @@ bool ArgsManager::ReadConfigFiles(std::string& error, bool ignore_invalid_keys)\n     }\n \n     const auto conf_path{GetConfigFilePath()};\n-    std::ifstream stream{conf_path};\n+    std::ifstream stream;\n+    if (!conf_path.empty()) { // path is empty when -noconf is specified\n+        if (fs::is_directory(conf_path)) {\n+            error = strprintf(\"config file \\\"%s\\\" is a directory.\", fs::PathToString(conf_path));\n+            return false;\n+        }\n+        stream = std::ifstream{conf_path};\n \n-    // not ok to have a config file specified that cannot be opened\n-    if (IsArgSet(\"-conf\") && !stream.good()) {\n-        error = strprintf(\"specified config file \\\"%s\\\" could not be opened.\", fs::PathToString(conf_path));\n-        return false;\n+        // not ok to have a config file specified that cannot be opened",
      "path": "src/common/config.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "1607d8d1a9015a7b95b5cb7a14b7dd83704bafb2",
      "in_reply_to_id": 1850782398,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point about double negation. Changed to:\r\n```C++\r\n// If the file is explicitly specified, it must be readable\r\n```\r\nsince the distinction is important.",
      "created_at": "2024-11-20T23:08:36Z",
      "updated_at": "2024-11-20T23:08:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1851098868",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851098868"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 140,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851678502",
      "pull_request_review_id": 2450765612,
      "id": 1851678502,
      "node_id": "PRRC_kwDOABII585uXl8m",
      "diff_hunk": "@@ -105,11 +105,11 @@ static int AppInitRawTx(int argc, char* argv[])\n \n     fCreateBlank = gArgs.GetBoolArg(\"-create\", false);\n \n-    if (argc < 2 || HelpRequested(gArgs) || gArgs.IsArgSet(\"-version\")) {\n+    if (argc < 2 || HelpRequested(gArgs) || gArgs.GetBoolArg(\"-version\", false)) {",
      "path": "src/bitcoin-tx.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "f02c4c020caf8ea97224105cc610a0e1dc62571b",
      "in_reply_to_id": 1850740240,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hmmm, I though `-noversion` was meant to be exactly the same in each scenario as `-version=false`?",
      "created_at": "2024-11-21T09:32:36Z",
      "updated_at": "2024-11-21T09:32:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1851678502",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851678502"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 108,
      "original_line": 108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851684788",
      "pull_request_review_id": 2450778245,
      "id": 1851684788,
      "node_id": "PRRC_kwDOABII585uXne0",
      "diff_hunk": "",
      "path": "test/functional/interface_bitcoin_cli.py",
      "position": 1,
      "original_position": 1,
      "commit_id": "d555cfbd44060ee09c217cf148529502a09c4837",
      "original_commit_id": "d412946cc235e026dca67a2e3176c1555441bd15",
      "in_reply_to_id": 1850778259,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I usually soft reset and revert the non-test changes to make sure the test fails for the proper reasons - even simpler usually than an interactive rebase.\r\nI still think the change and test should be in the same commit to give proper context.",
      "created_at": "2024-11-21T09:36:21Z",
      "updated_at": "2024-11-21T09:36:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1851684788",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851684788"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851914389",
      "pull_request_review_id": 2451143073,
      "id": 1851914389,
      "node_id": "PRRC_kwDOABII585uYfiV",
      "diff_hunk": "@@ -94,7 +94,7 @@ static void SetupCliArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-netinfo\", strprintf(\"Get network peer connection information from the remote server. An optional argument from 0 to %d can be passed for different peers listings (default: 0). If a non-zero value is passed, an additional \\\"outonly\\\" (or \\\"o\\\") argument can be passed to see outbound peers only. Pass \\\"help\\\" (or \\\"h\\\") for detailed help documentation.\", NETINFO_MAX_LEVEL), ArgsManager::ALLOW_ANY, OptionsCategory::CLI_COMMANDS);\n \n     SetupChainParamsBaseOptions(argsman);\n-    argsman.AddArg(\"-color=<when>\", strprintf(\"Color setting for CLI output (default: %s). Valid values: always, auto (add color codes when standard output is connected to a terminal and OS is not WIN32), never.\", DEFAULT_COLOR_SETTING), ArgsManager::ALLOW_ANY | ArgsManager::DISALLOW_NEGATION, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-color=<when>\", strprintf(\"Color setting for CLI output (default: %s). Valid values: always, auto (add color codes when standard output is connected to a terminal and OS is not WIN32), never. Only applies to the output of -getinfo.\", DEFAULT_COLOR_SETTING), ArgsManager::ALLOW_ANY | ArgsManager::DISALLOW_NEGATION, OptionsCategory::OPTIONS);",
      "path": "src/bitcoin-cli.cpp",
      "position": 14,
      "original_position": 5,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "e8a2054edc814b2c4661b96a3dce91da9be68fa4",
      "in_reply_to_id": 1850720954,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1850720954\r\n\r\nI could be missing something but it seems pretty obvious to me that -nocolor should be the same as -color=never. I don't think this PR should change that, but it might make sense to have a PR in the future that removes unjustified uses of disallow_negation so options so parsing is more uniform and less surprising. It could be the same PR that adds disallow_negation to prevent -noblocksdir as suggested https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1850750700\r\n",
      "created_at": "2024-11-21T11:52:24Z",
      "updated_at": "2024-11-22T03:11:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1851914389",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851914389"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 97,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851951264",
      "pull_request_review_id": 2451143073,
      "id": 1851951264,
      "node_id": "PRRC_kwDOABII585uYoig",
      "diff_hunk": "@@ -483,7 +483,7 @@ void SetupServerArgs(ArgsManager& argsman, bool can_listen_ipc)\n     argsman.AddArg(\"-blocksonly\", strprintf(\"Whether to reject transactions from network peers. Disables automatic broadcast and rebroadcast of transactions, unless the source peer has the 'forcerelay' permission. RPC transactions are not affected. (default: %u)\", DEFAULT_BLOCKSONLY), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-coinstatsindex\", strprintf(\"Maintain coinstats index used by the gettxoutsetinfo RPC (default: %u)\", DEFAULT_COINSTATSINDEX), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-conf=<file>\", strprintf(\"Specify path to read-only configuration file. Relative paths will be prefixed by datadir location (only useable from command line, not configuration file) (default: %s)\", BITCOIN_CONF_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n-    argsman.AddArg(\"-datadir=<dir>\", \"Specify data directory\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-datadir=<dir>\", \"Specify data directory\", ArgsManager::ALLOW_ANY | ArgsManager::DISALLOW_NEGATION, OptionsCategory::OPTIONS);",
      "path": "src/init.cpp",
      "position": 14,
      "original_position": 5,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "4ccc53aff7b16c883c8222443645cd2ba2adacfe",
      "in_reply_to_id": 1850750700,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1850750700\r\n\r\nI think this makes sense for -blocksdir and could make sense for -walletdir. But if the datadir was initiially created by an older version of Bitcoin and since upgraded it won't actually have a wallets/ subdirectory and will just store wallets in the datadir directly. So it could be reasonable to support -nowalletdir or -walletdir=\"\" as a ways to request the same behavior when opening an old datadir. However, current wallet -walletdir code looks like a mess and I don't think this specifying these actually does anything useful currently.",
      "created_at": "2024-11-21T12:16:50Z",
      "updated_at": "2024-11-22T03:11:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1851951264",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1851951264"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 488,
      "original_line": 488,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1852962780",
      "pull_request_review_id": 2452835236,
      "id": 1852962780,
      "node_id": "PRRC_kwDOABII585ucffc",
      "diff_hunk": "@@ -105,11 +105,11 @@ static int AppInitRawTx(int argc, char* argv[])\n \n     fCreateBlank = gArgs.GetBoolArg(\"-create\", false);\n \n-    if (argc < 2 || HelpRequested(gArgs) || gArgs.IsArgSet(\"-version\")) {\n+    if (argc < 2 || HelpRequested(gArgs) || gArgs.GetBoolArg(\"-version\", false)) {",
      "path": "src/bitcoin-tx.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "f02c4c020caf8ea97224105cc610a0e1dc62571b",
      "in_reply_to_id": 1850740240,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`-version=true` and `-version=false` are both interpreted as `-version=0` (there is no special parsing for booleans expressed as strings).\r\n`-version=0` is equivalent to `-noversion` or `-noversion=1`.\r\n\r\n`IsArgSet()` returns `true` if the user has set a given arg to *any value* (including negation), through command line or settings-file.",
      "created_at": "2024-11-21T21:57:04Z",
      "updated_at": "2024-11-21T21:57:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1852962780",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1852962780"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 108,
      "original_line": 108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1852982119",
      "pull_request_review_id": 2452869265,
      "id": 1852982119,
      "node_id": "PRRC_kwDOABII585uckNn",
      "diff_hunk": "",
      "path": "test/functional/interface_bitcoin_cli.py",
      "position": 1,
      "original_position": 1,
      "commit_id": "d555cfbd44060ee09c217cf148529502a09c4837",
      "original_commit_id": "d412946cc235e026dca67a2e3176c1555441bd15",
      "in_reply_to_id": 1850778259,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "What would you use as category at the beginning of commit messages when implementations are merged with tests? - Feels logical to have for example `net: ...` commit + `test net: ...` commit, you would just have the first message and merge them together?\r\n\r\nIf the pre-existing tests were to be broken by changing the implementations, I can understand changing them in the same commit, but AFAIK that is not the case in this PR.\r\n\r\nMy impression is that this project encourages separate commits for tests, see for example: https://github.com/bitcoin/bitcoin/pull/30239/commits",
      "created_at": "2024-11-21T22:14:22Z",
      "updated_at": "2024-11-21T22:14:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1852982119",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1852982119"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853186542",
      "pull_request_review_id": 2451143073,
      "id": 1853186542,
      "node_id": "PRRC_kwDOABII585udWHu",
      "diff_hunk": "",
      "path": "test/functional/interface_bitcoin_cli.py",
      "position": 1,
      "original_position": 1,
      "commit_id": "d555cfbd44060ee09c217cf148529502a09c4837",
      "original_commit_id": "d412946cc235e026dca67a2e3176c1555441bd15",
      "in_reply_to_id": 1850778259,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1850778259\r\n\r\nAs long as you are only adding the test coverage *after* fixing the bug (like this PR) I think the question of whether the test changes are in the same commit or a separate one are basically a question of personal style, and different developers will have different preferences.\r\n\r\nBut a much better practice IMO is to add the new test coverage in a separate commit *before* fixing the bug. Then the bugfix commit will include test changes, but the test changes will be small, and will usually make it very clear what the bug is, how behavior is changing, and how good the new coverage is.",
      "created_at": "2024-11-22T02:03:32Z",
      "updated_at": "2024-11-22T03:11:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1853186542",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853186542"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853379963",
      "pull_request_review_id": 2453468547,
      "id": 1853379963,
      "node_id": "PRRC_kwDOABII585ueFV7",
      "diff_hunk": "",
      "path": "test/functional/interface_bitcoin_cli.py",
      "position": 1,
      "original_position": 1,
      "commit_id": "d555cfbd44060ee09c217cf148529502a09c4837",
      "original_commit_id": "d412946cc235e026dca67a2e3176c1555441bd15",
      "in_reply_to_id": 1850778259,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Given that currently the CI checks every commit, do we have a way to specifying to the CI that the test commit is meant to fail, i.e. demonstrates the need for the upcoming fix? Or would we add an ignored test before the fix and just unignore it with the fix? I still think that in the current setup it makes more sense to commit them as a singe work-unit - fixes and testing and benching and documenting them are not extras, they're part of the same work unit.",
      "created_at": "2024-11-22T07:07:02Z",
      "updated_at": "2024-11-22T07:07:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1853379963",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853379963"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853544511",
      "pull_request_review_id": 2453778102,
      "id": 1853544511,
      "node_id": "PRRC_kwDOABII585uetg_",
      "diff_hunk": "",
      "path": "src/common/config.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "d555cfbd44060ee09c217cf148529502a09c4837",
      "original_commit_id": "1607d8d1a9015a7b95b5cb7a14b7dd83704bafb2",
      "in_reply_to_id": 1850779435,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`being opened to the \".bitcoin\"-directory (not a file))` - double parenthesis close.\r\n\r\nAnd if we're here already, the other one is missing an `of` in `to track initialization *of* HTTP RPC authentication`",
      "created_at": "2024-11-22T09:01:07Z",
      "updated_at": "2024-11-22T09:01:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1853544511",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853544511"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853551532",
      "pull_request_review_id": 2453792589,
      "id": 1853551532,
      "node_id": "PRRC_kwDOABII585uevOs",
      "diff_hunk": "@@ -105,11 +105,11 @@ static int AppInitRawTx(int argc, char* argv[])\n \n     fCreateBlank = gArgs.GetBoolArg(\"-create\", false);\n \n-    if (argc < 2 || HelpRequested(gArgs) || gArgs.IsArgSet(\"-version\")) {\n+    if (argc < 2 || HelpRequested(gArgs) || gArgs.GetBoolArg(\"-version\", false)) {",
      "path": "src/bitcoin-tx.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "f02c4c020caf8ea97224105cc610a0e1dc62571b",
      "in_reply_to_id": 1850740240,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The part I'm not sure about is checking `gArgs.GetBoolArg(\"-version\", false)` twice - since the inner check has an else, which is a bit confusing, since that can only happen if `argc < 2 || HelpRequested(gArgs)` are true - seems like the condition can be simplified, especially since `if (argc < 2) {` is rechecked later. (please verify for other such conditions, not necessarily this one)",
      "created_at": "2024-11-22T09:04:39Z",
      "updated_at": "2024-11-22T09:04:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1853551532",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853551532"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 108,
      "original_line": 108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853552851",
      "pull_request_review_id": 2453795733,
      "id": 1853552851,
      "node_id": "PRRC_kwDOABII585uevjT",
      "diff_hunk": "@@ -294,21 +296,26 @@ static bool InitRPCAuthentication()\n {\n     if (gArgs.GetArg(\"-rpcpassword\", \"\") == \"\")\n     {\n-        LogInfo(\"Using random cookie authentication.\\n\");\n-\n         std::optional<fs::perms> cookie_perms{std::nullopt};\n         auto cookie_perms_arg{gArgs.GetArg(\"-rpccookieperms\")};\n         if (cookie_perms_arg) {\n             auto perm_opt = InterpretPermString(*cookie_perms_arg);\n             if (!perm_opt) {\n-                LogInfo(\"Invalid -rpccookieperms=%s; must be one of 'owner', 'group', or 'all'.\\n\", *cookie_perms_arg);\n+                LogError(\"Invalid -rpccookieperms=%s; must be one of 'owner', 'group', or 'all'.\\n\", *cookie_perms_arg);\n                 return false;\n             }\n             cookie_perms = *perm_opt;\n         }\n \n-        if (!GenerateAuthCookie(&strRPCUserColonPass, cookie_perms)) {\n-            return false;\n+        if (std::optional<bool> result{GenerateAuthCookie(&strRPCUserColonPass, cookie_perms)}) {",
      "path": "src/httprpc.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "80fcd0473a0483b8f9e91bf9853c62a6831f15af",
      "in_reply_to_id": 1850768609,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "it's quite noisy in this case, but don't have string feelings about it :)",
      "created_at": "2024-11-22T09:05:30Z",
      "updated_at": "2024-11-22T09:05:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1853552851",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853552851"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 310,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853672421",
      "pull_request_review_id": 2454047570,
      "id": 1853672421,
      "node_id": "PRRC_kwDOABII585ufMvl",
      "diff_hunk": "@@ -166,11 +189,18 @@ def run_test(self):\n         self.stop_node(0)\n \n         self.log.info('Check that failure to write cookie file will abort the node gracefully')\n-        (self.nodes[0].chain_path / \".cookie.tmp\").mkdir()\n+        node0_cookie_file_path =     self.nodes[0].chain_path / \".cookie\"\n+        node0_cookie_file_path_tmp = self.nodes[0].chain_path / \".cookie.tmp\"\n+        node0_cookie_file_path_tmp.mkdir()\n         self.nodes[0].assert_start_raises_init_error(expected_msg=init_error)\n+        node0_cookie_file_path_tmp.rmdir()",
      "path": "test/functional/rpc_users.py",
      "position": null,
      "original_position": 55,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "2bf7e59776fcfb2c8a477cf2abb59606f7b4aacc",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "will the `node0_cookie_file_path_tmp` file be kept when assertion fails on purpose? If not, you could wrap it in a try/finally (deleting regardless of the assertion's outcome)",
      "created_at": "2024-11-22T10:11:13Z",
      "updated_at": "2024-11-22T10:35:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1853672421",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853672421"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853676537",
      "pull_request_review_id": 2454047570,
      "id": 1853676537,
      "node_id": "PRRC_kwDOABII585ufNv5",
      "diff_hunk": "@@ -24,7 +24,7 @@ UniValue JSONRPCReplyObj(UniValue result, UniValue error, std::optional<UniValue\n UniValue JSONRPCError(int code, const std::string& message);\n \n /** Generate a new RPC authentication cookie and write it to disk */\n-bool GenerateAuthCookie(std::string* cookie_out, std::optional<fs::perms> cookie_perms=std::nullopt);\n+std::optional<bool> GenerateAuthCookie(std::string* cookie_out, std::optional<fs::perms> cookie_perms=std::nullopt);",
      "path": "src/rpc/request.h",
      "position": null,
      "original_position": 5,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "2bf7e59776fcfb2c8a477cf2abb59606f7b4aacc",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "as mentioned before, I find this tri-state-boolean quite confusing - if 3 states are indeed needed, maybe it's hiding a different structure such as a variant or enum or `optional<Error>`",
      "created_at": "2024-11-22T10:14:16Z",
      "updated_at": "2024-11-22T10:35:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1853676537",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853676537"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853679146",
      "pull_request_review_id": 2454047570,
      "id": 1853679146,
      "node_id": "PRRC_kwDOABII585ufOYq",
      "diff_hunk": "@@ -142,6 +150,10 @@ bool GetAuthCookie(std::string *cookie_out)\n     std::ifstream file;\n     std::string cookie;\n     fs::path filepath = GetAuthCookieFile();\n+    if (filepath.empty()) {\n+        LogDebug(BCLog::RPC, \"RPC authentication cookie file reading is disabled.\");\n+        return false;",
      "path": "src/rpc/request.cpp",
      "position": null,
      "original_position": 58,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "2bf7e59776fcfb2c8a477cf2abb59606f7b4aacc",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "why is this false and not an empty optional? As mentioned before, I don't really see the line",
      "created_at": "2024-11-22T10:16:18Z",
      "updated_at": "2024-11-22T10:35:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1853679146",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853679146"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853683566",
      "pull_request_review_id": 2454047570,
      "id": 1853683566,
      "node_id": "PRRC_kwDOABII585ufPdu",
      "diff_hunk": "@@ -582,8 +582,8 @@ int GuiMain(int argc, char* argv[])\n \n     // Show help message immediately after parsing command-line options (for \"-lang\") and setting locale,\n     // but before showing splash screen.\n-    if (HelpRequested(gArgs) || gArgs.IsArgSet(\"-version\")) {\n-        HelpMessageDialog help(nullptr, gArgs.IsArgSet(\"-version\"));\n+    if (HelpRequested(gArgs) || gArgs.GetBoolArg(\"-version\", false)) {\n+        HelpMessageDialog help(nullptr, gArgs.GetBoolArg(\"-version\", false));",
      "path": "src/qt/bitcoin.cpp",
      "position": 7,
      "original_position": 7,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "2bf7e59776fcfb2c8a477cf2abb59606f7b4aacc",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "What's the reason for not wanting an `about` window regardless of the `-version` flag's value? Doesn't `gArgs.IsArgSet(\"-version\")` make more sense here?",
      "created_at": "2024-11-22T10:19:46Z",
      "updated_at": "2024-11-22T10:35:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1853683566",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853683566"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 586,
      "original_line": 586,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853700315",
      "pull_request_review_id": 2454047570,
      "id": 1853700315,
      "node_id": "PRRC_kwDOABII585ufTjb",
      "diff_hunk": "@@ -125,8 +125,9 @@ bool StartLogging(const ArgsManager& args)\n     if (fs::exists(config_file_path)) {\n         LogPrintf(\"Config file: %s\\n\", fs::PathToString(config_file_path));\n     } else if (args.IsArgSet(\"-conf\")) {",
      "path": "src/init/common.cpp",
      "position": 19,
      "original_position": 3,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "2bf7e59776fcfb2c8a477cf2abb59606f7b4aacc",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "given that checking the args is not for free (triggers locks and merges from multiple sources), maybe we could introduce a `IsArgEnabled` which gets rid of this confusing combination (e.g. where `-noconf=0` would be set and not negated, I think)",
      "created_at": "2024-11-22T10:32:53Z",
      "updated_at": "2024-11-22T10:36:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1853700315",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853700315"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 132,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853701435",
      "pull_request_review_id": 2454047570,
      "id": 1853701435,
      "node_id": "PRRC_kwDOABII585ufT07",
      "diff_hunk": "@@ -294,21 +296,26 @@ static bool InitRPCAuthentication()\n {\n     if (gArgs.GetArg(\"-rpcpassword\", \"\") == \"\")\n     {\n-        LogInfo(\"Using random cookie authentication.\\n\");\n-\n         std::optional<fs::perms> cookie_perms{std::nullopt};\n         auto cookie_perms_arg{gArgs.GetArg(\"-rpccookieperms\")};\n         if (cookie_perms_arg) {\n             auto perm_opt = InterpretPermString(*cookie_perms_arg);\n             if (!perm_opt) {\n-                LogInfo(\"Invalid -rpccookieperms=%s; must be one of 'owner', 'group', or 'all'.\\n\", *cookie_perms_arg);\n+                LogError(\"Invalid -rpccookieperms=%s; must be one of 'owner', 'group', or 'all'.\\n\", *cookie_perms_arg);\n                 return false;\n             }\n             cookie_perms = *perm_opt;\n         }\n \n-        if (!GenerateAuthCookie(&strRPCUserColonPass, cookie_perms)) {\n-            return false;\n+        if (std::optional<bool> result{GenerateAuthCookie(&strRPCUserColonPass, cookie_perms)}) {\n+            if (*result) {\n+                LogInfo(\"Using random cookie authentication.\\n\");\n+            } else {\n+                // Failure reason message expected to already have been logged.\n+                return false;\n+            }\n+        } else {\n+            LogInfo(\"RPC authentication cookie file generation is disabled.\");\n         }\n     } else {\n         LogPrintf(\"Config options rpcuser and rpcpassword will soon be deprecated. Locally-run instances may remove rpcuser to use cookie-based auth, or may be replaced with rpcauth. Please see share/rpcauth for rpcauth auth generation.\\n\");",
      "path": "src/httprpc.cpp",
      "position": 49,
      "original_position": 58,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "80fcd0473a0483b8f9e91bf9853c62a6831f15af",
      "in_reply_to_id": 1850771750,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, I was confused by indentation, resolve the comment por favor",
      "created_at": "2024-11-22T10:33:50Z",
      "updated_at": "2024-11-22T10:35:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1853701435",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853701435"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 317,
      "original_line": 317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853756499",
      "pull_request_review_id": 2454178654,
      "id": 1853756499,
      "node_id": "PRRC_kwDOABII585ufhRT",
      "diff_hunk": "",
      "path": "test/functional/interface_bitcoin_cli.py",
      "position": 1,
      "original_position": 1,
      "commit_id": "d555cfbd44060ee09c217cf148529502a09c4837",
      "original_commit_id": "d412946cc235e026dca67a2e3176c1555441bd15",
      "in_reply_to_id": 1850778259,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1853379963\r\n\r\nThe idea is not to add an ignored test, but to add real test coverage. For example if there is a buggy `add()` function that thinks `2 + 2 = 5`, the ideal way to fix it is to first add a test commit that asserts `add(2, 2) == 5` with a comment noting the add function is buggy. After this, a separate commit should fix the bug and update the test to assert `add(2, 2) == 4`. Advantages of this approach:\r\n\r\n1. Clearly shows what the bug is, and makes the behavior change obvious no matter how complicated the changes inside the `add()` function are.\r\n2. Minimizes the size of the bugfix commit. Instead of containing large amounts of test setup code, all the test setup is added previously and test changes are minimal.\r\n3. Makes it obvious how good the coverage is. If bugfix commit includes 50 lines of new test code, this doesn't tell you whether new tests actually cover the bug or how they are connected to it. But if the test code is added in a previous commit and passes, then is changed by the bugfix and still passes, you can see exactly how the tests are connected to the bug, how good the coverage is, and what coverage may be missing.\r\n\r\nFor examples of this you can see https://github.com/bitcoin/bitcoin/pull/30679/commits/d38e3aed89eea665399eef07f5c3b64b14d4f586, https://github.com/bitcoin/bitcoin/pull/27101/commits/bf1a1f1662427fbf1a43bb951364eface469bdb7, https://github.com/bitcoin/bitcoin/pull/27101/commits/2ca1460ae3a7217eaa8c5972515bf622bedadfce which are all fixing bugs and updating test code added in prior commits. If the test code had been added in the same commits or in subsequent commits, you would have a much less clear idea of what the bugfixes were actually doing or whether they had meaningful test coverage.\r\n\r\n\r\n",
      "created_at": "2024-11-22T11:18:04Z",
      "updated_at": "2024-11-22T12:07:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1853756499",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853756499"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853779968",
      "pull_request_review_id": 2454178654,
      "id": 1853779968,
      "node_id": "PRRC_kwDOABII585ufnAA",
      "diff_hunk": "@@ -105,11 +105,11 @@ static int AppInitRawTx(int argc, char* argv[])\n \n     fCreateBlank = gArgs.GetBoolArg(\"-create\", false);\n \n-    if (argc < 2 || HelpRequested(gArgs) || gArgs.IsArgSet(\"-version\")) {\n+    if (argc < 2 || HelpRequested(gArgs) || gArgs.GetBoolArg(\"-version\", false)) {",
      "path": "src/bitcoin-tx.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "f02c4c020caf8ea97224105cc610a0e1dc62571b",
      "in_reply_to_id": 1850740240,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1853551532\r\n\r\nI think the idea here is just for -version to take precedence over -help if both are specified. I don't know if this is the best behavior, but I don't see a reason to change in a commit that is just trying to handle -version=0 and -noversion more sensibly.",
      "created_at": "2024-11-22T11:39:22Z",
      "updated_at": "2024-11-22T12:04:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1853779968",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853779968"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 108,
      "original_line": 108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853807905",
      "pull_request_review_id": 2454178654,
      "id": 1853807905,
      "node_id": "PRRC_kwDOABII585uft0h",
      "diff_hunk": "@@ -125,8 +125,9 @@ bool StartLogging(const ArgsManager& args)\n     if (fs::exists(config_file_path)) {\n         LogPrintf(\"Config file: %s\\n\", fs::PathToString(config_file_path));\n     } else if (args.IsArgSet(\"-conf\")) {",
      "path": "src/init/common.cpp",
      "position": 19,
      "original_position": 3,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "2bf7e59776fcfb2c8a477cf2abb59606f7b4aacc",
      "in_reply_to_id": 1853700315,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1853700315\r\n\r\n> given that checking the args is not for free (triggers locks and merges from multiple sources), maybe we could introduce a `IsArgEnabled` which gets rid of this confusing combination (e.g. where `-noconf=0` would be set and not negated, I think)\r\n\r\n#31260 gets away from this error-prone repeated retrieval of settings by forcing the type of every setting to be declared up front, and only providing a single `Get` accessor for it, not separate `GetArg/GetArgs/GetIntArg/GetBoolArg/IsArgSet/IsArgNegated` accessors.  It also allows default setting values to be declared, so in most cases there is never a need to explicitly check whether a setting has been \"set\" or not. But in cases where settings do not have simple default values, they can be declared with `std::optional` type and handle `nullopt` cases.",
      "created_at": "2024-11-22T11:59:09Z",
      "updated_at": "2024-11-22T12:04:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1853807905",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853807905"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 132,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853811005",
      "pull_request_review_id": 2454178654,
      "id": 1853811005,
      "node_id": "PRRC_kwDOABII585ufuk9",
      "diff_hunk": "@@ -582,8 +582,8 @@ int GuiMain(int argc, char* argv[])\n \n     // Show help message immediately after parsing command-line options (for \"-lang\") and setting locale,\n     // but before showing splash screen.\n-    if (HelpRequested(gArgs) || gArgs.IsArgSet(\"-version\")) {\n-        HelpMessageDialog help(nullptr, gArgs.IsArgSet(\"-version\"));\n+    if (HelpRequested(gArgs) || gArgs.GetBoolArg(\"-version\", false)) {\n+        HelpMessageDialog help(nullptr, gArgs.GetBoolArg(\"-version\", false));",
      "path": "src/qt/bitcoin.cpp",
      "position": 7,
      "original_position": 7,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "2bf7e59776fcfb2c8a477cf2abb59606f7b4aacc",
      "in_reply_to_id": 1853683566,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1853683566\r\n\r\n> What's the reason for not wanting an `about` window regardless of the `-version` flag's value? Doesn't `gArgs.IsArgSet(\"-version\")` make more sense here?\r\n\r\nThe idea is for -noversion and -version=0 to be the same as not specifying a -version argument. -version is just a binary option, it should choose between 2 behaviors, not 3",
      "created_at": "2024-11-22T12:02:11Z",
      "updated_at": "2024-11-22T12:04:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1853811005",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853811005"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 586,
      "original_line": 586,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853836054",
      "pull_request_review_id": 2454306745,
      "id": 1853836054,
      "node_id": "PRRC_kwDOABII585uf0sW",
      "diff_hunk": "",
      "path": "test/functional/interface_bitcoin_cli.py",
      "position": 1,
      "original_position": 1,
      "commit_id": "d555cfbd44060ee09c217cf148529502a09c4837",
      "original_commit_id": "d412946cc235e026dca67a2e3176c1555441bd15",
      "in_reply_to_id": 1850778259,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm not against that, my concern is just that reproducing old behavior before the fix isn't very useful activity - it's a lot more useful to see that a test fails before the fix with the correct error (i.e TDD), but that's not really possible currently - unless we add something like https://github.com/spockframework/spock/blob/master/spock-core/src/main/java/spock/lang/PendingFeature.java#L13-L17 (where we invert the test, making sure it fails (that's when the test is green) and remove the annotation only in the fix commit). ",
      "created_at": "2024-11-22T12:24:53Z",
      "updated_at": "2024-11-22T12:24:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1853836054",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853836054"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853838097",
      "pull_request_review_id": 2454310196,
      "id": 1853838097,
      "node_id": "PRRC_kwDOABII585uf1MR",
      "diff_hunk": "@@ -582,8 +582,8 @@ int GuiMain(int argc, char* argv[])\n \n     // Show help message immediately after parsing command-line options (for \"-lang\") and setting locale,\n     // but before showing splash screen.\n-    if (HelpRequested(gArgs) || gArgs.IsArgSet(\"-version\")) {\n-        HelpMessageDialog help(nullptr, gArgs.IsArgSet(\"-version\"));\n+    if (HelpRequested(gArgs) || gArgs.GetBoolArg(\"-version\", false)) {\n+        HelpMessageDialog help(nullptr, gArgs.GetBoolArg(\"-version\", false));",
      "path": "src/qt/bitcoin.cpp",
      "position": 7,
      "original_position": 7,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "2bf7e59776fcfb2c8a477cf2abb59606f7b4aacc",
      "in_reply_to_id": 1853683566,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "what about `-noversion=0` :p\r\n\r\nThere has to be a better way, this is so confusing :/",
      "created_at": "2024-11-22T12:26:38Z",
      "updated_at": "2024-11-22T12:26:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1853838097",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853838097"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 586,
      "original_line": 586,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853870363",
      "pull_request_review_id": 2454373131,
      "id": 1853870363,
      "node_id": "PRRC_kwDOABII585uf9Eb",
      "diff_hunk": "",
      "path": "test/functional/interface_bitcoin_cli.py",
      "position": 1,
      "original_position": 1,
      "commit_id": "d555cfbd44060ee09c217cf148529502a09c4837",
      "original_commit_id": "d412946cc235e026dca67a2e3176c1555441bd15",
      "in_reply_to_id": 1850778259,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I'm not against that, my concern is just that reproducing old behavior before the fix isn't very useful activity\r\n\r\nStrongly disagree :). In 2ca1460ae3a7217eaa8c5972515bf622bedadfce if tests had not been added *before* that commit checking for incorrect HTTP error codes, you would not know from looking at the change what the behavior was before the bugfix, or how new tests were connected to it. It is very useful to have test coverage for bugs before they are fixed.\r\n\r\n> it's a lot more useful to see that a test fails before the fix with the correct error \r\n\r\nThat's another benefit this approach provides. If the bugfix commit show a line of test code changing from `assert_equal(status, 200)` to `assert_equal(status, 400)` you know the check would have failed without the bugfix because `status` variable cannot be equal to two values at the same time. By contrast if the bugfix commit just included an entirely new `assert_equal(status, 400)`  check, it could tell you you nothing about whether the check would fail without the bugfix. It would only be possible determine that from manual testing or from a theoretical CI extension which our CI system does not implement.\r\n\r\nTesting for bugs before fixing them is strictly better approach for making changes more understandable and providing more information about test coverage without requiring manual testing or theoretical CI extensions.",
      "created_at": "2024-11-22T12:50:39Z",
      "updated_at": "2024-11-22T12:50:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1853870363",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853870363"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853891120",
      "pull_request_review_id": 2454409326,
      "id": 1853891120,
      "node_id": "PRRC_kwDOABII585ugCIw",
      "diff_hunk": "",
      "path": "test/functional/interface_bitcoin_cli.py",
      "position": 1,
      "original_position": 1,
      "commit_id": "d555cfbd44060ee09c217cf148529502a09c4837",
      "original_commit_id": "d412946cc235e026dca67a2e3176c1555441bd15",
      "in_reply_to_id": 1850778259,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> if tests had not been added before that commit checking for incorrect HTTP error codes, you would not know from looking at the change what the behavior was before the bugfix\r\n\r\nThe test would fail before the fix with the exact reason, not sure we're in a disagreement here.\r\n\r\n> If the bugfix commit show a line of test code changing from [...]\r\n> if the bugfix commit just included an entirely new [...]\r\n\r\nBut my point was exactly that if there's a failing test in the commit before the fix, which reproduces the error, you're not allowed to change the test in the commit that does the fix - to prove that you've solved the problem and not just castrated the test.\r\nBy modifying both the test and fix in the same commit, we don't know how the test would have behaved without the fix (or whether the previous test would pass with the fix). So the only reliable solution I see is adding failing tests before the fixing commit and not modifying them in the fix commit to make sure the exact same checks were done on both versions.\r\nSame with benchmarks, I don't trust the performance comparison if the benchmarks have also changed when the production code was changed.",
      "created_at": "2024-11-22T13:08:29Z",
      "updated_at": "2024-11-22T13:09:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1853891120",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853891120"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853899185",
      "pull_request_review_id": 2454426091,
      "id": 1853899185,
      "node_id": "PRRC_kwDOABII585ugEGx",
      "diff_hunk": "",
      "path": "test/functional/interface_bitcoin_cli.py",
      "position": 1,
      "original_position": 1,
      "commit_id": "d555cfbd44060ee09c217cf148529502a09c4837",
      "original_commit_id": "d412946cc235e026dca67a2e3176c1555441bd15",
      "in_reply_to_id": 1850778259,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> > if tests had not been added before that commit checking for incorrect HTTP error codes, you would not know from looking at the change what the behavior was before the bugfix\r\n> \r\n> The test would fail before the fix with the exact reason, not sure we're in a disagreement here.\r\n\r\nThe test would be reproducing the bug, thus pass. The next commit would fix the pre-existing bug in the code and the test, and would thus pass as well.",
      "created_at": "2024-11-22T13:14:53Z",
      "updated_at": "2024-11-22T13:14:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1853899185",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853899185"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853917762",
      "pull_request_review_id": 2454457888,
      "id": 1853917762,
      "node_id": "PRRC_kwDOABII585ugIpC",
      "diff_hunk": "",
      "path": "test/functional/interface_bitcoin_cli.py",
      "position": 1,
      "original_position": 1,
      "commit_id": "d555cfbd44060ee09c217cf148529502a09c4837",
      "original_commit_id": "d412946cc235e026dca67a2e3176c1555441bd15",
      "in_reply_to_id": 1850778259,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That's one way to do it, but in that case it's possible that the test passes before the fix as well (had many such reviews), which would indicate that we haven't actually reproduced the problem, therefore the fix might not do what it claims.\r\nOnly by having the exact same test fail before the fix and pass after (without any change to the test) can we be sure the fix had an effect on the test.",
      "created_at": "2024-11-22T13:30:06Z",
      "updated_at": "2024-11-22T13:30:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1853917762",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1853917762"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1854105033",
      "pull_request_review_id": 2454759102,
      "id": 1854105033,
      "node_id": "PRRC_kwDOABII585ug2XJ",
      "diff_hunk": "",
      "path": "test/functional/interface_bitcoin_cli.py",
      "position": 1,
      "original_position": 1,
      "commit_id": "d555cfbd44060ee09c217cf148529502a09c4837",
      "original_commit_id": "d412946cc235e026dca67a2e3176c1555441bd15",
      "in_reply_to_id": 1850778259,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Apologies l0rinc. I think we are probably just misunderstanding each other. All the checks you are suggesting are possible with the approach I'm suggesting, and it should only make them easier to implement and understand. And I might not understand what approach you prefer since your first comment https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1850778259 seems to want new tests to be in the same commit as the bugfix, but the last one https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1853917762 seems to want test and nontest changes to be separated (unclear if that means separate commits).\r\n\r\nIn any case, we did stray off topic for this PR. For this PR I think current test commits are fine, and adding test coverage before making bugfixes would be slightly better but is not very important because the changes in behavior here are not very complicated and not hard to see from the code. I think having squashing test and code commits would also be fine, but not a too meaningful change either way.",
      "created_at": "2024-11-22T15:24:38Z",
      "updated_at": "2024-11-22T15:24:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1854105033",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1854105033"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1854660293",
      "pull_request_review_id": 2455647582,
      "id": 1854660293,
      "node_id": "PRRC_kwDOABII585ui97F",
      "diff_hunk": "",
      "path": "test/functional/interface_bitcoin_cli.py",
      "position": 1,
      "original_position": 1,
      "commit_id": "d555cfbd44060ee09c217cf148529502a09c4837",
      "original_commit_id": "d412946cc235e026dca67a2e3176c1555441bd15",
      "in_reply_to_id": 1850778259,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Long story short: I would find it suspicious if the test of a specific fix passes without the fix.\r\nThe cleanest way I found to make sure this isn't the case is to add the test commit before the fix commit and make sure CI fails if the test passes without the fix (see mentioned Spock [PendingFeature](https://github.com/spockframework/spock/blob/master/spock-core/src/main/java/spock/lang/PendingFeature.java#L13-L17)).\r\nBut since we don't have that here, I would prefer having the test in the same work unit as the fix, to provide the necessary context for the current fix.\r\nIs this still controversial? ",
      "created_at": "2024-11-22T21:07:09Z",
      "updated_at": "2024-11-22T21:07:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1854660293",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1854660293"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1854914157",
      "pull_request_review_id": 2456032323,
      "id": 1854914157,
      "node_id": "PRRC_kwDOABII585uj75t",
      "diff_hunk": "",
      "path": "test/functional/interface_bitcoin_cli.py",
      "position": 1,
      "original_position": 1,
      "commit_id": "d555cfbd44060ee09c217cf148529502a09c4837",
      "original_commit_id": "d412946cc235e026dca67a2e3176c1555441bd15",
      "in_reply_to_id": 1850778259,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1854660293\r\n\r\n> But since we don't have that here, I would prefer having the test in the same work unit as the fix, to provide the necessary context for the current fix.\r\nIs this still controversial?\r\n\r\nI think it's a perfectly reasonable suggestion. To paraphrase, you are saying that when code changes are made in a commit without test changes (which is how the PR is currently structured, though not what I was suggesting) then it is harder for reviewers and git blame users to determine what the associated tests are. Also including test changes in code commits makes it easier to write an automated checker that could determine whether the test changes would have passed without the code changes, and would indicate how meaningful the test coverage is. \r\n\r\nThese are reasonable things to want, just like having smaller more focused commits is a reasonable thing to want. So your approach and hodlinators's approach are both fine choices AFAICT. The only thing I'd add is that my suggestion reduces the tradeoff between these approach and gives the best of both worlds: including tests in the same commits as code changes, but minimizing the test diffs there, and additionally making it more obvious what differences in old and new behavior are.\r\n\r\n\r\n",
      "created_at": "2024-11-22T23:57:27Z",
      "updated_at": "2024-11-22T23:57:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1854914157",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1854914157"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1855301316",
      "pull_request_review_id": 2456521241,
      "id": 1855301316,
      "node_id": "PRRC_kwDOABII585ulabE",
      "diff_hunk": "@@ -166,11 +189,18 @@ def run_test(self):\n         self.stop_node(0)\n \n         self.log.info('Check that failure to write cookie file will abort the node gracefully')\n-        (self.nodes[0].chain_path / \".cookie.tmp\").mkdir()\n+        node0_cookie_file_path =     self.nodes[0].chain_path / \".cookie\"\n+        node0_cookie_file_path_tmp = self.nodes[0].chain_path / \".cookie.tmp\"\n+        node0_cookie_file_path_tmp.mkdir()\n         self.nodes[0].assert_start_raises_init_error(expected_msg=init_error)\n+        node0_cookie_file_path_tmp.rmdir()",
      "path": "test/functional/rpc_users.py",
      "position": null,
      "original_position": 55,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "2bf7e59776fcfb2c8a477cf2abb59606f7b4aacc",
      "in_reply_to_id": 1853672421,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Tests are running in a scratch directory - if part of the test fails, we don't worry about leaving some files behind.",
      "created_at": "2024-11-24T00:00:45Z",
      "updated_at": "2024-11-24T00:00:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1855301316",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1855301316"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1855390360",
      "pull_request_review_id": 2456649337,
      "id": 1855390360,
      "node_id": "PRRC_kwDOABII585ulwKY",
      "diff_hunk": "@@ -166,11 +189,18 @@ def run_test(self):\n         self.stop_node(0)\n \n         self.log.info('Check that failure to write cookie file will abort the node gracefully')\n-        (self.nodes[0].chain_path / \".cookie.tmp\").mkdir()\n+        node0_cookie_file_path =     self.nodes[0].chain_path / \".cookie\"\n+        node0_cookie_file_path_tmp = self.nodes[0].chain_path / \".cookie.tmp\"\n+        node0_cookie_file_path_tmp.mkdir()\n         self.nodes[0].assert_start_raises_init_error(expected_msg=init_error)\n+        node0_cookie_file_path_tmp.rmdir()",
      "path": "test/functional/rpc_users.py",
      "position": null,
      "original_position": 55,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "2bf7e59776fcfb2c8a477cf2abb59606f7b4aacc",
      "in_reply_to_id": 1853672421,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Can we remove the cleanup in that case?",
      "created_at": "2024-11-24T08:08:15Z",
      "updated_at": "2024-11-24T08:08:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1855390360",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1855390360"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1856221103",
      "pull_request_review_id": 2457812690,
      "id": 1856221103,
      "node_id": "PRRC_kwDOABII585uo6-v",
      "diff_hunk": "@@ -166,11 +189,18 @@ def run_test(self):\n         self.stop_node(0)\n \n         self.log.info('Check that failure to write cookie file will abort the node gracefully')\n-        (self.nodes[0].chain_path / \".cookie.tmp\").mkdir()\n+        node0_cookie_file_path =     self.nodes[0].chain_path / \".cookie\"\n+        node0_cookie_file_path_tmp = self.nodes[0].chain_path / \".cookie.tmp\"\n+        node0_cookie_file_path_tmp.mkdir()\n         self.nodes[0].assert_start_raises_init_error(expected_msg=init_error)\n+        node0_cookie_file_path_tmp.rmdir()",
      "path": "test/functional/rpc_users.py",
      "position": null,
      "original_position": 55,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "2bf7e59776fcfb2c8a477cf2abb59606f7b4aacc",
      "in_reply_to_id": 1853672421,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The cleanup is still there so that other tests following it in the Python script are not impacted.",
      "created_at": "2024-11-25T09:27:52Z",
      "updated_at": "2024-11-25T09:27:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1856221103",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1856221103"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1862455177",
      "pull_request_review_id": 2468541483,
      "id": 1862455177,
      "node_id": "PRRC_kwDOABII585vAs-J",
      "diff_hunk": "@@ -24,7 +24,7 @@ UniValue JSONRPCReplyObj(UniValue result, UniValue error, std::optional<UniValue\n UniValue JSONRPCError(int code, const std::string& message);\n \n /** Generate a new RPC authentication cookie and write it to disk */\n-bool GenerateAuthCookie(std::string* cookie_out, std::optional<fs::perms> cookie_perms=std::nullopt);\n+std::optional<bool> GenerateAuthCookie(std::string* cookie_out, std::optional<fs::perms> cookie_perms=std::nullopt);",
      "path": "src/rpc/request.h",
      "position": null,
      "original_position": 5,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "2bf7e59776fcfb2c8a477cf2abb59606f7b4aacc",
      "in_reply_to_id": 1853676537,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Reverted in later pushes.",
      "created_at": "2024-11-28T16:19:38Z",
      "updated_at": "2024-11-28T16:19:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1862455177",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1862455177"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1862479984",
      "pull_request_review_id": 2468572553,
      "id": 1862479984,
      "node_id": "PRRC_kwDOABII585vAzBw",
      "diff_hunk": "",
      "path": "test/functional/interface_bitcoin_cli.py",
      "position": 1,
      "original_position": 1,
      "commit_id": "d555cfbd44060ee09c217cf148529502a09c4837",
      "original_commit_id": "d412946cc235e026dca67a2e3176c1555441bd15",
      "in_reply_to_id": 1850778259,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "To me this is a good pattern:\r\n1. Document former *correct behavior* by adding tests.\r\n2. Change implementation and tests to conform to *new behavior*.\r\n\r\nHowever, if 1) is about documenting *buggy behavior*, committing a test for that in a way that makes them succeed feels off to me. In that case I would prefer adding tests that *prove failure* with some special annotation in the commit message for CI to expect failure like what @l0rinc [linked here (Spock)](https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1854660293).\r\n\r\nI'm probably biased from having worked in other workflows which encouraged less granular commits.",
      "created_at": "2024-11-28T16:40:41Z",
      "updated_at": "2024-11-28T16:40:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1862479984",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1862479984"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1862652609",
      "pull_request_review_id": 2468778430,
      "id": 1862652609,
      "node_id": "PRRC_kwDOABII585vBdLB",
      "diff_hunk": "@@ -142,6 +150,10 @@ bool GetAuthCookie(std::string *cookie_out)\n     std::ifstream file;\n     std::string cookie;\n     fs::path filepath = GetAuthCookieFile();\n+    if (filepath.empty()) {\n+        LogDebug(BCLog::RPC, \"RPC authentication cookie file reading is disabled.\");\n+        return false;",
      "path": "src/rpc/request.cpp",
      "position": null,
      "original_position": 58,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "2bf7e59776fcfb2c8a477cf2abb59606f7b4aacc",
      "in_reply_to_id": 1853679146,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`GetAuthCookieFile()` internally uses `GetPathArg()` and follows it's pattern (predating this PR):\r\nhttps://github.com/bitcoin/bitcoin/blob/7590e93bc73b3bbac641f05d490fd5c984156b33/src/common/args.cpp#L272-L274\r\n\r\nBut might change to `optional` if you insist. Tried out changing it in 01fa9d41d12a68f88f6251ae43234dd250a53bd5. Works fairly well, even uncovered a minor pre-existing bug in that if `fs::permissions` fails, we currently print out the wrong filename. With that bug it feels like it could arguably be its own micro-PR.",
      "created_at": "2024-11-28T20:10:29Z",
      "updated_at": "2024-11-28T20:10:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1862652609",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1862652609"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863298196",
      "pull_request_review_id": 2469586795,
      "id": 1863298196,
      "node_id": "PRRC_kwDOABII585vD6yU",
      "diff_hunk": "@@ -166,11 +189,18 @@ def run_test(self):\n         self.stop_node(0)\n \n         self.log.info('Check that failure to write cookie file will abort the node gracefully')\n-        (self.nodes[0].chain_path / \".cookie.tmp\").mkdir()\n+        node0_cookie_file_path =     self.nodes[0].chain_path / \".cookie\"\n+        node0_cookie_file_path_tmp = self.nodes[0].chain_path / \".cookie.tmp\"\n+        node0_cookie_file_path_tmp.mkdir()\n         self.nodes[0].assert_start_raises_init_error(expected_msg=init_error)\n+        node0_cookie_file_path_tmp.rmdir()",
      "path": "test/functional/rpc_users.py",
      "position": null,
      "original_position": 55,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "2bf7e59776fcfb2c8a477cf2abb59606f7b4aacc",
      "in_reply_to_id": 1853672421,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "so do I understand it correctly that it's fine for other tests to be affected when this one already fails, leaving the directory?",
      "created_at": "2024-11-29T10:22:13Z",
      "updated_at": "2024-11-29T10:22:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1863298196",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863298196"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863317001",
      "pull_request_review_id": 2469613723,
      "id": 1863317001,
      "node_id": "PRRC_kwDOABII585vD_YJ",
      "diff_hunk": "@@ -122,10 +123,13 @@ bool StartLogging(const ArgsManager& args)\n \n     // Only log conf file usage message if conf file actually exists.\n     fs::path config_file_path = args.GetConfigFilePath();\n-    if (fs::exists(config_file_path)) {\n+    if (args.IsArgSet(\"-conf\") && args.IsArgNegated(\"-conf\")) {",
      "path": "src/init/common.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Given that `IsArgNegated` returns `GetSetting(strArg).isFalse()` where `isFalse` returns `(typ == VBOOL) && (val != \"1\")` which contradicts: `bool isNull() const { return (typ == VNULL); }` in `IsArgSet` returning `!GetSetting(strArg).isNull()`, it seems to me we can simplify this to:\r\n```suggestion\r\n    if (args.IsArgNegated(\"-conf\"))\r\n```",
      "created_at": "2024-11-29T10:36:07Z",
      "updated_at": "2024-11-29T11:31:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1863317001",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863317001"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863319077",
      "pull_request_review_id": 2469613723,
      "id": 1863319077,
      "node_id": "PRRC_kwDOABII585vD_4l",
      "diff_hunk": "@@ -122,10 +123,13 @@ bool StartLogging(const ArgsManager& args)\n \n     // Only log conf file usage message if conf file actually exists.\n     fs::path config_file_path = args.GetConfigFilePath();\n-    if (fs::exists(config_file_path)) {\n+    if (args.IsArgSet(\"-conf\") && args.IsArgNegated(\"-conf\")) {\n+        LogInfo(\"Config file: <disabled>\");\n+    } else if (fs::is_directory(config_file_path)) {\n+        LogWarning(\"Config file: %s (is directory, not file)\\n\", fs::PathToString(config_file_path));\n+    } else if (fs::exists(config_file_path)) {\n         LogPrintf(\"Config file: %s\\n\", fs::PathToString(config_file_path));\n     } else if (args.IsArgSet(\"-conf\")) {\n-        // Warn if no conf file exists at path provided by user\n         InitWarning(strprintf(_(\"The specified config file %s does not exist\"), fs::PathToString(config_file_path)));",
      "path": "src/init/common.cpp",
      "position": 21,
      "original_position": 21,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I find these kind of messages to be more readable than `Config file: %s (is directory, not file)` or `\"Config file: <disabled>`",
      "created_at": "2024-11-29T10:37:47Z",
      "updated_at": "2024-11-29T11:31:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1863319077",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863319077"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 133,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863320134",
      "pull_request_review_id": 2469613723,
      "id": 1863320134,
      "node_id": "PRRC_kwDOABII585vEAJG",
      "diff_hunk": "@@ -122,10 +123,13 @@ bool StartLogging(const ArgsManager& args)\n \n     // Only log conf file usage message if conf file actually exists.\n     fs::path config_file_path = args.GetConfigFilePath();\n-    if (fs::exists(config_file_path)) {\n+    if (args.IsArgSet(\"-conf\") && args.IsArgNegated(\"-conf\")) {\n+        LogInfo(\"Config file: <disabled>\");\n+    } else if (fs::is_directory(config_file_path)) {\n+        LogWarning(\"Config file: %s (is directory, not file)\\n\", fs::PathToString(config_file_path));",
      "path": "src/init/common.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "super-nit: redundant `\\n`\r\n(and as mentioned, if we don't need to parse the output, I'd prefer a more user-friendly output)",
      "created_at": "2024-11-29T10:38:35Z",
      "updated_at": "2024-11-29T11:31:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1863320134",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863320134"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863322403",
      "pull_request_review_id": 2469613723,
      "id": 1863322403,
      "node_id": "PRRC_kwDOABII585vEAsj",
      "diff_hunk": "@@ -106,24 +109,28 @@ bool GenerateAuthCookie(std::string* cookie_out, std::optional<fs::perms> cookie\n      */\n     std::ofstream file;\n     fs::path filepath_tmp = GetAuthCookieFile(true);\n+    if (filepath_tmp.empty()) {\n+        LogInfo(\"RPC authentication cookie file generation is disabled.\");\n+        return true;\n+    }\n     file.open(filepath_tmp);\n     if (!file.is_open()) {\n-        LogInfo(\"Unable to open cookie authentication file %s for writing\\n\", fs::PathToString(filepath_tmp));\n+        LogWarning(\"Unable to open cookie authentication file %s for writing\\n\", fs::PathToString(filepath_tmp));\n         return false;\n     }\n     file << cookie;\n     file.close();\n \n     fs::path filepath = GetAuthCookieFile(false);\n     if (!RenameOver(filepath_tmp, filepath)) {\n-        LogInfo(\"Unable to rename cookie authentication file %s to %s\\n\", fs::PathToString(filepath_tmp), fs::PathToString(filepath));\n+        LogWarning(\"Unable to rename cookie authentication file %s to %s\\n\", fs::PathToString(filepath_tmp), fs::PathToString(filepath));",
      "path": "src/rpc/request.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "👍 for changing return false logging to warn!\r\nnit: in other cases we've quoted the file paths",
      "created_at": "2024-11-29T10:40:12Z",
      "updated_at": "2024-11-29T11:31:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1863322403",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863322403"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863323186",
      "pull_request_review_id": 2469613723,
      "id": 1863323186,
      "node_id": "PRRC_kwDOABII585vEA4y",
      "diff_hunk": "@@ -106,24 +109,28 @@ bool GenerateAuthCookie(std::string* cookie_out, std::optional<fs::perms> cookie\n      */\n     std::ofstream file;\n     fs::path filepath_tmp = GetAuthCookieFile(true);\n+    if (filepath_tmp.empty()) {\n+        LogInfo(\"RPC authentication cookie file generation is disabled.\");\n+        return true;\n+    }\n     file.open(filepath_tmp);\n     if (!file.is_open()) {\n-        LogInfo(\"Unable to open cookie authentication file %s for writing\\n\", fs::PathToString(filepath_tmp));\n+        LogWarning(\"Unable to open cookie authentication file %s for writing\\n\", fs::PathToString(filepath_tmp));",
      "path": "src/rpc/request.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "same nit: `\\n` is likely redundant in these cases as well",
      "created_at": "2024-11-29T10:40:48Z",
      "updated_at": "2024-11-29T11:31:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1863323186",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863323186"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863326293",
      "pull_request_review_id": 2469613723,
      "id": 1863326293,
      "node_id": "PRRC_kwDOABII585vEBpV",
      "diff_hunk": "@@ -79,11 +79,11 @@ def read_logs(tmp_dir):\n     Delegates to generator function get_log_events() to provide individual log events\n     for each of the input log files.\"\"\"\n \n-    # Find out what the folder is called that holds the debug.log file\n-    glob = pathlib.Path(tmp_dir).glob('node0/**/debug.log')\n-    path = next(glob, None)\n-    if path:\n-        assert next(glob, None) is None #  more than one debug.log, should never happen\n+    # Find out what the folder is called that holds node 0's debug.log file\n+    debug_logs = list(pathlib.Path(tmp_dir).glob('node0/**/debug.log'))\n+    if len(debug_logs) > 0:\n+        path = debug_logs[0]\n+        assert len(debug_logs) < 2, 'More than one debug.log, should never happen:\\n\\t' + '\\n\\t'.join([str(f) for f in debug_logs])",
      "path": "test/functional/combine_logs.py",
      "position": null,
      "original_position": 13,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: \"should never happen\" -> but it just did, so can we either provide more context or remove the statement that was just invalidated?\r\n```suggestion\r\n        assert len(debug_logs) == 1, (\r\n            'Found multiple debug.log files, expected only one:\\n\\t' + \r\n            '\\n\\t'.join(str(f) for f in debug_logs)\r\n        )\r\n```",
      "created_at": "2024-11-29T10:43:12Z",
      "updated_at": "2024-11-29T11:31:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1863326293",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863326293"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863332192",
      "pull_request_review_id": 2469613723,
      "id": 1863332192,
      "node_id": "PRRC_kwDOABII585vEDFg",
      "diff_hunk": "@@ -79,11 +79,11 @@ def read_logs(tmp_dir):\n     Delegates to generator function get_log_events() to provide individual log events\n     for each of the input log files.\"\"\"\n \n-    # Find out what the folder is called that holds the debug.log file\n-    glob = pathlib.Path(tmp_dir).glob('node0/**/debug.log')\n-    path = next(glob, None)\n-    if path:\n-        assert next(glob, None) is None #  more than one debug.log, should never happen\n+    # Find out what the folder is called that holds node 0's debug.log file\n+    debug_logs = list(pathlib.Path(tmp_dir).glob('node0/**/debug.log'))\n+    if len(debug_logs) > 0:",
      "path": "test/functional/combine_logs.py",
      "position": 11,
      "original_position": 11,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:\r\n```suggestion\r\n    if debug_logs:\r\n```",
      "created_at": "2024-11-29T10:47:41Z",
      "updated_at": "2024-11-29T11:31:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1863332192",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863332192"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 84,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863337310",
      "pull_request_review_id": 2469613723,
      "id": 1863337310,
      "node_id": "PRRC_kwDOABII585vEEVe",
      "diff_hunk": "@@ -27,9 +27,71 @@ def set_test_params(self):\n         self.wallet_names = []\n         self.disable_autoconnect = False\n \n+    def setup_network(self):",
      "path": "test/functional/feature_config_args.py",
      "position": 5,
      "original_position": 4,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "My untrained eyes would prefer seeing this in a different PR, I can't meaningfully review these yet :/",
      "created_at": "2024-11-29T10:51:26Z",
      "updated_at": "2024-11-29T11:31:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1863337310",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863337310"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 31,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863338147",
      "pull_request_review_id": 2469613723,
      "id": 1863338147,
      "node_id": "PRRC_kwDOABII585vEEij",
      "diff_hunk": "@@ -196,10 +257,10 @@ def test_args_log(self):\n                 '-rpcuser=secret-rpcuser',\n                 '-torpassword=secret-torpassword',\n             ])\n+        # Leave node running for test_seed_peers()",
      "path": "test/functional/feature_config_args.py",
      "position": null,
      "original_position": 91,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Does it signal the lack of `self.stop_node(0)`? Does this mean the test run order matters now?",
      "created_at": "2024-11-29T10:52:10Z",
      "updated_at": "2024-11-29T11:31:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1863338147",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863338147"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 260,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863342759",
      "pull_request_review_id": 2469613723,
      "id": 1863342759,
      "node_id": "PRRC_kwDOABII585vEFqn",
      "diff_hunk": "@@ -294,22 +293,22 @@ static bool InitRPCAuthentication()\n {\n     if (gArgs.GetArg(\"-rpcpassword\", \"\") == \"\")\n     {\n-        LogInfo(\"Using random cookie authentication.\\n\");\n-\n         std::optional<fs::perms> cookie_perms{std::nullopt};\n         auto cookie_perms_arg{gArgs.GetArg(\"-rpccookieperms\")};\n         if (cookie_perms_arg) {\n             auto perm_opt = InterpretPermString(*cookie_perms_arg);\n             if (!perm_opt) {\n-                LogInfo(\"Invalid -rpccookieperms=%s; must be one of 'owner', 'group', or 'all'.\\n\", *cookie_perms_arg);\n+                LogError(\"Invalid -rpccookieperms=%s; must be one of 'owner', 'group', or 'all'.\", *cookie_perms_arg);",
      "path": "src/httprpc.cpp",
      "position": 33,
      "original_position": 33,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit Q: I'm not sure I understand the logging quoting standards here, when do we use `\\\"` and when `'` and when just `=%s`?",
      "created_at": "2024-11-29T10:55:34Z",
      "updated_at": "2024-11-29T11:31:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1863342759",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863342759"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 301,
      "original_line": 301,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863359735",
      "pull_request_review_id": 2469613723,
      "id": 1863359735,
      "node_id": "PRRC_kwDOABII585vEJz3",
      "diff_hunk": "@@ -142,6 +149,9 @@ bool GetAuthCookie(std::string *cookie_out)\n     std::ifstream file;\n     std::string cookie;\n     fs::path filepath = GetAuthCookieFile();\n+    if (filepath.empty()) {\n+        return true; // -norpccookiefile was specified",
      "path": "src/rpc/request.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Do I understand correctly that we're basically treating an empty path as an `std::nullopt` here (and commenting it everywhere since we admit it's hard to understand)?\r\nI understand that we can't fix everything in the same PR, but would like us to consider if it still makes sense to build on previous hacks.",
      "created_at": "2024-11-29T11:08:29Z",
      "updated_at": "2024-11-29T11:31:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1863359735",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863359735"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 153,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863364323",
      "pull_request_review_id": 2469613723,
      "id": 1863364323,
      "node_id": "PRRC_kwDOABII585vEK7j",
      "diff_hunk": "@@ -175,6 +175,8 @@ static fs::path GetPidFile(const ArgsManager& args)\n \n [[nodiscard]] static bool CreatePidFile(const ArgsManager& args)\n {\n+    if (args.IsArgNegated(\"-pid\")) return true;",
      "path": "src/init.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "bffd92f00f5bfbb5a622d0bd20bfeed9f8b10928",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "it's hard to review 14 commits, as hinted before, could the fix be in the same commit as the test - I personally am lacking a lot of context and wouldn't want this commit to be merged without making sure a test is added as well",
      "created_at": "2024-11-29T11:12:17Z",
      "updated_at": "2024-11-29T11:31:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1863364323",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863364323"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 178,
      "original_line": 178,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863372988",
      "pull_request_review_id": 2469613723,
      "id": 1863372988,
      "node_id": "PRRC_kwDOABII585vENC8",
      "diff_hunk": "@@ -307,9 +304,11 @@ static bool InitRPCAuthentication()\n             cookie_perms = *perm_opt;\n         }\n \n+        assert(strRPCUserColonPass.empty()); // Only support initializing once\n         if (!GenerateAuthCookie(&strRPCUserColonPass, cookie_perms)) {\n             return false;\n         }\n+        if (!strRPCUserColonPass.empty()) LogInfo(\"Using random cookie authentication.\");",
      "path": "src/httprpc.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "d7ecacf1dcce3b405cd35cffa1301067f713acce",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "what if it's empty?",
      "created_at": "2024-11-29T11:19:13Z",
      "updated_at": "2024-11-29T11:31:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1863372988",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863372988"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 311,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863378945",
      "pull_request_review_id": 2469613723,
      "id": 1863378945,
      "node_id": "PRRC_kwDOABII585vEOgB",
      "diff_hunk": "",
      "path": "src/common/config.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "original_commit_id": "2ac863bdf974d7b4b4e8314876d02270400b6240",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "in commit message `args: Properly support -noconf ...`:\r\n\r\n> have been updated earlier in this PR (https://github.com/bitcoin/bitcoin/commit/bffd92f00f5bfbb5a622d0bd20bfeed9f8b10928 and https://github.com/bitcoin/bitcoin/commit/f5a14f40e5e2ad3504d91ef03929898b3cab85b4).\r\n\r\nThe commits [have changed since](https://github.com/bitcoin/bitcoin/pull/31212/commits/d7ecacf1dcce3b405cd35cffa1301067f713acce), but instead of updating, I would rather recommend removing hashes from the commit message",
      "created_at": "2024-11-29T11:24:20Z",
      "updated_at": "2024-11-29T11:31:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1863378945",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863378945"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863380566",
      "pull_request_review_id": 2469613723,
      "id": 1863380566,
      "node_id": "PRRC_kwDOABII585vEO5W",
      "diff_hunk": "@@ -128,12 +128,14 @@ bool ArgsManager::ReadConfigFiles(std::string& error, bool ignore_invalid_keys)\n     }\n \n     const auto conf_path{GetConfigFilePath()};\n-    std::ifstream stream{conf_path};\n-\n-    // not ok to have a config file specified that cannot be opened\n-    if (IsArgSet(\"-conf\") && !stream.good()) {\n-        error = strprintf(\"specified config file \\\"%s\\\" could not be opened.\", fs::PathToString(conf_path));\n-        return false;\n+    std::ifstream stream;\n+    if (!conf_path.empty()) { // path is empty when -noconf is specified",
      "path": "src/common/config.cpp",
      "position": 19,
      "original_position": 11,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "2ac863bdf974d7b4b4e8314876d02270400b6240",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This bothers me more than it should: we're adding comments instead of solving these problems with code - conf_path should be an optional in that case instead of coming up with special value",
      "created_at": "2024-11-29T11:25:48Z",
      "updated_at": "2024-11-29T11:31:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1863380566",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863380566"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 133,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863392073",
      "pull_request_review_id": 2469722474,
      "id": 1863392073,
      "node_id": "PRRC_kwDOABII585vERtJ",
      "diff_hunk": "@@ -142,6 +150,10 @@ bool GetAuthCookie(std::string *cookie_out)\n     std::ifstream file;\n     std::string cookie;\n     fs::path filepath = GetAuthCookieFile();\n+    if (filepath.empty()) {\n+        LogDebug(BCLog::RPC, \"RPC authentication cookie file reading is disabled.\");\n+        return false;",
      "path": "src/rpc/request.cpp",
      "position": null,
      "original_position": 58,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "2bf7e59776fcfb2c8a477cf2abb59606f7b4aacc",
      "in_reply_to_id": 1853679146,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm fine with doing it in a different PR - will leave it up to you",
      "created_at": "2024-11-29T11:36:06Z",
      "updated_at": "2024-11-29T11:36:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1863392073",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863392073"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1866096570",
      "pull_request_review_id": 2473091175,
      "id": 1866096570,
      "node_id": "PRRC_kwDOABII585vOl-6",
      "diff_hunk": "@@ -128,12 +128,14 @@ bool ArgsManager::ReadConfigFiles(std::string& error, bool ignore_invalid_keys)\n     }\n \n     const auto conf_path{GetConfigFilePath()};\n-    std::ifstream stream{conf_path};\n-\n-    // not ok to have a config file specified that cannot be opened\n-    if (IsArgSet(\"-conf\") && !stream.good()) {\n-        error = strprintf(\"specified config file \\\"%s\\\" could not be opened.\", fs::PathToString(conf_path));\n-        return false;\n+    std::ifstream stream;\n+    if (!conf_path.empty()) { // path is empty when -noconf is specified",
      "path": "src/common/config.cpp",
      "position": 19,
      "original_position": 11,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "2ac863bdf974d7b4b4e8314876d02270400b6240",
      "in_reply_to_id": 1863380566,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We are currently using the nullness of `m_config_path` to signal something different, initialized/not, although I think it should probably be more explicit. See https://github.com/bitcoin/bitcoin/pull/31212#issuecomment-2470510859, and this code:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/2ac863bdf974d7b4b4e8314876d02270400b6240/src/common/args.cpp#L761-L772\r\n\r\nWe could possibly do `optional<optional<path>> m_config_path` to flag both initialization and negation... but I'm not sure I want to go down that road. Do you have any concrete suggestion?",
      "created_at": "2024-12-02T15:49:55Z",
      "updated_at": "2024-12-02T15:49:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1866096570",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1866096570"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 133,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1866191667",
      "pull_request_review_id": 2473248609,
      "id": 1866191667,
      "node_id": "PRRC_kwDOABII585vO9Mz",
      "diff_hunk": "@@ -128,12 +128,14 @@ bool ArgsManager::ReadConfigFiles(std::string& error, bool ignore_invalid_keys)\n     }\n \n     const auto conf_path{GetConfigFilePath()};\n-    std::ifstream stream{conf_path};\n-\n-    // not ok to have a config file specified that cannot be opened\n-    if (IsArgSet(\"-conf\") && !stream.good()) {\n-        error = strprintf(\"specified config file \\\"%s\\\" could not be opened.\", fs::PathToString(conf_path));\n-        return false;\n+    std::ifstream stream;\n+    if (!conf_path.empty()) { // path is empty when -noconf is specified",
      "path": "src/common/config.cpp",
      "position": 19,
      "original_position": 11,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "2ac863bdf974d7b4b4e8314876d02270400b6240",
      "in_reply_to_id": 1863380566,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "optional of optional sounds like a `std::variant` - but I'm fine with doing these in a separate PR, of course",
      "created_at": "2024-12-02T16:38:40Z",
      "updated_at": "2024-12-02T16:38:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1866191667",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1866191667"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 133,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1866307162",
      "pull_request_review_id": 2473436614,
      "id": 1866307162,
      "node_id": "PRRC_kwDOABII585vPZZa",
      "diff_hunk": "@@ -294,22 +293,22 @@ static bool InitRPCAuthentication()\n {\n     if (gArgs.GetArg(\"-rpcpassword\", \"\") == \"\")\n     {\n-        LogInfo(\"Using random cookie authentication.\\n\");\n-\n         std::optional<fs::perms> cookie_perms{std::nullopt};\n         auto cookie_perms_arg{gArgs.GetArg(\"-rpccookieperms\")};\n         if (cookie_perms_arg) {\n             auto perm_opt = InterpretPermString(*cookie_perms_arg);\n             if (!perm_opt) {\n-                LogInfo(\"Invalid -rpccookieperms=%s; must be one of 'owner', 'group', or 'all'.\\n\", *cookie_perms_arg);\n+                LogError(\"Invalid -rpccookieperms=%s; must be one of 'owner', 'group', or 'all'.\", *cookie_perms_arg);",
      "path": "src/httprpc.cpp",
      "position": 33,
      "original_position": 33,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "in_reply_to_id": 1863342759,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1863342759\r\n\r\n> nit Q: I'm not sure I understand the logging quoting standards here, when do we use `\\\"` and when `'` and when just `=%s`?\r\n\r\nI think these are just quoted to convey that 'owner' 'group' and 'all' are literal strings, not placeholders for permission values.\r\n\r\nIt would be nice if there was a standard way paths and arguments were quoted in log messages, but I don't think there is a standard right now.",
      "created_at": "2024-12-02T17:36:30Z",
      "updated_at": "2024-12-02T22:26:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1866307162",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1866307162"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 301,
      "original_line": 301,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1866325181",
      "pull_request_review_id": 2473436614,
      "id": 1866325181,
      "node_id": "PRRC_kwDOABII585vPdy9",
      "diff_hunk": "@@ -307,9 +304,11 @@ static bool InitRPCAuthentication()\n             cookie_perms = *perm_opt;\n         }\n \n+        assert(strRPCUserColonPass.empty()); // Only support initializing once\n         if (!GenerateAuthCookie(&strRPCUserColonPass, cookie_perms)) {\n             return false;\n         }\n+        if (!strRPCUserColonPass.empty()) LogInfo(\"Using random cookie authentication.\");",
      "path": "src/httprpc.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "d7ecacf1dcce3b405cd35cffa1301067f713acce",
      "in_reply_to_id": 1863372988,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1863372988\r\n\r\n> what if it's empty?\r\n\r\nIf it's empty it means the user specified `-norpccookiefile`, and some other authentication mechanism must be used. There's another log statement `LogInfo(\"RPC authentication cookie file generation is disabled.\");` in `GenerateAuthCookie` that could probably be moved here to make this clearer.",
      "created_at": "2024-12-02T17:49:17Z",
      "updated_at": "2024-12-02T22:26:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1866325181",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1866325181"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 311,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1866369774",
      "pull_request_review_id": 2473436614,
      "id": 1866369774,
      "node_id": "PRRC_kwDOABII585vPoru",
      "diff_hunk": "@@ -142,6 +149,9 @@ bool GetAuthCookie(std::string *cookie_out)\n     std::ifstream file;\n     std::string cookie;\n     fs::path filepath = GetAuthCookieFile();\n+    if (filepath.empty()) {\n+        return true; // -norpccookiefile was specified",
      "path": "src/rpc/request.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "in_reply_to_id": 1863359735,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1863359735\r\n\r\n> Do I understand correctly that we're basically treating an empty path as an `std::nullopt` here (and commenting it everywhere since we admit it's hard to understand)? I understand that we can't fix everything in the same PR, but would like us to consider if it still makes sense to build on previous hacks.\r\n\r\nJust using std::optional here would not be an improvement IMO. An `nullopt` setting is conventionally an unspecified setting, not a negated/disabled setting. So if we switched to std::optional we would still want to keep the comments clarifying which cases are being handled, and we would need to make sure there was error handling for the `path->empty()` cases. The convention that a `-no` prefixed path setting that should not be read from or written to is represented by `path{}` comes from [`ArgsManager::GetPathArg`](https://github.com/bitcoin/bitcoin/blob/ebe4cac38bf6c510b00b8e080acab079c54016d6/src/common/args.cpp#L274) and is generally convenient and safe.\r\n\r\nI agree there are advantages to using separate types for separate cases, but don't think it's an improvement  if adding std::optional increases the number of states that need to be handled or makes new code represent state differently than existing code.",
      "created_at": "2024-12-02T18:20:21Z",
      "updated_at": "2024-12-02T22:26:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1866369774",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1866369774"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 153,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1866384411",
      "pull_request_review_id": 2473436614,
      "id": 1866384411,
      "node_id": "PRRC_kwDOABII585vPsQb",
      "diff_hunk": "@@ -27,9 +27,71 @@ def set_test_params(self):\n         self.wallet_names = []\n         self.disable_autoconnect = False\n \n+    def setup_network(self):",
      "path": "test/functional/feature_config_args.py",
      "position": 5,
      "original_position": 4,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "in_reply_to_id": 1863337310,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test refactor: feature_config_args.py - Stop nodes at the end of tests, not at the beginning\" (eb2d96bb66f109e610ee44cf3fed5c6701e3b8e3)\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1863337310\r\n\r\n> My untrained eyes would prefer seeing this in a different PR, I can't meaningfully review these yet :/\r\n\r\nDon't disagree this commit could be a separate PR. A separate PR might attract feedback from reviewers more familiar with how the test framework is designed to be used, and if there is a bigger improvement that could be made here.\r\n\r\nBut it also seems fine to keep this, and it's fine to note in your overall review comment if you didn't review some part of the PR closely and you don't feel comfortable acking that part.",
      "created_at": "2024-12-02T18:29:38Z",
      "updated_at": "2024-12-02T22:26:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1866384411",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1866384411"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 31,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1866406451",
      "pull_request_review_id": 2473436614,
      "id": 1866406451,
      "node_id": "PRRC_kwDOABII585vPxoz",
      "diff_hunk": "@@ -128,12 +128,14 @@ bool ArgsManager::ReadConfigFiles(std::string& error, bool ignore_invalid_keys)\n     }\n \n     const auto conf_path{GetConfigFilePath()};\n-    std::ifstream stream{conf_path};\n-\n-    // not ok to have a config file specified that cannot be opened\n-    if (IsArgSet(\"-conf\") && !stream.good()) {\n-        error = strprintf(\"specified config file \\\"%s\\\" could not be opened.\", fs::PathToString(conf_path));\n-        return false;\n+    std::ifstream stream;\n+    if (!conf_path.empty()) { // path is empty when -noconf is specified",
      "path": "src/common/config.cpp",
      "position": 19,
      "original_position": 11,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "2ac863bdf974d7b4b4e8314876d02270400b6240",
      "in_reply_to_id": 1863380566,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1866191667\r\n\r\n> optional of optional sounds like a `std::variant` - but I'm fine with doing these in a separate PR, of course\r\n\r\nYes could use something like `std::variant<Disabled, not_empty<fs::path>>` if we want a separate type to represent the separate condition. ([`Disabled`](https://github.com/ryanofsky/bitcoin/blob/4e33ed4eb054e230436b68c681d978d0e7bea0a1/src/common/setting.h#L17-L18) could be the type from #31260)). `not_empty` could be a wrapper for `fs::path`,`std::string`, etc that does not allow empty values to be assigned, like `not_null` from #24423)\r\n\r\nBut IMO using separate types here is not necessary. I think it's reasonable to use empty `fs::path` objects to indicate paths that should not be written to or read from. I think the advantage of using separate types is it can force developers to handle disabled cases instead of forgetting about them, but there are other tradeoffs.\r\n\r\nI also think whether you are using `fs::path` or a different type you would want to keep the comment about `-noconf` because it explains why this code is not reading the config file.",
      "created_at": "2024-12-02T18:45:58Z",
      "updated_at": "2024-12-02T22:26:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1866406451",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1866406451"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 133,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1866653856",
      "pull_request_review_id": 2473436614,
      "id": 1866653856,
      "node_id": "PRRC_kwDOABII585vQuCg",
      "diff_hunk": "@@ -65,26 +65,33 @@ std::optional<ConfigError> InitConfig(ArgsManager& args, SettingsAbortFn setting\n         // Show an error or warning if there is a bitcoin.conf file in the\n         // datadir that is being ignored.\n         const fs::path base_config_path = base_path / BITCOIN_CONF_FILENAME;\n-        if (fs::exists(base_config_path) && !fs::equivalent(orig_config_path, base_config_path)) {\n-            const std::string cli_config_path = args.GetArg(\"-conf\", \"\");\n-            const std::string config_source = cli_config_path.empty()\n-                ? strprintf(\"data directory %s\", fs::quoted(fs::PathToString(orig_datadir_path)))\n-                : strprintf(\"command line argument %s\", fs::quoted(\"-conf=\" + cli_config_path));\n-            const std::string error = strprintf(\n-                \"Data directory %1$s contains a %2$s file which is ignored, because a different configuration file \"\n-                \"%3$s from %4$s is being used instead. Possible ways to address this would be to:\\n\"\n-                \"- Delete or rename the %2$s file in data directory %1$s.\\n\"\n-                \"- Change datadir= or conf= options to specify one configuration file, not two, and use \"\n-                \"includeconf= to include any other configuration files.\\n\"\n-                \"- Set allowignoredconf=1 option to treat this condition as a warning, not an error.\",\n-                fs::quoted(fs::PathToString(base_path)),\n-                fs::quoted(BITCOIN_CONF_FILENAME),\n-                fs::quoted(fs::PathToString(orig_config_path)),\n-                config_source);\n-            if (args.GetBoolArg(\"-allowignoredconf\", false)) {\n-                LogPrintf(\"Warning: %s\\n\", error);\n-            } else {\n-                return ConfigError{ConfigStatus::FAILED, Untranslated(error)};\n+        if (fs::exists(base_config_path)) {\n+            if (orig_config_path.empty()) {\n+                LogWarning(",
      "path": "src/common/init.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "2ac863bdf974d7b4b4e8314876d02270400b6240",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"args: Properly support -noconf\" (2ac863bdf974d7b4b4e8314876d02270400b6240)\r\n\r\nI'm still not sure why this is a useful warning. There would seem to be little reason to specify `-noconf` unless you are trying to ignore a config file, so why should you be warned if a file you were trying to ignore exists?  If anything, you might expect a warning in the opposite case, when a file you specified an option to ignore does *not* exist. Both warnings seem excessive to me and and I think the approach from 3a856c86685a5ab6f3cb78b17cb52cbb1b9ad95b just adding `orig_config_path.empty()` to this code so it functions with `-noconf` would make the most sense.\r\n\r\nIf you do see value in logging this information though, I think it should use LogInfo or LogDebug, instead of LogWarning.",
      "created_at": "2024-12-02T21:33:52Z",
      "updated_at": "2024-12-02T22:26:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1866653856",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1866653856"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1866689589",
      "pull_request_review_id": 2473436614,
      "id": 1866689589,
      "node_id": "PRRC_kwDOABII585vQ2w1",
      "diff_hunk": "@@ -130,6 +131,10 @@ bool ArgsManager::ReadConfigFiles(std::string& error, bool ignore_invalid_keys)\n     const auto conf_path{GetConfigFilePath()};\n     std::ifstream stream;\n     if (!conf_path.empty()) { // path is empty when -noconf is specified\n+        if (fs::is_directory(conf_path)) {",
      "path": "src/common/config.cpp",
      "position": 20,
      "original_position": 12,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "01b174493ec210c1c627083dfa9e9b86035c7eef",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"args: Catch directories in place of config files\" (01b174493ec210c1c627083dfa9e9b86035c7eef)\r\n\r\nIf macos is setting the eof bit when using ifstream to read from a directory paths as described https://github.com/bitcoin/bitcoin/pull/31212#issuecomment-2506175947, treating directories like empty files, maybe we really do need these is_directory calls, since there might be no other way on macos to distinguish directories from empty files, though I suspect it probably is indicating some error with `stream.bad()` and we don't really need to do this.\r\n\r\nThe windows behavior described https://github.com/bitcoin/bitcoin/pull/31212#issuecomment-2506175947 of refusing to open directories is less surprising than the mac behavior, and could be worked around by using `fs::exists` instead of `is_open` as a more direct way of determine whether the path exists.\r\n\r\nOverall, the current approach in this commit seems ok, but fragile to only check if the file paths are directories and not actually check that files were read successfully. I think a more ideal version of this taking windows and mac behavior into account would look like the following:\r\n\r\n<details><summary>diff</summary>\r\n<p>\r\n\r\n```diff\r\n--- a/src/common/config.cpp\r\n+++ b/src/common/config.cpp\r\n@@ -129,24 +129,19 @@ bool ArgsManager::ReadConfigFiles(std::string& error, bool ignore_invalid_keys)\r\n     }\r\n \r\n     const auto conf_path{GetConfigFilePath()};\r\n-    std::ifstream stream;\r\n-    if (!conf_path.empty()) { // path is empty when -noconf is specified\r\n-        if (fs::is_directory(conf_path)) {\r\n-            error = strprintf(\"Config file \\\"%s\\\" is a directory.\", fs::PathToString(conf_path));\r\n-            return false;\r\n-        }\r\n-        stream = std::ifstream{conf_path};\r\n-        // If the file is explicitly specified, it must be readable\r\n-        if (IsArgSet(\"-conf\") && !stream.good()) {\r\n-            error = strprintf(\"specified config file \\\"%s\\\" could not be opened.\", fs::PathToString(conf_path));\r\n-            return false;\r\n-        }\r\n-    }\r\n-    // ok to not have a config file\r\n-    if (stream.good()) {\r\n+    // Don't try to read the config file if -noconf is specified (so\r\n+    // conf_path.empty() is true), or if the -conf option is unset and the\r\n+    // default config file path doesn't exist.\r\n+    if (!conf_path.empty() && (IsArgSet(\"-conf\") || fs::exists(conf_path))) {\r\n+        std::ifstream stream{conf_path};\r\n         if (!ReadConfigStream(stream, fs::PathToString(conf_path), error, ignore_invalid_keys)) {\r\n             return false;\r\n         }\r\n+        // Error if config stream could not be read in full.\r\n+        if (!stream.eof() || stream.bad()) {\r\n+            error = strprintf(\"config file \\\"%s\\\" could not be read.\", fs::PathToString(conf_path));\r\n+            return false;\r\n+        }\r\n         // `-includeconf` cannot be included in the command line arguments except\r\n         // as `-noincludeconf` (which indicates that no included conf file should be used).\r\n         bool use_conf_file{true};\r\n@@ -182,16 +177,11 @@ bool ArgsManager::ReadConfigFiles(std::string& error, bool ignore_invalid_keys)\r\n             const size_t default_includes = add_includes({});\r\n \r\n             for (const std::string& conf_file_name : conf_file_names) {\r\n-                const auto include_conf_path{AbsPathForConfigVal(*this, fs::PathFromString(conf_file_name), /*net_specific=*/false)};\r\n-                if (fs::is_directory(include_conf_path)) {\r\n-                    error = strprintf(\"Included config file \\\"%s\\\" is a directory.\", fs::PathToString(include_conf_path));\r\n+                std::ifstream conf_file_stream{AbsPathForConfigVal(*this, fs::PathFromString(conf_file_name), /*net_specific=*/false)};\r\n+                if (!ReadConfigStream(conf_file_stream, conf_file_name, error, ignore_invalid_keys)) {\r\n                     return false;\r\n                 }\r\n-                std::ifstream conf_file_stream{include_conf_path};\r\n-                if (conf_file_stream.good()) {\r\n-                    if (!ReadConfigStream(conf_file_stream, conf_file_name, error, ignore_invalid_keys)) {\r\n-                        return false;\r\n-                    }\r\n+                if (conf_file_stream.eof() && !conf_file_stream.bad()) {\r\n                     LogPrintf(\"Included configuration file %s\\n\", conf_file_name);\r\n                 } else {\r\n                     error = \"Failed to include configuration file \" + conf_file_name;\r\n--- a/test/functional/feature_config_args.py\r\n+++ b/test/functional/feature_config_args.py\r\n@@ -45,7 +45,7 @@ class ConfArgsTest(BitcoinTestFramework):\r\n         self.stop_node(0)\r\n         self.nodes[0].assert_start_raises_init_error(\r\n             extra_args=['-regtest'],\r\n-            expected_msg=f'Error: Error reading configuration file: Config file \"{conf_path}\" is a directory.',\r\n+            expected_msg=f'Error: Error reading configuration file: config file \"{conf_path}\" could not be read.',\r\n         )\r\n         conf_path.rmdir()\r\n         os.rename(conf_path.with_suffix('.confbkp'), conf_path)\r\n@@ -55,7 +55,7 @@ class ConfArgsTest(BitcoinTestFramework):\r\n             conf.write(f'includeconf={self.nodes[0].datadir_path}\\n')\r\n         self.nodes[0].assert_start_raises_init_error(\r\n             extra_args=['-regtest'],\r\n-            expected_msg=f'Error: Error reading configuration file: Included config file \"{self.nodes[0].datadir_path}\" is a directory.',\r\n+            expected_msg=f'Error: Error reading configuration file: Failed to include configuration file {self.nodes[0].datadir_path}',\r\n         )\r\n \r\n         self.nodes[0].replace_in_config([(f'includeconf={self.nodes[0].datadir_path}', '')])\r\n@@ -521,7 +521,7 @@ class ConfArgsTest(BitcoinTestFramework):\r\n \r\n         # Check that an explicitly specified config file that cannot be opened fails\r\n         none_existent_conf_file = default_data_dir / \"none_existent_bitcoin.conf\"\r\n-        self.nodes[0].assert_start_raises_init_error(['-conf=' + f'{none_existent_conf_file}'], 'Error: Error reading configuration file: specified config file \"' + f'{none_existent_conf_file}' + '\" could not be opened.')\r\n+        self.nodes[0].assert_start_raises_init_error(['-conf=' + f'{none_existent_conf_file}'], 'Error: Error reading configuration file: config file \"' + f'{none_existent_conf_file}' + '\" could not be read.')\r\n \r\n         # Create the directory and ensure the config file now works\r\n         new_data_dir.mkdir()\r\n```\r\n</p>\r\n</details>\r\n\r\nBut current code seems fine and this could be done in a followup. Thanks for looking into this and making the current fix easy to understand.",
      "created_at": "2024-12-02T22:08:10Z",
      "updated_at": "2024-12-02T22:26:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1866689589",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1866689589"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 134,
      "original_line": 134,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867422543",
      "pull_request_review_id": 2475175622,
      "id": 1867422543,
      "node_id": "PRRC_kwDOABII585vTptP",
      "diff_hunk": "@@ -122,10 +123,13 @@ bool StartLogging(const ArgsManager& args)\n \n     // Only log conf file usage message if conf file actually exists.\n     fs::path config_file_path = args.GetConfigFilePath();\n-    if (fs::exists(config_file_path)) {\n+    if (args.IsArgSet(\"-conf\") && args.IsArgNegated(\"-conf\")) {",
      "path": "src/init/common.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "in_reply_to_id": 1863317001,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks! Fixed in latest push.",
      "created_at": "2024-12-03T10:06:31Z",
      "updated_at": "2024-12-03T10:50:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1867422543",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867422543"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867426740",
      "pull_request_review_id": 2475175622,
      "id": 1867426740,
      "node_id": "PRRC_kwDOABII585vTqu0",
      "diff_hunk": "@@ -122,10 +123,13 @@ bool StartLogging(const ArgsManager& args)\n \n     // Only log conf file usage message if conf file actually exists.\n     fs::path config_file_path = args.GetConfigFilePath();\n-    if (fs::exists(config_file_path)) {\n+    if (args.IsArgSet(\"-conf\") && args.IsArgNegated(\"-conf\")) {\n+        LogInfo(\"Config file: <disabled>\");\n+    } else if (fs::is_directory(config_file_path)) {\n+        LogWarning(\"Config file: %s (is directory, not file)\\n\", fs::PathToString(config_file_path));\n+    } else if (fs::exists(config_file_path)) {\n         LogPrintf(\"Config file: %s\\n\", fs::PathToString(config_file_path));\n     } else if (args.IsArgSet(\"-conf\")) {\n-        // Warn if no conf file exists at path provided by user\n         InitWarning(strprintf(_(\"The specified config file %s does not exist\"), fs::PathToString(config_file_path)));",
      "path": "src/init/common.cpp",
      "position": 21,
      "original_position": 21,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "in_reply_to_id": 1863319077,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I prefer having a \"Config file: \"-prefix to grep for in logs, so following that pattern for added messages here in this PR (but not going to touch the InitWarning as it might be shown in the GUI).",
      "created_at": "2024-12-03T10:09:30Z",
      "updated_at": "2024-12-03T10:50:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1867426740",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867426740"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 133,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867430106",
      "pull_request_review_id": 2475175622,
      "id": 1867430106,
      "node_id": "PRRC_kwDOABII585vTrja",
      "diff_hunk": "@@ -106,24 +109,28 @@ bool GenerateAuthCookie(std::string* cookie_out, std::optional<fs::perms> cookie\n      */\n     std::ofstream file;\n     fs::path filepath_tmp = GetAuthCookieFile(true);\n+    if (filepath_tmp.empty()) {\n+        LogInfo(\"RPC authentication cookie file generation is disabled.\");\n+        return true;\n+    }\n     file.open(filepath_tmp);\n     if (!file.is_open()) {\n-        LogInfo(\"Unable to open cookie authentication file %s for writing\\n\", fs::PathToString(filepath_tmp));\n+        LogWarning(\"Unable to open cookie authentication file %s for writing\\n\", fs::PathToString(filepath_tmp));\n         return false;\n     }\n     file << cookie;\n     file.close();\n \n     fs::path filepath = GetAuthCookieFile(false);\n     if (!RenameOver(filepath_tmp, filepath)) {\n-        LogInfo(\"Unable to rename cookie authentication file %s to %s\\n\", fs::PathToString(filepath_tmp), fs::PathToString(filepath));\n+        LogWarning(\"Unable to rename cookie authentication file %s to %s\\n\", fs::PathToString(filepath_tmp), fs::PathToString(filepath));",
      "path": "src/rpc/request.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "in_reply_to_id": 1863322403,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would rather not change to quote paths in all log messages of this function as it would touch even more lines.",
      "created_at": "2024-12-03T10:11:51Z",
      "updated_at": "2024-12-03T10:50:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1867430106",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867430106"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867433277",
      "pull_request_review_id": 2475175622,
      "id": 1867433277,
      "node_id": "PRRC_kwDOABII585vTsU9",
      "diff_hunk": "@@ -79,11 +79,11 @@ def read_logs(tmp_dir):\n     Delegates to generator function get_log_events() to provide individual log events\n     for each of the input log files.\"\"\"\n \n-    # Find out what the folder is called that holds the debug.log file\n-    glob = pathlib.Path(tmp_dir).glob('node0/**/debug.log')\n-    path = next(glob, None)\n-    if path:\n-        assert next(glob, None) is None #  more than one debug.log, should never happen\n+    # Find out what the folder is called that holds node 0's debug.log file\n+    debug_logs = list(pathlib.Path(tmp_dir).glob('node0/**/debug.log'))\n+    if len(debug_logs) > 0:\n+        path = debug_logs[0]\n+        assert len(debug_logs) < 2, 'More than one debug.log, should never happen:\\n\\t' + '\\n\\t'.join([str(f) for f in debug_logs])",
      "path": "test/functional/combine_logs.py",
      "position": null,
      "original_position": 13,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "in_reply_to_id": 1863326293,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, agree that it's a bit redundant in an assert, leftover from previous comment. Updated.",
      "created_at": "2024-12-03T10:13:57Z",
      "updated_at": "2024-12-03T10:50:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1867433277",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867433277"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867434512",
      "pull_request_review_id": 2475175622,
      "id": 1867434512,
      "node_id": "PRRC_kwDOABII585vTsoQ",
      "diff_hunk": "@@ -79,11 +79,11 @@ def read_logs(tmp_dir):\n     Delegates to generator function get_log_events() to provide individual log events\n     for each of the input log files.\"\"\"\n \n-    # Find out what the folder is called that holds the debug.log file\n-    glob = pathlib.Path(tmp_dir).glob('node0/**/debug.log')\n-    path = next(glob, None)\n-    if path:\n-        assert next(glob, None) is None #  more than one debug.log, should never happen\n+    # Find out what the folder is called that holds node 0's debug.log file\n+    debug_logs = list(pathlib.Path(tmp_dir).glob('node0/**/debug.log'))\n+    if len(debug_logs) > 0:",
      "path": "test/functional/combine_logs.py",
      "position": 11,
      "original_position": 11,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "in_reply_to_id": 1863332192,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Current way is clearer & safer to me.",
      "created_at": "2024-12-03T10:14:48Z",
      "updated_at": "2024-12-03T10:50:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1867434512",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867434512"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 84,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867438656",
      "pull_request_review_id": 2475175622,
      "id": 1867438656,
      "node_id": "PRRC_kwDOABII585vTtpA",
      "diff_hunk": "@@ -27,9 +27,71 @@ def set_test_params(self):\n         self.wallet_names = []\n         self.disable_autoconnect = False\n \n+    def setup_network(self):",
      "path": "test/functional/feature_config_args.py",
      "position": 5,
      "original_position": 4,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "in_reply_to_id": 1863337310,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've updated that commit to better document that I'm overriding the 2 methods (unfortunately our *.python-version* is 3.10.14, python 3.12 includes `@override`).",
      "created_at": "2024-12-03T10:17:39Z",
      "updated_at": "2024-12-03T10:50:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1867438656",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867438656"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 31,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867445337",
      "pull_request_review_id": 2475175622,
      "id": 1867445337,
      "node_id": "PRRC_kwDOABII585vTvRZ",
      "diff_hunk": "@@ -196,10 +257,10 @@ def test_args_log(self):\n                 '-rpcuser=secret-rpcuser',\n                 '-torpassword=secret-torpassword',\n             ])\n+        # Leave node running for test_seed_peers()",
      "path": "test/functional/feature_config_args.py",
      "position": null,
      "original_position": 91,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "in_reply_to_id": 1863338147,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Updated commit to make this function also call `self.stop_node(0)`, hammering down the last nail that stood out. :)\r\n\r\nHopefully that makes it easier to review. The commit was already making test run order matter less, but the new version takes it one step further. There may still be other state than node stopped/running that prevents re-ordering, but that was the main thing I ran into when adding test functions in the later commits.",
      "created_at": "2024-12-03T10:21:59Z",
      "updated_at": "2024-12-03T10:50:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1867445337",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867445337"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 260,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867460705",
      "pull_request_review_id": 2475175622,
      "id": 1867460705,
      "node_id": "PRRC_kwDOABII585vTzBh",
      "diff_hunk": "@@ -175,6 +175,8 @@ static fs::path GetPidFile(const ArgsManager& args)\n \n [[nodiscard]] static bool CreatePidFile(const ArgsManager& args)\n {\n+    if (args.IsArgNegated(\"-pid\")) return true;",
      "path": "src/init.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "bffd92f00f5bfbb5a622d0bd20bfeed9f8b10928",
      "in_reply_to_id": 1863364323,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "PR does not contain a test for this as I thought it was straightforward enough to skip and I didn't want to add more things to review/maintain. If we pass `-nopid` we simply do not:\r\n- Create the file\r\n- Write the PID\r\n- Set the `bool` to remember deleting the file\r\n- (Delete the file)\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/95a0104f2e9869799db84add108ae8c57b56d360/src/init.cpp#L165-L192",
      "created_at": "2024-12-03T10:31:19Z",
      "updated_at": "2024-12-03T10:50:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1867460705",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867460705"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 178,
      "original_line": 178,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867461728",
      "pull_request_review_id": 2475175622,
      "id": 1867461728,
      "node_id": "PRRC_kwDOABII585vTzRg",
      "diff_hunk": "@@ -307,9 +304,11 @@ static bool InitRPCAuthentication()\n             cookie_perms = *perm_opt;\n         }\n \n+        assert(strRPCUserColonPass.empty()); // Only support initializing once\n         if (!GenerateAuthCookie(&strRPCUserColonPass, cookie_perms)) {\n             return false;\n         }\n+        if (!strRPCUserColonPass.empty()) LogInfo(\"Using random cookie authentication.\");",
      "path": "src/httprpc.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "d7ecacf1dcce3b405cd35cffa1301067f713acce",
      "in_reply_to_id": 1863372988,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Moved back the log message in latest push to clarify.",
      "created_at": "2024-12-03T10:32:00Z",
      "updated_at": "2024-12-03T10:50:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1867461728",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867461728"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 311,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867463418",
      "pull_request_review_id": 2475175622,
      "id": 1867463418,
      "node_id": "PRRC_kwDOABII585vTzr6",
      "diff_hunk": "",
      "path": "src/common/config.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "original_commit_id": "2ac863bdf974d7b4b4e8314876d02270400b6240",
      "in_reply_to_id": 1863378945,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Cheers, replaced hashes with commit message titles.",
      "created_at": "2024-12-03T10:32:55Z",
      "updated_at": "2024-12-03T10:50:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1867463418",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867463418"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867468510",
      "pull_request_review_id": 2475175622,
      "id": 1867468510,
      "node_id": "PRRC_kwDOABII585vT07e",
      "diff_hunk": "@@ -65,26 +65,33 @@ std::optional<ConfigError> InitConfig(ArgsManager& args, SettingsAbortFn setting\n         // Show an error or warning if there is a bitcoin.conf file in the\n         // datadir that is being ignored.\n         const fs::path base_config_path = base_path / BITCOIN_CONF_FILENAME;\n-        if (fs::exists(base_config_path) && !fs::equivalent(orig_config_path, base_config_path)) {\n-            const std::string cli_config_path = args.GetArg(\"-conf\", \"\");\n-            const std::string config_source = cli_config_path.empty()\n-                ? strprintf(\"data directory %s\", fs::quoted(fs::PathToString(orig_datadir_path)))\n-                : strprintf(\"command line argument %s\", fs::quoted(\"-conf=\" + cli_config_path));\n-            const std::string error = strprintf(\n-                \"Data directory %1$s contains a %2$s file which is ignored, because a different configuration file \"\n-                \"%3$s from %4$s is being used instead. Possible ways to address this would be to:\\n\"\n-                \"- Delete or rename the %2$s file in data directory %1$s.\\n\"\n-                \"- Change datadir= or conf= options to specify one configuration file, not two, and use \"\n-                \"includeconf= to include any other configuration files.\\n\"\n-                \"- Set allowignoredconf=1 option to treat this condition as a warning, not an error.\",\n-                fs::quoted(fs::PathToString(base_path)),\n-                fs::quoted(BITCOIN_CONF_FILENAME),\n-                fs::quoted(fs::PathToString(orig_config_path)),\n-                config_source);\n-            if (args.GetBoolArg(\"-allowignoredconf\", false)) {\n-                LogPrintf(\"Warning: %s\\n\", error);\n-            } else {\n-                return ConfigError{ConfigStatus::FAILED, Untranslated(error)};\n+        if (fs::exists(base_config_path)) {\n+            if (orig_config_path.empty()) {\n+                LogWarning(",
      "path": "src/common/init.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "2ac863bdf974d7b4b4e8314876d02270400b6240",
      "in_reply_to_id": 1866653856,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Having a latent *bitcoin.conf* is not ideal and something the user should correct if they want to run with `-noconf` long-term to reduce potential for confusion (\"Why is my change to *bitcoin.conf* not getting picked up?!!\" until realizing `-noconf` was used). But changed to `LogInfo` for now.",
      "created_at": "2024-12-03T10:36:11Z",
      "updated_at": "2024-12-03T10:50:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1867468510",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867468510"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867491349",
      "pull_request_review_id": 2475175622,
      "id": 1867491349,
      "node_id": "PRRC_kwDOABII585vT6gV",
      "diff_hunk": "@@ -130,6 +131,10 @@ bool ArgsManager::ReadConfigFiles(std::string& error, bool ignore_invalid_keys)\n     const auto conf_path{GetConfigFilePath()};\n     std::ifstream stream;\n     if (!conf_path.empty()) { // path is empty when -noconf is specified\n+        if (fs::is_directory(conf_path)) {",
      "path": "src/common/config.cpp",
      "position": 20,
      "original_position": 12,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "01b174493ec210c1c627083dfa9e9b86035c7eef",
      "in_reply_to_id": 1866689589,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would rather not spend more cycles on this when C++ appears to not specify how `ifstream` interacts with directories. Even if we were to get it working with your approach on the 3 platforms on current CI, others might get it compiling on other setups where `is_directory()` would again have been more robust.\r\n\r\nI do see value in catching whether reading a file fails, but prefer keeping it out of scope of this PR.",
      "created_at": "2024-12-03T10:50:26Z",
      "updated_at": "2024-12-03T10:50:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1867491349",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867491349"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 134,
      "original_line": 134,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867710276",
      "pull_request_review_id": 2475661029,
      "id": 1867710276,
      "node_id": "PRRC_kwDOABII585vUv9E",
      "diff_hunk": "@@ -142,6 +149,9 @@ bool GetAuthCookie(std::string *cookie_out)\n     std::ifstream file;\n     std::string cookie;\n     fs::path filepath = GetAuthCookieFile();\n+    if (filepath.empty()) {\n+        return true; // -norpccookiefile was specified",
      "path": "src/rpc/request.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "c972e691d937f49d7d3f44d2b19b4035c6e67aaf",
      "in_reply_to_id": 1863359735,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I agree that empty string is not the best way to signal negation, and `nullopt` may not be either. Looking forward to `Disabled`-functionality mentioned in https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1866406451, but keeping as-is for now.",
      "created_at": "2024-12-03T13:19:24Z",
      "updated_at": "2024-12-03T13:19:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1867710276",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867710276"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 153,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869266813",
      "pull_request_review_id": 2478197206,
      "id": 1869266813,
      "node_id": "PRRC_kwDOABII585var99",
      "diff_hunk": "@@ -50,11 +50,11 @@ static int AppInitUtil(ArgsManager& args, int argc, char* argv[])\n         return EXIT_FAILURE;\n     }\n \n-    if (HelpRequested(args) || args.IsArgSet(\"-version\")) {\n+    if (HelpRequested(args) || args.GetBoolArg(\"-version\", false)) {",
      "path": "src/bitcoin-util.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm not sure I understand how `-noversion` is supposed to work.\r\n\r\nI tried changing `test/functional/feature_help.py` to:\r\n```python\r\n    def run_test(self):\r\n        self.log.info(\"Start bitcoin with -h for help text\")\r\n        self.nodes[0].start(extra_args=['-h', '-noversion']) # added -noversion\r\n        # Node should exit immediately and output help to stdout.\r\n        output, _ = self.get_node_output(ret_code_expected=0)\r\n        assert b'Options' in output\r\n        assert b'version' not in output # added check\r\n        self.log.info(f\"Help text received: {output[0:60]} (...)\")\r\n```\r\nwhich fails since the version is still in the output.\r\n\r\nTried:\r\n```python\r\n        self.log.info(\"Start bitcoin with -noversion for version information\")\r\n        self.nodes[0].start(extra_args=['-version=0']) # -version=1 works\r\n        # Node should exit immediately and output version to stdout.\r\n        output, _ = self.get_node_output(ret_code_expected=0)\r\n        assert b'version' in output\r\n        self.log.info(f\"Version text received: {output[0:60]} (...)\")\r\n```\r\nwhich just hangs with no RPC connection available.\r\n\r\nSame for\r\n```bash\r\n./build/src/bitcoind -noversion | head -6\r\n2024-12-04T11:20:31Z Bitcoin Core version v28.99.0-d517798ca59a-dirty (debug build)\r\n2024-12-04T11:20:31Z Using the 'arm_shani(1way,2way)' SHA256 implementation\r\n2024-12-04T11:20:31Z Default data directory /Users/lorinc/Library/Application Support/Bitcoin\r\n2024-12-04T11:20:31Z Using data directory /Users/lorinc/Library/Application Support/Bitcoin\r\n2024-12-04T11:20:31Z Config file: /Users/lorinc/Library/Application Support/Bitcoin/bitcoin.conf (not found, skipping)\r\n2024-12-04T11:20:31Z Command-line arg: version=false\r\n```\r\nthe version is still in the header - is this not how one is supposed to use this param?\r\n\r\nNote that `-version` does display a different header, but both of them display the version itself, so the new `-noversion` param is confusing now:\r\n```bash\r\n./build/src/bitcoind -version | head -6\r\nBitcoin Core daemon version v28.99.0-d517798ca59a-dirty\r\nCopyright (C) 2009-2024 The Bitcoin Core developers\r\n\r\nPlease contribute if you find Bitcoin Core useful. Visit\r\n<https://bitcoincore.org/> for further information about the software.\r\nThe source code is available from <https://github.com/bitcoin/bitcoin>.\r\n```",
      "created_at": "2024-12-04T11:15:53Z",
      "updated_at": "2024-12-04T12:25:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1869266813",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869266813"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 53,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869307947",
      "pull_request_review_id": 2478197206,
      "id": 1869307947,
      "node_id": "PRRC_kwDOABII585va2Ar",
      "diff_hunk": "@@ -79,11 +79,12 @@ def read_logs(tmp_dir):\n     Delegates to generator function get_log_events() to provide individual log events\n     for each of the input log files.\"\"\"\n \n-    # Find out what the folder is called that holds the debug.log file\n-    glob = pathlib.Path(tmp_dir).glob('node0/**/debug.log')\n-    path = next(glob, None)\n-    if path:\n-        assert next(glob, None) is None #  more than one debug.log, should never happen\n+    # Find out what the folder is called that holds node 0's debug.log file\n+    debug_logs = list(pathlib.Path(tmp_dir).glob('node0/**/debug.log'))\n+    if len(debug_logs) > 0:\n+        assert len(debug_logs) < 2, 'Max one debug.log is supported, ' \\",
      "path": "test/functional/combine_logs.py",
      "position": 12,
      "original_position": 12,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "75bacabb55f3d54ad9b2c660cafc82c167e4f644",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: `len(debug_logs) > 0 && len(debug_logs) < 2` is basically `len(debug_logs) == 1`.\r\nWhich could likely be consolidated to a switch, something like:\r\n```python\r\n    debug_logs = list(pathlib.Path(tmp_dir).glob('node0/**/debug.log'))\r\n    match len(debug_logs):\r\n        case 0: chain = 'regtest'\r\n        case 1: chain = re.search(r'node0/(.+?)/debug\\.log$', debug_logs[0].as_posix()).group(1)\r\n        case _: raise AssertionError(f\"Max one debug.log is supported, found several:\\n\\t\" + \"\\n\\t\".join(map(str, debug_logs)))\r\n```",
      "created_at": "2024-12-04T11:34:23Z",
      "updated_at": "2024-12-04T12:25:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1869307947",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869307947"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 85,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869619567",
      "pull_request_review_id": 2478832844,
      "id": 1869619567,
      "node_id": "PRRC_kwDOABII585vcCFv",
      "diff_hunk": "@@ -50,11 +50,11 @@ static int AppInitUtil(ArgsManager& args, int argc, char* argv[])\n         return EXIT_FAILURE;\n     }\n \n-    if (HelpRequested(args) || args.IsArgSet(\"-version\")) {\n+    if (HelpRequested(args) || args.GetBoolArg(\"-version\", false)) {",
      "path": "src/bitcoin-util.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "in_reply_to_id": 1869266813,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The version number is always going to be displayed whether you run `bitcoind` with `-version` `-help` or no arguments at all, because it is logged at startup. If you don't want to see the version number you need to run `bitcoind` with `-noprinttoconsole` or `-daemon` to not log to the console.\r\n\r\nThe point of `-version` is to show the version number and copyright information and exit, and the point of `-noversion` is to do the opposite and start up normally. You can think of `-version` as being short for `-print-version-then-exit=1` and `-noversion` as being short for `-print-version-then-exit=0`. I doubt there are any realistic use-cases for `-noversion`, and new behavior seems less confusing than previous behavior. The point of the commit is just to make this option behave like other boolean options, where `-nooption` does the opposite of `-option` instead of doing the same thing.",
      "created_at": "2024-12-04T14:18:18Z",
      "updated_at": "2024-12-04T14:18:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1869619567",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869619567"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 53,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869626885",
      "pull_request_review_id": 2478843649,
      "id": 1869626885,
      "node_id": "PRRC_kwDOABII585vcD4F",
      "diff_hunk": "@@ -50,11 +50,11 @@ static int AppInitUtil(ArgsManager& args, int argc, char* argv[])\n         return EXIT_FAILURE;\n     }\n \n-    if (HelpRequested(args) || args.IsArgSet(\"-version\")) {\n+    if (HelpRequested(args) || args.GetBoolArg(\"-version\", false)) {",
      "path": "src/bitcoin-util.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "in_reply_to_id": 1869266813,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm not yet sure this makes the behavior clearer for the version parameter, but the rest seems fine to me, thanks for clarifying.\r\n\r\n> No longer print version information when getting passed -noversion.\r\n\r\nmaybe this needs updating in that case",
      "created_at": "2024-12-04T14:21:20Z",
      "updated_at": "2024-12-04T14:23:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1869626885",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869626885"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 53,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869764670",
      "pull_request_review_id": 2479061009,
      "id": 1869764670,
      "node_id": "PRRC_kwDOABII585vclg-",
      "diff_hunk": "@@ -79,11 +79,12 @@ def read_logs(tmp_dir):\n     Delegates to generator function get_log_events() to provide individual log events\n     for each of the input log files.\"\"\"\n \n-    # Find out what the folder is called that holds the debug.log file\n-    glob = pathlib.Path(tmp_dir).glob('node0/**/debug.log')\n-    path = next(glob, None)\n-    if path:\n-        assert next(glob, None) is None #  more than one debug.log, should never happen\n+    # Find out what the folder is called that holds node 0's debug.log file\n+    debug_logs = list(pathlib.Path(tmp_dir).glob('node0/**/debug.log'))\n+    if len(debug_logs) > 0:\n+        assert len(debug_logs) < 2, 'Max one debug.log is supported, ' \\",
      "path": "test/functional/combine_logs.py",
      "position": 12,
      "original_position": 12,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "75bacabb55f3d54ad9b2c660cafc82c167e4f644",
      "in_reply_to_id": 1869307947,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Sweet! Will do something like this if I need to retouch for other reasons. (Might use `RuntimeError`).",
      "created_at": "2024-12-04T15:18:07Z",
      "updated_at": "2024-12-04T15:18:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1869764670",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869764670"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 85,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869823577",
      "pull_request_review_id": 2479155916,
      "id": 1869823577,
      "node_id": "PRRC_kwDOABII585vcz5Z",
      "diff_hunk": "@@ -50,11 +50,11 @@ static int AppInitUtil(ArgsManager& args, int argc, char* argv[])\n         return EXIT_FAILURE;\n     }\n \n-    if (HelpRequested(args) || args.IsArgSet(\"-version\")) {\n+    if (HelpRequested(args) || args.GetBoolArg(\"-version\", false)) {",
      "path": "src/bitcoin-util.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "in_reply_to_id": 1869266813,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks @ryanofsky for arguing my case. One could possibly stretch `-noversion` to actually remove the version from the default log, but not sure if that would be more useful. The fact that one of `-version`/`-noversion` exits quickly is mildly confusing.\r\n\r\n---\r\n\r\n> Tried:\r\n> \r\n> ```python\r\n>         self.log.info(\"Start bitcoin with -noversion for version information\")\r\n>         self.nodes[0].start(extra_args=['-version=0']) # -version=1 works\r\n>         # Node should exit immediately and output version to stdout.\r\n>         output, _ = self.get_node_output(ret_code_expected=0)\r\n>         assert b'version' in output\r\n>         self.log.info(f\"Version text received: {output[0:60]} (...)\")\r\n> ```\r\n> \r\n> which just hangs with no RPC connection available.\r\n\r\nThat is slightly incorrect. Here is the full error I got when trying to reproduce your change:\r\n\r\n```\r\n2024-12-04T15:35:30.230000Z TestFramework (INFO): PRNG seed is: 6906262290736093521\r\n2024-12-04T15:35:30.230000Z TestFramework (DEBUG): Setting up network thread\r\n2024-12-04T15:35:30.231000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_func_test_n5c4b731\r\n2024-12-04T15:35:30.231000Z TestFramework (INFO): Start bitcoin with -h for help text\r\n2024-12-04T15:35:30.232000Z TestFramework.node0 (DEBUG): bitcoind started, waiting for RPC to come up\r\n2024-12-04T15:35:30.239000Z TestFramework (INFO): Help text received: b'Bitcoin Core daemon version v28.99.0-95a0104f2e98-dirty\\n\\nThe' (...)\r\n2024-12-04T15:35:30.239000Z TestFramework (INFO): Start bitcoin with -version for version information\r\n2024-12-04T15:35:30.240000Z TestFramework.node0 (DEBUG): bitcoind started, waiting for RPC to come up\r\n2024-12-04T15:36:30.240000Z TestFramework (ERROR): Unexpected exception caught during testing\r\nTraceback (most recent call last):\r\n  File \"/home/hodlinator/bitcoin/test/functional/test_framework/test_framework.py\", line 132, in main\r\n    self.run_test()\r\n  File \"/home/hodlinator/bitcoin/build/test/functional/feature_help.py\", line 48, in run_test\r\n    output, _ = self.get_node_output(ret_code_expected=0)\r\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/hodlinator/bitcoin/build/test/functional/feature_help.py\", line 20, in get_node_output\r\n    ret_code = self.nodes[0].process.wait(timeout=60)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/nix/store/wfbjq35kxs6x83c3ncpfxdyl5gbhdx4h-python3-3.12.6/lib/python3.12/subprocess.py\", line 1264, in wait\r\n    return self._wait(timeout=timeout)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/nix/store/wfbjq35kxs6x83c3ncpfxdyl5gbhdx4h-python3-3.12.6/lib/python3.12/subprocess.py\", line 2045, in _wait\r\n    raise TimeoutExpired(self.args, timeout)\r\nsubprocess.TimeoutExpired: Command '['/home/hodlinator/bitcoin/build/src/bitcoind', '-datadir=/tmp/bitcoin_func_test_n5c4b731/node0', '-logtimemicros', '-debug', '-debugexclude=libevent', '-debugexclude=leveldb', '-debugexclude=rand', '-uacomment=testnode0', '-disablewallet', '-logthreadnames', '-logsourcelocations', '-loglevel=trace', '-v2transport=0', '-version=0']' timed out after 60 seconds\r\n2024-12-04T15:36:30.245000Z TestFramework (DEBUG): Closing down network thread\r\n2024-12-04T15:36:30.296000Z TestFramework (INFO): Stopping nodes\r\n2024-12-04T15:36:30.296000Z TestFramework.node0 (DEBUG): Stopping node\r\nTraceback (most recent call last):\r\n  File \"/home/hodlinator/bitcoin/build/test/functional/feature_help.py\", line 62, in <module>\r\n    HelpTest(__file__).main()\r\n  File \"/home/hodlinator/bitcoin/test/functional/test_framework/test_framework.py\", line 155, in main\r\n    exit_code = self.shutdown()\r\n                ^^^^^^^^^^^^^^^\r\n  File \"/home/hodlinator/bitcoin/test/functional/test_framework/test_framework.py\", line 318, in shutdown\r\n    self.stop_nodes()\r\n  File \"/home/hodlinator/bitcoin/test/functional/test_framework/test_framework.py\", line 587, in stop_nodes\r\n    node.stop_node(wait=wait, wait_until_stopped=False)\r\n  File \"/home/hodlinator/bitcoin/test/functional/test_framework/test_node.py\", line 397, in stop_node\r\n    self.stop(wait=wait)\r\n    ^^^^^^^^^\r\n  File \"/home/hodlinator/bitcoin/test/functional/test_framework/test_node.py\", line 215, in __getattr__\r\n    assert self.rpc_connected and self.rpc is not None, self._node_msg(\"Error: no RPC connection\")\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nAssertionError: [node 0] Error: no RPC connection\r\n[node 0] Cleaning up leftover process\r\n```\r\n\r\nIt's the call to `process.wait()` in the local `get_node_output()` in *feature_help.py* that times out. The RPC assertion failure is just a knock-on issue that is fixed by #30660.\r\n\r\n<details>\r\n<summary>\r\nLog with #30660 cherry-picked on top.\r\n</summary>\r\n\r\n```\r\n2024-12-04T15:41:34.993000Z TestFramework (INFO): PRNG seed is: 7034279536394037572\r\n2024-12-04T15:41:34.994000Z TestFramework (DEBUG): Setting up network thread\r\n2024-12-04T15:41:34.994000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_func_test_3wqbq2m9\r\n2024-12-04T15:41:34.994000Z TestFramework (INFO): Start bitcoin with -h for help text\r\n2024-12-04T15:41:34.995000Z TestFramework.node0 (DEBUG): bitcoind started with PID 881245, waiting for RPC to come up\r\n2024-12-04T15:41:35.002000Z TestFramework (INFO): Help text received: b'Bitcoin Core daemon version v28.99.0-95a0104f2e98-dirty\\n\\nThe' (...)\r\n2024-12-04T15:41:35.002000Z TestFramework (INFO): Start bitcoin with -version for version information\r\n2024-12-04T15:41:35.003000Z TestFramework.node0 (DEBUG): bitcoind started with PID 881246, waiting for RPC to come up\r\n2024-12-04T15:42:35.004000Z TestFramework (ERROR): Unexpected exception caught during testing\r\nTraceback (most recent call last):\r\n  File \"/home/hodlinator/bitcoin/test/functional/test_framework/test_framework.py\", line 132, in main\r\n    self.run_test()\r\n  File \"/home/hodlinator/bitcoin/build/test/functional/feature_help.py\", line 48, in run_test\r\n    output, _ = self.get_node_output(ret_code_expected=0)\r\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/hodlinator/bitcoin/build/test/functional/feature_help.py\", line 20, in get_node_output\r\n    ret_code = self.nodes[0].process.wait(timeout=60)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/nix/store/wfbjq35kxs6x83c3ncpfxdyl5gbhdx4h-python3-3.12.6/lib/python3.12/subprocess.py\", line 1264, in wait\r\n    return self._wait(timeout=timeout)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/nix/store/wfbjq35kxs6x83c3ncpfxdyl5gbhdx4h-python3-3.12.6/lib/python3.12/subprocess.py\", line 2045, in _wait\r\n    raise TimeoutExpired(self.args, timeout)\r\nsubprocess.TimeoutExpired: Command '['/home/hodlinator/bitcoin/build/src/bitcoind', '-datadir=/tmp/bitcoin_func_test_3wqbq2m9/node0', '-logtimemicros', '-debug', '-debugexclude=libevent', '-debugexclude=leveldb', '-debugexclude=rand', '-uacomment=testnode0', '-disablewallet', '-logthreadnames', '-logsourcelocations', '-loglevel=trace', '-v2transport=0', '-version=0']' timed out after 60 seconds\r\n2024-12-04T15:42:35.009000Z TestFramework (DEBUG): Closing down network thread\r\n2024-12-04T15:42:35.060000Z TestFramework (INFO): Stopping nodes\r\n2024-12-04T15:42:35.060000Z TestFramework.node0 (DEBUG): Stopping node\r\n2024-12-04T15:42:35.060000Z TestFramework.node0 (WARNING): Cannot call stop-RPC as we are not connected. Killing process 881246 so that wait_until_stopped will not time out.\r\n2024-12-04T15:42:35.111000Z TestFramework.node0 (DEBUG): Node stopped\r\n2024-12-04T15:42:35.111000Z TestFramework (WARNING): Not cleaning up dir /tmp/bitcoin_func_test_3wqbq2m9\r\n2024-12-04T15:42:35.111000Z TestFramework (ERROR): Test failed. Test logging available at /tmp/bitcoin_func_test_3wqbq2m9/test_framework.log\r\n2024-12-04T15:42:35.111000Z TestFramework (ERROR): \r\n2024-12-04T15:42:35.112000Z TestFramework (ERROR): Hint: Call /home/hodlinator/bitcoin/test/functional/combine_logs.py '/tmp/bitcoin_func_test_3wqbq2m9' to consolidate all logs\r\n2024-12-04T15:42:35.112000Z TestFramework (ERROR): \r\n2024-12-04T15:42:35.112000Z TestFramework (ERROR): If this failure happened unexpectedly or intermittently, please file a bug and provide a link or upload of the combined log.\r\n2024-12-04T15:42:35.112000Z TestFramework (ERROR): https://github.com/bitcoin/bitcoin/issues\r\n2024-12-04T15:42:35.112000Z TestFramework (ERROR): \r\n```\r\n\r\n</details>",
      "created_at": "2024-12-04T15:45:58Z",
      "updated_at": "2024-12-04T15:45:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1869823577",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869823577"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 53,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1939050902",
      "pull_request_review_id": 2589345394,
      "id": 1939050902,
      "node_id": "PRRC_kwDOABII585zk5GW",
      "diff_hunk": "@@ -79,11 +79,12 @@ def read_logs(tmp_dir):\n     Delegates to generator function get_log_events() to provide individual log events\n     for each of the input log files.\"\"\"\n \n-    # Find out what the folder is called that holds the debug.log file\n-    glob = pathlib.Path(tmp_dir).glob('node0/**/debug.log')\n-    path = next(glob, None)\n-    if path:\n-        assert next(glob, None) is None #  more than one debug.log, should never happen\n+    # Find out what the folder is called that holds node 0's debug.log file\n+    debug_logs = list(pathlib.Path(tmp_dir).glob('node0/**/debug.log'))\n+    if len(debug_logs) > 0:\n+        assert len(debug_logs) < 2, 'Max one debug.log is supported, ' \\",
      "path": "test/functional/combine_logs.py",
      "position": 12,
      "original_position": 12,
      "commit_id": "95a0104f2e9869799db84add108ae8c57b56d360",
      "original_commit_id": "75bacabb55f3d54ad9b2c660cafc82c167e4f644",
      "in_reply_to_id": 1869307947,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "(Resolved by now merged #31433).",
      "created_at": "2025-02-03T09:25:13Z",
      "updated_at": "2025-02-03T09:25:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31212#discussion_r1939050902",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1939050902"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31212"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 85,
      "original_line": 85,
      "side": "RIGHT"
    }
  ]
}