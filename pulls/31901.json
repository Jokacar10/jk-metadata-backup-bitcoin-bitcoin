{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901",
    "id": 2343078574,
    "node_id": "PR_kwDOABII586LqIqu",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31901",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31901.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31901.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31901",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31901/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/fa99c3b544b631cfe34d52fb5e71636aedb1b423",
    "number": 31901,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "contrib: Add deterministic-unittest-coverage",
    "user": {
      "login": "maflcko",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maflcko",
      "html_url": "https://github.com/maflcko",
      "followers_url": "https://api.github.com/users/maflcko/followers",
      "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
      "organizations_url": "https://api.github.com/users/maflcko/orgs",
      "repos_url": "https://api.github.com/users/maflcko/repos",
      "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/maflcko/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "The `contrib/devtools/test_deterministic_coverage.sh` script is problematic:\r\n\r\n* It is written in bash. This can lead to issues when running with the ancient bash version shipped by macOS by default, or can lead to other compatibility issues, such as https://github.com/bitcoin/bitcoin/pull/31588#discussion_r1946784827. Also, pipefail isn't set, so IO errors may be silently ignored.\r\n* It is based on gcov. This can lead to issues, such as https://github.com/bitcoin/bitcoin/pull/31588#pullrequestreview-2602169248 (possibly due to prefix-map), or https://github.com/bitcoin/bitcoin/pull/31588#issuecomment-2646395385 (gcovr processing error), or https://github.com/bitcoin/bitcoin/pull/31588#pullrequestreview-2605954001 (gcovr assertion error).\r\n* The script is severely outdated, with the last update to `NON_DETERMINISTIC_TESTS` being in the prior decade.\r\n\r\nInstead of patching around all issues one-by-one, just provide a fresh rewrite, based on the recently added `deterministic-fuzz-coverage` tool based on clang, llvm-cov, and llvm-profdata. (Initial feedback indicates that this is a more promising attempt: https://github.com/bitcoin/bitcoin/pull/31588#issuecomment-2649356408 and https://github.com/bitcoin/bitcoin/pull/31588#issuecomment-2649354598).\r\n\r\nThe new tool also sets `RANDOM_CTX_SEED=21` as suggested by hodlinator in https://github.com/bitcoin/bitcoin/pull/31588#issuecomment-2650784726.",
    "labels": [
      {
        "id": 231994551,
        "node_id": "MDU6TGFiZWwyMzE5OTQ1NTE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Scripts%20and%20tools",
        "name": "Scripts and tools",
        "color": "ffffee",
        "default": false
      }
    ],
    "created_at": "2025-02-18T20:30:25Z",
    "updated_at": "2025-03-15T09:03:53Z",
    "closed_at": "2025-03-13T04:30:41Z",
    "mergeable_state": "unknown",
    "merged": true,
    "merged_at": "2025-03-13T04:30:41Z",
    "merged_by": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "merge_commit_sha": "c20a5ce106be716a503bcf615a1900ba8c635430",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "maflcko:2502-deterministic-unittest-coverage",
      "ref": "2502-deterministic-unittest-coverage",
      "sha": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 40046254,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MDA0NjI1NA==",
        "name": "bitcoin-core",
        "full_name": "maflcko/bitcoin-core",
        "owner": {
          "login": "maflcko",
          "id": 6399679,
          "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/maflcko",
          "html_url": "https://github.com/maflcko",
          "followers_url": "https://api.github.com/users/maflcko/followers",
          "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
          "organizations_url": "https://api.github.com/users/maflcko/orgs",
          "repos_url": "https://api.github.com/users/maflcko/repos",
          "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/maflcko/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/maflcko/bitcoin-core",
        "fork": true,
        "url": "https://api.github.com/repos/maflcko/bitcoin-core",
        "archive_url": "https://api.github.com/repos/maflcko/bitcoin-core/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/maflcko/bitcoin-core/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/maflcko/bitcoin-core/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/maflcko/bitcoin-core/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/maflcko/bitcoin-core/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/maflcko/bitcoin-core/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/maflcko/bitcoin-core/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/maflcko/bitcoin-core/contributors",
        "deployments_url": "https://api.github.com/repos/maflcko/bitcoin-core/deployments",
        "downloads_url": "https://api.github.com/repos/maflcko/bitcoin-core/downloads",
        "events_url": "https://api.github.com/repos/maflcko/bitcoin-core/events",
        "forks_url": "https://api.github.com/repos/maflcko/bitcoin-core/forks",
        "git_commits_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/tags%7B/sha%7D",
        "git_url": "git://github.com/maflcko/bitcoin-core.git",
        "issue_comment_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/maflcko/bitcoin-core/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/maflcko/bitcoin-core/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/maflcko/bitcoin-core/languages",
        "merges_url": "https://api.github.com/repos/maflcko/bitcoin-core/merges",
        "milestones_url": "https://api.github.com/repos/maflcko/bitcoin-core/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/maflcko/bitcoin-core/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/maflcko/bitcoin-core/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/maflcko/bitcoin-core/releases%7B/id%7D",
        "ssh_url": "git@github.com:maflcko/bitcoin-core.git",
        "stargazers_url": "https://api.github.com/repos/maflcko/bitcoin-core/stargazers",
        "statuses_url": "https://api.github.com/repos/maflcko/bitcoin-core/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/maflcko/bitcoin-core/subscribers",
        "subscription_url": "https://api.github.com/repos/maflcko/bitcoin-core/subscription",
        "tags_url": "https://api.github.com/repos/maflcko/bitcoin-core/tags",
        "teams_url": "https://api.github.com/repos/maflcko/bitcoin-core/teams",
        "trees_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/maflcko/bitcoin-core.git",
        "hooks_url": "https://api.github.com/repos/maflcko/bitcoin-core/hooks",
        "svn_url": "https://github.com/maflcko/bitcoin-core",
        "homepage": "",
        "language": "C++",
        "forks_count": 9,
        "stargazers_count": 27,
        "watchers_count": 27,
        "size": 246693,
        "default_branch": "master",
        "open_issues_count": 15,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-03-15T08:18:03Z",
        "created_at": "2015-08-01T12:42:47Z",
        "updated_at": "2025-01-22T17:43:41Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "e486597f9a57903600656fb5106858941885852f",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36929,
        "stargazers_count": 82469,
        "watchers_count": 82469,
        "size": 278049,
        "default_branch": "master",
        "open_issues_count": 693,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-03-14T03:23:42Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-03-15T08:56:25Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 227,
    "deletions": 195,
    "changed_files": 13,
    "commits": 5,
    "review_comments": 32,
    "comments": 16
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhMWUwYTcyMjgxZmRlMTNkNzA0Yzc3NjZkNGQ3MDRlMDA5Mjc0ZGE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa1e0a72281fde13d704c7766d4d704e009274da",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa1e0a72281fde13d704c7766d4d704e009274da",
      "tree": {
        "sha": "f084129b39751cf6c0f962f6dcde17437ee2e014",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f084129b39751cf6c0f962f6dcde17437ee2e014"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree f084129b39751cf6c0f962f6dcde17437ee2e014\nparent 43e287b3ff5f0d223b0911b6ef90054ce5eb69d2\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1739907820 +0100\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1739907990 +0100\n\ngitignore: target/\n\nNeeded for the recently added\ncontrib/devtools/deterministic-fuzz-coverage/target/\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQH1rb9e0QDO03JEq1vLW7sCkZQNHsT34YPwIc/F7GDmqRtfr3u5qLc2kAT5bB5L1S4\n0hdNlAqppXkvPWGsK+AQQ=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/43e287b3ff5f0d223b0911b6ef90054ce5eb69d2",
          "sha": "43e287b3ff5f0d223b0911b6ef90054ce5eb69d2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/43e287b3ff5f0d223b0911b6ef90054ce5eb69d2"
        }
      ],
      "message": "gitignore: target/\n\nNeeded for the recently added\ncontrib/devtools/deterministic-fuzz-coverage/target/",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-02-18T19:46:30Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-02-18T19:43:40Z"
      },
      "sha": "fa1e0a72281fde13d704c7766d4d704e009274da"
    },
    {
      "event": "commented",
      "id": 2666867514,
      "node_id": "IC_kwDOABII586e9Ss6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2666867514",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-18T20:30:29Z",
      "updated_at": "2025-03-01T14:46:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/31901.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [hodlinator](https://github.com/bitcoin/bitcoin/pull/31901#pullrequestreview-2640424818), [brunoerg](https://github.com/bitcoin/bitcoin/pull/31901#pullrequestreview-2644436422), [dergoegge](https://github.com/bitcoin/bitcoin/pull/31901#pullrequestreview-2644695039) |\n| Concept ACK | [theStack](https://github.com/bitcoin/bitcoin/pull/31901#pullrequestreview-2633053901), [janb84](https://github.com/bitcoin/bitcoin/pull/31901#pullrequestreview-2648277252), [Prabhat1308](https://github.com/bitcoin/bitcoin/pull/31901#issuecomment-2692265876) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#issuecomment-2666867514",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31901"
    },
    {
      "event": "renamed",
      "id": 16355241415,
      "node_id": "RTE_lADOABII586qkCWqzwAAAAPO2S3H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16355241415",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-18T20:30:31Z",
      "rename": {
        "from": " contrib: Add deterministic-unittest-coverage ",
        "to": "contrib: Add deterministic-unittest-coverage"
      }
    },
    {
      "event": "labeled",
      "id": 16355241553,
      "node_id": "LE_lADOABII586qkCWqzwAAAAPO2S5R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16355241553",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-18T20:30:32Z",
      "label": {
        "name": "Scripts and tools",
        "color": "ffffee"
      }
    },
    {
      "event": "commented",
      "id": 2668163938,
      "node_id": "IC_kwDOABII586fCPNi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2668163938",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-19T10:10:41Z",
      "updated_at": "2025-02-19T10:10:41Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#issuecomment-2668163938",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31901"
    },
    {
      "event": "reviewed",
      "id": 2633053901,
      "node_id": "PRR_kwDOABII586c8TbN",
      "url": null,
      "actor": null,
      "commit_id": "bbbb6998f95abf5b58039eb1e9dbf06df83f7a81",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#pullrequestreview-2633053901",
      "submitted_at": "2025-02-21T13:36:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16403134233,
      "node_id": "HRFPE_lADOABII586qkCWqzwAAAAPRs_cZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16403134233",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/fafce12a4871ed66a868b460b779e794a89218eb",
      "created_at": "2025-02-21T16:06:20Z"
    },
    {
      "event": "reviewed",
      "id": 2634421646,
      "node_id": "PRR_kwDOABII586dBhWO",
      "url": null,
      "actor": null,
      "commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK fafce12a4871ed66a868b460b779e794a89218eb",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#pullrequestreview-2634421646",
      "submitted_at": "2025-02-22T15:09:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhZjkwNWI5YjY5NDMxM2JlZDQ1MzFkMTI5OTU2OGExMDFmMzNmYjg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faf905b9b694313bed4531d1299568a101f33fb8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/faf905b9b694313bed4531d1299568a101f33fb8",
      "tree": {
        "sha": "bb358b8a86e9e0250fb8acd5d906fe38143ef1f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb358b8a86e9e0250fb8acd5d906fe38143ef1f9"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree bb358b8a86e9e0250fb8acd5d906fe38143ef1f9\nparent fa1e0a72281fde13d704c7766d4d704e009274da\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1740393745 +0100\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1740393482 +0100\n\ndoc: Remove unused -fPIC\n\nThis is harmless, but no longer needed after commit\n06b9236f4327525875768af5fc554c651c5ec3cf.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQKxucWrlj6uUDrBeyX/bIWREE6IQYNDoKQz8EUUm3bqXIc5pQytUXc9OvTp2bfPyME\nBenhggr3350ilYgF6CAwM=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa1e0a72281fde13d704c7766d4d704e009274da",
          "sha": "fa1e0a72281fde13d704c7766d4d704e009274da",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa1e0a72281fde13d704c7766d4d704e009274da"
        }
      ],
      "message": "doc: Remove unused -fPIC\n\nThis is harmless, but no longer needed after commit\n06b9236f4327525875768af5fc554c651c5ec3cf.",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-02-24T10:38:02Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-02-24T10:42:25Z"
      },
      "sha": "faf905b9b694313bed4531d1299568a101f33fb8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhMzk0MGIxY2JjOTRjOGNjZmRlMzZiZTFkYjFhZGNhMDRmYmNhYTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa3940b1cbc94c8ccfde36be1db1adca04fbcaa6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa3940b1cbc94c8ccfde36be1db1adca04fbcaa6",
      "tree": {
        "sha": "3c2bd39b7ebf35af4dd52ea101a925be0df48ff8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3c2bd39b7ebf35af4dd52ea101a925be0df48ff8"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 3c2bd39b7ebf35af4dd52ea101a925be0df48ff8\nparent faf905b9b694313bed4531d1299568a101f33fb8\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1739897650 +0100\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1740393701 +0100\n\ncontrib: deterministic-fuzz-coverage fixups\n\n* Name the fuzz_corpora dir after its real name.\n* Add missing cargo lock file.\n* Use git instead of diff command to increase compatibility\n* Use --help instead of --version to increase compatibility\n* Use assert consistently for unexpected errors.\n* Remove redundant Stdio::from.\n* Fix typos.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQKJ/YGTTi24rJX2jToLR7dO6zKLMS60GANnvj9BOdnMFJP0xF46pNRrO0OEpj4hpf9\n+a5w46NblToQScl19mRQ8=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faf905b9b694313bed4531d1299568a101f33fb8",
          "sha": "faf905b9b694313bed4531d1299568a101f33fb8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/faf905b9b694313bed4531d1299568a101f33fb8"
        }
      ],
      "message": "contrib: deterministic-fuzz-coverage fixups\n\n* Name the fuzz_corpora dir after its real name.\n* Add missing cargo lock file.\n* Use git instead of diff command to increase compatibility\n* Use --help instead of --version to increase compatibility\n* Use assert consistently for unexpected errors.\n* Remove redundant Stdio::from.\n* Fix typos.",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-02-24T10:41:41Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-02-18T16:54:10Z"
      },
      "sha": "fa3940b1cbc94c8ccfde36be1db1adca04fbcaa6"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16428842895,
      "node_id": "HRFPE_lADOABII586qkCWqzwAAAAPTPD-P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16428842895",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "created_at": "2025-02-24T10:57:56Z"
    },
    {
      "event": "reviewed",
      "id": 2637311191,
      "node_id": "PRR_kwDOABII586dMizX",
      "url": null,
      "actor": null,
      "commit_id": "fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd\r\n\r\nWas able to use this to diagnose and disable non-determinism issues for:\r\n`cargo run --manifest-path ./contrib/devtools/deterministic-unittest-coverage/Cargo.toml -- $PWD/build util_tests\r\n`\r\n\r\n<details><summary>Hacky WIP pro-determinism patch resulting in pass</summary>\r\n\r\n```diff\r\ndiff --git a/src/random.cpp b/src/random.cpp\r\nindex 5b605e988d..087894ffcd 100644\r\n--- a/src/random.cpp\r\n+++ b/src/random.cpp\r\n@@ -441,6 +441,8 @@ public:\r\n \r\n     ~RNGState() = default;\r\n \r\n+    bool IsDeterministic() noexcept EXCLUSIVE_LOCKS_REQUIRED(!m_mutex) { LOCK(m_mutex); return m_deterministic_prng.has_value(); }\r\n+\r\n     void AddEvent(uint32_t event_info) noexcept EXCLUSIVE_LOCKS_REQUIRED(!m_events_mutex)\r\n     {\r\n         LOCK(m_events_mutex);\r\n@@ -642,6 +644,7 @@ void ProcRand(unsigned char* out, int num, RNGLevel level, bool always_use_real_\r\n     assert(num <= 32);\r\n \r\n     CSHA512 hasher;\r\n+    if (!rng.IsDeterministic() || always_use_real_rng) {\r\n     switch (level) {\r\n     case RNGLevel::FAST:\r\n         SeedFast(hasher);\r\n@@ -653,6 +656,7 @@ void ProcRand(unsigned char* out, int num, RNGLevel level, bool always_use_real_\r\n         SeedPeriodic(hasher, rng);\r\n         break;\r\n     }\r\n+    }\r\n \r\n     // Combine with and update state\r\n     if (!rng.MixExtract(out, num, std::move(hasher), false, always_use_real_rng)) {\r\n@@ -771,7 +775,7 @@ FastRandomContext::FastRandomContext(bool fDeterministic) noexcept : requires_se\r\n void RandomInit()\r\n {\r\n     // Invoke RNG code to trigger initialization (if not already performed)\r\n-    ProcRand(nullptr, 0, RNGLevel::FAST, /*always_use_real_rng=*/true);\r\n+    ProcRand(nullptr, 0, RNGLevel::FAST, /*always_use_real_rng=*/false);\r\n \r\n     ReportHardwareRand();\r\n }\r\ndiff --git a/src/test/util/setup_common.cpp b/src/test/util/setup_common.cpp\r\nindex bf26997c07..a6349f3280 100644\r\n--- a/src/test/util/setup_common.cpp\r\n+++ b/src/test/util/setup_common.cpp\r\n@@ -78,7 +78,6 @@ static FastRandomContext g_rng_temp_path;\r\n static const bool g_rng_temp_path_init{[] {\r\n     // Must be initialized before any SeedRandomForTest\r\n     Assert(!g_used_g_prng);\r\n-    (void)g_rng_temp_path.rand64();\r\n     g_used_g_prng = false;\r\n     return true;\r\n }()};\r\n```\r\n</details>",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#pullrequestreview-2637311191",
      "submitted_at": "2025-02-24T16:47:57Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
    },
    {
      "event": "review_requested",
      "id": 16434579501,
      "node_id": "RRE_lADOABII586qkCWqzwAAAAPTk8gt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16434579501",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-24T16:48:01Z",
      "requested_reviewer": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 16434579696,
      "node_id": "RRE_lADOABII586qkCWqzwAAAAPTk8jw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16434579696",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-24T16:48:02Z",
      "requested_reviewer": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16451708345,
      "node_id": "HRFPE_lADOABII586qkCWqzwAAAAPUmSW5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16451708345",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "faab9b6070b6b6727f81bd4af8a18ad99af198fc",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/faab9b6070b6b6727f81bd4af8a18ad99af198fc",
      "created_at": "2025-02-25T09:12:18Z"
    },
    {
      "event": "commented",
      "id": 2681231443,
      "node_id": "IC_kwDOABII586f0FhT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2681231443",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-25T09:12:27Z",
      "updated_at": "2025-02-25T09:12:27Z",
      "author_association": "MEMBER",
      "body": "\r\n\r\n> `cargo run --manifest-path ./contrib/devtools/deterministic-unittest-coverage/Cargo.toml -- $PWD/build util_tests `\r\n> Hacky WIP pro-determinism patch resulting in pass\r\n\r\nThx, pushed a different fix/hack for this. I tested it on `util_string_tests`.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#issuecomment-2681231443",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31901"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhNTc5ZDY2M2Q3MTZjOTY3Y2NkNDVkNjdiNDZlNzc5ZTJmYTBiNDg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa579d663d716c967ccd45d67b46e779e2fa0b48",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa579d663d716c967ccd45d67b46e779e2fa0b48",
      "tree": {
        "sha": "498c0cf9bd464130b63eba47ef2bef3a17729642",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/498c0cf9bd464130b63eba47ef2bef3a17729642"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 498c0cf9bd464130b63eba47ef2bef3a17729642\nparent fa3940b1cbc94c8ccfde36be1db1adca04fbcaa6\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1739910692 +0100\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1740474881 +0100\n\ncontrib: Add deterministic-unittest-coverage\n\nThis replaces the bash script with a tool based on clang/llvm tools.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQLquztumgRP+XlXw/oiwWldRkVRvZ32gpNrU1f8TqIb83HES/OcEoI3pTv9K8Gj5jv\nIkx2XbswGSVOga+9tAZA4=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa3940b1cbc94c8ccfde36be1db1adca04fbcaa6",
          "sha": "fa3940b1cbc94c8ccfde36be1db1adca04fbcaa6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa3940b1cbc94c8ccfde36be1db1adca04fbcaa6"
        }
      ],
      "message": "contrib: Add deterministic-unittest-coverage\n\nThis replaces the bash script with a tool based on clang/llvm tools.",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-02-25T09:14:41Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-02-18T20:31:32Z"
      },
      "sha": "fa579d663d716c967ccd45d67b46e779e2fa0b48"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhOTljM2I1NDRiNjMxY2ZlMzRkNTJmYjVlNzE2MzZhZWRiMWI0MjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "tree": {
        "sha": "4df6f49b487e954d69dba9b3f103ca4b8e81db09",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4df6f49b487e954d69dba9b3f103ca4b8e81db09"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 4df6f49b487e954d69dba9b3f103ca4b8e81db09\nparent fa579d663d716c967ccd45d67b46e779e2fa0b48\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1740473101 +0100\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1740474900 +0100\n\ntest: Exclude SeedStartup from coverage counts\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQDllcRw2PaLBvsmm3DNCoAlfW9wuy+h/EQHtMGRbbtBBAM+cQcapavlvJWWTb+pDul\nEGIwO56bdL424nx1JJIQI=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa579d663d716c967ccd45d67b46e779e2fa0b48",
          "sha": "fa579d663d716c967ccd45d67b46e779e2fa0b48",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa579d663d716c967ccd45d67b46e779e2fa0b48"
        }
      ],
      "message": "test: Exclude SeedStartup from coverage counts",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-02-25T09:15:00Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-02-25T08:45:01Z"
      },
      "sha": "fa99c3b544b631cfe34d52fb5e71636aedb1b423"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16451756086,
      "node_id": "HRFPE_lADOABII586qkCWqzwAAAAPUmeA2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16451756086",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "created_at": "2025-02-25T09:15:32Z"
    },
    {
      "event": "reviewed",
      "id": 2640424818,
      "node_id": "PRR_kwDOABII586dYa9y",
      "url": null,
      "actor": null,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "re-ACK fa99c3b544b631cfe34d52fb5e71636aedb1b423\r\n\r\nMinor text-only changes + Fix for source of differing coverage-counters.\r\n\r\nI'm fine with or without the `ResetCoverageCounters()`-change. Only meant to demonstrate that this tool was useful by testing it out in my last ACK.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#pullrequestreview-2640424818",
      "submitted_at": "2025-02-25T10:26:40Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
    },
    {
      "event": "reviewed",
      "id": 2644436422,
      "node_id": "PRR_kwDOABII586dnuXG",
      "url": null,
      "actor": null,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "light ACK fa99c3b544b631cfe34d52fb5e71636aedb1b423\r\n\r\nI have not reviewed the code yet, only checked that `deterministic-unittest-coverage` is working as expected. I tested on MacOS 14.3. \r\n\r\n```sh\r\ncmake -B build_31901 -DCMAKE_CXX_FLAGS='-fprofile-instr-generate -fcoverage-mapping'\r\n```\r\nthen I tested it for 3 tests:\r\n```sh\r\nRUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-unittest-coverage/Cargo.toml -- $PWD/build_31901 coinselector_tests\r\nRUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-unittest-coverage/Cargo.toml -- $PWD/build_31901 addrman_tests\r\nRUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-unittest-coverage/Cargo.toml -- $PWD/build_31901 net_tests\r\n```\r\n\r\nAll of them returned \"The coverage was not deterministic between runs.\". I noticed that the reason is basically locks and crypto functions as expected.",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#pullrequestreview-2644436422",
      "submitted_at": "2025-02-26T13:11:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
    },
    {
      "event": "commented",
      "id": 2684932467,
      "node_id": "IC_kwDOABII586gCNFz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2684932467",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-26T13:16:47Z",
      "updated_at": "2025-02-26T13:16:47Z",
      "author_association": "MEMBER",
      "body": "> All of them returned \"The coverage was not deterministic between runs.\". I noticed that the reason is basically locks and crypto functions as expected.\r\n\r\nI'd say that non-determinism shouldn't be expected, though fixing them can be done in a follow-up. If you want to check a deterministic test case you can try `util_string_tests` or `util_tests`.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#issuecomment-2684932467",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31901"
    },
    {
      "event": "commented",
      "id": 2684942423,
      "node_id": "IC_kwDOABII586gCPhX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2684942423",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-26T13:21:00Z",
      "updated_at": "2025-02-26T13:21:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "> If you want to check a deterministic test case you can try util_string_tests or util_tests.\r\n\r\nBoth returned \"The coverage was not deterministic between runs.\". One of the differences:\r\n```sh\r\n /Users/brunogarcia/projects/bitcoin-core-dev/src/crypto/sha512.h:\r\n     1|       |// Copyright (c) 2014-2022 The Bitcoin Core developers\r\n@@ -138933,7 +138933,7 @@\r\n    62|      0|}\r\n    63|       |\r\n    64|       |inline int64_t GetPerformanceCounter() noexcept\r\n-   65|    958|{\r\n+   65|    966|{\r\n    66|       |    // Read the hardware time stamp counter when available.\r\n    67|       |    // See https://en.wikipedia.org/wiki/Time_Stamp_Counter for more information.\r\n    68|       |#if defined(_MSC_VER) && (defined(_M_IX86) || defined(_M_X64))\r\n@@ -138948,9 +138948,9 @@\r\n    77|       |    return (r2 << 32) | r1;\r\n    78|       |#else\r\n    79|       |    // Fall back to using standard library clock (usually microsecond or nanosecond precision)\r\n-   80|    958|    return std::chrono::high_resolution_clock::now().time_since_epoch().count();\r\n-   81|    958|#endif\r\n-   82|    958|}\r\n+   80|    966|    return std::chrono::high_resolution_clock::now().time_since_epoch().count();\r\n+   81|    966|#endif\r\n+   82|    966|}\r\n    83|       |\r\n    84|       |#ifdef HAVE_GETCPUID\r\n    85|       |bool g_rdrand_supported = false;\r\n@@ -139185,22 +139185,22 @@\r\n   314|       |    // Hash loop\r\n   315|      2|    unsigned char buffer[64];\r\n   316|      2|    const auto stop{SteadyClock::now() + dur};\r\n-  317|    780|    do {\r\n-  318|   780k|        for (int i = 0; i < 1000; ++i) {\r\n-                                                ^780k\r\n+  317|    788|    do {\r\n+  318|   788k|        for (int i = 0; i < 1000; ++i) {\r\n+                                                ^788k\r\n   ------------------\r\n-  |  Branch (318:25): [True: 780k, False: 780]\r\n+  |  Branch (318:25): [True: 788k, False: 788]\r\n   ------------------\r\n-  319|   780k|            inner_hasher.Finalize(buffer);\r\n-  320|   780k|            inner_hasher.Reset();\r\n-  321|   780k|            inner_hasher.Write(buffer, sizeof(buffer));\r\n-  322|   780k|        }\r\n+  319|   788k|            inner_hasher.Finalize(buffer);\r\n+  320|   788k|            inner_hasher.Reset();\r\n+  321|   788k|            inner_hasher.Write(buffer, sizeof(buffer));\r\n+  322|   788k|        }\r\n   323|       |        // Benchmark operation and feed it into outer hasher.\r\n-  324|    780|        int64_t perf = GetPerformanceCounter();\r\n-  325|    780|        hasher.Write((const unsigned char*)&perf, sizeof(perf));\r\n-  326|    780|    } while (SteadyClock::now() < stop);\r\n+  324|    788|        int64_t perf = GetPerformanceCounter();\r\n+  325|    788|        hasher.Write((const unsigned char*)&perf, sizeof(perf));\r\n+  326|    788|    } while (SteadyClock::now() < stop);\r\n   ------------------\r\n-  |  Branch (326:14): [True: 778, False: 2]\r\n+  |  Branch (326:14): [True: 786, False: 2]\r\n   ------------------\r\n   327|       |\r\n   328|       |    // Produce output from inner state and feed it to outer hasher.\r\n```",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#issuecomment-2684942423",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31901"
    },
    {
      "event": "commented",
      "id": 2684966702,
      "node_id": "IC_kwDOABII586gCVcu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2684966702",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-26T13:31:23Z",
      "updated_at": "2025-02-26T13:31:23Z",
      "author_association": "MEMBER",
      "body": "> Both returned \"The coverage was not deterministic between runs.\". One of the differences:\r\n\r\nThe last commit is supposed to fix that and it seemingly did for hodlinator and myself. Are you sure you compiled the right commit? Though, even if it persists, my recommendation would be to address it in a follow-up. The goal here is mostly to add the contrib script itself.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#issuecomment-2684966702",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31901"
    },
    {
      "event": "commented",
      "id": 2685008640,
      "node_id": "IC_kwDOABII586gCfsA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2685008640",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-26T13:45:53Z",
      "updated_at": "2025-02-26T13:45:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "> The last commit is supposed to fix that and it seemingly did for hodlinator and myself. Are you sure you compiled the right commit? Though, even if it persists, my recommendation would be to address it in a follow-up. The goal here is mostly to add the contrib script itself.\r\n\r\nYes, I just verified it is the right commit, I re-built it again and I'm getting the same. Anyway, I'm fine with the script, we can address it in a follow-up.",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#issuecomment-2685008640",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31901"
    },
    {
      "event": "reviewed",
      "id": 2644695039,
      "node_id": "PRR_kwDOABII586dotf_",
      "url": null,
      "actor": null,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "tACK fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#pullrequestreview-2644695039",
      "submitted_at": "2025-02-26T14:23:58Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
    },
    {
      "event": "reviewed",
      "id": 2648277252,
      "node_id": "PRR_kwDOABII586d2YEE",
      "url": null,
      "actor": null,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK [fa99c3b](https://github.com/bitcoin/bitcoin/commit/fa99c3b544b631cfe34d52fb5e71636aedb1b423)\r\n\r\n- Cloned & Build\r\n- Runned the tooling, as instructed per Readme\r\n- Reviewed the code\r\n\r\nAs a side note:\r\nI have run into the same non-deterministic issues with util_string_tests or util_tests as [brunoerg](https://github.com/bitcoin/bitcoin/pull/31901#issuecomment-2684942423) although not important for this PR",
      "user": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#pullrequestreview-2648277252",
      "submitted_at": "2025-02-27T16:07:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
    },
    {
      "event": "commented",
      "id": 2692265876,
      "node_id": "IC_kwDOABII586geLeU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2692265876",
      "actor": {
        "login": "Prabhat1308",
        "id": 94048855,
        "node_id": "U_kgDOBZsSVw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Prabhat1308",
        "html_url": "https://github.com/Prabhat1308",
        "followers_url": "https://api.github.com/users/Prabhat1308/followers",
        "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
        "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
        "repos_url": "https://api.github.com/users/Prabhat1308/repos",
        "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-01T14:46:38Z",
      "updated_at": "2025-03-01T14:48:17Z",
      "author_association": "NONE",
      "body": "Concept ACK [`fa99c3b`](https://github.com/bitcoin/bitcoin/pull/31901/commits/fa99c3b544b631cfe34d52fb5e71636aedb1b423)\r\nFully agree with removing the outdated bash script.\r\n\r\nI have only checked the `deterministic-unittest-coverage` and not the `deterministic-fuzz-coverage` on MacOS 15.3.1 with clang 19 . It has been giving me some flaky results . On the first run both `util_string_tests` or `util_tests` were giving me result as deterministic coverage. \r\n\r\n<details>\r\n\r\n<summary>First run</summary>\r\n\r\n<img width=\"1035\" alt=\"Screenshot 2025-03-01 at 7 58 12 PM\" src=\"https://github.com/user-attachments/assets/5d0d6e85-c478-4377-a71c-e12f8942cd04\" />\r\n\r\n</details>\r\n\r\nI ran them again and they started giving non-deterministic coverage. No change was made between the runs.\r\n<details>\r\n\r\n<summary>Second run</summary>\r\n\r\n<img width=\"1055\" alt=\"Screenshot 2025-03-01 at 7 59 38 PM\" src=\"https://github.com/user-attachments/assets/3e7db7ab-07c7-4dd5-8632-8d94ecf337cd\" />\r\n<img width=\"1046\" alt=\"Screenshot 2025-03-01 at 8 00 04 PM\" src=\"https://github.com/user-attachments/assets/83f63e15-b191-4e30-8ffe-c52d76360a89\" />\r\n</details>\r\n",
      "user": {
        "login": "Prabhat1308",
        "id": 94048855,
        "node_id": "U_kgDOBZsSVw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Prabhat1308",
        "html_url": "https://github.com/Prabhat1308",
        "followers_url": "https://api.github.com/users/Prabhat1308/followers",
        "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
        "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
        "repos_url": "https://api.github.com/users/Prabhat1308/repos",
        "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#issuecomment-2692265876",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31901"
    },
    {
      "event": "labeled",
      "id": 16543102046,
      "node_id": "LE_lADOABII586qkCWqzwAAAAPaC7Re",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16543102046",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-04T01:27:27Z",
      "label": {
        "name": "Has ACKs",
        "color": "0F53DA"
      }
    },
    {
      "event": "unlabeled",
      "id": 16543164897,
      "node_id": "UNLE_lADOABII586qkCWqzwAAAAPaDKnh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16543164897",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-04T01:34:12Z",
      "label": {
        "name": "Has ACKs",
        "color": "0F53DA"
      }
    },
    {
      "event": "commented",
      "id": 2718268595,
      "node_id": "IC_kwDOABII586iBXyz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2718268595",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-12T15:26:54Z",
      "updated_at": "2025-03-12T15:26:54Z",
      "author_association": "MEMBER",
      "body": "Anything left to do here?\r\n\r\nThe goal here is to add the contrib tool, not to fix all non-determinism in all tests. Especially, if they happen only on macOS, I can't really fix it myself anyway, since I don't have macOS. Ideally this is done in a follow-up.\r\n\r\nThere are three acks, two of which indicate to have tested the changes.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#issuecomment-2718268595",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31901"
    },
    {
      "event": "merged",
      "id": 16724980928,
      "node_id": "ME_lADOABII586qkCWqzwAAAAPk4vTA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16724980928",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c20a5ce106be716a503bcf615a1900ba8c635430",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c20a5ce106be716a503bcf615a1900ba8c635430",
      "created_at": "2025-03-13T04:30:41Z"
    },
    {
      "event": "closed",
      "id": 16724980968,
      "node_id": "CE_lADOABII586qkCWqzwAAAAPk4vTo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16724980968",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T04:30:42Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 16728175487,
      "node_id": "HRDE_lADOABII586qkCWqzwAAAAPlE7N_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16728175487",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T08:08:58Z"
    },
    {
      "event": "commented",
      "id": 2720322464,
      "node_id": "IC_kwDOABII586iJNOg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2720322464",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T08:12:07Z",
      "updated_at": "2025-03-13T08:12:07Z",
      "author_association": "MEMBER",
      "body": "@brunoerg @janb84 @Prabhat1308 I expect all of you were running into the issue on macOS? I probably can't fix it myself, but I'd investigate whether the last commit is working:\r\n\r\n* Is your result different with or without the last commit?\r\n* Does `ResetCoverageCounters` work?\r\n* What is the coverage result for `src/test/util/setup_common.cpp`, especially `g_rng_temp_path_init`? (You can find it in `fuzz_det_cov.show.{run_id}.txt`)",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#issuecomment-2720322464",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31901"
    },
    {
      "event": "mentioned",
      "id": 16728270334,
      "node_id": "MEE_lADOABII586qkCWqzwAAAAPlFSX-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16728270334",
      "actor": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T08:12:10Z"
    },
    {
      "event": "subscribed",
      "id": 16728270352,
      "node_id": "SE_lADOABII586qkCWqzwAAAAPlFSYQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16728270352",
      "actor": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T08:12:10Z"
    },
    {
      "event": "mentioned",
      "id": 16728270364,
      "node_id": "MEE_lADOABII586qkCWqzwAAAAPlFSYc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16728270364",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T08:12:11Z"
    },
    {
      "event": "subscribed",
      "id": 16728270377,
      "node_id": "SE_lADOABII586qkCWqzwAAAAPlFSYp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16728270377",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T08:12:11Z"
    },
    {
      "event": "mentioned",
      "id": 16728270389,
      "node_id": "MEE_lADOABII586qkCWqzwAAAAPlFSY1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16728270389",
      "actor": {
        "login": "Prabhat1308",
        "id": 94048855,
        "node_id": "U_kgDOBZsSVw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Prabhat1308",
        "html_url": "https://github.com/Prabhat1308",
        "followers_url": "https://api.github.com/users/Prabhat1308/followers",
        "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
        "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
        "repos_url": "https://api.github.com/users/Prabhat1308/repos",
        "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T08:12:11Z"
    },
    {
      "event": "subscribed",
      "id": 16728270400,
      "node_id": "SE_lADOABII586qkCWqzwAAAAPlFSZA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16728270400",
      "actor": {
        "login": "Prabhat1308",
        "id": 94048855,
        "node_id": "U_kgDOBZsSVw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Prabhat1308",
        "html_url": "https://github.com/Prabhat1308",
        "followers_url": "https://api.github.com/users/Prabhat1308/followers",
        "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
        "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
        "repos_url": "https://api.github.com/users/Prabhat1308/repos",
        "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T08:12:11Z"
    },
    {
      "event": "commented",
      "id": 2720738307,
      "node_id": "IC_kwDOABII586iKywD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2720738307",
      "actor": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T10:24:54Z",
      "updated_at": "2025-03-13T10:24:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "> @brunoerg @janb84 @Prabhat1308 I expect all of you were running into the issue on macOS? I probably can't fix it myself, but I'd investigate whether the last commit is working:\r\n> \r\n> * Is your result different with or without the last commit?\r\n> * Does `ResetCoverageCounters` work?\r\n> * What is the coverage result for `src/test/util/setup_common.cpp`, especially `g_rng_temp_path_init`? (You can find it in `fuzz_det_cov.show.{run_id}.txt`)\r\n\r\nIn checking this issue I discovered that due to the change in [31161](https://github.com/bitcoin/bitcoin/pull/31161) the tooling is broken. (the path has changed from `src/test/` to `/bin` ) ",
      "user": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#issuecomment-2720738307",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31901"
    },
    {
      "event": "mentioned",
      "id": 16732035382,
      "node_id": "MEE_lADOABII586qkCWqzwAAAAPlTpk2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16732035382",
      "actor": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T10:24:57Z"
    },
    {
      "event": "subscribed",
      "id": 16732035410,
      "node_id": "SE_lADOABII586qkCWqzwAAAAPlTplS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16732035410",
      "actor": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T10:24:57Z"
    },
    {
      "event": "mentioned",
      "id": 16732035426,
      "node_id": "MEE_lADOABII586qkCWqzwAAAAPlTpli",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16732035426",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T10:24:58Z"
    },
    {
      "event": "subscribed",
      "id": 16732035442,
      "node_id": "SE_lADOABII586qkCWqzwAAAAPlTply",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16732035442",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T10:24:58Z"
    },
    {
      "event": "mentioned",
      "id": 16732035476,
      "node_id": "MEE_lADOABII586qkCWqzwAAAAPlTpmU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16732035476",
      "actor": {
        "login": "Prabhat1308",
        "id": 94048855,
        "node_id": "U_kgDOBZsSVw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Prabhat1308",
        "html_url": "https://github.com/Prabhat1308",
        "followers_url": "https://api.github.com/users/Prabhat1308/followers",
        "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
        "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
        "repos_url": "https://api.github.com/users/Prabhat1308/repos",
        "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T10:24:58Z"
    },
    {
      "event": "subscribed",
      "id": 16732035492,
      "node_id": "SE_lADOABII586qkCWqzwAAAAPlTpmk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16732035492",
      "actor": {
        "login": "Prabhat1308",
        "id": 94048855,
        "node_id": "U_kgDOBZsSVw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Prabhat1308",
        "html_url": "https://github.com/Prabhat1308",
        "followers_url": "https://api.github.com/users/Prabhat1308/followers",
        "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
        "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
        "repos_url": "https://api.github.com/users/Prabhat1308/repos",
        "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T10:24:58Z"
    },
    {
      "event": "commented",
      "id": 2720745456,
      "node_id": "IC_kwDOABII586iK0fw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2720745456",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T10:27:27Z",
      "updated_at": "2025-03-13T10:27:27Z",
      "author_association": "MEMBER",
      "body": "> I discovered that due to the change in [31161](https://github.com/bitcoin/bitcoin/pull/31161) the tooling is broken. (the path has changed from `src/test/` to `/bin` )\r\n\r\nShould be trivial to fix up. I am happy to review a tiny pull to fix the silent merge conflict here.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#issuecomment-2720745456",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31901"
    },
    {
      "event": "commented",
      "id": 2720894341,
      "node_id": "IC_kwDOABII586iLY2F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2720894341",
      "actor": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T11:16:33Z",
      "updated_at": "2025-03-13T11:16:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "Fix created in https://github.com/bitcoin/bitcoin/pull/32055",
      "user": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#issuecomment-2720894341",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31901"
    },
    {
      "event": "referenced",
      "id": 16734427022,
      "node_id": "REFE_lADOABII586qkCWqzwAAAAPlcxeO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16734427022",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "72c150dfe7619c2b6e2fd06a1fa431b545a3a225",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72c150dfe7619c2b6e2fd06a1fa431b545a3a225",
      "created_at": "2025-03-13T11:38:16Z"
    },
    {
      "event": "commented",
      "id": 2721686404,
      "node_id": "IC_kwDOABII586iOaOE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2721686404",
      "actor": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T15:35:09Z",
      "updated_at": "2025-03-13T15:45:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "> > @brunoerg @janb84 @Prabhat1308 I expect all of you were running into the issue on macOS? I probably can't fix it myself, but I'd investigate whether the last commit is working:\r\n> > \r\n> > * Is your result different with or without the last commit?\r\n> > * Does `ResetCoverageCounters` work?\r\n> > * What is the coverage result for `src/test/util/setup_common.cpp`, especially `g_rng_temp_path_init`? (You can find it in `fuzz_det_cov.show.{run_id}.txt`)\r\n> \r\n> In checking this issue I discovered that due to the change in [31161](https://github.com/bitcoin/bitcoin/pull/31161) the tooling is broken. (the path has changed from `src/test/` to `/bin` )\r\n\r\nThe trouble is in this code/macro (`test/util/coverage.ccp`)\r\n```\r\n#if defined(__clang__) && defined(__linux__)\r\nextern \"C\" void __llvm_profile_reset_counters(void) __attribute__((weak));\r\nextern \"C\" void __gcov_reset(void) __attribute__((weak));\r\n\r\nvoid ResetCoverageCounters()\r\n{\r\n    if (__llvm_profile_reset_counters) {\r\n        __llvm_profile_reset_counters();\r\n    }\r\n\r\n    if (__gcov_reset) {\r\n        __gcov_reset();\r\n    }\r\n}\r\n#else\r\nvoid ResetCoverageCounters() {}\r\n#endif\r\n```\r\n\r\n__linux__ is undefined, therefor it falls in the else branch. When changing the macro to the following:\r\n```\r\n#if defined(__clang__)  && (defined(__linux__) || defined(__APPLE__)) \r\n```\r\nThe test will report as deterministic.\r\n\r\nWord of caution, i'm running in a nix-shell on a mac. So would like to see someone on pure mac env. confirm that this is the issue ",
      "user": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#issuecomment-2721686404",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31901"
    },
    {
      "event": "mentioned",
      "id": 16742434128,
      "node_id": "MEE_lADOABII586qkCWqzwAAAAPl7UVQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16742434128",
      "actor": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T15:35:11Z"
    },
    {
      "event": "subscribed",
      "id": 16742434159,
      "node_id": "SE_lADOABII586qkCWqzwAAAAPl7UVv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16742434159",
      "actor": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T15:35:11Z"
    },
    {
      "event": "mentioned",
      "id": 16742434187,
      "node_id": "MEE_lADOABII586qkCWqzwAAAAPl7UWL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16742434187",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T15:35:11Z"
    },
    {
      "event": "subscribed",
      "id": 16742434206,
      "node_id": "SE_lADOABII586qkCWqzwAAAAPl7UWe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16742434206",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T15:35:11Z"
    },
    {
      "event": "mentioned",
      "id": 16742434225,
      "node_id": "MEE_lADOABII586qkCWqzwAAAAPl7UWx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16742434225",
      "actor": {
        "login": "Prabhat1308",
        "id": 94048855,
        "node_id": "U_kgDOBZsSVw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Prabhat1308",
        "html_url": "https://github.com/Prabhat1308",
        "followers_url": "https://api.github.com/users/Prabhat1308/followers",
        "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
        "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
        "repos_url": "https://api.github.com/users/Prabhat1308/repos",
        "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T15:35:11Z"
    },
    {
      "event": "subscribed",
      "id": 16742434235,
      "node_id": "SE_lADOABII586qkCWqzwAAAAPl7UW7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16742434235",
      "actor": {
        "login": "Prabhat1308",
        "id": 94048855,
        "node_id": "U_kgDOBZsSVw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Prabhat1308",
        "html_url": "https://github.com/Prabhat1308",
        "followers_url": "https://api.github.com/users/Prabhat1308/followers",
        "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
        "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
        "repos_url": "https://api.github.com/users/Prabhat1308/repos",
        "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T15:35:11Z"
    },
    {
      "event": "commented",
      "id": 2721777570,
      "node_id": "IC_kwDOABII586iOwei",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2721777570",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T16:00:26Z",
      "updated_at": "2025-03-13T16:00:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Word of caution, i'm running in a nix-shell on a mac. So would like to see someone on pure mac env. confirm that this is the issue\r\n\r\nConfirmed. I still have the issue on master but I just tested with the following diff and seems to work:\r\n\r\n```diff\r\ndiff --git a/src/test/util/coverage.cpp b/src/test/util/coverage.cpp\r\nindex bbf068a6fa..ac0fb00e36 100644\r\n--- a/src/test/util/coverage.cpp\r\n+++ b/src/test/util/coverage.cpp\r\n@@ -4,7 +4,7 @@\r\n\r\n #include <test/util/coverage.h>\r\n\r\n-#if defined(__clang__) && defined(__linux__)\r\n+#if defined(__clang__)\r\n extern \"C\" void __llvm_profile_reset_counters(void) __attribute__((weak));\r\n extern \"C\" void __gcov_reset(void) __attribute__((weak));\r\n```\r\n\r\n```\r\n➜  bitcoin-core-dev git:(master) ✗ RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-unittest-coverage/Cargo.toml -- $PWD/build util_string_tests\r\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.00s\r\n     Running `contrib/devtools/deterministic-unittest-coverage/target/debug/deterministic-unittest-coverage /Users/brunogarcia/projects/bitcoin-core-dev/build_31901 util_string_tests`\r\nRunning 1 test case...\r\n\r\n*** No errors detected\r\nRunning 1 test case...\r\n\r\n*** No errors detected\r\nThe coverage was deterministic across two runs.\r\n➜  bitcoin-core-dev git:(master) ✗ RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-unittest-coverage/Cargo.toml -- $PWD/build util_string_tests\r\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.00s\r\n     Running `contrib/devtools/deterministic-unittest-coverage/target/debug/deterministic-unittest-coverage /Users/brunogarcia/projects/bitcoin-core-dev/build_31901 util_string_tests`\r\nRunning 1 test case...\r\n\r\n*** No errors detected\r\nRunning 1 test case...\r\n\r\n*** No errors detected\r\nThe coverage was deterministic across two runs.\r\n```",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#issuecomment-2721777570",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31901"
    },
    {
      "event": "commented",
      "id": 2721800574,
      "node_id": "IC_kwDOABII586iO2F-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2721800574",
      "actor": {
        "login": "Prabhat1308",
        "id": 94048855,
        "node_id": "U_kgDOBZsSVw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Prabhat1308",
        "html_url": "https://github.com/Prabhat1308",
        "followers_url": "https://api.github.com/users/Prabhat1308/followers",
        "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
        "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
        "repos_url": "https://api.github.com/users/Prabhat1308/repos",
        "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T16:05:57Z",
      "updated_at": "2025-03-13T16:19:40Z",
      "author_association": "NONE",
      "body": ">  Word of caution, i'm running in a nix-shell on a mac. So would like to see someone on pure mac env. confirm that this is the issue\r\n\r\nApplied this change and I get deterministic results on all runs\r\n```\r\n#if defined(__clang__)  && (defined(__linux__) || defined(__APPLE__)) \r\n```\r\n<img width=\"1512\" alt=\"Screenshot 2025-03-13 at 9 31 40 PM\" src=\"https://github.com/user-attachments/assets/fb622440-8634-47ba-b21a-54fc567803df\" />\r\n\r\nI tested on the latest master branch with following commands .\r\n\r\n```\r\ncmake -B build -DCMAKE_C_COMPILER=\"$(brew --prefix llvm)/bin/clang\" \\ \r\n   -DCMAKE_CXX_COMPILER=\"$(brew --prefix llvm)/bin/clang++\" \\\r\n   -DCMAKE_C_FLAGS=\"-fprofile-instr-generate -fcoverage-mapping\" \\\r\n   -DCMAKE_CXX_FLAGS=\"-fprofile-instr-generate -fcoverage-mapping\"\r\n\r\ncmake --build build -j$(sysctl -n hw.ncpu) \r\nRUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-unittest-coverage/Cargo.toml -- $PWD/build util_tests  \r\n```\r\n\r\nAlso with the same change suggested by @janb84 . I get deterministic results on fuzz-coverage too.\r\nRunning commands\r\n```\r\nRUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/build $PWD/qa-assets/fuzz_corpora process_message\r\n```\r\n\r\nwithout change \r\n```\r\n@@ -331406,7 +331406,7 @@\r\n    60|       |     *\r\n    61|       |     * Called on a background thread. Only called for the active chainstate.\r\n    62|       |     */\r\n-   63|    158|    virtual void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {}\r\n+   63|    166|    virtual void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {}\r\n    64|       |    /**\r\n    65|       |     * Notifies listeners any time the block chain tip changes, synchronously.\r\n    66|       |     */\r\n@@ -331458,14 +331458,14 @@\r\n   112|       |     *\r\n   113|       |     * Called on a background thread.\r\n   114|       |     */\r\n-  115|    183|    virtual void MempoolTransactionsRemovedForBlock(const std::vector<RemovedMempoolTransactionInfo>& txs_removed_for_block, unsigned int nBlockHeight) {}\r\n+  115|    191|    virtual void MempoolTransactionsRemovedForBlock(const std::vector<RemovedMempoolTransactionInfo>& txs_removed_for_block, unsigned int nBlockHeight) {}\r\n   116|       |    /**\r\n   117|       |     * Notifies listeners of a block being connected.\r\n   118|       |     * Provides a vector of transactions evicted from the mempool as a result.\r\n   119|       |     *\r\n   120|       |     * Called on a background thread.\r\n   121|       |     */\r\n-  122|    162|    virtual void BlockConnected(ChainstateRole role, const std::shared_ptr<const CBlock> &block, const CBlockIndex *pindex) {}\r\n+  122|    169|    virtual void BlockConnected(ChainstateRole role, const std::shared_ptr<const CBlock> &block, const CBlockIndex *pindex) {}\r\n   123|       |    /**\r\n   124|       |     * Notifies listeners of a block being disconnected\r\n   125|       |     * Provides the block that was disconnected.\r\n\r\nThe coverage was not deterministic between runs.\r\nThe fuzz target input was /Users/prabhatverma/projects/bitcoin/qa-assets/fuzz_corpora/process_message/00023ad97f6f03d0899bfa81d8ff7d095d8b4ee9.\r\nExiting.\r\n```\r\n\r\nwith the change \r\n```\r\nCheck if using libFuzzer ...\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\nprocess_message: succeeded against 1 files in 0s.\r\n# exited manually \r\n```\r\n\r\n",
      "user": {
        "login": "Prabhat1308",
        "id": 94048855,
        "node_id": "U_kgDOBZsSVw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Prabhat1308",
        "html_url": "https://github.com/Prabhat1308",
        "followers_url": "https://api.github.com/users/Prabhat1308/followers",
        "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
        "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
        "repos_url": "https://api.github.com/users/Prabhat1308/repos",
        "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#issuecomment-2721800574",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31901"
    },
    {
      "event": "unsubscribed",
      "id": 16743953051,
      "node_id": "UE_lADOABII586qkCWqzwAAAAPmBHKb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16743953051",
      "actor": {
        "login": "Joven24",
        "id": 173459179,
        "node_id": "U_kgDOClbG6w",
        "avatar_url": "https://avatars.githubusercontent.com/u/173459179?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Joven24",
        "html_url": "https://github.com/Joven24",
        "followers_url": "https://api.github.com/users/Joven24/followers",
        "following_url": "https://api.github.com/users/Joven24/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Joven24/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Joven24/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Joven24/subscriptions",
        "organizations_url": "https://api.github.com/users/Joven24/orgs",
        "repos_url": "https://api.github.com/users/Joven24/repos",
        "events_url": "https://api.github.com/users/Joven24/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Joven24/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T16:14:59Z"
    },
    {
      "event": "mentioned",
      "id": 16744076074,
      "node_id": "MEE_lADOABII586qkCWqzwAAAAPmBlMq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16744076074",
      "actor": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T16:20:00Z"
    },
    {
      "event": "subscribed",
      "id": 16744076097,
      "node_id": "SE_lADOABII586qkCWqzwAAAAPmBlNB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16744076097",
      "actor": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T16:20:01Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1965482744",
      "pull_request_review_id": 2633053901,
      "id": 1965482744,
      "node_id": "PRRC_kwDOABII5851JuL4",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const DIFF: &str = \"diff\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir [custom test filter (default: all but known non-deterministic tests)]\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");\n+    exit(1)\n+}\n+\n+fn sanity_check(test_exe: &Path) {\n+    for tool in [LLVM_PROFDATA, LLVM_COV, DIFF] {\n+        let output = Command::new(tool).arg(\"--version\").output();",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": null,
      "original_position": 26,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "bbbb6998f95abf5b58039eb1e9dbf06df83f7a81",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "On the machine where I tried this yesterday quickly (OpenBSD 7.6, with LLVM 16.0.6 included in the base system), neither `llvm-profdata` nor `diff` know a `--version` argument, so the sanity check failed even though the binaries were there. Will try on a Linux machine with Ubuntu in a bit.",
      "created_at": "2025-02-21T13:32:43Z",
      "updated_at": "2025-02-21T13:36:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1965482744",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1965482744"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": 24,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1965485239",
      "pull_request_review_id": 2633053901,
      "id": 1965485239,
      "node_id": "PRRC_kwDOABII5851Juy3",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const DIFF: &str = \"diff\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir [custom test filter (default: all but known non-deterministic tests)]\");",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": null,
      "original_position": 18,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "bbbb6998f95abf5b58039eb1e9dbf06df83f7a81",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n    eprintln!(\"Usage: program ./build_dir <custom test filter>\");\r\n```\r\nas there is no default yet and specifying a filter is required by now?",
      "created_at": "2025-02-21T13:34:36Z",
      "updated_at": "2025-02-21T13:36:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1965485239",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1965485239"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1965508525",
      "pull_request_review_id": 2633099718,
      "id": 1965508525,
      "node_id": "PRRC_kwDOABII5851J0et",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const DIFF: &str = \"diff\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir [custom test filter (default: all but known non-deterministic tests)]\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");\n+    exit(1)\n+}\n+\n+fn sanity_check(test_exe: &Path) {\n+    for tool in [LLVM_PROFDATA, LLVM_COV, DIFF] {\n+        let output = Command::new(tool).arg(\"--version\").output();",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": null,
      "original_position": 26,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "bbbb6998f95abf5b58039eb1e9dbf06df83f7a81",
      "in_reply_to_id": 1965482744,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It should be possible to drop `diff` and use `git diff --no-index` (or something else). As for the llvm tool, it looks like they added the arg later:\r\n\r\n```\r\n# llvm-profdata-19 --version \r\nDebian LLVM version 19.1.4\r\n  Optimized build.\r\n# llvm-profdata-16 --version\r\nllvm-profdata-16: Unknown command!\r\nUSAGE: llvm-profdata-16 <merge|show|overlap> [args...]\r\n",
      "created_at": "2025-02-21T13:51:11Z",
      "updated_at": "2025-02-21T14:17:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1965508525",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1965508525"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": 24,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1965512116",
      "pull_request_review_id": 2633106647,
      "id": 1965512116,
      "node_id": "PRRC_kwDOABII5851J1W0",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const DIFF: &str = \"diff\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir [custom test filter (default: all but known non-deterministic tests)]\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");\n+    exit(1)\n+}\n+\n+fn sanity_check(test_exe: &Path) {\n+    for tool in [LLVM_PROFDATA, LLVM_COV, DIFF] {\n+        let output = Command::new(tool).arg(\"--version\").output();",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": null,
      "original_position": 26,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "bbbb6998f95abf5b58039eb1e9dbf06df83f7a81",
      "in_reply_to_id": 1965482744,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Looks like they added it in 17, so I could require that, or remove the `--version` check.\r\n\r\n```\r\n# llvm-profdata-17 --version \r\nllvm-profdata-17\r\nUbuntu LLVM version 17.0.6\r\n  Optimized build.\r\n",
      "created_at": "2025-02-21T13:53:35Z",
      "updated_at": "2025-02-21T13:53:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1965512116",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1965512116"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": 24,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1966288594",
      "pull_request_review_id": 2634421646,
      "id": 1966288594,
      "node_id": "PRRC_kwDOABII5851My7S",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const GIT: &str = \"git\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir boost_unittest_filter\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");\n+    exit(1)\n+}\n+\n+fn sanity_check(test_exe: &Path) {\n+    for tool in [LLVM_PROFDATA, LLVM_COV, GIT] {\n+        let output = Command::new(tool).arg(\"--help\").output();\n+        match output {\n+            Ok(output) if output.status.success() => {}\n+            _ => {\n+                exit_help(&format!(\"The tool {} is not installed\", tool));\n+            }\n+        }\n+    }\n+    if !test_exe.exists() {\n+        exit_help(&format!(\n+            \"Test executable ({}) not found\",\n+            test_exe.display()\n+        ));\n+    }\n+}\n+\n+fn main() {\n+    // Parse args\n+    let args = env::args().collect::<Vec<_>>();\n+    let build_dir = args\n+        .get(1)\n+        .unwrap_or_else(|| exit_help(\"Must set build dir\"));\n+    if build_dir == \"--help\" {\n+        exit_help(\"--help requested\")\n+    }\n+    let filter = args\n+        .get(2)\n+        // Require filter for now. In the future it could be optional and the tool could provide a\n+        // default filter.\n+        .unwrap_or_else(|| exit_help(\"Must set boost test filter\"));\n+    if args.get(3).is_some() {\n+        exit_help(\"Too many args\")\n+    }\n+\n+    let build_dir = Path::new(build_dir);\n+    let test_exe = build_dir.join(\"src/test/test_bitcoin\");\n+\n+    sanity_check(&test_exe);\n+\n+    deterministic_coverage(build_dir, &test_exe, filter);\n+}\n+\n+fn deterministic_coverage(build_dir: &Path, test_exe: &Path, filter: &str) {\n+    let profraw_file = build_dir.join(\"test_det_cov.profraw\");\n+    let profdata_file = build_dir.join(\"test_det_cov.profdata\");\n+    let run_single = |run_id: u8| {\n+        let cov_txt_path = build_dir.join(format!(\"test_det_cov.show.{run_id}.txt\"));\n+        assert!(Command::new(test_exe)\n+            .env(\"LLVM_PROFILE_FILE\", &profraw_file)\n+            .env(\"BOOST_TEST_RUN_FILTERS\", filter)\n+            .env(\"RANDOM_CTX_SEED\", \"21\")\n+            .status()\n+            .expect(\"test failed\")\n+            .success());\n+        assert!(Command::new(LLVM_PROFDATA)\n+            .arg(\"merge\")\n+            .arg(\"--sparse\")\n+            .arg(&profraw_file)\n+            .arg(\"-o\")\n+            .arg(&profdata_file)\n+            .status()\n+            .expect(\"merge failed\")\n+            .success());\n+        let cov_file = File::create(&cov_txt_path).expect(\"Failed to create coverage txt file\");\n+        assert!(Command::new(LLVM_COV)\n+            .args([\n+                \"show\",\n+                \"--show-line-counts-or-regions\",\n+                \"--show-branches=count\",\n+                \"--show-expansions\",\n+                &format!(\"--instr-profile={}\", profdata_file.display()),\n+            ])\n+            .arg(test_exe)\n+            .stdout(cov_file)\n+            .status()\n+            .expect(\"llvm-cov failed\")\n+            .success());\n+        cov_txt_path\n+    };\n+    let check_diff = |a: &Path, b: &Path| {\n+        let same = Command::new(GIT)\n+            .args([\"--no-pager\", \"diff\", \"--no-index\"])\n+            .arg(a)\n+            .arg(b)\n+            .status()\n+            .expect(\"Failed to execute diff command\")",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": null,
      "original_position": 111,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Detected diff between fuzz and unit test.\r\n```suggestion\r\n            .expect(\"Failed to execute git command\")\r\n```",
      "created_at": "2025-02-21T22:43:44Z",
      "updated_at": "2025-02-22T15:09:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1966288594",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1966288594"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 111,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1966311321",
      "pull_request_review_id": 2634421646,
      "id": 1966311321,
      "node_id": "PRRC_kwDOABII5851M4eZ",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const GIT: &str = \"git\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir boost_unittest_filter\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": 20,
      "original_position": 20,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "One write to *stderr* should suffice? Also `{err}` when we can. (Think I've seen discouragement of `std::endl` in C++ land in favor of `\\n`, this felt similar).\r\n```suggestion\r\n    eprintln!(\r\n        \"Error: {err}\\n\\\r\n         \\n\\\r\n         Usage: program ./build_dir ./qa-assets/fuzz_corpora fuzz_target_name\\n\\\r\n         \\n\\\r\n         Refer to the devtools/README.md for more details.\"\r\n    );\r\n```",
      "created_at": "2025-02-21T23:17:19Z",
      "updated_at": "2025-02-22T15:09:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1966311321",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1966311321"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": 16,
      "original_start_line": 16,
      "start_side": "RIGHT",
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1966329661",
      "pull_request_review_id": 2634421646,
      "id": 1966329661,
      "node_id": "PRRC_kwDOABII5851M889",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const GIT: &str = \"git\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir boost_unittest_filter\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");\n+    exit(1)\n+}\n+\n+fn sanity_check(test_exe: &Path) {\n+    for tool in [LLVM_PROFDATA, LLVM_COV, GIT] {\n+        let output = Command::new(tool).arg(\"--help\").output();\n+        match output {\n+            Ok(output) if output.status.success() => {}\n+            _ => {\n+                exit_help(&format!(\"The tool {} is not installed\", tool));\n+            }\n+        }\n+    }\n+    if !test_exe.exists() {\n+        exit_help(&format!(\n+            \"Test executable ({}) not found\",\n+            test_exe.display()\n+        ));\n+    }\n+}\n+\n+fn main() {\n+    // Parse args\n+    let args = env::args().collect::<Vec<_>>();\n+    let build_dir = args\n+        .get(1)\n+        .unwrap_or_else(|| exit_help(\"Must set build dir\"));\n+    if build_dir == \"--help\" {\n+        exit_help(\"--help requested\")\n+    }\n+    let filter = args\n+        .get(2)\n+        // Require filter for now. In the future it could be optional and the tool could provide a\n+        // default filter.\n+        .unwrap_or_else(|| exit_help(\"Must set boost test filter\"));\n+    if args.get(3).is_some() {\n+        exit_help(\"Too many args\")\n+    }\n+\n+    let build_dir = Path::new(build_dir);\n+    let test_exe = build_dir.join(\"src/test/test_bitcoin\");\n+\n+    sanity_check(&test_exe);\n+\n+    deterministic_coverage(build_dir, &test_exe, filter);\n+}\n+\n+fn deterministic_coverage(build_dir: &Path, test_exe: &Path, filter: &str) {\n+    let profraw_file = build_dir.join(\"test_det_cov.profraw\");\n+    let profdata_file = build_dir.join(\"test_det_cov.profdata\");\n+    let run_single = |run_id: u8| {\n+        let cov_txt_path = build_dir.join(format!(\"test_det_cov.show.{run_id}.txt\"));\n+        assert!(Command::new(test_exe)\n+            .env(\"LLVM_PROFILE_FILE\", &profraw_file)\n+            .env(\"BOOST_TEST_RUN_FILTERS\", filter)\n+            .env(\"RANDOM_CTX_SEED\", \"21\")\n+            .status()\n+            .expect(\"test failed\")\n+            .success());",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": 79,
      "original_position": 79,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Current output on `!success()` due to use of `assert!` for other things than logical invariants:\r\n```\r\n₿ cargo run --release ~/b2/build miniscript\r\n   Compiling deterministic-unittest-coverage v0.1.0 (/home/hodlinator/b2/contrib/devtools/deterministic-unittest-coverage)\r\n    Finished `release` profile [optimized] target(s) in 0.36s\r\n     Running `target/release/deterministic-unittest-coverage /home/hodlinator/b2/build miniscript`\r\nTest setup error: no test cases matching filter or all test cases were disabled\r\nthread 'main' panicked at src/main.rs:73:9:\r\nassertion failed: Command::new(test_exe).env(\"LLVM_PROFILE_FILE\",\r\n                        &profraw_file).env(\"BOOST_TEST_RUN_FILTERS\",\r\n                    filter).env(\"RANDOM_CTX_SEED\",\r\n                \"21\").status().expect(\"test failed\").success()\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n```\r\n\r\nWith suggestion:\r\n```\r\n₿ cargo run --release ~/b2/build miniscript                                                                                                                                  \r\n   Compiling deterministic-unittest-coverage v0.1.0 (/home/hodlinator/b2/contrib/devtools/deterministic-unittest-coverage)\r\n    Finished `release` profile [optimized] target(s) in 0.36s\r\n     Running `target/release/deterministic-unittest-coverage /home/hodlinator/b2/build miniscript`\r\nTest setup error: no test cases matching filter or all test cases were disabled\r\n/home/hodlinator/b2/build/src/test/test_bitcoin failed\r\n```\r\n\r\n```suggestion\r\n        if !Command::new(test_exe)\r\n            .env(\"LLVM_PROFILE_FILE\", &profraw_file)\r\n            .env(\"BOOST_TEST_RUN_FILTERS\", filter)\r\n            .env(\"RANDOM_CTX_SEED\", \"21\")\r\n            .status()\r\n            .expect(\"test failed\")\r\n            .success()\r\n        {\r\n            eprintln!(\"{} failed\", test_exe.display());\r\n            std::process::exit(1)\r\n        }\r\n```",
      "created_at": "2025-02-21T23:49:07Z",
      "updated_at": "2025-02-22T15:09:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1966329661",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1966329661"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": 73,
      "original_start_line": 73,
      "start_side": "RIGHT",
      "line": 79,
      "original_line": 79,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1966332995",
      "pull_request_review_id": 2634421646,
      "id": 1966332995,
      "node_id": "PRRC_kwDOABII5851M9xD",
      "diff_hunk": "@@ -13,13 +13,31 @@ RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz\n \n To execute the tool, compilation has to be done with the build options\n `-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++'\n--DBUILD_FOR_FUZZING=ON -DCMAKE_CXX_FLAGS='-fPIC -fprofile-instr-generate\n+-DBUILD_FOR_FUZZING=ON -DCMAKE_CXX_FLAGS='-fprofile-instr-generate\n -fcoverage-mapping'`. Both llvm-profdata and llvm-cov must be installed. Also,\n the qa-assets repository must have been cloned. Finally, a fuzz target has to\n be picked before running the tool:\n \n ```\n-RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/build_dir $PWD/qa-assets/corpora-dir fuzz_target_name\n+RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/build_dir $PWD/qa-assets/fuzz_corpora fuzz_target_name\n+```\n+\n+deterministic-unittest-coverage\n+===========================\n+\n+A tool to check for non-determinism in unit-test coverage. To get the help, run:\n+\n+```\n+RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-unittest-coverage/Cargo.toml -- --help\n+```\n+\n+To execute the tool, compilation has to be done with the build options\n+`-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++'\n+-DCMAKE_CXX_FLAGS='-fprofile-instr-generate -fcoverage-mapping'`. Both\n+llvm-profdata and llvm-cov must be installed.",
      "path": "contrib/devtools/README.md",
      "position": null,
      "original_position": 27,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "For the sake of easy copy-paste when viewing the .md file directly within editor:\r\n````suggestion\r\nTo execute the tool, compilation has to be done with the build options:\r\n```\r\n-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++' -DCMAKE_CXX_FLAGS='-fprofile-instr-generate -fcoverage-mapping'\r\n```\r\nBoth llvm-profdata and llvm-cov must be installed.\r\n````\r\nSame for the fuzz-version.",
      "created_at": "2025-02-21T23:56:26Z",
      "updated_at": "2025-02-22T15:09:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1966332995",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1966332995"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": 34,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967400390",
      "pull_request_review_id": 2636670193,
      "id": 1967400390,
      "node_id": "PRRC_kwDOABII5851RCXG",
      "diff_hunk": "@@ -13,13 +13,31 @@ RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz\n \n To execute the tool, compilation has to be done with the build options\n `-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++'\n--DBUILD_FOR_FUZZING=ON -DCMAKE_CXX_FLAGS='-fPIC -fprofile-instr-generate\n+-DBUILD_FOR_FUZZING=ON -DCMAKE_CXX_FLAGS='-fprofile-instr-generate\n -fcoverage-mapping'`. Both llvm-profdata and llvm-cov must be installed. Also,\n the qa-assets repository must have been cloned. Finally, a fuzz target has to\n be picked before running the tool:\n \n ```\n-RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/build_dir $PWD/qa-assets/corpora-dir fuzz_target_name\n+RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/build_dir $PWD/qa-assets/fuzz_corpora fuzz_target_name\n+```\n+\n+deterministic-unittest-coverage\n+===========================\n+\n+A tool to check for non-determinism in unit-test coverage. To get the help, run:\n+\n+```\n+RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-unittest-coverage/Cargo.toml -- --help\n+```\n+\n+To execute the tool, compilation has to be done with the build options\n+`-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++'\n+-DCMAKE_CXX_FLAGS='-fprofile-instr-generate -fcoverage-mapping'`. Both\n+llvm-profdata and llvm-cov must be installed.",
      "path": "contrib/devtools/README.md",
      "position": null,
      "original_position": 27,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "in_reply_to_id": 1966332995,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "A minor improvement could be to at least add ` \\`.\r\n```suggestion\r\nTo execute the tool, compilation has to be done with the build options\r\n`-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++' \\\r\n-DCMAKE_CXX_FLAGS='-fprofile-instr-generate -fcoverage-mapping'`. Both\r\nllvm-profdata and llvm-cov must be installed.\r\n```\r\nBut the beginning/end of lines would then still contain text one doesn't want to copy, so I prefer the first suggestion.",
      "created_at": "2025-02-24T10:50:08Z",
      "updated_at": "2025-02-24T10:50:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1967400390",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967400390"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": 34,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967413387",
      "pull_request_review_id": 2636694867,
      "id": 1967413387,
      "node_id": "PRRC_kwDOABII5851RFiL",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const DIFF: &str = \"diff\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir [custom test filter (default: all but known non-deterministic tests)]\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");\n+    exit(1)\n+}\n+\n+fn sanity_check(test_exe: &Path) {\n+    for tool in [LLVM_PROFDATA, LLVM_COV, DIFF] {\n+        let output = Command::new(tool).arg(\"--version\").output();",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": null,
      "original_position": 26,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "bbbb6998f95abf5b58039eb1e9dbf06df83f7a81",
      "in_reply_to_id": 1965482744,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "thx, fixed",
      "created_at": "2025-02-24T10:58:13Z",
      "updated_at": "2025-02-24T10:58:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1967413387",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967413387"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": 24,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967413539",
      "pull_request_review_id": 2636695125,
      "id": 1967413539,
      "node_id": "PRRC_kwDOABII5851RFkj",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const DIFF: &str = \"diff\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir [custom test filter (default: all but known non-deterministic tests)]\");",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": null,
      "original_position": 18,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "bbbb6998f95abf5b58039eb1e9dbf06df83f7a81",
      "in_reply_to_id": 1965485239,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "thx, fixed",
      "created_at": "2025-02-24T10:58:19Z",
      "updated_at": "2025-02-24T10:58:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1967413539",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967413539"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967413630",
      "pull_request_review_id": 2636695304,
      "id": 1967413630,
      "node_id": "PRRC_kwDOABII5851RFl-",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const GIT: &str = \"git\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir boost_unittest_filter\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");\n+    exit(1)\n+}\n+\n+fn sanity_check(test_exe: &Path) {\n+    for tool in [LLVM_PROFDATA, LLVM_COV, GIT] {\n+        let output = Command::new(tool).arg(\"--help\").output();\n+        match output {\n+            Ok(output) if output.status.success() => {}\n+            _ => {\n+                exit_help(&format!(\"The tool {} is not installed\", tool));\n+            }\n+        }\n+    }\n+    if !test_exe.exists() {\n+        exit_help(&format!(\n+            \"Test executable ({}) not found\",\n+            test_exe.display()\n+        ));\n+    }\n+}\n+\n+fn main() {\n+    // Parse args\n+    let args = env::args().collect::<Vec<_>>();\n+    let build_dir = args\n+        .get(1)\n+        .unwrap_or_else(|| exit_help(\"Must set build dir\"));\n+    if build_dir == \"--help\" {\n+        exit_help(\"--help requested\")\n+    }\n+    let filter = args\n+        .get(2)\n+        // Require filter for now. In the future it could be optional and the tool could provide a\n+        // default filter.\n+        .unwrap_or_else(|| exit_help(\"Must set boost test filter\"));\n+    if args.get(3).is_some() {\n+        exit_help(\"Too many args\")\n+    }\n+\n+    let build_dir = Path::new(build_dir);\n+    let test_exe = build_dir.join(\"src/test/test_bitcoin\");\n+\n+    sanity_check(&test_exe);\n+\n+    deterministic_coverage(build_dir, &test_exe, filter);\n+}\n+\n+fn deterministic_coverage(build_dir: &Path, test_exe: &Path, filter: &str) {\n+    let profraw_file = build_dir.join(\"test_det_cov.profraw\");\n+    let profdata_file = build_dir.join(\"test_det_cov.profdata\");\n+    let run_single = |run_id: u8| {\n+        let cov_txt_path = build_dir.join(format!(\"test_det_cov.show.{run_id}.txt\"));\n+        assert!(Command::new(test_exe)\n+            .env(\"LLVM_PROFILE_FILE\", &profraw_file)\n+            .env(\"BOOST_TEST_RUN_FILTERS\", filter)\n+            .env(\"RANDOM_CTX_SEED\", \"21\")\n+            .status()\n+            .expect(\"test failed\")\n+            .success());\n+        assert!(Command::new(LLVM_PROFDATA)\n+            .arg(\"merge\")\n+            .arg(\"--sparse\")\n+            .arg(&profraw_file)\n+            .arg(\"-o\")\n+            .arg(&profdata_file)\n+            .status()\n+            .expect(\"merge failed\")\n+            .success());\n+        let cov_file = File::create(&cov_txt_path).expect(\"Failed to create coverage txt file\");\n+        assert!(Command::new(LLVM_COV)\n+            .args([\n+                \"show\",\n+                \"--show-line-counts-or-regions\",\n+                \"--show-branches=count\",\n+                \"--show-expansions\",\n+                &format!(\"--instr-profile={}\", profdata_file.display()),\n+            ])\n+            .arg(test_exe)\n+            .stdout(cov_file)\n+            .status()\n+            .expect(\"llvm-cov failed\")\n+            .success());\n+        cov_txt_path\n+    };\n+    let check_diff = |a: &Path, b: &Path| {\n+        let same = Command::new(GIT)\n+            .args([\"--no-pager\", \"diff\", \"--no-index\"])\n+            .arg(a)\n+            .arg(b)\n+            .status()\n+            .expect(\"Failed to execute diff command\")",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": null,
      "original_position": 111,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "in_reply_to_id": 1966288594,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "thx, done",
      "created_at": "2025-02-24T10:58:24Z",
      "updated_at": "2025-02-24T10:58:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1967413630",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967413630"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 111,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967413737",
      "pull_request_review_id": 2636695488,
      "id": 1967413737,
      "node_id": "PRRC_kwDOABII5851RFnp",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const GIT: &str = \"git\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir boost_unittest_filter\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": 20,
      "original_position": 20,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "in_reply_to_id": 1966311321,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't like the manual `\\n` handling and the manual `\\` handling. An alternative would be a string which natively contains newlines. However, I don't think https://clang.llvm.org/extra/clang-tidy/checks/performance/avoid-endl.html applies, because this isn't performance critical. Leaving as-is for now.",
      "created_at": "2025-02-24T10:58:29Z",
      "updated_at": "2025-02-24T10:58:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1967413737",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967413737"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": 16,
      "original_start_line": 16,
      "start_side": "RIGHT",
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967413984",
      "pull_request_review_id": 2636695963,
      "id": 1967413984,
      "node_id": "PRRC_kwDOABII5851RFrg",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const GIT: &str = \"git\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir boost_unittest_filter\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");\n+    exit(1)\n+}\n+\n+fn sanity_check(test_exe: &Path) {\n+    for tool in [LLVM_PROFDATA, LLVM_COV, GIT] {\n+        let output = Command::new(tool).arg(\"--help\").output();\n+        match output {\n+            Ok(output) if output.status.success() => {}\n+            _ => {\n+                exit_help(&format!(\"The tool {} is not installed\", tool));\n+            }\n+        }\n+    }\n+    if !test_exe.exists() {\n+        exit_help(&format!(\n+            \"Test executable ({}) not found\",\n+            test_exe.display()\n+        ));\n+    }\n+}\n+\n+fn main() {\n+    // Parse args\n+    let args = env::args().collect::<Vec<_>>();\n+    let build_dir = args\n+        .get(1)\n+        .unwrap_or_else(|| exit_help(\"Must set build dir\"));\n+    if build_dir == \"--help\" {\n+        exit_help(\"--help requested\")\n+    }\n+    let filter = args\n+        .get(2)\n+        // Require filter for now. In the future it could be optional and the tool could provide a\n+        // default filter.\n+        .unwrap_or_else(|| exit_help(\"Must set boost test filter\"));\n+    if args.get(3).is_some() {\n+        exit_help(\"Too many args\")\n+    }\n+\n+    let build_dir = Path::new(build_dir);\n+    let test_exe = build_dir.join(\"src/test/test_bitcoin\");\n+\n+    sanity_check(&test_exe);\n+\n+    deterministic_coverage(build_dir, &test_exe, filter);\n+}\n+\n+fn deterministic_coverage(build_dir: &Path, test_exe: &Path, filter: &str) {\n+    let profraw_file = build_dir.join(\"test_det_cov.profraw\");\n+    let profdata_file = build_dir.join(\"test_det_cov.profdata\");\n+    let run_single = |run_id: u8| {\n+        let cov_txt_path = build_dir.join(format!(\"test_det_cov.show.{run_id}.txt\"));\n+        assert!(Command::new(test_exe)\n+            .env(\"LLVM_PROFILE_FILE\", &profraw_file)\n+            .env(\"BOOST_TEST_RUN_FILTERS\", filter)\n+            .env(\"RANDOM_CTX_SEED\", \"21\")\n+            .status()\n+            .expect(\"test failed\")\n+            .success());",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": 79,
      "original_position": 79,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "in_reply_to_id": 1966329661,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You are right that the use of `assert` here may be a bit wrong to sanitize an input string. However, in the context of tests (or dev-only test-only scripts), the distinction doesn't matter, as long as any failure happens. (This is also similar of how the functional tests simply do an `assert` on the return code)\r\n\r\nIn any case, if this was changed, it should be applied to almost all `unwrap`,`expect`,or `panic` as well? For example, I could imagine that `expect(\"test failed\")` could fail when the exe was missing the executable bit?\r\n\r\nLeaving as-is for now.",
      "created_at": "2025-02-24T10:58:39Z",
      "updated_at": "2025-02-24T10:58:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1967413984",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967413984"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": 73,
      "original_start_line": 73,
      "start_side": "RIGHT",
      "line": 79,
      "original_line": 79,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967414091",
      "pull_request_review_id": 2636696134,
      "id": 1967414091,
      "node_id": "PRRC_kwDOABII5851RFtL",
      "diff_hunk": "@@ -13,13 +13,31 @@ RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz\n \n To execute the tool, compilation has to be done with the build options\n `-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++'\n--DBUILD_FOR_FUZZING=ON -DCMAKE_CXX_FLAGS='-fPIC -fprofile-instr-generate\n+-DBUILD_FOR_FUZZING=ON -DCMAKE_CXX_FLAGS='-fprofile-instr-generate\n -fcoverage-mapping'`. Both llvm-profdata and llvm-cov must be installed. Also,\n the qa-assets repository must have been cloned. Finally, a fuzz target has to\n be picked before running the tool:\n \n ```\n-RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/build_dir $PWD/qa-assets/corpora-dir fuzz_target_name\n+RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/build_dir $PWD/qa-assets/fuzz_corpora fuzz_target_name\n+```\n+\n+deterministic-unittest-coverage\n+===========================\n+\n+A tool to check for non-determinism in unit-test coverage. To get the help, run:\n+\n+```\n+RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-unittest-coverage/Cargo.toml -- --help\n+```\n+\n+To execute the tool, compilation has to be done with the build options\n+`-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++'\n+-DCMAKE_CXX_FLAGS='-fprofile-instr-generate -fcoverage-mapping'`. Both\n+llvm-profdata and llvm-cov must be installed.",
      "path": "contrib/devtools/README.md",
      "position": null,
      "original_position": 27,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "in_reply_to_id": 1966332995,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thx, done",
      "created_at": "2025-02-24T10:58:44Z",
      "updated_at": "2025-02-24T10:58:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1967414091",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967414091"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": 34,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967584194",
      "pull_request_review_id": 2636987838,
      "id": 1967584194,
      "node_id": "PRRC_kwDOABII5851RvPC",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const GIT: &str = \"git\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir boost_unittest_filter\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");\n+    exit(1)\n+}\n+\n+fn sanity_check(test_exe: &Path) {\n+    for tool in [LLVM_PROFDATA, LLVM_COV, GIT] {\n+        let output = Command::new(tool).arg(\"--help\").output();\n+        match output {\n+            Ok(output) if output.status.success() => {}\n+            _ => {\n+                exit_help(&format!(\"The tool {} is not installed\", tool));\n+            }\n+        }\n+    }\n+    if !test_exe.exists() {\n+        exit_help(&format!(\n+            \"Test executable ({}) not found\",\n+            test_exe.display()\n+        ));\n+    }\n+}\n+\n+fn main() {\n+    // Parse args\n+    let args = env::args().collect::<Vec<_>>();\n+    let build_dir = args\n+        .get(1)\n+        .unwrap_or_else(|| exit_help(\"Must set build dir\"));\n+    if build_dir == \"--help\" {\n+        exit_help(\"--help requested\")\n+    }\n+    let filter = args\n+        .get(2)\n+        // Require filter for now. In the future it could be optional and the tool could provide a\n+        // default filter.\n+        .unwrap_or_else(|| exit_help(\"Must set boost test filter\"));\n+    if args.get(3).is_some() {\n+        exit_help(\"Too many args\")\n+    }\n+\n+    let build_dir = Path::new(build_dir);\n+    let test_exe = build_dir.join(\"src/test/test_bitcoin\");\n+\n+    sanity_check(&test_exe);\n+\n+    deterministic_coverage(build_dir, &test_exe, filter);\n+}\n+\n+fn deterministic_coverage(build_dir: &Path, test_exe: &Path, filter: &str) {\n+    let profraw_file = build_dir.join(\"test_det_cov.profraw\");\n+    let profdata_file = build_dir.join(\"test_det_cov.profdata\");\n+    let run_single = |run_id: u8| {\n+        let cov_txt_path = build_dir.join(format!(\"test_det_cov.show.{run_id}.txt\"));\n+        assert!(Command::new(test_exe)\n+            .env(\"LLVM_PROFILE_FILE\", &profraw_file)\n+            .env(\"BOOST_TEST_RUN_FILTERS\", filter)\n+            .env(\"RANDOM_CTX_SEED\", \"21\")\n+            .status()\n+            .expect(\"test failed\")\n+            .success());",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": 79,
      "original_position": 79,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "in_reply_to_id": 1966329661,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> In any case, if this was changed, it should be applied to almost all `unwrap`,`expect`,or `panic` as well? For example, I could imagine that `expect(\"test failed\")` could fail when the exe was missing the executable bit?\r\n\r\nThe `expect()`s here are fine since we've already run `sanity_check()` which has proper `exit(1)` behavior via `exit_help()`.\r\n\r\nSo I really do think since we are passing the user-input `filter` value, we should not be triggering an `assert!`. I think for the other commands where we are using fixed inputs, asserts are more okay.",
      "created_at": "2025-02-24T12:50:33Z",
      "updated_at": "2025-02-24T12:50:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1967584194",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967584194"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": 73,
      "original_start_line": 73,
      "start_side": "RIGHT",
      "line": 79,
      "original_line": 79,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967626224",
      "pull_request_review_id": 2637062855,
      "id": 1967626224,
      "node_id": "PRRC_kwDOABII5851R5fw",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const GIT: &str = \"git\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir boost_unittest_filter\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");\n+    exit(1)\n+}\n+\n+fn sanity_check(test_exe: &Path) {\n+    for tool in [LLVM_PROFDATA, LLVM_COV, GIT] {\n+        let output = Command::new(tool).arg(\"--help\").output();\n+        match output {\n+            Ok(output) if output.status.success() => {}\n+            _ => {\n+                exit_help(&format!(\"The tool {} is not installed\", tool));\n+            }\n+        }\n+    }\n+    if !test_exe.exists() {\n+        exit_help(&format!(\n+            \"Test executable ({}) not found\",\n+            test_exe.display()\n+        ));\n+    }\n+}\n+\n+fn main() {\n+    // Parse args\n+    let args = env::args().collect::<Vec<_>>();\n+    let build_dir = args\n+        .get(1)\n+        .unwrap_or_else(|| exit_help(\"Must set build dir\"));\n+    if build_dir == \"--help\" {\n+        exit_help(\"--help requested\")\n+    }\n+    let filter = args\n+        .get(2)\n+        // Require filter for now. In the future it could be optional and the tool could provide a\n+        // default filter.\n+        .unwrap_or_else(|| exit_help(\"Must set boost test filter\"));\n+    if args.get(3).is_some() {\n+        exit_help(\"Too many args\")\n+    }\n+\n+    let build_dir = Path::new(build_dir);\n+    let test_exe = build_dir.join(\"src/test/test_bitcoin\");\n+\n+    sanity_check(&test_exe);\n+\n+    deterministic_coverage(build_dir, &test_exe, filter);\n+}\n+\n+fn deterministic_coverage(build_dir: &Path, test_exe: &Path, filter: &str) {\n+    let profraw_file = build_dir.join(\"test_det_cov.profraw\");\n+    let profdata_file = build_dir.join(\"test_det_cov.profdata\");\n+    let run_single = |run_id: u8| {\n+        let cov_txt_path = build_dir.join(format!(\"test_det_cov.show.{run_id}.txt\"));\n+        assert!(Command::new(test_exe)\n+            .env(\"LLVM_PROFILE_FILE\", &profraw_file)\n+            .env(\"BOOST_TEST_RUN_FILTERS\", filter)\n+            .env(\"RANDOM_CTX_SEED\", \"21\")\n+            .status()\n+            .expect(\"test failed\")\n+            .success());",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": 79,
      "original_position": 79,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "in_reply_to_id": 1966329661,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't think the other asserts are any different. For example, `LLVM_PROFDATA` may fail, because the executable was not compiled with coverage:\r\n\r\n```\r\nerror: test_det_cov.profraw: No such file or directory\r\nthread 'main' panicked at src/main.rs:80:9:\r\nassertion failed: Command::new(LLVM_PROFDATA).arg(\"merge\").arg(\"--sparse\").arg(&profraw_file).arg(\"-o\").arg(&profdata_file).status().expect(\"merge failed\").success()\r\nstack backtrace:\r\n...\r\n```\r\n\r\nSimilarly, as already mentioned, the `expect(\"test failed\")` can also fail:\r\n\r\n```\r\nthread 'main' panicked at src/main.rs:78:14:\r\ntest failed: Os { code: 13, kind: PermissionDenied, message: \"Permission denied\" }\r\nstack backtrace:\r\n...\r\n```\r\n\r\nNo strong opinion, but I think this should either be done for all places, or for none. What is more important to me is the raw functionality this offers and I don't want to spend too much time on adjusting error messages one way or the other.",
      "created_at": "2025-02-24T13:19:01Z",
      "updated_at": "2025-02-24T13:19:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1967626224",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967626224"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": 73,
      "original_start_line": 73,
      "start_side": "RIGHT",
      "line": 79,
      "original_line": 79,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967644930",
      "pull_request_review_id": 2637100354,
      "id": 1967644930,
      "node_id": "PRRC_kwDOABII5851R-EC",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const GIT: &str = \"git\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir boost_unittest_filter\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");\n+    exit(1)\n+}\n+\n+fn sanity_check(test_exe: &Path) {\n+    for tool in [LLVM_PROFDATA, LLVM_COV, GIT] {\n+        let output = Command::new(tool).arg(\"--help\").output();\n+        match output {\n+            Ok(output) if output.status.success() => {}\n+            _ => {\n+                exit_help(&format!(\"The tool {} is not installed\", tool));\n+            }\n+        }\n+    }\n+    if !test_exe.exists() {\n+        exit_help(&format!(\n+            \"Test executable ({}) not found\",\n+            test_exe.display()\n+        ));\n+    }\n+}\n+\n+fn main() {\n+    // Parse args\n+    let args = env::args().collect::<Vec<_>>();\n+    let build_dir = args\n+        .get(1)\n+        .unwrap_or_else(|| exit_help(\"Must set build dir\"));\n+    if build_dir == \"--help\" {\n+        exit_help(\"--help requested\")\n+    }\n+    let filter = args\n+        .get(2)\n+        // Require filter for now. In the future it could be optional and the tool could provide a\n+        // default filter.\n+        .unwrap_or_else(|| exit_help(\"Must set boost test filter\"));\n+    if args.get(3).is_some() {\n+        exit_help(\"Too many args\")\n+    }\n+\n+    let build_dir = Path::new(build_dir);\n+    let test_exe = build_dir.join(\"src/test/test_bitcoin\");\n+\n+    sanity_check(&test_exe);\n+\n+    deterministic_coverage(build_dir, &test_exe, filter);\n+}\n+\n+fn deterministic_coverage(build_dir: &Path, test_exe: &Path, filter: &str) {\n+    let profraw_file = build_dir.join(\"test_det_cov.profraw\");\n+    let profdata_file = build_dir.join(\"test_det_cov.profdata\");\n+    let run_single = |run_id: u8| {\n+        let cov_txt_path = build_dir.join(format!(\"test_det_cov.show.{run_id}.txt\"));\n+        assert!(Command::new(test_exe)\n+            .env(\"LLVM_PROFILE_FILE\", &profraw_file)\n+            .env(\"BOOST_TEST_RUN_FILTERS\", filter)\n+            .env(\"RANDOM_CTX_SEED\", \"21\")\n+            .status()\n+            .expect(\"test failed\")\n+            .success());",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": 79,
      "original_position": 79,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "in_reply_to_id": 1966329661,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> No strong opinion, but I think this should either be done for all places, or for none.\r\n\r\nNote that you are using `exit(1)` for some cases, so you are already drawing an arbitrary line.\r\n\r\nA user using something like `miniscript` as input is more likely than an permission failure IMO. Agree that not compiling with coverage is somewhere in between though.\r\n\r\nIf we're going to introduce more Rust code in the project, and use it in an interactive way, I think we should spend some time to make the user experience on par or better than Bash in every way.",
      "created_at": "2025-02-24T13:30:03Z",
      "updated_at": "2025-02-24T13:30:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1967644930",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967644930"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": 73,
      "original_start_line": 73,
      "start_side": "RIGHT",
      "line": 79,
      "original_line": 79,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967697007",
      "pull_request_review_id": 2637193196,
      "id": 1967697007,
      "node_id": "PRRC_kwDOABII5851SKxv",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const GIT: &str = \"git\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir boost_unittest_filter\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");\n+    exit(1)\n+}\n+\n+fn sanity_check(test_exe: &Path) {\n+    for tool in [LLVM_PROFDATA, LLVM_COV, GIT] {\n+        let output = Command::new(tool).arg(\"--help\").output();\n+        match output {\n+            Ok(output) if output.status.success() => {}\n+            _ => {\n+                exit_help(&format!(\"The tool {} is not installed\", tool));\n+            }\n+        }\n+    }\n+    if !test_exe.exists() {\n+        exit_help(&format!(\n+            \"Test executable ({}) not found\",\n+            test_exe.display()\n+        ));\n+    }\n+}\n+\n+fn main() {\n+    // Parse args\n+    let args = env::args().collect::<Vec<_>>();\n+    let build_dir = args\n+        .get(1)\n+        .unwrap_or_else(|| exit_help(\"Must set build dir\"));\n+    if build_dir == \"--help\" {\n+        exit_help(\"--help requested\")\n+    }\n+    let filter = args\n+        .get(2)\n+        // Require filter for now. In the future it could be optional and the tool could provide a\n+        // default filter.\n+        .unwrap_or_else(|| exit_help(\"Must set boost test filter\"));\n+    if args.get(3).is_some() {\n+        exit_help(\"Too many args\")\n+    }\n+\n+    let build_dir = Path::new(build_dir);\n+    let test_exe = build_dir.join(\"src/test/test_bitcoin\");\n+\n+    sanity_check(&test_exe);\n+\n+    deterministic_coverage(build_dir, &test_exe, filter);\n+}\n+\n+fn deterministic_coverage(build_dir: &Path, test_exe: &Path, filter: &str) {\n+    let profraw_file = build_dir.join(\"test_det_cov.profraw\");\n+    let profdata_file = build_dir.join(\"test_det_cov.profdata\");\n+    let run_single = |run_id: u8| {\n+        let cov_txt_path = build_dir.join(format!(\"test_det_cov.show.{run_id}.txt\"));\n+        assert!(Command::new(test_exe)\n+            .env(\"LLVM_PROFILE_FILE\", &profraw_file)\n+            .env(\"BOOST_TEST_RUN_FILTERS\", filter)\n+            .env(\"RANDOM_CTX_SEED\", \"21\")\n+            .status()\n+            .expect(\"test failed\")\n+            .success());",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": 79,
      "original_position": 79,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "in_reply_to_id": 1966329661,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't think this has something to do with the language it is written in. I am sure it is possible to write a check for the exit code in any language and print a different error message than an assertion failure.\r\n\r\n\r\n\r\n> Note that you are using `exit(1)` for some cases, so you are already drawing an arbitrary line.\r\n\r\nYes, currently the line here is for any sanity check that can be cheaply done while parsing the args and print the help on failure.\r\n\r\nI understand your concern, and I'd be happy to address it wholesale in a follow-up for all places. I expect the follow-up to  be trivial to review.\r\n\r\nHowever, for now, my preference would be to keep this script as close to the existing fuzz coverage script as possible. For now, I want to focus the review on the core functionality.\r\n\r\nAlso, I'd be happy to push your suggested change, if this was your only blocker. However, I don't want to spend time on shaping error messages, when not a single reviewer thinks the code is otherwise acceptable to merge (it has zero code acks right now).",
      "created_at": "2025-02-24T14:01:30Z",
      "updated_at": "2025-02-24T14:01:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1967697007",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967697007"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": 73,
      "original_start_line": 73,
      "start_side": "RIGHT",
      "line": 79,
      "original_line": 79,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967761569",
      "pull_request_review_id": 2637311191,
      "id": 1967761569,
      "node_id": "PRRC_kwDOABII5851Saih",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const GIT: &str = \"git\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir boost_unittest_filter\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");\n+    exit(1)\n+}\n+\n+fn sanity_check(test_exe: &Path) {\n+    for tool in [LLVM_PROFDATA, LLVM_COV, GIT] {\n+        let output = Command::new(tool).arg(\"--help\").output();\n+        match output {\n+            Ok(output) if output.status.success() => {}\n+            _ => {\n+                exit_help(&format!(\"The tool {} is not installed\", tool));\n+            }\n+        }\n+    }\n+    if !test_exe.exists() {\n+        exit_help(&format!(\n+            \"Test executable ({}) not found\",\n+            test_exe.display()\n+        ));\n+    }\n+}\n+\n+fn main() {\n+    // Parse args\n+    let args = env::args().collect::<Vec<_>>();\n+    let build_dir = args\n+        .get(1)\n+        .unwrap_or_else(|| exit_help(\"Must set build dir\"));\n+    if build_dir == \"--help\" {\n+        exit_help(\"--help requested\")\n+    }\n+    let filter = args\n+        .get(2)\n+        // Require filter for now. In the future it could be optional and the tool could provide a\n+        // default filter.\n+        .unwrap_or_else(|| exit_help(\"Must set boost test filter\"));\n+    if args.get(3).is_some() {\n+        exit_help(\"Too many args\")\n+    }\n+\n+    let build_dir = Path::new(build_dir);\n+    let test_exe = build_dir.join(\"src/test/test_bitcoin\");\n+\n+    sanity_check(&test_exe);\n+\n+    deterministic_coverage(build_dir, &test_exe, filter);\n+}\n+\n+fn deterministic_coverage(build_dir: &Path, test_exe: &Path, filter: &str) {\n+    let profraw_file = build_dir.join(\"test_det_cov.profraw\");\n+    let profdata_file = build_dir.join(\"test_det_cov.profdata\");\n+    let run_single = |run_id: u8| {\n+        let cov_txt_path = build_dir.join(format!(\"test_det_cov.show.{run_id}.txt\"));\n+        assert!(Command::new(test_exe)\n+            .env(\"LLVM_PROFILE_FILE\", &profraw_file)\n+            .env(\"BOOST_TEST_RUN_FILTERS\", filter)\n+            .env(\"RANDOM_CTX_SEED\", \"21\")\n+            .status()\n+            .expect(\"test failed\")\n+            .success());",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": 79,
      "original_position": 79,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "in_reply_to_id": 1966329661,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Responding to https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1967697007:\r\n\r\n> I don't think this has something to do with the language it is written in. I am sure it is possible to write a check for the exit code in any language and print a different error message than an assertion failure.\r\n\r\nBash can't spew stacktraces AFAIK. And the \"noise\" is even larger than I [posted initially](https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1966329661), if one runs with the recommended args from *contrib/devtools/README.md*:\r\n\r\n```\r\n₿ RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-unittest-coverage/Cargo.toml -- $PWD/build boost_unittest_filter\r\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.03s\r\n     Running `contrib/devtools/deterministic-unittest-coverage/target/debug/deterministic-unittest-coverage /home/hodlinator/b2/build boost_unittest_filter`\r\nTest setup error: no test cases matching filter or all test cases were disabled\r\nthread 'main' panicked at src/main.rs:73:9:\r\nassertion failed: Command::new(test_exe).env(\"LLVM_PROFILE_FILE\",\r\n                        &profraw_file).env(\"BOOST_TEST_RUN_FILTERS\",\r\n                    filter).env(\"RANDOM_CTX_SEED\",\r\n                \"21\").status().expect(\"test failed\").success()\r\nstack backtrace:\r\n   0: rust_begin_unwind\r\n   1: core::panicking::panic_fmt\r\n   2: core::panicking::panic\r\n   3: deterministic_unittest_coverage::deterministic_coverage::{{closure}}\r\n             at ./contrib/devtools/deterministic-unittest-coverage/src/main.rs:73:9\r\n   4: deterministic_unittest_coverage::deterministic_coverage\r\n             at ./contrib/devtools/deterministic-unittest-coverage/src/main.rs:120:14\r\n   5: deterministic_unittest_coverage::main\r\n             at ./contrib/devtools/deterministic-unittest-coverage/src/main.rs:65:5\r\n   6: core::ops::function::FnOnce::call_once\r\n             at /build/rustc-1.84.1-src/library/core/src/ops/function.rs:250:5\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\n```\r\n\r\n> I understand your concern, and I'd be happy to address it wholesale in a follow-up for all places. I expect the follow-up to be trivial to review.\r\n>\r\n> Also, I'd be happy to push your suggested change, if this was your only blocker. However, I don't want to spend time on shaping error messages, when not a single reviewer thinks the code is otherwise acceptable to merge (it has zero code acks right now).\r\n\r\nI agree it can be done in a follow-up.",
      "created_at": "2025-02-24T14:34:18Z",
      "updated_at": "2025-02-24T16:47:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1967761569",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967761569"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": 73,
      "original_start_line": 73,
      "start_side": "RIGHT",
      "line": 79,
      "original_line": 79,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967897709",
      "pull_request_review_id": 2637311191,
      "id": 1967897709,
      "node_id": "PRRC_kwDOABII5851S7xt",
      "diff_hunk": "@@ -11,15 +11,39 @@ A tool to check for non-determinism in fuzz coverage. To get the help, run:\n RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- --help\n ```\n \n-To execute the tool, compilation has to be done with the build options\n-`-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++'\n--DBUILD_FOR_FUZZING=ON -DCMAKE_CXX_FLAGS='-fPIC -fprofile-instr-generate\n--fcoverage-mapping'`. Both llvm-profdata and llvm-cov must be installed. Also,\n-the qa-assets repository must have been cloned. Finally, a fuzz target has to\n-be picked before running the tool:\n+To execute the tool, compilation has to be done with the build options:\n \n ```\n-RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/build_dir $PWD/qa-assets/corpora-dir fuzz_target_name\n+-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++' -DBUILD_FOR_FUZZING=ON -DCMAKE_CXX_FLAGS='-fprofile-instr-generate -fcoverage-mapping'\n+```\n+\n+Both llvm-profdata and llvm-cov must be installed. Also, the qa-assets\n+repository must have been cloned. Finally, a fuzz target has to be picked\n+before running the tool:\n+\n+```\n+RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/build_dir $PWD/qa-assets/fuzz_corpora fuzz_target_name\n+```\n+\n+deterministic-unittest-coverage\n+===========================\n+\n+A tool to check for non-determinism in unit-test coverage. To get the help, run:\n+\n+```\n+RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-unittest-coverage/Cargo.toml -- --help\n+```\n+\n+To execute the tool, compilation has to be done with the build options:\n+\n+```\n+-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++' -DCMAKE_CXX_FLAGS='-fprofile-instr-generate -fcoverage-mapping'\n+```\n+\n+Both llvm-profdata and llvm-cov must be installed.\n+\n+```\n+RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-unittest-coverage/Cargo.toml -- $PWD/build_dir boost_unittest_filter",
      "path": "contrib/devtools/README.md",
      "position": null,
      "original_position": 43,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Curious why you include `RUST_BACKTRACE=1` in the recommended command line?\r\n\r\nAlso could maybe use ~angle~arrow-brackets or something to denote input?\r\n```suggestion\r\ncargo run --manifest-path ./contrib/devtools/deterministic-unittest-coverage/Cargo.toml -- $PWD/build_dir <boost_unittest_filter>\r\n```",
      "created_at": "2025-02-24T15:37:32Z",
      "updated_at": "2025-02-24T16:48:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1967897709",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967897709"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967952190",
      "pull_request_review_id": 2637311191,
      "id": 1967952190,
      "node_id": "PRRC_kwDOABII5851TJE-",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const GIT: &str = \"git\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir boost_unittest_filter\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");\n+    exit(1)\n+}\n+\n+fn sanity_check(test_exe: &Path) {\n+    for tool in [LLVM_PROFDATA, LLVM_COV, GIT] {\n+        let output = Command::new(tool).arg(\"--help\").output();\n+        match output {\n+            Ok(output) if output.status.success() => {}\n+            _ => {\n+                exit_help(&format!(\"The tool {} is not installed\", tool));\n+            }\n+        }\n+    }\n+    if !test_exe.exists() {\n+        exit_help(&format!(\n+            \"Test executable ({}) not found\",\n+            test_exe.display()\n+        ));\n+    }\n+}\n+\n+fn main() {\n+    // Parse args\n+    let args = env::args().collect::<Vec<_>>();\n+    let build_dir = args\n+        .get(1)\n+        .unwrap_or_else(|| exit_help(\"Must set build dir\"));\n+    if build_dir == \"--help\" {\n+        exit_help(\"--help requested\")\n+    }\n+    let filter = args\n+        .get(2)\n+        // Require filter for now. In the future it could be optional and the tool could provide a\n+        // default filter.\n+        .unwrap_or_else(|| exit_help(\"Must set boost test filter\"));\n+    if args.get(3).is_some() {\n+        exit_help(\"Too many args\")\n+    }\n+\n+    let build_dir = Path::new(build_dir);\n+    let test_exe = build_dir.join(\"src/test/test_bitcoin\");\n+\n+    sanity_check(&test_exe);\n+\n+    deterministic_coverage(build_dir, &test_exe, filter);\n+}\n+\n+fn deterministic_coverage(build_dir: &Path, test_exe: &Path, filter: &str) {\n+    let profraw_file = build_dir.join(\"test_det_cov.profraw\");\n+    let profdata_file = build_dir.join(\"test_det_cov.profdata\");\n+    let run_single = |run_id: u8| {\n+        let cov_txt_path = build_dir.join(format!(\"test_det_cov.show.{run_id}.txt\"));\n+        assert!(Command::new(test_exe)\n+            .env(\"LLVM_PROFILE_FILE\", &profraw_file)\n+            .env(\"BOOST_TEST_RUN_FILTERS\", filter)\n+            .env(\"RANDOM_CTX_SEED\", \"21\")\n+            .status()\n+            .expect(\"test failed\")\n+            .success());\n+        assert!(Command::new(LLVM_PROFDATA)\n+            .arg(\"merge\")\n+            .arg(\"--sparse\")\n+            .arg(&profraw_file)\n+            .arg(\"-o\")\n+            .arg(&profdata_file)\n+            .status()\n+            .expect(\"merge failed\")\n+            .success());\n+        let cov_file = File::create(&cov_txt_path).expect(\"Failed to create coverage txt file\");\n+        assert!(Command::new(LLVM_COV)\n+            .args([\n+                \"show\",\n+                \"--show-line-counts-or-regions\",\n+                \"--show-branches=count\",\n+                \"--show-expansions\",\n+                &format!(\"--instr-profile={}\", profdata_file.display()),\n+            ])\n+            .arg(test_exe)\n+            .stdout(cov_file)\n+            .status()\n+            .expect(\"llvm-cov failed\")\n+            .success());\n+        cov_txt_path\n+    };\n+    let check_diff = |a: &Path, b: &Path| {\n+        let same = Command::new(GIT)\n+            .args([\"--no-pager\", \"diff\", \"--no-index\"])\n+            .arg(a)\n+            .arg(b)\n+            .status()\n+            .expect(\"Failed to execute git command\")\n+            .success();\n+        if !same {\n+            eprintln!();\n+            eprintln!(\"The coverage was not deterministic between runs.\");\n+            eprintln!(\"Exiting.\");\n+            exit(1);\n+        }\n+    };\n+    let r0 = run_single(0);\n+    let r1 = run_single(1);\n+    check_diff(&r0, &r1);\n+    println!(\"Coverage test passed.\");",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": null,
      "original_position": 123,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Could provide a more satisfying message.\r\n```suggestion\r\n    println!(\"Coverage test passed - determinism held for given conditions in 2 consecutive runs!\");\r\n```",
      "created_at": "2025-02-24T16:00:00Z",
      "updated_at": "2025-02-24T16:47:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1967952190",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967952190"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 123,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1969325208",
      "pull_request_review_id": 2640211934,
      "id": 1969325208,
      "node_id": "PRRC_kwDOABII5851YYSY",
      "diff_hunk": "@@ -11,15 +11,39 @@ A tool to check for non-determinism in fuzz coverage. To get the help, run:\n RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- --help\n ```\n \n-To execute the tool, compilation has to be done with the build options\n-`-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++'\n--DBUILD_FOR_FUZZING=ON -DCMAKE_CXX_FLAGS='-fPIC -fprofile-instr-generate\n--fcoverage-mapping'`. Both llvm-profdata and llvm-cov must be installed. Also,\n-the qa-assets repository must have been cloned. Finally, a fuzz target has to\n-be picked before running the tool:\n+To execute the tool, compilation has to be done with the build options:\n \n ```\n-RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/build_dir $PWD/qa-assets/corpora-dir fuzz_target_name\n+-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++' -DBUILD_FOR_FUZZING=ON -DCMAKE_CXX_FLAGS='-fprofile-instr-generate -fcoverage-mapping'\n+```\n+\n+Both llvm-profdata and llvm-cov must be installed. Also, the qa-assets\n+repository must have been cloned. Finally, a fuzz target has to be picked\n+before running the tool:\n+\n+```\n+RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/build_dir $PWD/qa-assets/fuzz_corpora fuzz_target_name\n+```\n+\n+deterministic-unittest-coverage\n+===========================\n+\n+A tool to check for non-determinism in unit-test coverage. To get the help, run:\n+\n+```\n+RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-unittest-coverage/Cargo.toml -- --help\n+```\n+\n+To execute the tool, compilation has to be done with the build options:\n+\n+```\n+-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++' -DCMAKE_CXX_FLAGS='-fprofile-instr-generate -fcoverage-mapping'\n+```\n+\n+Both llvm-profdata and llvm-cov must be installed.\n+\n+```\n+RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-unittest-coverage/Cargo.toml -- $PWD/build_dir boost_unittest_filter",
      "path": "contrib/devtools/README.md",
      "position": null,
      "original_position": 43,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "in_reply_to_id": 1967897709,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Curious why you include `RUST_BACKTRACE=1` in the recommended command line?\r\n\r\nI just wanted the tool  to behave similar to python when an assertion error is hit or when an \"exception\" is thrown. However, this can go away in the patch that polishes the error messages, which I plan to  do in a follow-up.",
      "created_at": "2025-02-25T09:10:34Z",
      "updated_at": "2025-02-25T09:10:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1969325208",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1969325208"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1969328357",
      "pull_request_review_id": 2640217250,
      "id": 1969328357,
      "node_id": "PRRC_kwDOABII5851YZDl",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const GIT: &str = \"git\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir boost_unittest_filter\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");\n+    exit(1)\n+}\n+\n+fn sanity_check(test_exe: &Path) {\n+    for tool in [LLVM_PROFDATA, LLVM_COV, GIT] {\n+        let output = Command::new(tool).arg(\"--help\").output();\n+        match output {\n+            Ok(output) if output.status.success() => {}\n+            _ => {\n+                exit_help(&format!(\"The tool {} is not installed\", tool));\n+            }\n+        }\n+    }\n+    if !test_exe.exists() {\n+        exit_help(&format!(\n+            \"Test executable ({}) not found\",\n+            test_exe.display()\n+        ));\n+    }\n+}\n+\n+fn main() {\n+    // Parse args\n+    let args = env::args().collect::<Vec<_>>();\n+    let build_dir = args\n+        .get(1)\n+        .unwrap_or_else(|| exit_help(\"Must set build dir\"));\n+    if build_dir == \"--help\" {\n+        exit_help(\"--help requested\")\n+    }\n+    let filter = args\n+        .get(2)\n+        // Require filter for now. In the future it could be optional and the tool could provide a\n+        // default filter.\n+        .unwrap_or_else(|| exit_help(\"Must set boost test filter\"));\n+    if args.get(3).is_some() {\n+        exit_help(\"Too many args\")\n+    }\n+\n+    let build_dir = Path::new(build_dir);\n+    let test_exe = build_dir.join(\"src/test/test_bitcoin\");\n+\n+    sanity_check(&test_exe);\n+\n+    deterministic_coverage(build_dir, &test_exe, filter);\n+}\n+\n+fn deterministic_coverage(build_dir: &Path, test_exe: &Path, filter: &str) {\n+    let profraw_file = build_dir.join(\"test_det_cov.profraw\");\n+    let profdata_file = build_dir.join(\"test_det_cov.profdata\");\n+    let run_single = |run_id: u8| {\n+        let cov_txt_path = build_dir.join(format!(\"test_det_cov.show.{run_id}.txt\"));\n+        assert!(Command::new(test_exe)\n+            .env(\"LLVM_PROFILE_FILE\", &profraw_file)\n+            .env(\"BOOST_TEST_RUN_FILTERS\", filter)\n+            .env(\"RANDOM_CTX_SEED\", \"21\")\n+            .status()\n+            .expect(\"test failed\")\n+            .success());\n+        assert!(Command::new(LLVM_PROFDATA)\n+            .arg(\"merge\")\n+            .arg(\"--sparse\")\n+            .arg(&profraw_file)\n+            .arg(\"-o\")\n+            .arg(&profdata_file)\n+            .status()\n+            .expect(\"merge failed\")\n+            .success());\n+        let cov_file = File::create(&cov_txt_path).expect(\"Failed to create coverage txt file\");\n+        assert!(Command::new(LLVM_COV)\n+            .args([\n+                \"show\",\n+                \"--show-line-counts-or-regions\",\n+                \"--show-branches=count\",\n+                \"--show-expansions\",\n+                &format!(\"--instr-profile={}\", profdata_file.display()),\n+            ])\n+            .arg(test_exe)\n+            .stdout(cov_file)\n+            .status()\n+            .expect(\"llvm-cov failed\")\n+            .success());\n+        cov_txt_path\n+    };\n+    let check_diff = |a: &Path, b: &Path| {\n+        let same = Command::new(GIT)\n+            .args([\"--no-pager\", \"diff\", \"--no-index\"])\n+            .arg(a)\n+            .arg(b)\n+            .status()\n+            .expect(\"Failed to execute git command\")\n+            .success();\n+        if !same {\n+            eprintln!();\n+            eprintln!(\"The coverage was not deterministic between runs.\");\n+            eprintln!(\"Exiting.\");\n+            exit(1);\n+        }\n+    };\n+    let r0 = run_single(0);\n+    let r1 = run_single(1);\n+    check_diff(&r0, &r1);\n+    println!(\"Coverage test passed.\");",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": null,
      "original_position": 123,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "in_reply_to_id": 1967952190,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "thx, pushed something",
      "created_at": "2025-02-25T09:12:29Z",
      "updated_at": "2025-02-25T09:12:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1969328357",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1969328357"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 123,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1969428698",
      "pull_request_review_id": 2640424818,
      "id": 1969428698,
      "node_id": "PRRC_kwDOABII5851Yxja",
      "diff_hunk": "@@ -80,6 +81,7 @@ static const bool g_rng_temp_path_init{[] {\n     Assert(!g_used_g_prng);\n     (void)g_rng_temp_path.rand64();\n     g_used_g_prng = false;\n+    ResetCoverageCounters(); // The seed strengthen in SeedStartup is not deterministic, so exclude it from coverage counts",
      "path": "src/test/util/setup_common.cpp",
      "position": 12,
      "original_position": 12,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Static initialization should logically run first for linked libraries, but I just tested it and that was not the case. Code run during static initialization in tests was run before this lambda.\r\n\r\nThis means we could be accidentally hiding obscure cases/sources of non-determinism, but:\r\n- If such early non-deterministic code has downstream effects on determinism of tests we will hopefully realize `ResetCoverageCounters` may be hiding something.\r\n- If early code doesn't have downstream effects on determinism of tests, then we probably don't care.\r\n\r\nAt least test fixture code like the `BasicTestingSetup`-ctor in \r\n`BOOST_FIXTURE_TEST_SUITE(util_tests, BasicTestingSetup)` is just registered and actually run later (otherwise `g_rng_temp_path_init` hadn't worked to begin with).",
      "created_at": "2025-02-25T09:59:44Z",
      "updated_at": "2025-02-25T10:26:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1969428698",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1969428698"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 84,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1969500649",
      "pull_request_review_id": 2640552897,
      "id": 1969500649,
      "node_id": "PRRC_kwDOABII5851ZDHp",
      "diff_hunk": "@@ -80,6 +81,7 @@ static const bool g_rng_temp_path_init{[] {\n     Assert(!g_used_g_prng);\n     (void)g_rng_temp_path.rand64();\n     g_used_g_prng = false;\n+    ResetCoverageCounters(); // The seed strengthen in SeedStartup is not deterministic, so exclude it from coverage counts",
      "path": "src/test/util/setup_common.cpp",
      "position": 12,
      "original_position": 12,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "in_reply_to_id": 1969428698,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Generally, tests shouldn't be using globals. When global state is used nonetheless, at least the (de-)initialization  should happen in a well-defined order after `main`. Thus, I agree with your comment.",
      "created_at": "2025-02-25T10:34:47Z",
      "updated_at": "2025-02-25T10:34:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1969500649",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1969500649"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 84,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1969501913",
      "pull_request_review_id": 2640556381,
      "id": 1969501913,
      "node_id": "PRRC_kwDOABII5851ZDbZ",
      "diff_hunk": "@@ -11,15 +11,39 @@ A tool to check for non-determinism in fuzz coverage. To get the help, run:\n RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- --help\n ```\n \n-To execute the tool, compilation has to be done with the build options\n-`-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++'\n--DBUILD_FOR_FUZZING=ON -DCMAKE_CXX_FLAGS='-fPIC -fprofile-instr-generate\n--fcoverage-mapping'`. Both llvm-profdata and llvm-cov must be installed. Also,\n-the qa-assets repository must have been cloned. Finally, a fuzz target has to\n-be picked before running the tool:\n+To execute the tool, compilation has to be done with the build options:\n \n ```\n-RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/build_dir $PWD/qa-assets/corpora-dir fuzz_target_name\n+-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++' -DBUILD_FOR_FUZZING=ON -DCMAKE_CXX_FLAGS='-fprofile-instr-generate -fcoverage-mapping'\n+```\n+\n+Both llvm-profdata and llvm-cov must be installed. Also, the qa-assets\n+repository must have been cloned. Finally, a fuzz target has to be picked\n+before running the tool:\n+\n+```\n+RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/build_dir $PWD/qa-assets/fuzz_corpora fuzz_target_name\n+```\n+\n+deterministic-unittest-coverage\n+===========================\n+\n+A tool to check for non-determinism in unit-test coverage. To get the help, run:\n+\n+```\n+RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-unittest-coverage/Cargo.toml -- --help\n+```\n+\n+To execute the tool, compilation has to be done with the build options:\n+\n+```\n+-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++' -DCMAKE_CXX_FLAGS='-fprofile-instr-generate -fcoverage-mapping'\n+```\n+\n+Both llvm-profdata and llvm-cov must be installed.\n+\n+```\n+RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-unittest-coverage/Cargo.toml -- $PWD/build_dir boost_unittest_filter",
      "path": "contrib/devtools/README.md",
      "position": null,
      "original_position": 43,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "in_reply_to_id": 1967897709,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Closing thread for now, but I'll keep the follow-up in mind",
      "created_at": "2025-02-25T10:35:28Z",
      "updated_at": "2025-02-25T10:35:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1969501913",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1969501913"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1969502508",
      "pull_request_review_id": 2640558085,
      "id": 1969502508,
      "node_id": "PRRC_kwDOABII5851ZDks",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const GIT: &str = \"git\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir boost_unittest_filter\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");\n+    exit(1)\n+}\n+\n+fn sanity_check(test_exe: &Path) {\n+    for tool in [LLVM_PROFDATA, LLVM_COV, GIT] {\n+        let output = Command::new(tool).arg(\"--help\").output();\n+        match output {\n+            Ok(output) if output.status.success() => {}\n+            _ => {\n+                exit_help(&format!(\"The tool {} is not installed\", tool));\n+            }\n+        }\n+    }\n+    if !test_exe.exists() {\n+        exit_help(&format!(\n+            \"Test executable ({}) not found\",\n+            test_exe.display()\n+        ));\n+    }\n+}\n+\n+fn main() {\n+    // Parse args\n+    let args = env::args().collect::<Vec<_>>();\n+    let build_dir = args\n+        .get(1)\n+        .unwrap_or_else(|| exit_help(\"Must set build dir\"));\n+    if build_dir == \"--help\" {\n+        exit_help(\"--help requested\")\n+    }\n+    let filter = args\n+        .get(2)\n+        // Require filter for now. In the future it could be optional and the tool could provide a\n+        // default filter.\n+        .unwrap_or_else(|| exit_help(\"Must set boost test filter\"));\n+    if args.get(3).is_some() {\n+        exit_help(\"Too many args\")\n+    }\n+\n+    let build_dir = Path::new(build_dir);\n+    let test_exe = build_dir.join(\"src/test/test_bitcoin\");\n+\n+    sanity_check(&test_exe);\n+\n+    deterministic_coverage(build_dir, &test_exe, filter);\n+}\n+\n+fn deterministic_coverage(build_dir: &Path, test_exe: &Path, filter: &str) {\n+    let profraw_file = build_dir.join(\"test_det_cov.profraw\");\n+    let profdata_file = build_dir.join(\"test_det_cov.profdata\");\n+    let run_single = |run_id: u8| {\n+        let cov_txt_path = build_dir.join(format!(\"test_det_cov.show.{run_id}.txt\"));\n+        assert!(Command::new(test_exe)\n+            .env(\"LLVM_PROFILE_FILE\", &profraw_file)\n+            .env(\"BOOST_TEST_RUN_FILTERS\", filter)\n+            .env(\"RANDOM_CTX_SEED\", \"21\")\n+            .status()\n+            .expect(\"test failed\")\n+            .success());",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": 79,
      "original_position": 79,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "in_reply_to_id": 1966329661,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I agree it can be done in a follow-up.\r\n\r\nClosing thread for now, but I'll keep the follow-up in mind",
      "created_at": "2025-02-25T10:35:50Z",
      "updated_at": "2025-02-25T10:35:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1969502508",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1969502508"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": 73,
      "original_start_line": 73,
      "start_side": "RIGHT",
      "line": 79,
      "original_line": 79,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1973878899",
      "pull_request_review_id": 2648277252,
      "id": 1973878899,
      "node_id": "PRRC_kwDOABII5851pwBz",
      "diff_hunk": "@@ -11,15 +11,39 @@ A tool to check for non-determinism in fuzz coverage. To get the help, run:\n RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- --help\n ```\n \n-To execute the tool, compilation has to be done with the build options\n-`-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++'\n--DBUILD_FOR_FUZZING=ON -DCMAKE_CXX_FLAGS='-fPIC -fprofile-instr-generate\n--fcoverage-mapping'`. Both llvm-profdata and llvm-cov must be installed. Also,\n-the qa-assets repository must have been cloned. Finally, a fuzz target has to\n-be picked before running the tool:\n+To execute the tool, compilation has to be done with the build options:\n \n ```\n-RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/build_dir $PWD/qa-assets/corpora-dir fuzz_target_name\n+-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++' -DBUILD_FOR_FUZZING=ON -DCMAKE_CXX_FLAGS='-fprofile-instr-generate -fcoverage-mapping'\n+```\n+\n+Both llvm-profdata and llvm-cov must be installed. Also, the qa-assets",
      "path": "contrib/devtools/README.md",
      "position": 17,
      "original_position": 17,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "in_reply_to_id": null,
      "user": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Because git is now a hard dependency, I would suggest to change the readme to:\r\n\r\n```suggestion\r\nIn addition to git, both llvm-profdata and llvm-cov must be installed. Also, the qa-assets\r\n```",
      "created_at": "2025-02-27T15:54:55Z",
      "updated_at": "2025-02-27T16:07:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1973878899",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1973878899"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1973882490",
      "pull_request_review_id": 2648277252,
      "id": 1973882490,
      "node_id": "PRRC_kwDOABII5851pw56",
      "diff_hunk": "@@ -11,15 +11,39 @@ A tool to check for non-determinism in fuzz coverage. To get the help, run:\n RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- --help\n ```\n \n-To execute the tool, compilation has to be done with the build options\n-`-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++'\n--DBUILD_FOR_FUZZING=ON -DCMAKE_CXX_FLAGS='-fPIC -fprofile-instr-generate\n--fcoverage-mapping'`. Both llvm-profdata and llvm-cov must be installed. Also,\n-the qa-assets repository must have been cloned. Finally, a fuzz target has to\n-be picked before running the tool:\n+To execute the tool, compilation has to be done with the build options:\n \n ```\n-RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/build_dir $PWD/qa-assets/corpora-dir fuzz_target_name\n+-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++' -DBUILD_FOR_FUZZING=ON -DCMAKE_CXX_FLAGS='-fprofile-instr-generate -fcoverage-mapping'\n+```\n+\n+Both llvm-profdata and llvm-cov must be installed. Also, the qa-assets\n+repository must have been cloned. Finally, a fuzz target has to be picked\n+before running the tool:\n+\n+```\n+RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/build_dir $PWD/qa-assets/fuzz_corpora fuzz_target_name\n+```\n+\n+deterministic-unittest-coverage\n+===========================\n+\n+A tool to check for non-determinism in unit-test coverage. To get the help, run:\n+\n+```\n+RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-unittest-coverage/Cargo.toml -- --help\n+```\n+\n+To execute the tool, compilation has to be done with the build options:\n+\n+```\n+-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++' -DCMAKE_CXX_FLAGS='-fprofile-instr-generate -fcoverage-mapping'\n+```\n+\n+Both llvm-profdata and llvm-cov must be installed.",
      "path": "contrib/devtools/README.md",
      "position": 40,
      "original_position": 40,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "in_reply_to_id": null,
      "user": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Also add it here: \r\n\r\n```suggestion\r\nIn addition to git, both llvm-profdata and llvm-cov must be installed.\r\n```",
      "created_at": "2025-02-27T15:56:54Z",
      "updated_at": "2025-02-27T16:07:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1973882490",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1973882490"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 43,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1973909534",
      "pull_request_review_id": 2648331904,
      "id": 1973909534,
      "node_id": "PRRC_kwDOABII5851p3ge",
      "diff_hunk": "@@ -11,15 +11,39 @@ A tool to check for non-determinism in fuzz coverage. To get the help, run:\n RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- --help\n ```\n \n-To execute the tool, compilation has to be done with the build options\n-`-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++'\n--DBUILD_FOR_FUZZING=ON -DCMAKE_CXX_FLAGS='-fPIC -fprofile-instr-generate\n--fcoverage-mapping'`. Both llvm-profdata and llvm-cov must be installed. Also,\n-the qa-assets repository must have been cloned. Finally, a fuzz target has to\n-be picked before running the tool:\n+To execute the tool, compilation has to be done with the build options:\n \n ```\n-RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/build_dir $PWD/qa-assets/corpora-dir fuzz_target_name\n+-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++' -DBUILD_FOR_FUZZING=ON -DCMAKE_CXX_FLAGS='-fprofile-instr-generate -fcoverage-mapping'\n+```\n+\n+Both llvm-profdata and llvm-cov must be installed. Also, the qa-assets",
      "path": "contrib/devtools/README.md",
      "position": 17,
      "original_position": 17,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "in_reply_to_id": 1973878899,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not sure. If someone has the source code, they likely got it via git. If someone has compiled with clang, they likely have llvm tools. So it would be better to just remove the sentence.\r\n\r\nIn any case, I'll leave this nit as-is for now, to not invalidate the three acks. ",
      "created_at": "2025-02-27T16:12:57Z",
      "updated_at": "2025-02-27T16:12:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1973909534",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1973909534"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1996678675",
      "pull_request_review_id": 2687534586,
      "id": 1996678675,
      "node_id": "PRRC_kwDOABII5853AuYT",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const GIT: &str = \"git\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir boost_unittest_filter\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");\n+    exit(1)\n+}\n+\n+fn sanity_check(test_exe: &Path) {\n+    for tool in [LLVM_PROFDATA, LLVM_COV, GIT] {\n+        let output = Command::new(tool).arg(\"--help\").output();\n+        match output {\n+            Ok(output) if output.status.success() => {}\n+            _ => {\n+                exit_help(&format!(\"The tool {} is not installed\", tool));\n+            }\n+        }\n+    }\n+    if !test_exe.exists() {\n+        exit_help(&format!(\n+            \"Test executable ({}) not found\",\n+            test_exe.display()\n+        ));\n+    }\n+}\n+\n+fn main() {\n+    // Parse args\n+    let args = env::args().collect::<Vec<_>>();\n+    let build_dir = args\n+        .get(1)\n+        .unwrap_or_else(|| exit_help(\"Must set build dir\"));\n+    if build_dir == \"--help\" {\n+        exit_help(\"--help requested\")\n+    }\n+    let filter = args\n+        .get(2)\n+        // Require filter for now. In the future it could be optional and the tool could provide a\n+        // default filter.\n+        .unwrap_or_else(|| exit_help(\"Must set boost test filter\"));\n+    if args.get(3).is_some() {\n+        exit_help(\"Too many args\")\n+    }\n+\n+    let build_dir = Path::new(build_dir);\n+    let test_exe = build_dir.join(\"src/test/test_bitcoin\");\n+\n+    sanity_check(&test_exe);\n+\n+    deterministic_coverage(build_dir, &test_exe, filter);\n+}\n+\n+fn deterministic_coverage(build_dir: &Path, test_exe: &Path, filter: &str) {\n+    let profraw_file = build_dir.join(\"test_det_cov.profraw\");\n+    let profdata_file = build_dir.join(\"test_det_cov.profdata\");\n+    let run_single = |run_id: u8| {\n+        let cov_txt_path = build_dir.join(format!(\"test_det_cov.show.{run_id}.txt\"));\n+        assert!(Command::new(test_exe)\n+            .env(\"LLVM_PROFILE_FILE\", &profraw_file)\n+            .env(\"BOOST_TEST_RUN_FILTERS\", filter)\n+            .env(\"RANDOM_CTX_SEED\", \"21\")\n+            .status()\n+            .expect(\"test failed\")\n+            .success());",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": 79,
      "original_position": 79,
      "commit_id": "fa99c3b544b631cfe34d52fb5e71636aedb1b423",
      "original_commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "in_reply_to_id": 1966329661,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": " :nail_care:   Applied nail polish to the messages in https://github.com/bitcoin/bitcoin/pull/32074",
      "created_at": "2025-03-15T09:03:53Z",
      "updated_at": "2025-03-15T09:03:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1996678675",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1996678675"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": 73,
      "original_start_line": 73,
      "start_side": "RIGHT",
      "line": 79,
      "original_line": 79,
      "side": "RIGHT"
    }
  ]
}