{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901",
    "id": 2343078574,
    "node_id": "PR_kwDOABII586LqIqu",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31901",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31901.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31901.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31901",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31901/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
    "number": 31901,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "contrib: Add deterministic-unittest-coverage",
    "user": {
      "login": "maflcko",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maflcko",
      "html_url": "https://github.com/maflcko",
      "followers_url": "https://api.github.com/users/maflcko/followers",
      "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
      "organizations_url": "https://api.github.com/users/maflcko/orgs",
      "repos_url": "https://api.github.com/users/maflcko/repos",
      "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/maflcko/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "The `contrib/devtools/test_deterministic_coverage.sh` script is problematic:\r\n\r\n* It is written in bash. This can lead to issues when running with the ancient bash version shipped by macOS by default, or can lead to other compatibility issues, such as https://github.com/bitcoin/bitcoin/pull/31588#discussion_r1946784827. Also, pipefail isn't set, so IO errors may be silently ignored.\r\n* It is based on gcov. This can lead to issues, such as https://github.com/bitcoin/bitcoin/pull/31588#pullrequestreview-2602169248 (possibly due to prefix-map), or https://github.com/bitcoin/bitcoin/pull/31588#issuecomment-2646395385 (gcovr processing error), or https://github.com/bitcoin/bitcoin/pull/31588#pullrequestreview-2605954001 (gcovr assertion error).\r\n* The script is severely outdated, with the last update to `NON_DETERMINISTIC_TESTS` being in the prior decade.\r\n\r\nInstead of patching around all issues one-by-one, just provide a fresh rewrite, based on the recently added `deterministic-fuzz-coverage` tool based on clang, llvm-cov, and llvm-profdata. (Initial feedback indicates that this is a more promising attempt: https://github.com/bitcoin/bitcoin/pull/31588#issuecomment-2649356408 and https://github.com/bitcoin/bitcoin/pull/31588#issuecomment-2649354598).\r\n\r\nThe new tool also sets `RANDOM_CTX_SEED=21` as suggested by hodlinator in https://github.com/bitcoin/bitcoin/pull/31588#issuecomment-2650784726.",
    "labels": [
      {
        "id": 231994551,
        "node_id": "MDU6TGFiZWwyMzE5OTQ1NTE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Scripts%20and%20tools",
        "name": "Scripts and tools",
        "color": "ffffee",
        "default": false
      }
    ],
    "created_at": "2025-02-18T20:30:25Z",
    "updated_at": "2025-02-24T12:50:33Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "f2b3a99d61a059af9db9242aa8647a11339909e1",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "maflcko:2502-deterministic-unittest-coverage",
      "ref": "2502-deterministic-unittest-coverage",
      "sha": "fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 40046254,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MDA0NjI1NA==",
        "name": "bitcoin-core",
        "full_name": "maflcko/bitcoin-core",
        "owner": {
          "login": "maflcko",
          "id": 6399679,
          "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/maflcko",
          "html_url": "https://github.com/maflcko",
          "followers_url": "https://api.github.com/users/maflcko/followers",
          "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
          "organizations_url": "https://api.github.com/users/maflcko/orgs",
          "repos_url": "https://api.github.com/users/maflcko/repos",
          "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/maflcko/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/maflcko/bitcoin-core",
        "fork": true,
        "url": "https://api.github.com/repos/maflcko/bitcoin-core",
        "archive_url": "https://api.github.com/repos/maflcko/bitcoin-core/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/maflcko/bitcoin-core/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/maflcko/bitcoin-core/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/maflcko/bitcoin-core/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/maflcko/bitcoin-core/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/maflcko/bitcoin-core/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/maflcko/bitcoin-core/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/maflcko/bitcoin-core/contributors",
        "deployments_url": "https://api.github.com/repos/maflcko/bitcoin-core/deployments",
        "downloads_url": "https://api.github.com/repos/maflcko/bitcoin-core/downloads",
        "events_url": "https://api.github.com/repos/maflcko/bitcoin-core/events",
        "forks_url": "https://api.github.com/repos/maflcko/bitcoin-core/forks",
        "git_commits_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/tags%7B/sha%7D",
        "git_url": "git://github.com/maflcko/bitcoin-core.git",
        "issue_comment_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/maflcko/bitcoin-core/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/maflcko/bitcoin-core/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/maflcko/bitcoin-core/languages",
        "merges_url": "https://api.github.com/repos/maflcko/bitcoin-core/merges",
        "milestones_url": "https://api.github.com/repos/maflcko/bitcoin-core/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/maflcko/bitcoin-core/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/maflcko/bitcoin-core/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/maflcko/bitcoin-core/releases%7B/id%7D",
        "ssh_url": "git@github.com:maflcko/bitcoin-core.git",
        "stargazers_url": "https://api.github.com/repos/maflcko/bitcoin-core/stargazers",
        "statuses_url": "https://api.github.com/repos/maflcko/bitcoin-core/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/maflcko/bitcoin-core/subscribers",
        "subscription_url": "https://api.github.com/repos/maflcko/bitcoin-core/subscription",
        "tags_url": "https://api.github.com/repos/maflcko/bitcoin-core/tags",
        "teams_url": "https://api.github.com/repos/maflcko/bitcoin-core/teams",
        "trees_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/maflcko/bitcoin-core.git",
        "hooks_url": "https://api.github.com/repos/maflcko/bitcoin-core/hooks",
        "svn_url": "https://github.com/maflcko/bitcoin-core",
        "homepage": "",
        "language": "C++",
        "forks_count": 9,
        "stargazers_count": 27,
        "watchers_count": 27,
        "size": 244479,
        "default_branch": "master",
        "open_issues_count": 15,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-02-24T11:38:07Z",
        "created_at": "2015-08-01T12:42:47Z",
        "updated_at": "2025-01-22T17:43:41Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "e486597f9a57903600656fb5106858941885852f",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36828,
        "stargazers_count": 82149,
        "watchers_count": 82149,
        "size": 276074,
        "default_branch": "master",
        "open_issues_count": 667,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-02-21T16:05:19Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-02-24T12:59:44Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 190,
    "deletions": 176,
    "changed_files": 8,
    "commits": 4,
    "review_comments": 16,
    "comments": 2
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhMWUwYTcyMjgxZmRlMTNkNzA0Yzc3NjZkNGQ3MDRlMDA5Mjc0ZGE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa1e0a72281fde13d704c7766d4d704e009274da",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa1e0a72281fde13d704c7766d4d704e009274da",
      "tree": {
        "sha": "f084129b39751cf6c0f962f6dcde17437ee2e014",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f084129b39751cf6c0f962f6dcde17437ee2e014"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree f084129b39751cf6c0f962f6dcde17437ee2e014\nparent 43e287b3ff5f0d223b0911b6ef90054ce5eb69d2\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1739907820 +0100\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1739907990 +0100\n\ngitignore: target/\n\nNeeded for the recently added\ncontrib/devtools/deterministic-fuzz-coverage/target/\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQH1rb9e0QDO03JEq1vLW7sCkZQNHsT34YPwIc/F7GDmqRtfr3u5qLc2kAT5bB5L1S4\n0hdNlAqppXkvPWGsK+AQQ=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/43e287b3ff5f0d223b0911b6ef90054ce5eb69d2",
          "sha": "43e287b3ff5f0d223b0911b6ef90054ce5eb69d2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/43e287b3ff5f0d223b0911b6ef90054ce5eb69d2"
        }
      ],
      "message": "gitignore: target/\n\nNeeded for the recently added\ncontrib/devtools/deterministic-fuzz-coverage/target/",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-02-18T19:46:30Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-02-18T19:43:40Z"
      },
      "sha": "fa1e0a72281fde13d704c7766d4d704e009274da"
    },
    {
      "event": "commented",
      "id": 2666867514,
      "node_id": "IC_kwDOABII586e9Ss6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2666867514",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-18T20:30:29Z",
      "updated_at": "2025-02-22T15:09:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/31901.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [dergoegge](https://github.com/bitcoin/bitcoin/pull/31901#issuecomment-2668163938), [theStack](https://github.com/bitcoin/bitcoin/pull/31901#pullrequestreview-2633053901), [hodlinator](https://github.com/bitcoin/bitcoin/pull/31901#pullrequestreview-2634421646) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#31588](https://github.com/bitcoin/bitcoin/pull/31588) (contrib: fix `test_deterministic_coverage.sh` script for out-of-tree builds by theStack)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#issuecomment-2666867514",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31901"
    },
    {
      "event": "renamed",
      "id": 16355241415,
      "node_id": "RTE_lADOABII586qkCWqzwAAAAPO2S3H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16355241415",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-18T20:30:31Z",
      "rename": {
        "from": " contrib: Add deterministic-unittest-coverage ",
        "to": "contrib: Add deterministic-unittest-coverage"
      }
    },
    {
      "event": "labeled",
      "id": 16355241553,
      "node_id": "LE_lADOABII586qkCWqzwAAAAPO2S5R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16355241553",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-18T20:30:32Z",
      "label": {
        "name": "Scripts and tools",
        "color": "ffffee"
      }
    },
    {
      "event": "commented",
      "id": 2668163938,
      "node_id": "IC_kwDOABII586fCPNi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2668163938",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-19T10:10:41Z",
      "updated_at": "2025-02-19T10:10:41Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#issuecomment-2668163938",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31901"
    },
    {
      "event": "reviewed",
      "id": 2633053901,
      "node_id": "PRR_kwDOABII586c8TbN",
      "url": null,
      "actor": null,
      "commit_id": "bbbb6998f95abf5b58039eb1e9dbf06df83f7a81",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#pullrequestreview-2633053901",
      "submitted_at": "2025-02-21T13:36:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16403134233,
      "node_id": "HRFPE_lADOABII586qkCWqzwAAAAPRs_cZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16403134233",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/fafce12a4871ed66a868b460b779e794a89218eb",
      "created_at": "2025-02-21T16:06:20Z"
    },
    {
      "event": "reviewed",
      "id": 2634421646,
      "node_id": "PRR_kwDOABII586dBhWO",
      "url": null,
      "actor": null,
      "commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK fafce12a4871ed66a868b460b779e794a89218eb",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#pullrequestreview-2634421646",
      "submitted_at": "2025-02-22T15:09:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhZjkwNWI5YjY5NDMxM2JlZDQ1MzFkMTI5OTU2OGExMDFmMzNmYjg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faf905b9b694313bed4531d1299568a101f33fb8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/faf905b9b694313bed4531d1299568a101f33fb8",
      "tree": {
        "sha": "bb358b8a86e9e0250fb8acd5d906fe38143ef1f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb358b8a86e9e0250fb8acd5d906fe38143ef1f9"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree bb358b8a86e9e0250fb8acd5d906fe38143ef1f9\nparent fa1e0a72281fde13d704c7766d4d704e009274da\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1740393745 +0100\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1740393482 +0100\n\ndoc: Remove unused -fPIC\n\nThis is harmless, but no longer needed after commit\n06b9236f4327525875768af5fc554c651c5ec3cf.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQKxucWrlj6uUDrBeyX/bIWREE6IQYNDoKQz8EUUm3bqXIc5pQytUXc9OvTp2bfPyME\nBenhggr3350ilYgF6CAwM=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa1e0a72281fde13d704c7766d4d704e009274da",
          "sha": "fa1e0a72281fde13d704c7766d4d704e009274da",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa1e0a72281fde13d704c7766d4d704e009274da"
        }
      ],
      "message": "doc: Remove unused -fPIC\n\nThis is harmless, but no longer needed after commit\n06b9236f4327525875768af5fc554c651c5ec3cf.",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-02-24T10:38:02Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-02-24T10:42:25Z"
      },
      "sha": "faf905b9b694313bed4531d1299568a101f33fb8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhMzk0MGIxY2JjOTRjOGNjZmRlMzZiZTFkYjFhZGNhMDRmYmNhYTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa3940b1cbc94c8ccfde36be1db1adca04fbcaa6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa3940b1cbc94c8ccfde36be1db1adca04fbcaa6",
      "tree": {
        "sha": "3c2bd39b7ebf35af4dd52ea101a925be0df48ff8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3c2bd39b7ebf35af4dd52ea101a925be0df48ff8"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 3c2bd39b7ebf35af4dd52ea101a925be0df48ff8\nparent faf905b9b694313bed4531d1299568a101f33fb8\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1739897650 +0100\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1740393701 +0100\n\ncontrib: deterministic-fuzz-coverage fixups\n\n* Name the fuzz_corpora dir after its real name.\n* Add missing cargo lock file.\n* Use git instead of diff command to increase compatibility\n* Use --help instead of --version to increase compatibility\n* Use assert consistently for unexpected errors.\n* Remove redundant Stdio::from.\n* Fix typos.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQKJ/YGTTi24rJX2jToLR7dO6zKLMS60GANnvj9BOdnMFJP0xF46pNRrO0OEpj4hpf9\n+a5w46NblToQScl19mRQ8=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faf905b9b694313bed4531d1299568a101f33fb8",
          "sha": "faf905b9b694313bed4531d1299568a101f33fb8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/faf905b9b694313bed4531d1299568a101f33fb8"
        }
      ],
      "message": "contrib: deterministic-fuzz-coverage fixups\n\n* Name the fuzz_corpora dir after its real name.\n* Add missing cargo lock file.\n* Use git instead of diff command to increase compatibility\n* Use --help instead of --version to increase compatibility\n* Use assert consistently for unexpected errors.\n* Remove redundant Stdio::from.\n* Fix typos.",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-02-24T10:41:41Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-02-18T16:54:10Z"
      },
      "sha": "fa3940b1cbc94c8ccfde36be1db1adca04fbcaa6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhZmE1OTJhOGFkOTVmY2I2NGRiM2QzNDJjZGM3MTkyZmY3ZWYyY2Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "tree": {
        "sha": "9d604a2f3ecdf9723d83dd24bb26958fc2a9060c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9d604a2f3ecdf9723d83dd24bb26958fc2a9060c"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 9d604a2f3ecdf9723d83dd24bb26958fc2a9060c\nparent fa3940b1cbc94c8ccfde36be1db1adca04fbcaa6\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1739909843 +0100\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1740393749 +0100\n\ncontrib: Add deterministic-unittest-coverage\n\nThis replaces the bash script with a tool based on clang/llvm tools.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQKz8SScgcMChcx5j/jGJYIsFBglucBOY5DwS2WRwmlOoXl+c/LbOpOMFiwxvWXD+pC\nAYfKU09iKGS3TkxcX2KwM=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa3940b1cbc94c8ccfde36be1db1adca04fbcaa6",
          "sha": "fa3940b1cbc94c8ccfde36be1db1adca04fbcaa6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa3940b1cbc94c8ccfde36be1db1adca04fbcaa6"
        }
      ],
      "message": "contrib: Add deterministic-unittest-coverage\n\nThis replaces the bash script with a tool based on clang/llvm tools.",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-02-24T10:42:29Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-02-18T20:17:23Z"
      },
      "sha": "fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16428842895,
      "node_id": "HRFPE_lADOABII586qkCWqzwAAAAPTPD-P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16428842895",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "created_at": "2025-02-24T10:57:56Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1965482744",
      "pull_request_review_id": 2633053901,
      "id": 1965482744,
      "node_id": "PRRC_kwDOABII5851JuL4",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const DIFF: &str = \"diff\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir [custom test filter (default: all but known non-deterministic tests)]\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");\n+    exit(1)\n+}\n+\n+fn sanity_check(test_exe: &Path) {\n+    for tool in [LLVM_PROFDATA, LLVM_COV, DIFF] {\n+        let output = Command::new(tool).arg(\"--version\").output();",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": null,
      "original_position": 26,
      "commit_id": "fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "original_commit_id": "bbbb6998f95abf5b58039eb1e9dbf06df83f7a81",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "On the machine where I tried this yesterday quickly (OpenBSD 7.6, with LLVM 16.0.6 included in the base system), neither `llvm-profdata` nor `diff` know a `--version` argument, so the sanity check failed even though the binaries were there. Will try on a Linux machine with Ubuntu in a bit.",
      "created_at": "2025-02-21T13:32:43Z",
      "updated_at": "2025-02-21T13:36:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1965482744",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1965482744"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": 24,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1965485239",
      "pull_request_review_id": 2633053901,
      "id": 1965485239,
      "node_id": "PRRC_kwDOABII5851Juy3",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const DIFF: &str = \"diff\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir [custom test filter (default: all but known non-deterministic tests)]\");",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": null,
      "original_position": 18,
      "commit_id": "fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "original_commit_id": "bbbb6998f95abf5b58039eb1e9dbf06df83f7a81",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n    eprintln!(\"Usage: program ./build_dir <custom test filter>\");\r\n```\r\nas there is no default yet and specifying a filter is required by now?",
      "created_at": "2025-02-21T13:34:36Z",
      "updated_at": "2025-02-21T13:36:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1965485239",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1965485239"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1965508525",
      "pull_request_review_id": 2633099718,
      "id": 1965508525,
      "node_id": "PRRC_kwDOABII5851J0et",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const DIFF: &str = \"diff\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir [custom test filter (default: all but known non-deterministic tests)]\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");\n+    exit(1)\n+}\n+\n+fn sanity_check(test_exe: &Path) {\n+    for tool in [LLVM_PROFDATA, LLVM_COV, DIFF] {\n+        let output = Command::new(tool).arg(\"--version\").output();",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": null,
      "original_position": 26,
      "commit_id": "fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "original_commit_id": "bbbb6998f95abf5b58039eb1e9dbf06df83f7a81",
      "in_reply_to_id": 1965482744,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It should be possible to drop `diff` and use `git diff --no-index` (or something else). As for the llvm tool, it looks like they added the arg later:\r\n\r\n```\r\n# llvm-profdata-19 --version \r\nDebian LLVM version 19.1.4\r\n  Optimized build.\r\n# llvm-profdata-16 --version\r\nllvm-profdata-16: Unknown command!\r\nUSAGE: llvm-profdata-16 <merge|show|overlap> [args...]\r\n",
      "created_at": "2025-02-21T13:51:11Z",
      "updated_at": "2025-02-21T14:17:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1965508525",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1965508525"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": 24,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1965512116",
      "pull_request_review_id": 2633106647,
      "id": 1965512116,
      "node_id": "PRRC_kwDOABII5851J1W0",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const DIFF: &str = \"diff\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir [custom test filter (default: all but known non-deterministic tests)]\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");\n+    exit(1)\n+}\n+\n+fn sanity_check(test_exe: &Path) {\n+    for tool in [LLVM_PROFDATA, LLVM_COV, DIFF] {\n+        let output = Command::new(tool).arg(\"--version\").output();",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": null,
      "original_position": 26,
      "commit_id": "fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "original_commit_id": "bbbb6998f95abf5b58039eb1e9dbf06df83f7a81",
      "in_reply_to_id": 1965482744,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Looks like they added it in 17, so I could require that, or remove the `--version` check.\r\n\r\n```\r\n# llvm-profdata-17 --version \r\nllvm-profdata-17\r\nUbuntu LLVM version 17.0.6\r\n  Optimized build.\r\n",
      "created_at": "2025-02-21T13:53:35Z",
      "updated_at": "2025-02-21T13:53:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1965512116",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1965512116"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": 24,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1966288594",
      "pull_request_review_id": 2634421646,
      "id": 1966288594,
      "node_id": "PRRC_kwDOABII5851My7S",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const GIT: &str = \"git\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir boost_unittest_filter\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");\n+    exit(1)\n+}\n+\n+fn sanity_check(test_exe: &Path) {\n+    for tool in [LLVM_PROFDATA, LLVM_COV, GIT] {\n+        let output = Command::new(tool).arg(\"--help\").output();\n+        match output {\n+            Ok(output) if output.status.success() => {}\n+            _ => {\n+                exit_help(&format!(\"The tool {} is not installed\", tool));\n+            }\n+        }\n+    }\n+    if !test_exe.exists() {\n+        exit_help(&format!(\n+            \"Test executable ({}) not found\",\n+            test_exe.display()\n+        ));\n+    }\n+}\n+\n+fn main() {\n+    // Parse args\n+    let args = env::args().collect::<Vec<_>>();\n+    let build_dir = args\n+        .get(1)\n+        .unwrap_or_else(|| exit_help(\"Must set build dir\"));\n+    if build_dir == \"--help\" {\n+        exit_help(\"--help requested\")\n+    }\n+    let filter = args\n+        .get(2)\n+        // Require filter for now. In the future it could be optional and the tool could provide a\n+        // default filter.\n+        .unwrap_or_else(|| exit_help(\"Must set boost test filter\"));\n+    if args.get(3).is_some() {\n+        exit_help(\"Too many args\")\n+    }\n+\n+    let build_dir = Path::new(build_dir);\n+    let test_exe = build_dir.join(\"src/test/test_bitcoin\");\n+\n+    sanity_check(&test_exe);\n+\n+    deterministic_coverage(build_dir, &test_exe, filter);\n+}\n+\n+fn deterministic_coverage(build_dir: &Path, test_exe: &Path, filter: &str) {\n+    let profraw_file = build_dir.join(\"test_det_cov.profraw\");\n+    let profdata_file = build_dir.join(\"test_det_cov.profdata\");\n+    let run_single = |run_id: u8| {\n+        let cov_txt_path = build_dir.join(format!(\"test_det_cov.show.{run_id}.txt\"));\n+        assert!(Command::new(test_exe)\n+            .env(\"LLVM_PROFILE_FILE\", &profraw_file)\n+            .env(\"BOOST_TEST_RUN_FILTERS\", filter)\n+            .env(\"RANDOM_CTX_SEED\", \"21\")\n+            .status()\n+            .expect(\"test failed\")\n+            .success());\n+        assert!(Command::new(LLVM_PROFDATA)\n+            .arg(\"merge\")\n+            .arg(\"--sparse\")\n+            .arg(&profraw_file)\n+            .arg(\"-o\")\n+            .arg(&profdata_file)\n+            .status()\n+            .expect(\"merge failed\")\n+            .success());\n+        let cov_file = File::create(&cov_txt_path).expect(\"Failed to create coverage txt file\");\n+        assert!(Command::new(LLVM_COV)\n+            .args([\n+                \"show\",\n+                \"--show-line-counts-or-regions\",\n+                \"--show-branches=count\",\n+                \"--show-expansions\",\n+                &format!(\"--instr-profile={}\", profdata_file.display()),\n+            ])\n+            .arg(test_exe)\n+            .stdout(cov_file)\n+            .status()\n+            .expect(\"llvm-cov failed\")\n+            .success());\n+        cov_txt_path\n+    };\n+    let check_diff = |a: &Path, b: &Path| {\n+        let same = Command::new(GIT)\n+            .args([\"--no-pager\", \"diff\", \"--no-index\"])\n+            .arg(a)\n+            .arg(b)\n+            .status()\n+            .expect(\"Failed to execute diff command\")",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": null,
      "original_position": 111,
      "commit_id": "fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "original_commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Detected diff between fuzz and unit test.\r\n```suggestion\r\n            .expect(\"Failed to execute git command\")\r\n```",
      "created_at": "2025-02-21T22:43:44Z",
      "updated_at": "2025-02-22T15:09:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1966288594",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1966288594"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 111,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1966311321",
      "pull_request_review_id": 2634421646,
      "id": 1966311321,
      "node_id": "PRRC_kwDOABII5851M4eZ",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const GIT: &str = \"git\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir boost_unittest_filter\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": 20,
      "original_position": 20,
      "commit_id": "fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "original_commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "One write to *stderr* should suffice? Also `{err}` when we can. (Think I've seen discouragement of `std::endl` in C++ land in favor of `\\n`, this felt similar).\r\n```suggestion\r\n    eprintln!(\r\n        \"Error: {err}\\n\\\r\n         \\n\\\r\n         Usage: program ./build_dir ./qa-assets/fuzz_corpora fuzz_target_name\\n\\\r\n         \\n\\\r\n         Refer to the devtools/README.md for more details.\"\r\n    );\r\n```",
      "created_at": "2025-02-21T23:17:19Z",
      "updated_at": "2025-02-22T15:09:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1966311321",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1966311321"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": 16,
      "original_start_line": 16,
      "start_side": "RIGHT",
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1966329661",
      "pull_request_review_id": 2634421646,
      "id": 1966329661,
      "node_id": "PRRC_kwDOABII5851M889",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const GIT: &str = \"git\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir boost_unittest_filter\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");\n+    exit(1)\n+}\n+\n+fn sanity_check(test_exe: &Path) {\n+    for tool in [LLVM_PROFDATA, LLVM_COV, GIT] {\n+        let output = Command::new(tool).arg(\"--help\").output();\n+        match output {\n+            Ok(output) if output.status.success() => {}\n+            _ => {\n+                exit_help(&format!(\"The tool {} is not installed\", tool));\n+            }\n+        }\n+    }\n+    if !test_exe.exists() {\n+        exit_help(&format!(\n+            \"Test executable ({}) not found\",\n+            test_exe.display()\n+        ));\n+    }\n+}\n+\n+fn main() {\n+    // Parse args\n+    let args = env::args().collect::<Vec<_>>();\n+    let build_dir = args\n+        .get(1)\n+        .unwrap_or_else(|| exit_help(\"Must set build dir\"));\n+    if build_dir == \"--help\" {\n+        exit_help(\"--help requested\")\n+    }\n+    let filter = args\n+        .get(2)\n+        // Require filter for now. In the future it could be optional and the tool could provide a\n+        // default filter.\n+        .unwrap_or_else(|| exit_help(\"Must set boost test filter\"));\n+    if args.get(3).is_some() {\n+        exit_help(\"Too many args\")\n+    }\n+\n+    let build_dir = Path::new(build_dir);\n+    let test_exe = build_dir.join(\"src/test/test_bitcoin\");\n+\n+    sanity_check(&test_exe);\n+\n+    deterministic_coverage(build_dir, &test_exe, filter);\n+}\n+\n+fn deterministic_coverage(build_dir: &Path, test_exe: &Path, filter: &str) {\n+    let profraw_file = build_dir.join(\"test_det_cov.profraw\");\n+    let profdata_file = build_dir.join(\"test_det_cov.profdata\");\n+    let run_single = |run_id: u8| {\n+        let cov_txt_path = build_dir.join(format!(\"test_det_cov.show.{run_id}.txt\"));\n+        assert!(Command::new(test_exe)\n+            .env(\"LLVM_PROFILE_FILE\", &profraw_file)\n+            .env(\"BOOST_TEST_RUN_FILTERS\", filter)\n+            .env(\"RANDOM_CTX_SEED\", \"21\")\n+            .status()\n+            .expect(\"test failed\")\n+            .success());",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": 79,
      "original_position": 79,
      "commit_id": "fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "original_commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Current output on `!success()` due to use of `assert!` for other things than logical invariants:\r\n```\r\n₿ cargo run --release ~/b2/build miniscript\r\n   Compiling deterministic-unittest-coverage v0.1.0 (/home/hodlinator/b2/contrib/devtools/deterministic-unittest-coverage)\r\n    Finished `release` profile [optimized] target(s) in 0.36s\r\n     Running `target/release/deterministic-unittest-coverage /home/hodlinator/b2/build miniscript`\r\nTest setup error: no test cases matching filter or all test cases were disabled\r\nthread 'main' panicked at src/main.rs:73:9:\r\nassertion failed: Command::new(test_exe).env(\"LLVM_PROFILE_FILE\",\r\n                        &profraw_file).env(\"BOOST_TEST_RUN_FILTERS\",\r\n                    filter).env(\"RANDOM_CTX_SEED\",\r\n                \"21\").status().expect(\"test failed\").success()\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\r\n```\r\n\r\nWith suggestion:\r\n```\r\n₿ cargo run --release ~/b2/build miniscript                                                                                                                                  \r\n   Compiling deterministic-unittest-coverage v0.1.0 (/home/hodlinator/b2/contrib/devtools/deterministic-unittest-coverage)\r\n    Finished `release` profile [optimized] target(s) in 0.36s\r\n     Running `target/release/deterministic-unittest-coverage /home/hodlinator/b2/build miniscript`\r\nTest setup error: no test cases matching filter or all test cases were disabled\r\n/home/hodlinator/b2/build/src/test/test_bitcoin failed\r\n```\r\n\r\n```suggestion\r\n        if !Command::new(test_exe)\r\n            .env(\"LLVM_PROFILE_FILE\", &profraw_file)\r\n            .env(\"BOOST_TEST_RUN_FILTERS\", filter)\r\n            .env(\"RANDOM_CTX_SEED\", \"21\")\r\n            .status()\r\n            .expect(\"test failed\")\r\n            .success()\r\n        {\r\n            eprintln!(\"{} failed\", test_exe.display());\r\n            std::process::exit(1)\r\n        }\r\n```",
      "created_at": "2025-02-21T23:49:07Z",
      "updated_at": "2025-02-22T15:09:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1966329661",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1966329661"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": 73,
      "original_start_line": 73,
      "start_side": "RIGHT",
      "line": 79,
      "original_line": 79,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1966332995",
      "pull_request_review_id": 2634421646,
      "id": 1966332995,
      "node_id": "PRRC_kwDOABII5851M9xD",
      "diff_hunk": "@@ -13,13 +13,31 @@ RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz\n \n To execute the tool, compilation has to be done with the build options\n `-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++'\n--DBUILD_FOR_FUZZING=ON -DCMAKE_CXX_FLAGS='-fPIC -fprofile-instr-generate\n+-DBUILD_FOR_FUZZING=ON -DCMAKE_CXX_FLAGS='-fprofile-instr-generate\n -fcoverage-mapping'`. Both llvm-profdata and llvm-cov must be installed. Also,\n the qa-assets repository must have been cloned. Finally, a fuzz target has to\n be picked before running the tool:\n \n ```\n-RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/build_dir $PWD/qa-assets/corpora-dir fuzz_target_name\n+RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/build_dir $PWD/qa-assets/fuzz_corpora fuzz_target_name\n+```\n+\n+deterministic-unittest-coverage\n+===========================\n+\n+A tool to check for non-determinism in unit-test coverage. To get the help, run:\n+\n+```\n+RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-unittest-coverage/Cargo.toml -- --help\n+```\n+\n+To execute the tool, compilation has to be done with the build options\n+`-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++'\n+-DCMAKE_CXX_FLAGS='-fprofile-instr-generate -fcoverage-mapping'`. Both\n+llvm-profdata and llvm-cov must be installed.",
      "path": "contrib/devtools/README.md",
      "position": null,
      "original_position": 27,
      "commit_id": "fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "original_commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "For the sake of easy copy-paste when viewing the .md file directly within editor:\r\n````suggestion\r\nTo execute the tool, compilation has to be done with the build options:\r\n```\r\n-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++' -DCMAKE_CXX_FLAGS='-fprofile-instr-generate -fcoverage-mapping'\r\n```\r\nBoth llvm-profdata and llvm-cov must be installed.\r\n````\r\nSame for the fuzz-version.",
      "created_at": "2025-02-21T23:56:26Z",
      "updated_at": "2025-02-22T15:09:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1966332995",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1966332995"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": 34,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967400390",
      "pull_request_review_id": 2636670193,
      "id": 1967400390,
      "node_id": "PRRC_kwDOABII5851RCXG",
      "diff_hunk": "@@ -13,13 +13,31 @@ RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz\n \n To execute the tool, compilation has to be done with the build options\n `-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++'\n--DBUILD_FOR_FUZZING=ON -DCMAKE_CXX_FLAGS='-fPIC -fprofile-instr-generate\n+-DBUILD_FOR_FUZZING=ON -DCMAKE_CXX_FLAGS='-fprofile-instr-generate\n -fcoverage-mapping'`. Both llvm-profdata and llvm-cov must be installed. Also,\n the qa-assets repository must have been cloned. Finally, a fuzz target has to\n be picked before running the tool:\n \n ```\n-RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/build_dir $PWD/qa-assets/corpora-dir fuzz_target_name\n+RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/build_dir $PWD/qa-assets/fuzz_corpora fuzz_target_name\n+```\n+\n+deterministic-unittest-coverage\n+===========================\n+\n+A tool to check for non-determinism in unit-test coverage. To get the help, run:\n+\n+```\n+RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-unittest-coverage/Cargo.toml -- --help\n+```\n+\n+To execute the tool, compilation has to be done with the build options\n+`-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++'\n+-DCMAKE_CXX_FLAGS='-fprofile-instr-generate -fcoverage-mapping'`. Both\n+llvm-profdata and llvm-cov must be installed.",
      "path": "contrib/devtools/README.md",
      "position": null,
      "original_position": 27,
      "commit_id": "fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "original_commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "in_reply_to_id": 1966332995,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "A minor improvement could be to at least add ` \\`.\r\n```suggestion\r\nTo execute the tool, compilation has to be done with the build options\r\n`-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++' \\\r\n-DCMAKE_CXX_FLAGS='-fprofile-instr-generate -fcoverage-mapping'`. Both\r\nllvm-profdata and llvm-cov must be installed.\r\n```\r\nBut the beginning/end of lines would then still contain text one doesn't want to copy, so I prefer the first suggestion.",
      "created_at": "2025-02-24T10:50:08Z",
      "updated_at": "2025-02-24T10:50:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1967400390",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967400390"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": 34,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967413387",
      "pull_request_review_id": 2636694867,
      "id": 1967413387,
      "node_id": "PRRC_kwDOABII5851RFiL",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const DIFF: &str = \"diff\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir [custom test filter (default: all but known non-deterministic tests)]\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");\n+    exit(1)\n+}\n+\n+fn sanity_check(test_exe: &Path) {\n+    for tool in [LLVM_PROFDATA, LLVM_COV, DIFF] {\n+        let output = Command::new(tool).arg(\"--version\").output();",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": null,
      "original_position": 26,
      "commit_id": "fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "original_commit_id": "bbbb6998f95abf5b58039eb1e9dbf06df83f7a81",
      "in_reply_to_id": 1965482744,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "thx, fixed",
      "created_at": "2025-02-24T10:58:13Z",
      "updated_at": "2025-02-24T10:58:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1967413387",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967413387"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": 24,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967413539",
      "pull_request_review_id": 2636695125,
      "id": 1967413539,
      "node_id": "PRRC_kwDOABII5851RFkj",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const DIFF: &str = \"diff\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir [custom test filter (default: all but known non-deterministic tests)]\");",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": null,
      "original_position": 18,
      "commit_id": "fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "original_commit_id": "bbbb6998f95abf5b58039eb1e9dbf06df83f7a81",
      "in_reply_to_id": 1965485239,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "thx, fixed",
      "created_at": "2025-02-24T10:58:19Z",
      "updated_at": "2025-02-24T10:58:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1967413539",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967413539"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967413630",
      "pull_request_review_id": 2636695304,
      "id": 1967413630,
      "node_id": "PRRC_kwDOABII5851RFl-",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const GIT: &str = \"git\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir boost_unittest_filter\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");\n+    exit(1)\n+}\n+\n+fn sanity_check(test_exe: &Path) {\n+    for tool in [LLVM_PROFDATA, LLVM_COV, GIT] {\n+        let output = Command::new(tool).arg(\"--help\").output();\n+        match output {\n+            Ok(output) if output.status.success() => {}\n+            _ => {\n+                exit_help(&format!(\"The tool {} is not installed\", tool));\n+            }\n+        }\n+    }\n+    if !test_exe.exists() {\n+        exit_help(&format!(\n+            \"Test executable ({}) not found\",\n+            test_exe.display()\n+        ));\n+    }\n+}\n+\n+fn main() {\n+    // Parse args\n+    let args = env::args().collect::<Vec<_>>();\n+    let build_dir = args\n+        .get(1)\n+        .unwrap_or_else(|| exit_help(\"Must set build dir\"));\n+    if build_dir == \"--help\" {\n+        exit_help(\"--help requested\")\n+    }\n+    let filter = args\n+        .get(2)\n+        // Require filter for now. In the future it could be optional and the tool could provide a\n+        // default filter.\n+        .unwrap_or_else(|| exit_help(\"Must set boost test filter\"));\n+    if args.get(3).is_some() {\n+        exit_help(\"Too many args\")\n+    }\n+\n+    let build_dir = Path::new(build_dir);\n+    let test_exe = build_dir.join(\"src/test/test_bitcoin\");\n+\n+    sanity_check(&test_exe);\n+\n+    deterministic_coverage(build_dir, &test_exe, filter);\n+}\n+\n+fn deterministic_coverage(build_dir: &Path, test_exe: &Path, filter: &str) {\n+    let profraw_file = build_dir.join(\"test_det_cov.profraw\");\n+    let profdata_file = build_dir.join(\"test_det_cov.profdata\");\n+    let run_single = |run_id: u8| {\n+        let cov_txt_path = build_dir.join(format!(\"test_det_cov.show.{run_id}.txt\"));\n+        assert!(Command::new(test_exe)\n+            .env(\"LLVM_PROFILE_FILE\", &profraw_file)\n+            .env(\"BOOST_TEST_RUN_FILTERS\", filter)\n+            .env(\"RANDOM_CTX_SEED\", \"21\")\n+            .status()\n+            .expect(\"test failed\")\n+            .success());\n+        assert!(Command::new(LLVM_PROFDATA)\n+            .arg(\"merge\")\n+            .arg(\"--sparse\")\n+            .arg(&profraw_file)\n+            .arg(\"-o\")\n+            .arg(&profdata_file)\n+            .status()\n+            .expect(\"merge failed\")\n+            .success());\n+        let cov_file = File::create(&cov_txt_path).expect(\"Failed to create coverage txt file\");\n+        assert!(Command::new(LLVM_COV)\n+            .args([\n+                \"show\",\n+                \"--show-line-counts-or-regions\",\n+                \"--show-branches=count\",\n+                \"--show-expansions\",\n+                &format!(\"--instr-profile={}\", profdata_file.display()),\n+            ])\n+            .arg(test_exe)\n+            .stdout(cov_file)\n+            .status()\n+            .expect(\"llvm-cov failed\")\n+            .success());\n+        cov_txt_path\n+    };\n+    let check_diff = |a: &Path, b: &Path| {\n+        let same = Command::new(GIT)\n+            .args([\"--no-pager\", \"diff\", \"--no-index\"])\n+            .arg(a)\n+            .arg(b)\n+            .status()\n+            .expect(\"Failed to execute diff command\")",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": null,
      "original_position": 111,
      "commit_id": "fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "original_commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "in_reply_to_id": 1966288594,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "thx, done",
      "created_at": "2025-02-24T10:58:24Z",
      "updated_at": "2025-02-24T10:58:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1967413630",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967413630"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 111,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967413737",
      "pull_request_review_id": 2636695488,
      "id": 1967413737,
      "node_id": "PRRC_kwDOABII5851RFnp",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const GIT: &str = \"git\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir boost_unittest_filter\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": 20,
      "original_position": 20,
      "commit_id": "fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "original_commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "in_reply_to_id": 1966311321,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't like the manual `\\n` handling and the manual `\\` handling. An alternative would be a string which natively contains newlines. However, I don't think https://clang.llvm.org/extra/clang-tidy/checks/performance/avoid-endl.html applies, because this isn't performance critical. Leaving as-is for now.",
      "created_at": "2025-02-24T10:58:29Z",
      "updated_at": "2025-02-24T10:58:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1967413737",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967413737"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": 16,
      "original_start_line": 16,
      "start_side": "RIGHT",
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967413984",
      "pull_request_review_id": 2636695963,
      "id": 1967413984,
      "node_id": "PRRC_kwDOABII5851RFrg",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const GIT: &str = \"git\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir boost_unittest_filter\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");\n+    exit(1)\n+}\n+\n+fn sanity_check(test_exe: &Path) {\n+    for tool in [LLVM_PROFDATA, LLVM_COV, GIT] {\n+        let output = Command::new(tool).arg(\"--help\").output();\n+        match output {\n+            Ok(output) if output.status.success() => {}\n+            _ => {\n+                exit_help(&format!(\"The tool {} is not installed\", tool));\n+            }\n+        }\n+    }\n+    if !test_exe.exists() {\n+        exit_help(&format!(\n+            \"Test executable ({}) not found\",\n+            test_exe.display()\n+        ));\n+    }\n+}\n+\n+fn main() {\n+    // Parse args\n+    let args = env::args().collect::<Vec<_>>();\n+    let build_dir = args\n+        .get(1)\n+        .unwrap_or_else(|| exit_help(\"Must set build dir\"));\n+    if build_dir == \"--help\" {\n+        exit_help(\"--help requested\")\n+    }\n+    let filter = args\n+        .get(2)\n+        // Require filter for now. In the future it could be optional and the tool could provide a\n+        // default filter.\n+        .unwrap_or_else(|| exit_help(\"Must set boost test filter\"));\n+    if args.get(3).is_some() {\n+        exit_help(\"Too many args\")\n+    }\n+\n+    let build_dir = Path::new(build_dir);\n+    let test_exe = build_dir.join(\"src/test/test_bitcoin\");\n+\n+    sanity_check(&test_exe);\n+\n+    deterministic_coverage(build_dir, &test_exe, filter);\n+}\n+\n+fn deterministic_coverage(build_dir: &Path, test_exe: &Path, filter: &str) {\n+    let profraw_file = build_dir.join(\"test_det_cov.profraw\");\n+    let profdata_file = build_dir.join(\"test_det_cov.profdata\");\n+    let run_single = |run_id: u8| {\n+        let cov_txt_path = build_dir.join(format!(\"test_det_cov.show.{run_id}.txt\"));\n+        assert!(Command::new(test_exe)\n+            .env(\"LLVM_PROFILE_FILE\", &profraw_file)\n+            .env(\"BOOST_TEST_RUN_FILTERS\", filter)\n+            .env(\"RANDOM_CTX_SEED\", \"21\")\n+            .status()\n+            .expect(\"test failed\")\n+            .success());",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": 79,
      "original_position": 79,
      "commit_id": "fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "original_commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "in_reply_to_id": 1966329661,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You are right that the use of `assert` here may be a bit wrong to sanitize an input string. However, in the context of tests (or dev-only test-only scripts), the distinction doesn't matter, as long as any failure happens. (This is also similar of how the functional tests simply do an `assert` on the return code)\r\n\r\nIn any case, if this was changed, it should be applied to almost all `unwrap`,`expect`,or `panic` as well? For example, I could imagine that `expect(\"test failed\")` could fail when the exe was missing the executable bit?\r\n\r\nLeaving as-is for now.",
      "created_at": "2025-02-24T10:58:39Z",
      "updated_at": "2025-02-24T10:58:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1967413984",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967413984"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": 73,
      "original_start_line": 73,
      "start_side": "RIGHT",
      "line": 79,
      "original_line": 79,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967414091",
      "pull_request_review_id": 2636696134,
      "id": 1967414091,
      "node_id": "PRRC_kwDOABII5851RFtL",
      "diff_hunk": "@@ -13,13 +13,31 @@ RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz\n \n To execute the tool, compilation has to be done with the build options\n `-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++'\n--DBUILD_FOR_FUZZING=ON -DCMAKE_CXX_FLAGS='-fPIC -fprofile-instr-generate\n+-DBUILD_FOR_FUZZING=ON -DCMAKE_CXX_FLAGS='-fprofile-instr-generate\n -fcoverage-mapping'`. Both llvm-profdata and llvm-cov must be installed. Also,\n the qa-assets repository must have been cloned. Finally, a fuzz target has to\n be picked before running the tool:\n \n ```\n-RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/build_dir $PWD/qa-assets/corpora-dir fuzz_target_name\n+RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/build_dir $PWD/qa-assets/fuzz_corpora fuzz_target_name\n+```\n+\n+deterministic-unittest-coverage\n+===========================\n+\n+A tool to check for non-determinism in unit-test coverage. To get the help, run:\n+\n+```\n+RUST_BACKTRACE=1 cargo run --manifest-path ./contrib/devtools/deterministic-unittest-coverage/Cargo.toml -- --help\n+```\n+\n+To execute the tool, compilation has to be done with the build options\n+`-DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++'\n+-DCMAKE_CXX_FLAGS='-fprofile-instr-generate -fcoverage-mapping'`. Both\n+llvm-profdata and llvm-cov must be installed.",
      "path": "contrib/devtools/README.md",
      "position": null,
      "original_position": 27,
      "commit_id": "fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "original_commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "in_reply_to_id": 1966332995,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thx, done",
      "created_at": "2025-02-24T10:58:44Z",
      "updated_at": "2025-02-24T10:58:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1967414091",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967414091"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": null,
      "original_start_line": 34,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967584194",
      "pull_request_review_id": 2636987838,
      "id": 1967584194,
      "node_id": "PRRC_kwDOABII5851RvPC",
      "diff_hunk": "@@ -0,0 +1,124 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+use std::env;\n+use std::fs::File;\n+use std::path::Path;\n+use std::process::{exit, Command};\n+use std::str;\n+\n+const LLVM_PROFDATA: &str = \"llvm-profdata\";\n+const LLVM_COV: &str = \"llvm-cov\";\n+const GIT: &str = \"git\";\n+\n+fn exit_help(err: &str) -> ! {\n+    eprintln!(\"Error: {}\", err);\n+    eprintln!();\n+    eprintln!(\"Usage: program ./build_dir boost_unittest_filter\");\n+    eprintln!();\n+    eprintln!(\"Refer to the devtools/README.md for more details.\");\n+    exit(1)\n+}\n+\n+fn sanity_check(test_exe: &Path) {\n+    for tool in [LLVM_PROFDATA, LLVM_COV, GIT] {\n+        let output = Command::new(tool).arg(\"--help\").output();\n+        match output {\n+            Ok(output) if output.status.success() => {}\n+            _ => {\n+                exit_help(&format!(\"The tool {} is not installed\", tool));\n+            }\n+        }\n+    }\n+    if !test_exe.exists() {\n+        exit_help(&format!(\n+            \"Test executable ({}) not found\",\n+            test_exe.display()\n+        ));\n+    }\n+}\n+\n+fn main() {\n+    // Parse args\n+    let args = env::args().collect::<Vec<_>>();\n+    let build_dir = args\n+        .get(1)\n+        .unwrap_or_else(|| exit_help(\"Must set build dir\"));\n+    if build_dir == \"--help\" {\n+        exit_help(\"--help requested\")\n+    }\n+    let filter = args\n+        .get(2)\n+        // Require filter for now. In the future it could be optional and the tool could provide a\n+        // default filter.\n+        .unwrap_or_else(|| exit_help(\"Must set boost test filter\"));\n+    if args.get(3).is_some() {\n+        exit_help(\"Too many args\")\n+    }\n+\n+    let build_dir = Path::new(build_dir);\n+    let test_exe = build_dir.join(\"src/test/test_bitcoin\");\n+\n+    sanity_check(&test_exe);\n+\n+    deterministic_coverage(build_dir, &test_exe, filter);\n+}\n+\n+fn deterministic_coverage(build_dir: &Path, test_exe: &Path, filter: &str) {\n+    let profraw_file = build_dir.join(\"test_det_cov.profraw\");\n+    let profdata_file = build_dir.join(\"test_det_cov.profdata\");\n+    let run_single = |run_id: u8| {\n+        let cov_txt_path = build_dir.join(format!(\"test_det_cov.show.{run_id}.txt\"));\n+        assert!(Command::new(test_exe)\n+            .env(\"LLVM_PROFILE_FILE\", &profraw_file)\n+            .env(\"BOOST_TEST_RUN_FILTERS\", filter)\n+            .env(\"RANDOM_CTX_SEED\", \"21\")\n+            .status()\n+            .expect(\"test failed\")\n+            .success());",
      "path": "contrib/devtools/deterministic-unittest-coverage/src/main.rs",
      "position": 79,
      "original_position": 79,
      "commit_id": "fafa592a8ad95fcb64db3d342cdc7192ff7ef2cd",
      "original_commit_id": "fafce12a4871ed66a868b460b779e794a89218eb",
      "in_reply_to_id": 1966329661,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> In any case, if this was changed, it should be applied to almost all `unwrap`,`expect`,or `panic` as well? For example, I could imagine that `expect(\"test failed\")` could fail when the exe was missing the executable bit?\r\n\r\nThe `expect()`s here are fine since we've already run `sanity_check()` which has proper `exit(1)` behavior via `exit_help()`.\r\n\r\nSo I really do think since we are passing the user-input `filter` value, we should not be triggering an `assert!`. I think for the other commands where we are using fixed inputs, asserts are more okay.",
      "created_at": "2025-02-24T12:50:33Z",
      "updated_at": "2025-02-24T12:50:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31901#discussion_r1967584194",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1967584194"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31901"
        }
      },
      "start_line": 73,
      "original_start_line": 73,
      "start_side": "RIGHT",
      "line": 79,
      "original_line": 79,
      "side": "RIGHT"
    }
  ]
}