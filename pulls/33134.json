{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33134",
    "id": 2718540711,
    "node_id": "PR_kwDOABII586iCaOn",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/33134",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/33134.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/33134.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33134",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33134/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33134/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33134/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/a53063a6d93103926509d3f95dc791140aae58c6",
    "number": 33134,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "refactor, index: Remove member variables in coinstatsindex",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This picks up a review comment from #30469 which [suggested to remove the member variables in coinstatsindex](https://github.com/bitcoin/bitcoin/pull/30469#discussion_r2219983800) and replace them with local variables where needed.\r\n\r\nThis is a pure refactor and performance should not be impacted because there is no increase in disk reads or writes.",
    "labels": [],
    "created_at": "2025-08-04T16:21:18Z",
    "updated_at": "2025-08-15T23:31:26Z",
    "closed_at": "2025-08-15T23:31:25Z",
    "mergeable_state": "unknown",
    "merged": false,
    "merge_commit_sha": "6ba19c6f44713cd34df5a12d6ce10b3d9a5167a8",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "fjahr:2025-08-csi-no-members",
      "ref": "2025-08-csi-no-members",
      "sha": "a53063a6d93103926509d3f95dc791140aae58c6",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 196253948,
        "node_id": "MDEwOlJlcG9zaXRvcnkxOTYyNTM5NDg=",
        "name": "bitcoin",
        "full_name": "fjahr/bitcoin",
        "owner": {
          "login": "fjahr",
          "id": 1322187,
          "node_id": "MDQ6VXNlcjEzMjIxODc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/fjahr",
          "html_url": "https://github.com/fjahr",
          "followers_url": "https://api.github.com/users/fjahr/followers",
          "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
          "organizations_url": "https://api.github.com/users/fjahr/orgs",
          "repos_url": "https://api.github.com/users/fjahr/repos",
          "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/fjahr/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/fjahr/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/fjahr/bitcoin",
        "archive_url": "https://api.github.com/repos/fjahr/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/fjahr/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/fjahr/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/fjahr/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/fjahr/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/fjahr/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/fjahr/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/fjahr/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/fjahr/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/fjahr/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/fjahr/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/fjahr/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/fjahr/bitcoin/events",
        "forks_url": "https://api.github.com/repos/fjahr/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/fjahr/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/fjahr/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/fjahr/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/fjahr/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/fjahr/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/fjahr/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/fjahr/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/fjahr/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/fjahr/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/fjahr/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/fjahr/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/fjahr/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/fjahr/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/fjahr/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/fjahr/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:fjahr/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/fjahr/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/fjahr/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/fjahr/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/fjahr/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/fjahr/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/fjahr/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/fjahr/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/fjahr/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/fjahr/bitcoin/hooks",
        "svn_url": "https://github.com/fjahr/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 275900,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-15T23:26:14Z",
        "created_at": "2019-07-10T18:11:06Z",
        "updated_at": "2024-07-23T22:14:45Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "643bacd124f567b59f5ad290930dc533e2f06633",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37639,
        "stargazers_count": 85037,
        "watchers_count": 85037,
        "size": 291265,
        "default_branch": "master",
        "open_issues_count": 755,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-15T23:38:33Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-08-15T23:52:11Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33134"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 68,
    "deletions": 128,
    "changed_files": 2,
    "commits": 1,
    "review_comments": 16,
    "comments": 3
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE1MzA2M2E2ZDkzMTAzOTI2NTA5ZDNmOTVkYzc5MTE0MGFhZTU4YzY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a53063a6d93103926509d3f95dc791140aae58c6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a53063a6d93103926509d3f95dc791140aae58c6",
      "tree": {
        "sha": "65d4bdbb71c82be36e3b249c1aadc0f098f571c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/65d4bdbb71c82be36e3b249c1aadc0f098f571c3"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 65d4bdbb71c82be36e3b249c1aadc0f098f571c3\nparent 83a2216f5278c1123ba740f1c8a055652e033ddd\nauthor Fabian Jahr <fjahr@protonmail.com> 1754313915 +0200\ncommitter Fabian Jahr <fjahr@protonmail.com> 1754318083 +0200\n\nrefactor, index: Remove member variables in coinstatsindex\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAmiQxQQVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNmGUP/0regcRwWd7SfF/hyi5YmdcCNUp5\nVFKEcBB8Sj0Be75PDhPwgsXeNVwOPcwqixTjOw5PcS2y5LjrGrCxeG+a+zX7pP5P\nqrO1pyBLIQ+trsogcYpMcemZVJDjVwcZhc+Nux71p7sEtMpAP/os1cX8QuY3PEYU\n2VxXcR04OZtXTv8htHm/r2c1BLmL5CLGeYxbC0M/qGyBM8ALhpTPgUQGoejZ+L1c\naPuk+UN6gvKf3389JRVADNhyxWjOnj2vn43ZrBpVerZt3k0fz8OiepBZEd2ym8ez\nKf588d/yGSN9O/kZm4LHrZTlQ4dUDiWIPAnkYrEFCduTe0valQWMLP61MaCz8+fO\nBAzCxeUTEM00IBhD77kcvLaCXQYs3wa6QaBPdv9oqwkc14kiqL2yQ0uv08vVF1h+\nK9EBfeW0EVnSoVHZVoezRA9QU7DbcI1DRGQbDBfaTrXcPrUy9abVpOWXV9T0tkHF\np+QqS5goTifr1MajUBNqAC25QUPBmYHktrZsfK+DDjDAycpo6WbheTb2TB/n2h9f\nz3C/68uSMH3mmhV+TCUJjNQXm3UC0YOUHdTg6b0INjFxDFNqT/GFKqlXka0q+Drl\noKBPm13EpBnzk4l0vZcuonUBmnQVtyR6N2lQ4HixWg4NIgBN9M3Up/mssmyaCQuk\nj13eSJnJ40FVCLS8\n=3TJu\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/83a2216f5278c1123ba740f1c8a055652e033ddd",
          "sha": "83a2216f5278c1123ba740f1c8a055652e033ddd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/83a2216f5278c1123ba740f1c8a055652e033ddd"
        }
      ],
      "message": "refactor, index: Remove member variables in coinstatsindex",
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2025-08-04T14:34:43Z"
      },
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2025-08-04T13:25:15Z"
      },
      "sha": "a53063a6d93103926509d3f95dc791140aae58c6"
    },
    {
      "event": "commented",
      "id": 3151428334,
      "node_id": "IC_kwDOABII58671vru",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3151428334",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-04T16:21:23Z",
      "updated_at": "2025-08-05T02:16:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/33134.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [jonatack](https://github.com/bitcoin/bitcoin/pull/33134#pullrequestreview-3085116698) |\n| Concept ACK | [mzumsande](https://github.com/bitcoin/bitcoin/pull/33134#pullrequestreview-3085407112), [l0rinc](https://github.com/bitcoin/bitcoin/pull/33134#pullrequestreview-3085337044), [Sammie05](https://github.com/bitcoin/bitcoin/pull/33134#issuecomment-3153027156) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30469](https://github.com/bitcoin/bitcoin/pull/30469) (index: Fix coinstats overflow by fjahr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33134#issuecomment-3151428334",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33134"
    },
    {
      "event": "reviewed",
      "id": 3085116698,
      "node_id": "PRR_kwDOABII58634yUa",
      "url": null,
      "actor": null,
      "commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-04T17:14:45Z",
      "author_association": "MEMBER",
      "body": "Review ACK a53063a6d93103926509d3f95dc791140aae58c6\r\n\r\nNice cleanup.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33134#pullrequestreview-3085116698",
      "submitted_at": "2025-08-04T17:14:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33134"
    },
    {
      "event": "reviewed",
      "id": 3085407112,
      "node_id": "PRR_kwDOABII586355OI",
      "url": null,
      "actor": null,
      "commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-04T18:57:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33134#pullrequestreview-3085407112",
      "submitted_at": "2025-08-04T18:57:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33134"
    },
    {
      "event": "reviewed",
      "id": 3085424612,
      "node_id": "PRR_kwDOABII586359fk",
      "url": null,
      "actor": null,
      "commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-04T19:32:40Z",
      "author_association": "MEMBER",
      "body": "Based on #30469 code; I would only remove the per-block values from the class and leave the `total_*` ones there. Mainly because these values effectively cache the last state, which will lets us remove the need for reading the previous record from disk that we do on every connected block (reading from disk is slower than caching a few accumulators at the class level).",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33134#pullrequestreview-3085424612",
      "submitted_at": "2025-08-04T19:05:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33134"
    },
    {
      "event": "reviewed",
      "id": 3085337044,
      "node_id": "PRR_kwDOABII58635oHU",
      "url": null,
      "actor": null,
      "commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-04T20:16:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nLeft a few notes, I think we could split this into smaller, more focused changes, explaining the motivation and decisions in the commit messages and since we're already cleaning up, there are a few more steps that we could do.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33134#pullrequestreview-3085337044",
      "submitted_at": "2025-08-04T20:16:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33134"
    },
    {
      "event": "commented",
      "id": 3153027156,
      "node_id": "IC_kwDOABII586772BU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3153027156",
      "actor": {
        "login": "Sammie05",
        "id": 123121190,
        "node_id": "U_kgDOB1auJg",
        "avatar_url": "https://avatars.githubusercontent.com/u/123121190?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sammie05",
        "html_url": "https://github.com/Sammie05",
        "followers_url": "https://api.github.com/users/Sammie05/followers",
        "following_url": "https://api.github.com/users/Sammie05/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sammie05/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sammie05/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sammie05/subscriptions",
        "organizations_url": "https://api.github.com/users/Sammie05/orgs",
        "repos_url": "https://api.github.com/users/Sammie05/repos",
        "events_url": "https://api.github.com/users/Sammie05/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sammie05/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-05T02:08:51Z",
      "updated_at": "2025-08-05T02:08:51Z",
      "author_association": "NONE",
      "body": "Concept ACK, I agree with the goal of removing unnecessary class members to simplify the code.\r\n\r\nBut consider splitting the commit as suggested by @l0rinc to isolate the risky accounting changes.\r\n\r\nReusing DBVal as a container simplifies the logic. Good improvement.\r\n\r\nPlease update the docstring of the method (still says “initialize internal state”), which might no longer be accurate.\r\n\r\n",
      "user": {
        "login": "Sammie05",
        "id": 123121190,
        "node_id": "U_kgDOB1auJg",
        "avatar_url": "https://avatars.githubusercontent.com/u/123121190?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sammie05",
        "html_url": "https://github.com/Sammie05",
        "followers_url": "https://api.github.com/users/Sammie05/followers",
        "following_url": "https://api.github.com/users/Sammie05/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sammie05/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sammie05/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sammie05/subscriptions",
        "organizations_url": "https://api.github.com/users/Sammie05/orgs",
        "repos_url": "https://api.github.com/users/Sammie05/repos",
        "events_url": "https://api.github.com/users/Sammie05/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sammie05/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33134#issuecomment-3153027156",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33134"
    },
    {
      "event": "mentioned",
      "id": 18981527793,
      "node_id": "MEE_lADOABII587EGlqHzwAAAARrYyDx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18981527793",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-05T02:08:53Z"
    },
    {
      "event": "subscribed",
      "id": 18981527813,
      "node_id": "SE_lADOABII587EGlqHzwAAAARrYyEF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18981527813",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-05T02:08:53Z"
    },
    {
      "event": "commented",
      "id": 3192998618,
      "node_id": "IC_kwDOABII586-UUra",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3192998618",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-15T23:31:25Z",
      "updated_at": "2025-08-15T23:31:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "I addressed @l0rinc 's feedback but pulled the changes here into #30469 as requested by reviewers there, so closing here.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33134#issuecomment-3192998618",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33134"
    },
    {
      "event": "closed",
      "id": 19183344267,
      "node_id": "CE_lADOABII587EGlqHzwAAAAR3apqL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19183344267",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-15T23:31:25Z"
    },
    {
      "event": "mentioned",
      "id": 19183344332,
      "node_id": "MEE_lADOABII587EGlqHzwAAAAR3aprM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19183344332",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-15T23:31:27Z"
    },
    {
      "event": "subscribed",
      "id": 19183344339,
      "node_id": "SE_lADOABII587EGlqHzwAAAAR3aprT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19183344339",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-15T23:31:27Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2252285727",
      "pull_request_review_id": 3085337044,
      "id": 2252285727,
      "node_id": "PRRC_kwDOABII586GPycf",
      "diff_hunk": "@@ -346,19 +374,6 @@ bool CoinStatsIndex::CustomInit(const std::optional<interfaces::BlockRef>& block\n                       GetName());\n             return false;\n         }\n-\n-        m_transaction_output_count = entry.transaction_output_count;\n-        m_bogo_size = entry.bogo_size;\n-        m_total_amount = entry.total_amount;\n-        m_total_subsidy = entry.total_subsidy;\n-        m_total_unspendable_amount = entry.total_unspendable_amount;\n-        m_total_prevout_spent_amount = entry.total_prevout_spent_amount;\n-        m_total_new_outputs_ex_coinbase_amount = entry.total_new_outputs_ex_coinbase_amount;\n-        m_total_coinbase_amount = entry.total_coinbase_amount;\n-        m_total_unspendables_genesis_block = entry.total_unspendables_genesis_block;\n-        m_total_unspendables_bip30 = entry.total_unspendables_bip30;\n-        m_total_unspendables_scripts = entry.total_unspendables_scripts;\n-        m_total_unspendables_unclaimed_rewards = entry.total_unspendables_unclaimed_rewards;",
      "path": "src/index/coinstatsindex.cpp",
      "position": 167,
      "original_position": 167,
      "commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "original_commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is it still an *init* now that it just updates `m_muhash`? The method doc claims that: \"/// Initialize internal state from the database and block index\" - is that still accurate?\r\n\r\nSince this change is not strictly inlining of fields anymore, please consider doing it in a separate commit where the commit message gives more context.",
      "created_at": "2025-08-04T18:28:44Z",
      "updated_at": "2025-08-04T20:16:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33134#discussion_r2252285727",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2252285727"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33134"
        }
      },
      "start_line": 350,
      "original_start_line": 350,
      "start_side": "LEFT",
      "line": 361,
      "original_line": 361,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2252318499",
      "pull_request_review_id": 3085337044,
      "id": 2252318499,
      "node_id": "PRRC_kwDOABII586GP6cj",
      "diff_hunk": "@@ -136,15 +146,33 @@ bool CoinStatsIndex::CustomAppend(const interfaces::BlockInfo& block)\n             }\n         }\n \n+        transaction_output_count = read_out.second.transaction_output_count;\n+        bogo_size = read_out.second.bogo_size;\n+        total_amount = read_out.second.total_amount;\n+        total_subsidy = read_out.second.total_subsidy;\n+        total_unspendable_amount = read_out.second.total_unspendable_amount;\n+        total_prevout_spent_amount = read_out.second.total_prevout_spent_amount;\n+        total_new_outputs_ex_coinbase_amount = read_out.second.total_new_outputs_ex_coinbase_amount;\n+        total_coinbase_amount = read_out.second.total_coinbase_amount;\n+        total_unspendables_genesis_block = read_out.second.total_unspendables_genesis_block;\n+        total_unspendables_bip30 = read_out.second.total_unspendables_bip30;\n+        total_unspendables_scripts = read_out.second.total_unspendables_scripts;\n+        total_unspendables_unclaimed_rewards = read_out.second.total_unspendables_unclaimed_rewards;\n+    }\n+\n+    const CAmount block_subsidy{GetBlockSubsidy(block.height, Params().GetConsensus())};\n+    total_subsidy += block_subsidy;",
      "path": "src/index/coinstatsindex.cpp",
      "position": 40,
      "original_position": 40,
      "commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "original_commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "What's the reason for doing these calculations in the middle of the method - is it to avoid calculating the subsidy when there's a read error?\r\nI wouldn't optimize for that usecase: leaving the `block_subsidy` declaration at the beginning and only updating `total_subsidy` at the very end would avoid repeating the `block.height > 0` condition and the diff would also be smaller.\r\n\r\nAlso, since we're reading and writing a `DBVal` anyway, could use that to hold the state instead of keeping track of the individual primitives and copying back and forth?\r\nI mean something like:\r\n```diff\r\ndiff --git a/src/index/coinstatsindex.cpp b/src/index/coinstatsindex.cpp\r\n--- a/src/index/coinstatsindex.cpp\t(revision a53063a6d93103926509d3f95dc791140aae58c6)\r\n+++ b/src/index/coinstatsindex.cpp\t(date 1754333742030)\r\n@@ -114,56 +114,27 @@\r\n \r\n bool CoinStatsIndex::CustomAppend(const interfaces::BlockInfo& block)\r\n {\r\n-    uint64_t transaction_output_count{0};\r\n-    uint64_t bogo_size{0};\r\n-    CAmount total_amount{0};\r\n-    CAmount total_subsidy{0};\r\n-    CAmount total_unspendable_amount{0};\r\n-    CAmount total_prevout_spent_amount{0};\r\n-    CAmount total_new_outputs_ex_coinbase_amount{0};\r\n-    CAmount total_coinbase_amount{0};\r\n-    CAmount total_unspendables_genesis_block{0};\r\n-    CAmount total_unspendables_bip30{0};\r\n-    CAmount total_unspendables_scripts{0};\r\n-    CAmount total_unspendables_unclaimed_rewards{0};\r\n+    const CAmount block_subsidy{GetBlockSubsidy(block.height, Params().GetConsensus())};\r\n+    std::pair<uint256, DBVal> val{};\r\n \r\n-    // Ignore genesis block\r\n     if (block.height > 0) {\r\n-        std::pair<uint256, DBVal> read_out;\r\n-        if (!m_db->Read(DBHeightKey(block.height - 1), read_out)) {\r\n+        if (!m_db->Read(DBHeightKey(block.height - 1), val)) {\r\n             return false;\r\n         }\r\n \r\n         uint256 expected_block_hash{*Assert(block.prev_hash)};\r\n-        if (read_out.first != expected_block_hash) {\r\n+        if (val.first != expected_block_hash) {\r\n             LogWarning(\"previous block header belongs to unexpected block %s; expected %s\",\r\n-                      read_out.first.ToString(), expected_block_hash.ToString());\r\n+                      val.first.ToString(), expected_block_hash.ToString());\r\n \r\n-            if (!m_db->Read(DBHashKey(expected_block_hash), read_out)) {\r\n+            if (!m_db->Read(DBHashKey(expected_block_hash), val)) {\r\n                 LogError(\"previous block header not found; expected %s\",\r\n                           expected_block_hash.ToString());\r\n                 return false;\r\n             }\r\n         }\r\n \r\n-        transaction_output_count = read_out.second.transaction_output_count;\r\n-        bogo_size = read_out.second.bogo_size;\r\n-        total_amount = read_out.second.total_amount;\r\n-        total_subsidy = read_out.second.total_subsidy;\r\n-        total_unspendable_amount = read_out.second.total_unspendable_amount;\r\n-        total_prevout_spent_amount = read_out.second.total_prevout_spent_amount;\r\n-        total_new_outputs_ex_coinbase_amount = read_out.second.total_new_outputs_ex_coinbase_amount;\r\n-        total_coinbase_amount = read_out.second.total_coinbase_amount;\r\n-        total_unspendables_genesis_block = read_out.second.total_unspendables_genesis_block;\r\n-        total_unspendables_bip30 = read_out.second.total_unspendables_bip30;\r\n-        total_unspendables_scripts = read_out.second.total_unspendables_scripts;\r\n-        total_unspendables_unclaimed_rewards = read_out.second.total_unspendables_unclaimed_rewards;\r\n-    }\r\n-\r\n-    const CAmount block_subsidy{GetBlockSubsidy(block.height, Params().GetConsensus())};\r\n-    total_subsidy += block_subsidy;\r\n-\r\n-    if (block.height > 0) {\r\n         // Add the new utxos created from the block\r\n         assert(block.data);\r\n         for (size_t i = 0; i < block.data->vtx.size(); ++i) {\r\n@@ -171,8 +142,8 @@\r\n \r\n             // Skip duplicate txid coinbase transactions (BIP30).\r\n             if (IsBIP30Unspendable(block.hash, block.height) && tx->IsCoinBase()) {\r\n-                total_unspendable_amount += block_subsidy;\r\n-                total_unspendables_bip30 += block_subsidy;\r\n+                val.second.total_unspendable_amount += block_subsidy;\r\n+                val.second.total_unspendables_bip30 += block_subsidy;\r\n                 continue;\r\n             }\r\n \r\n@@ -183,22 +154,22 @@\r\n \r\n                 // Skip unspendable coins\r\n                 if (coin.out.scriptPubKey.IsUnspendable()) {\r\n-                    total_unspendable_amount += coin.out.nValue;\r\n-                    total_unspendables_scripts += coin.out.nValue;\r\n+                    val.second.total_unspendable_amount += coin.out.nValue;\r\n+                    val.second.total_unspendables_scripts += coin.out.nValue;\r\n                     continue;\r\n                 }\r\n \r\n                 ApplyCoinHash(m_muhash, outpoint, coin);\r\n \r\n                 if (tx->IsCoinBase()) {\r\n-                    total_coinbase_amount += coin.out.nValue;\r\n+                    val.second.total_coinbase_amount += coin.out.nValue;\r\n                 } else {\r\n-                    total_new_outputs_ex_coinbase_amount += coin.out.nValue;\r\n+                    val.second.total_new_outputs_ex_coinbase_amount += coin.out.nValue;\r\n                 }\r\n \r\n-                ++transaction_output_count;\r\n-                total_amount += coin.out.nValue;\r\n-                bogo_size += GetBogoSize(coin.out.scriptPubKey);\r\n+                ++val.second.transaction_output_count;\r\n+                val.second.total_amount += coin.out.nValue;\r\n+                val.second.bogo_size += GetBogoSize(coin.out.scriptPubKey);\r\n             }\r\n \r\n             // The coinbase tx has no undo data since no former output is spent\r\n@@ -211,50 +182,39 @@\r\n \r\n                     RemoveCoinHash(m_muhash, outpoint, coin);\r\n \r\n-                    total_prevout_spent_amount += coin.out.nValue;\r\n+                    val.second.total_prevout_spent_amount += coin.out.nValue;\r\n \r\n-                    --transaction_output_count;\r\n-                    total_amount -= coin.out.nValue;\r\n-                    bogo_size -= GetBogoSize(coin.out.scriptPubKey);\r\n+                    --val.second.transaction_output_count;\r\n+                    val.second.total_amount -= coin.out.nValue;\r\n+                    val.second.bogo_size -= GetBogoSize(coin.out.scriptPubKey);\r\n                 }\r\n             }\r\n         }\r\n     } else {\r\n         // genesis block\r\n-        total_unspendable_amount += block_subsidy;\r\n-        total_unspendables_genesis_block += block_subsidy;\r\n+        val.second.total_unspendable_amount += block_subsidy;\r\n+        val.second.total_unspendables_genesis_block += block_subsidy;\r\n     }\r\n+\r\n+    val.second.total_subsidy += block_subsidy;\r\n \r\n     // If spent prevouts + block subsidy are still a higher amount than\r\n     // new outputs + coinbase + current unspendable amount this means\r\n     // the miner did not claim the full block reward. Unclaimed block\r\n     // rewards are also unspendable.\r\n-    const CAmount unclaimed_rewards{(total_prevout_spent_amount + total_subsidy) - (total_new_outputs_ex_coinbase_amount + total_coinbase_amount + total_unspendable_amount)};\r\n-    total_unspendable_amount += unclaimed_rewards;\r\n-    total_unspendables_unclaimed_rewards += unclaimed_rewards;\r\n+    const CAmount unclaimed_rewards{(val.second.total_prevout_spent_amount + val.second.total_subsidy) - (val.second.total_new_outputs_ex_coinbase_amount + val.second.total_coinbase_amount + val.second.total_unspendable_amount)};\r\n+    val.second.total_unspendable_amount += unclaimed_rewards;\r\n+    val.second.total_unspendables_unclaimed_rewards += unclaimed_rewards;\r\n \r\n-    std::pair<uint256, DBVal> value;\r\n-    value.first = block.hash;\r\n-    value.second.transaction_output_count = transaction_output_count;\r\n-    value.second.bogo_size = bogo_size;\r\n-    value.second.total_amount = total_amount;\r\n-    value.second.total_subsidy = total_subsidy;\r\n-    value.second.total_unspendable_amount = total_unspendable_amount;\r\n-    value.second.total_prevout_spent_amount = total_prevout_spent_amount;\r\n-    value.second.total_new_outputs_ex_coinbase_amount = total_new_outputs_ex_coinbase_amount;\r\n-    value.second.total_coinbase_amount = total_coinbase_amount;\r\n-    value.second.total_unspendables_genesis_block = total_unspendables_genesis_block;\r\n-    value.second.total_unspendables_bip30 = total_unspendables_bip30;\r\n-    value.second.total_unspendables_scripts = total_unspendables_scripts;\r\n-    value.second.total_unspendables_unclaimed_rewards = total_unspendables_unclaimed_rewards;\r\n+    val.first = block.hash;\r\n \r\n     uint256 out;\r\n     m_muhash.Finalize(out);\r\n-    value.second.muhash = out;\r\n+    val.second.muhash = out;\r\n \r\n     // Intentionally do not update DB_MUHASH here so it stays in sync with\r\n     // DB_BEST_BLOCK, and the index is not corrupted if there is an unclean shutdown.\r\n-    return m_db->Write(DBHeightKey(block.height), value);\r\n+    return m_db->Write(DBHeightKey(block.height), val);\r\n }\r\n \r\n [[nodiscard]] static bool CopyHeightIndexToHashIndex(CDBIterator& db_it, CDBBatch& batch,\r\n```\r\n\r\n(`val.second` can of course be extracted if you find it harder to read)\r\n\r\nAlso note that `return m_db->Write(DBHeightKey(block.height), val);` is always `true` currently, it's not actually returning `false` on error, see: https://github.com/bitcoin/bitcoin/pull/33042)",
      "created_at": "2025-08-04T18:47:16Z",
      "updated_at": "2025-08-04T20:16:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33134#discussion_r2252318499",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2252318499"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33134"
        }
      },
      "start_line": 163,
      "original_start_line": 163,
      "start_side": "RIGHT",
      "line": 164,
      "original_line": 164,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2252380027",
      "pull_request_review_id": 3085337044,
      "id": 2252380027,
      "node_id": "PRRC_kwDOABII586GQJd7",
      "diff_hunk": "@@ -446,39 +427,10 @@ bool CoinStatsIndex::ReverseBlock(const interfaces::BlockInfo& block)\n             for (size_t j = 0; j < tx_undo.vprevout.size(); ++j) {\n                 Coin coin{tx_undo.vprevout[j]};\n                 COutPoint outpoint{tx->vin[j].prevout.hash, tx->vin[j].prevout.n};\n-\n                 ApplyCoinHash(m_muhash, outpoint, coin);\n-\n-                m_total_prevout_spent_amount -= coin.out.nValue;\n-\n-                m_transaction_output_count++;\n-                m_total_amount += coin.out.nValue;\n-                m_bogo_size += GetBogoSize(coin.out.scriptPubKey);\n             }\n         }\n     }\n \n-    const CAmount unclaimed_rewards{(m_total_new_outputs_ex_coinbase_amount + m_total_coinbase_amount + m_total_unspendable_amount) - (m_total_prevout_spent_amount + m_total_subsidy)};",
      "path": "src/index/coinstatsindex.cpp",
      "position": 255,
      "original_position": 255,
      "commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "original_commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "it's not immediately obvious how these changes are related to inlining of fields (and why we don't need to keep the accounting at all) - could you please extract it to a separate commit which explains what's happening here?\r\nBundling low-risk changes in the same commit as high-risk changes makes review harder.",
      "created_at": "2025-08-04T19:16:43Z",
      "updated_at": "2025-08-04T20:16:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33134#discussion_r2252380027",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2252380027"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33134"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 461,
      "original_line": 461,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2252400005",
      "pull_request_review_id": 3085337044,
      "id": 2252400005,
      "node_id": "PRRC_kwDOABII586GQOWF",
      "diff_hunk": "@@ -384,59 +399,25 @@ interfaces::Chain::NotifyOptions CoinStatsIndex::CustomOptions()\n // Reverse a single block as part of a reorg\n bool CoinStatsIndex::ReverseBlock(const interfaces::BlockInfo& block)",
      "path": "src/index/coinstatsindex.cpp",
      "position": 173,
      "original_position": 173,
      "commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "original_commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I know you didn't write this, but maybe this is a good time to clarify that we're not strictly changing the order of something (i.e. [reversing](https://www.merriam-webster.com/dictionary/reverse)), but [undoing](https://github.com/bitcoin/bitcoin/blob/master/src/index/coinstatsindex.cpp#L413)/[rewinding](https://github.com/bitcoin/bitcoin/blob/master/src/index/base.h#L125)/[reverting](https://github.com/bitcoin/bitcoin/blob/master/src/rpc/blockchain.cpp#L3135)/rolling back.",
      "created_at": "2025-08-04T19:28:27Z",
      "updated_at": "2025-08-04T20:16:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33134#discussion_r2252400005",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2252400005"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33134"
        }
      },
      "start_line": 399,
      "original_start_line": 399,
      "start_side": "RIGHT",
      "line": 400,
      "original_line": 400,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2252407121",
      "pull_request_review_id": 3085337044,
      "id": 2252407121,
      "node_id": "PRRC_kwDOABII586GQQFR",
      "diff_hunk": "@@ -446,39 +427,10 @@ bool CoinStatsIndex::ReverseBlock(const interfaces::BlockInfo& block)\n             for (size_t j = 0; j < tx_undo.vprevout.size(); ++j) {\n                 Coin coin{tx_undo.vprevout[j]};\n                 COutPoint outpoint{tx->vin[j].prevout.hash, tx->vin[j].prevout.n};\n-\n                 ApplyCoinHash(m_muhash, outpoint, coin);\n-\n-                m_total_prevout_spent_amount -= coin.out.nValue;\n-\n-                m_transaction_output_count++;\n-                m_total_amount += coin.out.nValue;\n-                m_bogo_size += GetBogoSize(coin.out.scriptPubKey);\n             }\n         }\n     }\n \n-    const CAmount unclaimed_rewards{(m_total_new_outputs_ex_coinbase_amount + m_total_coinbase_amount + m_total_unspendable_amount) - (m_total_prevout_spent_amount + m_total_subsidy)};\n-    m_total_unspendable_amount -= unclaimed_rewards;\n-    m_total_unspendables_unclaimed_rewards -= unclaimed_rewards;\n-\n-    // Check that the rolled back internal values are consistent with the DB read out\n-    uint256 out;\n-    m_muhash.Finalize(out);\n-    Assert(read_out.second.muhash == out);\n-\n-    Assert(m_transaction_output_count == read_out.second.transaction_output_count);\n-    Assert(m_total_amount == read_out.second.total_amount);\n-    Assert(m_bogo_size == read_out.second.bogo_size);\n-    Assert(m_total_subsidy == read_out.second.total_subsidy);\n-    Assert(m_total_unspendable_amount == read_out.second.total_unspendable_amount);\n-    Assert(m_total_prevout_spent_amount == read_out.second.total_prevout_spent_amount);\n-    Assert(m_total_new_outputs_ex_coinbase_amount == read_out.second.total_new_outputs_ex_coinbase_amount);\n-    Assert(m_total_coinbase_amount == read_out.second.total_coinbase_amount);\n-    Assert(m_total_unspendables_genesis_block == read_out.second.total_unspendables_genesis_block);\n-    Assert(m_total_unspendables_bip30 == read_out.second.total_unspendables_bip30);\n-    Assert(m_total_unspendables_scripts == read_out.second.total_unspendables_scripts);\n-    Assert(m_total_unspendables_unclaimed_rewards == read_out.second.total_unspendables_unclaimed_rewards);\n-\n     return true;",
      "path": "src/index/coinstatsindex.cpp",
      "position": 277,
      "original_position": 277,
      "commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "original_commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "After the refactor every path returns `true`, the function can now be `void`.",
      "created_at": "2025-08-04T19:31:46Z",
      "updated_at": "2025-08-04T20:16:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33134#discussion_r2252407121",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2252407121"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33134"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 435,
      "original_line": 435,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2252428121",
      "pull_request_review_id": 3085337044,
      "id": 2252428121,
      "node_id": "PRRC_kwDOABII586GQVNZ",
      "diff_hunk": "@@ -384,59 +399,25 @@ interfaces::Chain::NotifyOptions CoinStatsIndex::CustomOptions()\n // Reverse a single block as part of a reorg\n bool CoinStatsIndex::ReverseBlock(const interfaces::BlockInfo& block)\n {\n-    std::pair<uint256, DBVal> read_out;\n-\n-    const CAmount block_subsidy{GetBlockSubsidy(block.height, Params().GetConsensus())};\n-    m_total_subsidy -= block_subsidy;\n-\n-    // Ignore genesis block\n-    if (block.height > 0) {\n-        if (!m_db->Read(DBHeightKey(block.height - 1), read_out)) {\n-            return false;\n-        }\n-\n-        uint256 expected_block_hash{*block.prev_hash};\n-        if (read_out.first != expected_block_hash) {\n-            LogWarning(\"previous block header belongs to unexpected block %s; expected %s\",\n-                      read_out.first.ToString(), expected_block_hash.ToString());\n-\n-            if (!m_db->Read(DBHashKey(expected_block_hash), read_out)) {\n-                LogError(\"previous block header not found; expected %s\",\n-                          expected_block_hash.ToString());\n-                return false;\n-            }\n-        }\n-    }\n-\n-    // Remove the new UTXOs that were created from the block\n+    // Roll back muhash by removing the new UTXOs that were created by the\n+    // block and reapplying the old UTXOs that were spent by the block\n     assert(block.data);\n     assert(block.undo_data);\n     for (size_t i = 0; i < block.data->vtx.size(); ++i) {\n         const auto& tx{block.data->vtx.at(i)};\n \n+        if (IsBIP30Unspendable(block.hash, block.height) && tx->IsCoinBase()) {",
      "path": "src/index/coinstatsindex.cpp",
      "position": 207,
      "original_position": 207,
      "commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "original_commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Please consider extracting the repeated coinbase check (since it's not just a trivial getter), which would enable short-circuiting the other non-trivial-and-rare BIP30 check:\r\n```suggestion\r\n        const bool is_coinbase{tx->IsCoinBase()};\r\n        if (is_coinbase && IsBIP30Unspendable(block.hash, block.height)) {\r\n```",
      "created_at": "2025-08-04T19:44:11Z",
      "updated_at": "2025-08-04T20:16:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33134#discussion_r2252428121",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2252428121"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33134"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 409,
      "original_line": 409,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2252430795",
      "pull_request_review_id": 3085337044,
      "id": 2252430795,
      "node_id": "PRRC_kwDOABII586GQV3L",
      "diff_hunk": "@@ -384,59 +399,25 @@ interfaces::Chain::NotifyOptions CoinStatsIndex::CustomOptions()\n // Reverse a single block as part of a reorg\n bool CoinStatsIndex::ReverseBlock(const interfaces::BlockInfo& block)\n {\n-    std::pair<uint256, DBVal> read_out;\n-\n-    const CAmount block_subsidy{GetBlockSubsidy(block.height, Params().GetConsensus())};\n-    m_total_subsidy -= block_subsidy;\n-\n-    // Ignore genesis block\n-    if (block.height > 0) {\n-        if (!m_db->Read(DBHeightKey(block.height - 1), read_out)) {\n-            return false;\n-        }\n-\n-        uint256 expected_block_hash{*block.prev_hash};\n-        if (read_out.first != expected_block_hash) {\n-            LogWarning(\"previous block header belongs to unexpected block %s; expected %s\",\n-                      read_out.first.ToString(), expected_block_hash.ToString());\n-\n-            if (!m_db->Read(DBHashKey(expected_block_hash), read_out)) {\n-                LogError(\"previous block header not found; expected %s\",\n-                          expected_block_hash.ToString());\n-                return false;\n-            }\n-        }\n-    }\n-\n-    // Remove the new UTXOs that were created from the block\n+    // Roll back muhash by removing the new UTXOs that were created by the\n+    // block and reapplying the old UTXOs that were spent by the block\n     assert(block.data);\n     assert(block.undo_data);\n     for (size_t i = 0; i < block.data->vtx.size(); ++i) {\n         const auto& tx{block.data->vtx.at(i)};\n \n+        if (IsBIP30Unspendable(block.hash, block.height) && tx->IsCoinBase()) {\n+            continue;\n+        }\n+\n         for (uint32_t j = 0; j < tx->vout.size(); ++j) {\n             const CTxOut& out{tx->vout[j]};\n             COutPoint outpoint{tx->GetHash(), j};\n             Coin coin{out, block.height, tx->IsCoinBase()};",
      "path": "src/index/coinstatsindex.cpp",
      "position": 214,
      "original_position": 214,
      "commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "original_commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: these can also be a `const` now:\r\n```C++\r\nconst COutPoint outpoint{tx->GetHash(), j};\r\nconst Coin coin{out, block.height, is_coinbase};\r\n```",
      "created_at": "2025-08-04T19:45:46Z",
      "updated_at": "2025-08-04T20:16:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33134#discussion_r2252430795",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2252430795"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33134"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 416,
      "original_line": 416,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2252451393",
      "pull_request_review_id": 3085337044,
      "id": 2252451393,
      "node_id": "PRRC_kwDOABII586GQa5B",
      "diff_hunk": "@@ -384,59 +399,25 @@ interfaces::Chain::NotifyOptions CoinStatsIndex::CustomOptions()\n // Reverse a single block as part of a reorg\n bool CoinStatsIndex::ReverseBlock(const interfaces::BlockInfo& block)\n {\n-    std::pair<uint256, DBVal> read_out;\n-\n-    const CAmount block_subsidy{GetBlockSubsidy(block.height, Params().GetConsensus())};\n-    m_total_subsidy -= block_subsidy;\n-\n-    // Ignore genesis block\n-    if (block.height > 0) {\n-        if (!m_db->Read(DBHeightKey(block.height - 1), read_out)) {\n-            return false;\n-        }\n-\n-        uint256 expected_block_hash{*block.prev_hash};\n-        if (read_out.first != expected_block_hash) {\n-            LogWarning(\"previous block header belongs to unexpected block %s; expected %s\",\n-                      read_out.first.ToString(), expected_block_hash.ToString());\n-\n-            if (!m_db->Read(DBHashKey(expected_block_hash), read_out)) {\n-                LogError(\"previous block header not found; expected %s\",\n-                          expected_block_hash.ToString());\n-                return false;\n-            }\n-        }\n-    }\n-\n-    // Remove the new UTXOs that were created from the block\n+    // Roll back muhash by removing the new UTXOs that were created by the\n+    // block and reapplying the old UTXOs that were spent by the block\n     assert(block.data);\n     assert(block.undo_data);\n     for (size_t i = 0; i < block.data->vtx.size(); ++i) {\n         const auto& tx{block.data->vtx.at(i)};\n \n+        if (IsBIP30Unspendable(block.hash, block.height) && tx->IsCoinBase()) {\n+            continue;\n+        }\n+\n         for (uint32_t j = 0; j < tx->vout.size(); ++j) {\n             const CTxOut& out{tx->vout[j]};\n             COutPoint outpoint{tx->GetHash(), j};\n             Coin coin{out, block.height, tx->IsCoinBase()};\n \n-            // Skip unspendable coins\n-            if (coin.out.scriptPubKey.IsUnspendable()) {\n-                m_total_unspendable_amount -= coin.out.nValue;\n-                m_total_unspendables_scripts -= coin.out.nValue;\n-                continue;\n+            if (!coin.out.scriptPubKey.IsUnspendable()) {\n+                RemoveCoinHash(m_muhash, outpoint, coin);\n             }\n-\n-            RemoveCoinHash(m_muhash, outpoint, coin);\n-\n-            if (tx->IsCoinBase()) {\n-                m_total_coinbase_amount -= coin.out.nValue;\n-            } else {\n-                m_total_new_outputs_ex_coinbase_amount -= coin.out.nValue;\n-            }\n-\n-            --m_transaction_output_count;\n-            m_total_amount -= coin.out.nValue;\n-            m_bogo_size -= GetBogoSize(coin.out.scriptPubKey);\n         }\n \n         // The coinbase tx has no undo data since no former output is spent",
      "path": "src/index/coinstatsindex.cpp",
      "position": 238,
      "original_position": 238,
      "commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "original_commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Seems to me we don't actually need the whole coin anymore, only its `vprevout`.\r\nAnd is there a particular reason for copying the outpoint via `COutPoint outpoint{tx->vin[j].prevout.hash, tx->vin[j].prevout.n};` instead of just `tx_undo.vprevout[j]`?\r\nAnd a few lines above we used `continue` to avoid extra indentation, maybe we can apply that here as well:\r\n```C++\r\nif (is_coinbase) continue;\r\n\r\nconst auto& vprevout{block.undo_data->vtxundo.at(i - 1).vprevout};\r\nfor (size_t j{0}; j < vprevout.size(); ++j) {\r\n    ApplyCoinHash(m_muhash, tx->vin[j].prevout, vprevout[j]);\r\n}\r\n```",
      "created_at": "2025-08-04T19:57:47Z",
      "updated_at": "2025-08-04T20:16:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33134#discussion_r2252451393",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2252451393"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33134"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 423,
      "original_line": 423,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280023030",
      "pull_request_review_id": 3125347234,
      "id": 2280023030,
      "node_id": "PRRC_kwDOABII586H5mP2",
      "diff_hunk": "@@ -384,59 +399,25 @@ interfaces::Chain::NotifyOptions CoinStatsIndex::CustomOptions()\n // Reverse a single block as part of a reorg\n bool CoinStatsIndex::ReverseBlock(const interfaces::BlockInfo& block)\n {\n-    std::pair<uint256, DBVal> read_out;\n-\n-    const CAmount block_subsidy{GetBlockSubsidy(block.height, Params().GetConsensus())};\n-    m_total_subsidy -= block_subsidy;\n-\n-    // Ignore genesis block\n-    if (block.height > 0) {\n-        if (!m_db->Read(DBHeightKey(block.height - 1), read_out)) {\n-            return false;\n-        }\n-\n-        uint256 expected_block_hash{*block.prev_hash};\n-        if (read_out.first != expected_block_hash) {\n-            LogWarning(\"previous block header belongs to unexpected block %s; expected %s\",\n-                      read_out.first.ToString(), expected_block_hash.ToString());\n-\n-            if (!m_db->Read(DBHashKey(expected_block_hash), read_out)) {\n-                LogError(\"previous block header not found; expected %s\",\n-                          expected_block_hash.ToString());\n-                return false;\n-            }\n-        }\n-    }\n-\n-    // Remove the new UTXOs that were created from the block\n+    // Roll back muhash by removing the new UTXOs that were created by the\n+    // block and reapplying the old UTXOs that were spent by the block\n     assert(block.data);\n     assert(block.undo_data);\n     for (size_t i = 0; i < block.data->vtx.size(); ++i) {\n         const auto& tx{block.data->vtx.at(i)};\n \n+        if (IsBIP30Unspendable(block.hash, block.height) && tx->IsCoinBase()) {",
      "path": "src/index/coinstatsindex.cpp",
      "position": 207,
      "original_position": 207,
      "commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "original_commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "in_reply_to_id": 2252428121,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done in #30469",
      "created_at": "2025-08-15T23:27:03Z",
      "updated_at": "2025-08-15T23:27:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33134#discussion_r2280023030",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280023030"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33134"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 409,
      "original_line": 409,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280023124",
      "pull_request_review_id": 3125347327,
      "id": 2280023124,
      "node_id": "PRRC_kwDOABII586H5mRU",
      "diff_hunk": "@@ -384,59 +399,25 @@ interfaces::Chain::NotifyOptions CoinStatsIndex::CustomOptions()\n // Reverse a single block as part of a reorg\n bool CoinStatsIndex::ReverseBlock(const interfaces::BlockInfo& block)\n {\n-    std::pair<uint256, DBVal> read_out;\n-\n-    const CAmount block_subsidy{GetBlockSubsidy(block.height, Params().GetConsensus())};\n-    m_total_subsidy -= block_subsidy;\n-\n-    // Ignore genesis block\n-    if (block.height > 0) {\n-        if (!m_db->Read(DBHeightKey(block.height - 1), read_out)) {\n-            return false;\n-        }\n-\n-        uint256 expected_block_hash{*block.prev_hash};\n-        if (read_out.first != expected_block_hash) {\n-            LogWarning(\"previous block header belongs to unexpected block %s; expected %s\",\n-                      read_out.first.ToString(), expected_block_hash.ToString());\n-\n-            if (!m_db->Read(DBHashKey(expected_block_hash), read_out)) {\n-                LogError(\"previous block header not found; expected %s\",\n-                          expected_block_hash.ToString());\n-                return false;\n-            }\n-        }\n-    }\n-\n-    // Remove the new UTXOs that were created from the block\n+    // Roll back muhash by removing the new UTXOs that were created by the\n+    // block and reapplying the old UTXOs that were spent by the block\n     assert(block.data);\n     assert(block.undo_data);\n     for (size_t i = 0; i < block.data->vtx.size(); ++i) {\n         const auto& tx{block.data->vtx.at(i)};\n \n+        if (IsBIP30Unspendable(block.hash, block.height) && tx->IsCoinBase()) {\n+            continue;\n+        }\n+\n         for (uint32_t j = 0; j < tx->vout.size(); ++j) {\n             const CTxOut& out{tx->vout[j]};\n             COutPoint outpoint{tx->GetHash(), j};\n             Coin coin{out, block.height, tx->IsCoinBase()};",
      "path": "src/index/coinstatsindex.cpp",
      "position": 214,
      "original_position": 214,
      "commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "original_commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "in_reply_to_id": 2252430795,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done in #30469",
      "created_at": "2025-08-15T23:27:10Z",
      "updated_at": "2025-08-15T23:27:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33134#discussion_r2280023124",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280023124"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33134"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 416,
      "original_line": 416,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280023187",
      "pull_request_review_id": 3125347407,
      "id": 2280023187,
      "node_id": "PRRC_kwDOABII586H5mST",
      "diff_hunk": "@@ -384,59 +399,25 @@ interfaces::Chain::NotifyOptions CoinStatsIndex::CustomOptions()\n // Reverse a single block as part of a reorg\n bool CoinStatsIndex::ReverseBlock(const interfaces::BlockInfo& block)\n {\n-    std::pair<uint256, DBVal> read_out;\n-\n-    const CAmount block_subsidy{GetBlockSubsidy(block.height, Params().GetConsensus())};\n-    m_total_subsidy -= block_subsidy;\n-\n-    // Ignore genesis block\n-    if (block.height > 0) {\n-        if (!m_db->Read(DBHeightKey(block.height - 1), read_out)) {\n-            return false;\n-        }\n-\n-        uint256 expected_block_hash{*block.prev_hash};\n-        if (read_out.first != expected_block_hash) {\n-            LogWarning(\"previous block header belongs to unexpected block %s; expected %s\",\n-                      read_out.first.ToString(), expected_block_hash.ToString());\n-\n-            if (!m_db->Read(DBHashKey(expected_block_hash), read_out)) {\n-                LogError(\"previous block header not found; expected %s\",\n-                          expected_block_hash.ToString());\n-                return false;\n-            }\n-        }\n-    }\n-\n-    // Remove the new UTXOs that were created from the block\n+    // Roll back muhash by removing the new UTXOs that were created by the\n+    // block and reapplying the old UTXOs that were spent by the block\n     assert(block.data);\n     assert(block.undo_data);\n     for (size_t i = 0; i < block.data->vtx.size(); ++i) {\n         const auto& tx{block.data->vtx.at(i)};\n \n+        if (IsBIP30Unspendable(block.hash, block.height) && tx->IsCoinBase()) {\n+            continue;\n+        }\n+\n         for (uint32_t j = 0; j < tx->vout.size(); ++j) {\n             const CTxOut& out{tx->vout[j]};\n             COutPoint outpoint{tx->GetHash(), j};\n             Coin coin{out, block.height, tx->IsCoinBase()};\n \n-            // Skip unspendable coins\n-            if (coin.out.scriptPubKey.IsUnspendable()) {\n-                m_total_unspendable_amount -= coin.out.nValue;\n-                m_total_unspendables_scripts -= coin.out.nValue;\n-                continue;\n+            if (!coin.out.scriptPubKey.IsUnspendable()) {\n+                RemoveCoinHash(m_muhash, outpoint, coin);\n             }\n-\n-            RemoveCoinHash(m_muhash, outpoint, coin);\n-\n-            if (tx->IsCoinBase()) {\n-                m_total_coinbase_amount -= coin.out.nValue;\n-            } else {\n-                m_total_new_outputs_ex_coinbase_amount -= coin.out.nValue;\n-            }\n-\n-            --m_transaction_output_count;\n-            m_total_amount -= coin.out.nValue;\n-            m_bogo_size -= GetBogoSize(coin.out.scriptPubKey);\n         }\n \n         // The coinbase tx has no undo data since no former output is spent",
      "path": "src/index/coinstatsindex.cpp",
      "position": 238,
      "original_position": 238,
      "commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "original_commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "in_reply_to_id": 2252451393,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> And is there a particular reason for copying the outpoint via COutPoint outpoint{tx->vin[j].prevout.hash, tx->vin[j].prevout.n}; instead of just tx_undo.vprevout[j]?\r\n\r\n`vprevout` contains `Coin`s, not `COutPoint`s so I am not sure I can follow this suggestion.",
      "created_at": "2025-08-15T23:27:18Z",
      "updated_at": "2025-08-15T23:27:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33134#discussion_r2280023187",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280023187"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33134"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 423,
      "original_line": 423,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280023260",
      "pull_request_review_id": 3125347536,
      "id": 2280023260,
      "node_id": "PRRC_kwDOABII586H5mTc",
      "diff_hunk": "@@ -446,39 +427,10 @@ bool CoinStatsIndex::ReverseBlock(const interfaces::BlockInfo& block)\n             for (size_t j = 0; j < tx_undo.vprevout.size(); ++j) {\n                 Coin coin{tx_undo.vprevout[j]};\n                 COutPoint outpoint{tx->vin[j].prevout.hash, tx->vin[j].prevout.n};\n-\n                 ApplyCoinHash(m_muhash, outpoint, coin);\n-\n-                m_total_prevout_spent_amount -= coin.out.nValue;\n-\n-                m_transaction_output_count++;\n-                m_total_amount += coin.out.nValue;\n-                m_bogo_size += GetBogoSize(coin.out.scriptPubKey);\n             }\n         }\n     }\n \n-    const CAmount unclaimed_rewards{(m_total_new_outputs_ex_coinbase_amount + m_total_coinbase_amount + m_total_unspendable_amount) - (m_total_prevout_spent_amount + m_total_subsidy)};",
      "path": "src/index/coinstatsindex.cpp",
      "position": 255,
      "original_position": 255,
      "commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "original_commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "in_reply_to_id": 2252380027,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The member variables are removed and since they are removed we don't need to roll back there values here either. I don't see how this could be split up into separate commits.",
      "created_at": "2025-08-15T23:27:31Z",
      "updated_at": "2025-08-15T23:27:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33134#discussion_r2280023260",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280023260"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33134"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 461,
      "original_line": 461,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280023700",
      "pull_request_review_id": 3125348022,
      "id": 2280023700,
      "node_id": "PRRC_kwDOABII586H5maU",
      "diff_hunk": "@@ -446,39 +427,10 @@ bool CoinStatsIndex::ReverseBlock(const interfaces::BlockInfo& block)\n             for (size_t j = 0; j < tx_undo.vprevout.size(); ++j) {\n                 Coin coin{tx_undo.vprevout[j]};\n                 COutPoint outpoint{tx->vin[j].prevout.hash, tx->vin[j].prevout.n};\n-\n                 ApplyCoinHash(m_muhash, outpoint, coin);\n-\n-                m_total_prevout_spent_amount -= coin.out.nValue;\n-\n-                m_transaction_output_count++;\n-                m_total_amount += coin.out.nValue;\n-                m_bogo_size += GetBogoSize(coin.out.scriptPubKey);\n             }\n         }\n     }\n \n-    const CAmount unclaimed_rewards{(m_total_new_outputs_ex_coinbase_amount + m_total_coinbase_amount + m_total_unspendable_amount) - (m_total_prevout_spent_amount + m_total_subsidy)};\n-    m_total_unspendable_amount -= unclaimed_rewards;\n-    m_total_unspendables_unclaimed_rewards -= unclaimed_rewards;\n-\n-    // Check that the rolled back internal values are consistent with the DB read out\n-    uint256 out;\n-    m_muhash.Finalize(out);\n-    Assert(read_out.second.muhash == out);\n-\n-    Assert(m_transaction_output_count == read_out.second.transaction_output_count);\n-    Assert(m_total_amount == read_out.second.total_amount);\n-    Assert(m_bogo_size == read_out.second.bogo_size);\n-    Assert(m_total_subsidy == read_out.second.total_subsidy);\n-    Assert(m_total_unspendable_amount == read_out.second.total_unspendable_amount);\n-    Assert(m_total_prevout_spent_amount == read_out.second.total_prevout_spent_amount);\n-    Assert(m_total_new_outputs_ex_coinbase_amount == read_out.second.total_new_outputs_ex_coinbase_amount);\n-    Assert(m_total_coinbase_amount == read_out.second.total_coinbase_amount);\n-    Assert(m_total_unspendables_genesis_block == read_out.second.total_unspendables_genesis_block);\n-    Assert(m_total_unspendables_bip30 == read_out.second.total_unspendables_bip30);\n-    Assert(m_total_unspendables_scripts == read_out.second.total_unspendables_scripts);\n-    Assert(m_total_unspendables_unclaimed_rewards == read_out.second.total_unspendables_unclaimed_rewards);\n-\n     return true;",
      "path": "src/index/coinstatsindex.cpp",
      "position": 277,
      "original_position": 277,
      "commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "original_commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "in_reply_to_id": 2252407121,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Considered this but with all the latest changes in #30469 this is no longer relevant",
      "created_at": "2025-08-15T23:28:20Z",
      "updated_at": "2025-08-15T23:28:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33134#discussion_r2280023700",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280023700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33134"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 435,
      "original_line": 435,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280023799",
      "pull_request_review_id": 3125348146,
      "id": 2280023799,
      "node_id": "PRRC_kwDOABII586H5mb3",
      "diff_hunk": "@@ -384,59 +399,25 @@ interfaces::Chain::NotifyOptions CoinStatsIndex::CustomOptions()\n // Reverse a single block as part of a reorg\n bool CoinStatsIndex::ReverseBlock(const interfaces::BlockInfo& block)",
      "path": "src/index/coinstatsindex.cpp",
      "position": 173,
      "original_position": 173,
      "commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "original_commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "in_reply_to_id": 2252400005,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not directly related to the change but also a very small change, I just renamed the function to `RevertBlock` in #30469",
      "created_at": "2025-08-15T23:28:31Z",
      "updated_at": "2025-08-15T23:28:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33134#discussion_r2280023799",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280023799"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33134"
        }
      },
      "start_line": 399,
      "original_start_line": 399,
      "start_side": "RIGHT",
      "line": 400,
      "original_line": 400,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280023918",
      "pull_request_review_id": 3125348294,
      "id": 2280023918,
      "node_id": "PRRC_kwDOABII586H5mdu",
      "diff_hunk": "@@ -346,19 +374,6 @@ bool CoinStatsIndex::CustomInit(const std::optional<interfaces::BlockRef>& block\n                       GetName());\n             return false;\n         }\n-\n-        m_transaction_output_count = entry.transaction_output_count;\n-        m_bogo_size = entry.bogo_size;\n-        m_total_amount = entry.total_amount;\n-        m_total_subsidy = entry.total_subsidy;\n-        m_total_unspendable_amount = entry.total_unspendable_amount;\n-        m_total_prevout_spent_amount = entry.total_prevout_spent_amount;\n-        m_total_new_outputs_ex_coinbase_amount = entry.total_new_outputs_ex_coinbase_amount;\n-        m_total_coinbase_amount = entry.total_coinbase_amount;\n-        m_total_unspendables_genesis_block = entry.total_unspendables_genesis_block;\n-        m_total_unspendables_bip30 = entry.total_unspendables_bip30;\n-        m_total_unspendables_scripts = entry.total_unspendables_scripts;\n-        m_total_unspendables_unclaimed_rewards = entry.total_unspendables_unclaimed_rewards;",
      "path": "src/index/coinstatsindex.cpp",
      "position": 167,
      "original_position": 167,
      "commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "original_commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "in_reply_to_id": 2252285727,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Is it still an init now that it just updates m_muhash? The method doc claims that: \"/// Initialize internal state from the database and block index\" - is that still accurate?\r\n\r\nEven if just one value is initialized it is still initialized, so I don't see why this should be inaccurate. Also this is a function from the base index that is overridden so not using it just because of semantics seems overkill.\r\n\r\n> Since this change is not strictly inlining of fields anymore, please consider doing it in a separate commit where the commit message gives more context.\r\n\r\nI am not sure what inlining means to you in this context, this change makes member variables to local variables and because of that the variables don't need to be initialized in a separate function anymore. They can't even be initialized in a separate function because they are local so I don't see how this could be split into a separate commit. But maybe I misunderstand what you are suggesting.",
      "created_at": "2025-08-15T23:28:49Z",
      "updated_at": "2025-08-15T23:28:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33134#discussion_r2280023918",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280023918"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33134"
        }
      },
      "start_line": 350,
      "original_start_line": 350,
      "start_side": "LEFT",
      "line": 361,
      "original_line": 361,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280024486",
      "pull_request_review_id": 3125349006,
      "id": 2280024486,
      "node_id": "PRRC_kwDOABII586H5mmm",
      "diff_hunk": "@@ -136,15 +146,33 @@ bool CoinStatsIndex::CustomAppend(const interfaces::BlockInfo& block)\n             }\n         }\n \n+        transaction_output_count = read_out.second.transaction_output_count;\n+        bogo_size = read_out.second.bogo_size;\n+        total_amount = read_out.second.total_amount;\n+        total_subsidy = read_out.second.total_subsidy;\n+        total_unspendable_amount = read_out.second.total_unspendable_amount;\n+        total_prevout_spent_amount = read_out.second.total_prevout_spent_amount;\n+        total_new_outputs_ex_coinbase_amount = read_out.second.total_new_outputs_ex_coinbase_amount;\n+        total_coinbase_amount = read_out.second.total_coinbase_amount;\n+        total_unspendables_genesis_block = read_out.second.total_unspendables_genesis_block;\n+        total_unspendables_bip30 = read_out.second.total_unspendables_bip30;\n+        total_unspendables_scripts = read_out.second.total_unspendables_scripts;\n+        total_unspendables_unclaimed_rewards = read_out.second.total_unspendables_unclaimed_rewards;\n+    }\n+\n+    const CAmount block_subsidy{GetBlockSubsidy(block.height, Params().GetConsensus())};\n+    total_subsidy += block_subsidy;",
      "path": "src/index/coinstatsindex.cpp",
      "position": 40,
      "original_position": 40,
      "commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "original_commit_id": "a53063a6d93103926509d3f95dc791140aae58c6",
      "in_reply_to_id": 2252318499,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I took the part of this suggestion to use the intermittend `DBVal` but when taking everything together in #30469 many of the other changes don't apply anymore I think",
      "created_at": "2025-08-15T23:29:59Z",
      "updated_at": "2025-08-15T23:29:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33134#discussion_r2280024486",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2280024486"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33134"
        }
      },
      "start_line": 163,
      "original_start_line": 163,
      "start_side": "RIGHT",
      "line": 164,
      "original_line": 164,
      "side": "RIGHT"
    }
  ]
}