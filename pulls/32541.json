{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541",
    "id": 2525857444,
    "node_id": "PR_kwDOABII586WjYak",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/32541",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/32541.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/32541.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/b2a22ce33dc69697181547fa1e83bd0ed3321565",
    "number": 32541,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "index: store per-block transaction locations for efficient lookups",
    "user": {
      "login": "romanz",
      "id": 9900,
      "node_id": "MDQ6VXNlcjk5MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/romanz",
      "html_url": "https://github.com/romanz",
      "followers_url": "https://api.github.com/users/romanz/followers",
      "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
      "organizations_url": "https://api.github.com/users/romanz/orgs",
      "repos_url": "https://api.github.com/users/romanz/repos",
      "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/romanz/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Currently, electrs and other indexers map between an address/scripthash to the list of the relevant transactions.\r\n\r\nHowever, in order to fetch those transactions from bitcoind, electrs relies on reading the whole block and post-filtering for a specific transaction[^1]. Other indexers use a `txindex` to fetch a transaction using its txid [^2][^3][^4].\r\n\r\nThe above approach has significant storage and CPU overhead, since the `txid` is a pseudo-random 32-byte value.\r\n\r\nThis PR is adding support for using the transaction's position within its block to be able to fetch it directly using [REST API](https://github.com/bitcoin/bitcoin/blob/master/doc/REST-interface.md), using the following HTTP request (to fetch the `N`-th transaction from `BLOCKHASH`):\r\n\r\n```\r\nGET /rest/txfromblock/BLOCKHASH-N.bin\r\n```\r\n\r\nIf binary response format is used, the transaction data will be read directly from the storage and sent back to the client, without any deserialization overhead.\r\n\r\nThe resulting index is much smaller (allowing it to be cached):\r\n```\r\n$ du -sh indexes/locations/ indexes/txindex/\r\n2.5G\tindexes/locations/\r\n57G\tindexes/txindex/\r\n```\r\n\r\nThe new index is using the following DB schema:\r\n\r\n```c++\r\nstruct DBKey {\r\n    uint256 hash;   // blockhash\r\n    uint32_t row;   // allow splitting one block's transactions into multiple DB rows\r\n};\r\n\r\nstruct DBValue {\r\n    FlatFilePos block_pos;          // file id + offset of the block\r\n    std::vector<uint32_t> offsets;  // a list of transaction offsets within the block\r\n};\r\n```\r\n\r\n[^1]: https://github.com/romanz/electrs/blob/master/doc/schema.md\r\n[^2]: https://github.com/Blockstream/electrs/blob/new-index/doc/schema.md#txstore\r\n[^3]: https://github.com/spesmilo/electrumx/blob/master/docs/HOWTO.rst#prerequisites\r\n[^4]: https://github.com/cculianu/Fulcrum/blob/master/README.md#requirements\r\n\r\n",
    "labels": [
      {
        "id": 97470796,
        "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
        "name": "UTXO Db and Indexes",
        "color": "fbca04",
        "default": false
      }
    ],
    "created_at": "2025-05-17T07:27:58Z",
    "updated_at": "2025-08-04T07:27:36Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "7599e3d618e037b4bf05d0a6b59f8b9ffd3bcd1e",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "romanz:locations-index",
      "ref": "locations-index",
      "sha": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 125523455,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMjU1MjM0NTU=",
        "name": "bitcoin",
        "full_name": "romanz/bitcoin",
        "owner": {
          "login": "romanz",
          "id": 9900,
          "node_id": "MDQ6VXNlcjk5MDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/romanz",
          "html_url": "https://github.com/romanz",
          "followers_url": "https://api.github.com/users/romanz/followers",
          "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
          "organizations_url": "https://api.github.com/users/romanz/orgs",
          "repos_url": "https://api.github.com/users/romanz/repos",
          "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/romanz/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/romanz/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/romanz/bitcoin",
        "archive_url": "https://api.github.com/repos/romanz/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/romanz/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/romanz/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/romanz/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/romanz/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/romanz/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/romanz/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/romanz/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/romanz/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/romanz/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/romanz/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/romanz/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/romanz/bitcoin/events",
        "forks_url": "https://api.github.com/repos/romanz/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/romanz/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/romanz/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/romanz/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/romanz/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/romanz/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/romanz/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/romanz/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/romanz/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/romanz/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/romanz/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/romanz/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/romanz/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/romanz/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/romanz/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/romanz/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:romanz/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/romanz/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/romanz/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/romanz/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/romanz/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/romanz/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/romanz/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/romanz/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/romanz/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/romanz/bitcoin/hooks",
        "svn_url": "https://github.com/romanz/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 263987,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-03T06:42:26Z",
        "created_at": "2018-03-16T13:59:02Z",
        "updated_at": "2023-11-29T23:29:01Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "75ed673193c5b53b1f4b734e38237f6875bb30b2",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37603,
        "stargazers_count": 84878,
        "watchers_count": 84878,
        "size": 290064,
        "default_branch": "master",
        "open_issues_count": 757,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-03T10:53:32Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-08-04T06:58:44Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 467,
    "deletions": 5,
    "changed_files": 14,
    "commits": 2,
    "review_comments": 34,
    "comments": 21
  },
  "events": [
    {
      "event": "commented",
      "id": 2888175898,
      "node_id": "IC_kwDOABII586sJhEa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2888175898",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-17T07:28:00Z",
      "updated_at": "2025-08-03T06:42:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/32541.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2888253440), [hodlinator](https://github.com/bitcoin/bitcoin/pull/32541#pullrequestreview-3081181690) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30469](https://github.com/bitcoin/bitcoin/pull/30469) (index: Fix coinstats overflow by fjahr)\n* [#29700](https://github.com/bitcoin/bitcoin/pull/29700) (kernel, refactor: return error status on all fatal errors by ryanofsky)\n* [#26966](https://github.com/bitcoin/bitcoin/pull/26966) (index: initial sync speedup, parallelize process by furszy)\n* [#17783](https://github.com/bitcoin/bitcoin/pull/17783) (common: Disallow calling IsArgSet() on ALLOW_LIST options by ryanofsky)\n* [#17580](https://github.com/bitcoin/bitcoin/pull/17580) (refactor: Add ALLOW_LIST flags and enforce usage in CheckArgFlags by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->\n### LLM Linter (✨ experimental)\n\nPossible typos and grammar issues:\n\n- beggining -> beginning [correct spelling]\n\n<sup>drahtbot_id_4_m</sup>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2888175898",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "labeled",
      "id": 17697938432,
      "node_id": "LE_lADOABII5863BCXxzwAAAAQe4RwA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17697938432",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-17T07:28:23Z",
      "label": {
        "name": "UTXO Db and Indexes",
        "color": "fbca04"
      }
    },
    {
      "event": "labeled",
      "id": 17697974131,
      "node_id": "LE_lADOABII5863BCXxzwAAAAQe4adz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17697974131",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-17T07:37:14Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2888180707,
      "node_id": "IC_kwDOABII586sJiPj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2888180707",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-17T07:37:15Z",
      "updated_at": "2025-05-17T07:37:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `lint`: https://github.com/bitcoin/bitcoin/runs/42402043332</sub>\n<sub>LLM reason (✨ experimental): The CI failure is due to missing include guards in `src/index/locationsindex.h`.\n</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2888180707",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17698036143,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAAQe4pmv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17698036143",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1f629743e6c6ba4fab77ef1a8578bb82f0a70566",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/1f629743e6c6ba4fab77ef1a8578bb82f0a70566",
      "created_at": "2025-05-17T07:45:53Z"
    },
    {
      "event": "commented",
      "id": 2888253440,
      "node_id": "IC_kwDOABII586sJ0AA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2888253440",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-17T09:37:52Z",
      "updated_at": "2025-05-17T09:37:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nCan you add the schema of the index and the expected arguments for the REST API  to the pull request description? I was a bit confused at first if this now exposes the file position, but if I read it correctly now, this just allows querying a transaction by its index in the block. ",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2888253440",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "commented",
      "id": 2888263760,
      "node_id": "IC_kwDOABII586sJ2hQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2888263760",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-17T10:00:56Z",
      "updated_at": "2025-05-17T10:00:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Concept ACK\r\n\r\nThanks!\r\n\r\n> Can you add the schema of the index and the expected arguments for the REST API to the pull request description? \r\n\r\nSure - updated in https://github.com/bitcoin/bitcoin/pull/32541#issue-3070502385.\r\n",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2888263760",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17698888490,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAAQe75sq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17698888490",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c074ad2676631a9d27c05ccb7ee832a957ff11e2",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/c074ad2676631a9d27c05ccb7ee832a957ff11e2",
      "created_at": "2025-05-17T11:55:07Z"
    },
    {
      "event": "commented",
      "id": 2888339681,
      "node_id": "IC_kwDOABII586sKJDh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2888339681",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-17T11:58:10Z",
      "updated_at": "2025-05-17T12:00:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "Fixed a few issues (following [SonarQube run](https://sonarcloud.io/project/issues?issueStatuses=OPEN%2CCONFIRMED&sinceLeakPeriod=true&branch=32541-1f629743e6c6ba4fab77ef1a8578bb82f0a70566&id=aureleoules_bitcoin)).",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2888339681",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "subscribed",
      "id": 17698975614,
      "node_id": "SE_lADOABII5863BCXxzwAAAAQe8O9-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17698975614",
      "actor": {
        "login": "dn4vzdx8xS15wUV0",
        "id": 211630628,
        "node_id": "U_kgDODJ06JA",
        "avatar_url": "https://avatars.githubusercontent.com/u/211630628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dn4vzdx8xS15wUV0",
        "html_url": "https://github.com/dn4vzdx8xS15wUV0",
        "followers_url": "https://api.github.com/users/dn4vzdx8xS15wUV0/followers",
        "following_url": "https://api.github.com/users/dn4vzdx8xS15wUV0/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dn4vzdx8xS15wUV0/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dn4vzdx8xS15wUV0/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dn4vzdx8xS15wUV0/subscriptions",
        "organizations_url": "https://api.github.com/users/dn4vzdx8xS15wUV0/orgs",
        "repos_url": "https://api.github.com/users/dn4vzdx8xS15wUV0/repos",
        "events_url": "https://api.github.com/users/dn4vzdx8xS15wUV0/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dn4vzdx8xS15wUV0/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-17T12:23:30Z"
    },
    {
      "event": "unlabeled",
      "id": 17699113847,
      "node_id": "UNLE_lADOABII5863BCXxzwAAAAQe8wt3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17699113847",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-17T13:13:14Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2895395162,
      "node_id": "IC_kwDOABII586slDla",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2895395162",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-20T18:15:32Z",
      "updated_at": "2025-05-20T18:15:32Z",
      "author_association": "MEMBER",
      "body": "How does this compare to `getrawtransaction <txid> 0 <blockhash>` without a txindex?",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2895395162",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "commented",
      "id": 2897330791,
      "node_id": "IC_kwDOABII586sscJn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2897330791",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-21T09:51:22Z",
      "updated_at": "2025-05-21T09:53:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "I have used `ApacheBench 2.3` for benchmarking REST API, and [the following Rust client](https://gist.github.com/romanz/2630210f497b69d605cdb831fd057b98) for `getrawtransaction` RPC:\r\n\r\n# fetching using the new index\r\n```\r\n$ ab -k -c 1 -n 100000 http://localhost:8332/rest/txfromblock/0000000000000000000083a0cff38278aae196d6d923a7e8ee7e5a0e371226fe-42.bin\r\n\r\nDocument Path:          /rest/txfromblock/0000000000000000000083a0cff38278aae196d6d923a7e8ee7e5a0e371226fe-42.bin\r\nDocument Length:        301 bytes\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   13.760 seconds\r\nComplete requests:      100000\r\nFailed requests:        0\r\nKeep-Alive requests:    100000\r\nTotal transferred:      40500000 bytes\r\nHTML transferred:       30100000 bytes\r\nRequests per second:    7267.65 [#/sec] (mean)\r\nTime per request:       0.138 [ms] (mean)\r\nTime per request:       0.138 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          2874.41 [Kbytes/sec] received\r\n```\r\n\r\n# fetching using `txindex`\r\n```\r\n$ ab -k -c 1 -n 100000 http://localhost:8332/rest/tx/4137d0dbad434d68a4f52b7bebcba91ddac3f7f5c92b84130432bd6b5e2ea57a.bin\r\n\r\nDocument Path:          /rest/tx/4137d0dbad434d68a4f52b7bebcba91ddac3f7f5c92b84130432bd6b5e2ea57a.bin\r\nDocument Length:        301 bytes\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   14.075 seconds\r\nComplete requests:      100000\r\nFailed requests:        0\r\nKeep-Alive requests:    100000\r\nTotal transferred:      40500000 bytes\r\nHTML transferred:       30100000 bytes\r\nRequests per second:    7104.78 [#/sec] (mean)\r\nTime per request:       0.141 [ms] (mean)\r\nTime per request:       0.141 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          2810.00 [Kbytes/sec] received\r\n```\r\n\r\n# fetching without `txindex`\r\n```\r\ntime cargo run --release -- 4137d0dbad434d68a4f52b7bebcba91ddac3f7f5c92b84130432bd6b5e2ea57a 0000000000000000000083a0cff38278aae196d6d923a7e8ee7e5a0e371226fe\r\n    Finished `release` profile [optimized] target(s) in 0.02s\r\n     Running `target/release/bench-getrawtx 4137d0dbad434d68a4f52b7bebcba91ddac3f7f5c92b84130432bd6b5e2ea57a 0000000000000000000083a0cff38278aae196d6d923a7e8ee7e5a0e371226fe`\r\niterations = 1000\r\naverage RPC duration = 8.563491ms\r\n\r\nreal\t0m8.628s\r\nuser\t0m0.070s\r\nsys\t0m0.052s\r\n```\r\n",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2897330791",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "labeled",
      "id": 18138214571,
      "node_id": "LE_lADOABII5863BCXxzwAAAAQ5HzCr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18138214571",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-13T17:34:49Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2971073957,
      "node_id": "IC_kwDOABII586xFv2l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2971073957",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-13T17:34:51Z",
      "updated_at": "2025-06-13T17:34:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `previous releases, depends DEBUG`: https://github.com/bitcoin/bitcoin/runs/42406243587</sub>\n<sub>LLM reason (✨ experimental): The CI failure is caused by a missing header file test/util/index.h during compilation.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2971073957",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18139260091,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAAQ5LyS7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18139260091",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d962c9a9170c72483ed970918ce3836cf538ec43",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/d962c9a9170c72483ed970918ce3836cf538ec43",
      "created_at": "2025-06-13T18:35:54Z"
    },
    {
      "event": "commented",
      "id": 2971357956,
      "node_id": "IC_kwDOABII586xG1ME",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2971357956",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-13T19:02:07Z",
      "updated_at": "2025-06-13T19:02:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased to fix https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2971073957.",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2971357956",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "unlabeled",
      "id": 18142641322,
      "node_id": "UNLE_lADOABII5863BCXxzwAAAAQ5Yryq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18142641322",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-13T22:50:53Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "convert_to_draft",
      "id": 18147525498,
      "node_id": "CTDE_lADOABII5863BCXxzwAAAAQ5rUN6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18147525498",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-14T08:58:50Z"
    },
    {
      "event": "ready_for_review",
      "id": 18149019268,
      "node_id": "RFRE_lADOABII5863BCXxzwAAAAQ5xA6E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18149019268",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-14T12:29:12Z"
    },
    {
      "event": "commented",
      "id": 2973968188,
      "node_id": "IC_kwDOABII586xQyc8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2973968188",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-15T14:34:19Z",
      "updated_at": "2025-06-15T14:34:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "> How does this compare to getrawtransaction <txid> 0 <blockhash> without a txindex?\r\n\r\nAs far as I understand the index makes this operation faster by not requiring to read the entire block and then iterating through the transactions to find the match, which I am guessing is what the last benchmark is showing. romanz, would this new endpoint be used while creating the entire index initially, or to serve certain requests? It is not quite clear to me when an indexing client wouldn't want to read through the entire block and instead only get its transactions selectively.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2973968188",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "commented",
      "id": 2974308726,
      "node_id": "IC_kwDOABII586xSFl2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2974308726",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-15T17:20:24Z",
      "updated_at": "2025-06-15T17:25:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "> As far as I understand the index makes this operation faster by not requiring to read the entire block and then iterating through the transactions to find the match\r\n\r\nCorrect - the proposed index improves the performance of fetching a single transaction (similar to `txindex`), requiring significantly less storage.\r\n\r\n> would this new endpoint be used while creating the entire index initially, or to serve certain requests?\r\n\r\nI would like the new index to be used to serve history-related queries.\r\nFor example, https://electrum-protocol.readthedocs.io/en/latest/protocol-methods.html#blockchain-scripthash-get-history. \r\n\r\nYou are right that during the history indexing process, the client doesn't need the proposed index, since it needs to read both the entire block ([and undo](https://github.com/bitcoin/bitcoin/pull/32540)) data in order to create a map between a transaction's location and its `ScriptPubKey`s.\r\n\r\nBTW, I am working on a proof-of-concept indexer (https://github.com/romanz/bindex-rs) which is using #32540 & #32541 - please let me know if there are any questions/comments/concerns :)\r\n",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2974308726",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "reviewed",
      "id": 2945853711,
      "node_id": "PRR_kwDOABII586vlikP",
      "url": null,
      "actor": null,
      "commit_id": "d962c9a9170c72483ed970918ce3836cf538ec43",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "lgtm. I wonder if there should be a fallback?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#pullrequestreview-2945853711",
      "submitted_at": "2025-06-20T12:05:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18256657123,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAARALnrj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18256657123",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8d446fc2f4548d7bc998994cb0e86875fb8be335",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/8d446fc2f4548d7bc998994cb0e86875fb8be335",
      "created_at": "2025-06-21T09:57:47Z"
    },
    {
      "event": "commented",
      "id": 2993496536,
      "node_id": "IC_kwDOABII586ybSHY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2993496536",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-21T09:58:51Z",
      "updated_at": "2025-06-21T09:58:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased over `master` to use `std::vector<std::byte>` (following https://github.com/bitcoin/bitcoin/pull/32743).",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2993496536",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "convert_to_draft",
      "id": 18257387391,
      "node_id": "CTDE_lADOABII5863BCXxzwAAAARAOZ9_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18257387391",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-21T14:29:27Z"
    },
    {
      "event": "labeled",
      "id": 18257424262,
      "node_id": "LE_lADOABII5863BCXxzwAAAARAOi-G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18257424262",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-21T14:43:29Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2993616109,
      "node_id": "IC_kwDOABII586ybvTt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2993616109",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-21T14:43:31Z",
      "updated_at": "2025-06-21T14:43:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `MSan, depends`: https://github.com/bitcoin/bitcoin/runs/44528503073</sub>\n<sub>LLM reason (✨ experimental): The CI failure is caused by the abort in the locationsindex_tests subprocess.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2993616109",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18257793553,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAARAP9IR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18257793553",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "00c3651582b29465f681ff3c225b7c9e72c92d33",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/00c3651582b29465f681ff3c225b7c9e72c92d33",
      "created_at": "2025-06-21T16:52:11Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18258085564,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAARAREa8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18258085564",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "df45388b97ea4d808256302531d4443526edf794",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/df45388b97ea4d808256302531d4443526edf794",
      "created_at": "2025-06-21T18:10:11Z"
    },
    {
      "event": "ready_for_review",
      "id": 18258140604,
      "node_id": "RFRE_lADOABII5863BCXxzwAAAARARR28",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18258140604",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-21T18:20:09Z"
    },
    {
      "event": "unlabeled",
      "id": 18258294533,
      "node_id": "UNLE_lADOABII5863BCXxzwAAAARAR3cF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18258294533",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-21T19:03:31Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "review_requested",
      "id": 18258336199,
      "node_id": "RRE_lADOABII5863BCXxzwAAAARASBnH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18258336199",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-21T19:15:58Z",
      "requested_reviewer": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 2994005562,
      "node_id": "IC_kwDOABII586ydOY6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2994005562",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-22T07:32:56Z",
      "updated_at": "2025-06-22T07:32:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "BTW, if I understand correctly, this index may also improve the performance of [`SendBlockTransactions` during handling of `GETBLOCKTXN` requests](https://github.com/romanz/bitcoin/blob/df45388b97ea4d808256302531d4443526edf794/src/net_processing.cpp#L4181).\r\n",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2994005562",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "reviewed",
      "id": 2950110966,
      "node_id": "PRR_kwDOABII586v1x72",
      "url": null,
      "actor": null,
      "commit_id": "df45388b97ea4d808256302531d4443526edf794",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "lgtm",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#pullrequestreview-2950110966",
      "submitted_at": "2025-06-23T13:20:38Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
    },
    {
      "event": "commented",
      "id": 2996487357,
      "node_id": "IC_kwDOABII586ymsS9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2996487357",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-23T13:22:20Z",
      "updated_at": "2025-06-23T13:22:20Z",
      "author_association": "MEMBER",
      "body": "> BTW, if I understand correctly, this index may also improve the performance of [`SendBlockTransactions` during handling of `GETBLOCKTXN` requests](https://github.com/romanz/bitcoin/blob/df45388b97ea4d808256302531d4443526edf794/src/net_processing.cpp#L4181).\r\n\r\nThis is only the fallback where the recent block fell out of memory. If this happens, the performance either shouldn't matter, or it may be better to keep more recent blocks in memory than just a single one.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-2996487357",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18280362223,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAARBmDDv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18280362223",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "99b48777eeb54a11f1f68adae3d273c1a634c3e7",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/99b48777eeb54a11f1f68adae3d273c1a634c3e7",
      "created_at": "2025-06-23T20:00:21Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18367563775,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAARGysf_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18367563775",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "80a9c724dc991b6603e4c59931333f91aaf56a30",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/80a9c724dc991b6603e4c59931333f91aaf56a30",
      "created_at": "2025-06-28T06:41:13Z"
    },
    {
      "event": "commented",
      "id": 3015029219,
      "node_id": "IC_kwDOABII586ztbHj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3015029219",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-28T06:43:31Z",
      "updated_at": "2025-06-28T06:43:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased over `master` and fixed `rest_tx_from_block()` argument name case (in addition to https://github.com/bitcoin/bitcoin/pull/32825).",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3015029219",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18386564844,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAARH7Lbs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18386564844",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "75a38f4928b25f310f789b32217b162d8f805485",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/75a38f4928b25f310f789b32217b162d8f805485",
      "created_at": "2025-06-30T13:11:34Z"
    },
    {
      "event": "commented",
      "id": 3019110833,
      "node_id": "IC_kwDOABII586z8_mx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3019110833",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-30T13:13:56Z",
      "updated_at": "2025-06-30T13:13:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased over `master` after https://github.com/bitcoin/bitcoin/pull/32825 is merged (to resolve a small conflict).",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3019110833",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "commented",
      "id": 3039513232,
      "node_id": "IC_kwDOABII5861K0qQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3039513232",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-05T18:07:56Z",
      "updated_at": "2025-07-05T18:07:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "Added a short description in `doc/REST-interface.md` and `doc/files.md`, and updated release notes in https://github.com/bitcoin/bitcoin/pull/32541/commits/c695d134683d52bce9e499a5848e4c4c7951155c.\r\nPlease let me know if there are any additional open issues :)",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3039513232",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "commented",
      "id": 3070627590,
      "node_id": "IC_kwDOABII5863Bg8G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3070627590",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-14T18:54:35Z",
      "updated_at": "2025-07-14T18:54:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "Ping :)",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3070627590",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18623986336,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAARWE3qg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18623986336",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "024a91fc51865f6f862edae9a32bb13a7c0a316d",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/024a91fc51865f6f862edae9a32bb13a7c0a316d",
      "created_at": "2025-07-14T19:00:56Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc4NDQ1OWFjNzlhODlmNTkxZWI1MmE0YzZjMjY2YzQyMWNhOGJhZWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/784459ac79a89f591eb52a4c6c266c421ca8baec",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/784459ac79a89f591eb52a4c6c266c421ca8baec",
      "tree": {
        "sha": "bc4bfd69813ae74372e3f897d8b4b130c286fd3f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bc4bfd69813ae74372e3f897d8b4b130c286fd3f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/33480573cbd8d03aefbde100e51f827a2f7de7f7",
          "sha": "33480573cbd8d03aefbde100e51f827a2f7de7f7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/33480573cbd8d03aefbde100e51f827a2f7de7f7"
        }
      ],
      "message": "rest: allow fetching specific transaction from a block",
      "committer": {
        "name": "Roman Zeyde",
        "email": "me@romanzey.de",
        "date": "2025-07-19T16:44:35Z"
      },
      "author": {
        "name": "Roman Zeyde",
        "email": "me@romanzey.de",
        "date": "2025-07-19T16:44:35Z"
      },
      "sha": "784459ac79a89f591eb52a4c6c266c421ca8baec"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18712235227,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAARbVgzb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18712235227",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/1b928f58fc78f4727cef988902075abc05c372b2",
      "created_at": "2025-07-19T17:15:58Z"
    },
    {
      "event": "commented",
      "id": 3092464779,
      "node_id": "IC_kwDOABII5864U0SL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3092464779",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-19T17:18:51Z",
      "updated_at": "2025-07-19T17:18:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "I have split the content of this PR into 2 commits:\r\n- 784459ac79 is adding the new `/rest/txfromblock/` endpoint\r\n- 1b928f58fc is adding an optional `locationsindex` for optimizing lookups",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3092464779",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "reviewed",
      "id": 3081181690,
      "node_id": "PRR_kwDOABII5863pxn6",
      "url": null,
      "actor": null,
      "commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK 1b928f58fc78f4727cef988902075abc05c372b2\r\n\r\nCool way of compressing transaction metadata to significantly reduce on-disk footprint compared to `TxIndex` and make it more likely this one fits in RAM. (Fine as long as external code can fetch by block hash + tx index instead of by txid).\r\n\r\nOptimization as I understand it: All transactions within the same block have the same `FlatFilePos` base, which is compressed by a factor of 128 thanks to `TXS_PER_ROW`. Instead of storing an individual tx offset and size for each tx, it uses 2 offsets for a tx request, which allows re-use of offsets between adjacent txs.\r\n\r\nThanks for electrs!",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#pullrequestreview-3081181690",
      "submitted_at": "2025-08-02T21:19:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGIyYTIyY2UzM2RjNjk2OTcxODE1NDdmYTFlODNiZDBlZDMzMjE1NjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "tree": {
        "sha": "6aa688a9c2e6e490f4320c2999c5bab6e4893e4b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6aa688a9c2e6e490f4320c2999c5bab6e4893e4b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/784459ac79a89f591eb52a4c6c266c421ca8baec",
          "sha": "784459ac79a89f591eb52a4c6c266c421ca8baec",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/784459ac79a89f591eb52a4c6c266c421ca8baec"
        }
      ],
      "message": "index: store per-block transaction locations for efficient lookups",
      "committer": {
        "name": "Roman Zeyde",
        "email": "me@romanzey.de",
        "date": "2025-08-03T06:40:00Z"
      },
      "author": {
        "name": "Roman Zeyde",
        "email": "me@romanzey.de",
        "date": "2025-07-19T16:44:43Z"
      },
      "sha": "b2a22ce33dc69697181547fa1e83bd0ed3321565"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18955163824,
      "node_id": "HRFPE_lADOABII5863BCXxzwAAAARp0Niw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18955163824",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "commit_url": "https://api.github.com/repos/romanz/bitcoin/commits/b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "created_at": "2025-08-03T06:42:28Z"
    },
    {
      "event": "commented",
      "id": 3148142648,
      "node_id": "IC_kwDOABII5867pNg4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3148142648",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-03T07:50:14Z",
      "updated_at": "2025-08-03T07:50:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "Many thanks for the review!\r\nApplied the comments: [`1b928f5 -> b2a22ce`](https://github.com/bitcoin/bitcoin/compare/1b928f58fc78f4727cef988902075abc05c372b2..b2a22ce33dc69697181547fa1e83bd0ed3321565)\r\n",
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#issuecomment-3148142648",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32541"
    },
    {
      "event": "subscribed",
      "id": 18957029863,
      "node_id": "SE_lADOABII5863BCXxzwAAAARp7VHn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18957029863",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-03T11:15:14Z"
    },
    {
      "event": "review_requested",
      "id": 18957313372,
      "node_id": "RRE_lADOABII5863BCXxzwAAAARp8aVc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18957313372",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-03T12:41:09Z",
      "requested_reviewer": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 18957313501,
      "node_id": "RRE_lADOABII5863BCXxzwAAAARp8aXd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18957313501",
      "actor": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-03T12:41:11Z",
      "requested_reviewer": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2158804941",
      "pull_request_review_id": 2945853711,
      "id": 2158804941,
      "node_id": "PRRC_kwDOABII586ArL_N",
      "diff_hunk": "@@ -364,6 +365,92 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, strURIPart, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uriParts{util::Split<std::string_view>(param, '-')};\n+    if (uriParts.size() != 2) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid URI format: %s\", param));\n+    }\n+\n+    std::optional<uint256> block_hash{uint256::FromHex(uriParts[0])};\n+    if (!block_hash) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid hash: %s\", uriParts[0]));\n+    }\n+\n+    const std::optional<size_t> parsed_index{ToIntegral<size_t>(uriParts[1])};\n+    if (!parsed_index.has_value()) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Transaction index is invalid: %s\", uriParts[1]));\n+    }\n+    const size_t index = *parsed_index;\n+    {\n+        ChainstateManager* maybe_chainman = GetChainman(context, req);\n+        if (!maybe_chainman) return false;\n+        ChainstateManager& chainman = *maybe_chainman;\n+\n+        LOCK(cs_main);\n+        const CBlockIndex* pindex{chainman.m_blockman.LookupBlockIndex(*block_hash)};\n+        if (pindex == nullptr) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not found\", uriParts[0]));\n+        }\n+        if (pindex->nHeight > 0 && !pindex->IsValid(BLOCK_VALID_SCRIPTS)) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not validated\", uriParts[0]));\n+        }\n+        if (index >= pindex->nTx) {\n+            return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Block %s has only %d transactions\", uriParts[0], pindex->nTx));\n+        }\n+    }\n+\n+    const LocationsIndex* locations_index = g_locations_index.get();\n+    if (!locations_index) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Locations index is not enabled\");",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "d962c9a9170c72483ed970918ce3836cf538ec43",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "not sure about returning an error here. Should be easy to implement a fallback?\r\n\r\nThis should also make it easier to benchmark the benefit of the index.\r\n\r\n(I guess it is clear that RPC with json overhead eats some CPU, but out of curiosity   I wonder what the difference is between reading the db value (tx location) + reading the tx versus reading the full block and implementing a raw-tx-seeker to jump to the raw bytes of the tx in the block. This should be possible by just reading the length prefixes and then skipping them. I guess the worst case scenario is when its the last transaction, where the prior transaction(s) are mostly filled with minimally sized length prefixes)",
      "created_at": "2025-06-20T12:04:55Z",
      "updated_at": "2025-06-20T12:05:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2158804941",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2158804941"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 412,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2159265802",
      "pull_request_review_id": 2946634361,
      "id": 2159265802,
      "node_id": "PRRC_kwDOABII586As8gK",
      "diff_hunk": "@@ -364,6 +365,92 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, strURIPart, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uriParts{util::Split<std::string_view>(param, '-')};\n+    if (uriParts.size() != 2) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid URI format: %s\", param));\n+    }\n+\n+    std::optional<uint256> block_hash{uint256::FromHex(uriParts[0])};\n+    if (!block_hash) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid hash: %s\", uriParts[0]));\n+    }\n+\n+    const std::optional<size_t> parsed_index{ToIntegral<size_t>(uriParts[1])};\n+    if (!parsed_index.has_value()) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Transaction index is invalid: %s\", uriParts[1]));\n+    }\n+    const size_t index = *parsed_index;\n+    {\n+        ChainstateManager* maybe_chainman = GetChainman(context, req);\n+        if (!maybe_chainman) return false;\n+        ChainstateManager& chainman = *maybe_chainman;\n+\n+        LOCK(cs_main);\n+        const CBlockIndex* pindex{chainman.m_blockman.LookupBlockIndex(*block_hash)};\n+        if (pindex == nullptr) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not found\", uriParts[0]));\n+        }\n+        if (pindex->nHeight > 0 && !pindex->IsValid(BLOCK_VALID_SCRIPTS)) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not validated\", uriParts[0]));\n+        }\n+        if (index >= pindex->nTx) {\n+            return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Block %s has only %d transactions\", uriParts[0], pindex->nTx));\n+        }\n+    }\n+\n+    const LocationsIndex* locations_index = g_locations_index.get();\n+    if (!locations_index) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Locations index is not enabled\");",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "d962c9a9170c72483ed970918ce3836cf538ec43",
      "in_reply_to_id": 2158804941,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks!\r\n\r\n> This should also make it easier to benchmark the benefit of the index.\r\n\r\nSounds good - will implement a fallback.",
      "created_at": "2025-06-20T15:35:09Z",
      "updated_at": "2025-06-20T16:25:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2159265802",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2159265802"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 412,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2160039017",
      "pull_request_review_id": 2947768242,
      "id": 2160039017,
      "node_id": "PRRC_kwDOABII586Av5Rp",
      "diff_hunk": "@@ -364,6 +365,92 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, strURIPart, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uriParts{util::Split<std::string_view>(param, '-')};\n+    if (uriParts.size() != 2) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid URI format: %s\", param));\n+    }\n+\n+    std::optional<uint256> block_hash{uint256::FromHex(uriParts[0])};\n+    if (!block_hash) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid hash: %s\", uriParts[0]));\n+    }\n+\n+    const std::optional<size_t> parsed_index{ToIntegral<size_t>(uriParts[1])};\n+    if (!parsed_index.has_value()) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Transaction index is invalid: %s\", uriParts[1]));\n+    }\n+    const size_t index = *parsed_index;\n+    {\n+        ChainstateManager* maybe_chainman = GetChainman(context, req);\n+        if (!maybe_chainman) return false;\n+        ChainstateManager& chainman = *maybe_chainman;\n+\n+        LOCK(cs_main);\n+        const CBlockIndex* pindex{chainman.m_blockman.LookupBlockIndex(*block_hash)};\n+        if (pindex == nullptr) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not found\", uriParts[0]));\n+        }\n+        if (pindex->nHeight > 0 && !pindex->IsValid(BLOCK_VALID_SCRIPTS)) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not validated\", uriParts[0]));\n+        }\n+        if (index >= pindex->nTx) {\n+            return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Block %s has only %d transactions\", uriParts[0], pindex->nTx));\n+        }\n+    }\n+\n+    const LocationsIndex* locations_index = g_locations_index.get();\n+    if (!locations_index) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Locations index is not enabled\");",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "d962c9a9170c72483ed970918ce3836cf538ec43",
      "in_reply_to_id": 2158804941,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Implemented in df45388b97.\r\n",
      "created_at": "2025-06-21T13:29:03Z",
      "updated_at": "2025-06-21T18:18:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2160039017",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2160039017"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 412,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2160238302",
      "pull_request_review_id": 2948073543,
      "id": 2160238302,
      "node_id": "PRRC_kwDOABII586Awp7e",
      "diff_hunk": "@@ -364,6 +365,92 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, strURIPart, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& strURIPart)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, strURIPart);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uriParts{util::Split<std::string_view>(param, '-')};\n+    if (uriParts.size() != 2) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid URI format: %s\", param));\n+    }\n+\n+    std::optional<uint256> block_hash{uint256::FromHex(uriParts[0])};\n+    if (!block_hash) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid hash: %s\", uriParts[0]));\n+    }\n+\n+    const std::optional<size_t> parsed_index{ToIntegral<size_t>(uriParts[1])};\n+    if (!parsed_index.has_value()) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Transaction index is invalid: %s\", uriParts[1]));\n+    }\n+    const size_t index = *parsed_index;\n+    {\n+        ChainstateManager* maybe_chainman = GetChainman(context, req);\n+        if (!maybe_chainman) return false;\n+        ChainstateManager& chainman = *maybe_chainman;\n+\n+        LOCK(cs_main);\n+        const CBlockIndex* pindex{chainman.m_blockman.LookupBlockIndex(*block_hash)};\n+        if (pindex == nullptr) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not found\", uriParts[0]));\n+        }\n+        if (pindex->nHeight > 0 && !pindex->IsValid(BLOCK_VALID_SCRIPTS)) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not validated\", uriParts[0]));\n+        }\n+        if (index >= pindex->nTx) {\n+            return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Block %s has only %d transactions\", uriParts[0], pindex->nTx));\n+        }\n+    }\n+\n+    const LocationsIndex* locations_index = g_locations_index.get();\n+    if (!locations_index) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, \"Locations index is not enabled\");",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "d962c9a9170c72483ed970918ce3836cf538ec43",
      "in_reply_to_id": 2158804941,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Tested using [the following Testnet4 block](https://mempool.space/testnet4/block/00000000000000047b26e3ef164e30f0475c12408d0ece060f90f722aa90787b):\r\n\r\n# `-locationsindex=1`\r\n\r\n```\r\n$ BLOCKHASH=00000000000000047b26e3ef164e30f0475c12408d0ece060f90f722aa90787b\r\n$ ab -k -c 1 -n 100000 http://localhost:48332/rest/txfromblock/$BLOCKHASH-0.bin\r\n\r\nDocument Path:          /rest/txfromblock/00000000000000047b26e3ef164e30f0475c12408d0ece060f90f722aa90787b-0.bin\r\nDocument Length:        273 bytes\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   2.983 seconds\r\nComplete requests:      100000\r\nFailed requests:        0\r\nKeep-Alive requests:    100000\r\nTotal transferred:      37700000 bytes\r\nHTML transferred:       27300000 bytes\r\nRequests per second:    33527.87 [#/sec] (mean)\r\nTime per request:       0.030 [ms] (mean)\r\nTime per request:       0.030 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          12343.76 [Kbytes/sec] received\r\n\r\n$ ab -k -c 1 -n 100000 http://localhost:48332/rest/txfromblock/$BLOCKHASH-1000.bin\r\n\r\nDocument Path:          /rest/txfromblock/00000000000000047b26e3ef164e30f0475c12408d0ece060f90f722aa90787b-1000.bin\r\nDocument Length:        308 bytes\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   3.122 seconds\r\nComplete requests:      100000\r\nFailed requests:        0\r\nKeep-Alive requests:    100000\r\nTotal transferred:      41200000 bytes\r\nHTML transferred:       30800000 bytes\r\nRequests per second:    32032.96 [#/sec] (mean)\r\nTime per request:       0.031 [ms] (mean)\r\nTime per request:       0.031 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          12888.26 [Kbytes/sec] received\r\n\r\n$ ab -k -c 1 -n 100000 http://localhost:48332/rest/txfromblock/$BLOCKHASH-2000.bin\r\n\r\nDocument Path:          /rest/txfromblock/00000000000000047b26e3ef164e30f0475c12408d0ece060f90f722aa90787b-2000.bin\r\nDocument Length:        308 bytes\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   3.030 seconds\r\nComplete requests:      100000\r\nFailed requests:        0\r\nKeep-Alive requests:    100000\r\nTotal transferred:      41200000 bytes\r\nHTML transferred:       30800000 bytes\r\nRequests per second:    33003.94 [#/sec] (mean)\r\nTime per request:       0.030 [ms] (mean)\r\nTime per request:       0.030 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          13278.93 [Kbytes/sec] received\r\n\r\n$ ab -k -c 1 -n 100000 http://localhost:48332/rest/txfromblock/$BLOCKHASH-3000.bin\r\n\r\nDocument Path:          /rest/txfromblock/00000000000000047b26e3ef164e30f0475c12408d0ece060f90f722aa90787b-3000.bin\r\nDocument Length:        309 bytes\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   3.362 seconds\r\nComplete requests:      100000\r\nFailed requests:        0\r\nKeep-Alive requests:    100000\r\nTotal transferred:      41300000 bytes\r\nHTML transferred:       30900000 bytes\r\nRequests per second:    29745.72 [#/sec] (mean)\r\nTime per request:       0.034 [ms] (mean)\r\nTime per request:       0.034 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          11997.05 [Kbytes/sec] received\r\n\r\n$ ab -k -c 1 -n 100000 http://localhost:48332/rest/txfromblock/$BLOCKHASH-4000.bin\r\n\r\nDocument Path:          /rest/txfromblock/00000000000000047b26e3ef164e30f0475c12408d0ece060f90f722aa90787b-4000.bin\r\nDocument Length:        309 bytes\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   2.854 seconds\r\nComplete requests:      100000\r\nFailed requests:        0\r\nKeep-Alive requests:    100000\r\nTotal transferred:      41300000 bytes\r\nHTML transferred:       30900000 bytes\r\nRequests per second:    35040.53 [#/sec] (mean)\r\nTime per request:       0.029 [ms] (mean)\r\nTime per request:       0.029 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          14132.56 [Kbytes/sec] received\r\n```\r\n\r\n# `-locationsindex=0`\r\n\r\n```\r\n$ ab -k -c 1 -n 100000 http://localhost:48332/rest/txfromblock/$BLOCKHASH-0.bin\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   3.245 seconds\r\nComplete requests:      100000\r\nFailed requests:        0\r\nKeep-Alive requests:    100000\r\nTotal transferred:      37700000 bytes\r\nHTML transferred:       27300000 bytes\r\nRequests per second:    30819.31 [#/sec] (mean)\r\nTime per request:       0.032 [ms] (mean)\r\nTime per request:       0.032 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          11346.56 [Kbytes/sec] received\r\n\r\n$ ab -k -c 1 -n 10000 http://localhost:48332/rest/txfromblock/$BLOCKHASH-1000.bin\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   4.588 seconds\r\nComplete requests:      10000\r\nFailed requests:        0\r\nKeep-Alive requests:    10000\r\nTotal transferred:      4120000 bytes\r\nHTML transferred:       3080000 bytes\r\nRequests per second:    2179.68 [#/sec] (mean)\r\nTime per request:       0.459 [ms] (mean)\r\nTime per request:       0.459 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          876.98 [Kbytes/sec] received\r\n\r\n$ ab -k -c 1 -n 10000 http://localhost:48332/rest/txfromblock/$BLOCKHASH-2000.bin\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   9.388 seconds\r\nComplete requests:      10000\r\nFailed requests:        0\r\nKeep-Alive requests:    10000\r\nTotal transferred:      4120000 bytes\r\nHTML transferred:       3080000 bytes\r\nRequests per second:    1065.20 [#/sec] (mean)\r\nTime per request:       0.939 [ms] (mean)\r\nTime per request:       0.939 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          428.58 [Kbytes/sec] received\r\n\r\n$ ab -k -c 1 -n 10000 http://localhost:48332/rest/txfromblock/$BLOCKHASH-3000.bin\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   12.819 seconds\r\nComplete requests:      10000\r\nFailed requests:        0\r\nKeep-Alive requests:    10000\r\nTotal transferred:      4130000 bytes\r\nHTML transferred:       3090000 bytes\r\nRequests per second:    780.10 [#/sec] (mean)\r\nTime per request:       1.282 [ms] (mean)\r\nTime per request:       1.282 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          314.63 [Kbytes/sec] received\r\n\r\n$ ab -k -c 1 -n 10000 http://localhost:48332/rest/txfromblock/$BLOCKHASH-4000.bin\r\n\r\nConcurrency Level:      1\r\nTime taken for tests:   17.962 seconds\r\nComplete requests:      10000\r\nFailed requests:        0\r\nKeep-Alive requests:    10000\r\nTotal transferred:      4130000 bytes\r\nHTML transferred:       3090000 bytes\r\nRequests per second:    556.73 [#/sec] (mean)\r\nTime per request:       1.796 [ms] (mean)\r\nTime per request:       1.796 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          224.54 [Kbytes/sec] received\r\n```\r\n",
      "created_at": "2025-06-22T06:39:16Z",
      "updated_at": "2025-06-22T06:39:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2160238302",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2160238302"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 412,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2161623385",
      "pull_request_review_id": 2950110966,
      "id": 2161623385,
      "node_id": "PRRC_kwDOABII586A18FZ",
      "diff_hunk": "@@ -1080,6 +1080,119 @@ bool BlockManager::ReadRawBlock(std::vector<std::byte>& block, const FlatFilePos\n     return true;\n }\n \n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});\n+\n+template <typename T>\n+struct SkipVector {\n+    size_t count;\n+    T elem; // use for skipping element-related data\n+\n+    void clear()\n+    {\n+        count = 0;\n+    }\n+\n+    size_t size() const\n+    {\n+        return count;\n+    }\n+\n+    T& operator[](size_t)\n+    {\n+        return elem;\n+    }\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        count = ReadCompactSize(s);\n+        for (size_t i = 0; i < count; ++i) {\n+            s >> elem;\n+        }\n+    }\n+};\n+\n+struct SkipBytes {\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        size_t size = ReadCompactSize(s);\n+        s.ignore(size);\n+    }\n+};\n+\n+struct SkipScriptWitness {\n+    SkipVector<SkipBytes> stack;\n+};\n+\n+struct SkipTxIn {\n+    SkipScriptWitness scriptWitness; // accessed by UnserializeTransaction\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        COutPoint prevout;\n+        SkipBytes scriptSig;\n+        uint32_t nSequence;\n+\n+        s >> prevout >> scriptSig >> nSequence;\n+    }\n+};\n+\n+struct SkipTxOut {\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        CAmount nValue;\n+        SkipBytes scriptPubKey;\n+\n+        s >> nValue >> scriptPubKey;\n+    }\n+};\n+\n+struct SkipTransaction {\n+    SkipVector<SkipTxIn> vin;\n+    SkipVector<SkipTxOut> vout;\n+    uint32_t version;\n+    uint32_t nLockTime;\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        UnserializeTransaction(*this, s, TX_WITH_WITNESS);\n+    }\n+\n+    bool HasWitness() const { return true; }\n+};\n+\n+bool BlockManager::ReadRawTxFromBlock(std::vector<std::byte>& tx_bytes, const FlatFilePos& block_pos, size_t tx_index) const\n+{\n+    AutoFile filein{OpenBlockFile(block_pos, /*fReadOnly=*/true)};\n+    if (filein.IsNull()) {\n+        LogError(\"OpenBlockFile failed for %s while reading raw transaction from block\", block_pos.ToString());\n+        return false;\n+    }\n+\n+    filein.ignore(HEADER_SIZE);\n+    size_t tx_count = ReadCompactSize(filein);\n+    if (tx_index >= tx_count) {\n+        return false;\n+    }\n+\n+    SkipTransaction skip_tx;",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "df45388b97ea4d808256302531d4443526edf794",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "thanks for implementing this idea. Though, at least locally on my system it looks like it didn't improve the end-to-end performance for me, at least not in a significant benchmark.\r\n\r\nSo it seems fine to use the \"normal\" deserialization and even go through a redundant ser-deser loop?\r\n\r\n\r\n```diff\r\ndiff --git a/src/node/blockstorage.cpp b/src/node/blockstorage.cpp\r\nindex a049122894..64cb914cb1 100644\r\n--- a/src/node/blockstorage.cpp\r\n+++ b/src/node/blockstorage.cpp\r\n@@ -1179,17 +1179,14 @@ bool BlockManager::ReadRawTxFromBlock(std::vector<std::byte>& tx_bytes, const Fl\r\n         return false;\r\n     }\r\n \r\n-    SkipTransaction skip_tx;\r\n+    CMutableTransaction skip_tx;\r\n     for (size_t i = 0; i < tx_index; ++i) {\r\n-        filein >> skip_tx;\r\n+        filein >> TX_WITH_WITNESS(skip_tx);\r\n     }\r\n-    int64_t tx_start = filein.tell();\r\n-    filein >> skip_tx;\r\n-    int64_t tx_end = filein.tell();\r\n+        filein >> TX_WITH_WITNESS(skip_tx);\r\n \r\n-    tx_bytes.resize(tx_end - tx_start);\r\n-    filein.seek(tx_start, SEEK_SET);\r\n-    filein.read(tx_bytes);\r\n+    tx_bytes.resize(0);\r\n+    VectorWriter {*(std::vector<unsigned char> *)&tx_bytes,tx_bytes.size()}<<TX_WITH_WITNESS(skip_tx);\r\n     return true;\r\n }\r\n \r\n",
      "created_at": "2025-06-23T13:20:28Z",
      "updated_at": "2025-06-23T13:20:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2161623385",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2161623385"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2161877867",
      "pull_request_review_id": 2950518449,
      "id": 2161877867,
      "node_id": "PRRC_kwDOABII586A26Nr",
      "diff_hunk": "@@ -1080,6 +1080,119 @@ bool BlockManager::ReadRawBlock(std::vector<std::byte>& block, const FlatFilePos\n     return true;\n }\n \n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});\n+\n+template <typename T>\n+struct SkipVector {\n+    size_t count;\n+    T elem; // use for skipping element-related data\n+\n+    void clear()\n+    {\n+        count = 0;\n+    }\n+\n+    size_t size() const\n+    {\n+        return count;\n+    }\n+\n+    T& operator[](size_t)\n+    {\n+        return elem;\n+    }\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        count = ReadCompactSize(s);\n+        for (size_t i = 0; i < count; ++i) {\n+            s >> elem;\n+        }\n+    }\n+};\n+\n+struct SkipBytes {\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        size_t size = ReadCompactSize(s);\n+        s.ignore(size);\n+    }\n+};\n+\n+struct SkipScriptWitness {\n+    SkipVector<SkipBytes> stack;\n+};\n+\n+struct SkipTxIn {\n+    SkipScriptWitness scriptWitness; // accessed by UnserializeTransaction\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        COutPoint prevout;\n+        SkipBytes scriptSig;\n+        uint32_t nSequence;\n+\n+        s >> prevout >> scriptSig >> nSequence;\n+    }\n+};\n+\n+struct SkipTxOut {\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        CAmount nValue;\n+        SkipBytes scriptPubKey;\n+\n+        s >> nValue >> scriptPubKey;\n+    }\n+};\n+\n+struct SkipTransaction {\n+    SkipVector<SkipTxIn> vin;\n+    SkipVector<SkipTxOut> vout;\n+    uint32_t version;\n+    uint32_t nLockTime;\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        UnserializeTransaction(*this, s, TX_WITH_WITNESS);\n+    }\n+\n+    bool HasWitness() const { return true; }\n+};\n+\n+bool BlockManager::ReadRawTxFromBlock(std::vector<std::byte>& tx_bytes, const FlatFilePos& block_pos, size_t tx_index) const\n+{\n+    AutoFile filein{OpenBlockFile(block_pos, /*fReadOnly=*/true)};\n+    if (filein.IsNull()) {\n+        LogError(\"OpenBlockFile failed for %s while reading raw transaction from block\", block_pos.ToString());\n+        return false;\n+    }\n+\n+    filein.ignore(HEADER_SIZE);\n+    size_t tx_count = ReadCompactSize(filein);\n+    if (tx_index >= tx_count) {\n+        return false;\n+    }\n+\n+    SkipTransaction skip_tx;",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "df45388b97ea4d808256302531d4443526edf794",
      "in_reply_to_id": 2161623385,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Wrapping the autofile into `BufferedReader` helped more on my system with reading later transactions in the block via this fallback branch.",
      "created_at": "2025-06-23T15:16:13Z",
      "updated_at": "2025-06-23T15:16:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2161877867",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2161877867"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2162435719",
      "pull_request_review_id": 2951384573,
      "id": 2162435719,
      "node_id": "PRRC_kwDOABII586A5CaH",
      "diff_hunk": "@@ -1080,6 +1080,119 @@ bool BlockManager::ReadRawBlock(std::vector<std::byte>& block, const FlatFilePos\n     return true;\n }\n \n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});\n+\n+template <typename T>\n+struct SkipVector {\n+    size_t count;\n+    T elem; // use for skipping element-related data\n+\n+    void clear()\n+    {\n+        count = 0;\n+    }\n+\n+    size_t size() const\n+    {\n+        return count;\n+    }\n+\n+    T& operator[](size_t)\n+    {\n+        return elem;\n+    }\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        count = ReadCompactSize(s);\n+        for (size_t i = 0; i < count; ++i) {\n+            s >> elem;\n+        }\n+    }\n+};\n+\n+struct SkipBytes {\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        size_t size = ReadCompactSize(s);\n+        s.ignore(size);\n+    }\n+};\n+\n+struct SkipScriptWitness {\n+    SkipVector<SkipBytes> stack;\n+};\n+\n+struct SkipTxIn {\n+    SkipScriptWitness scriptWitness; // accessed by UnserializeTransaction\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        COutPoint prevout;\n+        SkipBytes scriptSig;\n+        uint32_t nSequence;\n+\n+        s >> prevout >> scriptSig >> nSequence;\n+    }\n+};\n+\n+struct SkipTxOut {\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        CAmount nValue;\n+        SkipBytes scriptPubKey;\n+\n+        s >> nValue >> scriptPubKey;\n+    }\n+};\n+\n+struct SkipTransaction {\n+    SkipVector<SkipTxIn> vin;\n+    SkipVector<SkipTxOut> vout;\n+    uint32_t version;\n+    uint32_t nLockTime;\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        UnserializeTransaction(*this, s, TX_WITH_WITNESS);\n+    }\n+\n+    bool HasWitness() const { return true; }\n+};\n+\n+bool BlockManager::ReadRawTxFromBlock(std::vector<std::byte>& tx_bytes, const FlatFilePos& block_pos, size_t tx_index) const\n+{\n+    AutoFile filein{OpenBlockFile(block_pos, /*fReadOnly=*/true)};\n+    if (filein.IsNull()) {\n+        LogError(\"OpenBlockFile failed for %s while reading raw transaction from block\", block_pos.ToString());\n+        return false;\n+    }\n+\n+    filein.ignore(HEADER_SIZE);\n+    size_t tx_count = ReadCompactSize(filein);\n+    if (tx_index >= tx_count) {\n+        return false;\n+    }\n+\n+    SkipTransaction skip_tx;",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "df45388b97ea4d808256302531d4443526edf794",
      "in_reply_to_id": 2161623385,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks! \r\nPlease take a look at https://github.com/bitcoin/bitcoin/pull/32541/commits/99b48777eeb54a11f1f68adae3d273c1a634c3e7.",
      "created_at": "2025-06-23T20:02:53Z",
      "updated_at": "2025-06-23T20:02:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2162435719",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2162435719"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2169518557",
      "pull_request_review_id": 2962834674,
      "id": 2169518557,
      "node_id": "PRRC_kwDOABII586BUDnd",
      "diff_hunk": "@@ -1080,6 +1080,119 @@ bool BlockManager::ReadRawBlock(std::vector<std::byte>& block, const FlatFilePos\n     return true;\n }\n \n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});\n+\n+template <typename T>\n+struct SkipVector {\n+    size_t count;\n+    T elem; // use for skipping element-related data\n+\n+    void clear()\n+    {\n+        count = 0;\n+    }\n+\n+    size_t size() const\n+    {\n+        return count;\n+    }\n+\n+    T& operator[](size_t)\n+    {\n+        return elem;\n+    }\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        count = ReadCompactSize(s);\n+        for (size_t i = 0; i < count; ++i) {\n+            s >> elem;\n+        }\n+    }\n+};\n+\n+struct SkipBytes {\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        size_t size = ReadCompactSize(s);\n+        s.ignore(size);\n+    }\n+};\n+\n+struct SkipScriptWitness {\n+    SkipVector<SkipBytes> stack;\n+};\n+\n+struct SkipTxIn {\n+    SkipScriptWitness scriptWitness; // accessed by UnserializeTransaction\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        COutPoint prevout;\n+        SkipBytes scriptSig;\n+        uint32_t nSequence;\n+\n+        s >> prevout >> scriptSig >> nSequence;\n+    }\n+};\n+\n+struct SkipTxOut {\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        CAmount nValue;\n+        SkipBytes scriptPubKey;\n+\n+        s >> nValue >> scriptPubKey;\n+    }\n+};\n+\n+struct SkipTransaction {\n+    SkipVector<SkipTxIn> vin;\n+    SkipVector<SkipTxOut> vout;\n+    uint32_t version;\n+    uint32_t nLockTime;\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s)\n+    {\n+        UnserializeTransaction(*this, s, TX_WITH_WITNESS);\n+    }\n+\n+    bool HasWitness() const { return true; }\n+};\n+\n+bool BlockManager::ReadRawTxFromBlock(std::vector<std::byte>& tx_bytes, const FlatFilePos& block_pos, size_t tx_index) const\n+{\n+    AutoFile filein{OpenBlockFile(block_pos, /*fReadOnly=*/true)};\n+    if (filein.IsNull()) {\n+        LogError(\"OpenBlockFile failed for %s while reading raw transaction from block\", block_pos.ToString());\n+        return false;\n+    }\n+\n+    filein.ignore(HEADER_SIZE);\n+    size_t tx_count = ReadCompactSize(filein);\n+    if (tx_index >= tx_count) {\n+        return false;\n+    }\n+\n+    SkipTransaction skip_tx;",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "df45388b97ea4d808256302531d4443526edf794",
      "in_reply_to_id": 2161623385,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "# Benchmark results\r\n\r\nTested 99b48777ee using `ab -k -c 1 -n 10000` over [block 900005 (having >5000 txs)](https://mempool.space/block/000000000000000000017bfd05b5fa367a424c4a565a4baf7950d9e8605df8ec).\r\n\r\n```\r\nBLOCKHASH=000000000000000000017bfd05b5fa367a424c4a565a4baf7950d9e8605df8ec\r\n```\r\n\r\n## `-locationsindex=1`\r\n\r\n```\r\nDocument Path:          /rest/txfromblock/$BLOCKHASH-0.bin\r\nDocument Length:        384 bytes\r\nRequests per second:    7387.93 [#/sec] (mean)\r\nTime per request:       0.135 [ms] (mean)\r\n\r\nDocument Path:          /rest/txfromblock/$BLOCKHASH-1000.bin\r\nDocument Length:        234 bytes\r\nRequests per second:    7875.35 [#/sec] (mean)\r\nTime per request:       0.127 [ms] (mean)\r\n\r\nDocument Path:          /rest/txfromblock/$BLOCKHASH-2000.bin\r\nDocument Length:        234 bytes\r\nRequests per second:    7470.15 [#/sec] (mean)\r\nTime per request:       0.134 [ms] (mean)\r\n\r\nDocument Path:          /rest/txfromblock/$BLOCKHASH-3000.bin\r\nDocument Length:        220 bytes\r\nRequests per second:    7102.34 [#/sec] (mean)\r\nTime per request:       0.141 [ms] (mean)\r\n\r\nDocument Path:          /rest/txfromblock/$BLOCKHASH-4000.bin\r\nDocument Length:        221 bytes\r\nRequests per second:    7569.49 [#/sec] (mean)\r\nTime per request:       0.132 [ms] (mean)\r\n\r\nDocument Path:          /rest/txfromblock/$BLOCKHASH-5000.bin\r\nDocument Length:        234 bytes\r\nRequests per second:    7333.99 [#/sec] (mean)\r\nTime per request:       0.136 [ms] (mean)\r\n```\r\n\r\n## `-locationsindex=0`\r\n\r\n```\r\nDocument Path:          /rest/txfromblock/$BLOCKHASH-0.bin\r\nDocument Length:        384 bytes\r\nRequests per second:    4030.87 [#/sec] (mean)\r\nTime per request:       0.248 [ms] (mean)\r\n\r\nDocument Path:          /rest/txfromblock/$BLOCKHASH-1000.bin\r\nDocument Length:        234 bytes\r\nRequests per second:    764.46 [#/sec] (mean)\r\nTime per request:       1.308 [ms] (mean)\r\n\r\nDocument Path:          /rest/txfromblock/$BLOCKHASH-2000.bin\r\nDocument Length:        234 bytes\r\nRequests per second:    526.17 [#/sec] (mean)\r\nTime per request:       1.901 [ms] (mean)\r\n\r\nDocument Path:          /rest/txfromblock/$BLOCKHASH-3000.bin\r\nDocument Length:        220 bytes\r\nRequests per second:    391.21 [#/sec] (mean)\r\nTime per request:       2.556 [ms] (mean)\r\n\r\nDocument Path:          /rest/txfromblock/$BLOCKHASH-4000.bin\r\nDocument Length:        221 bytes\r\nRequests per second:    261.30 [#/sec] (mean)\r\nTime per request:       3.827 [ms] (mean)\r\n\r\nDocument Path:          /rest/txfromblock/$BLOCKHASH-5000.bin\r\nDocument Length:        234 bytes\r\nRequests per second:    208.15 [#/sec] (mean)\r\nTime per request:       4.804 [ms] (mean)\r\n```",
      "created_at": "2025-06-26T17:11:26Z",
      "updated_at": "2025-06-26T17:19:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2169518557",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2169518557"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249347002",
      "pull_request_review_id": 3081181690,
      "id": 2249347002,
      "node_id": "PRRC_kwDOABII586GEk-6",
      "diff_hunk": "@@ -1080,6 +1080,32 @@ bool BlockManager::ReadRawBlock(std::vector<std::byte>& block, const FlatFilePos\n     return true;\n }\n \n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "784459ac79a89f591eb52a4c6c266c421ca8baec",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Unused variable. Was this supposed to be used to skip forward in the stream instead of deserializing the header?",
      "created_at": "2025-08-02T18:25:53Z",
      "updated_at": "2025-08-02T21:19:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249347002",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249347002"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1083,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249348139",
      "pull_request_review_id": 3081181690,
      "id": 2249348139,
      "node_id": "PRRC_kwDOABII586GElQr",
      "diff_hunk": "@@ -0,0 +1,143 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <map>\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t part; // allow splitting one block's transactions into multiple DB rows\n+\n+    explicit DBKey(const uint256& hash_in, uint32_t part_in) : hash(hash_in), part(part_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_BLOCK_HASH};\n+        READWRITE(prefix);\n+        if (prefix != DB_BLOCK_HASH) {\n+            throw std::ios_base::failure(\"Invalid format for location index DB hash key\");\n+        }\n+\n+        READWRITE(obj.hash);\n+        READWRITE(COMPACTSIZE(obj.part));\n+    }\n+};\n+\n+struct DBValue {\n+    FlatFilePos block_pos;\n+    std::vector<uint32_t> offsets{};\n+\n+    SERIALIZE_METHODS(DBValue, obj)\n+    {\n+        READWRITE(obj.block_pos);\n+        READWRITE(Using<VectorFormatter<DifferenceFormatter>>(obj.offsets));\n+    }\n+};\n+\n+}; // namespace\n+\n+std::unique_ptr<LocationsIndex> g_locations_index;\n+\n+LocationsIndex::LocationsIndex(std::unique_ptr<interfaces::Chain> chain,\n+                               size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"locationsindex\")\n+{\n+    fs::path path = gArgs.GetDataDirNet() / \"indexes\" / \"locations\";\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<BaseIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+}\n+\n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});",
      "path": "src/index/locationsindex.cpp",
      "position": null,
      "original_position": 70,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would prefer it be moved to function-local scope so we don't add any startup time for those who never enable -locationsindex or use the REST interface.",
      "created_at": "2025-08-02T18:29:01Z",
      "updated_at": "2025-08-02T21:19:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249348139",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249348139"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249349229",
      "pull_request_review_id": 3081181690,
      "id": 2249349229,
      "node_id": "PRRC_kwDOABII586GElht",
      "diff_hunk": "@@ -36,6 +36,14 @@ Responds with 404 if the transaction doesn't exist.\n By default, this endpoint will only search the mempool.\n To query for a confirmed transaction, enable the transaction index via \"txindex=1\" command line / configuration option.\n \n+`GET /rest/txfromblock/<BLOCK-HASH>-<TX-OFFSET>.<bin|hex|json>`\n+\n+Given a block hash and transaction offset within it: returns a transaction in binary, hex-encoded binary, or JSON formats.\n+Responds with 404 if the transaction doesn't exist.\n+\n+By default, this endpoint will read also the leading transactions, before reading and returning the requested one.",
      "path": "doc/REST-interface.md",
      "position": null,
      "original_position": 9,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:\r\n* Improved order?\r\n* Clarify that wasted work is being done.\r\n```suggestion\r\nBy default, this endpoint will also deserialize the leading transactions, before reading and returning the requested one.\r\n```",
      "created_at": "2025-08-02T18:33:48Z",
      "updated_at": "2025-08-02T21:19:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249349229",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249349229"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249350168",
      "pull_request_review_id": 3081181690,
      "id": 2249350168,
      "node_id": "PRRC_kwDOABII586GElwY",
      "diff_hunk": "@@ -0,0 +1,143 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <map>",
      "path": "src/index/locationsindex.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Please order std library headers last. Seems unused though.",
      "created_at": "2025-08-02T18:37:49Z",
      "updated_at": "2025-08-02T21:19:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249350168",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249350168"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249355515",
      "pull_request_review_id": 3081181690,
      "id": 2249355515,
      "node_id": "PRRC_kwDOABII586GEnD7",
      "diff_hunk": "@@ -472,6 +473,111 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, uri_part, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& uri_part)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, uri_part);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uriParts{util::Split<std::string_view>(param, '-')};\n+    if (uriParts.size() != 2) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid URI format: %s\", param));\n+    }\n+\n+    std::optional<uint256> block_hash{uint256::FromHex(uriParts[0])};\n+    if (!block_hash) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid hash: %s\", uriParts[0]));\n+    }\n+\n+    const std::optional<size_t> parsed_index{ToIntegral<size_t>(uriParts[1])};\n+    if (!parsed_index.has_value()) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Transaction index is invalid: %s\", uriParts[1]));\n+    }\n+    const size_t index = *parsed_index;\n+\n+    ChainstateManager* maybe_chainman = GetChainman(context, req);\n+    if (!maybe_chainman) return false;\n+    ChainstateManager& chainman = *maybe_chainman;\n+\n+    FlatFilePos block_pos{};\n+    {\n+        LOCK(cs_main);\n+        const CBlockIndex* pindex{chainman.m_blockman.LookupBlockIndex(*block_hash)};\n+        if (pindex == nullptr) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not found\", uriParts[0]));\n+        }\n+        if (pindex->nHeight > 0 && !pindex->IsValid(BLOCK_VALID_SCRIPTS)) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not validated\", uriParts[0]));\n+        }\n+        if (index >= pindex->nTx) {\n+            return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Block %s has only %d transactions\", uriParts[0], pindex->nTx));\n+        }\n+        block_pos = pindex->GetBlockPos();\n+    }",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 55,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We can skip this work if `LocationsIndex` is enabled as it doesn't use `block_pos`.",
      "created_at": "2025-08-02T18:50:08Z",
      "updated_at": "2025-08-02T21:19:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249355515",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249355515"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": 505,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 524,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249356202",
      "pull_request_review_id": 3081181690,
      "id": 2249356202,
      "node_id": "PRRC_kwDOABII586GEnOq",
      "diff_hunk": "@@ -472,6 +473,111 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, uri_part, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& uri_part)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, uri_part);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uriParts{util::Split<std::string_view>(param, '-')};\n+    if (uriParts.size() != 2) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid URI format: %s\", param));\n+    }\n+\n+    std::optional<uint256> block_hash{uint256::FromHex(uriParts[0])};\n+    if (!block_hash) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid hash: %s\", uriParts[0]));\n+    }\n+\n+    const std::optional<size_t> parsed_index{ToIntegral<size_t>(uriParts[1])};\n+    if (!parsed_index.has_value()) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Transaction index is invalid: %s\", uriParts[1]));\n+    }\n+    const size_t index = *parsed_index;\n+\n+    ChainstateManager* maybe_chainman = GetChainman(context, req);\n+    if (!maybe_chainman) return false;\n+    ChainstateManager& chainman = *maybe_chainman;\n+\n+    FlatFilePos block_pos{};\n+    {\n+        LOCK(cs_main);\n+        const CBlockIndex* pindex{chainman.m_blockman.LookupBlockIndex(*block_hash)};\n+        if (pindex == nullptr) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not found\", uriParts[0]));\n+        }\n+        if (pindex->nHeight > 0 && !pindex->IsValid(BLOCK_VALID_SCRIPTS)) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not validated\", uriParts[0]));\n+        }\n+        if (index >= pindex->nTx) {\n+            return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Block %s has only %d transactions\", uriParts[0], pindex->nTx));\n+        }\n+        block_pos = pindex->GetBlockPos();\n+    }\n+\n+    CTransactionRef tx{};\n+    std::vector<std::byte> tx_bytes{};\n+    bool success{false};\n+    const LocationsIndex* locations_index = g_locations_index.get();\n+    if (!locations_index) {\n+        // Read full block and skip irrelevant transactions\n+        success = chainman.m_blockman.ReadTxFromBlock(tx, block_pos, index);\n+    } else {\n+        if (!locations_index->BlockUntilSyncedToCurrentChain()) {\n+            RESTERR(req, HTTP_SERVICE_UNAVAILABLE, \"Locations index is still syncing\");\n+        }\n+        success = locations_index->ReadRawTransaction(*block_hash, index, tx_bytes);\n+    }\n+\n+    if (!success) {\n+        return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Failed to read transaction #%d from block %s\", index, (*block_hash).ToString()));",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 72,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:\r\n```suggestion\r\n        return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Failed to read transaction #%d from block %s\", index, block_hash->ToString()));\r\n```",
      "created_at": "2025-08-02T18:52:20Z",
      "updated_at": "2025-08-02T21:19:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249356202",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249356202"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 536,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249370232",
      "pull_request_review_id": 3081181690,
      "id": 2249370232,
      "node_id": "PRRC_kwDOABII586GEqp4",
      "diff_hunk": "@@ -0,0 +1,143 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <map>\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t part; // allow splitting one block's transactions into multiple DB rows",
      "path": "src/index/locationsindex.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Might be less confusing to use \"row\" everywhere here instead of \"part\"?",
      "created_at": "2025-08-02T19:37:56Z",
      "updated_at": "2025-08-02T21:19:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249370232",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249370232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249370654",
      "pull_request_review_id": 3081181690,
      "id": 2249370654,
      "node_id": "PRRC_kwDOABII586GEqwe",
      "diff_hunk": "@@ -0,0 +1,143 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <map>\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t part; // allow splitting one block's transactions into multiple DB rows\n+\n+    explicit DBKey(const uint256& hash_in, uint32_t part_in) : hash(hash_in), part(part_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_BLOCK_HASH};\n+        READWRITE(prefix);\n+        if (prefix != DB_BLOCK_HASH) {\n+            throw std::ios_base::failure(\"Invalid format for location index DB hash key\");\n+        }\n+\n+        READWRITE(obj.hash);\n+        READWRITE(COMPACTSIZE(obj.part));\n+    }\n+};\n+\n+struct DBValue {\n+    FlatFilePos block_pos;\n+    std::vector<uint32_t> offsets{};\n+\n+    SERIALIZE_METHODS(DBValue, obj)\n+    {\n+        READWRITE(obj.block_pos);\n+        READWRITE(Using<VectorFormatter<DifferenceFormatter>>(obj.offsets));\n+    }\n+};\n+\n+}; // namespace\n+\n+std::unique_ptr<LocationsIndex> g_locations_index;\n+\n+LocationsIndex::LocationsIndex(std::unique_ptr<interfaces::Chain> chain,\n+                               size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"locationsindex\")\n+{\n+    fs::path path = gArgs.GetDataDirNet() / \"indexes\" / \"locations\";\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<BaseIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+}\n+\n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});\n+\n+bool LocationsIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    assert(block.data);\n+    assert(block.file_number >= 0);\n+\n+    const uint32_t nTx = block.data->vtx.size();\n+    uint32_t nTxOffset = HEADER_SIZE + GetSizeOfCompactSize(nTx);\n+\n+    std::vector<uint32_t> block_offsets{};\n+    block_offsets.reserve(nTx + 1);\n+    block_offsets.push_back(nTxOffset); // first transaction offset within the block\n+\n+    for (const auto& tx : block.data->vtx) {\n+        nTxOffset += ::GetSerializeSize(TX_WITH_WITNESS(*tx));\n+        block_offsets.push_back(nTxOffset);\n+    }\n+\n+    CDBBatch batch{GetDB()};\n+    uint32_t copied = 0;\n+    for (uint32_t part = 0; copied < nTx; ++part) {\n+        size_t part_size = std::min(nTx - copied, TXS_PER_ROW);\n+        std::span<uint32_t> part_offsets{&block_offsets[copied], part_size + 1};\n+\n+        DBKey key{block.hash, part};\n+        DBValue value{{block.file_number, block.data_pos}, {part_offsets.begin(), part_offsets.end()}};\n+\n+        copied += part_size;\n+        batch.Write(key, value);\n+    }\n+    return GetDB().WriteBatch(batch);\n+}\n+\n+bool LocationsIndex::ReadRawTransaction(const uint256& block_hash, size_t i, std::vector<std::byte>& out) const\n+{\n+    uint32_t part = i / TXS_PER_ROW; // used to find the correct DB row\n+    i = i % TXS_PER_ROW;             // index within a single DB row",
      "path": "src/index/locationsindex.cpp",
      "position": null,
      "original_position": 107,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Could use local variable with descriptive name rather than mutating in-param:\r\n```suggestion\r\n    const auto column = i % TXS_PER_ROW;             // index within a single DB row\r\n```",
      "created_at": "2025-08-02T19:39:15Z",
      "updated_at": "2025-08-02T21:19:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249370654",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249370654"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249371490",
      "pull_request_review_id": 3081181690,
      "id": 2249371490,
      "node_id": "PRRC_kwDOABII586GEq9i",
      "diff_hunk": "@@ -0,0 +1,143 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <map>\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t part; // allow splitting one block's transactions into multiple DB rows\n+\n+    explicit DBKey(const uint256& hash_in, uint32_t part_in) : hash(hash_in), part(part_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_BLOCK_HASH};\n+        READWRITE(prefix);\n+        if (prefix != DB_BLOCK_HASH) {\n+            throw std::ios_base::failure(\"Invalid format for location index DB hash key\");\n+        }\n+\n+        READWRITE(obj.hash);\n+        READWRITE(COMPACTSIZE(obj.part));\n+    }\n+};\n+\n+struct DBValue {\n+    FlatFilePos block_pos;\n+    std::vector<uint32_t> offsets{};\n+\n+    SERIALIZE_METHODS(DBValue, obj)\n+    {\n+        READWRITE(obj.block_pos);\n+        READWRITE(Using<VectorFormatter<DifferenceFormatter>>(obj.offsets));\n+    }\n+};\n+\n+}; // namespace\n+\n+std::unique_ptr<LocationsIndex> g_locations_index;\n+\n+LocationsIndex::LocationsIndex(std::unique_ptr<interfaces::Chain> chain,\n+                               size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"locationsindex\")\n+{\n+    fs::path path = gArgs.GetDataDirNet() / \"indexes\" / \"locations\";\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<BaseIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+}\n+\n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});\n+\n+bool LocationsIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    assert(block.data);\n+    assert(block.file_number >= 0);\n+\n+    const uint32_t nTx = block.data->vtx.size();\n+    uint32_t nTxOffset = HEADER_SIZE + GetSizeOfCompactSize(nTx);\n+\n+    std::vector<uint32_t> block_offsets{};\n+    block_offsets.reserve(nTx + 1);\n+    block_offsets.push_back(nTxOffset); // first transaction offset within the block\n+\n+    for (const auto& tx : block.data->vtx) {\n+        nTxOffset += ::GetSerializeSize(TX_WITH_WITNESS(*tx));\n+        block_offsets.push_back(nTxOffset);\n+    }\n+\n+    CDBBatch batch{GetDB()};\n+    uint32_t copied = 0;\n+    for (uint32_t part = 0; copied < nTx; ++part) {\n+        size_t part_size = std::min(nTx - copied, TXS_PER_ROW);\n+        std::span<uint32_t> part_offsets{&block_offsets[copied], part_size + 1};\n+\n+        DBKey key{block.hash, part};\n+        DBValue value{{block.file_number, block.data_pos}, {part_offsets.begin(), part_offsets.end()}};\n+\n+        copied += part_size;\n+        batch.Write(key, value);\n+    }\n+    return GetDB().WriteBatch(batch);\n+}\n+\n+bool LocationsIndex::ReadRawTransaction(const uint256& block_hash, size_t i, std::vector<std::byte>& out) const\n+{\n+    uint32_t part = i / TXS_PER_ROW; // used to find the correct DB row\n+    i = i % TXS_PER_ROW;             // index within a single DB row\n+\n+    DBValue value{};\n+    if (!m_db->Read(DBKey{block_hash, part}, value)) {\n+        return false;\n+    }\n+\n+    if (value.offsets.empty()) {\n+        LogError(\"%s: LocationsIndex entry for %s:%u must have >1 offsets\\n\", __func__, block_hash.ToString(), part);\n+        return false;\n+    }\n+    size_t nTx = value.offsets.size() - 1;",
      "path": "src/index/locationsindex.cpp",
      "position": null,
      "original_position": 118,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Should use snake_case naming convention as per developer-notes.md, `n_tx`/`num_tx`/`tx_count`?",
      "created_at": "2025-08-02T19:42:00Z",
      "updated_at": "2025-08-02T21:19:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249371490",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249371490"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249373267",
      "pull_request_review_id": 3081181690,
      "id": 2249373267,
      "node_id": "PRRC_kwDOABII586GErZT",
      "diff_hunk": "@@ -0,0 +1,143 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <map>\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t part; // allow splitting one block's transactions into multiple DB rows\n+\n+    explicit DBKey(const uint256& hash_in, uint32_t part_in) : hash(hash_in), part(part_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_BLOCK_HASH};\n+        READWRITE(prefix);\n+        if (prefix != DB_BLOCK_HASH) {\n+            throw std::ios_base::failure(\"Invalid format for location index DB hash key\");\n+        }\n+\n+        READWRITE(obj.hash);\n+        READWRITE(COMPACTSIZE(obj.part));\n+    }\n+};\n+\n+struct DBValue {\n+    FlatFilePos block_pos;\n+    std::vector<uint32_t> offsets{};\n+\n+    SERIALIZE_METHODS(DBValue, obj)\n+    {\n+        READWRITE(obj.block_pos);\n+        READWRITE(Using<VectorFormatter<DifferenceFormatter>>(obj.offsets));\n+    }\n+};\n+\n+}; // namespace\n+\n+std::unique_ptr<LocationsIndex> g_locations_index;\n+\n+LocationsIndex::LocationsIndex(std::unique_ptr<interfaces::Chain> chain,\n+                               size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"locationsindex\")\n+{\n+    fs::path path = gArgs.GetDataDirNet() / \"indexes\" / \"locations\";\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<BaseIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+}\n+\n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});\n+\n+bool LocationsIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    assert(block.data);\n+    assert(block.file_number >= 0);\n+\n+    const uint32_t nTx = block.data->vtx.size();\n+    uint32_t nTxOffset = HEADER_SIZE + GetSizeOfCompactSize(nTx);\n+\n+    std::vector<uint32_t> block_offsets{};\n+    block_offsets.reserve(nTx + 1);\n+    block_offsets.push_back(nTxOffset); // first transaction offset within the block\n+\n+    for (const auto& tx : block.data->vtx) {\n+        nTxOffset += ::GetSerializeSize(TX_WITH_WITNESS(*tx));\n+        block_offsets.push_back(nTxOffset);\n+    }\n+\n+    CDBBatch batch{GetDB()};\n+    uint32_t copied = 0;\n+    for (uint32_t part = 0; copied < nTx; ++part) {\n+        size_t part_size = std::min(nTx - copied, TXS_PER_ROW);\n+        std::span<uint32_t> part_offsets{&block_offsets[copied], part_size + 1};\n+\n+        DBKey key{block.hash, part};\n+        DBValue value{{block.file_number, block.data_pos}, {part_offsets.begin(), part_offsets.end()}};\n+\n+        copied += part_size;\n+        batch.Write(key, value);\n+    }\n+    return GetDB().WriteBatch(batch);\n+}\n+\n+bool LocationsIndex::ReadRawTransaction(const uint256& block_hash, size_t i, std::vector<std::byte>& out) const\n+{\n+    uint32_t part = i / TXS_PER_ROW; // used to find the correct DB row\n+    i = i % TXS_PER_ROW;             // index within a single DB row\n+\n+    DBValue value{};\n+    if (!m_db->Read(DBKey{block_hash, part}, value)) {\n+        return false;\n+    }\n+\n+    if (value.offsets.empty()) {",
      "path": "src/index/locationsindex.cpp",
      "position": null,
      "original_position": 114,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Off-by-one - should match error message and later code:\r\n```suggestion\r\n    if (value.offsets.size() < 2) {\r\n```",
      "created_at": "2025-08-02T19:48:39Z",
      "updated_at": "2025-08-02T21:19:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249373267",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249373267"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249374257",
      "pull_request_review_id": 3081181690,
      "id": 2249374257,
      "node_id": "PRRC_kwDOABII586GErox",
      "diff_hunk": "@@ -0,0 +1,41 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INDEX_LOCATIONSINDEX_H\n+#define BITCOIN_INDEX_LOCATIONSINDEX_H\n+\n+#include <attributes.h>\n+#include <chain.h>\n+#include <flatfile.h>",
      "path": "src/index/locationsindex.h",
      "position": null,
      "original_position": 10,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Unused header.",
      "created_at": "2025-08-02T19:51:19Z",
      "updated_at": "2025-08-02T21:19:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249374257",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249374257"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249388983",
      "pull_request_review_id": 3081181690,
      "id": 2249388983,
      "node_id": "PRRC_kwDOABII586GEvO3",
      "diff_hunk": "@@ -0,0 +1,105 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <addresstype.h>\n+#include <chainparams.h>\n+#include <index/locationsindex.h>\n+#include <interfaces/chain.h>\n+#include <sync.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_AUTO_TEST_SUITE(locationsindex_tests)\n+\n+struct LocationsIndexSetup : public TestChain100Setup {\n+    LocationsIndex index;\n+\n+    LocationsIndexSetup() : index(interfaces::MakeChain(m_node), 1 << 20, true)\n+    {\n+        BOOST_REQUIRE(index.Init());\n+    }\n+\n+    CTransactionRef ReadTransaction(const uint256& block_hash, size_t i)\n+    {\n+        std::vector<std::byte> out;\n+        if (!index.ReadRawTransaction(block_hash, i, out)) {\n+            return nullptr;\n+        }\n+        CTransactionRef tx;\n+        DataStream ssTx(out);\n+        ssTx >> TX_WITH_WITNESS(tx);\n+        return tx;\n+    }\n+\n+    CTransactionRef ReadTransactionFallback(FlatFilePos block_pos, size_t i)\n+    {\n+        CTransactionRef tx{};\n+        if (!m_node.chainman->m_blockman.ReadTxFromBlock(tx, block_pos, i)) {\n+            return nullptr;\n+        }\n+        return tx;\n+    }\n+};\n+\n+\n+BOOST_FIXTURE_TEST_CASE(index_initial_sync, LocationsIndexSetup)\n+{\n+    // Transaction should not be found in the index before it is started.\n+    BOOST_CHECK(!ReadTransaction(Params().GenesisBlock().GetHash(), 0));\n+\n+    // BlockUntilSyncedToCurrentChain should return false before index is started.\n+    BOOST_CHECK(!index.BlockUntilSyncedToCurrentChain());\n+\n+    index.Sync();\n+\n+    // Check that index includes all mined transactions.\n+    const CBlockIndex* tip = WITH_LOCK(cs_main, return m_node.chainman->ActiveTip());\n+    BOOST_REQUIRE(tip);\n+    while (tip) {\n+        uint256 block_hash = tip->GetBlockHash();\n+        CBlockIndex* block_index{nullptr};\n+        FlatFilePos block_pos{};\n+        {\n+            LOCK(cs_main);\n+            block_index = m_node.chainman->m_blockman.LookupBlockIndex(block_hash);\n+            block_pos = block_index->GetBlockPos();\n+        }\n+        BOOST_REQUIRE(block_index);",
      "path": "src/test/locationsindex_tests.cpp",
      "position": null,
      "original_position": 70,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Do we need to fetch a second `CBlockIndex`? This passes the test:\r\n```suggestion\r\n        FlatFilePos block_pos{WITH_LOCK(cs_main, return tip->GetBlockPos())};\r\n```",
      "created_at": "2025-08-02T20:42:45Z",
      "updated_at": "2025-08-02T21:19:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249388983",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249388983"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": 63,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249608455",
      "pull_request_review_id": 3081763836,
      "id": 2249608455,
      "node_id": "PRRC_kwDOABII586GFk0H",
      "diff_hunk": "@@ -0,0 +1,105 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <addresstype.h>\n+#include <chainparams.h>\n+#include <index/locationsindex.h>\n+#include <interfaces/chain.h>\n+#include <sync.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_AUTO_TEST_SUITE(locationsindex_tests)\n+\n+struct LocationsIndexSetup : public TestChain100Setup {\n+    LocationsIndex index;\n+\n+    LocationsIndexSetup() : index(interfaces::MakeChain(m_node), 1 << 20, true)\n+    {\n+        BOOST_REQUIRE(index.Init());\n+    }\n+\n+    CTransactionRef ReadTransaction(const uint256& block_hash, size_t i)\n+    {\n+        std::vector<std::byte> out;\n+        if (!index.ReadRawTransaction(block_hash, i, out)) {\n+            return nullptr;\n+        }\n+        CTransactionRef tx;\n+        DataStream ssTx(out);\n+        ssTx >> TX_WITH_WITNESS(tx);\n+        return tx;\n+    }\n+\n+    CTransactionRef ReadTransactionFallback(FlatFilePos block_pos, size_t i)\n+    {\n+        CTransactionRef tx{};\n+        if (!m_node.chainman->m_blockman.ReadTxFromBlock(tx, block_pos, i)) {\n+            return nullptr;\n+        }\n+        return tx;\n+    }\n+};\n+\n+\n+BOOST_FIXTURE_TEST_CASE(index_initial_sync, LocationsIndexSetup)\n+{\n+    // Transaction should not be found in the index before it is started.\n+    BOOST_CHECK(!ReadTransaction(Params().GenesisBlock().GetHash(), 0));\n+\n+    // BlockUntilSyncedToCurrentChain should return false before index is started.\n+    BOOST_CHECK(!index.BlockUntilSyncedToCurrentChain());\n+\n+    index.Sync();\n+\n+    // Check that index includes all mined transactions.\n+    const CBlockIndex* tip = WITH_LOCK(cs_main, return m_node.chainman->ActiveTip());\n+    BOOST_REQUIRE(tip);\n+    while (tip) {\n+        uint256 block_hash = tip->GetBlockHash();\n+        CBlockIndex* block_index{nullptr};\n+        FlatFilePos block_pos{};\n+        {\n+            LOCK(cs_main);\n+            block_index = m_node.chainman->m_blockman.LookupBlockIndex(block_hash);\n+            block_pos = block_index->GetBlockPos();\n+        }\n+        BOOST_REQUIRE(block_index);",
      "path": "src/test/locationsindex_tests.cpp",
      "position": null,
      "original_position": 70,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": 2249388983,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You're right, thanks - removed the unneeded code and renamed `tip` to `block_index`.",
      "created_at": "2025-08-03T06:34:24Z",
      "updated_at": "2025-08-03T06:34:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249608455",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249608455"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": 63,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249617802",
      "pull_request_review_id": 3081777976,
      "id": 2249617802,
      "node_id": "PRRC_kwDOABII586GFnGK",
      "diff_hunk": "@@ -0,0 +1,41 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INDEX_LOCATIONSINDEX_H\n+#define BITCOIN_INDEX_LOCATIONSINDEX_H\n+\n+#include <attributes.h>\n+#include <chain.h>\n+#include <flatfile.h>",
      "path": "src/index/locationsindex.h",
      "position": null,
      "original_position": 10,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": 2249374257,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed.",
      "created_at": "2025-08-03T06:42:40Z",
      "updated_at": "2025-08-03T06:42:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249617802",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249617802"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249617820",
      "pull_request_review_id": 3081778004,
      "id": 2249617820,
      "node_id": "PRRC_kwDOABII586GFnGc",
      "diff_hunk": "@@ -0,0 +1,143 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <map>\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t part; // allow splitting one block's transactions into multiple DB rows\n+\n+    explicit DBKey(const uint256& hash_in, uint32_t part_in) : hash(hash_in), part(part_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_BLOCK_HASH};\n+        READWRITE(prefix);\n+        if (prefix != DB_BLOCK_HASH) {\n+            throw std::ios_base::failure(\"Invalid format for location index DB hash key\");\n+        }\n+\n+        READWRITE(obj.hash);\n+        READWRITE(COMPACTSIZE(obj.part));\n+    }\n+};\n+\n+struct DBValue {\n+    FlatFilePos block_pos;\n+    std::vector<uint32_t> offsets{};\n+\n+    SERIALIZE_METHODS(DBValue, obj)\n+    {\n+        READWRITE(obj.block_pos);\n+        READWRITE(Using<VectorFormatter<DifferenceFormatter>>(obj.offsets));\n+    }\n+};\n+\n+}; // namespace\n+\n+std::unique_ptr<LocationsIndex> g_locations_index;\n+\n+LocationsIndex::LocationsIndex(std::unique_ptr<interfaces::Chain> chain,\n+                               size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"locationsindex\")\n+{\n+    fs::path path = gArgs.GetDataDirNet() / \"indexes\" / \"locations\";\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<BaseIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+}\n+\n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});\n+\n+bool LocationsIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    assert(block.data);\n+    assert(block.file_number >= 0);\n+\n+    const uint32_t nTx = block.data->vtx.size();\n+    uint32_t nTxOffset = HEADER_SIZE + GetSizeOfCompactSize(nTx);\n+\n+    std::vector<uint32_t> block_offsets{};\n+    block_offsets.reserve(nTx + 1);\n+    block_offsets.push_back(nTxOffset); // first transaction offset within the block\n+\n+    for (const auto& tx : block.data->vtx) {\n+        nTxOffset += ::GetSerializeSize(TX_WITH_WITNESS(*tx));\n+        block_offsets.push_back(nTxOffset);\n+    }\n+\n+    CDBBatch batch{GetDB()};\n+    uint32_t copied = 0;\n+    for (uint32_t part = 0; copied < nTx; ++part) {\n+        size_t part_size = std::min(nTx - copied, TXS_PER_ROW);\n+        std::span<uint32_t> part_offsets{&block_offsets[copied], part_size + 1};\n+\n+        DBKey key{block.hash, part};\n+        DBValue value{{block.file_number, block.data_pos}, {part_offsets.begin(), part_offsets.end()}};\n+\n+        copied += part_size;\n+        batch.Write(key, value);\n+    }\n+    return GetDB().WriteBatch(batch);\n+}\n+\n+bool LocationsIndex::ReadRawTransaction(const uint256& block_hash, size_t i, std::vector<std::byte>& out) const\n+{\n+    uint32_t part = i / TXS_PER_ROW; // used to find the correct DB row\n+    i = i % TXS_PER_ROW;             // index within a single DB row\n+\n+    DBValue value{};\n+    if (!m_db->Read(DBKey{block_hash, part}, value)) {\n+        return false;\n+    }\n+\n+    if (value.offsets.empty()) {",
      "path": "src/index/locationsindex.cpp",
      "position": null,
      "original_position": 114,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": 2249373267,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good catch, thanks!",
      "created_at": "2025-08-03T06:42:44Z",
      "updated_at": "2025-08-03T06:42:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249617820",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249617820"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249617848",
      "pull_request_review_id": 3081778031,
      "id": 2249617848,
      "node_id": "PRRC_kwDOABII586GFnG4",
      "diff_hunk": "@@ -0,0 +1,143 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <map>\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t part; // allow splitting one block's transactions into multiple DB rows\n+\n+    explicit DBKey(const uint256& hash_in, uint32_t part_in) : hash(hash_in), part(part_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_BLOCK_HASH};\n+        READWRITE(prefix);\n+        if (prefix != DB_BLOCK_HASH) {\n+            throw std::ios_base::failure(\"Invalid format for location index DB hash key\");\n+        }\n+\n+        READWRITE(obj.hash);\n+        READWRITE(COMPACTSIZE(obj.part));\n+    }\n+};\n+\n+struct DBValue {\n+    FlatFilePos block_pos;\n+    std::vector<uint32_t> offsets{};\n+\n+    SERIALIZE_METHODS(DBValue, obj)\n+    {\n+        READWRITE(obj.block_pos);\n+        READWRITE(Using<VectorFormatter<DifferenceFormatter>>(obj.offsets));\n+    }\n+};\n+\n+}; // namespace\n+\n+std::unique_ptr<LocationsIndex> g_locations_index;\n+\n+LocationsIndex::LocationsIndex(std::unique_ptr<interfaces::Chain> chain,\n+                               size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"locationsindex\")\n+{\n+    fs::path path = gArgs.GetDataDirNet() / \"indexes\" / \"locations\";\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<BaseIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+}\n+\n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});\n+\n+bool LocationsIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    assert(block.data);\n+    assert(block.file_number >= 0);\n+\n+    const uint32_t nTx = block.data->vtx.size();\n+    uint32_t nTxOffset = HEADER_SIZE + GetSizeOfCompactSize(nTx);\n+\n+    std::vector<uint32_t> block_offsets{};\n+    block_offsets.reserve(nTx + 1);\n+    block_offsets.push_back(nTxOffset); // first transaction offset within the block\n+\n+    for (const auto& tx : block.data->vtx) {\n+        nTxOffset += ::GetSerializeSize(TX_WITH_WITNESS(*tx));\n+        block_offsets.push_back(nTxOffset);\n+    }\n+\n+    CDBBatch batch{GetDB()};\n+    uint32_t copied = 0;\n+    for (uint32_t part = 0; copied < nTx; ++part) {\n+        size_t part_size = std::min(nTx - copied, TXS_PER_ROW);\n+        std::span<uint32_t> part_offsets{&block_offsets[copied], part_size + 1};\n+\n+        DBKey key{block.hash, part};\n+        DBValue value{{block.file_number, block.data_pos}, {part_offsets.begin(), part_offsets.end()}};\n+\n+        copied += part_size;\n+        batch.Write(key, value);\n+    }\n+    return GetDB().WriteBatch(batch);\n+}\n+\n+bool LocationsIndex::ReadRawTransaction(const uint256& block_hash, size_t i, std::vector<std::byte>& out) const\n+{\n+    uint32_t part = i / TXS_PER_ROW; // used to find the correct DB row\n+    i = i % TXS_PER_ROW;             // index within a single DB row\n+\n+    DBValue value{};\n+    if (!m_db->Read(DBKey{block_hash, part}, value)) {\n+        return false;\n+    }\n+\n+    if (value.offsets.empty()) {\n+        LogError(\"%s: LocationsIndex entry for %s:%u must have >1 offsets\\n\", __func__, block_hash.ToString(), part);\n+        return false;\n+    }\n+    size_t nTx = value.offsets.size() - 1;",
      "path": "src/index/locationsindex.cpp",
      "position": null,
      "original_position": 118,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": 2249371490,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks - renamed to `tx_count`.",
      "created_at": "2025-08-03T06:42:46Z",
      "updated_at": "2025-08-03T06:42:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249617848",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249617848"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249617854",
      "pull_request_review_id": 3081778040,
      "id": 2249617854,
      "node_id": "PRRC_kwDOABII586GFnG-",
      "diff_hunk": "@@ -0,0 +1,143 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <map>\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t part; // allow splitting one block's transactions into multiple DB rows\n+\n+    explicit DBKey(const uint256& hash_in, uint32_t part_in) : hash(hash_in), part(part_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_BLOCK_HASH};\n+        READWRITE(prefix);\n+        if (prefix != DB_BLOCK_HASH) {\n+            throw std::ios_base::failure(\"Invalid format for location index DB hash key\");\n+        }\n+\n+        READWRITE(obj.hash);\n+        READWRITE(COMPACTSIZE(obj.part));\n+    }\n+};\n+\n+struct DBValue {\n+    FlatFilePos block_pos;\n+    std::vector<uint32_t> offsets{};\n+\n+    SERIALIZE_METHODS(DBValue, obj)\n+    {\n+        READWRITE(obj.block_pos);\n+        READWRITE(Using<VectorFormatter<DifferenceFormatter>>(obj.offsets));\n+    }\n+};\n+\n+}; // namespace\n+\n+std::unique_ptr<LocationsIndex> g_locations_index;\n+\n+LocationsIndex::LocationsIndex(std::unique_ptr<interfaces::Chain> chain,\n+                               size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"locationsindex\")\n+{\n+    fs::path path = gArgs.GetDataDirNet() / \"indexes\" / \"locations\";\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<BaseIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+}\n+\n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});\n+\n+bool LocationsIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    assert(block.data);\n+    assert(block.file_number >= 0);\n+\n+    const uint32_t nTx = block.data->vtx.size();\n+    uint32_t nTxOffset = HEADER_SIZE + GetSizeOfCompactSize(nTx);\n+\n+    std::vector<uint32_t> block_offsets{};\n+    block_offsets.reserve(nTx + 1);\n+    block_offsets.push_back(nTxOffset); // first transaction offset within the block\n+\n+    for (const auto& tx : block.data->vtx) {\n+        nTxOffset += ::GetSerializeSize(TX_WITH_WITNESS(*tx));\n+        block_offsets.push_back(nTxOffset);\n+    }\n+\n+    CDBBatch batch{GetDB()};\n+    uint32_t copied = 0;\n+    for (uint32_t part = 0; copied < nTx; ++part) {\n+        size_t part_size = std::min(nTx - copied, TXS_PER_ROW);\n+        std::span<uint32_t> part_offsets{&block_offsets[copied], part_size + 1};\n+\n+        DBKey key{block.hash, part};\n+        DBValue value{{block.file_number, block.data_pos}, {part_offsets.begin(), part_offsets.end()}};\n+\n+        copied += part_size;\n+        batch.Write(key, value);\n+    }\n+    return GetDB().WriteBatch(batch);\n+}\n+\n+bool LocationsIndex::ReadRawTransaction(const uint256& block_hash, size_t i, std::vector<std::byte>& out) const\n+{\n+    uint32_t part = i / TXS_PER_ROW; // used to find the correct DB row\n+    i = i % TXS_PER_ROW;             // index within a single DB row",
      "path": "src/index/locationsindex.cpp",
      "position": null,
      "original_position": 107,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": 2249370654,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks - fixed.",
      "created_at": "2025-08-03T06:42:48Z",
      "updated_at": "2025-08-03T06:42:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249617854",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249617854"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249617938",
      "pull_request_review_id": 3081778204,
      "id": 2249617938,
      "node_id": "PRRC_kwDOABII586GFnIS",
      "diff_hunk": "@@ -0,0 +1,143 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <map>\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t part; // allow splitting one block's transactions into multiple DB rows",
      "path": "src/index/locationsindex.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": 2249370232,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks - renamed to `row`.",
      "created_at": "2025-08-03T06:42:52Z",
      "updated_at": "2025-08-03T06:42:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249617938",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249617938"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249618007",
      "pull_request_review_id": 3081778338,
      "id": 2249618007,
      "node_id": "PRRC_kwDOABII586GFnJX",
      "diff_hunk": "@@ -472,6 +473,111 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, uri_part, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& uri_part)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, uri_part);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uriParts{util::Split<std::string_view>(param, '-')};\n+    if (uriParts.size() != 2) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid URI format: %s\", param));\n+    }\n+\n+    std::optional<uint256> block_hash{uint256::FromHex(uriParts[0])};\n+    if (!block_hash) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid hash: %s\", uriParts[0]));\n+    }\n+\n+    const std::optional<size_t> parsed_index{ToIntegral<size_t>(uriParts[1])};\n+    if (!parsed_index.has_value()) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Transaction index is invalid: %s\", uriParts[1]));\n+    }\n+    const size_t index = *parsed_index;\n+\n+    ChainstateManager* maybe_chainman = GetChainman(context, req);\n+    if (!maybe_chainman) return false;\n+    ChainstateManager& chainman = *maybe_chainman;\n+\n+    FlatFilePos block_pos{};\n+    {\n+        LOCK(cs_main);\n+        const CBlockIndex* pindex{chainman.m_blockman.LookupBlockIndex(*block_hash)};\n+        if (pindex == nullptr) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not found\", uriParts[0]));\n+        }\n+        if (pindex->nHeight > 0 && !pindex->IsValid(BLOCK_VALID_SCRIPTS)) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not validated\", uriParts[0]));\n+        }\n+        if (index >= pindex->nTx) {\n+            return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Block %s has only %d transactions\", uriParts[0], pindex->nTx));\n+        }\n+        block_pos = pindex->GetBlockPos();\n+    }\n+\n+    CTransactionRef tx{};\n+    std::vector<std::byte> tx_bytes{};\n+    bool success{false};\n+    const LocationsIndex* locations_index = g_locations_index.get();\n+    if (!locations_index) {\n+        // Read full block and skip irrelevant transactions\n+        success = chainman.m_blockman.ReadTxFromBlock(tx, block_pos, index);\n+    } else {\n+        if (!locations_index->BlockUntilSyncedToCurrentChain()) {\n+            RESTERR(req, HTTP_SERVICE_UNAVAILABLE, \"Locations index is still syncing\");\n+        }\n+        success = locations_index->ReadRawTransaction(*block_hash, index, tx_bytes);\n+    }\n+\n+    if (!success) {\n+        return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Failed to read transaction #%d from block %s\", index, (*block_hash).ToString()));",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 72,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": 2249356202,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks - fixed.",
      "created_at": "2025-08-03T06:42:55Z",
      "updated_at": "2025-08-03T06:42:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249618007",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249618007"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 536,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249618092",
      "pull_request_review_id": 3081778479,
      "id": 2249618092,
      "node_id": "PRRC_kwDOABII586GFnKs",
      "diff_hunk": "@@ -472,6 +473,111 @@ static bool rest_block_notxdetails(const std::any& context, HTTPRequest* req, co\n     return rest_block(context, req, uri_part, TxVerbosity::SHOW_TXID);\n }\n \n+\n+static bool rest_tx_from_block(const std::any& context, HTTPRequest* req, const std::string& uri_part)\n+{\n+    if (!CheckWarmup(req)) return false;\n+\n+    std::string param;\n+    const RESTResponseFormat rf = ParseDataFormat(param, uri_part);\n+\n+    // request is sent over URI scheme /rest/txfromblock/blockhash-index\n+    std::vector<std::string_view> uriParts{util::Split<std::string_view>(param, '-')};\n+    if (uriParts.size() != 2) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid URI format: %s\", param));\n+    }\n+\n+    std::optional<uint256> block_hash{uint256::FromHex(uriParts[0])};\n+    if (!block_hash) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Invalid hash: %s\", uriParts[0]));\n+    }\n+\n+    const std::optional<size_t> parsed_index{ToIntegral<size_t>(uriParts[1])};\n+    if (!parsed_index.has_value()) {\n+        return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Transaction index is invalid: %s\", uriParts[1]));\n+    }\n+    const size_t index = *parsed_index;\n+\n+    ChainstateManager* maybe_chainman = GetChainman(context, req);\n+    if (!maybe_chainman) return false;\n+    ChainstateManager& chainman = *maybe_chainman;\n+\n+    FlatFilePos block_pos{};\n+    {\n+        LOCK(cs_main);\n+        const CBlockIndex* pindex{chainman.m_blockman.LookupBlockIndex(*block_hash)};\n+        if (pindex == nullptr) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not found\", uriParts[0]));\n+        }\n+        if (pindex->nHeight > 0 && !pindex->IsValid(BLOCK_VALID_SCRIPTS)) {\n+            return RESTERR(req, HTTP_NOT_FOUND, strprintf(\"Block %s not validated\", uriParts[0]));\n+        }\n+        if (index >= pindex->nTx) {\n+            return RESTERR(req, HTTP_BAD_REQUEST, strprintf(\"Block %s has only %d transactions\", uriParts[0], pindex->nTx));\n+        }\n+        block_pos = pindex->GetBlockPos();\n+    }",
      "path": "src/rest.cpp",
      "position": null,
      "original_position": 55,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": 2249355515,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good catch - fixed.",
      "created_at": "2025-08-03T06:42:58Z",
      "updated_at": "2025-08-03T06:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249618092",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249618092"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": 505,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 524,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249618203",
      "pull_request_review_id": 3081778702,
      "id": 2249618203,
      "node_id": "PRRC_kwDOABII586GFnMb",
      "diff_hunk": "@@ -0,0 +1,143 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <map>",
      "path": "src/index/locationsindex.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": 2249350168,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed.",
      "created_at": "2025-08-03T06:43:01Z",
      "updated_at": "2025-08-03T06:43:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249618203",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249618203"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249618256",
      "pull_request_review_id": 3081778773,
      "id": 2249618256,
      "node_id": "PRRC_kwDOABII586GFnNQ",
      "diff_hunk": "@@ -36,6 +36,14 @@ Responds with 404 if the transaction doesn't exist.\n By default, this endpoint will only search the mempool.\n To query for a confirmed transaction, enable the transaction index via \"txindex=1\" command line / configuration option.\n \n+`GET /rest/txfromblock/<BLOCK-HASH>-<TX-OFFSET>.<bin|hex|json>`\n+\n+Given a block hash and transaction offset within it: returns a transaction in binary, hex-encoded binary, or JSON formats.\n+Responds with 404 if the transaction doesn't exist.\n+\n+By default, this endpoint will read also the leading transactions, before reading and returning the requested one.",
      "path": "doc/REST-interface.md",
      "position": null,
      "original_position": 9,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": 2249349229,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks - fixed.",
      "created_at": "2025-08-03T06:43:04Z",
      "updated_at": "2025-08-03T06:43:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249618256",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249618256"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249618312",
      "pull_request_review_id": 3081778837,
      "id": 2249618312,
      "node_id": "PRRC_kwDOABII586GFnOI",
      "diff_hunk": "@@ -0,0 +1,143 @@\n+// Copyright (c) 2018-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <map>\n+\n+#include <blockencodings.h>\n+#include <clientversion.h>\n+#include <common/args.h>\n+#include <dbwrapper.h>\n+#include <hash.h>\n+#include <index/locationsindex.h>\n+#include <logging.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <util/fs_helpers.h>\n+#include <validation.h>\n+\n+constexpr uint8_t DB_BLOCK_HASH{'s'};\n+\n+constexpr uint32_t TXS_PER_ROW{128};\n+\n+namespace {\n+\n+struct DBKey {\n+    uint256 hash;\n+    uint32_t part; // allow splitting one block's transactions into multiple DB rows\n+\n+    explicit DBKey(const uint256& hash_in, uint32_t part_in) : hash(hash_in), part(part_in) {}\n+\n+    SERIALIZE_METHODS(DBKey, obj)\n+    {\n+        uint8_t prefix{DB_BLOCK_HASH};\n+        READWRITE(prefix);\n+        if (prefix != DB_BLOCK_HASH) {\n+            throw std::ios_base::failure(\"Invalid format for location index DB hash key\");\n+        }\n+\n+        READWRITE(obj.hash);\n+        READWRITE(COMPACTSIZE(obj.part));\n+    }\n+};\n+\n+struct DBValue {\n+    FlatFilePos block_pos;\n+    std::vector<uint32_t> offsets{};\n+\n+    SERIALIZE_METHODS(DBValue, obj)\n+    {\n+        READWRITE(obj.block_pos);\n+        READWRITE(Using<VectorFormatter<DifferenceFormatter>>(obj.offsets));\n+    }\n+};\n+\n+}; // namespace\n+\n+std::unique_ptr<LocationsIndex> g_locations_index;\n+\n+LocationsIndex::LocationsIndex(std::unique_ptr<interfaces::Chain> chain,\n+                               size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"locationsindex\")\n+{\n+    fs::path path = gArgs.GetDataDirNet() / \"indexes\" / \"locations\";\n+    fs::create_directories(path);\n+\n+    m_db = std::make_unique<BaseIndex::DB>(path / \"db\", n_cache_size, f_memory, f_wipe);\n+}\n+\n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});",
      "path": "src/index/locationsindex.cpp",
      "position": null,
      "original_position": 70,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": 2249348139,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks - moved into `LocationsIndex::CustomAppend()`.",
      "created_at": "2025-08-03T06:43:07Z",
      "updated_at": "2025-08-03T06:43:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249618312",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249618312"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249618367",
      "pull_request_review_id": 3081778903,
      "id": 2249618367,
      "node_id": "PRRC_kwDOABII586GFnO_",
      "diff_hunk": "@@ -1080,6 +1080,32 @@ bool BlockManager::ReadRawBlock(std::vector<std::byte>& block, const FlatFilePos\n     return true;\n }\n \n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "784459ac79a89f591eb52a4c6c266c421ca8baec",
      "in_reply_to_id": 2249347002,
      "user": {
        "login": "romanz",
        "id": 9900,
        "node_id": "MDQ6VXNlcjk5MDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/romanz",
        "html_url": "https://github.com/romanz",
        "followers_url": "https://api.github.com/users/romanz/followers",
        "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
        "organizations_url": "https://api.github.com/users/romanz/orgs",
        "repos_url": "https://api.github.com/users/romanz/repos",
        "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/romanz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks - removed.\r\n\r\n> Was this supposed to be used to skip forward in the stream instead of deserializing the header?\r\n\r\nYes, but now it's not needed here.",
      "created_at": "2025-08-03T06:43:14Z",
      "updated_at": "2025-08-03T06:43:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2249618367",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2249618367"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1083,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2250618511",
      "pull_request_review_id": 3082984358,
      "id": 2250618511,
      "node_id": "PRRC_kwDOABII586GJbaP",
      "diff_hunk": "@@ -1080,6 +1080,32 @@ bool BlockManager::ReadRawBlock(std::vector<std::byte>& block, const FlatFilePos\n     return true;\n }\n \n+static const uint32_t HEADER_SIZE = ::GetSerializeSize(CBlockHeader{});",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "784459ac79a89f591eb52a4c6c266c421ca8baec",
      "in_reply_to_id": 2249347002,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Better to not add it in 784459ac79a89f591eb52a4c6c266c421ca8baec?",
      "created_at": "2025-08-04T07:17:37Z",
      "updated_at": "2025-08-04T07:27:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2250618511",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2250618511"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1083,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2250635349",
      "pull_request_review_id": 3082984358,
      "id": 2250635349,
      "node_id": "PRRC_kwDOABII586GJfhV",
      "diff_hunk": "@@ -36,6 +36,14 @@ Responds with 404 if the transaction doesn't exist.\n By default, this endpoint will only search the mempool.\n To query for a confirmed transaction, enable the transaction index via \"txindex=1\" command line / configuration option.\n \n+`GET /rest/txfromblock/<BLOCK-HASH>-<TX-OFFSET>.<bin|hex|json>`\n+\n+Given a block hash and transaction offset within it: returns a transaction in binary, hex-encoded binary, or JSON formats.\n+Responds with 404 if the transaction doesn't exist.\n+\n+By default, this endpoint will read also the leading transactions, before reading and returning the requested one.",
      "path": "doc/REST-interface.md",
      "position": null,
      "original_position": 9,
      "commit_id": "b2a22ce33dc69697181547fa1e83bd0ed3321565",
      "original_commit_id": "1b928f58fc78f4727cef988902075abc05c372b2",
      "in_reply_to_id": 2249349229,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Typo in added parenthesis: beggining",
      "created_at": "2025-08-04T07:25:39Z",
      "updated_at": "2025-08-04T07:27:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32541#discussion_r2250635349",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2250635349"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32541"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    }
  ]
}