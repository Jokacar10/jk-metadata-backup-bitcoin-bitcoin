{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144",
    "id": 2142876066,
    "node_id": "PR_kwDOABII585_ubGi",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31144",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31144.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31144.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/6f9240d70c5c480e25433482c347ba8c829c4bb7",
    "number": 31144,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "[IBD] multi-byte block obfuscation",
    "user": {
      "login": "l0rinc",
      "id": 1841944,
      "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l0rinc",
      "html_url": "https://github.com/l0rinc",
      "followers_url": "https://api.github.com/users/l0rinc/followers",
      "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
      "organizations_url": "https://api.github.com/users/l0rinc/orgs",
      "repos_url": "https://api.github.com/users/l0rinc/repos",
      "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/l0rinc/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This change is part of [[IBD] - Tracking PR for speeding up Initial Block Download](https://github.com/bitcoin/bitcoin/pull/32043)\r\n\r\n### Summary\r\n\r\nCurrent block obfuscations are done byte-by-byte, this PR batches them to 64 bit primitives to speed up obfuscating bigger memory batches.\r\nThis is especially relevant now that https://github.com/bitcoin/bitcoin/pull/31551 was merged, having bigger obfuscatable chunks.\r\n\r\nSince this obfuscation is optional, the speedup measured here depends on whether it's a [random value](https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2523295114) or [completely turned off](https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2519764142) (i.e. XOR-ing with 0).\r\n\r\n### Changes in testing, benchmarking and implementation\r\n\r\n* Added new tests comparing randomized inputs against a trivial implementation and performing roundtrip checks with random chunks.\r\n* An additional benchmark checks the effect of short-circuiting XOR when the key is zero, ensuring no speed regression occurs when the obfuscation feature is disabled.\r\n* Migrated remaining `std::vector<std::byte>(8)` values to `uint64_t`.\r\n\r\n### Reproducer and assembly\r\n\r\nMemory alignment is handled via `std::memcpy`, optimized out on tested platforms (see https://godbolt.org/z/P4cWx91Kv):\r\n* _Clang (x86-64)_ - 128-bit SIMD (pxor), 256-bit unroll (4×64-bit)\r\n* _GCC (x86-64)_ - 64-bit XOR (QWORD), 128-bit unroll (2×64-bit)\r\n* _RISC-V (32-bit)_ - 64-bit via 32-bit registers, no unroll, byte-by-byte load/store\r\n* _s390x (big-endian)_ - 64-bit XOR (xc), 512-bit unroll (8×64-bit)\r\n\r\n### Endianness\r\n\r\nThe only endianness issue was with bit rotation, intended to realign the key if obfuscation halted before full key consumption.\r\nElsewhere, memory is read, processed, and written back in the same endianness, preserving byte order.\r\nSince CI lacks a big-endian machine, testing was done locally via Docker.\r\n<details>\r\n<summary>Details</summary>\r\n\r\n```bash\r\nbrew install podman pigz\r\nsoftwareupdate --install-rosetta\r\npodman machine init\r\npodman machine start\r\ndocker run --platform linux/s390x -it ubuntu:latest /bin/bash\r\n    apt update && apt install -y git build-essential cmake ccache pkg-config libevent-dev libboost-dev libssl-dev libsqlite3-dev && \\\r\n    cd /mnt && git clone https://github.com/bitcoin/bitcoin.git && cd bitcoin && git remote add l0rinc https://github.com/l0rinc/bitcoin.git && git fetch --all && git checkout l0rinc/optimize-xor && \\\r\n    cmake -B build && cmake --build build --target test_bitcoin -j$(nproc) && \\\r\n    ./build/bin/test_bitcoin --run_test=streams_tests\r\n```\r\n\r\n</details>\r\n\r\n### Measurements (micro benchmarks and full IBDs)\r\n\r\n>  cmake -B build -DBUILD_BENCH=ON -DCMAKE_BUILD_TYPE=Release \\\r\n&& cmake --build build -j$(nproc) \\\r\n&& build/bin/bench_bitcoin -filter='XorObfuscationBench' -min-time=10000\r\n\r\n<details>\r\n<summary>macOS Sequoia - AppleClang 17.0.0.17000013</summary>\r\n\r\n> Before:\r\n\r\n|              ns/MiB |               MiB/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|          731,927.62 |            1,366.26 |    0.2% |     10.67 | `XorObfuscationBench`\r\n\r\n> After:\r\n\r\n|              ns/MiB |               MiB/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|           14,730.40 |           67,886.80 |    0.1% |     11.01 | `XorObfuscationBench`\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>Ubuntu 24 - GNU 13.3.0</summary>\r\n\r\n> Before:\r\n\r\n|              ns/MiB |               MiB/s |    err% |         ins/MiB |         cyc/MiB |    IPC |        bra/MiB |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|          941,015.26 |            1,062.68 |    0.0% |    9,437,186.97 |    3,378,911.52 |  2.793 |   1,048,577.15 |    0.0% |     10.99 | `XorObfuscationBench`\r\n\r\n> After:\r\n\r\n|              ns/MiB |               MiB/s |    err% |         ins/MiB |         cyc/MiB |    IPC |        bra/MiB |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|           51,187.17 |           19,536.15 |    0.0% |      327,683.95 |      183,747.58 |  1.783 |      65,536.55 |    0.0% |     11.00 | `XorObfuscationBench`\r\n\r\n</details>\r\n\r\ni.e. 18x faster obfuscation on Linux, 49x faster on Mac\r\n\r\n----\r\n\r\nA few other benchmarks that seem to have improved as well (tested with Clang only):\r\nBefore:\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        2,202,618.49 |              454.01 |    0.2% |     11.01 | `ReadBlockBench`\r\n|          734,444.92 |            1,361.57 |    0.3% |     10.66 | `ReadRawBlockBench`\r\n\r\nAfter:\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        1,912,308.06 |              522.93 |    0.4% |     10.98 | `ReadBlockBench`\r\n|           49,092.93 |           20,369.53 |    0.2% |     10.99 | `ReadRawBlockBench`\r\n\r\ni.e. `ReadRawBlockBench` is 15x faster, `ReadBlockBench` is 15% faster\r\n\r\nAlso visible on https://corecheck.dev/bitcoin/bitcoin/pulls/31144\r\n\r\n------\r\n\r\n\r\nRunning an IBD until 888888 blocks reveals a 4% speedup.\r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\nSSD:\r\n\r\n```bash\r\nCOMMITS=\"8324a00bd4a6a5291c841f2d01162d8a014ddb02 5ddfd31b4158a89b0007cfb2be970c03d9278525\"; \\\r\nSTOP_HEIGHT=888888; DBCACHE=1000; \\\r\nCC=gcc; CXX=g++; \\\r\nBASE_DIR=\"/mnt/my_storage\"; DATA_DIR=\"$BASE_DIR/BitcoinData\"; LOG_DIR=\"$BASE_DIR/logs\"; \\\r\n(for c in $COMMITS; do git fetch origin $c -q && git log -1 --pretty=format:'%h %s' $c || exit 1; done) && \\\r\nhyperfine \\\r\n  --sort 'command' \\\r\n  --runs 1 \\\r\n  --export-json \"$BASE_DIR/ibd-${COMMITS// /-}-$STOP_HEIGHT-$DBCACHE-$CC.json\" \\\r\n  --parameter-list COMMIT ${COMMITS// /,} \\\r\n  --prepare \"killall bitcoind; rm -rf $DATA_DIR/*; git checkout {COMMIT}; git clean -fxd; git reset --hard; \\\r\n    cmake -B build -DCMAKE_BUILD_TYPE=Release -DENABLE_WALLET=OFF && \\\r\n    cmake --build build -j$(nproc) --target bitcoind && \\\r\n    ./build/bin/bitcoind -datadir=$DATA_DIR -stopatheight=1 -printtoconsole=0; sleep 100\" \\\r\n  --cleanup \"cp $DATA_DIR/debug.log $LOG_DIR/debug-{COMMIT}-$(date +%s).log\" \\\r\n  \"COMPILER=$CC ./build/bin/bitcoind -datadir=$DATA_DIR -stopatheight=$STOP_HEIGHT -dbcache=$DBCACHE -blocksonly -printtoconsole=0\"\r\n```\r\n\r\n> 8324a00bd4 test: Compare util::Xor with randomized inputs against simple impl\r\n> 5ddfd31b41 optimization: Xor 64 bits together instead of byte-by-byte\r\n\r\n```python\r\nBenchmark 1: COMPILER=gcc ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=888888 -dbcache=1000 -blocksonly -printtoconsole=0 (COMMIT = 8324a00bd4a6a5291c841f2d01162d8a014ddb02)\r\n  Time (abs ≡):        25033.413 s               [User: 33953.984 s, System: 2613.604 s]\r\n \r\nBenchmark 2: COMPILER=gcc ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=888888 -dbcache=1000 -blocksonly -printtoconsole=0 (COMMIT = 5ddfd31b4158a89b0007cfb2be970c03d9278525)\r\n  Time (abs ≡):        24110.710 s               [User: 33389.536 s, System: 2660.292 s]\r\n \r\nRelative speed comparison\r\n        1.04          COMPILER=gcc ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=888888 -dbcache=1000 -blocksonly -printtoconsole=0 (COMMIT = 8324a00bd4a6a5291c841f2d01162d8a014ddb02)\r\n        1.00          COMPILER=gcc ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=888888 -dbcache=1000 -blocksonly -printtoconsole=0 (COMMIT = 5ddfd31b4158a89b0007cfb2be970c03d9278525)\r\n```\r\n\r\n> HDD:\r\n\r\n```bash\r\nCOMMITS=\"71eb6eaa740ad0b28737e90e59b89a8e951d90d9 46854038e7984b599d25640de26d4680e62caba7\"; \\\r\nSTOP_HEIGHT=888888; DBCACHE=4500; \\\r\nCC=gcc; CXX=g++; \\\r\nBASE_DIR=\"/mnt/my_storage\"; DATA_DIR=\"$BASE_DIR/BitcoinData\"; LOG_DIR=\"$BASE_DIR/logs\"; \\\r\n(for c in $COMMITS; do git fetch origin $c -q && git log -1 --pretty=format:'%h %s' $c || exit 1; done) && \\\r\nhyperfine \\\r\n  --sort 'command' \\\r\n  --runs 2 \\\r\n  --export-json \"$BASE_DIR/ibd-${COMMITS// /-}-$STOP_HEIGHT-$DBCACHE-$CC.json\" \\\r\n  --parameter-list COMMIT ${COMMITS// /,} \\\r\n  --prepare \"killall bitcoind; rm -rf $DATA_DIR/*; git checkout {COMMIT}; git clean -fxd; git reset --hard; \\\r\n    cmake -B build -DCMAKE_BUILD_TYPE=Release -DENABLE_WALLET=OFF && cmake --build build -j$(nproc) --target bitcoind && \\\r\n    ./build/bin/bitcoind -datadir=$DATA_DIR -stopatheight=1 -printtoconsole=0; sleep 100\" \\\r\n  --cleanup \"cp $DATA_DIR/debug.log $LOG_DIR/debug-{COMMIT}-$(date +%s).log\" \\\r\n  \"COMPILER=$CC ./build/bin/bitcoind -datadir=$DATA_DIR -stopatheight=$STOP_HEIGHT -dbcache=$DBCACHE -blocksonly -printtoconsole=0\"\r\n```\r\n\r\n> 71eb6eaa74 test: compare util::Xor with randomized inputs against simple impl\r\n> 46854038e7 optimization: migrate fixed-size obfuscation from `std::vector<std::byte>` to `uint64_t`\r\n\r\n```python\r\nBenchmark 1: COMPILER=gcc ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=888888 -dbcache=4500 -blocksonly -printtoconsole=0 (COMMIT = 71eb6eaa740ad0b28737e90e59b89a8e951d90d9)\r\n  Time (mean ± σ):     37676.293 s ± 83.100 s    [User: 36900.535 s, System: 2220.382 s]\r\n  Range (min … max):   37617.533 s … 37735.053 s    2 runs\r\n \r\nBenchmark 2: COMPILER=gcc ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=888888 -dbcache=4500 -blocksonly -printtoconsole=0 (COMMIT = 46854038e7984b599d25640de26d4680e62caba7)\r\n  Time (mean ± σ):     36181.287 s ± 195.248 s    [User: 34962.822 s, System: 1988.614 s]\r\n  Range (min … max):   36043.226 s … 36319.349 s    2 runs\r\n \r\nRelative speed comparison\r\n        1.04 ±  0.01  COMPILER=gcc ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=888888 -dbcache=4500 -blocksonly -printtoconsole=0 (COMMIT = 71eb6eaa740ad0b28737e90e59b89a8e951d90d9)\r\n        1.00          COMPILER=gcc ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=888888 -dbcache=4500 -blocksonly -printtoconsole=0 (COMMIT = 46854038e7984b599d25640de26d4680e62caba7)\r\n```\r\n\r\n</details>",
    "labels": [
      {
        "id": 219890555,
        "node_id": "MDU6TGFiZWwyMTk4OTA1NTU=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Block%20storage",
        "name": "Block storage",
        "color": "000000",
        "default": false
      },
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2024-10-24T07:11:11Z",
    "updated_at": "2025-04-25T13:26:07Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "34177ee080c9875040cdc034e2652b7f8ff8111f",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "l0rinc:l0rinc/optimize-xor",
      "ref": "l0rinc/optimize-xor",
      "sha": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 674169038,
        "node_id": "R_kgDOKC8Azg",
        "name": "bitcoin",
        "full_name": "l0rinc/bitcoin",
        "owner": {
          "login": "l0rinc",
          "id": 1841944,
          "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/l0rinc",
          "html_url": "https://github.com/l0rinc",
          "followers_url": "https://api.github.com/users/l0rinc/followers",
          "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
          "organizations_url": "https://api.github.com/users/l0rinc/orgs",
          "repos_url": "https://api.github.com/users/l0rinc/repos",
          "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/l0rinc/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/l0rinc/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/l0rinc/bitcoin",
        "archive_url": "https://api.github.com/repos/l0rinc/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/l0rinc/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/l0rinc/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/l0rinc/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/l0rinc/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/l0rinc/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/l0rinc/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/l0rinc/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/l0rinc/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/l0rinc/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/l0rinc/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/l0rinc/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/l0rinc/bitcoin/events",
        "forks_url": "https://api.github.com/repos/l0rinc/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/l0rinc/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/l0rinc/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/l0rinc/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/l0rinc/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/l0rinc/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/l0rinc/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/l0rinc/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/l0rinc/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/l0rinc/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/l0rinc/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/l0rinc/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/l0rinc/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/l0rinc/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/l0rinc/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/l0rinc/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:l0rinc/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/l0rinc/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/l0rinc/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/l0rinc/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/l0rinc/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/l0rinc/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/l0rinc/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/l0rinc/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/l0rinc/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/l0rinc/bitcoin/hooks",
        "svn_url": "https://github.com/l0rinc/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 259023,
        "default_branch": "master",
        "open_issues_count": 3,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-04-25T10:59:43Z",
        "created_at": "2023-08-03T09:49:12Z",
        "updated_at": "2025-04-15T21:38:46Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "971952588daebf0d4d08a7e0eeef1734fcd8a9b1",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37116,
        "stargazers_count": 83038,
        "watchers_count": 83038,
        "size": 280454,
        "default_branch": "master",
        "open_issues_count": 704,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-04-25T12:11:30Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-04-25T12:11:38Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 361,
    "deletions": 187,
    "changed_files": 13,
    "commits": 5,
    "review_comments": 166,
    "comments": 60
  },
  "events": [
    {
      "event": "commented",
      "id": 2434475807,
      "node_id": "IC_kwDOABII586RGycf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2434475807",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T07:11:15Z",
      "updated_at": "2025-04-25T11:00:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/31144.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [hodlinator](https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2408330350), [ryanofsky](https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2515108628) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#32043](https://github.com/bitcoin/bitcoin/pull/32043) ([IBD] Tracking PR for speeding up Initial Block Download by l0rinc)\n* [#31868](https://github.com/bitcoin/bitcoin/pull/31868) ([IBD] specialize block serialization by l0rinc)\n* [#31860](https://github.com/bitcoin/bitcoin/pull/31860) (init: Take lock on blocks directory in BlockManager ctor by TheCharlatan)\n* [#29641](https://github.com/bitcoin/bitcoin/pull/29641) (scripted-diff: Use LogInfo over LogPrintf [WIP, NOMERGE, DRAFT] by maflcko)\n* [#29307](https://github.com/bitcoin/bitcoin/pull/29307) (util: explicitly close all AutoFiles that have been written by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->\n### LLM Linter (✨ experimental)\n\nPossible typos and grammar issues:\n\n1. “AutoFile::write: file handle is nullpt” → “AutoFile::write: file handle is nullptr”  \n2. “AutoFile::read: file handle is nullpt” → “AutoFile::read: file handle is nullptr”  \n3. “AutoFile::ignore: file handle is nullpt” → “AutoFile::ignore: file handle is nullptr”\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2434475807",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14843711057,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN0wQ5R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14843711057",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "created_at": "2024-10-24T07:59:16Z"
    },
    {
      "event": "labeled",
      "id": 14843712179,
      "node_id": "LE_lADOABII586bm_bxzwAAAAN0wRKz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14843712179",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T07:59:20Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2391705369,
      "node_id": "PRR_kwDOABII586OjocZ",
      "url": null,
      "actor": null,
      "commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2391705369",
      "submitted_at": "2024-10-24T08:27:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "commented",
      "id": 2434625837,
      "node_id": "IC_kwDOABII586RHXEt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2434625837",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T08:27:45Z",
      "updated_at": "2024-10-24T08:27:45Z",
      "author_association": "MEMBER",
      "body": "I think your example may be a bit skewed? It shows how much time is spent when deserializing a `CScript` from a block file. However, block files contain full blocks, where many (most?) of the writes are single bytes (or 4 bytes), see https://github.com/bitcoin/bitcoin/issues/30833#issuecomment-2338250464. Thus, it would be useful to know what the overall end-to-end performance difference is. Also taking into account the utxo db.\r\n\r\nIf you want the micro-benchmark to be representative, I'd presume you'd have to mimic the histogram of the sizes of writes. Just picking one (1024, or 1004), which is never hit in reality, and then optimizing for that may be misleading.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2434625837",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14844891646,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN00xH-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14844891646",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "23f4809b113e95d69763b39b7fe665805d46779f",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/23f4809b113e95d69763b39b7fe665805d46779f",
      "created_at": "2024-10-24T09:06:19Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14845839276,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN04Yes",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14845839276",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "created_at": "2024-10-24T09:59:16Z"
    },
    {
      "event": "commented",
      "id": 2434840321,
      "node_id": "IC_kwDOABII586RILcB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2434840321",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T10:02:58Z",
      "updated_at": "2024-10-24T10:02:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "> where many (most?) of the writes are single bytes (or 4 bytes)\r\n\r\nThanks, I've extended your previous benchmarks with both Autofile serialization and very small vectors.\r\nI will also run a reindex of 400k blocks before and after to see if the effect is measurable or not.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2434840321",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "reviewed",
      "id": 2392082288,
      "node_id": "PRR_kwDOABII586OlEdw",
      "url": null,
      "actor": null,
      "commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2392082288",
      "submitted_at": "2024-10-24T10:41:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "reviewed",
      "id": 2392084054,
      "node_id": "PRR_kwDOABII586OlE5W",
      "url": null,
      "actor": null,
      "commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2392084054",
      "submitted_at": "2024-10-24T10:42:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "unlabeled",
      "id": 14849341925,
      "node_id": "UNLE_lADOABII586bm_bxzwAAAAN1Fvnl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14849341925",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T11:32:00Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14849432681,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN1GFxp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14849432681",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "353915bae14b9704a209bc09b021d3dd2ee11cf2",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/353915bae14b9704a209bc09b021d3dd2ee11cf2",
      "created_at": "2024-10-24T11:37:41Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14850268982,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN1JR82",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14850268982",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "created_at": "2024-10-24T12:20:00Z"
    },
    {
      "event": "renamed",
      "id": 14851329429,
      "node_id": "RTE_lADOABII586bm_bxzwAAAAN1NU2V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14851329429",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T13:14:20Z",
      "rename": {
        "from": "optimization: pack util::Xor into 64 bit chunks instead of doing it byte-by-byte",
        "to": "optimization: pack util::Xor into 64/32 bit chunks instead of doing it byte-by-byte"
      }
    },
    {
      "event": "ready_for_review",
      "id": 14852618787,
      "node_id": "RFRE_lADOABII586bm_bxzwAAAAN1SPoj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14852618787",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T14:22:04Z"
    },
    {
      "event": "labeled",
      "id": 14855476257,
      "node_id": "LE_lADOABII586bm_bxzwAAAAN1dJQh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14855476257",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T17:01:18Z",
      "label": {
        "name": "Block storage",
        "color": "000000"
      }
    },
    {
      "event": "commented",
      "id": 2436158760,
      "node_id": "IC_kwDOABII586RNNUo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2436158760",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T19:14:18Z",
      "updated_at": "2024-10-24T19:14:18Z",
      "author_association": "MEMBER",
      "body": "It would be good to explain the jpegs in the description, or even remove them. They will be excluded from the merge commit and aren't shown, unless GitHub happens to be reachable and online. Are they saying that IBD was 4% faster? Also, I think they were created with the UB version of this pull, so may be outdated either way?\r\n\r\nI did a quick check on my laptop and it seems the `XorSmall` (1+4 bytes) is slower with this pull. The `Xor` (modified to check 40 bytes) was twice as fast. Overall, I'd expect it to be slower on my machine, due to the histogram of real data showing more small byte writes than long ones, IIRC.\r\n\r\nI can try to bench on another machine later, to see if it makes a difference.\r\n\r\nCan you clarify what type of machine you tested this on?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2436158760",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2436298046,
      "node_id": "IC_kwDOABII586RNvU-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2436298046",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T20:39:31Z",
      "updated_at": "2025-02-17T20:46:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Are they saying that IBD was 4% faster?\r\n\r\nThat's what I'm measuring currently, but I don't expect more than 2% difference here.\r\n\r\n> Also, I think they were created with the UB version of this pull, so may be outdated either way?\r\n\r\nBenchmarks indicated that the 64 bit compiled result was basically the same.\r\n\r\n> Overall, I'd expect it to be slower on my machine, due to the histogram of real data showing more small byte writes than long ones, IIRC.\r\n\r\nI'll investigate, thanks.\r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\nPosting the perf here for reference:\r\n<img width=\"500\" alt=\"image\" src=\"https://github.com/user-attachments/assets/6dc99dee-bda8-40d0-bdb0-2030982e0645\">\r\nReindexing until 300k blocks reveals that XOR usage was reduced:\r\n<img width=\"500\" alt=\"image\" src=\"https://github.com/user-attachments/assets/fe308c34-da65-42f3-9b10-7d34aa9a8056\">\r\n\r\n\r\n</details>",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2436298046",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "reviewed",
      "id": 2395174160,
      "node_id": "PRR_kwDOABII586Ow3UQ",
      "url": null,
      "actor": null,
      "commit_id": "a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK a3dc138798e2f2c7aa1c9b37633c16c1b523a251\r\n\r\nOperating on CPU words rather than individual bytes. :+1: \r\n\r\nNot entirely clear to me from https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814741753 whether the optimizer is able to use SIMD. Guess picking through the binary of a GUIX-build would give a definitive answer.\r\n\r\nThe verbosity of `std::memcpy` hurts readability but alignment issues are real.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2395174160",
      "submitted_at": "2024-10-25T14:02:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "convert_to_draft",
      "id": 14881645500,
      "node_id": "CTDE_lADOABII586bm_bxzwAAAAN3A-O8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14881645500",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-25T18:47:25Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14896670298,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN36SZa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14896670298",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "89a721fddd76104688633ba2433050772bed6823",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/89a721fddd76104688633ba2433050772bed6823",
      "created_at": "2024-10-26T07:17:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14914013411,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN48cjj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14914013411",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "95e38ac8cba2c89dd86e11f419edb24c180597c4",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/95e38ac8cba2c89dd86e11f419edb24c180597c4",
      "created_at": "2024-10-26T21:45:16Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14914294089,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN49hFJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14914294089",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cd61e8b3737afcf4133dbec5029c911c0104bd2c",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/cd61e8b3737afcf4133dbec5029c911c0104bd2c",
      "created_at": "2024-10-26T21:58:11Z"
    },
    {
      "event": "commented",
      "id": 2439748354,
      "node_id": "IC_kwDOABII586Ra5sC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2439748354",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-26T21:58:16Z",
      "updated_at": "2024-10-26T21:58:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/32109998785</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2439748354",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "labeled",
      "id": 14914296180,
      "node_id": "LE_lADOABII586bm_bxzwAAAAN49hl0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14914296180",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-26T21:58:16Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14914676976,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN4--jw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14914676976",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d72968f3c9292ff8f911c04e85bdc5629ebb7f62",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/d72968f3c9292ff8f911c04e85bdc5629ebb7f62",
      "created_at": "2024-10-26T22:17:12Z"
    },
    {
      "event": "renamed",
      "id": 14914789715,
      "node_id": "RTE_lADOABII586bm_bxzwAAAAN4_aFT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14914789715",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-26T22:21:56Z",
      "rename": {
        "from": "optimization: pack util::Xor into 64/32 bit chunks instead of doing it byte-by-byte",
        "to": "optimization: change XOR obfuscation key from `std::vector<std::byte>(8)` to `uint64_t`"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14926771325,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN5tHR9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14926771325",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "555f8c889041e16be10a3dbe3886616ccf4f031c",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/555f8c889041e16be10a3dbe3886616ccf4f031c",
      "created_at": "2024-10-27T15:17:23Z"
    },
    {
      "event": "unlabeled",
      "id": 14928066250,
      "node_id": "UNLE_lADOABII586bm_bxzwAAAAN5yDbK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14928066250",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-27T16:42:17Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14928265331,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN5y0Bz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14928265331",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4b3fb90496db369ea8d0247af406196068c538af",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/4b3fb90496db369ea8d0247af406196068c538af",
      "created_at": "2024-10-27T16:55:31Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14928272303,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN5y1uv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14928272303",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f63d44c5cc740e132e2e74a2304e5f93c5e5741f",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/f63d44c5cc740e132e2e74a2304e5f93c5e5741f",
      "created_at": "2024-10-27T16:56:33Z"
    },
    {
      "event": "ready_for_review",
      "id": 14931818998,
      "node_id": "RFRE_lADOABII586bm_bxzwAAAAN6AXn2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14931818998",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-27T20:43:15Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14983670549,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN9GKsV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14983670549",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0e9b5024a477438bdcd41a529bee932c9a853dd5",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/0e9b5024a477438bdcd41a529bee932c9a853dd5",
      "created_at": "2024-10-29T12:43:12Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14983767249,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN9GiTR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14983767249",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/8696184c2fd183483fa843348323ffbc62c2de3c",
      "created_at": "2024-10-29T12:49:15Z"
    },
    {
      "event": "labeled",
      "id": 14983769030,
      "node_id": "LE_lADOABII586bm_bxzwAAAAN9GivG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14983769030",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-29T12:49:21Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2444121923,
      "node_id": "IC_kwDOABII586RrldD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2444121923",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-29T12:49:22Z",
      "updated_at": "2024-10-29T12:49:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/32217592364</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2444121923",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "unlabeled",
      "id": 14985423140,
      "node_id": "UNLE_lADOABII586bm_bxzwAAAAN9M2kk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14985423140",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-29T14:19:10Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2449751980,
      "node_id": "IC_kwDOABII586SBD-s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2449751980",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T12:40:37Z",
      "updated_at": "2024-10-31T12:40:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "The CI failure in https://github.com/bitcoin/bitcoin/runs/32217592364 might come from a bad rebase reconciliation with master?\r\n```\r\n[12:44:30.723] Duplicate include(s) in src/bench/xor.cpp:\r\n[12:44:30.723] #include <cstddef>\r\n[12:44:30.723] #include <span.h>\r\n[12:44:30.723] #include <streams.h>\r\n[12:44:30.723] #include <random.h>\r\n[12:44:30.723] #include <vector>\r\n[12:44:30.723] #include <bench/bench.h>\r\n[12:44:30.723] \r\n[12:44:30.728] ^---- ⚠️ Failure generated from lint-includes.py\r\n```",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2449751980",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2449786517,
      "node_id": "IC_kwDOABII586SBMaV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2449786517",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T12:59:36Z",
      "updated_at": "2024-10-31T12:59:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "> The CI failure in [bitcoin/bitcoin/runs/32217592364](https://github.com/bitcoin/bitcoin/runs/32217592364) might come from a bad rebase reconciliation with master?\r\n\r\nThat's an old build, right? Latest [Lint](https://github.com/bitcoin/bitcoin/pull/31144/checks?check_run_id=32217909313) seems fine\r\n",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2449786517",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "reviewed",
      "id": 2407930796,
      "node_id": "PRR_kwDOABII586Phhus",
      "url": null,
      "actor": null,
      "commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2407930796",
      "submitted_at": "2024-10-31T13:16:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "commented",
      "id": 2449824362,
      "node_id": "IC_kwDOABII586SBVpq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2449824362",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T13:18:18Z",
      "updated_at": "2024-10-31T13:18:18Z",
      "author_association": "MEMBER",
      "body": "Taking a step back, I wonder if this is worth it. IIRC it gives a +1% speedup when run on spinning storage, so it seems a higher speedup is possibly visible on faster, modern storage. However, it would be good if any IO delay was taken out of IBD completely, so that the speed of storage and the speed of XOR is largely irrelevant.\r\n\r\nI haven't looked, but this may be possible by asking the next block the be read into memory in the background, as soon as work on the current block begins.\r\n\r\nSomething similar is done in net_processing, where the (presumed) current block is read into memory, and kept there, to avoid having to read it from storage again in validation. See https://github.com/bitcoin/bitcoin/blob/f07a533dfcb172321972e5afb3b38a4bd24edb87/src/net_processing.cpp#L823",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2449824362",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2449836182,
      "node_id": "IC_kwDOABII586SBYiW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2449836182",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T13:24:08Z",
      "updated_at": "2024-10-31T13:24:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Taking a step back, I wonder if this is worth it. IIRC it gives a +1% speedup \r\n\r\nThat's not the main point, rather that we're storing the key in a value that can be short-circuited easily so that when key is 0 (i.e. xor is NOOP), we can skip it. Previously this would have only been possible by checking each byte of the key.\r\nIt's also a lot cleaner to store it in a primitive instead, which supports xor natively.\r\nXor comes up in every profiling I do, we shouldn't have a regression because of https://github.com/bitcoin/bitcoin/pull/28207 - this PR solves that.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2449836182",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2449867757,
      "node_id": "IC_kwDOABII586SBgPt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2449867757",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T13:39:07Z",
      "updated_at": "2024-10-31T13:39:07Z",
      "author_association": "MEMBER",
      "body": "> we shouldn't have a regression because of #28207 - this PR solves that.\r\n\r\nIt is not possible to do XOR without any cost at all. There will always be an overhead and I think calling #28207 a regression and this change a \"fix\" is not entirely accurate. This change reduces the overhead, according to the benchmarks.\r\n\r\n> That's not the main point\r\n\r\nThe pull request title starts with \"optimization\", so I got the impression that a speedup is the main point.\r\n\r\nThe reason that `std::vector` was picked is that switching to larger sizes is possible. However, if there was a need to do that, XOR would likely not be sufficient anyway. So limiting to 8 bytes fixed at compile time seems reasonable.\r\n\r\nI am mostly saying that any speedup here may not be visible at all if IO is completely taken out of the critical path, but I haven't looked into that in detail.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2449867757",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2449896533,
      "node_id": "IC_kwDOABII586SBnRV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2449896533",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T13:52:30Z",
      "updated_at": "2024-10-31T13:52:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "> change a \"fix\" is not entirely accurate\r\n\r\nwhen xor is disabled we're not xor-ing now at all. Previously we did xor, so this change brings back the previous behavior when xor is not needed.\r\n\r\n> The pull request title starts with \"optimization\", so I got the impression that a speedup is the main point.\r\n\r\nYes, please see the updated description with the benchmarks: https://github.com/bitcoin/bitcoin/pull/31144#issue-2610689777\r\n\r\n> may not be visible at all if IO is completely taken out of the critical path\r\n\r\nI'd argue the current implementation is slightly simpler (i.e. xor is stored and performed natively and can be disabled) and faster (2x for a representative dataset).",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2449896533",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15036659118,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOAQTWu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15036659118",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "33625e9d5327263c273583d7b3fe2f3114ebf12e",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/33625e9d5327263c273583d7b3fe2f3114ebf12e",
      "created_at": "2024-10-31T13:55:38Z"
    },
    {
      "event": "reviewed",
      "id": 2407902826,
      "node_id": "PRR_kwDOABII586Pha5q",
      "url": null,
      "actor": null,
      "commit_id": "33625e9d5327263c273583d7b3fe2f3114ebf12e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2407902826",
      "submitted_at": "2024-10-31T14:52:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15038772310,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOAYXRW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15038772310",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a5cad729c76cafa047a2b1897595669ae9b2b0d5",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/a5cad729c76cafa047a2b1897595669ae9b2b0d5",
      "created_at": "2024-10-31T15:13:09Z"
    },
    {
      "event": "reviewed",
      "id": 2408330350,
      "node_id": "PRR_kwDOABII586PjDRu",
      "url": null,
      "actor": null,
      "commit_id": "a5cad729c76cafa047a2b1897595669ae9b2b0d5",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "(Reviewed a5cad729c76cafa047a2b1897595669ae9b2b0d5)\r\n\r\nSince my previous Concept ACK, the PR was changed to switch the xor key more completely to `uint64_t`. Before the PR, we were already using fixed-size of 8 bytes for the obfuscation value in the file formats, so changing the type to `uint64_t` shouldn't be noticeable to users. :+1: \r\n\r\nEven if we could move reading and XOR-ing out of the hot path as suggested by maflcko, we might as well make use the CPU architectures we have. I would expect larger-sized XOR operations to have less overhead and energy waste (less heat).",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2408330350",
      "submitted_at": "2024-10-31T16:00:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "commented",
      "id": 2450447158,
      "node_id": "IC_kwDOABII586SDts2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2450447158",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T17:32:38Z",
      "updated_at": "2024-10-31T17:32:38Z",
      "author_association": "MEMBER",
      "body": "> We could have used `ReadLE64` to unify the byte order for keys and writable values, but that shouldn't be necessary, since both have the same endianness locally that shouldn't be affected by a byte-by-byte xor.\r\n\r\nThe s390x unit tests fail:\r\n\r\n\r\n```\r\n./src/test/streams_tests.cpp(40): error: in \"streams_tests/xor_bytes\": check { expected.begin(), expected.end() } == { actual.begin(), actual.end() } has failed. \r\nMismatch at position 0: � != |\r\nMismatch at position 1: Y != �\r\nMismatch at position 2: � != �\r\nMismatch at position 3: � != �\r\nMismatch at position 4: w != �\r\nMismatch at position 5: C != �\r\nMismatch at position 6:  != x\r\nMismatch at position 7: � != �\r\nMismatch at position 8: � != C\r\nMismatch at position 9: Y != �\r\nMismatch at position 10: � != �\r\nMismatch at position 11: , != �\r\nMismatch at position 12: � != R\r\nMismatch at position 13: 8 != �\r\nMismatch at position 14: � != �\r\nMismatch at position 15: � != �\r\nMismatch at position 16: � != l\r\nMismatch at position 17: � != n\r\nMismatch at position 18: � != �\r\nMismatch at position 19: t != B\r\nMismatch at position 20: ; != �\r\nMismatch at position 21: != �\r\nMismatch at position 22: � != �\r\nMismatch at position 23: � != �\r\nMismatch at position 24: k != �\r\nMismatch at position 25: � != Z\r\nMismatch at position 26: � != �\r\nMismatch at position 27: � != �\r\nMismatch at position 28: � != #\r\nMismatch at position 29: 8 != �\r\nMismatch at position 30: � != �\r\nMismatch at position 31: � != �\r\nMismatch at position 32: g != �\r\nMismatch at position 33: � != ^\r\nMismatch at position 34: � != �\r\nismatch at position 36: � != k\r\nMismatch at position 37: * != �\r\nMismatch at position 38: q != \r\nMismatch at position 39: � != �\r\nMismatch at position 40: � != �\r\nMismatch at position 41: r != e\r\nMismatch at position 42: � != �\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2450447158",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2450465825,
      "node_id": "IC_kwDOABII586SDyQh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2450465825",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T17:42:23Z",
      "updated_at": "2024-10-31T17:45:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "> The s390x unit tests fail:\r\n\r\nI don't know how to access that, is it part of CI? Does the test suite pass on it otherwise or was it just curiosity? Do you know the reason it fails, is my assumption incorrect that endianness should apply to both parts (key and value) the same way? Is the test wrong or the xor, should I change the test such that xor-ing twice should reveal the original data instead (while the intermediary part should not)?",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2450465825",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2450578651,
      "node_id": "IC_kwDOABII586SENzb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2450578651",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T18:37:39Z",
      "updated_at": "2024-10-31T18:37:39Z",
      "author_association": "MEMBER",
      "body": "> I don't know how to access that, is it part of CI?\r\n\r\nIt needs to be run manually. See https://github.com/bitcoin/bitcoin/tree/master/ci#running-a-stage-locally. (`podman run --rm --privileged docker.io/multiarch/qemu-user-static --reset -p yes` may be required to setup qemu-s390x, depending on your setup). Then something like `MAKEJOBS=\"-j$(nproc)\" FILE_ENV=\"./ci/test/00_setup_env_s390x.sh\" ./ci/test_run_all.sh` should run it.\r\n\r\n\r\n\r\n> Does the test suite pass on it otherwise or was it just curiosity?\r\n\r\nYes, it should pass on s390x. If not, that is a bug somewhere.\r\n\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2450578651",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "convert_to_draft",
      "id": 15048568983,
      "node_id": "CTDE_lADOABII586bm_bxzwAAAAOA9vCX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15048568983",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T21:51:36Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15083119052,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAODBiHM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15083119052",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "created_at": "2024-11-02T19:26:30Z"
    },
    {
      "event": "commented",
      "id": 2453108430,
      "node_id": "IC_kwDOABII586SN3bO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2453108430",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-02T19:45:57Z",
      "updated_at": "2024-11-03T12:06:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the hints @maflcko, I was under the impression that big-endian tests were run automatically.\r\n\r\n### Fix\r\n\r\nIt seem that that `std::rotr` doesn't take endianness into account, so the fix basically looks like:\r\n```C++\r\nsize_t key_rotation = 8 * key_offset;\r\nif constexpr (std::endian::native == std::endian::big) key_rotation *= -1;\r\nreturn std::rotr(key, key_rotation);\r\n```\r\nI've emulated the s390x behavior locally like this:\r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\n```bash\r\nbrew install podman pigz\r\nsoftwareupdate --install-rosetta\r\npodman machine init\r\npodman machine start\r\ndocker run --platform linux/s390x -it ubuntu:22.04 /bin/bash\r\n    apt update && apt install -y git build-essential cmake ccache pkg-config libevent-dev libboost-dev libssl-dev libsqlite3-dev && \\\r\n    cd /mnt && git clone https://github.com/bitcoin/bitcoin.git && cd bitcoin && git remote add l0rinc https://github.com/l0rinc/bitcoin.git && git fetch --all && git checkout l0rinc/optimize-xor && \\\r\n    cmake -B build && cmake --build build --target test_bitcoin -j$(nproc) && \\\r\n    ./build/src/test/test_bitcoin --run_test=streams_tests\r\n```\r\n\r\n</details>\r\n\r\n\r\n### Changes\r\n\r\n* The change also includes an updated benchmarking suite with 700k blocks inspected for all usages of `utils::Xor` to make the benchmark representative:\r\n<img src=\"https://github.com/user-attachments/assets/83f16fc6-1596-40af-a813-e4e67982a051\">\r\n\r\n* Changed `AutoFileXor` benchmark to measure the regression of turning off obfuscation.\r\n\r\n* I've also updated all key derivations to vector-to-uint64 instead of generating the 64 bit key directly (it's more consistent, more representative and helps with endianness).\r\n\r\n* Added a xor roundtrip test which applies the xor in random chunks, asserts that it differs from the original and reapplies it in different random chunks and asserts that it's equivalent to the original.\r\n\r\nSee the complete diff: https://github.com/bitcoin/bitcoin/compare/a5cad729c76cafa047a2b1897595669ae9b2b0d5..af778c5bdea4175f84e82b41f3b51c7f453d8c7e",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2453108430",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "mentioned",
      "id": 15083482417,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAODC60x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15083482417",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-02T19:45:58Z"
    },
    {
      "event": "subscribed",
      "id": 15083482419,
      "node_id": "SE_lADOABII586bm_bxzwAAAAODC60z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15083482419",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-02T19:45:59Z"
    },
    {
      "event": "ready_for_review",
      "id": 15085109230,
      "node_id": "RFRE_lADOABII586bm_bxzwAAAAODJH_u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15085109230",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-02T21:18:51Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15123493358,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOFbjHu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15123493358",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "918121b2ac50a63c6a78b06feb2dcaf6112f26ff",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/918121b2ac50a63c6a78b06feb2dcaf6112f26ff",
      "created_at": "2024-11-05T16:40:32Z"
    },
    {
      "event": "commented",
      "id": 2457667761,
      "node_id": "IC_kwDOABII586SfQix",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2457667761",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-05T16:40:43Z",
      "updated_at": "2024-11-08T20:21:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated the benchmark to 860k blocks (September 2024):\r\n<img src=\"https://github.com/user-attachments/assets/1d70f5d9-68cb-4e5f-85e9-ffb9fd3b3f1c\">\r\n\r\nThis one contains a lot of very big arrays (96'233 separate sizes, biggest was 3'992'470 bytes long) - a big departure from the previous 400k and 700k blocks (having 1500 sizes, biggest was 9319 bytes long). \r\n\r\nThe performance characteristics are also quite different, now that we have more and bigger byte arrays:\r\n\r\n> C++ compiler .......................... AppleClang 16.0.0.16000026\r\n\r\n> Before:\r\n\r\n|             ns/byte |              byte/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                1.29 |      774,577,944.12 |    0.2% |    115.99 | `XorHistogram`\r\n\r\n> After:\r\n\r\n|             ns/byte |              byte/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                0.04 |   26,411,646,837.32 |    0.2% |      8.97 | `XorHistogram`\r\n\r\ni.e. ~35x faster with Clang at processing the data with representative histograms.\r\n\r\n> C++ compiler .......................... GNU 13.2.0\r\n\r\n> Before:\r\n\r\n|             ns/byte |              byte/s |    err% |        ins/byte |        cyc/byte |    IPC |       bra/byte |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|                0.97 |    1,032,916,679.87 |    0.0% |            9.01 |            3.29 |  2.738 |           1.00 |    0.0% |     86.58 | `XorHistogram`\r\n\r\n> After:\r\n\r\n|             ns/byte |              byte/s |    err% |        ins/byte |        cyc/byte |    IPC |       bra/byte |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|                0.10 |   10,369,097,976.62 |    0.0% |            0.32 |            0.33 |  0.985 |           0.06 |    0.6% |      8.63 | `XorHistogram`\r\n\r\ni.e. ~10x faster with GCC at processing the data with representative histograms.\r\n\r\nEdit: note that I couldn't use random byte generation for each benchmark value since it timed out on CI. I have replaced it with getting subsets of a single big random vector.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2457667761",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15123639854,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOFcG4u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15123639854",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e205ad45d2aaad3c35886c665d11f52f43403cb9",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/e205ad45d2aaad3c35886c665d11f52f43403cb9",
      "created_at": "2024-11-05T16:48:58Z"
    },
    {
      "event": "labeled",
      "id": 15123641461,
      "node_id": "LE_lADOABII586bm_bxzwAAAAOFcHR1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15123641461",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-05T16:49:06Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2457686794,
      "node_id": "IC_kwDOABII586SfVMK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2457686794",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-05T16:49:07Z",
      "updated_at": "2024-11-05T16:49:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/32549559124</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2457686794",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15142559946,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOGkSDK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15142559946",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1b640f667333dca30b0432992794e630e1b3cc4c",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/1b640f667333dca30b0432992794e630e1b3cc4c",
      "created_at": "2024-11-06T08:28:04Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15149971443,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOHAjfz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15149971443",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d7242c66894bf2d2c3e5e502f7ad67f03e7ed31a",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/d7242c66894bf2d2c3e5e502f7ad67f03e7ed31a",
      "created_at": "2024-11-06T13:15:17Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15191115003,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOJdgT7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15191115003",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0cca451d00ec0971345347739258426a2e0cbaab",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/0cca451d00ec0971345347739258426a2e0cbaab",
      "created_at": "2024-11-07T19:39:05Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15225699628,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOLhb0s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15225699628",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/a1232973189126cfc9526713011461709685fcc8",
      "created_at": "2024-11-08T20:15:24Z"
    },
    {
      "event": "unlabeled",
      "id": 15227120742,
      "node_id": "UNLE_lADOABII586bm_bxzwAAAAOLm2xm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15227120742",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-08T21:19:46Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2467888419,
      "node_id": "IC_kwDOABII586TGP0j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2467888419",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-11T10:59:28Z",
      "updated_at": "2024-11-11T21:45:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "I ran a `reindex-chainstate` until 860k blocks (SSD, i7 CPU), before and after this change, 2 runs per commit.\r\nAs stated in the previous comment, the latter blocks (>700k) seem to contain a lot of very big vectors where the new algorithm shines.\r\n\r\n<details>\r\n<summary>benchmark</summary>\r\n\r\n```bash\r\nhyperfine   \\\r\n--runs 2   \\\r\n--export-json /mnt/my_storage/reindex-chainstate-obfuscation-overhead.json  \\\r\n--parameter-list COMMIT 866f4fa521f6932162570d6531055cc007e3d0cd,3efc72ff7cbdfb788b23bf4346e29ba99362c120,08db1794647c37f966c525411f931a4a0f6b6119 \\\r\n--prepare 'git checkout {COMMIT} && git clean -fxd && git reset --hard && cmake -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_UTIL=OFF -DBUILD_TX=OFF -DBUILD_TESTS=OFF -DENABLE_WALLET=OFF -DINSTALL_MAN=OFF && cmake --build build -j$(nproc)' \\\r\n'COMMIT={COMMIT} ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=860000 -dbcache=10000 -printtoconsole=0 -reindex-chainstate'\r\n```\r\n\r\n</details>\r\n\r\nWhich indicates that this change speeds up IBD (or at least reindex-chainstate) by roughly ~3% (i.e. reverts the regression):\r\n* 866f4fa521f6932162570d6531055cc007e3d0cd - baseline\r\n* 3efc72ff7cbdfb788b23bf4346e29ba99362c120 - end-to-end vector to uint64\r\n* 08db1794647c37f966c525411f931a4a0f6b6119 - dummy commit that forces obfuscation keys to be 0 to ignore xor operations (since `-blocksxor=0` doesn't affect `dbwrapper`), to see how xor affects speed in general\r\n\r\n<details>\r\n<summary>details</summary>\r\n\r\n> Benchmark 1: COMMIT=866f4fa521f6932162570d6531055cc007e3d0cd ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=860000 -dbcache=10000 -printtoconsole=0 -reindex-chainstate\r\n\r\n  Time (mean ± σ):     20846.396 s ± 72.227 s    [User: 22353.773 s, System: 2563.864 s]\r\n  Range (min … max):   20795.323 s … 20897.468 s    2 runs\r\n\r\n> Benchmark 2: COMMIT=3efc72ff7cbdfb788b23bf4346e29ba99362c120 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=860000 -dbcache=10000 -printtoconsole=0 -reindex-chainstate\r\n\r\n  Time (mean ± σ):     20308.036 s ± 100.345 s    [User: 21745.076 s, System: 2591.459 s]\r\n  Range (min … max):   20237.081 s … 20378.991 s    2 runs\r\n\r\n> Benchmark 3: COMMIT=08db1794647c37f966c525411f931a4a0f6b6119 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=860000 -dbcache=10000 -printtoconsole=0 -reindex-chainstate\r\n\r\n  Time (mean ± σ):     20293.227 s ±  9.923 s    [User: 21711.799 s, System: 2588.886 s]\r\n  Range (min … max):   20286.210 s … 20300.244 s    2 runs\r\n\r\n</details>\r\n\r\n```bash\r\nSummary\r\n'COMMIT=08db1794647c37f966c525411f931a4a0f6b6119 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=860000 -dbcache=10000 -printtoconsole=0 -reindex-chainstate' ran\r\n 1.00 ± 0.00 times faster than 'COMMIT=3efc72ff7cbdfb788b23bf4346e29ba99362c120 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=860000 -dbcache=10000 -printtoconsole=0 -reindex-chainstate'\r\n 1.03 ± 0.00 times faster than 'COMMIT=866f4fa521f6932162570d6531055cc007e3d0cd ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=860000 -dbcache=10000 -printtoconsole=0 -reindex-chainstate'\r\n```\r\n",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2467888419",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "reviewed",
      "id": 2428114068,
      "node_id": "PRR_kwDOABII586QuhSU",
      "url": null,
      "actor": null,
      "commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Reviewed a1232973189126cfc9526713011461709685fcc8\r\n\r\n`git range-diff master a5cad72 a123297`\r\n\r\nThe awk script in the comment in c671dd17dced0d51845dc8d2148f288c4c44ecb2 doesn't add the `'` separators...?\r\n\r\nCare to explain the `scaling_factor` value?\r\n\r\n`XorHistogram` claims to use 8 GB of RAM. Could be a bit much if we want to be able to also run benchmarks on low-end devices.\r\n\r\n```diff\r\ndiff --git a/src/bench/xor.cpp b/src/bench/xor.cpp\r\nindex 2ba8b17f08..bb193c7fcf 100644\r\n--- a/src/bench/xor.cpp\r\n+++ b/src/bench/xor.cpp\r\n@@ -96269,18 +96269,13 @@ static void XorHistogram(benchmark::Bench& bench)\r\n \r\n         total_bytes += scaled_count * size;\r\n         for (size_t j{0}; j < scaled_count; ++j) {\r\n-            std::vector<std::byte> ret;\r\n-            ret.reserve(size);\r\n-            ret.insert(ret.end(), pattern.begin(), pattern.begin() + size);\r\n-            test_data.push_back(std::move(ret));\r\n+            test_data.emplace_back(pattern.begin(), pattern.begin() + size);\r\n         }\r\n     }\r\n     assert(total_bytes == 8'129'394'848); // ~8 GB of data\r\n     std::shuffle(test_data.begin(), test_data.end(), rng); // Make it more realistic & less predictable\r\n \r\n-    std::vector key_bytes{rng.randbytes<std::byte>(8)};\r\n-    uint64_t key;\r\n-    std::memcpy(&key, key_bytes.data(), 8);\r\n+    const uint64_t key{rng.rand64()};\r\n \r\n     size_t offset{0};\r\n     bench.batch(total_bytes).unit(\"byte\").run([&] {\r\n@@ -96296,9 +96291,7 @@ static void AutoFileXor(benchmark::Bench& bench)\r\n     FastRandomContext rng{/*fDeterministic=*/true};\r\n     auto data{rng.randbytes<std::byte>(1'000'000)};\r\n \r\n-    std::vector<std::byte> empty_key_bytes(8, std::byte{0}); // Test disabled xor\r\n-    uint64_t empty_key;\r\n-    std::memcpy(&empty_key, empty_key_bytes.data(), 8);\r\n+    uint64_t empty_key{0};\r\n \r\n     const fs::path test_path = fs::temp_directory_path() / \"xor_benchmark.dat\";\r\n     AutoFile f{fsbridge::fopen(test_path, \"wb+\"), empty_key};\r\n```",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2428114068",
      "submitted_at": "2024-11-11T21:49:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "commented",
      "id": 2469174132,
      "node_id": "IC_kwDOABII586TLJt0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2469174132",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-11T22:11:50Z",
      "updated_at": "2024-11-12T15:18:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "> The awk script in the comment in https://github.com/bitcoin/bitcoin/commit/c671dd17dced0d51845dc8d2148f288c4c44ecb2 doesn't add the ' separators...?\r\n\r\nI've added them manually.\r\n\r\n> Care to explain the scaling_factor value?\r\n\r\n~The values in the histogram (i.e. total bytes streamed through xor) add up to 92gb, but 1 byte values occupy half of that.~ (edit: this is only true for the first row, in other cases we would need to multiply by the first column)\r\n\r\nSince we have thousands of big values that represent vector of that size, we have to include all of those into the test set at least once.\r\nI had to scale down the histogram such that the lower values, having a few hundred occurrences aren't flattened out completely - to make the histogram still representative. Do you have a better idea?\r\n\r\n> XorHistogram claims to use 8 GB of RAM. Could be a bit much if we want to be able to also run benchmarks on low-end devices.\r\n\r\nYes, but if I scale it down more, more values will be equal in the histogram and it won't reflect real usage.\r\nThat's why I've set it to low priority, we don't have to run these for every execution.\r\n\r\nEdit: pushed some nits to `git range-diff 866f4fa521f6932162570d6531055cc007e3d0cd..a1232973189126cfc9526713011461709685fcc8 866f4fa521f6932162570d6531055cc007e3d0cd..57caa965b5ae284e501f892415d60fcb536f4c0e`",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2469174132",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15256433172,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAONWrIU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15256433172",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "57caa965b5ae284e501f892415d60fcb536f4c0e",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/57caa965b5ae284e501f892415d60fcb536f4c0e",
      "created_at": "2024-11-11T23:06:20Z"
    },
    {
      "event": "renamed",
      "id": 15256443209,
      "node_id": "RTE_lADOABII586bm_bxzwAAAAONWtlJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15256443209",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-11T23:07:50Z",
      "rename": {
        "from": "optimization: change XOR obfuscation key from `std::vector<std::byte>(8)` to `uint64_t`",
        "to": "optimization: change XOR obfuscation key from `std::vector<std::byte>{8}` to `uint64_t`"
      }
    },
    {
      "event": "commented",
      "id": 2469297214,
      "node_id": "IC_kwDOABII586TLnw-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2469297214",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-11T23:43:35Z",
      "updated_at": "2024-11-11T23:43:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "> > Care to explain the scaling_factor value?\r\n> \r\n> The values in the histogram (i.e. total bytes streamed through xor) add up to ~92gb, but 1 byte values occupy half of that. I had to scale down the histogram such that the lower values, having a few hundred occurrences aren't flattened out completely - to make the histogram still representative. Do you have a better idea?\r\n\r\nSo `raw_histogram` really is the raw data?\r\n\r\nAdded:\r\n```C++\r\n    uint64_t raw_total_bytes{0};\r\n    for (size_t i{0}; i < std::size(raw_histogram); i += 2) {\r\n        const uint64_t size = raw_histogram[i];\r\n        const uint64_t count = raw_histogram[i + 1];\r\n        raw_total_bytes += size * count;\r\n    }\r\n    printf(\"raw_total_bytes: %ld\", raw_total_bytes);\r\n```\r\nGot:\r\n```\r\nraw_total_bytes: 1'277'637'746'542 # \"'\" added manually\r\n```\r\n\r\nSo something like 1.28TB instead of 92GB, but I can't seem to get my head screwed on right today.\r\n\r\n---\r\n\r\nIf I re-understood correctly what the code was doing with the scaling - it's doing only `1'000'000` XOR-passes for the most common size (1 byte) instead of `47'584'838'861`, and scaling down the number of XOR-passes for the others by the same factor.\r\n\r\nThought the following would be slightly faster:\r\n```\r\ndiff --git a/src/bench/xor.cpp b/src/bench/xor.cpp\r\nindex 2ba8b17f08..5e933d74ea 100644\r\n--- a/src/bench/xor.cpp\r\n+++ b/src/bench/xor.cpp\r\n@@ -96253,7 +96253,7 @@ static void XorHistogram(benchmark::Bench& bench)\r\n     };\r\n \r\n     const auto max_count{static_cast<double>(raw_histogram[1])}; // 1 byte is the most common\r\n-    const auto scaling_factor{1'000'000U};\r\n+    const auto scaling_factor{1'000'000.0 / max_count};\r\n \r\n     FastRandomContext rng{/*fDeterministic=*/true};\r\n     const size_t pattern_size = raw_histogram[std::size(raw_histogram) - 2];\r\n@@ -96265,7 +96265,7 @@ static void XorHistogram(benchmark::Bench& bench)\r\n     for (size_t i{0}; i < std::size(raw_histogram); i += 2) {\r\n         const uint64_t size = raw_histogram[i];\r\n         const uint64_t count = raw_histogram[i + 1];\r\n-        const size_t scaled_count{static_cast<size_t>(std::ceil((static_cast<double>(count) / max_count) * scaling_factor))};\r\n+        const size_t scaled_count{static_cast<size_t>(std::ceil(static_cast<double>(count) * scaling_factor))};\r\n \r\n         total_bytes += scaled_count * size;\r\n         for (size_t j{0}; j < scaled_count; ++j) {\r\n```\r\nStill passes the `total_bytes == 8'129'394'848`-assert unmodified, but seems slightly slower in my measurements (including for posterity).",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2469297214",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "reviewed",
      "id": 2429009065,
      "node_id": "PRR_kwDOABII586Qx7yp",
      "url": null,
      "actor": null,
      "commit_id": "57caa965b5ae284e501f892415d60fcb536f4c0e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Reviewed 57caa965b5ae284e501f892415d60fcb536f4c0e\r\n\r\n`git range-diff master a123297 57caa96`\r\n\r\n- Applied most of my nits that were still valid.\r\n\r\nI understand you were burned by endianness but I disagree that it's worth sacrificing readability where endianness is a non-issue.\r\n\r\nFor cases where endianness is a concern, I suggest the following pattern:\r\n```C++\r\nuint64_t xor_key;\r\nconstexpr std::array<uint8_t, sizeof xor_key> xor_pat{std::to_array<uint8_t>({0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00})};\r\nstd::memcpy(&xor_key, xor_pat.data(), sizeof xor_key);\r\n```\r\n1. Declare the `uint64_t` first so `sizeof` can be used in place of magic `8`.\r\n2. Use `constexpr std::array` instead of `const std::vector` to constrain the size.\r\n3. Use `to_array` initialization since regular brace-initialization will only complain if *too many* elements are given, not too few.\r\n4. Use `uint8_t` in favor of `std::byte` to improve readability.\r\n5. Use `sizeof <target>` for the `memcpy` call since it is good practice to avoid writing out of bounds and also avoids the magic `8`.\r\n\r\n---\r\nUse `~0ULL` to express a `uint64_t` with all bits set, ensuring one doesn't forget an `f`.\r\n\r\n---\r\n<details>\r\n<summary>\r\nFull diff of suggestions:\r\n</summary>\r\n\r\n```diff\r\ndiff --git a/src/bench/xor.cpp b/src/bench/xor.cpp\r\nindex f94a1a6f96..fdf41b3696 100644\r\n--- a/src/bench/xor.cpp\r\n+++ b/src/bench/xor.cpp\r\n@@ -96275,10 +96275,7 @@ static void XorHistogram(benchmark::Bench& bench)\r\n     assert(total_bytes == 8'129'394'848); // ~8 GB of data\r\n     std::shuffle(test_data.begin(), test_data.end(), rng); // Make it more realistic & less predictable\r\n \r\n-    std::vector key_bytes{rng.randbytes<std::byte>(8)};\r\n-    uint64_t key;\r\n-    std::memcpy(&key, key_bytes.data(), 8);\r\n-\r\n+    const uint64_t key{rng.rand64()};\r\n     size_t offset{0};\r\n     bench.batch(total_bytes).unit(\"byte\").run([&] {\r\n         for (auto& data : test_data) {\r\n@@ -96293,10 +96290,7 @@ static void AutoFileXor(benchmark::Bench& bench)\r\n     FastRandomContext rng{/*fDeterministic=*/true};\r\n     auto data{rng.randbytes<std::byte>(1'000'000)};\r\n \r\n-    std::vector<std::byte> empty_key_bytes(8, std::byte{0}); // Test disabled xor\r\n-    uint64_t empty_key;\r\n-    std::memcpy(&empty_key, empty_key_bytes.data(), 8);\r\n-\r\n+    const uint64_t empty_key{0}; // Test disabled xor\r\n     const fs::path test_path = fs::temp_directory_path() / \"xor_benchmark.dat\";\r\n     AutoFile f{fsbridge::fopen(test_path, \"wb+\"), empty_key};\r\n     bench.batch(data.size()).unit(\"byte\").run([&] {\r\ndiff --git a/src/test/streams_tests.cpp b/src/test/streams_tests.cpp\r\nindex 5e9b607b3a..ac51eb3e51 100644\r\n--- a/src/test/streams_tests.cpp\r\n+++ b/src/test/streams_tests.cpp\r\n@@ -77,9 +77,9 @@ BOOST_AUTO_TEST_CASE(xor_file)\r\n     auto raw_file{[&](const auto& mode) { return fsbridge::fopen(xor_path, mode); }};\r\n     const std::vector<uint8_t> test1{1, 2, 3};\r\n     const std::vector<uint8_t> test2{4, 5};\r\n-    const std::vector xor_pat{std::byte{0xff}, std::byte{0x00}, std::byte{0xff}, std::byte{0x00}, std::byte{0xff}, std::byte{0x00}, std::byte{0xff}, std::byte{0x00}};\r\n     uint64_t xor_key;\r\n-    std::memcpy(&xor_key, xor_pat.data(), 8);\r\n+    constexpr std::array<uint8_t, sizeof xor_key> xor_pat{std::to_array<uint8_t>({0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00})};\r\n+    std::memcpy(&xor_key, xor_pat.data(), sizeof xor_key);\r\n \r\n     {\r\n         // Check errors for missing file\r\n@@ -293,12 +293,8 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\r\n     in.push_back(std::byte{0xf0});\r\n \r\n     {\r\n-        const std::vector xor_pat{std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}};\r\n-        uint64_t xor_key;\r\n-        std::memcpy(&xor_key, xor_pat.data(), 8);\r\n-\r\n         DataStream ds{in};\r\n-        ds.Xor(xor_key);\r\n+        ds.Xor(~0ULL);\r\n         BOOST_CHECK_EQUAL(\"\\xf0\\x0f\"s, ds.str());\r\n     }\r\n \r\n@@ -307,9 +303,9 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\r\n     in.push_back(std::byte{0x0f});\r\n \r\n     {\r\n-        const std::vector xor_pat{std::byte{0xff}, std::byte{0x0f}, std::byte{0xff}, std::byte{0x0f}, std::byte{0xff}, std::byte{0x0f}, std::byte{0xff}, std::byte{0x0f}};\r\n         uint64_t xor_key;\r\n-        std::memcpy(&xor_key, xor_pat.data(), 8);\r\n+        constexpr std::array<uint8_t, sizeof xor_key> xor_pat{std::to_array<uint8_t>({0xff, 0x0f, 0xff, 0x0f, 0xff, 0x0f, 0xff, 0x0f})};\r\n+        std::memcpy(&xor_key, xor_pat.data(), sizeof xor_key);\r\n \r\n         DataStream ds{in};\r\n         ds.Xor(xor_key);\r\n```\r\n\r\n</details>",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2429009065",
      "submitted_at": "2024-11-12T09:21:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "commented",
      "id": 2470110678,
      "node_id": "IC_kwDOABII586TOuXW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2470110678",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-12T10:07:24Z",
      "updated_at": "2024-11-12T10:07:24Z",
      "author_association": "MEMBER",
      "body": "I haven't really looked at the changes here, but just looking at the diff (+96'000 lines), my feedback would be that you'll need to change approach in regards to making your data available (if the intent is to have that included), as I doubt we'll be adding 96'000 lines to `bench/xor.cpp`. You could look at how we generate a header from bench/data/block413567.raw for a different approach, as including a small binary blob, and parsing it into a header at compile time is far more palatable.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2470110678",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2470809178,
      "node_id": "IC_kwDOABII586TRY5a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2470809178",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-12T15:16:20Z",
      "updated_at": "2024-11-12T15:38:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks  @fanquake, I thought of that, can you please help me understand the constraints?\r\nWouldn't that require a cmake generation step from binary to header which would basically produce the exact same lines as what we have now?\r\nWould it help if I simply extracted it to a separate header file instead?\r\n\r\n> So something like 1.28TB instead of 92GB, but I can't seem to get my head screwed on right today.\r\n\r\nYeah, I've edited that part since, my napkin calculations were only true for the first row, in other cases we would need to multiply by the first column - like you did. But the point is that it's a lot of data that we have to scale down.\r\n\r\n> but seems slightly slower in my measurements\r\n\r\nI thought of that as well, but wanted to avoid floating point conversion (likely the reason for the slowness in your example)",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2470809178",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "mentioned",
      "id": 15266463621,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAON87-F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15266463621",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-12T15:16:21Z"
    },
    {
      "event": "subscribed",
      "id": 15266463656,
      "node_id": "SE_lADOABII586bm_bxzwAAAAON87-o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15266463656",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-12T15:16:21Z"
    },
    {
      "event": "commented",
      "id": 2471201204,
      "node_id": "IC_kwDOABII586TS4m0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2471201204",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-12T17:51:12Z",
      "updated_at": "2024-11-12T17:51:12Z",
      "author_association": "MEMBER",
      "body": "> Wouldn't that require a cmake generation step from binary to header which would basically produce the exact same lines as what we have now?\r\n\r\nYes. See `bench/data/block413567.raw` & `bench/data/block413567.raw.h`, where at build time a header file of ~`125'000` lines is produced.\r\n\r\n> Would it help if I simply extracted it to a separate header file instead?\r\n\r\nI don't think so. The point is more to not add 100'000s of lines of \"data\" to this repo, which doesn't scale across many benchmarks, creates unusable diffs, leaves (source) files unviewable on GH etc.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2471201204",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15284972538,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOPDiv6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15284972538",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2ec822c723708d0aa800585576f7986ce41452b5",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/2ec822c723708d0aa800585576f7986ce41452b5",
      "created_at": "2024-11-13T15:25:47Z"
    },
    {
      "event": "commented",
      "id": 2473947449,
      "node_id": "IC_kwDOABII586TdXE5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2473947449",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-13T15:27:57Z",
      "updated_at": "2024-11-13T15:27:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I understand you were burned by endianness but I disagree that it's worth sacrificing readability where endianness is a non-issue.\r\n\r\nThanks @hodlinator for the suggestions, I tried them all, but in the end decided that I value consistency more than coming up with a separate solution for each test case. These are ugly, I agree, but at least they're testing the setup we're using in prod.\r\nI did however change the hard-coded 8 values to `sizeof xor_key` (for memcpy) or `sizeof(uint64_t)` for vector inits.\r\n\r\n> The point is more to not add 100'000s of lines of \"data\" to this repo\r\n\r\nI have stored the sorted diffs in the end (since the lines are correlated, i.e. more likely to have similar neighbours) and compressed them using .tar.gz (added the [generator python script](https://gist.github.com/l0rinc/a44da845ad32ec89c30525507cdd28ee) as a gist, please verify) - this way the histogram data is ~100 kb instead of 1.7 MB (thanks for the hint @fanquake).\r\nI've extended `GenerateHeaderFromRaw.cmake` with compression support (adjusting `GenerateHeaders.cmake` to trim the suffix from the header name) and added more safety asserts to make sure the data read back is the same as before.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2473947449",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "mentioned",
      "id": 15285005365,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAOPDqw1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15285005365",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-13T15:27:58Z"
    },
    {
      "event": "subscribed",
      "id": 15285005389,
      "node_id": "SE_lADOABII586bm_bxzwAAAAOPDqxN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15285005389",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-13T15:27:58Z"
    },
    {
      "event": "mentioned",
      "id": 15285005427,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAOPDqxz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15285005427",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-13T15:27:58Z"
    },
    {
      "event": "subscribed",
      "id": 15285005447,
      "node_id": "SE_lADOABII586bm_bxzwAAAAOPDqyH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15285005447",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-13T15:27:58Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15493848930,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAObgV9i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15493848930",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5",
      "created_at": "2024-12-02T14:21:52Z"
    },
    {
      "event": "reviewed",
      "id": 2475934654,
      "node_id": "PRR_kwDOABII586Tk8O-",
      "url": null,
      "actor": null,
      "commit_id": "f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code reviewed f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5\r\n\r\n```\r\n₿ git range-diff master 57caa96 f2fd1f7\r\n₿ git show e314bb7e00 > old\r\n₿ git show 91a8fde051 > new\r\n₿ meld old new\r\n```\r\n\r\nThanks for using more `constexpr` `std::array`s and clearer `sizeof`s!\r\n\r\nNice that block data could be compressed to such a large extent.\r\n\r\nnit: Would prefer the *\\*.cmake* changes where broken out into their own commit, keeping only *src/bench/CMakeLists.txt* as part of the benchmark change.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2475934654",
      "submitted_at": "2024-12-03T16:04:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "commented",
      "id": 2515108628,
      "node_id": "IC_kwDOABII586V6YMU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2515108628",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T17:00:02Z",
      "updated_at": "2024-12-03T17:00:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, but curious for more feedback from @maflcko about this PR. The actual code changes here do not seem too complicated but maybe they make the code less generic. I wonder if you think there are concrete downsides to this PR, or if the changes are ok but possibly not be worth the review effort (as https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2449824362 seems to suggest)\r\n\r\nI'm happy to spend time reviewing this if it improves performance and doesn't cause other problems.\r\n\r\n> this way the histogram data is ~100 kb instead of 1.7 MB\r\n\r\nCurrent approach seems ok to me, but wondering it it might be better to just use a sampling of the most common write sizes instead of including the entire histogram. It seems like if you take the top 50 sizes it covers 99.6% of the writes, and might make the test more maintainable and PR easier to understand without changing results too much.\r\n\r\n<details><summary>code</summary>\r\n<p>\r\n\r\nusing histogram from https://gist.github.com/l0rinc/a44da845ad32ec89c30525507cdd28ee\r\n\r\n```python\r\n    cut = 50\r\n    hist_count = rest_count = 0\r\n    histogram.sort(key=lambda h: (-h[1]*h[0]))\r\n    for i, (size, count) in enumerate(histogram):\r\n        if i < cut:\r\n           print(f\"{size=}, {count=}\")\r\n           hist_count += count\r\n        else:\r\n           rest_count += count\r\n\r\n    print()\r\n    print(f\"{hist_count=} {hist_count/(hist_count+rest_count)*100:.1f}%\")\r\n    print(f\"{rest_count=} {rest_count/(hist_count+rest_count)*100:.1f}%\")\r\n```\r\n</p>\r\n</details>\r\n\r\n<details><summary>sizes</summary>\r\n<p>\r\n\r\n```\r\nsize=32, count=5369404406\r\nsize=106, count=1193555153\r\nsize=71, count=1763349816\r\nsize=107, count=1064027363\r\nsize=25, count=2705183236\r\nsize=33, count=2025696499\r\nsize=4, count=14983070199\r\nsize=72, count=827712501\r\nsize=23, count=2357347372\r\nsize=1, count=47584838861\r\nsize=8, count=5939128629\r\nsize=21, count=2019807250\r\nsize=22, count=1616301504\r\nsize=34, count=682781008\r\nsize=139, count=155158814\r\nsize=253, count=83729340\r\nsize=105, count=198656556\r\nsize=64, count=275253628\r\nsize=4096, count=3905157\r\nsize=138, count=112918349\r\nsize=252, count=48105681\r\nsize=254, count=38940977\r\nsize=35, count=269339238\r\nsize=218, count=25918921\r\nsize=140, count=37826769\r\nsize=83, count=53818260\r\nsize=217, count=13625647\r\nsize=219, count=12992432\r\nsize=108, count=24662023\r\nsize=488, count=4909014\r\nsize=27, count=87057844\r\nsize=489, count=4483016\r\nsize=28, count=78184146\r\nsize=40, count=50600412\r\nsize=113, count=17829712\r\nsize=65, count=29197009\r\nsize=128, count=13323530\r\nsize=123, count=12986923\r\nsize=37, count=41467794\r\nsize=114, count=9826401\r\nsize=26, count=35870265\r\nsize=130, count=7111451\r\nsize=29, count=30858682\r\nsize=487, count=1836899\r\nsize=70, count=12772097\r\nsize=131, count=6398914\r\nsize=109, count=7506161\r\nsize=490, count=1380253\r\nsize=95901, count=6384\r\nsize=30, count=19197417\r\n\r\nhist_count=91959859913 99.6%\r\nrest_count=382932220 0.4%\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2515108628",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "mentioned",
      "id": 15513166134,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAOcqCE2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15513166134",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T17:00:03Z"
    },
    {
      "event": "subscribed",
      "id": 15513166154,
      "node_id": "SE_lADOABII586bm_bxzwAAAAOcqCFK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15513166154",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T17:00:03Z"
    },
    {
      "event": "commented",
      "id": 2515129785,
      "node_id": "IC_kwDOABII586V6dW5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2515129785",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T17:09:30Z",
      "updated_at": "2024-12-03T17:09:30Z",
      "author_association": "MEMBER",
      "body": "> Concept ACK, but curious for more feedback from @maflcko about this PR. The actual code changes here do not seem too complicated but maybe they make the code less generic.\r\n\r\nThere is a good chance that increasing the size of the vector is insufficient, if there is ever a need to increase it to more than 8 bytes, so a complete rewrite may be needed in that case anyway. However, this is just my guess and only time will tell. So I'd say this change is probably fine for now.\r\n\r\nWould still be nice to if there was a way to take all of it out of the hot path (possibly with higher overall benefits), but I don't know if such a change is possible and will replace this pull.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2515129785",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "mentioned",
      "id": 15513307140,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAOcqkgE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15513307140",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T17:09:31Z"
    },
    {
      "event": "subscribed",
      "id": 15513307155,
      "node_id": "SE_lADOABII586bm_bxzwAAAAOcqkgT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15513307155",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T17:09:31Z"
    },
    {
      "event": "commented",
      "id": 2515212570,
      "node_id": "IC_kwDOABII586V6xka",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2515212570",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T17:44:18Z",
      "updated_at": "2024-12-03T17:44:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Would still be nice to if there was a way to take all of it out of the hot path\r\n\r\nCan you give me hints on how to do that?\r\nSince we have a primitive as a key now, we already skip xor with 0 value now, see https://github.com/bitcoin/bitcoin/pull/31144/files#diff-4020c723bb55e114bdc7ff769086a765dcc7ccfb61da2047a315db16c0c7a8b4R295\r\n\r\n> but wondering it it might be better to just use a sampling of the most common write sizes\r\n\r\n@fanquake mentioned that he thinks this benchmark could be useful - if he's fine with the truncated version as well, I'll simplify (would solve some of @hodlinator's cmake concerns as well).",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2515212570",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "mentioned",
      "id": 15513907197,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAOcs2_9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15513907197",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T17:44:20Z"
    },
    {
      "event": "subscribed",
      "id": 15513907219,
      "node_id": "SE_lADOABII586bm_bxzwAAAAOcs3AT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15513907219",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T17:44:20Z"
    },
    {
      "event": "mentioned",
      "id": 15513907243,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAOcs3Ar",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15513907243",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T17:44:20Z"
    },
    {
      "event": "subscribed",
      "id": 15513907261,
      "node_id": "SE_lADOABII586bm_bxzwAAAAOcs3A9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15513907261",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T17:44:20Z"
    },
    {
      "event": "commented",
      "id": 2515307127,
      "node_id": "IC_kwDOABII586V7Ip3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2515307127",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T18:33:10Z",
      "updated_at": "2024-12-03T18:33:10Z",
      "author_association": "MEMBER",
      "body": "> It seems like if you take the top 50 sizes it covers 99.6% of the writes\r\n\r\nI had the same thought. Obviously there could be an unlikely problem if the remaining 0.04% of writes accounted for the majority of the time, but that seems unlikely. Other than that, taking only the top N seems preferable.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2515307127",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2519764142,
      "node_id": "IC_kwDOABII586WMIyu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2519764142",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-05T09:38:34Z",
      "updated_at": "2024-12-05T09:43:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Would still be nice to if there was a way to take all of it out of the hot path\r\n\r\nSince blocks are XOR-ed as well, I can't meaningfully test it with a reindex(-chainstate), so I did 2 full IBDs until 800k blocks, rebased after https://github.com/bitcoin/bitcoin/pull/30039 with `-blocksxor=0` to test whether we can disable xor completely now.\r\n\r\n<details>\r\n<summary>benchmark</summary>\r\n\r\n```bash\r\nhyperfine \\\r\n--runs 2 \\\r\n--export-json /mnt/my_storage/IBD-xor-rebased.json \\\r\n--parameter-list COMMIT e1074081c9f1895a4f629dfee347ceae484a10d3,f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5 \\\r\n--prepare 'rm -rf /mnt/my_storage/BitcoinData/* && git checkout {COMMIT} && git clean -fxd && git reset --hard && cmake -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_UTIL=OFF -DBUILD_TX=OFF -DBUILD_TESTS=OFF -DENABLE_WALLET=OFF -DINSTALL_MAN=OFF && cmake --build build -j$(nproc)' \\\r\n'COMMIT={COMMIT} ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=800000 -blocksxor=0 -dbcache=10000 -printtoconsole=0'\r\n```\r\n\r\n</details>\r\n\r\n```bash\r\nBenchmark 1: COMMIT=e1074081c9f1895a4f629dfee347ceae484a10d3 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=800000 -blocksxor=0 -dbcache=10000 -printtoconsole=0\r\n  Time (mean ± σ):     25797.921 s ± 61.629 s    [User: 26803.189 s, System: 1457.936 s]\r\n  Range (min … max):   25754.343 s … 25841.500 s    2 runs\r\n \r\nBenchmark 2: COMMIT=f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=800000 -blocksxor=0 -dbcache=10000 -printtoconsole=0\r\n  Time (mean ± σ):     23751.046 s ± 342.376 s    [User: 25322.345 s, System: 1509.236 s]\r\n  Range (min … max):   23508.949 s … 23993.142 s    2 runs\r\n```\r\n \r\nWhich indicates a 9% speedup compared to the baseline:\r\n```bash \r\nSummary\r\n  COMMIT=f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=800000 -blocksxor=0 -dbcache=10000 -printtoconsole=0 ran\r\n    1.09 ± 0.02 times faster than COMMIT=e1074081c9f1895a4f629dfee347ceae484a10d3 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=800000 -blocksxor=0 -dbcache=10000 -printtoconsole=0\r\n```",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2519764142",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2519783287,
      "node_id": "IC_kwDOABII586WMNd3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2519783287",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-05T09:46:12Z",
      "updated_at": "2024-12-05T09:46:12Z",
      "author_association": "MEMBER",
      "body": "> Would still be nice to if there was a way to take all of it out of the hot path (possibly with higher overall benefits), but I don't know if such a change is possible and will replace this pull.\r\n\r\nActually, this change here also affects RPC performance, not just internal validation, so this can be done in a follow-up or separate pull, if it is possible at all.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2519783287",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2523295114,
      "node_id": "IC_kwDOABII586WZm2K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2523295114",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T13:48:59Z",
      "updated_at": "2024-12-06T13:53:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "More context:\r\nThe previous benchmark was for completely turning off XOR - but we can only do that for new IBD by explicitly setting it to 0. But for the majority of cases we likely want to still to the xor, so this PR is meant to speed it up.\r\nI have remeasured it with doing full IBD until 800k blocks (two runs to measure stability, since reindex wouldn't cover all usages of XOR):\r\n\r\n<details>\r\n<summary>benchmark</summary>\r\n\r\n```bash\r\nhyperfine \\\r\n--runs 2 \\\r\n--export-json /mnt/my_storage/IBD-xor-rebased.json \\\r\n--parameter-list COMMIT e1074081c9f1895a4f629dfee347ceae484a10d3,f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5 \\\r\n--prepare 'rm -rf /mnt/my_storage/BitcoinData/* && git checkout {COMMIT} && git clean -fxd && git reset --hard && cmake -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_UTIL=OFF -DBUILD_TX=OFF -DBUILD_TESTS=OFF -DENABLE_WALLET=OFF -DINSTALL_MAN=OFF && cmake --build build -j$(nproc)' \\\r\n'COMMIT={COMMIT} ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=800000 -dbcache=10000 -printtoconsole=0'\r\n```\r\n\r\n</details>\r\n\r\n```bash\r\nBenchmark 1: COMMIT=e1074081c9f1895a4f629dfee347ceae484a10d3 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=800000 -dbcache=10000 -printtoconsole=0\r\n  Time (mean ± σ):     25601.461 s ± 65.686 s    [User: 27025.116 s, System: 1586.908 s]\r\n  Range (min … max):   25555.014 s … 25647.907 s    2 runs\r\n \r\nBenchmark 2: COMMIT=f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=800000 -dbcache=10000 -printtoconsole=0\r\n  Time (mean ± σ):     24526.781 s ± 389.029 s    [User: 25525.801 s, System: 1552.625 s]\r\n  Range (min … max):   24251.697 s … 24801.866 s    2 runs\r\n```\r\n\r\nWhich indicates that this will speed up IBD by roughly 4% on average (now that 30039 was merged the difference is more obvious):\r\n ```bash\r\nSummary\r\n  COMMIT=f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=800000 -dbcache=10000 -printtoconsole=0 ran\r\n    1.04 ± 0.02 times faster than COMMIT=e1074081c9f1895a4f629dfee347ceae484a10d3 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=800000 -dbcache=10000 -printtoconsole=0\r\n```",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2523295114",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "renamed",
      "id": 15560727277,
      "node_id": "RTE_lADOABII586bm_bxzwAAAAOffdrt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15560727277",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T13:52:17Z",
      "rename": {
        "from": "optimization: change XOR obfuscation key from `std::vector<std::byte>{8}` to `uint64_t`",
        "to": "optimization: speed up XOR by 4% (9% when disabled) by applying it in larger batches"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15563515230,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOfqGVe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15563515230",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b58e3bf928905f394add3d081dd8a35b208b42c6",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/b58e3bf928905f394add3d081dd8a35b208b42c6",
      "created_at": "2024-12-06T17:22:30Z"
    },
    {
      "event": "commented",
      "id": 2523810705,
      "node_id": "IC_kwDOABII586WbkuR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2523810705",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T17:30:09Z",
      "updated_at": "2024-12-06T17:37:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the reviews and hints, I've pushed the following [changes](https://github.com/bitcoin/bitcoin/compare/f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5..b9c847fd093d100628817af98fe837db938160f7):\r\n* Reverted all cmake changes @hodlinator mentioned and histogram archives, and based on the hints of @ryanofsky and @maflcko I've kept only the top entries (by frequency, re-sorted by size), making sure that the really big write-vectors are also covered (so kept the first 1000 instead of just the first 50). This enabled putting all the data in the sourcefile.\r\n* Added `Assume`s to each xor to check that we don't have any useless calls with `0` keys - making sure we \"turn off\" the feature when we can.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2523810705",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "mentioned",
      "id": 15563649309,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAOfqnEd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15563649309",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T17:30:11Z"
    },
    {
      "event": "subscribed",
      "id": 15563649367,
      "node_id": "SE_lADOABII586bm_bxzwAAAAOfqnFX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15563649367",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T17:30:11Z"
    },
    {
      "event": "mentioned",
      "id": 15563649417,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAOfqnGJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15563649417",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T17:30:11Z"
    },
    {
      "event": "subscribed",
      "id": 15563649456,
      "node_id": "SE_lADOABII586bm_bxzwAAAAOfqnGw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15563649456",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T17:30:11Z"
    },
    {
      "event": "mentioned",
      "id": 15563649529,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAOfqnH5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15563649529",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T17:30:11Z"
    },
    {
      "event": "subscribed",
      "id": 15563649572,
      "node_id": "SE_lADOABII586bm_bxzwAAAAOfqnIk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15563649572",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T17:30:12Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15563721859,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOfq4yD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15563721859",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/b9c847fd093d100628817af98fe837db938160f7",
      "created_at": "2024-12-06T17:35:35Z"
    },
    {
      "event": "reviewed",
      "id": 2486500175,
      "node_id": "PRR_kwDOABII586UNPtP",
      "url": null,
      "actor": null,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2486500175",
      "submitted_at": "2024-12-10T13:20:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "commented",
      "id": 2533393335,
      "node_id": "IC_kwDOABII586XAIO3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2533393335",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-11T01:15:14Z",
      "updated_at": "2024-12-11T01:15:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "Code review b9c847fd093d100628817af98fe837db938160f7. These changes look good and make sense, and I reviewed almost everything but have a few pieces of feedback:\r\n\r\n- I would very strongly endorse Marco's [suggestion](https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1878083641) to represent keys with an `XorKey` struct instead of raw `uint64_t` values so the code getting and setting keys is simpler, safer, and more uniform, and we can avoid a proliferation of `memcpy` calls.\r\n- I don't think I understand structure of the third and fourth commits. The third commit seems to be adding an optimization to streams.h but also refactoring code not directly related to streams.h and then the fourth commit is refactoring a lot of the same code that was just refactored, and some of the code that was optimized as well. Would suggest doing this more cleanly in 3 commits:\r\n  - First commit adding optimized stream.h/stream.cpp functions and wrappers to provide backwards compatibility so no other code or tests have to change in the commit.\r\n  - Second commit updating code and tests to call the optimized stream.h API instead of the backwards compatibility wrappers.\r\n  - Third commit deleting stream.h backwards compatibility wrappers.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2533393335",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "reviewed",
      "id": 2492769021,
      "node_id": "PRR_kwDOABII586UlKL9",
      "url": null,
      "actor": null,
      "commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2492769021",
      "submitted_at": "2024-12-11T01:17:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "convert_to_draft",
      "id": 15657691382,
      "node_id": "CTDE_lADOABII586bm_bxzwAAAAOlRWj2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15657691382",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-14T16:25:28Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15739809083,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOqKm07",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15739809083",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "dc286a6e9ce3ed0b2c23e5c33f1fdef0b060d5fb",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/dc286a6e9ce3ed0b2c23e5c33f1fdef0b060d5fb",
      "created_at": "2024-12-21T15:39:08Z"
    },
    {
      "event": "labeled",
      "id": 15739943840,
      "node_id": "LE_lADOABII586bm_bxzwAAAAOqLHug",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15739943840",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-21T17:07:05Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2558175944,
      "node_id": "IC_kwDOABII586YeqrI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2558175944",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-21T17:07:06Z",
      "updated_at": "2024-12-21T17:07:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/34748857550</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2558175944",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15739983065,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOqLRTZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15739983065",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4bc1c6d0a9d3b3cd26be7545d0556bd549ca4071",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/4bc1c6d0a9d3b3cd26be7545d0556bd549ca4071",
      "created_at": "2024-12-21T17:33:12Z"
    },
    {
      "event": "renamed",
      "id": 15741384390,
      "node_id": "RTE_lADOABII586bm_bxzwAAAAOqQnbG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15741384390",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-22T11:35:34Z",
      "rename": {
        "from": "optimization: speed up XOR by 4% (9% when disabled) by applying it in larger batches",
        "to": "optimization: batch XOR operations 12% faster IBD"
      }
    },
    {
      "event": "commented",
      "id": 2558426619,
      "node_id": "IC_kwDOABII586Yfn37",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2558426619",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-22T11:42:30Z",
      "updated_at": "2024-12-22T14:03:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "The PR has been split into 3 to simplify review, please check those out first:\r\n* https://github.com/bitcoin/bitcoin/pull/31490\r\n* https://github.com/bitcoin/bitcoin/pull/31551\r\n\r\nThe 3 changes together achieve a 12.3% speedup in raw IBD (real nodes, multiple runs, 870k blocks, 1Gb dbcache, ssd)\r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\n```bash\r\nhyperfine \\\r\n--runs 2 \\\r\n--parameter-list COMMIT d73f37dda221835b5109ede1b84db2dc7c4b74a1,fe7365584bb3703e5691c93fb004772e84db3697 \\\r\n--prepare 'rm -rf /mnt/my_storage/BitcoinData/* && git checkout {COMMIT} && git clean -fxd && git reset --hard && cmake -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_UTIL=OFF -DBUILD_TX=OFF -DBUILD_TESTS=OFF -DENABLE_WALLET=OFF -DINSTALL_MAN=OFF && cmake --build build -j$(nproc)' \\\r\n'COMMIT={COMMIT} ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=870000 -dbcache=1000 -printtoconsole=0'                                                          \r\n  \r\nBenchmark 1: COMMIT=d73f37dda221835b5109ede1b84db2dc7c4b74a1 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=870000 -dbcache=1000 -printtoconsole=0\r\n  Time (mean ± σ):     34098.690 s ± 175.888 s    [User: 51918.900 s, System: 2898.126 s]\r\n  Range (min … max):   33974.318 s … 34223.062 s    2 runs\r\n  \r\nBenchmark 2: COMMIT=fe7365584bb3703e5691c93fb004772e84db3697 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=870000 -dbcache=1000 -printtoconsole=0\r\n  Time (mean ± σ):     30359.460 s ± 417.536 s    [User: 48322.766 s, System: 2898.793 s]\r\n  Range (min … max):   30064.218 s … 30654.703 s    2 runs\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2558426619",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15741507988,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOqRFmU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15741507988",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "900dafd411e11fa5bb80f2227e6572d40408a1d4",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/900dafd411e11fa5bb80f2227e6572d40408a1d4",
      "created_at": "2024-12-22T12:44:35Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15751645207,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOq3wgX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15751645207",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "93a75c3de08018db2ad7043196d27941ab58804f",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/93a75c3de08018db2ad7043196d27941ab58804f",
      "created_at": "2024-12-23T20:57:11Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15751950639,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOq47Ev",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15751950639",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6ad506ea37fb1cb84cb250dafc714f24cdfdb894",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/6ad506ea37fb1cb84cb250dafc714f24cdfdb894",
      "created_at": "2024-12-23T21:59:56Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15757542751,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAOrOQVf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15757542751",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "898a07e2ab3e5b653ddadc76f2d04d625f35607c",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/898a07e2ab3e5b653ddadc76f2d04d625f35607c",
      "created_at": "2024-12-24T15:29:08Z"
    },
    {
      "event": "unlabeled",
      "id": 15757821998,
      "node_id": "UNLE_lADOABII586bm_bxzwAAAAOrPUgu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15757821998",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-24T16:32:00Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2575279833,
      "node_id": "IC_kwDOABII586Zf6bZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2575279833",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-07T13:19:05Z",
      "updated_at": "2025-01-08T09:57:52Z",
      "author_association": "MEMBER",
      "body": "I ran a benchmark to compare this PR (898a07e2ab3e5b653ddadc76f2d04d625f35607c, rebased) against master @ 433412fd8478923dfdb20044f74c5d1e19fa8dd8.\r\n\r\nAMD Ryzen 7950x machine with Ubuntu 24.10, with one local network peer and a gigabit internet connection.\r\n\r\nGot about a 3% speedup.\r\n\r\n```\r\nbitcoind -dbcache=30000 -stopatheight=878000 -blocksdir=/magnetic/.bitcoin -addnode=local-network\r\n```\r\n\r\nBefore: 5 hours 03 minutes (seems master already improved a bit)\r\n\r\nTime excludes the 8 minutes to flush 26Gib worth of chainstate to disk during shutdown. That itself is twice as fast as a few months ago: https://github.com/bitcoin/bitcoin/pull/30987#issuecomment-2385580772\r\n\r\nAfter: 4 hours and 50 minutes",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2575279833",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2577338490,
      "node_id": "IC_kwDOABII586ZnxB6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2577338490",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-08T10:33:44Z",
      "updated_at": "2025-01-08T10:33:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "3% speedup is less to write home about but still good. Having a less constrained ([Sjors](https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2575279833)) -dbcache setting (30GB) would lead to less XOR read/writes.\r\n\r\n12.3% speedup ([l0rinc](https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2558426619)) could at least in part be explained by the 1GB setting, leading to more XOR-operations.\r\n\r\nAn optimization that provides a bigger win for constrained devices should be welcomed.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2577338490",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2582176601,
      "node_id": "IC_kwDOABII586Z6ONZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2582176601",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-10T09:30:28Z",
      "updated_at": "2025-01-10T09:37:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thank you @Sjors for testing it.\r\nI was surprised to see your config only revealed a 3% change so I reran the full IBDs with the configs you had: `-dbcache=30000 -stopatheight=878000` (I had `-dbcache=1000 -stopatheight=870000` before).\r\nI suspect the difference in our measurements could stem from doing a single run and not including the final dump in the measurements. \r\n\r\nI was using a HDD this time and wasn't seeding from local nodes, so the variance was a bit bigger for me, but I ran both before and after several times and there's an obvious clustering (the before case was consistently slower than any `after` run, showing a ~12% speedup on average even with high dbcache):\r\n<img width=\"600\" alt=\"image\" src=\"https://github.com/user-attachments/assets/6b5be937-db67-4ad7-a73e-02de8378cfc2\" />\r\n\r\n<details>\r\n<summary>benchmark</summary>\r\n\r\n```bash\r\nhyperfine \\\r\n--runs 2 \\\r\n--parameter-list COMMIT d73f37dda221835b5109ede1b84db2dc7c4b74a1,fe7365584bb3703e5691c93fb004772e84db3697 \\\r\n--prepare 'rm -rf /mnt/my_storage/BitcoinData/* && git checkout {COMMIT} && git clean -fxd && git reset --hard && cmake -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_UTIL=OFF -DBUILD_TX=OFF -DBUILD_TESTS=OFF -DENABLE_WALLET=OFF -DINSTALL_MAN=OFF && cmake --build build -j$(nproc)' \\\r\n'COMMIT={COMMIT} ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -dbcache=30000 -stopatheight=878000 -printtoconsole=0' \r\n\r\nBenchmark 1: COMMIT=d73f37dda221835b5109ede1b84db2dc7c4b74a1 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -dbcache=30000 -stopatheight=878000 -printtoconsole=0\r\n  Time (mean ± σ):     40251.909 s ± 1669.663 s    [User: 51304.669 s, System: 1889.767 s]\r\n  Range (min … max):   39071.279 s … 41432.539 s    2 runs\r\n \r\nBenchmark 2: COMMIT=fe7365584bb3703e5691c93fb004772e84db3697 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -dbcache=30000 -stopatheight=878000 -printtoconsole=0\r\n  Time (mean ± σ):     36062.225 s ± 916.289 s    [User: 47770.885 s, System: 2097.642 s]\r\n  Range (min … max):   35414.310 s … 36710.139 s    2 runs\r\n \r\nSummary\r\n  COMMIT=fe7365584bb3703e5691c93fb004772e84db3697 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -dbcache=30000 -stopatheight=878000 -printtoconsole=0 ran\r\n    1.12 ± 0.05 times faster than COMMIT=d73f37dda221835b5109ede1b84db2dc7c4b74a1 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -dbcache=30000 -stopatheight=878000 -printtoconsole=0\r\n```\r\n\r\n</details>",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2582176601",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "mentioned",
      "id": 15879233144,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAOyed54",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15879233144",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-10T09:30:31Z"
    },
    {
      "event": "subscribed",
      "id": 15879233168,
      "node_id": "SE_lADOABII586bm_bxzwAAAAOyed6Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15879233168",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-10T09:30:31Z"
    },
    {
      "event": "commented",
      "id": 2582264739,
      "node_id": "IC_kwDOABII586Z6juj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2582264739",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-10T10:05:13Z",
      "updated_at": "2025-01-10T10:05:13Z",
      "author_association": "MEMBER",
      "body": "Not sure how useful it is to derive speed improvements from measurements where the variance is about half as large as the difference itself. Not claiming this is the case here, but if you measure from the public network, you could very well just measure the bandwidth of the picked nodes (completely unrelated to this pull).\r\n\r\nIt is fine if you want to do those measurements locally for fun, but putting them in the pull request title and description doesn't seem ideal. It would be better to focus on stable and reproducible measurements there.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2582264739",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2582274342,
      "node_id": "IC_kwDOABII586Z6mEm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2582274342",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-10T10:09:58Z",
      "updated_at": "2025-01-10T10:09:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "Usually the variance is a lot lower (see previous measurements), but these are just my benchmarks (I want them to be as close to reality as possible, that's why I'm repeating them to have some predictability), I would appreciate if you could provide independent measurements that you find more stable.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2582274342",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2585199785,
      "node_id": "IC_kwDOABII586aFwSp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2585199785",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-11T10:43:22Z",
      "updated_at": "2025-01-11T10:46:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "> bitcoind -dbcache=30000 -stopatheight=878000 -blocksdir=/magnetic/.bitcoin -addnode=local-network\r\n\r\n@Sjors, what kind of drive is `/magnetic/`? (Edit: I'm thinking if the drive is a bit clunky, it will crowd out the speedup from optimizing XOR).",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2585199785",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "mentioned",
      "id": 15892225060,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAOzQBwk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15892225060",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-11T10:43:24Z"
    },
    {
      "event": "subscribed",
      "id": 15892225063,
      "node_id": "SE_lADOABII586bm_bxzwAAAAOzQBwn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15892225063",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-11T10:43:24Z"
    },
    {
      "event": "commented",
      "id": 2585263747,
      "node_id": "IC_kwDOABII586aF_6D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2585263747",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-11T13:07:42Z",
      "updated_at": "2025-01-11T13:07:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "I think I managed to reproduce the ~2% difference - by not doing an IBD but a `-reindex-chainstate`.\r\n@Sjors, was your datadir completely empty for the runs? My 12% comes from having nothing locally (e.g. no blocks) to being fully synced (i.e. has to include the final flush as well) - to be as close to the user's experience as possible.\r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\n```\r\n hyperfine \\\r\n--runs 2 \\\r\n--parameter-list COMMIT d73f37dda221835b5109ede1b84db2dc7c4b74a1,fe7365584bb3703e5691c93fb004772e84db3697 \\\r\n--prepare 'git checkout {COMMIT} && git clean -fxd && git reset --hard && cmake -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_UTIL=OFF -DBUILD_TX=OFF -DBUILD_TESTS=OFF -DENABLE_WALLET=OFF -DINSTALL_MAN=OFF && cmake --build build -j$(nproc)' \\\r\n'COMMIT={COMMIT} ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -dbcache=30000 -stopatheight=878000 -reindex-chainstate -printtoconsole=0 -connect=0' \r\n\r\nBenchmark 1: COMMIT=d73f37dda221835b5109ede1b84db2dc7c4b74a1 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -dbcache=30000 -stopatheight=878000 -reindex-chainstate -printtoconsole=0 -connect=0\r\n  Time (mean ± σ):     23664.320 s ± 111.385 s    [User: 35795.225 s, System: 714.912 s]\r\n  Range (min … max):   23585.559 s … 23743.081 s    2 runs\r\n \r\nBenchmark 2: COMMIT=fe7365584bb3703e5691c93fb004772e84db3697 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -dbcache=30000 -stopatheight=878000 -reindex-chainstate -printtoconsole=0 -connect=0\r\n  Time (mean ± σ):     23277.741 s ± 172.333 s    [User: 34509.524 s, System: 582.073 s]\r\n  Range (min … max):   23155.883 s … 23399.599 s    2 runs\r\n \r\nSummary\r\n  COMMIT=fe7365584bb3703e5691c93fb004772e84db3697 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -dbcache=30000 -stopatheight=878000 -reindex-chainstate -printtoconsole=0 -connect=0 ran\r\n    1.02 ± 0.01 times faster than COMMIT=d73f37dda221835b5109ede1b84db2dc7c4b74a1 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -dbcache=30000 -stopatheight=878000 -reindex-chainstate -printtoconsole=0 -connect=0\r\n```\r\n\r\n</details>",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2585263747",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "mentioned",
      "id": 15892573881,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAOzRW65",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15892573881",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-11T13:07:43Z"
    },
    {
      "event": "subscribed",
      "id": 15892573885,
      "node_id": "SE_lADOABII586bm_bxzwAAAAOzRW69",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15892573885",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-11T13:07:43Z"
    },
    {
      "event": "commented",
      "id": 2585403343,
      "node_id": "IC_kwDOABII586aGh_P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2585403343",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-11T20:47:29Z",
      "updated_at": "2025-01-11T20:47:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "I benchmarked this PR rebased onto 35bf426e02210c1bbb04926f4ca2e0285fbfcd11 up to block 878k two times each, and I saw a 9% speedup. This was using `dbcache=30000`.\r\n\r\n```\r\nhyperfine --export-markdown ~/bench.md --show-output --parameter-list commit 1298bae74a1f690fd6cc0e029e490537cbeb301b,35bf426e02210c1bbb04926f4ca2e0285fbfcd11 --prepare 'git checkout {commit} && \\\r\ncmake --build build -j $(nproc); \\\r\nrm -rf /home/user/.bitcoin; \\\r\nsync; sudo /sbin/sysctl vm.drop_caches=3;' -M 2 'echo '{commit}' && /usr/bin/time ./build/src/bitcoind -printtoconsole=0 -dbcache=30000 -connect=local_node -stopatheight=878000'\r\n```\r\n\r\nThis branch:\r\n```\r\n  Time (mean ± σ):     17147.622 s ± 37.933 s    [User: 35867.007 s, System: 871.738 s]\r\n  Range (min … max):   17120.799 s … 17174.444 s    2 runs\r\n```\r\n\r\nMaster branch commit 35bf426e02210c1bbb04926f4ca2e0285fbfcd11:\r\n```\r\n  Time (mean ± σ):     18704.258 s ±  4.425 s    [User: 37215.600 s, System: 891.293 s]\r\n  Range (min … max):   18701.130 s … 18707.387 s    2 runs\r\n```\r\n```\r\nSummary\r\n  'echo 1298bae74a1f690fd6cc0e029e490537cbeb301b && /usr/bin/time ./build/src/bitcoind -printtoconsole=0 -dbcache=30000 -connect=192.168.2.171 -stopatheight=878000' ran\r\n    1.09 ± 0.00 times faster than 'echo 35bf426e02210c1bbb04926f4ca2e0285fbfcd11 && /usr/bin/time ./build/src/bitcoind -printtoconsole=0 -dbcache=30000 -connect=192.168.2.171 -stopatheight=878000'\r\n```",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2585403343",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2586547919,
      "node_id": "IC_kwDOABII586aK5bP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2586547919",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-13T09:05:37Z",
      "updated_at": "2025-01-13T09:05:37Z",
      "author_association": "MEMBER",
      "body": "@hodlinator a Western Digital spinning disk. Much slower than SSD but fine for just writing out blocks to disk.\r\n\r\n(I'm assuming we're not doing something foolish like writing the block, then reading it again to do the xor and writing it back)\r\n\r\n@l0rinc I wiped the blocks, indexes and chainstate dirs between runs. Both times I mention exclude the 8 minute flush, which remained similar.\r\n\r\nI agree with @maflcko that a difference of 10 minutes is probably not statistically significant. I don't have a good offline benchmark setup.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2586547919",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "mentioned",
      "id": 15901678085,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAOz0FoF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15901678085",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-13T09:05:38Z"
    },
    {
      "event": "subscribed",
      "id": 15901678116,
      "node_id": "SE_lADOABII586bm_bxzwAAAAOz0Fok",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15901678116",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-13T09:05:38Z"
    },
    {
      "event": "mentioned",
      "id": 15901678145,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAOz0FpB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15901678145",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-13T09:05:38Z"
    },
    {
      "event": "subscribed",
      "id": 15901678162,
      "node_id": "SE_lADOABII586bm_bxzwAAAAOz0FpS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15901678162",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-13T09:05:38Z"
    },
    {
      "event": "mentioned",
      "id": 15901678189,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAOz0Fpt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15901678189",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-13T09:05:38Z"
    },
    {
      "event": "subscribed",
      "id": 15901678197,
      "node_id": "SE_lADOABII586bm_bxzwAAAAOz0Fp1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15901678197",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-13T09:05:38Z"
    },
    {
      "event": "commented",
      "id": 2586629442,
      "node_id": "IC_kwDOABII586aLNVC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2586629442",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-13T09:44:44Z",
      "updated_at": "2025-01-13T14:25:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "@Sjors, your setup is already extremely fast - it seems this optimization shines mostly on commodity hardware, which I assume is used more often.\r\nLet's wait for other reproducers.\r\n\r\nEdit: I've created a reproducer tutorial to help others in benchmarking this change: https://gist.github.com/l0rinc/83d2bdfce378ad7396610095ceb7bed5",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2586629442",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "mentioned",
      "id": 15902183030,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAOz2A52",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15902183030",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-13T09:44:45Z"
    },
    {
      "event": "subscribed",
      "id": 15902183051,
      "node_id": "SE_lADOABII586bm_bxzwAAAAOz2A6L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15902183051",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-13T09:44:46Z"
    },
    {
      "event": "commented",
      "id": 2588220255,
      "node_id": "IC_kwDOABII586aRRtf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2588220255",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-13T21:11:31Z",
      "updated_at": "2025-01-13T21:11:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "Nodes on local LAN, same commits, both on SSD. Syncing node was laptop running 13th Gen Intel i7, 20 logical cores.\r\n\r\n#### Full node / source\r\n\r\nMade to not have any other connections (verified through running with `-debug=net` for a while).\r\n\r\nDeleted *anchors.dat* & *peers.dat*.\r\n\r\n```\r\n₿ build/src/bitcoind -dbcache=30000 -nofixedseeds -nodnsseed\r\n```\r\n\r\n#### Syncing node\r\n\r\nDeleted *~/.bitcoin*.\r\n\r\n```\r\n₿ time build/src/bitcoind -dbcache=30000 -stopatheight=878000 -connect=<sourcenode>\r\n```\r\n\r\n#### Results\r\n\r\n| Commit | Wall time |\r\n|---|---|\r\n| 433412fd8478923dfdb20044f74c5d1e19fa8dd8 | 3h55m23s (including 8m13s to flush UTXO set to disk) |\r\n| 898a07e2ab3e5b653ddadc76f2d04d625f35607c (this PR) rebased onto 433412fd8478923dfdb20044f74c5d1e19fa8dd8 | 3h29m52s (including 8m11s to flush UTXO set to disk) |\r\n\r\n=> 11.9% speedup",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2588220255",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2589299296,
      "node_id": "IC_kwDOABII586aVZJg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2589299296",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-14T08:28:23Z",
      "updated_at": "2025-01-14T08:28:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "(I did a second run on 433412fd8478923dfdb20044f74c5d1e19fa8dd8, it took 3h45m53s, 9.5 minutes / 4.4% faster. So there is some variance).",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2589299296",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2589302015,
      "node_id": "IC_kwDOABII586aVZz_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2589302015",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-14T08:29:51Z",
      "updated_at": "2025-01-14T08:29:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "These are the fastest IBDs I've seen so far",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2589302015",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "labeled",
      "id": 16033132546,
      "node_id": "LE_lADOABII586bm_bxzwAAAAO7pjAC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16033132546",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-22T18:18:48Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16070886716,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAO95kU8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16070886716",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "caa68f79c11e5c444977ce8dee8a43020b7b3c5a",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/caa68f79c11e5c444977ce8dee8a43020b7b3c5a",
      "created_at": "2025-01-26T19:28:07Z"
    },
    {
      "event": "unlabeled",
      "id": 16070977683,
      "node_id": "UNLE_lADOABII586bm_bxzwAAAAO956iT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16070977683",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-26T20:16:03Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2664077362,
      "node_id": "IC_kwDOABII586eypgy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2664077362",
      "actor": {
        "login": "mlori",
        "id": 5552611,
        "node_id": "MDQ6VXNlcjU1NTI2MTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5552611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mlori",
        "html_url": "https://github.com/mlori",
        "followers_url": "https://api.github.com/users/mlori/followers",
        "following_url": "https://api.github.com/users/mlori/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mlori/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mlori/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mlori/subscriptions",
        "organizations_url": "https://api.github.com/users/mlori/orgs",
        "repos_url": "https://api.github.com/users/mlori/repos",
        "events_url": "https://api.github.com/users/mlori/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mlori/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-17T21:07:49Z",
      "updated_at": "2025-02-17T21:07:49Z",
      "author_association": "NONE",
      "body": "## Benchmark Results for Bitcoin Core Optimization\r\n\r\nBased on the guide: [https://gist.github.com/l0rinc/83d2bdfce378ad7396610095ceb7bed5](https://gist.github.com/l0rinc/83d2bdfce378ad7396610095ceb7bed5), I executed the following benchmark tests on the commits listed below, with **4 runs per commit**.\r\n\r\n- **caa68f79c11e5c444977ce8dee8a43020b7b3c5a** (Optimization: XOR 64 bits together instead of byte-by-byte)\r\n- **5acf12bafeb126f2190b3f401f95199e0eea90c9** (master)\r\n\r\nI began this quest on January 14 and obtained the final results on February 12, taking nearly a month in total.\r\n\r\n### **Results**\r\nThe execution of **caa68f79c1** was **12% faster** than **5acf12bafe**.\r\n\r\n\r\n---\r\n\r\n### **Executed Command**\r\n```bash\r\nCOMMITS=\"caa68f79c11e5c444977ce8dee8a43020b7b3c5a 5acf12bafeb126f2190b3f401f95199e0eea90c9\"\r\nSTOP_HEIGHT=882000\r\nDBCACHE=5000\r\nC_COMPILER=gcc\r\nCXX_COMPILER=g++\r\n\r\nhyperfine --export-json \"../ibd-${COMMITS/ /-}-${STOP_HEIGHT}-${DBCACHE}-${C_COMPILER}.json\" \\\r\n--runs 4 --parameter-list COMMIT ${COMMITS/ /,} \\\r\n--prepare \"killall bitcoind; rm -rf ../BitcoinData/*; git checkout {COMMIT}; git clean -fxd; git reset --hard; \\\r\ncmake -B build -DCMAKE_BUILD_TYPE=Release -DENABLE_WALLET=OFF -DCMAKE_C_COMPILER=$C_COMPILER -DCMAKE_CXX_COMPILER=$CXX_COMPILER && \\\r\ncmake --build build -j$(nproc) --target bitcoind && ./build/src/bitcoind -datadir=../BitcoinData -stopatheight=1 -printtoconsole=0 || true\" \\\r\n--cleanup \"mv ../BitcoinData/debug.log ../BitcoinData-logs/debug-{COMMIT}-$(date +%s).log\" \\\r\n\"COMPILER=$C_COMPILER COMMIT={COMMIT} ./build/src/bitcoind -datadir=../BitcoinData -stopatheight=$STOP_HEIGHT -dbcache=$DBCACHE -printtoconsole=0\"\r\n```\r\n\r\n---\r\n<details>\r\n<summary>Benchmark Results</summary>\r\n\r\n#### **Commit: caa68f79c1**\r\n```plaintext\r\nTime (mean ± σ):  64403.836 s ± 9298.080 s    \r\nUser: 57218.987 s, System: 3918.333 s  \r\nRange (min … max):  50760.210 s … 70526.366 s    \r\nRuns: 4\r\n```\r\n\r\n#### **Commit: 5acf12bafe**\r\n```plaintext\r\nTime (mean ± σ):  71941.764 s ± 2646.491 s    \r\nUser: 60882.538 s, System: 3941.555 s  \r\nRange (min … max):  68480.815 s … 74310.881 s    \r\nRuns: 4\r\n```\r\n---\r\n</details>\r\n\r\n### **Summary**\r\n```plaintext\r\nCOMPILER=gcc COMMIT=caa68f79c11e5c444977ce8dee8a43020b7b3c5a \r\nran 1.12 ± 0.17 times faster than \r\nCOMPILER=gcc COMMIT=5acf12bafeb126f2190b3f401f95199e0eea90c9\r\n```\r\n\r\n---\r\n\r\n### **Bitcoin Node Setup**\r\n- **CPU:** Intel® Core™ i5-6500T @ 2.50GHz\r\n- **RAM:** 16 GB\r\n- **Storage:** 1TB SSD (Apacer AS350)\r\n- **Internet:**\r\n    - **Download:** 732.86 Mbps\r\n    - **Upload:** 322.55 Mbps\r\n\r\n---\r\n\r\n### **Database Cache Adjustments**\r\nInitially, the provided database cache (DBCACHE) size was too high for the available memory on this node, causing fluctuations in execution time. To account for this variability, four runs per commit were conducted. Several configurations were tested:\r\n\r\n- **DBCACHE=30000**: Execution halted.\r\n- **DBCACHE=10000**: Execution was too slow (probably because swapping) without a significant difference between benchmarks.\r\n- **DBCACHE=5000**: Found to be the optimal configuration for this node.\r\n\r\n---\r\n",
      "user": {
        "login": "mlori",
        "id": 5552611,
        "node_id": "MDQ6VXNlcjU1NTI2MTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5552611?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mlori",
        "html_url": "https://github.com/mlori",
        "followers_url": "https://api.github.com/users/mlori/followers",
        "following_url": "https://api.github.com/users/mlori/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mlori/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mlori/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mlori/subscriptions",
        "organizations_url": "https://api.github.com/users/mlori/orgs",
        "repos_url": "https://api.github.com/users/mlori/repos",
        "events_url": "https://api.github.com/users/mlori/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mlori/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2664077362",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16683704477,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAPibSCd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16683704477",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d950fc6f4999191476bdf6cab1793f6534cf1075",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/d950fc6f4999191476bdf6cab1793f6534cf1075",
      "created_at": "2025-03-11T12:31:40Z"
    },
    {
      "event": "renamed",
      "id": 16714933234,
      "node_id": "RTE_lADOABII586bm_bxzwAAAAPkSaPy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16714933234",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-12T14:27:51Z",
      "rename": {
        "from": "optimization: batch XOR operations 12% faster IBD",
        "to": "[IBD] multi-byte block obfuscation"
      }
    },
    {
      "event": "ready_for_review",
      "id": 16718930340,
      "node_id": "RFRE_lADOABII586bm_bxzwAAAAPkhqGk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16718930340",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-12T18:19:15Z"
    },
    {
      "event": "labeled",
      "id": 16899818309,
      "node_id": "LE_lADOABII586bm_bxzwAAAAPvTsNF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16899818309",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-20T10:17:35Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16907139221,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAPvvniV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16907139221",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "821b1f2ee66f0b65e1c2025178dac5374b1853c8",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/821b1f2ee66f0b65e1c2025178dac5374b1853c8",
      "created_at": "2025-03-20T11:54:48Z"
    },
    {
      "event": "unlabeled",
      "id": 16908327276,
      "node_id": "UNLE_lADOABII586bm_bxzwAAAAPv0Jls",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16908327276",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-20T12:25:04Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16910497953,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAPv8bih",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16910497953",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "32a9a3eef6f50b27ea990ba23f8867e0a96624e8",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/32a9a3eef6f50b27ea990ba23f8867e0a96624e8",
      "created_at": "2025-03-20T14:16:54Z"
    },
    {
      "event": "labeled",
      "id": 17099678903,
      "node_id": "LE_lADOABII586bm_bxzwAAAAP7OGS3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17099678903",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-02T19:18:20Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17120645102,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAP8eE_u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17120645102",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5ddfd31b4158a89b0007cfb2be970c03d9278525",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/5ddfd31b4158a89b0007cfb2be970c03d9278525",
      "created_at": "2025-04-03T21:11:12Z"
    },
    {
      "event": "unlabeled",
      "id": 17124651872,
      "node_id": "UNLE_lADOABII586bm_bxzwAAAAP8tXNg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17124651872",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-04T06:27:40Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17140746977,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAP9qwrh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17140746977",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ed59a368d1cc6d06a13d5e7fd71ac87e053e2840",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/ed59a368d1cc6d06a13d5e7fd71ac87e053e2840",
      "created_at": "2025-04-05T17:13:20Z"
    },
    {
      "event": "commented",
      "id": 2781007011,
      "node_id": "IC_kwDOABII586lwsyj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2781007011",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-05T17:30:39Z",
      "updated_at": "2025-04-06T10:15:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "Applied the remaining suggestions, thanks @ryanofsky, @hodlinator, @maflcko.\r\n\r\nAs mentioned before, this PR only contains the multi-byte obfuscation now, batching the single-byte serializations is done in https://github.com/bitcoin/bitcoin/pull/31551\r\n\r\nThe PR achieves 18x faster obfuscation on Linux, 49x faster on Mac and an IBD speedup of 4%. \r\n\r\nThe latest push:\r\n* Changed the existing `Xor` benchmark to `XorObfuscationBench`, measuring a 10 MiB chunk of random memory;\r\n* `dbwrapper.cpp` and `mempool_persist.cpp` migrations are simplified by dedicated refactor commits;\r\n* `streams_tests.cpp` now uses the native `m_rng`, comments were added to the new big tests, unified `key_bytes{\"ff00ff00ff00ff00\"_hex_v}` name and storage;\r\n* Updated every measurement and commit message to reflect the current state after the split.\r\n\r\nThanks for the reviews so far, it's ready for review again!\r\nEdit: rebased in latest push to resolve CI failure",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2781007011",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "mentioned",
      "id": 17140881524,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAP9rRh0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17140881524",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-05T17:30:41Z"
    },
    {
      "event": "subscribed",
      "id": 17140881531,
      "node_id": "SE_lADOABII586bm_bxzwAAAAP9rRh7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17140881531",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-05T17:30:41Z"
    },
    {
      "event": "mentioned",
      "id": 17140881534,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAP9rRh-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17140881534",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-05T17:30:41Z"
    },
    {
      "event": "subscribed",
      "id": 17140881540,
      "node_id": "SE_lADOABII586bm_bxzwAAAAP9rRiE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17140881540",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-05T17:30:41Z"
    },
    {
      "event": "mentioned",
      "id": 17140881545,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAP9rRiJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17140881545",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-05T17:30:41Z"
    },
    {
      "event": "subscribed",
      "id": 17140881550,
      "node_id": "SE_lADOABII586bm_bxzwAAAAP9rRiO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17140881550",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-05T17:30:41Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17142779846,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAP9yg_G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17142779846",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6c42e2501e13544d7b1ce8a9033e3b15ba7e8c6a",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/6c42e2501e13544d7b1ce8a9033e3b15ba7e8c6a",
      "created_at": "2025-04-06T10:15:04Z"
    },
    {
      "event": "referenced",
      "id": 17296704090,
      "node_id": "REFE_lADOABII586bm_bxzwAAAAQG9sJa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17296704090",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "33df4aebae2eea5a2f9d179f6a80f8eacc145164",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33df4aebae2eea5a2f9d179f6a80f8eacc145164",
      "created_at": "2025-04-16T22:16:37Z"
    },
    {
      "event": "labeled",
      "id": 17297334824,
      "node_id": "LE_lADOABII586bm_bxzwAAAAQHAGIo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17297334824",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-16T23:20:51Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17303623097,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAQHYFW5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17303623097",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/46854038e7984b599d25640de26d4680e62caba7",
      "created_at": "2025-04-17T10:10:35Z"
    },
    {
      "event": "commented",
      "id": 2812407333,
      "node_id": "IC_kwDOABII586noe4l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2812407333",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-17T10:10:46Z",
      "updated_at": "2025-04-17T10:10:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased, now that https://github.com/bitcoin/bitcoin/pull/31551 was merged - will redo the IBD benchmarks (since we have bigger obfuscatable chunks now) to see if any of the commit messages or descriptions need changing.\r\nThe PR is otherwise ready for review again!",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2812407333",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "unlabeled",
      "id": 17305288103,
      "node_id": "UNLE_lADOABII586bm_bxzwAAAAQHeb2n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17305288103",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-17T12:24:55Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "review_requested",
      "id": 17352653208,
      "node_id": "RRE_lADOABII586bm_bxzwAAAAQKTHmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17352653208",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-22T12:00:14Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 17352653793,
      "node_id": "RRE_lADOABII586bm_bxzwAAAAQKTHvh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17352653793",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-22T12:00:17Z",
      "requested_reviewer": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 17352655536,
      "node_id": "RRE_lADOABII586bm_bxzwAAAAQKTIKw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17352655536",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-22T12:00:24Z",
      "requested_reviewer": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 17352656126,
      "node_id": "RRE_lADOABII586bm_bxzwAAAAQKTIT-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17352656126",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-22T12:00:27Z",
      "requested_reviewer": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2783071854,
      "node_id": "PRR_kwDOABII586l4k5u",
      "url": null,
      "actor": null,
      "commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code Review 46854038e7984b599d25640de26d4680e62caba7\r\n\r\n*Edit: Superseded by https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2788618744*\r\n\r\nDidn't get much deeper than surface level yet, but sharing what I found so far.\r\n\r\nMy primary suggestion is to change the `Obfuscation`-ctors to take static-extent `span`s to prevent accidental out-of-bounds access and also to clarify that we don't consume bigger `vector`s (see inline comment). `std::array` of matching size maps well to such `span`s.\r\n\r\n#### Branch with suggestions\r\n\r\nhttps://github.com/bitcoin/bitcoin/compare/master...hodlinator:bitcoin:pr/31144_suggestions\r\n\r\nApplies below diff in appropriate commit. Also adds initial commit de4a3ec4cc27aff527906f553f50a27eab51a418 \"random: Add stack version of randbytes\".\r\n\r\n<details><summary>\r\n\r\n#### Diff of suggestions applied to reviewed code\r\n\r\n</summary>\r\n\r\n```diff\r\ndiff --git a/src/bench/xor.cpp b/src/bench/xor.cpp\r\nindex b04f08bba5..fca9fdceb3 100644\r\n--- a/src/bench/xor.cpp\r\n+++ b/src/bench/xor.cpp\r\n@@ -10,7 +10,6 @@\r\n \r\n #include <cmath>\r\n #include <cstddef>\r\n-#include <map>\r\n #include <vector>\r\n \r\n static void XorObfuscationBench(benchmark::Bench& bench)\r\ndiff --git a/src/dbwrapper.cpp b/src/dbwrapper.cpp\r\nindex 00317138d5..a6c9c02623 100644\r\n--- a/src/dbwrapper.cpp\r\n+++ b/src/dbwrapper.cpp\r\n@@ -213,11 +213,7 @@ struct LevelDBContext {\r\n };\r\n \r\n CDBWrapper::CDBWrapper(const DBParams& params)\r\n-    : m_db_context{std::make_unique<LevelDBContext>()},\r\n-      m_name{fs::PathToString(params.path.stem())},\r\n-      m_obfuscation{0},\r\n-      m_path{params.path},\r\n-      m_is_memory{params.memory_only}\r\n+    : m_db_context{std::make_unique<LevelDBContext>()}, m_name{fs::PathToString(params.path.stem())}, m_path{params.path}, m_is_memory{params.memory_only}\r\n {\r\n     DBContext().penv = nullptr;\r\n     DBContext().readoptions.verify_checksums = true;\r\n@@ -253,22 +249,21 @@ CDBWrapper::CDBWrapper(const DBParams& params)\r\n     }\r\n \r\n     {\r\n-        m_obfuscation = 0; // Needed for unobfuscated Read\r\n-        std::vector<unsigned char> obfuscate_key_vector(Obfuscation::SIZE_BYTES, '\\000');\r\n-        const bool key_missing{!Read(OBFUSCATE_KEY_KEY, obfuscate_key_vector)};\r\n+        std::array<uint8_t, Obfuscation::SIZE_BYTES> obfuscate_key; // Zero-initialized is needed for unobfuscated Read\r\n+        const bool key_missing{!Read(OBFUSCATE_KEY_KEY, obfuscate_key)};\r\n         if (key_missing && params.obfuscate && IsEmpty()) {\r\n             // Initialize non-degenerate obfuscation if it won't upset existing, non-obfuscated data.\r\n-            std::vector<uint8_t> new_key(Obfuscation::SIZE_BYTES);\r\n+            std::array<uint8_t, Obfuscation::SIZE_BYTES> new_key;\r\n             GetRandBytes(new_key);\r\n \r\n             // Write `new_key` so we don't obfuscate the key with itself\r\n             Write(OBFUSCATE_KEY_KEY, new_key);\r\n-            obfuscate_key_vector = new_key;\r\n+            obfuscate_key = new_key;\r\n \r\n-            LogPrintf(\"Wrote new obfuscate key for %s: %s\\n\", fs::PathToString(params.path), HexStr(obfuscate_key_vector));\r\n+            LogPrintf(\"Wrote new obfuscate key for %s: %s\\n\", fs::PathToString(params.path), HexStr(obfuscate_key));\r\n         }\r\n-        LogPrintf(\"Using obfuscation key for %s: %s\\n\", fs::PathToString(params.path), HexStr(obfuscate_key_vector));\r\n-        m_obfuscation = obfuscate_key_vector;\r\n+        LogPrintf(\"Using obfuscation key for %s: %s\\n\", fs::PathToString(params.path), HexStr(obfuscate_key));\r\n+        m_obfuscation = {obfuscate_key};\r\n     }\r\n }\r\n \r\ndiff --git a/src/dbwrapper.h b/src/dbwrapper.h\r\nindex 5f23f1dc43..feb31b7d48 100644\r\n--- a/src/dbwrapper.h\r\n+++ b/src/dbwrapper.h\r\n@@ -187,7 +187,7 @@ private:\r\n     std::string m_name;\r\n \r\n     //! a key used for optional XOR-obfuscation of the database\r\n-    Obfuscation m_obfuscation;\r\n+    Obfuscation m_obfuscation{0};\r\n \r\n     //! the key under which the obfuscation key is stored\r\n     static const std::string OBFUSCATE_KEY_KEY;\r\ndiff --git a/src/node/blockstorage.cpp b/src/node/blockstorage.cpp\r\nindex d2c1f33205..56d96e58f4 100644\r\n--- a/src/node/blockstorage.cpp\r\n+++ b/src/node/blockstorage.cpp\r\n@@ -1107,7 +1107,7 @@ static Obfuscation InitBlocksdirXorKey(const BlockManager::Options& opts)\r\n {\r\n     // Bytes are serialized without length indicator, so this is also the exact\r\n     // size of the XOR-key file.\r\n-    std::array<std::byte, 8> xor_key{};\r\n+    std::array<std::byte, Obfuscation::SIZE_BYTES> xor_key{};\r\n \r\n     // Consider this to be the first run if the blocksdir contains only hidden\r\n     // files (those which start with a .). Checking for a fully-empty dir would\r\ndiff --git a/src/obfuscation.h b/src/obfuscation.h\r\nindex 70bc844c6d..d4a732e286 100644\r\n--- a/src/obfuscation.h\r\n+++ b/src/obfuscation.h\r\n@@ -5,15 +5,14 @@\r\n #ifndef BITCOIN_OBFUSCATION_H\r\n #define BITCOIN_OBFUSCATION_H\r\n \r\n+#include <serialize.h>\r\n+#include <span.h>\r\n+\r\n #include <array>\r\n+#include <bit>\r\n #include <cassert>\r\n-#include <cstdint>\r\n-#include <random>\r\n-#include <span.h>\r\n-#include <util/check.h>\r\n-#include <cstring>\r\n #include <climits>\r\n-#include <serialize.h>\r\n+#include <cstdint>\r\n \r\n class Obfuscation\r\n {\r\n@@ -21,13 +20,15 @@ public:\r\n     static constexpr size_t SIZE_BYTES{sizeof(uint64_t)};\r\n \r\n private:\r\n-    std::array<uint64_t, SIZE_BYTES> rotations; // Cached key rotations\r\n+    // Cached key rotations for different offsets.\r\n+    std::array<uint64_t, SIZE_BYTES> m_rotations;\r\n+\r\n     void SetRotations(const uint64_t key)\r\n     {\r\n         for (size_t i{0}; i < SIZE_BYTES; ++i) {\r\n             size_t key_rotation_bits{CHAR_BIT * i};\r\n             if constexpr (std::endian::native == std::endian::big) key_rotation_bits *= -1;\r\n-            rotations[i] = std::rotr(key, key_rotation_bits);\r\n+            m_rotations[i] = std::rotr(key, key_rotation_bits);\r\n         }\r\n     }\r\n \r\n@@ -49,36 +50,35 @@ private:\r\n \r\n public:\r\n     Obfuscation(const uint64_t key) { SetRotations(key); }\r\n-    Obfuscation(const std::span<const std::byte, SIZE_BYTES> key_span) : Obfuscation(ToUint64(key_span)) {}\r\n-    Obfuscation(const std::vector<uint8_t>& key_vec) : Obfuscation(MakeByteSpan(key_vec).first<SIZE_BYTES>()) {}\r\n-    Obfuscation(const std::vector<std::byte>& key_vec) : Obfuscation(std::span(key_vec).first<SIZE_BYTES>()) {}\r\n+    Obfuscation(std::span<const std::byte, SIZE_BYTES> key_span) : Obfuscation(ToUint64(key_span)) {}\r\n+    Obfuscation(std::span<const uint8_t, SIZE_BYTES> key_span) : Obfuscation(MakeByteSpan(key_span).first<SIZE_BYTES>()) {}\r\n \r\n-    uint64_t Key() const { return rotations[0]; }\r\n+    uint64_t Key() const { return m_rotations[0]; }\r\n     operator bool() const { return Key() != 0; }\r\n-    void operator()(std::span<std::byte> write, const size_t key_offset_bytes = 0) const\r\n+    void operator()(std::span<std::byte> target, const size_t key_offset_bytes = 0) const\r\n     {\r\n         if (!*this) return;\r\n-        const uint64_t rot_key{rotations[key_offset_bytes % SIZE_BYTES]}; // Continue obfuscation from where we left off\r\n-        for (; write.size() >= SIZE_BYTES; write = write.subspan(SIZE_BYTES)) { // Process multiple bytes at a time\r\n-            Xor(write, rot_key, SIZE_BYTES);\r\n+        const uint64_t rot_key{m_rotations[key_offset_bytes % SIZE_BYTES]}; // Continue obfuscation from where we left off\r\n+        for (; target.size() >= SIZE_BYTES; target = target.subspan(SIZE_BYTES)) { // Process multiple bytes at a time\r\n+            Xor(target, rot_key, SIZE_BYTES);\r\n         }\r\n-        Xor(write, rot_key, write.size());\r\n+        Xor(target, rot_key, target.size());\r\n     }\r\n \r\n     template <typename Stream>\r\n     void Serialize(Stream& s) const\r\n     {\r\n-        std::vector<std::byte> bytes(SIZE_BYTES);\r\n-        std::memcpy(bytes.data(), &rotations[0], SIZE_BYTES);\r\n+        std::array<std::byte, SIZE_BYTES> bytes;\r\n+        std::memcpy(bytes.data(), &m_rotations[0], SIZE_BYTES); // MISMATCH IN size, byte vs i64\r\n         s << bytes;\r\n     }\r\n \r\n     template <typename Stream>\r\n     void Unserialize(Stream& s)\r\n     {\r\n-        std::vector<std::byte> bytes(SIZE_BYTES);\r\n+        std::array<std::byte, SIZE_BYTES> bytes;\r\n         s >> bytes;\r\n-        SetRotations(ToUint64(MakeByteSpan(bytes).first<SIZE_BYTES>()));\r\n+        SetRotations(ToUint64(bytes));\r\n     }\r\n };\r\n \r\ndiff --git a/src/random.h b/src/random.h\r\nindex c702309d0c..ecc4d1e88f 100644\r\n--- a/src/random.h\r\n+++ b/src/random.h\r\n@@ -301,6 +301,15 @@ public:\r\n         return ret;\r\n     }\r\n \r\n+    /** Generate random bytes on the stack. */\r\n+    template <size_t N, BasicByte B = unsigned char>\r\n+    std::array<B, N> randbytes() noexcept\r\n+    {\r\n+        std::array<B, N> ret;\r\n+        Impl().fillrand(MakeWritableByteSpan(ret));\r\n+        return ret;\r\n+    }\r\n+\r\n     /** Generate a random 32-bit integer. */\r\n     uint32_t rand32() noexcept { return Impl().template randbits<32>(); }\r\n \r\ndiff --git a/src/test/dbwrapper_tests.cpp b/src/test/dbwrapper_tests.cpp\r\nindex 7d9135baf0..c7431e6e1f 100644\r\n--- a/src/test/dbwrapper_tests.cpp\r\n+++ b/src/test/dbwrapper_tests.cpp\r\n@@ -27,7 +27,7 @@ BOOST_AUTO_TEST_CASE(dbwrapper)\r\n         uint256 res;\r\n \r\n         // Ensure that we're doing real obfuscation when obfuscate=true\r\n-        BOOST_CHECK(obfuscate == dbwrapper_private::GetObfuscation(dbw));\r\n+        BOOST_CHECK_EQUAL(obfuscate, dbwrapper_private::GetObfuscation(dbw));\r\n \r\n         BOOST_CHECK(dbw.Write(key, in));\r\n         BOOST_CHECK(dbw.Read(key, res));\r\n@@ -47,7 +47,7 @@ BOOST_AUTO_TEST_CASE(dbwrapper_basic_data)\r\n         bool res_bool;\r\n \r\n         // Ensure that we're doing real obfuscation when obfuscate=true\r\n-        BOOST_CHECK(obfuscate == dbwrapper_private::GetObfuscation(dbw));\r\n+        BOOST_CHECK_EQUAL(obfuscate, dbwrapper_private::GetObfuscation(dbw));\r\n \r\n         //Simulate block raw data - \"b + block hash\"\r\n         std::string key_block = \"b\" + m_rng.rand256().ToString();\r\ndiff --git a/src/test/streams_tests.cpp b/src/test/streams_tests.cpp\r\nindex ab64825d98..ebd22d2a0c 100644\r\n--- a/src/test/streams_tests.cpp\r\n+++ b/src/test/streams_tests.cpp\r\n@@ -33,12 +33,12 @@ BOOST_AUTO_TEST_CASE(xor_roundtrip_random_chunks)\r\n         const std::vector original{m_rng.randbytes<std::byte>(write_size)};\r\n         std::vector roundtrip{original};\r\n \r\n-        const auto key_bytes{m_rng.randbytes<std::byte>(Obfuscation::SIZE_BYTES)};\r\n+        const std::array key_bytes{m_rng.randbytes<Obfuscation::SIZE_BYTES, std::byte>()};\r\n         const Obfuscation obfuscation{key_bytes};\r\n         apply_random_xor_chunks(roundtrip, obfuscation);\r\n \r\n         // Verify intermediate state is different from original (unless key is zero)\r\n-        const bool all_zero = !obfuscation || (HexStr(key_bytes).find_first_not_of('0') >= write_size * 2);\r\n+        const bool all_zero = !obfuscation || (static_cast<size_t>(std::count(key_bytes.begin(), key_bytes.begin() + write_size, std::byte{0})) == write_size);\r\n         BOOST_CHECK_EQUAL(original != roundtrip, !all_zero);\r\n \r\n         apply_random_xor_chunks(roundtrip, obfuscation);\r\n@@ -60,7 +60,7 @@ BOOST_AUTO_TEST_CASE(xor_bytes_reference)\r\n         const size_t write_size{1 + m_rng.randrange(100U)};\r\n         const size_t key_offset{m_rng.randrange(3 * 8U)}; // Should wrap around\r\n \r\n-        const auto key_bytes{m_rng.randbytes<std::byte>(Obfuscation::SIZE_BYTES)};\r\n+        const std::array key_bytes{m_rng.randbytes<Obfuscation::SIZE_BYTES, std::byte>()};\r\n         const Obfuscation obfuscation{key_bytes};\r\n         std::vector expected{m_rng.randbytes<std::byte>(write_size)};\r\n         std::vector actual{expected};\r\n@@ -72,7 +72,6 @@ BOOST_AUTO_TEST_CASE(xor_bytes_reference)\r\n     }\r\n }\r\n \r\n-\r\n BOOST_AUTO_TEST_CASE(obfuscation_constructors)\r\n {\r\n     constexpr uint64_t test_key = 0x0123456789ABCDEF;\r\n@@ -81,23 +80,17 @@ BOOST_AUTO_TEST_CASE(obfuscation_constructors)\r\n     const Obfuscation obf1{test_key};\r\n     BOOST_CHECK_EQUAL(obf1.Key(), test_key);\r\n \r\n-    // std::span constructor\r\n+    // std::span<std::byte> constructor\r\n     std::array<std::byte, Obfuscation::SIZE_BYTES> key_bytes{};\r\n     std::memcpy(key_bytes.data(), &test_key, Obfuscation::SIZE_BYTES);\r\n-    const Obfuscation obf2{std::span{key_bytes}};\r\n+    const Obfuscation obf2{key_bytes};\r\n     BOOST_CHECK_EQUAL(obf2.Key(), test_key);\r\n \r\n-    // std::vector<uint8_t> constructor\r\n-    std::vector<uint8_t> uint8_key(Obfuscation::SIZE_BYTES);\r\n+    // std::span<uint8_t> constructor\r\n+    std::array<uint8_t, Obfuscation::SIZE_BYTES> uint8_key;\r\n     std::memcpy(uint8_key.data(), &test_key, uint8_key.size());\r\n-    const Obfuscation obf4{uint8_key};\r\n-    BOOST_CHECK_EQUAL(obf4.Key(), test_key);\r\n-\r\n-    // std::vector<std::byte> constructor\r\n-    std::vector<std::byte> byte_vector_key(Obfuscation::SIZE_BYTES);\r\n-    std::memcpy(byte_vector_key.data(), &test_key, byte_vector_key.size());\r\n-    const Obfuscation obf5{byte_vector_key};\r\n-    BOOST_CHECK_EQUAL(obf5.Key(), test_key);\r\n+    const Obfuscation obf3{uint8_key};\r\n+    BOOST_CHECK_EQUAL(obf3.Key(), test_key);\r\n }\r\n \r\n BOOST_AUTO_TEST_CASE(obfuscation_serialize)\r\n@@ -129,13 +122,13 @@ BOOST_AUTO_TEST_CASE(xor_file)\r\n     auto raw_file{[&](const auto& mode) { return fsbridge::fopen(xor_path, mode); }};\r\n     const std::vector<uint8_t> test1{1, 2, 3};\r\n     const std::vector<uint8_t> test2{4, 5};\r\n-    auto key_bytes{\"ff00ff00ff00ff00\"_hex_v};\r\n+    auto key_bytes{\"ff00ff00ff00ff00\"_hex};\r\n     uint64_t xor_key;\r\n     std::memcpy(&xor_key, key_bytes.data(), sizeof(xor_key));\r\n \r\n     {\r\n         // Check errors for missing file\r\n-        AutoFile xor_file{raw_file(\"rb\"), key_bytes};\r\n+        AutoFile xor_file{raw_file(\"rb\"), {key_bytes}};\r\n         BOOST_CHECK_EXCEPTION(xor_file << std::byte{}, std::ios_base::failure, HasReason{\"AutoFile::write: file handle is nullpt\"});\r\n         BOOST_CHECK_EXCEPTION(xor_file >> std::byte{}, std::ios_base::failure, HasReason{\"AutoFile::read: file handle is nullpt\"});\r\n         BOOST_CHECK_EXCEPTION(xor_file.ignore(1), std::ios_base::failure, HasReason{\"AutoFile::ignore: file handle is nullpt\"});\r\n@@ -345,7 +338,7 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\r\n     in.push_back(std::byte{0xf0});\r\n \r\n     {\r\n-        const Obfuscation obfuscation{\"ffffffffffffffff\"_hex_v};\r\n+        const Obfuscation obfuscation{\"ffffffffffffffff\"_hex};\r\n \r\n         DataStream ds{in};\r\n         obfuscation(ds);\r\n@@ -357,7 +350,7 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\r\n     in.push_back(std::byte{0x0f});\r\n \r\n     {\r\n-        const Obfuscation obfuscation{\"ff0fff0fff0fff0f\"_hex_v};\r\n+        const Obfuscation obfuscation{\"ff0fff0fff0fff0f\"_hex};\r\n \r\n         DataStream ds{in};\r\n         obfuscation(ds);\r\n@@ -673,7 +666,7 @@ BOOST_AUTO_TEST_CASE(buffered_reader_matches_autofile_random_content)\r\n     const FlatFilePos pos{0, 0};\r\n \r\n     const FlatFileSeq test_file{m_args.GetDataDirBase(), \"buffered_file_test_random\", node::BLOCKFILE_CHUNK_SIZE};\r\n-    const std::vector obfuscation{m_rng.randbytes<std::byte>(8)};\r\n+    const Obfuscation obfuscation{m_rng.randbytes<Obfuscation::SIZE_BYTES>()};\r\n \r\n     // Write out the file with random content\r\n     {\r\n@@ -726,7 +719,7 @@ BOOST_AUTO_TEST_CASE(buffered_writer_matches_autofile_random_content)\r\n \r\n     const FlatFileSeq test_buffered{m_args.GetDataDirBase(), \"buffered_write_test\", node::BLOCKFILE_CHUNK_SIZE};\r\n     const FlatFileSeq test_direct{m_args.GetDataDirBase(), \"direct_write_test\", node::BLOCKFILE_CHUNK_SIZE};\r\n-    const std::vector obfuscation{m_rng.randbytes<std::byte>(8)};\r\n+    const Obfuscation obfuscation{m_rng.randbytes<Obfuscation::SIZE_BYTES>()};\r\n \r\n     {\r\n         DataBuffer test_data{m_rng.randbytes<std::byte>(file_size)};\r\n```\r\n\r\n</details>",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2783071854",
      "submitted_at": "2025-04-22T12:30:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "commented",
      "id": 2821410082,
      "node_id": "IC_kwDOABII586oK00i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2821410082",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-22T13:52:52Z",
      "updated_at": "2025-04-22T13:52:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "Changed the serialization of `Obfuscation` from `vector` -> `array` without re-testing my suggestions towards the end. Forgot that one serializes the size and the other does not. Seems to be responsible for some of the test failures on my suggestion-branch.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2821410082",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17357014460,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAQKjwW8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17357014460",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6f2b1e1794c4faed1d87b8eb81c9b47a32ef8128",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/6f2b1e1794c4faed1d87b8eb81c9b47a32ef8128",
      "created_at": "2025-04-22T16:35:01Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17357123982,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAQKkLGO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17357123982",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6892c5a1161f11fa8fa7a123b89b390e12462002",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/6892c5a1161f11fa8fa7a123b89b390e12462002",
      "created_at": "2025-04-22T16:43:34Z"
    },
    {
      "event": "reviewed",
      "id": 2788618744,
      "node_id": "PRR_kwDOABII586mNvH4",
      "url": null,
      "actor": null,
      "commit_id": "6892c5a1161f11fa8fa7a123b89b390e12462002",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Got some mixed messaging here since you told me repeatedly in private not to investigate failures I reported (https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2821410082) on my previous branch (https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2783071854) but then chided me in public (https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2056174501). Anyways, the previous branch was not the sliced bread I believed it to be, looking back.\r\n\r\n---\r\n\r\nNew branch: https://github.com/bitcoin/bitcoin/compare/master...hodlinator:bitcoin:pr/31144_suggestions_2\r\nCI: https://github.com/hodlinator/bitcoin/actions/runs/14628005565/attempts/1 (one failure due to #32322)\r\n\r\n> If you have a suggestion that passes ci (and local IBD for some blocks), let me know\r\n\r\nHow about CI above + local ~~I~~BD on mainnet of a couple of months of blocks?\r\nHave you ever encountered IBD failures for code that passes CI? Seems like missing test coverage in that case?\r\n\r\nScaled back some of the `vector` -> `array`, especially in context of serialization.\r\n\r\nComparison between current PR and suggestion branch:\r\nhttps://github.com/bitcoin/bitcoin/compare/6892c5a..hodlinator:bitcoin:pr/31144_suggestions_2",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2788618744",
      "submitted_at": "2025-04-24T07:02:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17387014463,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAQMWMk_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17387014463",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9e778114226f540d40f99691188b2789ca26aaf3",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/9e778114226f540d40f99691188b2789ca26aaf3",
      "created_at": "2025-04-24T09:43:33Z"
    },
    {
      "event": "commented",
      "id": 2827002303,
      "node_id": "IC_kwDOABII586ogKG_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2827002303",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-24T09:43:47Z",
      "updated_at": "2025-04-24T09:43:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Have you ever encountered IBD failures for code that passes CI? Seems like missing test coverage in that case?\r\n\r\nyes, extended one of the tests now, hoping that will cover it next time.\r\n\r\n> then chided me in public\r\n\r\nDefinitely wasn't my intention to scold you in any way, just didn't (and still don't) understand what you're objecting to or suggesting in that part of the code. Pushed some changes, if it's still not clear, let's discuss in person.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2827002303",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "labeled",
      "id": 17388252660,
      "node_id": "LE_lADOABII586bm_bxzwAAAAQMa630",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17388252660",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-24T11:06:25Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2827218553,
      "node_id": "IC_kwDOABII586og-55",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2827218553",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-24T11:06:26Z",
      "updated_at": "2025-04-24T11:06:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/41075184281</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2827218553",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17395843781,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAQM34LF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17395843781",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "53fdaf773a54cead104fa58bbd60b7a98ac023ba",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/53fdaf773a54cead104fa58bbd60b7a98ac023ba",
      "created_at": "2025-04-24T19:01:05Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17395885107,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAQM4CQz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17395885107",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a5e5f2edf16f0db7086586efd5598758a53957f5",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/a5e5f2edf16f0db7086586efd5598758a53957f5",
      "created_at": "2025-04-24T19:04:26Z"
    },
    {
      "event": "commented",
      "id": 2828608135,
      "node_id": "IC_kwDOABII586omSKH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2828608135",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-24T19:06:27Z",
      "updated_at": "2025-04-24T19:06:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the reviews, addressed most of your concerns - except for the vector constructor for `Obfuscation` - but if other reviewers also think it's better that way, I'll do it of course.\r\nAlso extended the `BOOST_AUTO_TEST_CASE(dbwrapper)` test case with asserting that the obfuscation key can be read back by an unobfuscated instance as well.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2828608135",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17395991672,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAQM4cR4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17395991672",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1f43cda34bf95656af4aaf7b40c0c09ebc6ada85",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/1f43cda34bf95656af4aaf7b40c0c09ebc6ada85",
      "created_at": "2025-04-24T19:12:27Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17396009797,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAQM4gtF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17396009797",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7d298e923b62d67446f5b337b072e7c3d3d379a9",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/7d298e923b62d67446f5b337b072e7c3d3d379a9",
      "created_at": "2025-04-24T19:14:00Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17397125496,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAQM8xF4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17397125496",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ca53d707616b94bc36b5ce060f76eec8614d45bb",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/ca53d707616b94bc36b5ce060f76eec8614d45bb",
      "created_at": "2025-04-24T20:49:38Z"
    },
    {
      "event": "commented",
      "id": 2829997330,
      "node_id": "IC_kwDOABII586orlUS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2829997330",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-25T10:13:16Z",
      "updated_at": "2025-04-25T10:13:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "Just letting the thread know that we've cleared up our miscommunication regarding https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2788618744. The combination of my prior suggestion failing CI and @l0rinc's cautioning to make sure my further suggestions pass CI seem to be an unlucky coincidence within a very short time-frame. We should strive towards assuming good-faith when communicating over text, but on some days frustrations can get the best of me.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2829997330",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "mentioned",
      "id": 17404024384,
      "node_id": "MEE_lADOABII586bm_bxzwAAAAQNXFZA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17404024384",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-25T10:13:17Z"
    },
    {
      "event": "subscribed",
      "id": 17404024400,
      "node_id": "SE_lADOABII586bm_bxzwAAAAQNXFZQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17404024400",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-25T10:13:17Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc3MDFjNTc1NTg3NjYxZTljNWU3ZDQ4MzlhMDZmN2E0NjQ0M2JlYWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7701c575587661e9c5e7d4839a06f7a46443beaf",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7701c575587661e9c5e7d4839a06f7a46443beaf",
      "tree": {
        "sha": "871e95940fb9a509169e3463328b7d5aff2f4eeb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/871e95940fb9a509169e3463328b7d5aff2f4eeb"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/971952588daebf0d4d08a7e0eeef1734fcd8a9b1",
          "sha": "971952588daebf0d4d08a7e0eeef1734fcd8a9b1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/971952588daebf0d4d08a7e0eeef1734fcd8a9b1"
        }
      ],
      "message": "test: compare util::Xor with randomized inputs against simple impl\n\nSince production code only uses keys of length 8, we're not testing with other values anymore",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-04-25T10:17:34Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-10-24T06:37:57Z"
      },
      "sha": "7701c575587661e9c5e7d4839a06f7a46443beaf"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDllZGE5NjE2ZWZhNmQ2Yjk4NzhiNTc4NDUwOGIxNDcxODc4NDBkMmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9eda9616efa6d6b9878b5784508b147187840d2a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9eda9616efa6d6b9878b5784508b147187840d2a",
      "tree": {
        "sha": "ee45f445a0e87099f51654ec1a428286c98d0304",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ee45f445a0e87099f51654ec1a428286c98d0304"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7701c575587661e9c5e7d4839a06f7a46443beaf",
          "sha": "7701c575587661e9c5e7d4839a06f7a46443beaf",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7701c575587661e9c5e7d4839a06f7a46443beaf"
        }
      ],
      "message": "bench: make XorObfuscationBench more representative\n\nSince another PR solves the tiny byte xors during serialization, we're only concentrating on big continuous chunks now.\n\n>  cmake -B build -DBUILD_BENCH=ON -DCMAKE_BUILD_TYPE=Release \\\n&& cmake --build build -j$(nproc) \\\n&& build/bin/bench_bitcoin -filter='XorObfuscationBench' -min-time=10000\n\nC++ compiler .......................... AppleClang 17.0.0.17000013\n\n|              ns/MiB |               MiB/s |    err% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------:|:----------\n|          731,927.62 |            1,366.26 |    0.2% |     10.67 | `XorObfuscationBench`\n\nC++ compiler .......................... GNU 13.3.0\n\n|              ns/MiB |               MiB/s |    err% |         ins/MiB |         cyc/MiB |    IPC |        bra/MiB |   miss% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\n|          941,015.26 |            1,062.68 |    0.0% |    9,437,186.97 |    3,378,911.52 |  2.793 |   1,048,577.15 |    0.0% |     10.99 | `XorObfuscationBench`",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-04-25T10:17:34Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-12-06T15:18:03Z"
      },
      "sha": "9eda9616efa6d6b9878b5784508b147187840d2a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE1NTU4YzNkZTQ5M2E5YzcwYjE0Mjc0NzE0ZDhmNzAxMmM2YmZkMDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a5558c3de493a9c70b14274714d8f7012c6bfd09",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a5558c3de493a9c70b14274714d8f7012c6bfd09",
      "tree": {
        "sha": "4a3225ad91ad356073de7db2d947fa597b5cd4df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4a3225ad91ad356073de7db2d947fa597b5cd4df"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9eda9616efa6d6b9878b5784508b147187840d2a",
          "sha": "9eda9616efa6d6b9878b5784508b147187840d2a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9eda9616efa6d6b9878b5784508b147187840d2a"
        }
      ],
      "message": "refactor: prepare `DBWrapper` for obfuscation key change\n\nSince `CDBWrapper::Read` still supports vector only, we can initialize `obfuscate_key` directly instead of using a separate helper.\n`CreateObfuscateKey` was also inlined, replaced `key_exists` with `key_missing`, and simplified the `if` condition that writes a new obfuscation key.",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-04-25T10:17:34Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-04-05T16:25:20Z"
      },
      "sha": "a5558c3de493a9c70b14274714d8f7012c6bfd09"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk0OGVhNjAyMDdlMGNkOGMwODRlMjFjNGNlODAzMmI0ZTRhYzUyY2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/948ea60207e0cd8c084e21c4ce8032b4e4ac52ce",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/948ea60207e0cd8c084e21c4ce8032b4e4ac52ce",
      "tree": {
        "sha": "31e448944ad69382d450a7aad7d1ccf04ab95eb3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/31e448944ad69382d450a7aad7d1ccf04ab95eb3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a5558c3de493a9c70b14274714d8f7012c6bfd09",
          "sha": "a5558c3de493a9c70b14274714d8f7012c6bfd09",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a5558c3de493a9c70b14274714d8f7012c6bfd09"
        }
      ],
      "message": "refactor: prepare mempool_persist for obfuscation key change",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-04-25T10:17:34Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-04-05T17:01:09Z"
      },
      "sha": "948ea60207e0cd8c084e21c4ce8032b4e4ac52ce"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17404168799,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAQNXopf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17404168799",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6bf07982ed06eb36f369234e5d8d3f9018022541",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/6bf07982ed06eb36f369234e5d8d3f9018022541",
      "created_at": "2025-04-25T10:24:26Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZmOTI0MGQ3MGM1YzQ4MGUyNTQzMzQ4MmMzNDdiYThjODI5YzRiYjc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "tree": {
        "sha": "bbc06ceda4671e970666f433c8abee4e906d497d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bbc06ceda4671e970666f433c8abee4e906d497d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/948ea60207e0cd8c084e21c4ce8032b4e4ac52ce",
          "sha": "948ea60207e0cd8c084e21c4ce8032b4e4ac52ce",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/948ea60207e0cd8c084e21c4ce8032b4e4ac52ce"
        }
      ],
      "message": "optimization: migrate fixed-size obfuscation from `std::vector<std::byte>` to `uint64_t`\n\nSince `util::Xor` now operates on `uint64_t` keys, migrated the obfuscation key end‑to‑end - from use sites in util::Xor up through streams, LevelDB wrappers, and disk (de)serialization - replacing all former `std::vector<std::byte>` keys with `uint64_t` (we still serialize them as vectors but convert immediately to `uint64_t` on load). This is why tests still generate vector keys and convert them to `uint64_t` later instead of generating them directly.\n\nWe also short‑circuit `Xor` calls when the key is zero to avoid unnecessary calculations (e.g., `MakeWritableByteSpan`).\n\n>  cmake -B build -DBUILD_BENCH=ON -DCMAKE_BUILD_TYPE=Release \\\n&& cmake --build build -j$(nproc) \\\n&& build/bin/bench_bitcoin -filter='XorObfuscationBench' -min-time=10000\n\nC++ compiler .......................... AppleClang 17.0.0.17000013\n\n|              ns/MiB |               MiB/s |    err% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------:|:----------\n|           14,730.40 |           67,886.80 |    0.1% |     11.01 | `XorObfuscationBench`\n\nC++ compiler .......................... GNU 13.3.0\n\n|              ns/MiB |               MiB/s |    err% |         ins/MiB |         cyc/MiB |    IPC |        bra/MiB |   miss% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\n|           51,187.17 |           19,536.15 |    0.0% |      327,683.95 |      183,747.58 |  1.783 |      65,536.55 |    0.0% |     11.00 | `XorObfuscationBench`\n\n----\n\nA few other benchmarks that seem to have improved as well (tested with Clang only):\nBefore:\n\n|               ns/op |                op/s |    err% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------:|:----------\n|        2,202,618.49 |              454.01 |    0.2% |     11.01 | `ReadBlockBench`\n|          734,444.92 |            1,361.57 |    0.3% |     10.66 | `ReadRawBlockBench`\n\nAfter:\n\n|               ns/op |                op/s |    err% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------:|:----------\n|        1,912,308.06 |              522.93 |    0.4% |     10.98 | `ReadBlockBench`\n|           49,092.93 |           20,369.53 |    0.2% |     10.99 | `ReadRawBlockBench`\n\nCo-authored-by: Hodlinator <172445034+hodlinator@users.noreply.github.com>",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-04-25T10:59:16Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-12-21T15:15:04Z"
      },
      "sha": "6f9240d70c5c480e25433482c347ba8c829c4bb7"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17404586818,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAQNZOtC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17404586818",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "created_at": "2025-04-25T10:59:46Z"
    },
    {
      "event": "commented",
      "id": 2830171878,
      "node_id": "IC_kwDOABII586osP7m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2830171878",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-25T11:34:55Z",
      "updated_at": "2025-04-25T11:34:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "Sorry for a few useless pushes, I was fighting some compilers for strings not always being `constexpr`-able...\r\nCode is ready for review again.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2830171878",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "commented",
      "id": 2830431214,
      "node_id": "IC_kwDOABII586otPPu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2830431214",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-25T13:26:07Z",
      "updated_at": "2025-04-25T13:26:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "[07:30:05.813] ⚠️ Failure generated from target with exit code 77: ['/ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/bin/fuzz', '-runs=1', PosixPath('/ci_container_base/ci/scratch/qa-assets/fuzz_corpora/validation_load_mempool')]",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2830431214",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814518633",
      "pull_request_review_id": 2391705369,
      "id": 1814518633,
      "node_id": "PRRC_kwDOABII585sJ1tp",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());",
      "path": "src/streams.h",
      "position": null,
      "original_position": 32,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I fail to see how this is not UB. This is identical to https://github.com/bitcoin/bitcoin/pull/30349#discussion_r1804480124",
      "created_at": "2024-10-24T08:27:10Z",
      "updated_at": "2024-10-24T08:27:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814518633",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814518633"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814518826",
      "pull_request_review_id": 2391705369,
      "id": 1814518826,
      "node_id": "PRRC_kwDOABII585sJ1wq",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());\n+        const auto size64 = remaining / 8;\n+        for (auto& write64 : std::span(std::bit_cast<uint64_t*>(write.data() + i), size64)) {",
      "path": "src/streams.h",
      "position": null,
      "original_position": 34,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "same",
      "created_at": "2024-10-24T08:27:16Z",
      "updated_at": "2024-10-24T08:27:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814518826",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814518826"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814534953",
      "pull_request_review_id": 2391731741,
      "id": 1814534953,
      "node_id": "PRRC_kwDOABII585sJ5sp",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());\n+        const auto size64 = remaining / 8;\n+        for (auto& write64 : std::span(std::bit_cast<uint64_t*>(write.data() + i), size64)) {",
      "path": "src/streams.h",
      "position": null,
      "original_position": 34,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": 1814518826,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "CI seems to agree:\r\n\r\n```\r\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1100:16: runtime error: reference binding to misaligned address 0x7f10961d9084 for type 'unsigned long', which requires 8 byte alignment\r\n0x7f10961d9084: note: pointer points here\r\n  94 8e 20 eb 00 00 00 00  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00\r\n              ^ \r\n    #0 0x55780d85ab85 in __gnu_cxx::__normal_iterator<unsigned long*, std::span<unsigned long, 18446744073709551615ul>>::operator*() const /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1100:9\r\n    #1 0x55780d85ab85 in util::Xor(Span<std::byte>, Span<std::byte const>, unsigned long) ci/scratch/build-x86_64-pc-linux-gnu/src/test/./src/streams.h:42:28\r\n```\r\n\r\nhttps://github.com/bitcoin/bitcoin/actions/runs/11495063168/job/31993791381?pr=31144#step:7:4647",
      "created_at": "2024-10-24T08:37:11Z",
      "updated_at": "2024-10-24T08:37:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814534953",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814534953"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814546031",
      "pull_request_review_id": 2391748872,
      "id": 1814546031,
      "node_id": "PRRC_kwDOABII585sJ8Zv",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());\n+        const auto size64 = remaining / 8;\n+        for (auto& write64 : std::span(std::bit_cast<uint64_t*>(write.data() + i), size64)) {",
      "path": "src/streams.h",
      "position": null,
      "original_position": 34,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": 1814518826,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, I'll investigate.\r\nI assumed there will be more to check, that's why it's still a draft.",
      "created_at": "2024-10-24T08:44:12Z",
      "updated_at": "2024-10-24T08:44:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814546031",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814546031"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814563302",
      "pull_request_review_id": 2391776469,
      "id": 1814563302,
      "node_id": "PRRC_kwDOABII585sKAnm",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());",
      "path": "src/streams.h",
      "position": null,
      "original_position": 32,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": 1814518633,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Isn't this what we're doing in `CScript` as well https://github.com/bitcoin/bitcoin/blob/master/src/script/script.h#L496 ?\r\n\r\nno? `value_type` is `unsigned char` (an 8-bit integer type) and this one here is `uint64_t` (an 64-bit integer type).",
      "created_at": "2024-10-24T08:54:46Z",
      "updated_at": "2024-10-24T08:54:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814563302",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814563302"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814564883",
      "pull_request_review_id": 2391778993,
      "id": 1814564883,
      "node_id": "PRRC_kwDOABII585sKBAT",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());",
      "path": "src/streams.h",
      "position": null,
      "original_position": 32,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": 1814518633,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, just saw it, my mistake",
      "created_at": "2024-10-24T08:55:40Z",
      "updated_at": "2024-10-24T08:55:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814564883",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814564883"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814606913",
      "pull_request_review_id": 2391845703,
      "id": 1814606913,
      "node_id": "PRRC_kwDOABII585sKLRB",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());",
      "path": "src/streams.h",
      "position": null,
      "original_position": 32,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": 1814518633,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Replaced it with `memcpy` and it looks like the compiler successfully simplifies it to proper [vector instructions](https://www.felixcloutier.com/x86/pxor): https://godbolt.org/z/Koscjconz",
      "created_at": "2024-10-24T09:17:19Z",
      "updated_at": "2024-10-24T09:18:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814606913",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814606913"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814734979",
      "pull_request_review_id": 2392082288,
      "id": 1814734979,
      "node_id": "PRRC_kwDOABII585sKqiD",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 33,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "i have a hard time believing this will make a large difference, especially with the two memcpys involved\r\nOn modern CPUs, ALU operations (especially bitwise ones) are so fast compared to any kind of memory access.\r\nAnd this isn't some advanced crypto math, it's *one* Xor operation per word with a fixed key.\r\n\r\nCould avoid the memcpys if the code takes memory alignment into account, but that makes it even more complex. Not sure the pros/cons work out here.",
      "created_at": "2024-10-24T10:41:35Z",
      "updated_at": "2024-10-24T10:41:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814734979",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814734979"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814736038",
      "pull_request_review_id": 2392084054,
      "id": 1814736038,
      "node_id": "PRRC_kwDOABII585sKqym",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Please avoid % (especially with a dynamic value) in an inner loop. It's essentially a division operation and those are not cheap.",
      "created_at": "2024-10-24T10:42:26Z",
      "updated_at": "2024-10-24T10:42:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814736038",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814736038"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814739738",
      "pull_request_review_id": 2392090246,
      "id": 1814739738,
      "node_id": "PRRC_kwDOABII585sKrsa",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks for the hint, I deliberately removed that (please check the commit messages for details), since these are optimized away.\r\nAlso, this is just the leftover part, so for key of length 8 (the version used in most places) this will have 7 iterations at most.\r\nCan you see any difference with any of the benchmarks?",
      "created_at": "2024-10-24T10:45:15Z",
      "updated_at": "2024-10-24T10:46:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814739738",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814739738"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814741753",
      "pull_request_review_id": 2392093399,
      "id": 1814741753,
      "node_id": "PRRC_kwDOABII585sKsL5",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 33,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814734979,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The speedup comes from the vectorized operations, i.e. doing 64 bit xor instead of byte-by-byte xor (memcpy seems to be eliminated on 64 bit architectures successfully), see https://godbolt.org/z/Koscjconz",
      "created_at": "2024-10-24T10:46:42Z",
      "updated_at": "2024-10-24T10:46:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814741753",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814741753"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814763442",
      "pull_request_review_id": 2392129853,
      "id": 1814763442,
      "node_id": "PRRC_kwDOABII585sKxey",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It's only up to 7 iterations (assuming the key size is 8), sure, youre're right.\r\n\r\nBut ok, yea, i'm a bit divided about relying on specific non-trivial things being optimized out, makes the output very dependent on specific compiler decisions (which may be fickle in some cases).",
      "created_at": "2024-10-24T11:02:51Z",
      "updated_at": "2024-10-24T11:02:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814763442",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814763442"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814766636",
      "pull_request_review_id": 2392135328,
      "id": 1814766636,
      "node_id": "PRRC_kwDOABII585sKyQs",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Often the simplest code gets optimized most, since it's more predictable.\r\nWould you like me to extend the test or benchmark suite or try something else to make sure we're comfortable with the change?",
      "created_at": "2024-10-24T11:05:33Z",
      "updated_at": "2024-10-24T11:05:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814766636",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814766636"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814766970",
      "pull_request_review_id": 2392135936,
      "id": 1814766970,
      "node_id": "PRRC_kwDOABII585sKyV6",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 33,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814734979,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Right, that's trivial for x86_64. Let's also check for architectures that do require alignment for 64-bit reads and writes, like RISC-V.",
      "created_at": "2024-10-24T11:05:45Z",
      "updated_at": "2024-10-24T11:05:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814766970",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814766970"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814773275",
      "pull_request_review_id": 2392146665,
      "id": 1814773275,
      "node_id": "PRRC_kwDOABII585sKz4b",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "No, it's fine. It just gives me goosebumps seeing code like this, but if it doesn't affect the benchmark and no one else cares then it doesn't matter.",
      "created_at": "2024-10-24T11:10:55Z",
      "updated_at": "2024-10-24T11:10:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814773275",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814773275"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814847538",
      "pull_request_review_id": 2392272679,
      "id": 1814847538,
      "node_id": "PRRC_kwDOABII585sLGAy",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 33,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814734979,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added RISC-V compiler to https://godbolt.org/z/n5rMeYeas - where it seems to my untrained eyes that it uses two separate 32 bit xors to emulate the 64 bit operation (but even if it's byte-by-byte on 32 bit processors, that's still the same as what it was before on 64 bit CPUs, right?).",
      "created_at": "2024-10-24T12:06:13Z",
      "updated_at": "2024-10-24T12:12:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814847538",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814847538"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814852528",
      "pull_request_review_id": 2392281388,
      "id": 1814852528,
      "node_id": "PRRC_kwDOABII585sLHOw",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "To get rid of the goosebumps [I'm handling the remaining 4 bytes as a single 32 bit xor now](https://github.com/bitcoin/bitcoin/compare/6ae466bf112a1dedca3965718fc89b20b0e0e194..353915bae14b9704a209bc09b021d3dd2ee11cf2), so the final loop (when keys are 8 bytes long, which is mostly the case for us, I think) does 3 iterations at most. So even if it's not optimized away, we should be fine doing 3 divisions by a nice round number like 8.",
      "created_at": "2024-10-24T12:09:56Z",
      "updated_at": "2024-10-24T12:13:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814852528",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814852528"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814863916",
      "pull_request_review_id": 2392302787,
      "id": 1814863916,
      "node_id": "PRRC_kwDOABII585sLKAs",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> divisions by a nice round number like 8.\r\n\r\nI don't think the compiler knows the number here, so can't use it to optimize the code based on it.",
      "created_at": "2024-10-24T12:17:28Z",
      "updated_at": "2024-10-24T12:17:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814863916",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814863916"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814865983",
      "pull_request_review_id": 2392307155,
      "id": 1814865983,
      "node_id": "PRRC_kwDOABII585sLKg_",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is that important for max 3 divisions?",
      "created_at": "2024-10-24T12:19:01Z",
      "updated_at": "2024-10-24T12:19:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814865983",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814865983"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815601596",
      "pull_request_review_id": 2393555424,
      "id": 1815601596,
      "node_id": "PRRC_kwDOABII585sN-G8",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes. At least for me locally, but I am getting widely different bench results anyway: https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2436158760\r\n\r\nWith this one reverted, `XorSmall` is back to being just slightly slower than current master for me.",
      "created_at": "2024-10-24T19:33:20Z",
      "updated_at": "2024-10-24T19:33:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1815601596",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815601596"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815667257",
      "pull_request_review_id": 2393663006,
      "id": 1815667257,
      "node_id": "PRRC_kwDOABII585sOOI5",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Usually these optimizations concentrate on the measurable parts based on the profiling results that I'm getting during reindexing or IBD. Obfuscating a single bit (i.e. `XorSmall`) wasn't my focus, it's already very fast, didn't seem like the bottleneck.\r\nWould you like me to concentrate on that scenario instead? Or would it make more sense to serialize a block and use that as the basis for the benchmarks?\r\n\r\n> C++ compiler .......................... AppleClang 16.0.0.16000026\r\n\r\nBefore:\r\n|             ns/byte |              byte/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                1.99 |      501,740,412.05 |    0.5% |     10.27 | `AutoFileXor`\r\n|                1.24 |      807,597,761.92 |    0.0% |     11.01 | `Xor`\r\n|                1.29 |      776,238,564.27 |    0.0% |     10.59 | `XorSmall`\r\n\r\nAfter:\r\n|             ns/byte |              byte/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                0.73 |    1,364,622,484.81 |    0.9% |      8.78 | `AutoFileXor`\r\n|                0.02 |   40,999,383,920.82 |    0.0% |     11.00 | `Xor`\r\n|                0.54 |    1,862,525,472.57 |    0.0% |     11.00 | `XorSmall`\r\n\r\n> C++ compiler .......................... GNU 12.2.0\r\n\r\nBefore:\r\n|             ns/byte |              byte/s |    err% |        ins/byte |        cyc/byte |    IPC |       bra/byte |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|                1.60 |      624,562,742.35 |    0.2% |            9.20 |            3.57 |  2.579 |           1.03 |    0.1% |     10.61 | `AutoFileXor`\r\n|                0.91 |    1,102,205,071.31 |    0.0% |            9.02 |            3.26 |  2.763 |           1.00 |    0.1% |     11.00 | `Xor`\r\n|                1.23 |      811,876,565.33 |    0.1% |           14.60 |            4.43 |  3.295 |           1.80 |    0.0% |     10.56 | `XorSmall`\r\n\r\nAfter:\r\n|             ns/byte |              byte/s |    err% |        ins/byte |        cyc/byte |    IPC |       bra/byte |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|                0.74 |    1,346,798,809.87 |    0.1% |            0.72 |            0.47 |  1.531 |           0.16 |    0.2% |     11.02 | `AutoFileXor`\r\n|                0.09 |   11,450,472,586.50 |    0.0% |            0.59 |            0.31 |  1.882 |           0.14 |    1.9% |     10.82 | `Xor`\r\n|                5.65 |      177,092,223.60 |    0.1% |           22.00 |           20.31 |  1.083 |           4.80 |    0.0% |     10.99 | `XorSmall`",
      "created_at": "2024-10-24T20:37:25Z",
      "updated_at": "2024-10-24T20:37:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1815667257",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815667257"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815699568",
      "pull_request_review_id": 2393715070,
      "id": 1815699568,
      "node_id": "PRRC_kwDOABII585sOWBw",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Would you like me to concentrate on that scenario instead? Or would it make more sense to serialize a block and use that as the basis for the benchmarks?\r\n\r\nWell no. I think this has been mentioned previously. Generally, optimizing for micro benchmarks may not yield results that are actually meaningful or visible for end-users, because the benchmarks capture only a very specific and narrow view. Optimizing for one could even make the code slower for another (as observed above). Adding a bench for the block couldn't hurt, but I haven't checked how representative it is. If such a bench represents the IBD behavior, it would be ideal. (There already is a block in the hex bench data, which could be used)\r\n\r\n> Usually these optimizations concentrate on the measurable parts based on the profiling results that I'm getting during reindexing or IBD\r\n\r\nYes, that is more useful. It would be good to share the number you got. Because the commit message simply claims that no benefit was found (\"The `if (j == key.size())` optimization wasn't kept since the benchmarks couldn't show any advantage anymore\"). \r\n\r\n\r\n> XorSmall\r\n\r\nLooks like you can reproduce the slowdown. I wonder if it is correlated with the use of libc++  vs libstdc++",
      "created_at": "2024-10-24T21:11:27Z",
      "updated_at": "2024-10-24T21:12:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1815699568",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815699568"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816522021",
      "pull_request_review_id": 2395021458,
      "id": 1816522021,
      "node_id": "PRRC_kwDOABII585sRe0l",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": ">  It would be good to share the number you got\r\n\r\nThe `reindex-chainstate` until 600k, 2 runs just finished - comparing master against the 64/32 bit packing (current state) on Linux (with GCC, showing the above inconsistency).\r\n\r\n<details>\r\n<summary>benchmark</summary>\r\n\r\n```bash\r\nhyperfine \\\r\n--runs 2 \\\r\n--show-output \\\r\n--export-json /mnt/my_storage/reindex-xor.json \\\r\n--parameter-list COMMIT dea7e2faf1bc48f96741ef\r\n84e25e6f47cefd5a92,353915bae14b9704a209bc09b021d3dd2ee11cf2 \\\r\n--prepare 'cmake -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_UTIL=OFF -DBUILD_TX=OFF -DBUILD_TESTS=OFF -DENABLE_WALLET=OFF -DI\r\nNSTALL_MAN=OFF && cmake --build build -j$(nproc)' \\\r\n'COMMIT={COMMIT} ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=600000 -dbcache=500 -printtoconsole=0 -reindex-chainstate -connect=0'\r\n```\r\n\r\n</details>\r\n\r\nBefore:\r\n* 3.554 hours\r\n* 3.567 hours\r\n\r\nAfter:\r\n* 3.523 hours\r\n* 3.527 hours\r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\n```bash\r\nBenchmark 1: COMMIT=dea7e2faf1bc48f96741ef84e25e6f47cefd5a92 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=600000 -dbcache=500 -printtoconsole=0 -reindex-chains\r\ntate -connect=0\r\n  Time (mean ± σ):     12819.367 s ± 35.155 s    [User: 11992.168 s, System: 2509.200 s]\r\n  Range (min … max):   12794.508 s … 12844.225 s    2 runs\r\n\r\nBenchmark 2: COMMIT=353915bae14b9704a209bc09b021d3dd2ee11cf2 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=600000 -dbcache=500 -printtoconsole=0 -reindex-chains\r\ntate -connect=0\r\n  Time (mean ± σ):     12685.350 s ± 19.878 s    [User: 11918.349 s, System: 2523.819 s]\r\n  Range (min … max):   12671.295 s … 12699.406 s    2 runs\r\n```\r\n\r\n</details>\r\n\r\n----\r\n\r\nReindexing is a lot more stable than IBD (as seen from multiple measurements), showing a consistent 1% speedup.\r\nNot earth-shattering, but at least this way the obfuscation isn't causing a speed regression anymore.\r\n\r\n----\r\n\r\n> Adding a bench for the block couldn't hurt, but I haven't checked how representative it is\r\n\r\nLet's find out!",
      "created_at": "2024-10-25T11:35:23Z",
      "updated_at": "2024-10-25T11:38:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1816522021",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816522021"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816612914",
      "pull_request_review_id": 2395174160,
      "id": 1816612914,
      "node_id": "PRRC_kwDOABII585sR1Ay",
      "diff_hunk": "@@ -270,7 +297,7 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file)\n         BOOST_CHECK(false);\n     } catch (const std::exception& e) {\n         BOOST_CHECK(strstr(e.what(),\n-                        \"Rewind limit must be less than buffer size\") != nullptr);\n+                           \"Rewind limit must be less than buffer size\") != nullptr);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 48,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Seems like prior author just rounded off to some *not too unreasonable* tab-indentation (efd2474d17098c754367b844ec646ebececc7c74). Function isn't touched in this PR so should probably resist touching here and below.",
      "created_at": "2024-10-25T12:41:11Z",
      "updated_at": "2024-10-25T14:02:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1816612914",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816612914"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 385,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816619457",
      "pull_request_review_id": 2395174160,
      "id": 1816619457,
      "node_id": "PRRC_kwDOABII585sR2nB",
      "diff_hunk": "@@ -14,6 +14,33 @@ using namespace std::string_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(xor_bytes)\n+{\n+    auto expected_xor = [](Span<std::byte> write, Span<const std::byte> key, size_t key_offset) {\n+        if (key.size()) {\n+            for (auto& b : write) {\n+                b ^= key[key_offset++ % key.size()];\n+            }\n+        }\n+    };\n+\n+    FastRandomContext rng{false};\n+    for (int test = 0; test < 100; ++test) {\n+        const size_t key_size = rng.randrange(10);\n+        const size_t write_size = rng.randrange(100);\n+        const size_t key_offset = rng.randrange(key_size + 2);\n+\n+        std::vector key(rng.randbytes<std::byte>(key_size));\n+        std::vector expected(rng.randbytes<std::byte>(write_size));\n+        std::vector actual(expected);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Experimented with changed to brace-initialization which uncovered some slight narrowing/widening occurring. (Thought I had an angle for making the code more robust in a more material way but that attempt failed).\r\n```suggestion\r\n    auto expected_xor{[](Span<std::byte> write, Span<const std::byte> key, size_t key_offset) {\r\n        if (key.size()) {\r\n            for (auto& b : write) {\r\n                b ^= key[key_offset++ % key.size()];\r\n            }\r\n        }\r\n    }};\r\n\r\n    FastRandomContext rng{false};\r\n    for (int test = 0; test < 100; ++test) {\r\n        const int key_size{rng.randrange(10)};\r\n        const int write_size{rng.randrange(100)};\r\n        const int key_offset{rng.randrange(key_size + 2)};\r\n\r\n        std::vector key{rng.randbytes<std::byte>(key_size)};\r\n        std::vector expected{rng.randbytes<std::byte>(write_size)};\r\n        std::vector actual{expected};\r\n```",
      "created_at": "2024-10-25T12:46:18Z",
      "updated_at": "2024-10-25T14:02:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1816619457",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816619457"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 19,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816662396",
      "pull_request_review_id": 2395174160,
      "id": 1816662396,
      "node_id": "PRRC_kwDOABII585sSBF8",
      "diff_hunk": "@@ -14,6 +14,33 @@ using namespace std::string_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(xor_bytes)\n+{\n+    auto expected_xor = [](Span<std::byte> write, Span<const std::byte> key, size_t key_offset) {",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Might as well use `std::span` for new code.",
      "created_at": "2024-10-25T13:12:54Z",
      "updated_at": "2024-10-25T14:02:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1816662396",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816662396"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816775973",
      "pull_request_review_id": 2395447475,
      "id": 1816775973,
      "node_id": "PRRC_kwDOABII585sSc0l",
      "diff_hunk": "@@ -270,7 +297,7 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file)\n         BOOST_CHECK(false);\n     } catch (const std::exception& e) {\n         BOOST_CHECK(strstr(e.what(),\n-                        \"Rewind limit must be less than buffer size\") != nullptr);\n+                           \"Rewind limit must be less than buffer size\") != nullptr);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 48,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "in_reply_to_id": 1816612914,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Seems it was a [deliberate formatting](https://github.com/bitcoin/bitcoin/commit/efd2474d17098c754367b844ec646ebececc7c74#diff-73552341d85aec344497b47f1c2aa53a7e01a415030e40f56b1c454aef5f209dR221-R222), so I'll revert.\r\nWill push after I have the block serialization benchmark working.",
      "created_at": "2024-10-25T14:18:31Z",
      "updated_at": "2024-10-25T14:18:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1816775973",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816775973"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 385,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816776293",
      "pull_request_review_id": 2395447971,
      "id": 1816776293,
      "node_id": "PRRC_kwDOABII585sSc5l",
      "diff_hunk": "@@ -14,6 +14,33 @@ using namespace std::string_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(xor_bytes)\n+{\n+    auto expected_xor = [](Span<std::byte> write, Span<const std::byte> key, size_t key_offset) {\n+        if (key.size()) {\n+            for (auto& b : write) {\n+                b ^= key[key_offset++ % key.size()];\n+            }\n+        }\n+    };\n+\n+    FastRandomContext rng{false};\n+    for (int test = 0; test < 100; ++test) {\n+        const size_t key_size = rng.randrange(10);\n+        const size_t write_size = rng.randrange(100);\n+        const size_t key_offset = rng.randrange(key_size + 2);\n+\n+        std::vector key(rng.randbytes<std::byte>(key_size));\n+        std::vector expected(rng.randbytes<std::byte>(write_size));\n+        std::vector actual(expected);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "in_reply_to_id": 1816619457,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Seems a bit excessive for a test, but ended up changing it to e.g. `const size_t write_size{rng.randrange(100U)};`. Will push a bit later.",
      "created_at": "2024-10-25T14:18:44Z",
      "updated_at": "2024-10-26T21:59:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1816776293",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816776293"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 19,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816776448",
      "pull_request_review_id": 2395448225,
      "id": 1816776448,
      "node_id": "PRRC_kwDOABII585sSc8A",
      "diff_hunk": "@@ -14,6 +14,33 @@ using namespace std::string_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(xor_bytes)\n+{\n+    auto expected_xor = [](Span<std::byte> write, Span<const std::byte> key, size_t key_offset) {",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "in_reply_to_id": 1816662396,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Indeed!",
      "created_at": "2024-10-25T14:18:50Z",
      "updated_at": "2024-10-25T14:18:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1816776448",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1816776448"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817939448",
      "pull_request_review_id": 2397366260,
      "id": 1817939448,
      "node_id": "PRRC_kwDOABII585sW434",
      "diff_hunk": "@@ -270,7 +297,7 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file)\n         BOOST_CHECK(false);\n     } catch (const std::exception& e) {\n         BOOST_CHECK(strstr(e.what(),\n-                        \"Rewind limit must be less than buffer size\") != nullptr);\n+                           \"Rewind limit must be less than buffer size\") != nullptr);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 48,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "a3dc138798e2f2c7aa1c9b37633c16c1b523a251",
      "in_reply_to_id": 1816612914,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ended up modifying a lot more in the latest push, so this line was formatted again",
      "created_at": "2024-10-26T21:58:41Z",
      "updated_at": "2024-10-26T21:58:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1817939448",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817939448"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 385,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817939675",
      "pull_request_review_id": 2397366442,
      "id": 1817939675,
      "node_id": "PRRC_kwDOABII585sW47b",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 33,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814734979,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've replaced all vector keys with 64 bit ints\r\n\r\nEdit:\r\nMemory alignment is handled via `std::memcpy`, optimized out on tested platforms (see [godbolt.org/z/dcxvh6abq](https://godbolt.org/z/dcxvh6abq)):\r\n\r\n* Clang (x86-64) - 32 bytes/iter using SSE vector operations\r\n* GCC (x86-64) - 16 bytes/iter using unrolled 64-bit XORs\r\n* RISC-V (32-bit) - 8 bytes/iter using load/XOR/store sequence\r\n* s390x (big-endian) - 64 bytes/iter with unrolled 8-byte XORs\r\n\r\n(please validate, my assembly knowledge is mostly academic)",
      "created_at": "2024-10-26T22:01:14Z",
      "updated_at": "2024-11-10T20:39:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1817939675",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817939675"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817939890",
      "pull_request_review_id": 2397366600,
      "id": 1817939890,
      "node_id": "PRRC_kwDOABII585sW4-y",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've change the usages to avoid std::vector keys, this way GCC and Clang both agree that the new results are faster (even though clang manages to compile to 32 byte SIMD, while GCC only to 16 bytes per iteration, see https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1817939675)",
      "created_at": "2024-10-26T22:03:23Z",
      "updated_at": "2024-10-26T22:03:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1817939890",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817939890"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824429398",
      "pull_request_review_id": 2407902826,
      "id": 1824429398,
      "node_id": "PRRC_kwDOABII585svpVW",
      "diff_hunk": "@@ -254,24 +254,21 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n-\n-    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n-\n-    if (!key_exists && params.obfuscate && IsEmpty()) {\n-        // Initialize non-degenerate obfuscation if it won't upset\n-        // existing, non-obfuscated data.\n-        std::vector<unsigned char> new_key = CreateObfuscateKey();\n+    obfuscate_key = 0; // needed for unobfuscated Read\n+    std::vector<unsigned char> obfuscate_key_vector(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    if (bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key_vector); !key_exists && params.obfuscate && IsEmpty()) {",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "While `key_exists` is only created for this ìf`-block, there are other conditions involved, and we test for the negation of the value, so I find it less surprising to revert to the previous approach.\r\n```suggestion\r\n    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key_vector);\r\n    if (!key_exists && params.obfuscate && IsEmpty()) {\r\n```",
      "created_at": "2024-10-31T13:09:44Z",
      "updated_at": "2024-10-31T14:52:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824429398",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824429398"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824438833",
      "pull_request_review_id": 2407902826,
      "id": 1824438833,
      "node_id": "PRRC_kwDOABII585svrox",
      "diff_hunk": "@@ -1174,7 +1174,11 @@ static auto InitBlocksdirXorKey(const BlockManager::Options& opts)\n         };\n     }\n     LogInfo(\"Using obfuscation key for blocksdir *.dat files (%s): '%s'\\n\", fs::PathToString(opts.blocks_dir), HexStr(xor_key));\n-    return std::vector<std::byte>{xor_key.begin(), xor_key.end()};\n+    assert(xor_key.size() == 8);\n+    uint64_t key;\n+    std::memcpy(&key, xor_key.data(), 8);\n+    xor_key.fill(std::byte{0});",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I find it more useful to (static) assert that the `std::array` size matches the uint64 size directly. Also don't see a point in zeroing out the local variable before returning?\r\n```suggestion\r\n    uint64_t key;\r\n    static_assert(xor_key.size() == sizeof(key));\r\n    std::memcpy(&key, xor_key.data(), sizeof(key));\r\n```",
      "created_at": "2024-10-31T13:16:46Z",
      "updated_at": "2024-10-31T14:52:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824438833",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824438833"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 1177,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1180,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824438854",
      "pull_request_review_id": 2407930796,
      "id": 1824438854,
      "node_id": "PRRC_kwDOABII585svrpG",
      "diff_hunk": "@@ -3,22 +3,1283 @@\n // file COPYING or https://opensource.org/license/mit/.\n \n #include <bench/bench.h>\n+#include <cmath>\n+#include <cstddef>\n+#include <map>",
      "path": "src/bench/xor.cpp",
      "position": 2,
      "original_position": 6,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You can keep the std lib headers separated from our own headers.",
      "created_at": "2024-10-31T13:16:47Z",
      "updated_at": "2024-10-31T13:16:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824438854",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824438854"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 7,
      "original_line": 7,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824444165",
      "pull_request_review_id": 2407902826,
      "id": 1824444165,
      "node_id": "PRRC_kwDOABII585svs8F",
      "diff_hunk": "@@ -1174,6 +1174,7 @@ static auto InitBlocksdirXorKey(const BlockManager::Options& opts)\n         };\n     }\n     LogInfo(\"Using obfuscation key for blocksdir *.dat files (%s): '%s'\\n\", fs::PathToString(opts.blocks_dir), HexStr(xor_key));\n+    assert(xor_key.size() == 8);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "23fc898514bf9696facbaff65251b62c362d214e",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Don't see much point in adding the assert here in 23fc898514bf9696facbaff65251b62c362d214e were we still only have a fixed-size `std::array` with the ~asserted~ fixed size of 8. Seems sufficient with the assert in the `BlockManager`-ctor.",
      "created_at": "2024-10-31T13:20:28Z",
      "updated_at": "2024-10-31T14:53:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824444165",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824444165"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1177,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824457332",
      "pull_request_review_id": 2407902826,
      "id": 1824457332,
      "node_id": "PRRC_kwDOABII585svwJ0",
      "diff_hunk": "@@ -235,7 +262,7 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Single character key",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 61,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "850214ffd9f56e887a18d0428d5881e6c1ee8652",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 850214ffd9f56e887a18d0428d5881e6c1ee8652:\r\nSingle/Multi character key comments don't make sense inside of this commit.",
      "created_at": "2024-10-31T13:29:08Z",
      "updated_at": "2024-10-31T14:52:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824457332",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824457332"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 262,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824518058",
      "pull_request_review_id": 2408055001,
      "id": 1824518058,
      "node_id": "PRRC_kwDOABII585sv--q",
      "diff_hunk": "@@ -3,22 +3,1283 @@\n // file COPYING or https://opensource.org/license/mit/.\n \n #include <bench/bench.h>\n+#include <cmath>\n+#include <cstddef>\n+#include <map>",
      "path": "src/bench/xor.cpp",
      "position": 2,
      "original_position": 6,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": 1824438854,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "[Done](https://github.com/bitcoin/bitcoin/compare/8696184c2fd183483fa843348323ffbc62c2de3c..33625e9d5327263c273583d7b3fe2f3114ebf12e), anything else?",
      "created_at": "2024-10-31T13:55:56Z",
      "updated_at": "2024-10-31T13:55:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824518058",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824518058"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 7,
      "original_line": 7,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824553664",
      "pull_request_review_id": 2407902826,
      "id": 1824553664,
      "node_id": "PRRC_kwDOABII585swHrA",
      "diff_hunk": "@@ -11,6 +11,7 @@\n AutoFile::AutoFile(std::FILE* file, std::vector<std::byte> data_xor)\n     : m_file{file}, m_xor{std::move(data_xor)}\n {\n+    assert(m_xor.size() == 8);",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "4437d4379c42a7b87bd01ad5ea6c450a732f4f95",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Guess the point of adding this assert is to prove that it doesn't break anything before switching to uint64?",
      "created_at": "2024-10-31T14:15:21Z",
      "updated_at": "2024-10-31T14:52:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824553664",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824553664"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824574701",
      "pull_request_review_id": 2407902826,
      "id": 1824574701,
      "node_id": "PRRC_kwDOABII585swMzt",
      "diff_hunk": "@@ -393,7 +405,7 @@ class AutoFile\n     std::optional<int64_t> m_position;\n \n public:\n-    explicit AutoFile(std::FILE* file, std::vector<std::byte> data_xor={});\n+    explicit AutoFile(std::FILE* file, std::vector<std::byte> data_xor = {std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}});",
      "path": "src/streams.h",
      "position": null,
      "original_position": 73,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "4437d4379c42a7b87bd01ad5ea6c450a732f4f95",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 4437d4379c42a7b87bd01ad5ea6c450a732f4f95:\r\nLess verbose:\r\n`{std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}}`\r\n=>\r\n`{8, std::byte{0x00}}`",
      "created_at": "2024-10-31T14:27:45Z",
      "updated_at": "2024-10-31T14:52:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824574701",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824574701"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 408,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824605285",
      "pull_request_review_id": 2407902826,
      "id": 1824605285,
      "node_id": "PRRC_kwDOABII585swURl",
      "diff_hunk": "@@ -179,13 +182,16 @@ bool DumpMempool(const CTxMemPool& pool, const fs::path& dump_path, FopenFn mock\n         file << version;\n \n         if (!pool.m_opts.persist_v1_dat) {\n-            std::vector<std::byte> xor_key(8);\n-            FastRandomContext{}.fillrand(xor_key);\n-            file << xor_key;\n-            file.SetXor(xor_key);\n+            std::vector<std::byte> xor_key_vector(8);\n+            FastRandomContext{}.fillrand(xor_key_vector);\n+            file << xor_key_vector;\n+\n+            uint64_t m_xor;",
      "path": "src/node/mempool_persist.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "33625e9d5327263c273583d7b3fe2f3114ebf12e",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Should not use `m_`-prefix for non-member variables.",
      "created_at": "2024-10-31T14:46:41Z",
      "updated_at": "2024-10-31T14:52:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824605285",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824605285"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 189,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824625015",
      "pull_request_review_id": 2408217524,
      "id": 1824625015,
      "node_id": "PRRC_kwDOABII585swZF3",
      "diff_hunk": "@@ -254,24 +254,21 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n-\n-    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n-\n-    if (!key_exists && params.obfuscate && IsEmpty()) {\n-        // Initialize non-degenerate obfuscation if it won't upset\n-        // existing, non-obfuscated data.\n-        std::vector<unsigned char> new_key = CreateObfuscateKey();\n+    obfuscate_key = 0; // needed for unobfuscated Read\n+    std::vector<unsigned char> obfuscate_key_vector(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    if (bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key_vector); !key_exists && params.obfuscate && IsEmpty()) {",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": 1824429398,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This pattern has been [used before](https://github.com/bitcoin/bitcoin/blob/master/src/coins.cpp#L64), I meant to narrow the scope of the var here.\r\nIf you feel strongly about it, I'll separate them.",
      "created_at": "2024-10-31T14:57:47Z",
      "updated_at": "2024-10-31T14:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824625015",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824625015"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824627942",
      "pull_request_review_id": 2408222422,
      "id": 1824627942,
      "node_id": "PRRC_kwDOABII585swZzm",
      "diff_hunk": "@@ -1174,7 +1174,11 @@ static auto InitBlocksdirXorKey(const BlockManager::Options& opts)\n         };\n     }\n     LogInfo(\"Using obfuscation key for blocksdir *.dat files (%s): '%s'\\n\", fs::PathToString(opts.blocks_dir), HexStr(xor_key));\n-    return std::vector<std::byte>{xor_key.begin(), xor_key.end()};\n+    assert(xor_key.size() == 8);\n+    uint64_t key;\n+    std::memcpy(&key, xor_key.data(), 8);\n+    xor_key.fill(std::byte{0});",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": 1824438833,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've added the fills to make sure we're not using them after conversion anymore.\r\nWhat would be the advantage of the static asserts?\r\nI don't mind removing these failsafes if you think they're redundant or noisy.",
      "created_at": "2024-10-31T14:59:36Z",
      "updated_at": "2024-10-31T14:59:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824627942",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824627942"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 1177,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1180,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824630954",
      "pull_request_review_id": 2408226883,
      "id": 1824630954,
      "node_id": "PRRC_kwDOABII585swaiq",
      "diff_hunk": "@@ -11,6 +11,7 @@\n AutoFile::AutoFile(std::FILE* file, std::vector<std::byte> data_xor)\n     : m_file{file}, m_xor{std::move(data_xor)}\n {\n+    assert(m_xor.size() == 8);",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "4437d4379c42a7b87bd01ad5ea6c450a732f4f95",
      "in_reply_to_id": 1824553664,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "yes",
      "created_at": "2024-10-31T15:01:28Z",
      "updated_at": "2024-10-31T15:01:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824630954",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824630954"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824631355",
      "pull_request_review_id": 2408228026,
      "id": 1824631355,
      "node_id": "PRRC_kwDOABII585swao7",
      "diff_hunk": "@@ -393,7 +405,7 @@ class AutoFile\n     std::optional<int64_t> m_position;\n \n public:\n-    explicit AutoFile(std::FILE* file, std::vector<std::byte> data_xor={});\n+    explicit AutoFile(std::FILE* file, std::vector<std::byte> data_xor = {std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}});",
      "path": "src/streams.h",
      "position": null,
      "original_position": 73,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "4437d4379c42a7b87bd01ad5ea6c450a732f4f95",
      "in_reply_to_id": 1824574701,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "it's removed in the next commit",
      "created_at": "2024-10-31T15:01:44Z",
      "updated_at": "2024-10-31T15:01:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824631355",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824631355"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 408,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824645305",
      "pull_request_review_id": 2408250113,
      "id": 1824645305,
      "node_id": "PRRC_kwDOABII585sweC5",
      "diff_hunk": "@@ -254,24 +254,21 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n-\n-    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n-\n-    if (!key_exists && params.obfuscate && IsEmpty()) {\n-        // Initialize non-degenerate obfuscation if it won't upset\n-        // existing, non-obfuscated data.\n-        std::vector<unsigned char> new_key = CreateObfuscateKey();\n+    obfuscate_key = 0; // needed for unobfuscated Read\n+    std::vector<unsigned char> obfuscate_key_vector(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    if (bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key_vector); !key_exists && params.obfuscate && IsEmpty()) {",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": 1824429398,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> This pattern has been [used before](https://github.com/bitcoin/bitcoin/blob/master/src/coins.cpp#L64)\r\n\r\nIn the example you give, the variable is used in a more \"positive\" sense. Here we test the negated value, which is part of what makes it jarring.\r\n\r\nOne could maybe improve readability by moving the negation and renaming:\r\n```suggestion\r\n    if (bool missing_key = !Read(OBFUSCATE_KEY_KEY, obfuscate_key_vector); missing_key && params.obfuscate && IsEmpty()) {\r\n```\r\n\r\n> I meant to narrow the scope of the var here.\r\n\r\nThat's why I was referring to the `if`-block.\r\n\r\n> If you feel strongly about it, I'll separate them.\r\n\r\nYes please, either that or my negation move+rename suggestion.",
      "created_at": "2024-10-31T15:09:25Z",
      "updated_at": "2024-10-31T15:11:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824645305",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824645305"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824651933",
      "pull_request_review_id": 2408260429,
      "id": 1824651933,
      "node_id": "PRRC_kwDOABII585swfqd",
      "diff_hunk": "@@ -179,13 +182,16 @@ bool DumpMempool(const CTxMemPool& pool, const fs::path& dump_path, FopenFn mock\n         file << version;\n \n         if (!pool.m_opts.persist_v1_dat) {\n-            std::vector<std::byte> xor_key(8);\n-            FastRandomContext{}.fillrand(xor_key);\n-            file << xor_key;\n-            file.SetXor(xor_key);\n+            std::vector<std::byte> xor_key_vector(8);\n+            FastRandomContext{}.fillrand(xor_key_vector);\n+            file << xor_key_vector;\n+\n+            uint64_t m_xor;",
      "path": "src/node/mempool_persist.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "33625e9d5327263c273583d7b3fe2f3114ebf12e",
      "in_reply_to_id": 1824605285,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You're right, I've used `xor_key` in the same case before",
      "created_at": "2024-10-31T15:13:17Z",
      "updated_at": "2024-10-31T15:13:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824651933",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824651933"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 189,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824652007",
      "pull_request_review_id": 2408260546,
      "id": 1824652007,
      "node_id": "PRRC_kwDOABII585swfrn",
      "diff_hunk": "@@ -393,7 +405,7 @@ class AutoFile\n     std::optional<int64_t> m_position;\n \n public:\n-    explicit AutoFile(std::FILE* file, std::vector<std::byte> data_xor={});\n+    explicit AutoFile(std::FILE* file, std::vector<std::byte> data_xor = {std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}, std::byte{0x00}});",
      "path": "src/streams.h",
      "position": null,
      "original_position": 73,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "4437d4379c42a7b87bd01ad5ea6c450a732f4f95",
      "in_reply_to_id": 1824574701,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "But done anyway",
      "created_at": "2024-10-31T15:13:19Z",
      "updated_at": "2024-10-31T15:13:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824652007",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824652007"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 408,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824652156",
      "pull_request_review_id": 2408260771,
      "id": 1824652156,
      "node_id": "PRRC_kwDOABII585swft8",
      "diff_hunk": "@@ -235,7 +262,7 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Single character key",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 61,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "850214ffd9f56e887a18d0428d5881e6c1ee8652",
      "in_reply_to_id": 1824457332,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed, thanks",
      "created_at": "2024-10-31T15:13:23Z",
      "updated_at": "2024-10-31T15:13:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824652156",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824652156"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 262,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824652216",
      "pull_request_review_id": 2408260861,
      "id": 1824652216,
      "node_id": "PRRC_kwDOABII585swfu4",
      "diff_hunk": "@@ -1174,6 +1174,7 @@ static auto InitBlocksdirXorKey(const BlockManager::Options& opts)\n         };\n     }\n     LogInfo(\"Using obfuscation key for blocksdir *.dat files (%s): '%s'\\n\", fs::PathToString(opts.blocks_dir), HexStr(xor_key));\n+    assert(xor_key.size() == 8);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "23fc898514bf9696facbaff65251b62c362d214e",
      "in_reply_to_id": 1824444165,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Simplified, thanks",
      "created_at": "2024-10-31T15:13:25Z",
      "updated_at": "2024-10-31T15:13:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824652216",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824652216"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1177,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824652442",
      "pull_request_review_id": 2408261251,
      "id": 1824652442,
      "node_id": "PRRC_kwDOABII585swfya",
      "diff_hunk": "@@ -254,24 +254,21 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n-\n-    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n-\n-    if (!key_exists && params.obfuscate && IsEmpty()) {\n-        // Initialize non-degenerate obfuscation if it won't upset\n-        // existing, non-obfuscated data.\n-        std::vector<unsigned char> new_key = CreateObfuscateKey();\n+    obfuscate_key = 0; // needed for unobfuscated Read\n+    std::vector<unsigned char> obfuscate_key_vector(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    if (bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key_vector); !key_exists && params.obfuscate && IsEmpty()) {",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": 1824429398,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "[Done](https://github.com/bitcoin/bitcoin/compare/33625e9d5327263c273583d7b3fe2f3114ebf12e..a5cad729c76cafa047a2b1897595669ae9b2b0d5) both, thanks, good observation about the negation",
      "created_at": "2024-10-31T15:13:34Z",
      "updated_at": "2024-10-31T15:16:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824652442",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824652442"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824655597",
      "pull_request_review_id": 2408266168,
      "id": 1824655597,
      "node_id": "PRRC_kwDOABII585swgjt",
      "diff_hunk": "@@ -1174,7 +1174,11 @@ static auto InitBlocksdirXorKey(const BlockManager::Options& opts)\n         };\n     }\n     LogInfo(\"Using obfuscation key for blocksdir *.dat files (%s): '%s'\\n\", fs::PathToString(opts.blocks_dir), HexStr(xor_key));\n-    return std::vector<std::byte>{xor_key.begin(), xor_key.end()};\n+    assert(xor_key.size() == 8);\n+    uint64_t key;\n+    std::memcpy(&key, xor_key.data(), 8);\n+    xor_key.fill(std::byte{0});",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": 1824438833,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed in the end, not that important",
      "created_at": "2024-10-31T15:15:21Z",
      "updated_at": "2024-10-31T15:15:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824655597",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824655597"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 1177,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1180,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824697175",
      "pull_request_review_id": 2408330350,
      "id": 1824697175,
      "node_id": "PRRC_kwDOABII585swqtX",
      "diff_hunk": "@@ -235,7 +262,7 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Single character key",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 61,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "850214ffd9f56e887a18d0428d5881e6c1ee8652",
      "in_reply_to_id": 1824457332,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "(Should be done in the initial commit which invalidates the comments IMO).",
      "created_at": "2024-10-31T15:39:42Z",
      "updated_at": "2024-10-31T16:00:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824697175",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824697175"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 262,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824712214",
      "pull_request_review_id": 2408330350,
      "id": 1824712214,
      "node_id": "PRRC_kwDOABII585swuYW",
      "diff_hunk": "@@ -254,24 +254,21 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n-\n-    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n-\n-    if (!key_exists && params.obfuscate && IsEmpty()) {\n-        // Initialize non-degenerate obfuscation if it won't upset\n-        // existing, non-obfuscated data.\n-        std::vector<unsigned char> new_key = CreateObfuscateKey();\n+    obfuscate_key = 0; // needed for unobfuscated Read\n+    std::vector<unsigned char> obfuscate_key_vector(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    if (bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key_vector); !key_exists && params.obfuscate && IsEmpty()) {",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": 1824429398,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "My point about moving the negation and changing the name made more sense in the context of keeping it inside the `if`-block. If you are open to moving it out, I'd say it's better to keep the original `key_exists` name and original negation to avoid the churn and make it easier to review.\r\n\r\n(Realized another reason for not having it inside the `if`-block is that we are mutating `obfuscate_key_vector`, which is used after the block).",
      "created_at": "2024-10-31T15:48:14Z",
      "updated_at": "2024-10-31T16:00:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824712214",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824712214"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824904589",
      "pull_request_review_id": 2408667619,
      "id": 1824904589,
      "node_id": "PRRC_kwDOABII585sxdWN",
      "diff_hunk": "@@ -254,24 +254,21 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n-\n-    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n-\n-    if (!key_exists && params.obfuscate && IsEmpty()) {\n-        // Initialize non-degenerate obfuscation if it won't upset\n-        // existing, non-obfuscated data.\n-        std::vector<unsigned char> new_key = CreateObfuscateKey();\n+    obfuscate_key = 0; // needed for unobfuscated Read\n+    std::vector<unsigned char> obfuscate_key_vector(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    if (bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key_vector); !key_exists && params.obfuscate && IsEmpty()) {",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "8696184c2fd183483fa843348323ffbc62c2de3c",
      "in_reply_to_id": 1824429398,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I prefer the new `key_missing` part, it did confuse me once during development as well",
      "created_at": "2024-10-31T17:43:55Z",
      "updated_at": "2024-10-31T17:43:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1824904589",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824904589"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837156020",
      "pull_request_review_id": 2428114068,
      "id": 1837156020,
      "node_id": "PRRC_kwDOABII585tgMa0",
      "diff_hunk": "@@ -225,29 +285,34 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Degenerate case\n     {\n         DataStream ds{in};\n-        ds.Xor({0x00, 0x00});\n+        ds.Xor(0);\n         BOOST_CHECK_EQUAL(\"\"s, ds.str());\n     }\n \n     in.push_back(std::byte{0x0f});\n     in.push_back(std::byte{0xf0});\n \n-    // Single character key\n     {\n+        const std::vector xor_pat{std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}};\n+        uint64_t xor_key;\n+        std::memcpy(&xor_key, xor_pat.data(), 8);\n+\n         DataStream ds{in};\n-        ds.Xor({0xff});\n+        ds.Xor(xor_key);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 135,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Let's not add bloat for this case.\r\n```suggestion\r\n        ds.Xor(0xffffffffffffffff);\r\n```",
      "created_at": "2024-11-11T20:26:07Z",
      "updated_at": "2024-11-11T21:49:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837156020",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837156020"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 301,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837161349",
      "pull_request_review_id": 2428114068,
      "id": 1837161349,
      "node_id": "PRRC_kwDOABII585tgNuF",
      "diff_hunk": "@@ -225,29 +285,34 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Degenerate case\n     {\n         DataStream ds{in};\n-        ds.Xor({0x00, 0x00});\n+        ds.Xor(0);\n         BOOST_CHECK_EQUAL(\"\"s, ds.str());\n     }\n \n     in.push_back(std::byte{0x0f});\n     in.push_back(std::byte{0xf0});\n \n-    // Single character key\n     {\n+        const std::vector xor_pat{std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}};\n+        uint64_t xor_key;\n+        std::memcpy(&xor_key, xor_pat.data(), 8);\n+\n         DataStream ds{in};\n-        ds.Xor({0xff});\n+        ds.Xor(xor_key);\n         BOOST_CHECK_EQUAL(\"\\xf0\\x0f\"s, ds.str());\n     }\n \n-    // Multi character key\n-\n     in.clear();\n     in.push_back(std::byte{0xf0});\n     in.push_back(std::byte{0x0f});\n \n     {\n+        const std::vector xor_pat{std::byte{0xff}, std::byte{0x0f}, std::byte{0xff}, std::byte{0x0f}, std::byte{0xff}, std::byte{0x0f}, std::byte{0xff}, std::byte{0x0f}};\n+        uint64_t xor_key;\n+        std::memcpy(&xor_key, xor_pat.data(), 8);\n+\n         DataStream ds{in};\n-        ds.Xor({0xff, 0x0f});\n+        ds.Xor(xor_key);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 152,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Should work regardless of endianness.\r\n```suggestion\r\n        ds.Xor(0xff0fff0fff0fff0f);\r\n```",
      "created_at": "2024-11-11T20:32:36Z",
      "updated_at": "2024-11-11T21:49:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837161349",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837161349"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 315,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837163332",
      "pull_request_review_id": 2428114068,
      "id": 1837163332,
      "node_id": "PRRC_kwDOABII585tgONE",
      "diff_hunk": "@@ -14,16 +14,76 @@ using namespace std::string_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(xor_roundtrip_random_chunks)\n+{\n+    auto apply_random_xor_chunks{[](std::span<std::byte> write, const uint64_t key, FastRandomContext& rng) {\n+        for (size_t offset{0}; offset < write.size();) {\n+            const size_t chunk_size{1 + rng.randrange(write.size() - offset)};\n+            util::Xor(write.subspan(offset, chunk_size), key, offset);\n+            offset += chunk_size;\n+        }\n+    }};\n+\n+    FastRandomContext rng{/*fDeterministic=*/false};\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + rng.randrange(100U)};\n+        const std::vector original{rng.randbytes<std::byte>(write_size)};\n+        std::vector roundtrip{original};\n+\n+        std::vector key_bytes{rng.randbytes<std::byte>(8)};\n+        uint64_t key;\n+        std::memcpy(&key, key_bytes.data(), 8);\n+\n+        apply_random_xor_chunks(roundtrip, key, rng);\n+\n+        const bool all_zero = (key == 0) || (HexStr(key_bytes).find_first_not_of('0') >= write_size * 2);\n+        BOOST_CHECK_EQUAL(original != roundtrip, !all_zero);\n+\n+        apply_random_xor_chunks(roundtrip, key, rng);\n+        BOOST_CHECK(original == roundtrip);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(xor_bytes_reference)\n+{\n+    auto expected_xor{[](std::span<std::byte> write, const std::span<const std::byte> key, size_t key_offset) {\n+        for (auto& b : write) {\n+            b ^= key[key_offset++ % key.size()];\n+        }\n+    }};\n+\n+    FastRandomContext rng{/*fDeterministic=*/false};\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + rng.randrange(100U)};\n+        const size_t key_offset{rng.randrange(3 * 8U)}; // Should wrap around\n+\n+        std::vector key_bytes{rng.randbytes<std::byte>(8)};\n+        uint64_t key;\n+        std::memcpy(&key, key_bytes.data(), 8);\n+\n+        std::vector expected{rng.randbytes<std::byte>(write_size)};\n+        std::vector actual{expected};\n+\n+        expected_xor(expected, key_bytes, key_offset);\n+        util::Xor(actual, key, key_offset);\n+\n+        BOOST_CHECK_EQUAL_COLLECTIONS(expected.begin(), expected.end(), actual.begin(), actual.end());\n+    }\n+}\n+\n BOOST_AUTO_TEST_CASE(xor_file)\n {\n     fs::path xor_path{m_args.GetDataDirBase() / \"test_xor.bin\"};\n     auto raw_file{[&](const auto& mode) { return fsbridge::fopen(xor_path, mode); }};\n     const std::vector<uint8_t> test1{1, 2, 3};\n     const std::vector<uint8_t> test2{4, 5};\n-    const std::vector<std::byte> xor_pat{std::byte{0xff}, std::byte{0x00}};\n+    const std::vector xor_pat{std::byte{0xff}, std::byte{0x00}, std::byte{0xff}, std::byte{0x00}, std::byte{0xff}, std::byte{0x00}, std::byte{0xff}, std::byte{0x00}};\n+    uint64_t xor_key;\n+    std::memcpy(&xor_key, xor_pat.data(), 8);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 70,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n    const uint64_t xor_pat{0xff00ff00ff00ff00};\r\n```",
      "created_at": "2024-11-11T20:35:09Z",
      "updated_at": "2024-11-11T21:49:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837163332",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837163332"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 80,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837215954",
      "pull_request_review_id": 2428114068,
      "id": 1837215954,
      "node_id": "PRRC_kwDOABII585tgbDS",
      "diff_hunk": "@@ -254,24 +254,22 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n-\n-    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n-\n-    if (!key_exists && params.obfuscate && IsEmpty()) {\n-        // Initialize non-degenerate obfuscation if it won't upset\n-        // existing, non-obfuscated data.\n-        std::vector<unsigned char> new_key = CreateObfuscateKey();\n+    obfuscate_key = 0; // needed for unobfuscated Read",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n    obfuscate_key = 0; // Needed for unobfuscated Read\r\n```",
      "created_at": "2024-11-11T21:19:05Z",
      "updated_at": "2024-11-11T21:49:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837215954",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837215954"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 257,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837227061",
      "pull_request_review_id": 2428114068,
      "id": 1837227061,
      "node_id": "PRRC_kwDOABII585tgdw1",
      "diff_hunk": "@@ -58,15 +58,19 @@ bool LoadMempool(CTxMemPool& pool, const fs::path& load_path, Chainstate& active\n     try {\n         uint64_t version;\n         file >> version;\n-        std::vector<std::byte> xor_key;\n         if (version == MEMPOOL_DUMP_VERSION_NO_XOR_KEY) {\n-            // Leave XOR-key empty\n+            file.SetXor(0);\n         } else if (version == MEMPOOL_DUMP_VERSION) {\n-            file >> xor_key;\n+            std::vector<std::byte> xor_key_vector(8);",
      "path": "src/node/mempool_persist.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Here and on line 185:\r\n```suggestion\r\n            std::vector<std::byte> xor_key_vector{8};\r\n```",
      "created_at": "2024-11-11T21:27:41Z",
      "updated_at": "2024-11-11T21:49:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837227061",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837227061"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837235546",
      "pull_request_review_id": 2428114068,
      "id": 1837235546,
      "node_id": "PRRC_kwDOABII585tgf1a",
      "diff_hunk": "@@ -13,36 +13,53 @@\n \n #include <algorithm>\n #include <assert.h>\n+#include <crypto/common.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n-inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n+inline void XorInt(Span<std::byte> write, const uint64_t key, const size_t size)\n {\n-    if (key.size() == 0) {\n-        return;\n+    assert(size <= write.size());\n+    uint64_t raw = 0;\n+    memcpy(&raw, write.data(), size);\n+    raw ^= key;\n+    memcpy(write.data(), &raw, size);\n+}\n+inline void Xor(Span<std::byte> write, const uint64_t key)\n+{\n+    assert(key);\n+    for (; write.size() >= 8; write = write.subspan(8)) {\n+        XorInt(write, key, 8);\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n-\n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    switch (write.size()) { // Specify the optimization categories\n+    case 0: break;\n+    case 1: XorInt(write, key, 1); break;\n+    case 2: XorInt(write, key, 2); break;\n+    case 4: XorInt(write, key, 4); break;\n+    default: XorInt(write, key, write.size());",
      "path": "src/streams.h",
      "position": null,
      "original_position": 52,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Care to elaborate why we don't just have the `default` statement?",
      "created_at": "2024-11-11T21:36:52Z",
      "updated_at": "2024-11-11T21:49:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837235546",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837235546"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 44,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837249531",
      "pull_request_review_id": 2428237656,
      "id": 1837249531,
      "node_id": "PRRC_kwDOABII585tgjP7",
      "diff_hunk": "@@ -225,29 +285,34 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Degenerate case\n     {\n         DataStream ds{in};\n-        ds.Xor({0x00, 0x00});\n+        ds.Xor(0);\n         BOOST_CHECK_EQUAL(\"\"s, ds.str());\n     }\n \n     in.push_back(std::byte{0x0f});\n     in.push_back(std::byte{0xf0});\n \n-    // Single character key\n     {\n+        const std::vector xor_pat{std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}};\n+        uint64_t xor_key;\n+        std::memcpy(&xor_key, xor_pat.data(), 8);\n+\n         DataStream ds{in};\n-        ds.Xor({0xff});\n+        ds.Xor(xor_key);\n         BOOST_CHECK_EQUAL(\"\\xf0\\x0f\"s, ds.str());\n     }\n \n-    // Multi character key\n-\n     in.clear();\n     in.push_back(std::byte{0xf0});\n     in.push_back(std::byte{0x0f});\n \n     {\n+        const std::vector xor_pat{std::byte{0xff}, std::byte{0x0f}, std::byte{0xff}, std::byte{0x0f}, std::byte{0xff}, std::byte{0x0f}, std::byte{0xff}, std::byte{0x0f}};\n+        uint64_t xor_key;\n+        std::memcpy(&xor_key, xor_pat.data(), 8);\n+\n         DataStream ds{in};\n-        ds.Xor({0xff, 0x0f});\n+        ds.Xor(xor_key);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 152,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": 1837161349,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It doesn't (at least not for all test cases), I'm deliberately testing generating vectors and converting them instead of generating 64 bit values since that's what happens in production code (this should address multiple of your comments)",
      "created_at": "2024-11-11T21:56:27Z",
      "updated_at": "2024-11-11T21:56:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837249531",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837249531"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 315,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837249755",
      "pull_request_review_id": 2428238002,
      "id": 1837249755,
      "node_id": "PRRC_kwDOABII585tgjTb",
      "diff_hunk": "@@ -14,16 +14,76 @@ using namespace std::string_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(xor_roundtrip_random_chunks)\n+{\n+    auto apply_random_xor_chunks{[](std::span<std::byte> write, const uint64_t key, FastRandomContext& rng) {\n+        for (size_t offset{0}; offset < write.size();) {\n+            const size_t chunk_size{1 + rng.randrange(write.size() - offset)};\n+            util::Xor(write.subspan(offset, chunk_size), key, offset);\n+            offset += chunk_size;\n+        }\n+    }};\n+\n+    FastRandomContext rng{/*fDeterministic=*/false};\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + rng.randrange(100U)};\n+        const std::vector original{rng.randbytes<std::byte>(write_size)};\n+        std::vector roundtrip{original};\n+\n+        std::vector key_bytes{rng.randbytes<std::byte>(8)};\n+        uint64_t key;\n+        std::memcpy(&key, key_bytes.data(), 8);\n+\n+        apply_random_xor_chunks(roundtrip, key, rng);\n+\n+        const bool all_zero = (key == 0) || (HexStr(key_bytes).find_first_not_of('0') >= write_size * 2);\n+        BOOST_CHECK_EQUAL(original != roundtrip, !all_zero);\n+\n+        apply_random_xor_chunks(roundtrip, key, rng);\n+        BOOST_CHECK(original == roundtrip);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(xor_bytes_reference)\n+{\n+    auto expected_xor{[](std::span<std::byte> write, const std::span<const std::byte> key, size_t key_offset) {\n+        for (auto& b : write) {\n+            b ^= key[key_offset++ % key.size()];\n+        }\n+    }};\n+\n+    FastRandomContext rng{/*fDeterministic=*/false};\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + rng.randrange(100U)};\n+        const size_t key_offset{rng.randrange(3 * 8U)}; // Should wrap around\n+\n+        std::vector key_bytes{rng.randbytes<std::byte>(8)};\n+        uint64_t key;\n+        std::memcpy(&key, key_bytes.data(), 8);\n+\n+        std::vector expected{rng.randbytes<std::byte>(write_size)};\n+        std::vector actual{expected};\n+\n+        expected_xor(expected, key_bytes, key_offset);\n+        util::Xor(actual, key, key_offset);\n+\n+        BOOST_CHECK_EQUAL_COLLECTIONS(expected.begin(), expected.end(), actual.begin(), actual.end());\n+    }\n+}\n+\n BOOST_AUTO_TEST_CASE(xor_file)\n {\n     fs::path xor_path{m_args.GetDataDirBase() / \"test_xor.bin\"};\n     auto raw_file{[&](const auto& mode) { return fsbridge::fopen(xor_path, mode); }};\n     const std::vector<uint8_t> test1{1, 2, 3};\n     const std::vector<uint8_t> test2{4, 5};\n-    const std::vector<std::byte> xor_pat{std::byte{0xff}, std::byte{0x00}};\n+    const std::vector xor_pat{std::byte{0xff}, std::byte{0x00}, std::byte{0xff}, std::byte{0x00}, std::byte{0xff}, std::byte{0x00}, std::byte{0xff}, std::byte{0x00}};\n+    uint64_t xor_key;\n+    std::memcpy(&xor_key, xor_pat.data(), 8);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 70,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": 1837163332,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Please see: https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837249531",
      "created_at": "2024-11-11T21:56:46Z",
      "updated_at": "2024-11-11T21:56:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837249755",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837249755"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 80,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837251362",
      "pull_request_review_id": 2428240455,
      "id": 1837251362,
      "node_id": "PRRC_kwDOABII585tgjsi",
      "diff_hunk": "@@ -13,36 +13,53 @@\n \n #include <algorithm>\n #include <assert.h>\n+#include <crypto/common.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n-inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n+inline void XorInt(Span<std::byte> write, const uint64_t key, const size_t size)\n {\n-    if (key.size() == 0) {\n-        return;\n+    assert(size <= write.size());\n+    uint64_t raw = 0;\n+    memcpy(&raw, write.data(), size);\n+    raw ^= key;\n+    memcpy(write.data(), &raw, size);\n+}\n+inline void Xor(Span<std::byte> write, const uint64_t key)\n+{\n+    assert(key);\n+    for (; write.size() >= 8; write = write.subspan(8)) {\n+        XorInt(write, key, 8);\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n-\n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    switch (write.size()) { // Specify the optimization categories\n+    case 0: break;\n+    case 1: XorInt(write, key, 1); break;\n+    case 2: XorInt(write, key, 2); break;\n+    case 4: XorInt(write, key, 4); break;\n+    default: XorInt(write, key, write.size());",
      "path": "src/streams.h",
      "position": null,
      "original_position": 52,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": 1837235546,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "\"Specify the optimization categories\" means that the compiler will be able to optimize the cases where one of the parameters (the size) is a constant separately from each other. The default statement would work, but would be very slow, since the 1, 2 and 4 byte versions won't be specialized.",
      "created_at": "2024-11-11T21:59:04Z",
      "updated_at": "2024-11-11T21:59:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837251362",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837251362"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 44,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837251698",
      "pull_request_review_id": 2428240918,
      "id": 1837251698,
      "node_id": "PRRC_kwDOABII585tgjxy",
      "diff_hunk": "@@ -225,29 +285,34 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Degenerate case\n     {\n         DataStream ds{in};\n-        ds.Xor({0x00, 0x00});\n+        ds.Xor(0);\n         BOOST_CHECK_EQUAL(\"\"s, ds.str());\n     }\n \n     in.push_back(std::byte{0x0f});\n     in.push_back(std::byte{0xf0});\n \n-    // Single character key\n     {\n+        const std::vector xor_pat{std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}};\n+        uint64_t xor_key;\n+        std::memcpy(&xor_key, xor_pat.data(), 8);\n+\n         DataStream ds{in};\n-        ds.Xor({0xff});\n+        ds.Xor(xor_key);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 135,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": 1837156020,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Please see: https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837249531",
      "created_at": "2024-11-11T21:59:29Z",
      "updated_at": "2024-11-11T21:59:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837251698",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837251698"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 301,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837269742",
      "pull_request_review_id": 2428267372,
      "id": 1837269742,
      "node_id": "PRRC_kwDOABII585tgoLu",
      "diff_hunk": "@@ -225,29 +285,34 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Degenerate case\n     {\n         DataStream ds{in};\n-        ds.Xor({0x00, 0x00});\n+        ds.Xor(0);\n         BOOST_CHECK_EQUAL(\"\"s, ds.str());\n     }\n \n     in.push_back(std::byte{0x0f});\n     in.push_back(std::byte{0xf0});\n \n-    // Single character key\n     {\n+        const std::vector xor_pat{std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}};\n+        uint64_t xor_key;\n+        std::memcpy(&xor_key, xor_pat.data(), 8);\n+\n         DataStream ds{in};\n-        ds.Xor({0xff});\n+        ds.Xor(xor_key);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 135,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": 1837156020,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "All ones (binary) is not endian-sensitive. IMO it's okay for the tests to look slightly different to reduce this kind of noise.",
      "created_at": "2024-11-11T22:26:59Z",
      "updated_at": "2024-11-11T22:26:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837269742",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837269742"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 301,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837270655",
      "pull_request_review_id": 2428270255,
      "id": 1837270655,
      "node_id": "PRRC_kwDOABII585tgoZ_",
      "diff_hunk": "@@ -225,29 +285,34 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Degenerate case\n     {\n         DataStream ds{in};\n-        ds.Xor({0x00, 0x00});\n+        ds.Xor(0);\n         BOOST_CHECK_EQUAL(\"\"s, ds.str());\n     }\n \n     in.push_back(std::byte{0x0f});\n     in.push_back(std::byte{0xf0});\n \n-    // Single character key\n     {\n+        const std::vector xor_pat{std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}};\n+        uint64_t xor_key;\n+        std::memcpy(&xor_key, xor_pat.data(), 8);\n+\n         DataStream ds{in};\n-        ds.Xor({0xff});\n+        ds.Xor(xor_key);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 135,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": 1837156020,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I want to test the setup we have in production, these tests were very useful in revealing endianness problems.",
      "created_at": "2024-11-11T22:28:27Z",
      "updated_at": "2024-11-11T22:28:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837270655",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837270655"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 301,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837275100",
      "pull_request_review_id": 2428276817,
      "id": 1837275100,
      "node_id": "PRRC_kwDOABII585tgpfc",
      "diff_hunk": "@@ -14,16 +14,76 @@ using namespace std::string_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(xor_roundtrip_random_chunks)\n+{\n+    auto apply_random_xor_chunks{[](std::span<std::byte> write, const uint64_t key, FastRandomContext& rng) {\n+        for (size_t offset{0}; offset < write.size();) {\n+            const size_t chunk_size{1 + rng.randrange(write.size() - offset)};\n+            util::Xor(write.subspan(offset, chunk_size), key, offset);\n+            offset += chunk_size;\n+        }\n+    }};\n+\n+    FastRandomContext rng{/*fDeterministic=*/false};\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + rng.randrange(100U)};\n+        const std::vector original{rng.randbytes<std::byte>(write_size)};\n+        std::vector roundtrip{original};\n+\n+        std::vector key_bytes{rng.randbytes<std::byte>(8)};\n+        uint64_t key;\n+        std::memcpy(&key, key_bytes.data(), 8);\n+\n+        apply_random_xor_chunks(roundtrip, key, rng);\n+\n+        const bool all_zero = (key == 0) || (HexStr(key_bytes).find_first_not_of('0') >= write_size * 2);\n+        BOOST_CHECK_EQUAL(original != roundtrip, !all_zero);\n+\n+        apply_random_xor_chunks(roundtrip, key, rng);\n+        BOOST_CHECK(original == roundtrip);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(xor_bytes_reference)\n+{\n+    auto expected_xor{[](std::span<std::byte> write, const std::span<const std::byte> key, size_t key_offset) {\n+        for (auto& b : write) {\n+            b ^= key[key_offset++ % key.size()];\n+        }\n+    }};\n+\n+    FastRandomContext rng{/*fDeterministic=*/false};\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + rng.randrange(100U)};\n+        const size_t key_offset{rng.randrange(3 * 8U)}; // Should wrap around\n+\n+        std::vector key_bytes{rng.randbytes<std::byte>(8)};\n+        uint64_t key;\n+        std::memcpy(&key, key_bytes.data(), 8);\n+\n+        std::vector expected{rng.randbytes<std::byte>(write_size)};\n+        std::vector actual{expected};\n+\n+        expected_xor(expected, key_bytes, key_offset);\n+        util::Xor(actual, key, key_offset);\n+\n+        BOOST_CHECK_EQUAL_COLLECTIONS(expected.begin(), expected.end(), actual.begin(), actual.end());\n+    }\n+}\n+\n BOOST_AUTO_TEST_CASE(xor_file)\n {\n     fs::path xor_path{m_args.GetDataDirBase() / \"test_xor.bin\"};\n     auto raw_file{[&](const auto& mode) { return fsbridge::fopen(xor_path, mode); }};\n     const std::vector<uint8_t> test1{1, 2, 3};\n     const std::vector<uint8_t> test2{4, 5};\n-    const std::vector<std::byte> xor_pat{std::byte{0xff}, std::byte{0x00}};\n+    const std::vector xor_pat{std::byte{0xff}, std::byte{0x00}, std::byte{0xff}, std::byte{0x00}, std::byte{0xff}, std::byte{0x00}, std::byte{0xff}, std::byte{0x00}};\n+    uint64_t xor_key;\n+    std::memcpy(&xor_key, xor_pat.data(), 8);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 70,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": 1837163332,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Feel like I'm imitating ChatGPT:\r\nAh, yes, I get now how the `memcpy()` interaction with endianness preserves the functioning of this specific test.",
      "created_at": "2024-11-11T22:35:30Z",
      "updated_at": "2024-11-11T22:35:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837275100",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837275100"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 80,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837279112",
      "pull_request_review_id": 2428282646,
      "id": 1837279112,
      "node_id": "PRRC_kwDOABII585tgqeI",
      "diff_hunk": "@@ -13,36 +13,53 @@\n \n #include <algorithm>\n #include <assert.h>\n+#include <crypto/common.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n-inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n+inline void XorInt(Span<std::byte> write, const uint64_t key, const size_t size)\n {\n-    if (key.size() == 0) {\n-        return;\n+    assert(size <= write.size());\n+    uint64_t raw = 0;\n+    memcpy(&raw, write.data(), size);\n+    raw ^= key;\n+    memcpy(write.data(), &raw, size);\n+}\n+inline void Xor(Span<std::byte> write, const uint64_t key)\n+{\n+    assert(key);\n+    for (; write.size() >= 8; write = write.subspan(8)) {\n+        XorInt(write, key, 8);\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n-\n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    switch (write.size()) { // Specify the optimization categories\n+    case 0: break;\n+    case 1: XorInt(write, key, 1); break;\n+    case 2: XorInt(write, key, 2); break;\n+    case 4: XorInt(write, key, 4); break;\n+    default: XorInt(write, key, write.size());",
      "path": "src/streams.h",
      "position": null,
      "original_position": 52,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": 1837235546,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "How about\r\n```suggestion\r\n    // Help optimizers along by sending constant parameter values into the inlined function,\r\n    // resulting in more efficient substitutions of memcpy() -> native pow-2 copy instructions.\r\n    switch (write.size()) {\r\n    case 0: break;\r\n    case 1: XorInt(write, key, 1); break;\r\n    case 2: XorInt(write, key, 2); break;\r\n    case 4: XorInt(write, key, 4); break;\r\n    default: XorInt(write, key, write.size());\r\n```",
      "created_at": "2024-11-11T22:42:01Z",
      "updated_at": "2024-11-11T22:42:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837279112",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837279112"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 44,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837281249",
      "pull_request_review_id": 2428285919,
      "id": 1837281249,
      "node_id": "PRRC_kwDOABII585tgq_h",
      "diff_hunk": "@@ -225,29 +285,34 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Degenerate case\n     {\n         DataStream ds{in};\n-        ds.Xor({0x00, 0x00});\n+        ds.Xor(0);\n         BOOST_CHECK_EQUAL(\"\"s, ds.str());\n     }\n \n     in.push_back(std::byte{0x0f});\n     in.push_back(std::byte{0xf0});\n \n-    // Single character key\n     {\n+        const std::vector xor_pat{std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}};\n+        uint64_t xor_key;\n+        std::memcpy(&xor_key, xor_pat.data(), 8);\n+\n         DataStream ds{in};\n-        ds.Xor({0xff});\n+        ds.Xor(xor_key);\n         BOOST_CHECK_EQUAL(\"\\xf0\\x0f\"s, ds.str());\n     }\n \n-    // Multi character key\n-\n     in.clear();\n     in.push_back(std::byte{0xf0});\n     in.push_back(std::byte{0x0f});\n \n     {\n+        const std::vector xor_pat{std::byte{0xff}, std::byte{0x0f}, std::byte{0xff}, std::byte{0x0f}, std::byte{0xff}, std::byte{0x0f}, std::byte{0xff}, std::byte{0x0f}};\n+        uint64_t xor_key;\n+        std::memcpy(&xor_key, xor_pat.data(), 8);\n+\n         DataStream ds{in};\n-        ds.Xor({0xff, 0x0f});\n+        ds.Xor(xor_key);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 152,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": 1837161349,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "[My bad](https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837275100).",
      "created_at": "2024-11-11T22:45:45Z",
      "updated_at": "2024-11-11T22:45:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837281249",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837281249"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 315,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837293159",
      "pull_request_review_id": 2428303835,
      "id": 1837293159,
      "node_id": "PRRC_kwDOABII585tgt5n",
      "diff_hunk": "@@ -13,36 +13,53 @@\n \n #include <algorithm>\n #include <assert.h>\n+#include <crypto/common.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n-inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n+inline void XorInt(Span<std::byte> write, const uint64_t key, const size_t size)\n {\n-    if (key.size() == 0) {\n-        return;\n+    assert(size <= write.size());\n+    uint64_t raw = 0;\n+    memcpy(&raw, write.data(), size);\n+    raw ^= key;\n+    memcpy(write.data(), &raw, size);\n+}\n+inline void Xor(Span<std::byte> write, const uint64_t key)\n+{\n+    assert(key);\n+    for (; write.size() >= 8; write = write.subspan(8)) {\n+        XorInt(write, key, 8);\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n-\n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    switch (write.size()) { // Specify the optimization categories\n+    case 0: break;\n+    case 1: XorInt(write, key, 1); break;\n+    case 2: XorInt(write, key, 2); break;\n+    case 4: XorInt(write, key, 4); break;\n+    default: XorInt(write, key, write.size());",
      "path": "src/streams.h",
      "position": null,
      "original_position": 52,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": 1837235546,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I ended up with only `// Help the compiler specialize 1, 2 and 4 byte cases`, since the rest was just speculation",
      "created_at": "2024-11-11T23:07:23Z",
      "updated_at": "2024-11-11T23:07:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837293159",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837293159"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 44,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837293203",
      "pull_request_review_id": 2428303904,
      "id": 1837293203,
      "node_id": "PRRC_kwDOABII585tgt6T",
      "diff_hunk": "@@ -58,15 +58,19 @@ bool LoadMempool(CTxMemPool& pool, const fs::path& load_path, Chainstate& active\n     try {\n         uint64_t version;\n         file >> version;\n-        std::vector<std::byte> xor_key;\n         if (version == MEMPOOL_DUMP_VERSION_NO_XOR_KEY) {\n-            // Leave XOR-key empty\n+            file.SetXor(0);\n         } else if (version == MEMPOOL_DUMP_VERSION) {\n-            file >> xor_key;\n+            std::vector<std::byte> xor_key_vector(8);",
      "path": "src/node/mempool_persist.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": 1837227061,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Now I had to rename the PR :D",
      "created_at": "2024-11-11T23:07:28Z",
      "updated_at": "2024-11-11T23:11:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837293203",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837293203"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837293258",
      "pull_request_review_id": 2428304003,
      "id": 1837293258,
      "node_id": "PRRC_kwDOABII585tgt7K",
      "diff_hunk": "@@ -254,24 +254,22 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n-\n-    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n-\n-    if (!key_exists && params.obfuscate && IsEmpty()) {\n-        // Initialize non-degenerate obfuscation if it won't upset\n-        // existing, non-obfuscated data.\n-        std::vector<unsigned char> new_key = CreateObfuscateKey();\n+    obfuscate_key = 0; // needed for unobfuscated Read",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": 1837215954,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-11-11T23:07:34Z",
      "updated_at": "2024-11-11T23:07:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1837293258",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1837293258"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 257,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867876958",
      "pull_request_review_id": 2475934654,
      "id": 1867876958,
      "node_id": "PRRC_kwDOABII585vVYpe",
      "diff_hunk": "@@ -13,36 +13,53 @@\n \n #include <algorithm>\n #include <assert.h>\n+#include <crypto/common.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n-inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n+inline void XorInt(Span<std::byte> write, const uint64_t key, const size_t size)\n {\n-    if (key.size() == 0) {\n-        return;\n+    assert(size <= write.size());\n+    uint64_t raw = 0;\n+    memcpy(&raw, write.data(), size);\n+    raw ^= key;\n+    memcpy(write.data(), &raw, size);\n+}\n+inline void Xor(Span<std::byte> write, const uint64_t key)\n+{\n+    assert(key);\n+    for (constexpr auto size = sizeof(uint64_t); write.size() >= size; write = write.subspan(size)) {\n+        XorInt(write, key, size);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 34,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Clearer name and source of `sizeof` expression.\r\n```suggestion\r\n    for (constexpr auto chunk_size = sizeof(key); write.size() >= chunk_size; write = write.subspan(chunk_size)) {\r\n        XorInt(write, key, chunk_size);\r\n```",
      "created_at": "2024-12-03T14:51:44Z",
      "updated_at": "2024-12-03T16:04:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1867876958",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867876958"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 41,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867892424",
      "pull_request_review_id": 2475934654,
      "id": 1867892424,
      "node_id": "PRRC_kwDOABII585vVcbI",
      "diff_hunk": "@@ -3,22 +3,105 @@\n // file COPYING or https://opensource.org/license/mit/.\n \n #include <bench/bench.h>\n+#include <bench/data/xor_histogram.raw.h>\n #include <random.h>\n #include <span.h>\n #include <streams.h>\n \n+#include <cmath>\n #include <cstddef>\n+#include <map>\n #include <vector>\n \n-static void Xor(benchmark::Bench& bench)\n+std::pair<int32_t, int64_t> read_deltas(const std::byte* p)\n {\n-    FastRandomContext frc{/*fDeterministic=*/true};\n-    auto data{frc.randbytes<std::byte>(1024)};\n-    auto key{frc.randbytes<std::byte>(31)};\n+    const uint64_t packed = ReadLE64(reinterpret_cast<const unsigned char*>(p));\n \n+    // Extract size (24 bits) and sign extend if negative\n+    int32_t size = packed & 0xFFFFFF;\n+    if (size & 0x800000) size |= 0xFF000000;\n+\n+    // Extract count (40 bits) and sign extend if negative\n+    int64_t count = packed >> 24;\n+    if (count & 0x8000000000) count |= 0xFFFFFF0000000000;\n+\n+    return {size, count};\n+}\n+\n+static void XorHistogram(benchmark::Bench& bench)\n+{\n+    // The histogram represents util::Xor method's write.size() histograms for the first 860k blocks\n+    // aggregated and encoded with https://gist.github.com/l0rinc/a44da845ad32ec89c30525507cdd28ee\n+    std::vector<std::pair<uint64_t, uint64_t>> histogram;\n+\n+    int64_t prev_size{0};\n+    int64_t prev_count{0};\n+    int64_t max_count{0};\n+\n+    // Read 8-byte chunks containing both deltas\n+    using namespace benchmark::data;\n+    for (size_t i{0}; i < xor_histogram.size(); i += 8) {\n+        const auto [size_delta, count_delta] = read_deltas(xor_histogram.data() + i);\n+        prev_size += size_delta;\n+        prev_count += count_delta;\n+\n+        histogram.emplace_back(prev_size, prev_count);\n+        max_count = std::max(max_count, prev_count);\n+    }\n+    assert(max_count == 47'584'838'861); // 1 byte vectors are most frequent\n+    constexpr auto scaling_factor{1'000'000U}; // Scale to this many occurrences of 1 byte vectors\n+\n+    FastRandomContext rng{/*fDeterministic=*/true};\n+    const uint64_t max_pattern_size{histogram.back().first};\n+    assert(max_pattern_size == 3'992'470); // Largest vector in histogram\n+    const auto pattern{rng.randbytes<std::byte>(max_pattern_size)}; // Reuse random pattern since randbytes is slow\n+\n+    std::vector<std::vector<std::byte>> test_data;\n+    test_data.reserve(2'036'522);\n+    uint64_t total_bytes{0};\n+\n+    for (const auto& [size, count] : histogram) {\n+        const size_t scaled_count{static_cast<size_t>(std::ceil(static_cast<double>(count) / max_count * scaling_factor))};\n+\n+        total_bytes += scaled_count * size;\n+        for (size_t j{0}; j < scaled_count; ++j) {\n+            test_data.emplace_back(pattern.begin(), pattern.begin() + size);\n+        }\n+    }\n+    assert(total_bytes == 8'129'394'848); // ~8 GB of data\n+    std::ranges::shuffle(test_data, rng); // Make it more realistic & less predictable\n+\n+    std::vector key_bytes{rng.randbytes<std::byte>(8)};\n+    uint64_t key;\n+    std::memcpy(&key, key_bytes.data(), 8);\n+\n+    size_t offset{0};\n+    bench.batch(total_bytes).unit(\"byte\").run([&] {\n+        for (auto& data : test_data) {\n+            util::Xor(data, key, offset++);\n+        }\n+        ankerl::nanobench::doNotOptimizeAway(test_data);\n+    });\n+}\n+\n+static void AutoFileXor(benchmark::Bench& bench)\n+{\n+    FastRandomContext rng{/*fDeterministic=*/true};\n+    const auto data{rng.randbytes<std::byte>(1'000'000)};\n+\n+    std::vector<std::byte> empty_key_bytes(8, std::byte{0}); // Test disabled xor\n+    uint64_t empty_key;\n+    std::memcpy(&empty_key, empty_key_bytes.data(), 8);\n+\n+    const fs::path test_path = fs::temp_directory_path() / \"xor_benchmark.dat\";\n+    AutoFile f{fsbridge::fopen(test_path, \"wb+\"), empty_key};\n     bench.batch(data.size()).unit(\"byte\").run([&] {\n-        util::Xor(data, key);\n+        f.Truncate(0);\n+        f << data;\n     });\n+    try { fs::remove(test_path); } catch (const fs::filesystem_error&) {\n+    }\n }\n \n-BENCHMARK(Xor, benchmark::PriorityLevel::HIGH);\n+BENCHMARK(XorHistogram, benchmark::PriorityLevel::LOW);\n+BENCHMARK(AutoFileXor, benchmark::PriorityLevel::LOW);",
      "path": "src/bench/xor.cpp",
      "position": null,
      "original_position": 111,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Missing newline at EOF in latest version.",
      "created_at": "2024-12-03T15:00:38Z",
      "updated_at": "2024-12-03T16:04:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1867892424",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867892424"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1075,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867942188",
      "pull_request_review_id": 2475934654,
      "id": 1867942188,
      "node_id": "PRRC_kwDOABII585vVoks",
      "diff_hunk": "@@ -3,22 +3,105 @@\n // file COPYING or https://opensource.org/license/mit/.\n \n #include <bench/bench.h>\n+#include <bench/data/xor_histogram.raw.h>\n #include <random.h>\n #include <span.h>\n #include <streams.h>\n \n+#include <cmath>\n #include <cstddef>\n+#include <map>\n #include <vector>\n \n-static void Xor(benchmark::Bench& bench)\n+std::pair<int32_t, int64_t> read_deltas(const std::byte* p)\n {\n-    FastRandomContext frc{/*fDeterministic=*/true};\n-    auto data{frc.randbytes<std::byte>(1024)};\n-    auto key{frc.randbytes<std::byte>(31)};\n+    const uint64_t packed = ReadLE64(reinterpret_cast<const unsigned char*>(p));\n \n+    // Extract size (24 bits) and sign extend if negative\n+    int32_t size = packed & 0xFFFFFF;\n+    if (size & 0x800000) size |= 0xFF000000;\n+\n+    // Extract count (40 bits) and sign extend if negative\n+    int64_t count = packed >> 24;\n+    if (count & 0x8000000000) count |= 0xFFFFFF0000000000;\n+\n+    return {size, count};\n+}\n+\n+static void XorHistogram(benchmark::Bench& bench)\n+{\n+    // The histogram represents util::Xor method's write.size() histograms for the first 860k blocks\n+    // aggregated and encoded with https://gist.github.com/l0rinc/a44da845ad32ec89c30525507cdd28ee",
      "path": "src/bench/xor.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nits:\r\nAlthough there is precedent for adding references to gists, I'm not sure we should encourage it. Would have preferred a file in this repo's *contrib/* directory.\r\n\r\nWould also have preferred that it did the full calculation of the .tgz file instead of having a hard-coded array, computing it by looking at linearalized blocks on disk.",
      "created_at": "2024-12-03T15:28:11Z",
      "updated_at": "2024-12-03T16:04:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1867942188",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867942188"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873754498",
      "pull_request_review_id": 2485490826,
      "id": 1873754498,
      "node_id": "PRRC_kwDOABII585vrzmC",
      "diff_hunk": "@@ -13,36 +13,53 @@\n \n #include <algorithm>\n #include <assert.h>\n+#include <crypto/common.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n-inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n+inline void XorInt(Span<std::byte> write, const uint64_t key, const size_t size)\n {\n-    if (key.size() == 0) {\n-        return;\n+    assert(size <= write.size());\n+    uint64_t raw = 0;\n+    memcpy(&raw, write.data(), size);\n+    raw ^= key;\n+    memcpy(write.data(), &raw, size);\n+}\n+inline void Xor(Span<std::byte> write, const uint64_t key)\n+{\n+    assert(key);\n+    for (constexpr auto size = sizeof(uint64_t); write.size() >= size; write = write.subspan(size)) {\n+        XorInt(write, key, size);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 34,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5",
      "in_reply_to_id": 1867876958,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not convinced `chunk_size` is better - but will use `sizeof(key)` on next push",
      "created_at": "2024-12-06T17:31:16Z",
      "updated_at": "2024-12-06T17:31:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1873754498",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873754498"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 41,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873755480",
      "pull_request_review_id": 2485492458,
      "id": 1873755480,
      "node_id": "PRRC_kwDOABII585vrz1Y",
      "diff_hunk": "@@ -3,22 +3,105 @@\n // file COPYING or https://opensource.org/license/mit/.\n \n #include <bench/bench.h>\n+#include <bench/data/xor_histogram.raw.h>\n #include <random.h>\n #include <span.h>\n #include <streams.h>\n \n+#include <cmath>\n #include <cstddef>\n+#include <map>\n #include <vector>\n \n-static void Xor(benchmark::Bench& bench)\n+std::pair<int32_t, int64_t> read_deltas(const std::byte* p)\n {\n-    FastRandomContext frc{/*fDeterministic=*/true};\n-    auto data{frc.randbytes<std::byte>(1024)};\n-    auto key{frc.randbytes<std::byte>(31)};\n+    const uint64_t packed = ReadLE64(reinterpret_cast<const unsigned char*>(p));\n \n+    // Extract size (24 bits) and sign extend if negative\n+    int32_t size = packed & 0xFFFFFF;\n+    if (size & 0x800000) size |= 0xFF000000;\n+\n+    // Extract count (40 bits) and sign extend if negative\n+    int64_t count = packed >> 24;\n+    if (count & 0x8000000000) count |= 0xFFFFFF0000000000;\n+\n+    return {size, count};\n+}\n+\n+static void XorHistogram(benchmark::Bench& bench)\n+{\n+    // The histogram represents util::Xor method's write.size() histograms for the first 860k blocks\n+    // aggregated and encoded with https://gist.github.com/l0rinc/a44da845ad32ec89c30525507cdd28ee\n+    std::vector<std::pair<uint64_t, uint64_t>> histogram;\n+\n+    int64_t prev_size{0};\n+    int64_t prev_count{0};\n+    int64_t max_count{0};\n+\n+    // Read 8-byte chunks containing both deltas\n+    using namespace benchmark::data;\n+    for (size_t i{0}; i < xor_histogram.size(); i += 8) {\n+        const auto [size_delta, count_delta] = read_deltas(xor_histogram.data() + i);\n+        prev_size += size_delta;\n+        prev_count += count_delta;\n+\n+        histogram.emplace_back(prev_size, prev_count);\n+        max_count = std::max(max_count, prev_count);\n+    }\n+    assert(max_count == 47'584'838'861); // 1 byte vectors are most frequent\n+    constexpr auto scaling_factor{1'000'000U}; // Scale to this many occurrences of 1 byte vectors\n+\n+    FastRandomContext rng{/*fDeterministic=*/true};\n+    const uint64_t max_pattern_size{histogram.back().first};\n+    assert(max_pattern_size == 3'992'470); // Largest vector in histogram\n+    const auto pattern{rng.randbytes<std::byte>(max_pattern_size)}; // Reuse random pattern since randbytes is slow\n+\n+    std::vector<std::vector<std::byte>> test_data;\n+    test_data.reserve(2'036'522);\n+    uint64_t total_bytes{0};\n+\n+    for (const auto& [size, count] : histogram) {\n+        const size_t scaled_count{static_cast<size_t>(std::ceil(static_cast<double>(count) / max_count * scaling_factor))};\n+\n+        total_bytes += scaled_count * size;\n+        for (size_t j{0}; j < scaled_count; ++j) {\n+            test_data.emplace_back(pattern.begin(), pattern.begin() + size);\n+        }\n+    }\n+    assert(total_bytes == 8'129'394'848); // ~8 GB of data\n+    std::ranges::shuffle(test_data, rng); // Make it more realistic & less predictable\n+\n+    std::vector key_bytes{rng.randbytes<std::byte>(8)};\n+    uint64_t key;\n+    std::memcpy(&key, key_bytes.data(), 8);\n+\n+    size_t offset{0};\n+    bench.batch(total_bytes).unit(\"byte\").run([&] {\n+        for (auto& data : test_data) {\n+            util::Xor(data, key, offset++);\n+        }\n+        ankerl::nanobench::doNotOptimizeAway(test_data);\n+    });\n+}\n+\n+static void AutoFileXor(benchmark::Bench& bench)\n+{\n+    FastRandomContext rng{/*fDeterministic=*/true};\n+    const auto data{rng.randbytes<std::byte>(1'000'000)};\n+\n+    std::vector<std::byte> empty_key_bytes(8, std::byte{0}); // Test disabled xor\n+    uint64_t empty_key;\n+    std::memcpy(&empty_key, empty_key_bytes.data(), 8);\n+\n+    const fs::path test_path = fs::temp_directory_path() / \"xor_benchmark.dat\";\n+    AutoFile f{fsbridge::fopen(test_path, \"wb+\"), empty_key};\n     bench.batch(data.size()).unit(\"byte\").run([&] {\n-        util::Xor(data, key);\n+        f.Truncate(0);\n+        f << data;\n     });\n+    try { fs::remove(test_path); } catch (const fs::filesystem_error&) {\n+    }\n }\n \n-BENCHMARK(Xor, benchmark::PriorityLevel::HIGH);\n+BENCHMARK(XorHistogram, benchmark::PriorityLevel::LOW);\n+BENCHMARK(AutoFileXor, benchmark::PriorityLevel::LOW);",
      "path": "src/bench/xor.cpp",
      "position": null,
      "original_position": 111,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5",
      "in_reply_to_id": 1867892424,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I still don't see the reason for keeping them, but I'll add it back on next push if it's important",
      "created_at": "2024-12-06T17:31:53Z",
      "updated_at": "2024-12-06T17:31:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1873755480",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873755480"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1075,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873755804",
      "pull_request_review_id": 2485492840,
      "id": 1873755804,
      "node_id": "PRRC_kwDOABII585vrz6c",
      "diff_hunk": "@@ -3,22 +3,105 @@\n // file COPYING or https://opensource.org/license/mit/.\n \n #include <bench/bench.h>\n+#include <bench/data/xor_histogram.raw.h>\n #include <random.h>\n #include <span.h>\n #include <streams.h>\n \n+#include <cmath>\n #include <cstddef>\n+#include <map>\n #include <vector>\n \n-static void Xor(benchmark::Bench& bench)\n+std::pair<int32_t, int64_t> read_deltas(const std::byte* p)\n {\n-    FastRandomContext frc{/*fDeterministic=*/true};\n-    auto data{frc.randbytes<std::byte>(1024)};\n-    auto key{frc.randbytes<std::byte>(31)};\n+    const uint64_t packed = ReadLE64(reinterpret_cast<const unsigned char*>(p));\n \n+    // Extract size (24 bits) and sign extend if negative\n+    int32_t size = packed & 0xFFFFFF;\n+    if (size & 0x800000) size |= 0xFF000000;\n+\n+    // Extract count (40 bits) and sign extend if negative\n+    int64_t count = packed >> 24;\n+    if (count & 0x8000000000) count |= 0xFFFFFF0000000000;\n+\n+    return {size, count};\n+}\n+\n+static void XorHistogram(benchmark::Bench& bench)\n+{\n+    // The histogram represents util::Xor method's write.size() histograms for the first 860k blocks\n+    // aggregated and encoded with https://gist.github.com/l0rinc/a44da845ad32ec89c30525507cdd28ee",
      "path": "src/bench/xor.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5",
      "in_reply_to_id": 1867942188,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed",
      "created_at": "2024-12-06T17:32:02Z",
      "updated_at": "2024-12-06T17:32:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1873755804",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873755804"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873760826",
      "pull_request_review_id": 2485501213,
      "id": 1873760826,
      "node_id": "PRRC_kwDOABII585vr1I6",
      "diff_hunk": "@@ -3,22 +3,105 @@\n // file COPYING or https://opensource.org/license/mit/.\n \n #include <bench/bench.h>\n+#include <bench/data/xor_histogram.raw.h>\n #include <random.h>\n #include <span.h>\n #include <streams.h>\n \n+#include <cmath>\n #include <cstddef>\n+#include <map>\n #include <vector>\n \n-static void Xor(benchmark::Bench& bench)\n+std::pair<int32_t, int64_t> read_deltas(const std::byte* p)\n {\n-    FastRandomContext frc{/*fDeterministic=*/true};\n-    auto data{frc.randbytes<std::byte>(1024)};\n-    auto key{frc.randbytes<std::byte>(31)};\n+    const uint64_t packed = ReadLE64(reinterpret_cast<const unsigned char*>(p));\n \n+    // Extract size (24 bits) and sign extend if negative\n+    int32_t size = packed & 0xFFFFFF;\n+    if (size & 0x800000) size |= 0xFF000000;\n+\n+    // Extract count (40 bits) and sign extend if negative\n+    int64_t count = packed >> 24;\n+    if (count & 0x8000000000) count |= 0xFFFFFF0000000000;\n+\n+    return {size, count};\n+}\n+\n+static void XorHistogram(benchmark::Bench& bench)\n+{\n+    // The histogram represents util::Xor method's write.size() histograms for the first 860k blocks\n+    // aggregated and encoded with https://gist.github.com/l0rinc/a44da845ad32ec89c30525507cdd28ee\n+    std::vector<std::pair<uint64_t, uint64_t>> histogram;\n+\n+    int64_t prev_size{0};\n+    int64_t prev_count{0};\n+    int64_t max_count{0};\n+\n+    // Read 8-byte chunks containing both deltas\n+    using namespace benchmark::data;\n+    for (size_t i{0}; i < xor_histogram.size(); i += 8) {\n+        const auto [size_delta, count_delta] = read_deltas(xor_histogram.data() + i);\n+        prev_size += size_delta;\n+        prev_count += count_delta;\n+\n+        histogram.emplace_back(prev_size, prev_count);\n+        max_count = std::max(max_count, prev_count);\n+    }\n+    assert(max_count == 47'584'838'861); // 1 byte vectors are most frequent\n+    constexpr auto scaling_factor{1'000'000U}; // Scale to this many occurrences of 1 byte vectors\n+\n+    FastRandomContext rng{/*fDeterministic=*/true};\n+    const uint64_t max_pattern_size{histogram.back().first};\n+    assert(max_pattern_size == 3'992'470); // Largest vector in histogram\n+    const auto pattern{rng.randbytes<std::byte>(max_pattern_size)}; // Reuse random pattern since randbytes is slow\n+\n+    std::vector<std::vector<std::byte>> test_data;\n+    test_data.reserve(2'036'522);\n+    uint64_t total_bytes{0};\n+\n+    for (const auto& [size, count] : histogram) {\n+        const size_t scaled_count{static_cast<size_t>(std::ceil(static_cast<double>(count) / max_count * scaling_factor))};\n+\n+        total_bytes += scaled_count * size;\n+        for (size_t j{0}; j < scaled_count; ++j) {\n+            test_data.emplace_back(pattern.begin(), pattern.begin() + size);\n+        }\n+    }\n+    assert(total_bytes == 8'129'394'848); // ~8 GB of data\n+    std::ranges::shuffle(test_data, rng); // Make it more realistic & less predictable\n+\n+    std::vector key_bytes{rng.randbytes<std::byte>(8)};\n+    uint64_t key;\n+    std::memcpy(&key, key_bytes.data(), 8);\n+\n+    size_t offset{0};\n+    bench.batch(total_bytes).unit(\"byte\").run([&] {\n+        for (auto& data : test_data) {\n+            util::Xor(data, key, offset++);\n+        }\n+        ankerl::nanobench::doNotOptimizeAway(test_data);\n+    });\n+}\n+\n+static void AutoFileXor(benchmark::Bench& bench)\n+{\n+    FastRandomContext rng{/*fDeterministic=*/true};\n+    const auto data{rng.randbytes<std::byte>(1'000'000)};\n+\n+    std::vector<std::byte> empty_key_bytes(8, std::byte{0}); // Test disabled xor\n+    uint64_t empty_key;\n+    std::memcpy(&empty_key, empty_key_bytes.data(), 8);\n+\n+    const fs::path test_path = fs::temp_directory_path() / \"xor_benchmark.dat\";\n+    AutoFile f{fsbridge::fopen(test_path, \"wb+\"), empty_key};\n     bench.batch(data.size()).unit(\"byte\").run([&] {\n-        util::Xor(data, key);\n+        f.Truncate(0);\n+        f << data;\n     });\n+    try { fs::remove(test_path); } catch (const fs::filesystem_error&) {\n+    }\n }\n \n-BENCHMARK(Xor, benchmark::PriorityLevel::HIGH);\n+BENCHMARK(XorHistogram, benchmark::PriorityLevel::LOW);\n+BENCHMARK(AutoFileXor, benchmark::PriorityLevel::LOW);",
      "path": "src/bench/xor.cpp",
      "position": null,
      "original_position": 111,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5",
      "in_reply_to_id": 1867892424,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-12-06T17:36:48Z",
      "updated_at": "2024-12-06T17:36:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1873760826",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873760826"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1075,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873761004",
      "pull_request_review_id": 2485501480,
      "id": 1873761004,
      "node_id": "PRRC_kwDOABII585vr1Ls",
      "diff_hunk": "@@ -13,36 +13,53 @@\n \n #include <algorithm>\n #include <assert.h>\n+#include <crypto/common.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n-inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n+inline void XorInt(Span<std::byte> write, const uint64_t key, const size_t size)\n {\n-    if (key.size() == 0) {\n-        return;\n+    assert(size <= write.size());\n+    uint64_t raw = 0;\n+    memcpy(&raw, write.data(), size);\n+    raw ^= key;\n+    memcpy(write.data(), &raw, size);\n+}\n+inline void Xor(Span<std::byte> write, const uint64_t key)\n+{\n+    assert(key);\n+    for (constexpr auto size = sizeof(uint64_t); write.size() >= size; write = write.subspan(size)) {\n+        XorInt(write, key, size);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 34,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "f2fd1f7c043a2782cb2bf3c9fe7e2f94c17728b5",
      "in_reply_to_id": 1867876958,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, kept the name",
      "created_at": "2024-12-06T17:36:57Z",
      "updated_at": "2024-12-06T17:36:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1873761004",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873761004"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 41,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1874417623",
      "pull_request_review_id": 2486500175,
      "id": 1874417623,
      "node_id": "PRRC_kwDOABII585vuVfX",
      "diff_hunk": "@@ -13,36 +13,56 @@\n \n #include <algorithm>\n #include <assert.h>\n+#include <crypto/common.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n+#include <util/check.h>\n \n namespace util {\n-inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n+inline void XorInt(Span<std::byte> write, const uint64_t key, const size_t size)\n {\n-    if (key.size() == 0) {\n-        return;\n+    Assume(key);\n+    assert(size <= write.size());\n+    uint64_t raw = 0;\n+    memcpy(&raw, write.data(), size);\n+    raw ^= key;\n+    memcpy(write.data(), &raw, size);\n+}\n+inline void Xor(Span<std::byte> write, const uint64_t key)\n+{\n+    Assume(key);\n+    for (constexpr auto size{sizeof(key)}; write.size() >= size; write = write.subspan(size)) {\n+        XorInt(write, key, size);\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n-\n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    switch (write.size()) { // Help the compiler specialize 1, 2 and 4 byte cases\n+    case 0:  break;\n+    case 1:  XorInt(write, key, 1); break;\n+    case 2:  XorInt(write, key, 2); break;\n+    case 4:  XorInt(write, key, 4); break;\n+    default: XorInt(write, key, write.size());\n     }\n }\n+\n+inline uint64_t RotateKey(const uint64_t key, const size_t key_offset)\n+{\n+    Assume(key);\n+    size_t key_rotation{8 * key_offset};\n+    if (key_rotation % 64 == 0) return key;",
      "path": "src/streams.h",
      "position": null,
      "original_position": 61,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`std::rotr` can handle it fine, so this can be removed. Also the codegen is better without this for some reason?",
      "created_at": "2024-12-07T13:37:30Z",
      "updated_at": "2024-12-10T13:20:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1874417623",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1874417623"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878083641",
      "pull_request_review_id": 2486500175,
      "id": 1878083641,
      "node_id": "PRRC_kwDOABII585v8Ug5",
      "diff_hunk": "@@ -1174,7 +1174,9 @@ static auto InitBlocksdirXorKey(const BlockManager::Options& opts)\n         };\n     }\n     LogInfo(\"Using obfuscation key for blocksdir *.dat files (%s): '%s'\\n\", fs::PathToString(opts.blocks_dir), HexStr(xor_key));\n-    return std::vector<std::byte>{xor_key.begin(), xor_key.end()};\n+    uint64_t key;\n+    std::memcpy(&key, xor_key.data(), sizeof key);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I wonder if it wouldn't be better to have a class take care of construction, so that the memcpy is limited to one place. Something like:\r\n\r\n\r\n```cpp\r\nclass XorKey{\r\n uint64_t m_data;\r\n XorKey(std::span<std::byte, 8> sp);\r\n}\r\n```\r\n\r\nIIUC the compilers should still be able to treat this as an integral in codegen.",
      "created_at": "2024-12-10T13:20:27Z",
      "updated_at": "2024-12-10T13:20:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1878083641",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878083641"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 1177,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1178,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878173952",
      "pull_request_review_id": 2492457346,
      "id": 1878173952,
      "node_id": "PRRC_kwDOABII585v8qkA",
      "diff_hunk": "@@ -13,36 +13,56 @@\n \n #include <algorithm>\n #include <assert.h>\n+#include <crypto/common.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n+#include <util/check.h>\n \n namespace util {\n-inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n+inline void XorInt(Span<std::byte> write, const uint64_t key, const size_t size)\n {\n-    if (key.size() == 0) {\n-        return;\n+    Assume(key);\n+    assert(size <= write.size());\n+    uint64_t raw = 0;\n+    memcpy(&raw, write.data(), size);\n+    raw ^= key;\n+    memcpy(write.data(), &raw, size);\n+}\n+inline void Xor(Span<std::byte> write, const uint64_t key)\n+{\n+    Assume(key);\n+    for (constexpr auto size{sizeof(key)}; write.size() >= size; write = write.subspan(size)) {\n+        XorInt(write, key, size);\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n-\n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    switch (write.size()) { // Help the compiler specialize 1, 2 and 4 byte cases\n+    case 0:  break;\n+    case 1:  XorInt(write, key, 1); break;\n+    case 2:  XorInt(write, key, 2); break;\n+    case 4:  XorInt(write, key, 4); break;\n+    default: XorInt(write, key, write.size());\n     }\n }\n+\n+inline uint64_t RotateKey(const uint64_t key, const size_t key_offset)\n+{\n+    Assume(key);\n+    size_t key_rotation{8 * key_offset};\n+    if (key_rotation % 64 == 0) return key;",
      "path": "src/streams.h",
      "position": null,
      "original_position": 61,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "in_reply_to_id": 1874417623,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "yes, it's an optimization to avoid doing any rotation when it would wrap around - it would work without this as well.\r\nIt's not a measurable speedup, though, so I can remove it if you insist.",
      "created_at": "2024-12-10T14:12:59Z",
      "updated_at": "2024-12-10T14:13:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1878173952",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878173952"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878192281",
      "pull_request_review_id": 2492490525,
      "id": 1878192281,
      "node_id": "PRRC_kwDOABII585v8vCZ",
      "diff_hunk": "@@ -1174,7 +1174,9 @@ static auto InitBlocksdirXorKey(const BlockManager::Options& opts)\n         };\n     }\n     LogInfo(\"Using obfuscation key for blocksdir *.dat files (%s): '%s'\\n\", fs::PathToString(opts.blocks_dir), HexStr(xor_key));\n-    return std::vector<std::byte>{xor_key.begin(), xor_key.end()};\n+    uint64_t key;\n+    std::memcpy(&key, xor_key.data(), sizeof key);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "in_reply_to_id": 1878083641,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You mean like a \r\n```C++\r\nunion {\r\n    uint64_t as_uint64; \r\n    std::array<std::byte, 8> as_bytes;\r\n};\r\n```\r\nor just a static method that initializes the `uint64_t` in a single place?\r\nOr should we encapsulate the `XorKey` concept behind a struct as well?",
      "created_at": "2024-12-10T14:23:10Z",
      "updated_at": "2024-12-10T14:23:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1878192281",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878192281"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 1177,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1178,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878263772",
      "pull_request_review_id": 2492614514,
      "id": 1878263772,
      "node_id": "PRRC_kwDOABII585v9Afc",
      "diff_hunk": "@@ -1174,7 +1174,9 @@ static auto InitBlocksdirXorKey(const BlockManager::Options& opts)\n         };\n     }\n     LogInfo(\"Using obfuscation key for blocksdir *.dat files (%s): '%s'\\n\", fs::PathToString(opts.blocks_dir), HexStr(xor_key));\n-    return std::vector<std::byte>{xor_key.begin(), xor_key.end()};\n+    uint64_t key;\n+    std::memcpy(&key, xor_key.data(), sizeof key);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "in_reply_to_id": 1878083641,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It is undefined behavior in C++ to read from a union member that wasn't the one most recently written to.\r\n\r\nUsing `memcpy` between a data type and something (equivalent to) a char/byte array is not UB.",
      "created_at": "2024-12-10T14:59:32Z",
      "updated_at": "2024-12-10T14:59:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1878263772",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878263772"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 1177,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1178,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878353972",
      "pull_request_review_id": 2492769021,
      "id": 1878353972,
      "node_id": "PRRC_kwDOABII585v9Wg0",
      "diff_hunk": "@@ -14,13 +14,73 @@ using namespace std::string_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(xor_roundtrip_random_chunks)",
      "path": "src/test/streams_tests.cpp",
      "position": 9,
      "original_position": 4,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "e1074081c9f1895a4f629dfee347ceae484a10d3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: Compare util::Xor with randomized inputs against simple impl\" (e1074081c9f1895a4f629dfee347ceae484a10d3)\r\n\r\nWould be good to add comment explaining test. Test seems to be to encoding and then decoding random byte vectors with random 8 byte xor keys using differently-sized and differently-aligned random chunks for encoding and decoding, and then making sure the byte vectors are unchanged after the round trip.",
      "created_at": "2024-12-10T15:49:51Z",
      "updated_at": "2024-12-11T01:17:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1878353972",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878353972"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878366327",
      "pull_request_review_id": 2492769021,
      "id": 1878366327,
      "node_id": "PRRC_kwDOABII585v9Zh3",
      "diff_hunk": "@@ -14,13 +14,73 @@ using namespace std::string_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(xor_roundtrip_random_chunks)\n+{\n+    auto apply_random_xor_chunks{[](std::span<std::byte> write, const std::span<std::byte> key, FastRandomContext& rng) {\n+        for (size_t offset{0}; offset < write.size();) {\n+            const size_t chunk_size{1 + rng.randrange(write.size() - offset)};\n+            util::Xor(write.subspan(offset, chunk_size), key, offset);\n+            offset += chunk_size;\n+        }\n+    }};\n+\n+    FastRandomContext rng{/*fDeterministic=*/false};\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + rng.randrange(100U)};\n+        const std::vector original{rng.randbytes<std::byte>(write_size)};\n+        std::vector roundtrip{original};\n+\n+        std::vector key_bytes{rng.randbytes<std::byte>(sizeof(uint64_t))};\n+        uint64_t key;\n+        std::memcpy(&key, key_bytes.data(), sizeof key);\n+\n+        apply_random_xor_chunks(roundtrip, key_bytes, rng);\n+\n+        const bool all_zero = (key == 0) || (HexStr(key_bytes).find_first_not_of('0') >= write_size * 2);\n+        BOOST_CHECK_EQUAL(original != roundtrip, !all_zero);\n+\n+        apply_random_xor_chunks(roundtrip, key_bytes, rng);\n+        BOOST_CHECK(original == roundtrip);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(xor_bytes_reference)",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "e1074081c9f1895a4f629dfee347ceae484a10d3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: Compare util::Xor with randomized inputs against simple impl\" (e1074081c9f1895a4f629dfee347ceae484a10d3)\r\n\r\nAgain adding a test comment could be helpful here. This test is making sure the `util::Xor` function returns same results as a naive byte-by-byte xor with an 8-byte key, using 100 random sized random byte vectors.\r\n\r\nWould suggest moving `xor_bytes_reference` test up before the `xor_roundtrip_random_chunks` since it seems like a simpler test that's an easier introduction to this code and could be followed by more complicated tests.",
      "created_at": "2024-12-10T15:56:33Z",
      "updated_at": "2024-12-11T01:17:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1878366327",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878366327"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878491664",
      "pull_request_review_id": 2492769021,
      "id": 1878491664,
      "node_id": "PRRC_kwDOABII585v94IQ",
      "diff_hunk": "@@ -7,18 +7,1069 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <cmath>\n #include <cstddef>\n+#include <map>\n #include <vector>\n \n-static void Xor(benchmark::Bench& bench)\n+static void XorHistogram(benchmark::Bench& bench)\n {\n-    FastRandomContext frc{/*fDeterministic=*/true};\n-    auto data{frc.randbytes<std::byte>(1024)};\n-    auto key{frc.randbytes<std::byte>(31)};\n+    // The top util::Xor method's [write.size(), frequency] calls for the IBD of the first 860k blocks",
      "path": "src/bench/xor.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "caafbd069246848a8bdfc2f42fd1d692a824de94",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2515108628\r\n\r\nI think instead of taking the top 1000 calls by count, it would make sense to take the top X calls by (size\\*count) as suggested https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2515108628, where X could be smaller than 1000, because (size\\*count) should more closely approximate the time spent on all writes of a given size than count ignoring size. This should make the test more realistic and also allow shrinking the histogram.",
      "created_at": "2024-12-10T17:07:33Z",
      "updated_at": "2024-12-11T01:17:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1878491664",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878491664"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878555098",
      "pull_request_review_id": 2493118988,
      "id": 1878555098,
      "node_id": "PRRC_kwDOABII585v-Hna",
      "diff_hunk": "@@ -1174,7 +1174,9 @@ static auto InitBlocksdirXorKey(const BlockManager::Options& opts)\n         };\n     }\n     LogInfo(\"Using obfuscation key for blocksdir *.dat files (%s): '%s'\\n\", fs::PathToString(opts.blocks_dir), HexStr(xor_key));\n-    return std::vector<std::byte>{xor_key.begin(), xor_key.end()};\n+    uint64_t key;\n+    std::memcpy(&key, xor_key.data(), sizeof key);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "in_reply_to_id": 1878083641,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> You mean like a\r\n> \r\n> ```c++\r\n> union {\r\n>     uint64_t as_uint64; \r\n>     std::array<std::byte, 8> as_bytes;\r\n> };\r\n> ```\r\n\r\n\r\nNo, I mean just a simple struct. Have you seen my suggestion?\r\n\r\nThe benefits would be that passing the integral value around would be type-safe. Also, the endian-considerations are fully contained in a simple struct, as opposed to the xor internal implementation detail and all modules that use xor. Finally, the memcpy would also be contained in a single place. Overall this could make the code smaller, or not, depending on how many users are there. However, in any case, encapsulating the assumptions around type-safety, and endianness would already be worth it in my view.",
      "created_at": "2024-12-10T17:49:17Z",
      "updated_at": "2024-12-10T17:49:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1878555098",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878555098"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 1177,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1178,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879037588",
      "pull_request_review_id": 2492769021,
      "id": 1879037588,
      "node_id": "PRRC_kwDOABII585v_9aU",
      "diff_hunk": "@@ -14,13 +14,73 @@ using namespace std::string_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(xor_roundtrip_random_chunks)\n+{\n+    auto apply_random_xor_chunks{[](std::span<std::byte> write, const std::span<std::byte> key, FastRandomContext& rng) {\n+        for (size_t offset{0}; offset < write.size();) {\n+            const size_t chunk_size{1 + rng.randrange(write.size() - offset)};\n+            util::Xor(write.subspan(offset, chunk_size), key, offset);\n+            offset += chunk_size;\n+        }\n+    }};\n+\n+    FastRandomContext rng{/*fDeterministic=*/false};\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + rng.randrange(100U)};\n+        const std::vector original{rng.randbytes<std::byte>(write_size)};\n+        std::vector roundtrip{original};\n+\n+        std::vector key_bytes{rng.randbytes<std::byte>(sizeof(uint64_t))};\n+        uint64_t key;\n+        std::memcpy(&key, key_bytes.data(), sizeof key);\n+\n+        apply_random_xor_chunks(roundtrip, key_bytes, rng);\n+\n+        const bool all_zero = (key == 0) || (HexStr(key_bytes).find_first_not_of('0') >= write_size * 2);\n+        BOOST_CHECK_EQUAL(original != roundtrip, !all_zero);\n+\n+        apply_random_xor_chunks(roundtrip, key_bytes, rng);\n+        BOOST_CHECK(original == roundtrip);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(xor_bytes_reference)\n+{\n+    auto expected_xor{[](std::span<std::byte> write, const std::span<const std::byte> key, size_t key_offset) {\n+        for (auto& b : write) {\n+            b ^= key[key_offset++ % key.size()];\n+        }\n+    }};\n+\n+    FastRandomContext rng{/*fDeterministic=*/false};\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + rng.randrange(100U)};\n+        const size_t key_offset{rng.randrange(3 * 8U)}; // Should wrap around\n+\n+        std::vector key_bytes{rng.randbytes<std::byte>(sizeof(uint64_t))};\n+        uint64_t key;",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 48,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "e1074081c9f1895a4f629dfee347ceae484a10d3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: Compare util::Xor with randomized inputs against simple impl\" (e1074081c9f1895a4f629dfee347ceae484a10d3)\r\n\r\nWould be good to use consistent variable names in these tests. The other tests are calling key vectors `xor_pat` and calling key values `xor_key`, while these tests are calling key vectors `key_bytes` and calling key values `key`. Would be clearer to use consistent names.\r\n\r\nAlso, after this PR each test is keeping two different variables and two different representations for each key. It would be good clean this up afterwards and just have one variable per key. Using a dedicated type for keys like the `XorKey` struct Marco suggested https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1878083641 would be even more ideal.",
      "created_at": "2024-12-10T23:00:33Z",
      "updated_at": "2024-12-11T01:17:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1879037588",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879037588"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 60,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 61,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879061751",
      "pull_request_review_id": 2492769021,
      "id": 1879061751,
      "node_id": "PRRC_kwDOABII585wADT3",
      "diff_hunk": "@@ -7,18 +7,1069 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <cmath>\n #include <cstddef>\n+#include <map>\n #include <vector>\n \n-static void Xor(benchmark::Bench& bench)\n+static void XorHistogram(benchmark::Bench& bench)",
      "path": "src/bench/xor.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "caafbd069246848a8bdfc2f42fd1d692a824de94",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"bench: Make Xor benchmark more representative\" (caafbd069246848a8bdfc2f42fd1d692a824de94)\r\n\r\nWould be a helpful to have a comment saying what this benchmark is measuring. Maybe: // Measure speed of util::Xor function applied to a set of byte vectors. The byte vectors are filled with random data and have sizes matching a distribution of data write sizes observed during IBD.",
      "created_at": "2024-12-10T23:23:02Z",
      "updated_at": "2024-12-11T01:17:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1879061751",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879061751"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879090034",
      "pull_request_review_id": 2492769021,
      "id": 1879090034,
      "node_id": "PRRC_kwDOABII585wAKNy",
      "diff_hunk": "@@ -7,18 +7,1069 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <cmath>\n #include <cstddef>\n+#include <map>\n #include <vector>\n \n-static void Xor(benchmark::Bench& bench)\n+static void XorHistogram(benchmark::Bench& bench)\n {\n-    FastRandomContext frc{/*fDeterministic=*/true};\n-    auto data{frc.randbytes<std::byte>(1024)};\n-    auto key{frc.randbytes<std::byte>(31)};\n+    // The top util::Xor method's [write.size(), frequency] calls for the IBD of the first 860k blocks\n+    std::map<uint32_t, uint64_t> histogram{\n+        std::pair{1, 47584838861},\n+        std::pair{2, 155252857},\n+        std::pair{4, 14983070199},\n+        std::pair{7, 51354839},\n+        std::pair{8, 5939128629},\n+        std::pair{9, 16698793},\n+        std::pair{10, 27406144},\n+        std::pair{11, 3986792},\n+        std::pair{12, 3282613},\n+        std::pair{13, 314839},\n+        std::pair{14, 536980},\n+        std::pair{15, 1610643},\n+        std::pair{16, 542064},\n+        std::pair{17, 407345},\n+        std::pair{18, 261587},\n+        std::pair{19, 230151},\n+        std::pair{20, 339705},\n+        std::pair{21, 2019807250},\n+        std::pair{22, 1616301504},\n+        std::pair{23, 2357347372},\n+        std::pair{25, 2705183236},\n+        std::pair{26, 35870265},\n+        std::pair{27, 87057844},\n+        std::pair{28, 78184146},\n+        std::pair{29, 30858682},\n+        std::pair{30, 19197417},\n+        std::pair{31, 1579479},\n+        std::pair{32, 5369404406},\n+        std::pair{33, 2025696499},\n+        std::pair{34, 682781008},\n+        std::pair{35, 269339238},\n+        std::pair{36, 223445},\n+        std::pair{37, 41467794},\n+        std::pair{38, 1475762},\n+        std::pair{39, 6662400},\n+        std::pair{40, 50600412},\n+        std::pair{41, 5297315},\n+        std::pair{42, 3013707},\n+        std::pair{43, 443306},\n+        std::pair{44, 567194},\n+        std::pair{46, 111535},\n+        std::pair{47, 155071},\n+        std::pair{48, 1038788},\n+        std::pair{49, 101166},\n+        std::pair{53, 414677},\n+        std::pair{54, 42084},\n+        std::pair{55, 150863},\n+        std::pair{56, 694439},\n+        std::pair{58, 38884},\n+        std::pair{59, 69597},\n+        std::pair{60, 55155},\n+        std::pair{62, 64150},\n+        std::pair{63, 44837},\n+        std::pair{64, 275253628},\n+        std::pair{65, 29197009},\n+        std::pair{66, 463395},\n+        std::pair{67, 1807929},\n+        std::pair{68, 264550},\n+        std::pair{69, 1031048},\n+        std::pair{70, 12772097},\n+        std::pair{71, 1763349816},\n+        std::pair{72, 827712501},\n+        std::pair{73, 3835426},\n+        std::pair{74, 869472},\n+        std::pair{75, 538515},\n+        std::pair{76, 268232},\n+        std::pair{77, 1407359},\n+        std::pair{78, 2899481},\n+        std::pair{79, 672145},\n+        std::pair{80, 2240943},\n+        std::pair{81, 1142405},\n+        std::pair{82, 482636},\n+        std::pair{83, 53818260},\n+        std::pair{84, 551826},\n+        std::pair{85, 274521},\n+        std::pair{86, 191212},\n+        std::pair{87, 148744},\n+        std::pair{88, 798839},\n+        std::pair{89, 131754},\n+        std::pair{90, 181244},\n+        std::pair{91, 632574},\n+        std::pair{92, 54802},\n+        std::pair{93, 40008},\n+        std::pair{94, 58679},\n+        std::pair{95, 3986219},\n+        std::pair{96, 69872},\n+        std::pair{97, 836318},\n+        std::pair{98, 124792},\n+        std::pair{99, 228622},\n+        std::pair{100, 550755},\n+        std::pair{101, 70480},\n+        std::pair{102, 29036},\n+        std::pair{103, 134544},\n+        std::pair{104, 138387},\n+        std::pair{105, 198656556},\n+        std::pair{106, 1193555153},\n+        std::pair{107, 1064027363},\n+        std::pair{108, 24662023},\n+        std::pair{109, 7506161},\n+        std::pair{110, 1500218},\n+        std::pair{111, 2768082},\n+        std::pair{112, 3056669},\n+        std::pair{113, 17829712},\n+        std::pair{114, 9826401},\n+        std::pair{115, 409391},\n+        std::pair{116, 388988},\n+        std::pair{117, 199627},\n+        std::pair{118, 156933},\n+        std::pair{119, 266888},\n+        std::pair{120, 2215468},\n+        std::pair{121, 3735124},\n+        std::pair{122, 3221526},\n+        std::pair{123, 12986923},\n+        std::pair{124, 3039553},\n+        std::pair{125, 2378723},\n+        std::pair{126, 4080425},\n+        std::pair{127, 3993712},\n+        std::pair{128, 13323530},\n+        std::pair{129, 1404783},\n+        std::pair{130, 7111451},\n+        std::pair{131, 6398914},\n+        std::pair{132, 1574554},\n+        std::pair{133, 753121},\n+        std::pair{134, 995846},\n+        std::pair{135, 2299257},\n+        std::pair{136, 2841133},\n+        std::pair{137, 1432824},\n+        std::pair{138, 112918349},\n+        std::pair{139, 155158814},\n+        std::pair{140, 37826769},\n+        std::pair{141, 138259},\n+        std::pair{142, 228782},\n+        std::pair{143, 155226},\n+        std::pair{144, 523085},\n+        std::pair{145, 1043545},\n+        std::pair{146, 936776},\n+        std::pair{147, 135958},\n+        std::pair{148, 53477},\n+        std::pair{149, 85944},\n+        std::pair{150, 139591},\n+        std::pair{151, 51432},\n+        std::pair{152, 101719},\n+        std::pair{153, 71302},\n+        std::pair{154, 26873},\n+        std::pair{155, 150196},\n+        std::pair{156, 44863},\n+        std::pair{157, 81708},\n+        std::pair{158, 16245},\n+        std::pair{159, 16539},\n+        std::pair{160, 30363},\n+        std::pair{161, 19167},\n+        std::pair{163, 59580},\n+        std::pair{164, 247459},\n+        std::pair{165, 248525},\n+        std::pair{166, 56551},\n+        std::pair{167, 72096},\n+        std::pair{169, 80727},\n+        std::pair{170, 83764},\n+        std::pair{172, 42020},\n+        std::pair{173, 482585},\n+        std::pair{174, 63200},\n+        std::pair{175, 23018},\n+        std::pair{176, 29041},\n+        std::pair{177, 27504},\n+        std::pair{178, 162526},\n+        std::pair{179, 16034},\n+        std::pair{180, 54624},\n+        std::pair{181, 54459},\n+        std::pair{184, 24405},\n+        std::pair{186, 23024},\n+        std::pair{187, 156538},\n+        std::pair{188, 31919},\n+        std::pair{189, 53778},\n+        std::pair{190, 95945},\n+        std::pair{191, 91777},\n+        std::pair{192, 756282},\n+        std::pair{193, 130194},\n+        std::pair{194, 14765},\n+        std::pair{195, 19600},\n+        std::pair{196, 35530},\n+        std::pair{197, 18439},\n+        std::pair{198, 645343},\n+        std::pair{199, 49680},\n+        std::pair{200, 110974},\n+        std::pair{201, 192016},\n+        std::pair{202, 77989},\n+        std::pair{203, 97997},\n+        std::pair{204, 122473},\n+        std::pair{205, 197169},\n+        std::pair{206, 666763},\n+        std::pair{207, 125972},\n+        std::pair{208, 44187},\n+        std::pair{209, 63692},\n+        std::pair{210, 180094},\n+        std::pair{211, 78496},\n+        std::pair{212, 76417},\n+        std::pair{213, 48926},\n+        std::pair{214, 114383},\n+        std::pair{215, 82850},\n+        std::pair{216, 262811},\n+        std::pair{217, 13625647},\n+        std::pair{218, 25918921},\n+        std::pair{219, 12992432},\n+        std::pair{220, 108554},\n+        std::pair{221, 31243},\n+        std::pair{222, 29187},\n+        std::pair{223, 10083},\n+        std::pair{224, 22281},\n+        std::pair{225, 13950},\n+        std::pair{226, 31886},\n+        std::pair{227, 18084},\n+        std::pair{228, 14657},\n+        std::pair{229, 79168},\n+        std::pair{230, 15963},\n+        std::pair{231, 21742},\n+        std::pair{232, 11410},\n+        std::pair{233, 12367},\n+        std::pair{234, 15037},\n+        std::pair{235, 16192},\n+        std::pair{236, 25139},\n+        std::pair{237, 16192},\n+        std::pair{238, 18500},\n+        std::pair{239, 18810},\n+        std::pair{240, 38316},\n+        std::pair{241, 149042},\n+        std::pair{242, 24003},\n+        std::pair{243, 19104},\n+        std::pair{244, 15440},\n+        std::pair{245, 9379},\n+        std::pair{247, 9889},\n+        std::pair{248, 12683},\n+        std::pair{249, 85955},\n+        std::pair{250, 48511},\n+        std::pair{251, 746625},\n+        std::pair{252, 48105681},\n+        std::pair{253, 83729340},\n+        std::pair{254, 38940977},\n+        std::pair{255, 151929},\n+        std::pair{256, 28326},\n+        std::pair{257, 47575},\n+        std::pair{258, 25005},\n+        std::pair{259, 24940},\n+        std::pair{260, 37845},\n+        std::pair{261, 23197},\n+        std::pair{262, 34312},\n+        std::pair{263, 21453},\n+        std::pair{264, 55215},\n+        std::pair{267, 11005},\n+        std::pair{268, 40335},\n+        std::pair{269, 31338},\n+        std::pair{275, 8153},\n+        std::pair{278, 12014},\n+        std::pair{280, 19109},\n+        std::pair{282, 17085},\n+        std::pair{283, 27004},\n+        std::pair{284, 346378},\n+        std::pair{285, 342589},\n+        std::pair{286, 352838},\n+        std::pair{287, 343470},\n+        std::pair{288, 242657},\n+        std::pair{289, 13735},\n+        std::pair{290, 23228},\n+        std::pair{291, 22868},\n+        std::pair{296, 10044},\n+        std::pair{297, 67198},\n+        std::pair{298, 21992},\n+        std::pair{299, 28253},\n+        std::pair{302, 23977},\n+        std::pair{306, 17984},\n+        std::pair{307, 11476},\n+        std::pair{308, 7421},\n+        std::pair{309, 8469},\n+        std::pair{314, 11850},\n+        std::pair{315, 16052},\n+        std::pair{316, 25342},\n+        std::pair{317, 28064},\n+        std::pair{318, 20989},\n+        std::pair{319, 23071},\n+        std::pair{320, 48109},\n+        std::pair{321, 48075},\n+        std::pair{322, 25238},\n+        std::pair{323, 10398},\n+        std::pair{324, 37202},\n+        std::pair{325, 51911},\n+        std::pair{326, 39506},\n+        std::pair{327, 11413},\n+        std::pair{333, 13024},\n+        std::pair{334, 19214},\n+        std::pair{335, 28438},\n+        std::pair{337, 8269},\n+        std::pair{342, 13666},\n+        std::pair{344, 6944},\n+        std::pair{345, 7907},\n+        std::pair{347, 16630},\n+        std::pair{348, 593985},\n+        std::pair{349, 1130760},\n+        std::pair{350, 578492},\n+        std::pair{351, 14457},\n+        std::pair{352, 7764},\n+        std::pair{353, 9544},\n+        std::pair{354, 263313},\n+        std::pair{355, 513902},\n+        std::pair{356, 260735},\n+        std::pair{358, 36433},\n+        std::pair{359, 75013},\n+        std::pair{360, 78454},\n+        std::pair{361, 35048},\n+        std::pair{362, 9077},\n+        std::pair{363, 7329},\n+        std::pair{365, 6250},\n+        std::pair{366, 38768},\n+        std::pair{368, 6462},\n+        std::pair{370, 6695},\n+        std::pair{371, 6738},\n+        std::pair{372, 6741},\n+        std::pair{373, 6718},\n+        std::pair{374, 22779},\n+        std::pair{377, 15183},\n+        std::pair{378, 8535},\n+        std::pair{381, 9493},\n+        std::pair{383, 8045},\n+        std::pair{386, 9833},\n+        std::pair{388, 6020},\n+        std::pair{389, 6431},\n+        std::pair{390, 6042},\n+        std::pair{391, 12471},\n+        std::pair{392, 288555},\n+        std::pair{393, 805000},\n+        std::pair{394, 798675},\n+        std::pair{395, 268494},\n+        std::pair{402, 5731},\n+        std::pair{403, 8028},\n+        std::pair{404, 8535},\n+        std::pair{406, 5719},\n+        std::pair{408, 13451},\n+        std::pair{410, 7235},\n+        std::pair{412, 5798},\n+        std::pair{415, 9227},\n+        std::pair{416, 7012},\n+        std::pair{417, 6305},\n+        std::pair{418, 16208},\n+        std::pair{419, 5801},\n+        std::pair{422, 6460},\n+        std::pair{423, 14468},\n+        std::pair{424, 31198},\n+        std::pair{425, 6148},\n+        std::pair{426, 22403},\n+        std::pair{427, 30448},\n+        std::pair{428, 32413},\n+        std::pair{429, 14787},\n+        std::pair{430, 7622},\n+        std::pair{431, 5669},\n+        std::pair{432, 19538},\n+        std::pair{437, 9812},\n+        std::pair{438, 5234},\n+        std::pair{439, 5277},\n+        std::pair{440, 24196},\n+        std::pair{441, 5915},\n+        std::pair{442, 5495},\n+        std::pair{443, 5093},\n+        std::pair{444, 5122},\n+        std::pair{445, 7284},\n+        std::pair{452, 6373},\n+        std::pair{454, 14438},\n+        std::pair{458, 5345},\n+        std::pair{459, 9986},\n+        std::pair{460, 25818},\n+        std::pair{461, 46493},\n+        std::pair{462, 42770},\n+        std::pair{463, 15676},\n+        std::pair{464, 7848},\n+        std::pair{465, 10933},\n+        std::pair{466, 25088},\n+        std::pair{467, 8687},\n+        std::pair{468, 5129},\n+        std::pair{476, 6189},\n+        std::pair{478, 4757},\n+        std::pair{479, 4846},\n+        std::pair{480, 11673},\n+        std::pair{481, 7191},\n+        std::pair{482, 7809},\n+        std::pair{483, 6500},\n+        std::pair{484, 29549},\n+        std::pair{485, 5616},\n+        std::pair{486, 81135},\n+        std::pair{487, 1836899},\n+        std::pair{488, 4909014},\n+        std::pair{489, 4483016},\n+        std::pair{490, 1380253},\n+        std::pair{491, 6215},\n+        std::pair{492, 5690},\n+        std::pair{493, 6055},\n+        std::pair{494, 6152},\n+        std::pair{495, 7111},\n+        std::pair{496, 9440},\n+        std::pair{497, 8856},\n+        std::pair{498, 16635},\n+        std::pair{499, 23648},\n+        std::pair{500, 34100},\n+        std::pair{501, 28017},\n+        std::pair{502, 11328},\n+        std::pair{503, 6404},\n+        std::pair{504, 6609},\n+        std::pair{505, 5843},\n+        std::pair{506, 8391},\n+        std::pair{507, 6715},\n+        std::pair{508, 7718},\n+        std::pair{509, 7176},\n+        std::pair{510, 7907},\n+        std::pair{511, 7416},\n+        std::pair{512, 7470},\n+        std::pair{513, 8519},\n+        std::pair{514, 7539},\n+        std::pair{515, 8152},\n+        std::pair{516, 18214},\n+        std::pair{517, 7683},\n+        std::pair{518, 12525},\n+        std::pair{519, 8026},\n+        std::pair{520, 13074},\n+        std::pair{521, 9877},\n+        std::pair{522, 9724},\n+        std::pair{523, 8772},\n+        std::pair{524, 8703},\n+        std::pair{525, 8371},\n+        std::pair{526, 8736},\n+        std::pair{527, 14001},\n+        std::pair{528, 22842},\n+        std::pair{529, 8367},\n+        std::pair{530, 9047},\n+        std::pair{531, 9902},\n+        std::pair{532, 9660},\n+        std::pair{533, 10733},\n+        std::pair{534, 12872},\n+        std::pair{535, 11037},\n+        std::pair{536, 10538},\n+        std::pair{537, 9862},\n+        std::pair{538, 7955},\n+        std::pair{539, 6772},\n+        std::pair{540, 6423},\n+        std::pair{541, 7553},\n+        std::pair{542, 8321},\n+        std::pair{543, 8603},\n+        std::pair{544, 17988},\n+        std::pair{545, 6705},\n+        std::pair{546, 5722},\n+        std::pair{547, 6070},\n+        std::pair{548, 6433},\n+        std::pair{549, 5086},\n+        std::pair{550, 4713},\n+        std::pair{551, 4981},\n+        std::pair{552, 4844},\n+        std::pair{553, 7459},\n+        std::pair{554, 20596},\n+        std::pair{555, 15940},\n+        std::pair{556, 9479},\n+        std::pair{557, 5917},\n+        std::pair{558, 6102},\n+        std::pair{559, 5010},\n+        std::pair{560, 5632},\n+        std::pair{561, 8368},\n+        std::pair{562, 6829},\n+        std::pair{563, 5066},\n+        std::pair{564, 22671},\n+        std::pair{565, 8881},\n+        std::pair{566, 16467},\n+        std::pair{567, 11634},\n+        std::pair{568, 7651},\n+        std::pair{569, 5176},\n+        std::pair{570, 5142},\n+        std::pair{571, 5646},\n+        std::pair{572, 5332},\n+        std::pair{573, 5034},\n+        std::pair{574, 5830},\n+        std::pair{575, 6663},\n+        std::pair{576, 8678},\n+        std::pair{577, 11161},\n+        std::pair{578, 7151},\n+        std::pair{579, 5771},\n+        std::pair{580, 5632},\n+        std::pair{581, 4045},\n+        std::pair{594, 9095},\n+        std::pair{595, 10823},\n+        std::pair{596, 4297},\n+        std::pair{598, 3772},\n+        std::pair{599, 5252},\n+        std::pair{600, 3817},\n+        std::pair{602, 6147},\n+        std::pair{603, 7215},\n+        std::pair{604, 5307},\n+        std::pair{605, 3906},\n+        std::pair{606, 4662},\n+        std::pair{607, 13020},\n+        std::pair{610, 12640},\n+        std::pair{613, 5599},\n+        std::pair{615, 11544},\n+        std::pair{617, 3953},\n+        std::pair{619, 4334},\n+        std::pair{625, 6609},\n+        std::pair{626, 47564},\n+        std::pair{628, 69105},\n+        std::pair{632, 6420},\n+        std::pair{636, 3551},\n+        std::pair{641, 8516},\n+        std::pair{644, 3553},\n+        std::pair{645, 3661},\n+        std::pair{646, 3985},\n+        std::pair{647, 4859},\n+        std::pair{649, 4228},\n+        std::pair{651, 4285},\n+        std::pair{653, 3644},\n+        std::pair{661, 4369},\n+        std::pair{662, 5890},\n+        std::pair{663, 6778},\n+        std::pair{664, 10663},\n+        std::pair{670, 4289},\n+        std::pair{671, 4389},\n+        std::pair{672, 4262},\n+        std::pair{673, 3708},\n+        std::pair{674, 5386},\n+        std::pair{683, 8732},\n+        std::pair{686, 3687},\n+        std::pair{687, 5581},\n+        std::pair{688, 5593},\n+        std::pair{689, 4053},\n+        std::pair{692, 3318},\n+        std::pair{693, 3518},\n+        std::pair{694, 4205},\n+        std::pair{695, 4752},\n+        std::pair{696, 5331},\n+        std::pair{697, 5591},\n+        std::pair{698, 5968},\n+        std::pair{699, 5988},\n+        std::pair{700, 5381},\n+        std::pair{701, 4386},\n+        std::pair{702, 4465},\n+        std::pair{703, 3793},\n+        std::pair{704, 4394},\n+        std::pair{705, 3636},\n+        std::pair{707, 3691},\n+        std::pair{709, 3288},\n+        std::pair{711, 22844},\n+        std::pair{714, 3148},\n+        std::pair{717, 3239},\n+        std::pair{718, 4170},\n+        std::pair{719, 4739},\n+        std::pair{720, 3560},\n+        std::pair{721, 4730},\n+        std::pair{722, 4524},\n+        std::pair{724, 3741},\n+        std::pair{725, 10294},\n+        std::pair{729, 4879},\n+        std::pair{730, 8636},\n+        std::pair{732, 3064},\n+        std::pair{734, 23400},\n+        std::pair{736, 3542},\n+        std::pair{737, 3331},\n+        std::pair{738, 3238},\n+        std::pair{740, 3083},\n+        std::pair{741, 3032},\n+        std::pair{742, 4008},\n+        std::pair{744, 3277},\n+        std::pair{745, 3162},\n+        std::pair{746, 3178},\n+        std::pair{748, 3393},\n+        std::pair{749, 3352},\n+        std::pair{750, 3341},\n+        std::pair{751, 3716},\n+        std::pair{752, 4696},\n+        std::pair{753, 3265},\n+        std::pair{754, 3621},\n+        std::pair{755, 3734},\n+        std::pair{756, 3824},\n+        std::pair{757, 3535},\n+        std::pair{758, 4118},\n+        std::pair{759, 5714},\n+        std::pair{760, 4043},\n+        std::pair{761, 4628},\n+        std::pair{762, 3808},\n+        std::pair{763, 3684},\n+        std::pair{764, 3989},\n+        std::pair{765, 3638},\n+        std::pair{766, 4037},\n+        std::pair{767, 4227},\n+        std::pair{768, 3933},\n+        std::pair{769, 4183},\n+        std::pair{770, 5118},\n+        std::pair{771, 4493},\n+        std::pair{772, 4038},\n+        std::pair{773, 3737},\n+        std::pair{774, 3924},\n+        std::pair{775, 3603},\n+        std::pair{776, 3906},\n+        std::pair{777, 3614},\n+        std::pair{778, 3869},\n+        std::pair{779, 23482},\n+        std::pair{780, 3934},\n+        std::pair{781, 3869},\n+        std::pair{782, 3967},\n+        std::pair{783, 3762},\n+        std::pair{784, 8108},\n+        std::pair{785, 3788},\n+        std::pair{786, 3710},\n+        std::pair{787, 3368},\n+        std::pair{788, 4644},\n+        std::pair{789, 3431},\n+        std::pair{790, 3790},\n+        std::pair{791, 3494},\n+        std::pair{792, 63947},\n+        std::pair{793, 6288},\n+        std::pair{794, 5799},\n+        std::pair{795, 3683},\n+        std::pair{796, 3744},\n+        std::pair{797, 4760},\n+        std::pair{798, 4114},\n+        std::pair{799, 3219},\n+        std::pair{800, 3367},\n+        std::pair{801, 3624},\n+        std::pair{802, 3330},\n+        std::pair{803, 3176},\n+        std::pair{804, 3245},\n+        std::pair{805, 2876},\n+        std::pair{806, 3244},\n+        std::pair{807, 3080},\n+        std::pair{808, 3182},\n+        std::pair{809, 4043},\n+        std::pair{810, 3215},\n+        std::pair{811, 2813},\n+        std::pair{812, 3084},\n+        std::pair{814, 3276},\n+        std::pair{816, 29033},\n+        std::pair{817, 3045},\n+        std::pair{818, 3155},\n+        std::pair{822, 2758},\n+        std::pair{823, 2750},\n+        std::pair{824, 3491},\n+        std::pair{825, 3105},\n+        std::pair{826, 3058},\n+        std::pair{827, 3252},\n+        std::pair{830, 2795},\n+        std::pair{834, 2980},\n+        std::pair{837, 2934},\n+        std::pair{847, 2915},\n+        std::pair{849, 2906},\n+        std::pair{851, 2832},\n+        std::pair{852, 4775},\n+        std::pair{853, 5139},\n+        std::pair{854, 2891},\n+        std::pair{857, 12174},\n+        std::pair{860, 3804},\n+        std::pair{861, 3610},\n+        std::pair{868, 9452},\n+        std::pair{869, 3193},\n+        std::pair{870, 4421},\n+        std::pair{871, 2741},\n+        std::pair{872, 2658},\n+        std::pair{880, 5565},\n+        std::pair{881, 4822},\n+        std::pair{887, 7897},\n+        std::pair{889, 2571},\n+        std::pair{893, 2772},\n+        std::pair{899, 2902},\n+        std::pair{900, 2563},\n+        std::pair{908, 3615},\n+        std::pair{909, 3335},\n+        std::pair{914, 2471},\n+        std::pair{915, 3855},\n+        std::pair{929, 2669},\n+        std::pair{931, 2727},\n+        std::pair{932, 3965},\n+        std::pair{933, 3861},\n+        std::pair{947, 2497},\n+        std::pair{948, 3413},\n+        std::pair{956, 7964},\n+        std::pair{957, 4164},\n+        std::pair{958, 15318},\n+        std::pair{970, 4944},\n+        std::pair{973, 5329},\n+        std::pair{991, 4237},\n+        std::pair{1009, 2996},\n+        std::pair{1013, 2317},\n+        std::pair{1018, 2403},\n+        std::pair{1021, 2264},\n+        std::pair{1027, 2432},\n+        std::pair{1028, 3170},\n+        std::pair{1029, 2282},\n+        std::pair{1062, 2136},\n+        std::pair{1063, 6545},\n+        std::pair{1065, 3930},\n+        std::pair{1071, 2748},\n+        std::pair{1073, 4453},\n+        std::pair{1080, 2280},\n+        std::pair{1081, 2917},\n+        std::pair{1086, 38785},\n+        std::pair{1088, 8662},\n+        std::pair{1094, 5021},\n+        std::pair{1095, 2231},\n+        std::pair{1097, 2063},\n+        std::pair{1099, 2050},\n+        std::pair{1111, 17965},\n+        std::pair{1112, 2278},\n+        std::pair{1117, 4879},\n+        std::pair{1118, 2130},\n+        std::pair{1122, 2016},\n+        std::pair{1129, 3118},\n+        std::pair{1131, 5241},\n+        std::pair{1132, 2044},\n+        std::pair{1133, 7119},\n+        std::pair{1134, 8941},\n+        std::pair{1137, 2184},\n+        std::pair{1138, 2896},\n+        std::pair{1140, 9739},\n+        std::pair{1145, 5445},\n+        std::pair{1157, 7559},\n+        std::pair{1158, 2301},\n+        std::pair{1183, 2098},\n+        std::pair{1191, 5395},\n+        std::pair{1192, 4617},\n+        std::pair{1195, 5422},\n+        std::pair{1203, 2285},\n+        std::pair{1206, 3310},\n+        std::pair{1211, 2079},\n+        std::pair{1212, 5269},\n+        std::pair{1214, 19082},\n+        std::pair{1215, 1876},\n+        std::pair{1229, 2511},\n+        std::pair{1230, 2021},\n+        std::pair{1232, 19221},\n+        std::pair{1233, 2398},\n+        std::pair{1235, 2863},\n+        std::pair{1237, 2601},\n+        std::pair{1238, 1942},\n+        std::pair{1242, 1855},\n+        std::pair{1252, 1814},\n+        std::pair{1259, 8921},\n+        std::pair{1260, 2166},\n+        std::pair{1270, 2508},\n+        std::pair{1276, 1983},\n+        std::pair{1292, 2651},\n+        std::pair{1303, 2344},\n+        std::pair{1304, 1984},\n+        std::pair{1305, 2837},\n+        std::pair{1316, 1784},\n+        std::pair{1343, 2431},\n+        std::pair{1347, 40393},\n+        std::pair{1349, 2713},\n+        std::pair{1363, 20803},\n+        std::pair{1381, 1940},\n+        std::pair{1382, 1738},\n+        std::pair{1383, 1792},\n+        std::pair{1398, 1924},\n+        std::pair{1399, 2076},\n+        std::pair{1402, 3204},\n+        std::pair{1403, 4854},\n+        std::pair{1404, 4220},\n+        std::pair{1411, 1789},\n+        std::pair{1430, 2616},\n+        std::pair{1439, 1556},\n+        std::pair{1448, 2535},\n+        std::pair{1450, 1738},\n+        std::pair{1463, 2819},\n+        std::pair{1464, 3412},\n+        std::pair{1469, 2184},\n+        std::pair{1487, 1571},\n+        std::pair{1501, 3647},\n+        std::pair{1504, 1622},\n+        std::pair{1505, 1540},\n+        std::pair{1535, 3421},\n+        std::pair{1564, 2720},\n+        std::pair{1580, 1699},\n+        std::pair{1581, 5728},\n+        std::pair{1583, 2487},\n+        std::pair{1600, 1513},\n+        std::pair{1601, 1637},\n+        std::pair{1602, 1908},\n+        std::pair{1603, 1840},\n+        std::pair{1604, 2253},\n+        std::pair{1605, 2171},\n+        std::pair{1606, 2151},\n+        std::pair{1607, 2077},\n+        std::pair{1608, 2025},\n+        std::pair{1609, 1924},\n+        std::pair{1610, 1893},\n+        std::pair{1611, 1591},\n+        std::pair{1612, 1521},\n+        std::pair{1613, 1622},\n+        std::pair{1618, 1998},\n+        std::pair{1693, 7588},\n+        std::pair{1748, 1796},\n+        std::pair{1752, 1707},\n+        std::pair{1757, 2606},\n+        std::pair{1758, 3088},\n+        std::pair{1759, 1301},\n+        std::pair{1765, 2397},\n+        std::pair{1779, 1451},\n+        std::pair{1789, 1658},\n+        std::pair{1799, 1425},\n+        std::pair{1800, 1988},\n+        std::pair{1810, 1337},\n+        std::pair{1819, 1582},\n+        std::pair{1820, 1482},\n+        std::pair{1821, 1339},\n+        std::pair{1822, 1574},\n+        std::pair{1823, 1531},\n+        std::pair{1824, 1598},\n+        std::pair{1825, 1574},\n+        std::pair{1826, 1718},\n+        std::pair{1827, 1605},\n+        std::pair{1828, 1567},\n+        std::pair{1829, 1782},\n+        std::pair{1830, 1622},\n+        std::pair{1831, 1934},\n+        std::pair{1832, 1483},\n+        std::pair{1833, 1323},\n+        std::pair{1834, 1416},\n+        std::pair{1839, 1248},\n+        std::pair{1880, 1503},\n+        std::pair{1897, 2634},\n+        std::pair{1912, 1334},\n+        std::pair{1935, 1200},\n+        std::pair{1938, 1477},\n+        std::pair{1939, 1251},\n+        std::pair{1941, 1367},\n+        std::pair{1943, 2004},\n+        std::pair{1945, 1678},\n+        std::pair{1947, 1489},\n+        std::pair{1949, 1469},\n+        std::pair{1951, 1542},\n+        std::pair{1953, 1825},\n+        std::pair{1955, 1262},\n+        std::pair{1957, 1362},\n+        std::pair{1959, 1384},\n+        std::pair{1961, 1281},\n+        std::pair{1965, 1244},\n+        std::pair{1967, 1208},\n+        std::pair{2007, 1280},\n+        std::pair{2015, 1865},\n+        std::pair{2028, 1828},\n+        std::pair{2029, 1492},\n+        std::pair{2138, 1528},\n+        std::pair{2164, 1259},\n+        std::pair{2238, 2749},\n+        std::pair{2239, 1165},\n+        std::pair{2243, 1008},\n+        std::pair{2293, 1132},\n+        std::pair{2329, 1039},\n+        std::pair{2330, 1025},\n+        std::pair{2331, 968},\n+        std::pair{2434, 3310},\n+        std::pair{2439, 1241},\n+        std::pair{2665, 860},\n+        std::pair{2755, 1050},\n+        std::pair{2768, 863},\n+        std::pair{2784, 1633},\n+        std::pair{2791, 1140},\n+        std::pair{2873, 1881},\n+        std::pair{2973, 874},\n+        std::pair{2974, 1492},\n+        std::pair{3023, 825},\n+        std::pair{3097, 765},\n+        std::pair{3098, 1285},\n+        std::pair{3102, 1676},\n+        std::pair{3107, 1090},\n+        std::pair{3108, 782},\n+        std::pair{3124, 1695},\n+        std::pair{3134, 878},\n+        std::pair{3161, 1927},\n+        std::pair{3179, 843},\n+        std::pair{3245, 1628},\n+        std::pair{3249, 1787},\n+        std::pair{3268, 1275},\n+        std::pair{3293, 690},\n+        std::pair{3305, 1073},\n+        std::pair{3306, 1256},\n+        std::pair{3360, 2382},\n+        std::pair{3375, 688},\n+        std::pair{3418, 957},\n+        std::pair{3489, 953},\n+        std::pair{3529, 960},\n+        std::pair{3567, 714},\n+        std::pair{3586, 687},\n+        std::pair{3589, 679},\n+        std::pair{3718, 1482},\n+        std::pair{3729, 635},\n+        std::pair{3776, 693},\n+        std::pair{3779, 611},\n+        std::pair{3784, 1072},\n+        std::pair{3854, 1671},\n+        std::pair{3865, 609},\n+        std::pair{3932, 646},\n+        std::pair{3983, 569},\n+        std::pair{3990, 7442},\n+        std::pair{4007, 1967},\n+        std::pair{4022, 856},\n+        std::pair{4033, 600},\n+        std::pair{4096, 3905157},\n+        std::pair{4197, 854},\n+        std::pair{4201, 839},\n+        std::pair{4206, 1126},\n+        std::pair{4252, 940},\n+        std::pair{4573, 613},\n+        std::pair{4578, 3187},\n+        std::pair{4880, 4217},\n+        std::pair{5229, 503},\n+        std::pair{5662, 418},\n+        std::pair{6103, 629},\n+        std::pair{6111, 1099},\n+        std::pair{7230, 516},\n+        std::pair{7950, 1340},\n+        std::pair{9163, 349},\n+        std::pair{9425, 1030},\n+        std::pair{10626, 2763},\n+        std::pair{11910, 1120},\n+        std::pair{12322, 461},\n+        std::pair{12463, 218},\n+        std::pair{12647, 505},\n+        std::pair{12764, 251},\n+        std::pair{14821, 161},\n+        std::pair{16220, 266},\n+        std::pair{19421, 207},\n+        std::pair{22287, 112},\n+        std::pair{23659, 205},\n+        std::pair{29024, 112},\n+        std::pair{32311, 161},\n+        std::pair{33016, 101},\n+        std::pair{35830, 65},\n+        std::pair{37830, 134},\n+        std::pair{42651, 255},\n+        std::pair{51830, 62},\n+        std::pair{51975, 54},\n+        std::pair{58763, 48},\n+        std::pair{58957, 65},\n+        std::pair{58959, 190},\n+        std::pair{58968, 45},\n+        std::pair{59029, 91},\n+        std::pair{65973, 109},\n+        std::pair{67108, 51},\n+        std::pair{73348, 46},\n+        std::pair{73350, 56},\n+        std::pair{88154, 147},\n+        std::pair{93902, 252},\n+        std::pair{95844, 26},\n+        std::pair{95901, 6384},\n+        std::pair{105054, 160},\n+        std::pair{116108, 143},\n+        std::pair{116132, 28},\n+        std::pair{120562, 19},\n+        std::pair{129509, 21},\n+        std::pair{131887, 112},\n+        std::pair{134762, 66},\n+        std::pair{142727, 79},\n+        std::pair{156030, 20},\n+        std::pair{157030, 59},\n+        std::pair{158830, 19},\n+        std::pair{160030, 47},\n+        std::pair{161030, 27},\n+        std::pair{170730, 15},\n+        std::pair{172242, 48},\n+        std::pair{185416, 15},\n+        std::pair{188014, 34},\n+        std::pair{201064, 18},\n+        std::pair{201956, 308},\n+        std::pair{212447, 71},\n+        std::pair{238133, 11},\n+        std::pair{248911, 14},\n+        std::pair{263128, 382},\n+        std::pair{263715, 109},\n+        std::pair{263717, 64},\n+        std::pair{263826, 12},\n+        std::pair{264526, 14},\n+        std::pair{281222, 15},\n+        std::pair{296649, 20},\n+        std::pair{304568, 9},\n+        std::pair{313930, 10},\n+        std::pair{330734, 11},\n+        std::pair{360543, 9},\n+        std::pair{366453, 7},\n+        std::pair{376701, 7},\n+        std::pair{390618, 7},\n+        std::pair{393960, 13},\n+        std::pair{397614, 9},\n+        std::pair{3208728, 1},\n+        std::pair{3399235, 1},\n+        std::pair{3455039, 1},\n+        std::pair{3901276, 1},\n+        std::pair{3938182, 1},\n+        std::pair{3940737, 1},\n+        std::pair{3960783, 1},\n+        std::pair{3969293, 1},\n+        std::pair{3979245, 1},\n+        std::pair{3983549, 1},\n+        std::pair{3988760, 1},\n+        std::pair{3990061, 1},\n+        std::pair{3990887, 1},\n+        std::pair{3990916, 1},\n+        std::pair{3990944, 1},\n+        std::pair{3991041, 1},\n+        std::pair{3991516, 1},\n+        std::pair{3992188, 1},\n+        std::pair{3992381, 1},\n+        std::pair{3992470, 1},\n+    };\n \n+    constexpr auto scaling_factor{1'000'000U}; // Scale to this many occurrences of 1 byte vectors\n+    const uint64_t max_count{histogram[1]};\n+    assert(max_count == 47'584'838'861); // 1 byte vectors are most frequent\n+\n+    std::vector<std::vector<std::byte>> test_data;\n+    test_data.reserve(1'941'283);\n+\n+    FastRandomContext rng{/*fDeterministic=*/true};\n+    uint64_t total_bytes{0};\n+    for (const auto& [size, count] : histogram) {\n+        const size_t scaled_count{static_cast<size_t>(std::ceil(static_cast<double>(count) / max_count * scaling_factor))};\n+\n+        total_bytes += scaled_count * size;\n+        auto rand_bytes = rng.randbytes<std::byte>(size);\n+        for (size_t j{0}; j < scaled_count; ++j) {\n+            test_data.emplace_back(rand_bytes);\n+        }\n+    }\n+    assert(total_bytes == 114'929'502);\n+\n+    std::ranges::shuffle(test_data, rng); // Make it more realistic & less predictable",
      "path": "src/bench/xor.cpp",
      "position": null,
      "original_position": 1039,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "caafbd069246848a8bdfc2f42fd1d692a824de94",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"bench: Make Xor benchmark more representative\" (caafbd069246848a8bdfc2f42fd1d692a824de94)\r\n\r\nIt seems awkward to have code with all these hardcoded values that will make it hard to update the histogram, and to end up with test data we can't directly control the size of. Would be cleaner to just choose how much data to generate, and generate it without hardcoding values from the histogram. Would suggest something more like the following, with an easily adjustable size that doesn't hardcode other values.\r\n\r\n```c++\r\nstd::vector<std::vector<std::byte>> test_data(1'000'000);\r\nFastRandomContext rng{/*fDeterministic=*/true};\r\n\r\nstd::vector<std::pair<uint64_t, size_t>> cumulative_count;\r\nuint64_t total_count = 0;\r\nfor (const auto& [size, count] : histogram) {\r\n    total_count += count;\r\n    cumulative_count.emplace_back(total_count, size);\r\n}\r\n\r\nauto sample_size = [&]() -> size_t {\r\n    uint64_t rand_val = rng.randrange<uint64_t>(0, total_count);\r\n    return std::lower_bound(\r\n        cumulative_count.begin(), cumulative_count.end(), rand_val,\r\n        [](const std::pair<uint64_t, size_t>& entry, uint64_t value) {\r\n            return entry.first < value;\r\n        })->second;\r\n};\r\n\r\nuint64_t total_bytes{0};\r\nfor (auto& entry : test_data) {\r\n    entry = rng.randbytes<std::byte>(sample_size());\r\n    total_bytes += entry.size();\r\n}\r\n\r\nstd::ranges::shuffle(test_data, rng);\r\n```\r\n\r\n(code was generated by chatgpt)",
      "created_at": "2024-12-10T23:48:52Z",
      "updated_at": "2024-12-11T01:17:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1879090034",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879090034"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 1021,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1041,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879104907",
      "pull_request_review_id": 2492769021,
      "id": 1879104907,
      "node_id": "PRRC_kwDOABII585wAN2L",
      "diff_hunk": "@@ -7,18 +7,1069 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <cmath>\n #include <cstddef>\n+#include <map>\n #include <vector>\n \n-static void Xor(benchmark::Bench& bench)\n+static void XorHistogram(benchmark::Bench& bench)\n {\n-    FastRandomContext frc{/*fDeterministic=*/true};\n-    auto data{frc.randbytes<std::byte>(1024)};\n-    auto key{frc.randbytes<std::byte>(31)};\n+    // The top util::Xor method's [write.size(), frequency] calls for the IBD of the first 860k blocks\n+    std::map<uint32_t, uint64_t> histogram{\n+        std::pair{1, 47584838861},\n+        std::pair{2, 155252857},\n+        std::pair{4, 14983070199},\n+        std::pair{7, 51354839},\n+        std::pair{8, 5939128629},\n+        std::pair{9, 16698793},\n+        std::pair{10, 27406144},\n+        std::pair{11, 3986792},\n+        std::pair{12, 3282613},\n+        std::pair{13, 314839},\n+        std::pair{14, 536980},\n+        std::pair{15, 1610643},\n+        std::pair{16, 542064},\n+        std::pair{17, 407345},\n+        std::pair{18, 261587},\n+        std::pair{19, 230151},\n+        std::pair{20, 339705},\n+        std::pair{21, 2019807250},\n+        std::pair{22, 1616301504},\n+        std::pair{23, 2357347372},\n+        std::pair{25, 2705183236},\n+        std::pair{26, 35870265},\n+        std::pair{27, 87057844},\n+        std::pair{28, 78184146},\n+        std::pair{29, 30858682},\n+        std::pair{30, 19197417},\n+        std::pair{31, 1579479},\n+        std::pair{32, 5369404406},\n+        std::pair{33, 2025696499},\n+        std::pair{34, 682781008},\n+        std::pair{35, 269339238},\n+        std::pair{36, 223445},\n+        std::pair{37, 41467794},\n+        std::pair{38, 1475762},\n+        std::pair{39, 6662400},\n+        std::pair{40, 50600412},\n+        std::pair{41, 5297315},\n+        std::pair{42, 3013707},\n+        std::pair{43, 443306},\n+        std::pair{44, 567194},\n+        std::pair{46, 111535},\n+        std::pair{47, 155071},\n+        std::pair{48, 1038788},\n+        std::pair{49, 101166},\n+        std::pair{53, 414677},\n+        std::pair{54, 42084},\n+        std::pair{55, 150863},\n+        std::pair{56, 694439},\n+        std::pair{58, 38884},\n+        std::pair{59, 69597},\n+        std::pair{60, 55155},\n+        std::pair{62, 64150},\n+        std::pair{63, 44837},\n+        std::pair{64, 275253628},\n+        std::pair{65, 29197009},\n+        std::pair{66, 463395},\n+        std::pair{67, 1807929},\n+        std::pair{68, 264550},\n+        std::pair{69, 1031048},\n+        std::pair{70, 12772097},\n+        std::pair{71, 1763349816},\n+        std::pair{72, 827712501},\n+        std::pair{73, 3835426},\n+        std::pair{74, 869472},\n+        std::pair{75, 538515},\n+        std::pair{76, 268232},\n+        std::pair{77, 1407359},\n+        std::pair{78, 2899481},\n+        std::pair{79, 672145},\n+        std::pair{80, 2240943},\n+        std::pair{81, 1142405},\n+        std::pair{82, 482636},\n+        std::pair{83, 53818260},\n+        std::pair{84, 551826},\n+        std::pair{85, 274521},\n+        std::pair{86, 191212},\n+        std::pair{87, 148744},\n+        std::pair{88, 798839},\n+        std::pair{89, 131754},\n+        std::pair{90, 181244},\n+        std::pair{91, 632574},\n+        std::pair{92, 54802},\n+        std::pair{93, 40008},\n+        std::pair{94, 58679},\n+        std::pair{95, 3986219},\n+        std::pair{96, 69872},\n+        std::pair{97, 836318},\n+        std::pair{98, 124792},\n+        std::pair{99, 228622},\n+        std::pair{100, 550755},\n+        std::pair{101, 70480},\n+        std::pair{102, 29036},\n+        std::pair{103, 134544},\n+        std::pair{104, 138387},\n+        std::pair{105, 198656556},\n+        std::pair{106, 1193555153},\n+        std::pair{107, 1064027363},\n+        std::pair{108, 24662023},\n+        std::pair{109, 7506161},\n+        std::pair{110, 1500218},\n+        std::pair{111, 2768082},\n+        std::pair{112, 3056669},\n+        std::pair{113, 17829712},\n+        std::pair{114, 9826401},\n+        std::pair{115, 409391},\n+        std::pair{116, 388988},\n+        std::pair{117, 199627},\n+        std::pair{118, 156933},\n+        std::pair{119, 266888},\n+        std::pair{120, 2215468},\n+        std::pair{121, 3735124},\n+        std::pair{122, 3221526},\n+        std::pair{123, 12986923},\n+        std::pair{124, 3039553},\n+        std::pair{125, 2378723},\n+        std::pair{126, 4080425},\n+        std::pair{127, 3993712},\n+        std::pair{128, 13323530},\n+        std::pair{129, 1404783},\n+        std::pair{130, 7111451},\n+        std::pair{131, 6398914},\n+        std::pair{132, 1574554},\n+        std::pair{133, 753121},\n+        std::pair{134, 995846},\n+        std::pair{135, 2299257},\n+        std::pair{136, 2841133},\n+        std::pair{137, 1432824},\n+        std::pair{138, 112918349},\n+        std::pair{139, 155158814},\n+        std::pair{140, 37826769},\n+        std::pair{141, 138259},\n+        std::pair{142, 228782},\n+        std::pair{143, 155226},\n+        std::pair{144, 523085},\n+        std::pair{145, 1043545},\n+        std::pair{146, 936776},\n+        std::pair{147, 135958},\n+        std::pair{148, 53477},\n+        std::pair{149, 85944},\n+        std::pair{150, 139591},\n+        std::pair{151, 51432},\n+        std::pair{152, 101719},\n+        std::pair{153, 71302},\n+        std::pair{154, 26873},\n+        std::pair{155, 150196},\n+        std::pair{156, 44863},\n+        std::pair{157, 81708},\n+        std::pair{158, 16245},\n+        std::pair{159, 16539},\n+        std::pair{160, 30363},\n+        std::pair{161, 19167},\n+        std::pair{163, 59580},\n+        std::pair{164, 247459},\n+        std::pair{165, 248525},\n+        std::pair{166, 56551},\n+        std::pair{167, 72096},\n+        std::pair{169, 80727},\n+        std::pair{170, 83764},\n+        std::pair{172, 42020},\n+        std::pair{173, 482585},\n+        std::pair{174, 63200},\n+        std::pair{175, 23018},\n+        std::pair{176, 29041},\n+        std::pair{177, 27504},\n+        std::pair{178, 162526},\n+        std::pair{179, 16034},\n+        std::pair{180, 54624},\n+        std::pair{181, 54459},\n+        std::pair{184, 24405},\n+        std::pair{186, 23024},\n+        std::pair{187, 156538},\n+        std::pair{188, 31919},\n+        std::pair{189, 53778},\n+        std::pair{190, 95945},\n+        std::pair{191, 91777},\n+        std::pair{192, 756282},\n+        std::pair{193, 130194},\n+        std::pair{194, 14765},\n+        std::pair{195, 19600},\n+        std::pair{196, 35530},\n+        std::pair{197, 18439},\n+        std::pair{198, 645343},\n+        std::pair{199, 49680},\n+        std::pair{200, 110974},\n+        std::pair{201, 192016},\n+        std::pair{202, 77989},\n+        std::pair{203, 97997},\n+        std::pair{204, 122473},\n+        std::pair{205, 197169},\n+        std::pair{206, 666763},\n+        std::pair{207, 125972},\n+        std::pair{208, 44187},\n+        std::pair{209, 63692},\n+        std::pair{210, 180094},\n+        std::pair{211, 78496},\n+        std::pair{212, 76417},\n+        std::pair{213, 48926},\n+        std::pair{214, 114383},\n+        std::pair{215, 82850},\n+        std::pair{216, 262811},\n+        std::pair{217, 13625647},\n+        std::pair{218, 25918921},\n+        std::pair{219, 12992432},\n+        std::pair{220, 108554},\n+        std::pair{221, 31243},\n+        std::pair{222, 29187},\n+        std::pair{223, 10083},\n+        std::pair{224, 22281},\n+        std::pair{225, 13950},\n+        std::pair{226, 31886},\n+        std::pair{227, 18084},\n+        std::pair{228, 14657},\n+        std::pair{229, 79168},\n+        std::pair{230, 15963},\n+        std::pair{231, 21742},\n+        std::pair{232, 11410},\n+        std::pair{233, 12367},\n+        std::pair{234, 15037},\n+        std::pair{235, 16192},\n+        std::pair{236, 25139},\n+        std::pair{237, 16192},\n+        std::pair{238, 18500},\n+        std::pair{239, 18810},\n+        std::pair{240, 38316},\n+        std::pair{241, 149042},\n+        std::pair{242, 24003},\n+        std::pair{243, 19104},\n+        std::pair{244, 15440},\n+        std::pair{245, 9379},\n+        std::pair{247, 9889},\n+        std::pair{248, 12683},\n+        std::pair{249, 85955},\n+        std::pair{250, 48511},\n+        std::pair{251, 746625},\n+        std::pair{252, 48105681},\n+        std::pair{253, 83729340},\n+        std::pair{254, 38940977},\n+        std::pair{255, 151929},\n+        std::pair{256, 28326},\n+        std::pair{257, 47575},\n+        std::pair{258, 25005},\n+        std::pair{259, 24940},\n+        std::pair{260, 37845},\n+        std::pair{261, 23197},\n+        std::pair{262, 34312},\n+        std::pair{263, 21453},\n+        std::pair{264, 55215},\n+        std::pair{267, 11005},\n+        std::pair{268, 40335},\n+        std::pair{269, 31338},\n+        std::pair{275, 8153},\n+        std::pair{278, 12014},\n+        std::pair{280, 19109},\n+        std::pair{282, 17085},\n+        std::pair{283, 27004},\n+        std::pair{284, 346378},\n+        std::pair{285, 342589},\n+        std::pair{286, 352838},\n+        std::pair{287, 343470},\n+        std::pair{288, 242657},\n+        std::pair{289, 13735},\n+        std::pair{290, 23228},\n+        std::pair{291, 22868},\n+        std::pair{296, 10044},\n+        std::pair{297, 67198},\n+        std::pair{298, 21992},\n+        std::pair{299, 28253},\n+        std::pair{302, 23977},\n+        std::pair{306, 17984},\n+        std::pair{307, 11476},\n+        std::pair{308, 7421},\n+        std::pair{309, 8469},\n+        std::pair{314, 11850},\n+        std::pair{315, 16052},\n+        std::pair{316, 25342},\n+        std::pair{317, 28064},\n+        std::pair{318, 20989},\n+        std::pair{319, 23071},\n+        std::pair{320, 48109},\n+        std::pair{321, 48075},\n+        std::pair{322, 25238},\n+        std::pair{323, 10398},\n+        std::pair{324, 37202},\n+        std::pair{325, 51911},\n+        std::pair{326, 39506},\n+        std::pair{327, 11413},\n+        std::pair{333, 13024},\n+        std::pair{334, 19214},\n+        std::pair{335, 28438},\n+        std::pair{337, 8269},\n+        std::pair{342, 13666},\n+        std::pair{344, 6944},\n+        std::pair{345, 7907},\n+        std::pair{347, 16630},\n+        std::pair{348, 593985},\n+        std::pair{349, 1130760},\n+        std::pair{350, 578492},\n+        std::pair{351, 14457},\n+        std::pair{352, 7764},\n+        std::pair{353, 9544},\n+        std::pair{354, 263313},\n+        std::pair{355, 513902},\n+        std::pair{356, 260735},\n+        std::pair{358, 36433},\n+        std::pair{359, 75013},\n+        std::pair{360, 78454},\n+        std::pair{361, 35048},\n+        std::pair{362, 9077},\n+        std::pair{363, 7329},\n+        std::pair{365, 6250},\n+        std::pair{366, 38768},\n+        std::pair{368, 6462},\n+        std::pair{370, 6695},\n+        std::pair{371, 6738},\n+        std::pair{372, 6741},\n+        std::pair{373, 6718},\n+        std::pair{374, 22779},\n+        std::pair{377, 15183},\n+        std::pair{378, 8535},\n+        std::pair{381, 9493},\n+        std::pair{383, 8045},\n+        std::pair{386, 9833},\n+        std::pair{388, 6020},\n+        std::pair{389, 6431},\n+        std::pair{390, 6042},\n+        std::pair{391, 12471},\n+        std::pair{392, 288555},\n+        std::pair{393, 805000},\n+        std::pair{394, 798675},\n+        std::pair{395, 268494},\n+        std::pair{402, 5731},\n+        std::pair{403, 8028},\n+        std::pair{404, 8535},\n+        std::pair{406, 5719},\n+        std::pair{408, 13451},\n+        std::pair{410, 7235},\n+        std::pair{412, 5798},\n+        std::pair{415, 9227},\n+        std::pair{416, 7012},\n+        std::pair{417, 6305},\n+        std::pair{418, 16208},\n+        std::pair{419, 5801},\n+        std::pair{422, 6460},\n+        std::pair{423, 14468},\n+        std::pair{424, 31198},\n+        std::pair{425, 6148},\n+        std::pair{426, 22403},\n+        std::pair{427, 30448},\n+        std::pair{428, 32413},\n+        std::pair{429, 14787},\n+        std::pair{430, 7622},\n+        std::pair{431, 5669},\n+        std::pair{432, 19538},\n+        std::pair{437, 9812},\n+        std::pair{438, 5234},\n+        std::pair{439, 5277},\n+        std::pair{440, 24196},\n+        std::pair{441, 5915},\n+        std::pair{442, 5495},\n+        std::pair{443, 5093},\n+        std::pair{444, 5122},\n+        std::pair{445, 7284},\n+        std::pair{452, 6373},\n+        std::pair{454, 14438},\n+        std::pair{458, 5345},\n+        std::pair{459, 9986},\n+        std::pair{460, 25818},\n+        std::pair{461, 46493},\n+        std::pair{462, 42770},\n+        std::pair{463, 15676},\n+        std::pair{464, 7848},\n+        std::pair{465, 10933},\n+        std::pair{466, 25088},\n+        std::pair{467, 8687},\n+        std::pair{468, 5129},\n+        std::pair{476, 6189},\n+        std::pair{478, 4757},\n+        std::pair{479, 4846},\n+        std::pair{480, 11673},\n+        std::pair{481, 7191},\n+        std::pair{482, 7809},\n+        std::pair{483, 6500},\n+        std::pair{484, 29549},\n+        std::pair{485, 5616},\n+        std::pair{486, 81135},\n+        std::pair{487, 1836899},\n+        std::pair{488, 4909014},\n+        std::pair{489, 4483016},\n+        std::pair{490, 1380253},\n+        std::pair{491, 6215},\n+        std::pair{492, 5690},\n+        std::pair{493, 6055},\n+        std::pair{494, 6152},\n+        std::pair{495, 7111},\n+        std::pair{496, 9440},\n+        std::pair{497, 8856},\n+        std::pair{498, 16635},\n+        std::pair{499, 23648},\n+        std::pair{500, 34100},\n+        std::pair{501, 28017},\n+        std::pair{502, 11328},\n+        std::pair{503, 6404},\n+        std::pair{504, 6609},\n+        std::pair{505, 5843},\n+        std::pair{506, 8391},\n+        std::pair{507, 6715},\n+        std::pair{508, 7718},\n+        std::pair{509, 7176},\n+        std::pair{510, 7907},\n+        std::pair{511, 7416},\n+        std::pair{512, 7470},\n+        std::pair{513, 8519},\n+        std::pair{514, 7539},\n+        std::pair{515, 8152},\n+        std::pair{516, 18214},\n+        std::pair{517, 7683},\n+        std::pair{518, 12525},\n+        std::pair{519, 8026},\n+        std::pair{520, 13074},\n+        std::pair{521, 9877},\n+        std::pair{522, 9724},\n+        std::pair{523, 8772},\n+        std::pair{524, 8703},\n+        std::pair{525, 8371},\n+        std::pair{526, 8736},\n+        std::pair{527, 14001},\n+        std::pair{528, 22842},\n+        std::pair{529, 8367},\n+        std::pair{530, 9047},\n+        std::pair{531, 9902},\n+        std::pair{532, 9660},\n+        std::pair{533, 10733},\n+        std::pair{534, 12872},\n+        std::pair{535, 11037},\n+        std::pair{536, 10538},\n+        std::pair{537, 9862},\n+        std::pair{538, 7955},\n+        std::pair{539, 6772},\n+        std::pair{540, 6423},\n+        std::pair{541, 7553},\n+        std::pair{542, 8321},\n+        std::pair{543, 8603},\n+        std::pair{544, 17988},\n+        std::pair{545, 6705},\n+        std::pair{546, 5722},\n+        std::pair{547, 6070},\n+        std::pair{548, 6433},\n+        std::pair{549, 5086},\n+        std::pair{550, 4713},\n+        std::pair{551, 4981},\n+        std::pair{552, 4844},\n+        std::pair{553, 7459},\n+        std::pair{554, 20596},\n+        std::pair{555, 15940},\n+        std::pair{556, 9479},\n+        std::pair{557, 5917},\n+        std::pair{558, 6102},\n+        std::pair{559, 5010},\n+        std::pair{560, 5632},\n+        std::pair{561, 8368},\n+        std::pair{562, 6829},\n+        std::pair{563, 5066},\n+        std::pair{564, 22671},\n+        std::pair{565, 8881},\n+        std::pair{566, 16467},\n+        std::pair{567, 11634},\n+        std::pair{568, 7651},\n+        std::pair{569, 5176},\n+        std::pair{570, 5142},\n+        std::pair{571, 5646},\n+        std::pair{572, 5332},\n+        std::pair{573, 5034},\n+        std::pair{574, 5830},\n+        std::pair{575, 6663},\n+        std::pair{576, 8678},\n+        std::pair{577, 11161},\n+        std::pair{578, 7151},\n+        std::pair{579, 5771},\n+        std::pair{580, 5632},\n+        std::pair{581, 4045},\n+        std::pair{594, 9095},\n+        std::pair{595, 10823},\n+        std::pair{596, 4297},\n+        std::pair{598, 3772},\n+        std::pair{599, 5252},\n+        std::pair{600, 3817},\n+        std::pair{602, 6147},\n+        std::pair{603, 7215},\n+        std::pair{604, 5307},\n+        std::pair{605, 3906},\n+        std::pair{606, 4662},\n+        std::pair{607, 13020},\n+        std::pair{610, 12640},\n+        std::pair{613, 5599},\n+        std::pair{615, 11544},\n+        std::pair{617, 3953},\n+        std::pair{619, 4334},\n+        std::pair{625, 6609},\n+        std::pair{626, 47564},\n+        std::pair{628, 69105},\n+        std::pair{632, 6420},\n+        std::pair{636, 3551},\n+        std::pair{641, 8516},\n+        std::pair{644, 3553},\n+        std::pair{645, 3661},\n+        std::pair{646, 3985},\n+        std::pair{647, 4859},\n+        std::pair{649, 4228},\n+        std::pair{651, 4285},\n+        std::pair{653, 3644},\n+        std::pair{661, 4369},\n+        std::pair{662, 5890},\n+        std::pair{663, 6778},\n+        std::pair{664, 10663},\n+        std::pair{670, 4289},\n+        std::pair{671, 4389},\n+        std::pair{672, 4262},\n+        std::pair{673, 3708},\n+        std::pair{674, 5386},\n+        std::pair{683, 8732},\n+        std::pair{686, 3687},\n+        std::pair{687, 5581},\n+        std::pair{688, 5593},\n+        std::pair{689, 4053},\n+        std::pair{692, 3318},\n+        std::pair{693, 3518},\n+        std::pair{694, 4205},\n+        std::pair{695, 4752},\n+        std::pair{696, 5331},\n+        std::pair{697, 5591},\n+        std::pair{698, 5968},\n+        std::pair{699, 5988},\n+        std::pair{700, 5381},\n+        std::pair{701, 4386},\n+        std::pair{702, 4465},\n+        std::pair{703, 3793},\n+        std::pair{704, 4394},\n+        std::pair{705, 3636},\n+        std::pair{707, 3691},\n+        std::pair{709, 3288},\n+        std::pair{711, 22844},\n+        std::pair{714, 3148},\n+        std::pair{717, 3239},\n+        std::pair{718, 4170},\n+        std::pair{719, 4739},\n+        std::pair{720, 3560},\n+        std::pair{721, 4730},\n+        std::pair{722, 4524},\n+        std::pair{724, 3741},\n+        std::pair{725, 10294},\n+        std::pair{729, 4879},\n+        std::pair{730, 8636},\n+        std::pair{732, 3064},\n+        std::pair{734, 23400},\n+        std::pair{736, 3542},\n+        std::pair{737, 3331},\n+        std::pair{738, 3238},\n+        std::pair{740, 3083},\n+        std::pair{741, 3032},\n+        std::pair{742, 4008},\n+        std::pair{744, 3277},\n+        std::pair{745, 3162},\n+        std::pair{746, 3178},\n+        std::pair{748, 3393},\n+        std::pair{749, 3352},\n+        std::pair{750, 3341},\n+        std::pair{751, 3716},\n+        std::pair{752, 4696},\n+        std::pair{753, 3265},\n+        std::pair{754, 3621},\n+        std::pair{755, 3734},\n+        std::pair{756, 3824},\n+        std::pair{757, 3535},\n+        std::pair{758, 4118},\n+        std::pair{759, 5714},\n+        std::pair{760, 4043},\n+        std::pair{761, 4628},\n+        std::pair{762, 3808},\n+        std::pair{763, 3684},\n+        std::pair{764, 3989},\n+        std::pair{765, 3638},\n+        std::pair{766, 4037},\n+        std::pair{767, 4227},\n+        std::pair{768, 3933},\n+        std::pair{769, 4183},\n+        std::pair{770, 5118},\n+        std::pair{771, 4493},\n+        std::pair{772, 4038},\n+        std::pair{773, 3737},\n+        std::pair{774, 3924},\n+        std::pair{775, 3603},\n+        std::pair{776, 3906},\n+        std::pair{777, 3614},\n+        std::pair{778, 3869},\n+        std::pair{779, 23482},\n+        std::pair{780, 3934},\n+        std::pair{781, 3869},\n+        std::pair{782, 3967},\n+        std::pair{783, 3762},\n+        std::pair{784, 8108},\n+        std::pair{785, 3788},\n+        std::pair{786, 3710},\n+        std::pair{787, 3368},\n+        std::pair{788, 4644},\n+        std::pair{789, 3431},\n+        std::pair{790, 3790},\n+        std::pair{791, 3494},\n+        std::pair{792, 63947},\n+        std::pair{793, 6288},\n+        std::pair{794, 5799},\n+        std::pair{795, 3683},\n+        std::pair{796, 3744},\n+        std::pair{797, 4760},\n+        std::pair{798, 4114},\n+        std::pair{799, 3219},\n+        std::pair{800, 3367},\n+        std::pair{801, 3624},\n+        std::pair{802, 3330},\n+        std::pair{803, 3176},\n+        std::pair{804, 3245},\n+        std::pair{805, 2876},\n+        std::pair{806, 3244},\n+        std::pair{807, 3080},\n+        std::pair{808, 3182},\n+        std::pair{809, 4043},\n+        std::pair{810, 3215},\n+        std::pair{811, 2813},\n+        std::pair{812, 3084},\n+        std::pair{814, 3276},\n+        std::pair{816, 29033},\n+        std::pair{817, 3045},\n+        std::pair{818, 3155},\n+        std::pair{822, 2758},\n+        std::pair{823, 2750},\n+        std::pair{824, 3491},\n+        std::pair{825, 3105},\n+        std::pair{826, 3058},\n+        std::pair{827, 3252},\n+        std::pair{830, 2795},\n+        std::pair{834, 2980},\n+        std::pair{837, 2934},\n+        std::pair{847, 2915},\n+        std::pair{849, 2906},\n+        std::pair{851, 2832},\n+        std::pair{852, 4775},\n+        std::pair{853, 5139},\n+        std::pair{854, 2891},\n+        std::pair{857, 12174},\n+        std::pair{860, 3804},\n+        std::pair{861, 3610},\n+        std::pair{868, 9452},\n+        std::pair{869, 3193},\n+        std::pair{870, 4421},\n+        std::pair{871, 2741},\n+        std::pair{872, 2658},\n+        std::pair{880, 5565},\n+        std::pair{881, 4822},\n+        std::pair{887, 7897},\n+        std::pair{889, 2571},\n+        std::pair{893, 2772},\n+        std::pair{899, 2902},\n+        std::pair{900, 2563},\n+        std::pair{908, 3615},\n+        std::pair{909, 3335},\n+        std::pair{914, 2471},\n+        std::pair{915, 3855},\n+        std::pair{929, 2669},\n+        std::pair{931, 2727},\n+        std::pair{932, 3965},\n+        std::pair{933, 3861},\n+        std::pair{947, 2497},\n+        std::pair{948, 3413},\n+        std::pair{956, 7964},\n+        std::pair{957, 4164},\n+        std::pair{958, 15318},\n+        std::pair{970, 4944},\n+        std::pair{973, 5329},\n+        std::pair{991, 4237},\n+        std::pair{1009, 2996},\n+        std::pair{1013, 2317},\n+        std::pair{1018, 2403},\n+        std::pair{1021, 2264},\n+        std::pair{1027, 2432},\n+        std::pair{1028, 3170},\n+        std::pair{1029, 2282},\n+        std::pair{1062, 2136},\n+        std::pair{1063, 6545},\n+        std::pair{1065, 3930},\n+        std::pair{1071, 2748},\n+        std::pair{1073, 4453},\n+        std::pair{1080, 2280},\n+        std::pair{1081, 2917},\n+        std::pair{1086, 38785},\n+        std::pair{1088, 8662},\n+        std::pair{1094, 5021},\n+        std::pair{1095, 2231},\n+        std::pair{1097, 2063},\n+        std::pair{1099, 2050},\n+        std::pair{1111, 17965},\n+        std::pair{1112, 2278},\n+        std::pair{1117, 4879},\n+        std::pair{1118, 2130},\n+        std::pair{1122, 2016},\n+        std::pair{1129, 3118},\n+        std::pair{1131, 5241},\n+        std::pair{1132, 2044},\n+        std::pair{1133, 7119},\n+        std::pair{1134, 8941},\n+        std::pair{1137, 2184},\n+        std::pair{1138, 2896},\n+        std::pair{1140, 9739},\n+        std::pair{1145, 5445},\n+        std::pair{1157, 7559},\n+        std::pair{1158, 2301},\n+        std::pair{1183, 2098},\n+        std::pair{1191, 5395},\n+        std::pair{1192, 4617},\n+        std::pair{1195, 5422},\n+        std::pair{1203, 2285},\n+        std::pair{1206, 3310},\n+        std::pair{1211, 2079},\n+        std::pair{1212, 5269},\n+        std::pair{1214, 19082},\n+        std::pair{1215, 1876},\n+        std::pair{1229, 2511},\n+        std::pair{1230, 2021},\n+        std::pair{1232, 19221},\n+        std::pair{1233, 2398},\n+        std::pair{1235, 2863},\n+        std::pair{1237, 2601},\n+        std::pair{1238, 1942},\n+        std::pair{1242, 1855},\n+        std::pair{1252, 1814},\n+        std::pair{1259, 8921},\n+        std::pair{1260, 2166},\n+        std::pair{1270, 2508},\n+        std::pair{1276, 1983},\n+        std::pair{1292, 2651},\n+        std::pair{1303, 2344},\n+        std::pair{1304, 1984},\n+        std::pair{1305, 2837},\n+        std::pair{1316, 1784},\n+        std::pair{1343, 2431},\n+        std::pair{1347, 40393},\n+        std::pair{1349, 2713},\n+        std::pair{1363, 20803},\n+        std::pair{1381, 1940},\n+        std::pair{1382, 1738},\n+        std::pair{1383, 1792},\n+        std::pair{1398, 1924},\n+        std::pair{1399, 2076},\n+        std::pair{1402, 3204},\n+        std::pair{1403, 4854},\n+        std::pair{1404, 4220},\n+        std::pair{1411, 1789},\n+        std::pair{1430, 2616},\n+        std::pair{1439, 1556},\n+        std::pair{1448, 2535},\n+        std::pair{1450, 1738},\n+        std::pair{1463, 2819},\n+        std::pair{1464, 3412},\n+        std::pair{1469, 2184},\n+        std::pair{1487, 1571},\n+        std::pair{1501, 3647},\n+        std::pair{1504, 1622},\n+        std::pair{1505, 1540},\n+        std::pair{1535, 3421},\n+        std::pair{1564, 2720},\n+        std::pair{1580, 1699},\n+        std::pair{1581, 5728},\n+        std::pair{1583, 2487},\n+        std::pair{1600, 1513},\n+        std::pair{1601, 1637},\n+        std::pair{1602, 1908},\n+        std::pair{1603, 1840},\n+        std::pair{1604, 2253},\n+        std::pair{1605, 2171},\n+        std::pair{1606, 2151},\n+        std::pair{1607, 2077},\n+        std::pair{1608, 2025},\n+        std::pair{1609, 1924},\n+        std::pair{1610, 1893},\n+        std::pair{1611, 1591},\n+        std::pair{1612, 1521},\n+        std::pair{1613, 1622},\n+        std::pair{1618, 1998},\n+        std::pair{1693, 7588},\n+        std::pair{1748, 1796},\n+        std::pair{1752, 1707},\n+        std::pair{1757, 2606},\n+        std::pair{1758, 3088},\n+        std::pair{1759, 1301},\n+        std::pair{1765, 2397},\n+        std::pair{1779, 1451},\n+        std::pair{1789, 1658},\n+        std::pair{1799, 1425},\n+        std::pair{1800, 1988},\n+        std::pair{1810, 1337},\n+        std::pair{1819, 1582},\n+        std::pair{1820, 1482},\n+        std::pair{1821, 1339},\n+        std::pair{1822, 1574},\n+        std::pair{1823, 1531},\n+        std::pair{1824, 1598},\n+        std::pair{1825, 1574},\n+        std::pair{1826, 1718},\n+        std::pair{1827, 1605},\n+        std::pair{1828, 1567},\n+        std::pair{1829, 1782},\n+        std::pair{1830, 1622},\n+        std::pair{1831, 1934},\n+        std::pair{1832, 1483},\n+        std::pair{1833, 1323},\n+        std::pair{1834, 1416},\n+        std::pair{1839, 1248},\n+        std::pair{1880, 1503},\n+        std::pair{1897, 2634},\n+        std::pair{1912, 1334},\n+        std::pair{1935, 1200},\n+        std::pair{1938, 1477},\n+        std::pair{1939, 1251},\n+        std::pair{1941, 1367},\n+        std::pair{1943, 2004},\n+        std::pair{1945, 1678},\n+        std::pair{1947, 1489},\n+        std::pair{1949, 1469},\n+        std::pair{1951, 1542},\n+        std::pair{1953, 1825},\n+        std::pair{1955, 1262},\n+        std::pair{1957, 1362},\n+        std::pair{1959, 1384},\n+        std::pair{1961, 1281},\n+        std::pair{1965, 1244},\n+        std::pair{1967, 1208},\n+        std::pair{2007, 1280},\n+        std::pair{2015, 1865},\n+        std::pair{2028, 1828},\n+        std::pair{2029, 1492},\n+        std::pair{2138, 1528},\n+        std::pair{2164, 1259},\n+        std::pair{2238, 2749},\n+        std::pair{2239, 1165},\n+        std::pair{2243, 1008},\n+        std::pair{2293, 1132},\n+        std::pair{2329, 1039},\n+        std::pair{2330, 1025},\n+        std::pair{2331, 968},\n+        std::pair{2434, 3310},\n+        std::pair{2439, 1241},\n+        std::pair{2665, 860},\n+        std::pair{2755, 1050},\n+        std::pair{2768, 863},\n+        std::pair{2784, 1633},\n+        std::pair{2791, 1140},\n+        std::pair{2873, 1881},\n+        std::pair{2973, 874},\n+        std::pair{2974, 1492},\n+        std::pair{3023, 825},\n+        std::pair{3097, 765},\n+        std::pair{3098, 1285},\n+        std::pair{3102, 1676},\n+        std::pair{3107, 1090},\n+        std::pair{3108, 782},\n+        std::pair{3124, 1695},\n+        std::pair{3134, 878},\n+        std::pair{3161, 1927},\n+        std::pair{3179, 843},\n+        std::pair{3245, 1628},\n+        std::pair{3249, 1787},\n+        std::pair{3268, 1275},\n+        std::pair{3293, 690},\n+        std::pair{3305, 1073},\n+        std::pair{3306, 1256},\n+        std::pair{3360, 2382},\n+        std::pair{3375, 688},\n+        std::pair{3418, 957},\n+        std::pair{3489, 953},\n+        std::pair{3529, 960},\n+        std::pair{3567, 714},\n+        std::pair{3586, 687},\n+        std::pair{3589, 679},\n+        std::pair{3718, 1482},\n+        std::pair{3729, 635},\n+        std::pair{3776, 693},\n+        std::pair{3779, 611},\n+        std::pair{3784, 1072},\n+        std::pair{3854, 1671},\n+        std::pair{3865, 609},\n+        std::pair{3932, 646},\n+        std::pair{3983, 569},\n+        std::pair{3990, 7442},\n+        std::pair{4007, 1967},\n+        std::pair{4022, 856},\n+        std::pair{4033, 600},\n+        std::pair{4096, 3905157},\n+        std::pair{4197, 854},\n+        std::pair{4201, 839},\n+        std::pair{4206, 1126},\n+        std::pair{4252, 940},\n+        std::pair{4573, 613},\n+        std::pair{4578, 3187},\n+        std::pair{4880, 4217},\n+        std::pair{5229, 503},\n+        std::pair{5662, 418},\n+        std::pair{6103, 629},\n+        std::pair{6111, 1099},\n+        std::pair{7230, 516},\n+        std::pair{7950, 1340},\n+        std::pair{9163, 349},\n+        std::pair{9425, 1030},\n+        std::pair{10626, 2763},\n+        std::pair{11910, 1120},\n+        std::pair{12322, 461},\n+        std::pair{12463, 218},\n+        std::pair{12647, 505},\n+        std::pair{12764, 251},\n+        std::pair{14821, 161},\n+        std::pair{16220, 266},\n+        std::pair{19421, 207},\n+        std::pair{22287, 112},\n+        std::pair{23659, 205},\n+        std::pair{29024, 112},\n+        std::pair{32311, 161},\n+        std::pair{33016, 101},\n+        std::pair{35830, 65},\n+        std::pair{37830, 134},\n+        std::pair{42651, 255},\n+        std::pair{51830, 62},\n+        std::pair{51975, 54},\n+        std::pair{58763, 48},\n+        std::pair{58957, 65},\n+        std::pair{58959, 190},\n+        std::pair{58968, 45},\n+        std::pair{59029, 91},\n+        std::pair{65973, 109},\n+        std::pair{67108, 51},\n+        std::pair{73348, 46},\n+        std::pair{73350, 56},\n+        std::pair{88154, 147},\n+        std::pair{93902, 252},\n+        std::pair{95844, 26},\n+        std::pair{95901, 6384},\n+        std::pair{105054, 160},\n+        std::pair{116108, 143},\n+        std::pair{116132, 28},\n+        std::pair{120562, 19},\n+        std::pair{129509, 21},\n+        std::pair{131887, 112},\n+        std::pair{134762, 66},\n+        std::pair{142727, 79},\n+        std::pair{156030, 20},\n+        std::pair{157030, 59},\n+        std::pair{158830, 19},\n+        std::pair{160030, 47},\n+        std::pair{161030, 27},\n+        std::pair{170730, 15},\n+        std::pair{172242, 48},\n+        std::pair{185416, 15},\n+        std::pair{188014, 34},\n+        std::pair{201064, 18},\n+        std::pair{201956, 308},\n+        std::pair{212447, 71},\n+        std::pair{238133, 11},\n+        std::pair{248911, 14},\n+        std::pair{263128, 382},\n+        std::pair{263715, 109},\n+        std::pair{263717, 64},\n+        std::pair{263826, 12},\n+        std::pair{264526, 14},\n+        std::pair{281222, 15},\n+        std::pair{296649, 20},\n+        std::pair{304568, 9},\n+        std::pair{313930, 10},\n+        std::pair{330734, 11},\n+        std::pair{360543, 9},\n+        std::pair{366453, 7},\n+        std::pair{376701, 7},\n+        std::pair{390618, 7},\n+        std::pair{393960, 13},\n+        std::pair{397614, 9},\n+        std::pair{3208728, 1},\n+        std::pair{3399235, 1},\n+        std::pair{3455039, 1},\n+        std::pair{3901276, 1},\n+        std::pair{3938182, 1},\n+        std::pair{3940737, 1},\n+        std::pair{3960783, 1},\n+        std::pair{3969293, 1},\n+        std::pair{3979245, 1},\n+        std::pair{3983549, 1},\n+        std::pair{3988760, 1},\n+        std::pair{3990061, 1},\n+        std::pair{3990887, 1},\n+        std::pair{3990916, 1},\n+        std::pair{3990944, 1},\n+        std::pair{3991041, 1},\n+        std::pair{3991516, 1},\n+        std::pair{3992188, 1},\n+        std::pair{3992381, 1},\n+        std::pair{3992470, 1},\n+    };\n \n+    constexpr auto scaling_factor{1'000'000U}; // Scale to this many occurrences of 1 byte vectors\n+    const uint64_t max_count{histogram[1]};\n+    assert(max_count == 47'584'838'861); // 1 byte vectors are most frequent\n+\n+    std::vector<std::vector<std::byte>> test_data;\n+    test_data.reserve(1'941'283);\n+\n+    FastRandomContext rng{/*fDeterministic=*/true};\n+    uint64_t total_bytes{0};\n+    for (const auto& [size, count] : histogram) {\n+        const size_t scaled_count{static_cast<size_t>(std::ceil(static_cast<double>(count) / max_count * scaling_factor))};\n+\n+        total_bytes += scaled_count * size;\n+        auto rand_bytes = rng.randbytes<std::byte>(size);\n+        for (size_t j{0}; j < scaled_count; ++j) {\n+            test_data.emplace_back(rand_bytes);\n+        }\n+    }\n+    assert(total_bytes == 114'929'502);\n+\n+    std::ranges::shuffle(test_data, rng); // Make it more realistic & less predictable\n+\n+    std::vector key_bytes{rng.randbytes<std::byte>(8)};\n+    uint64_t key;\n+    std::memcpy(&key, key_bytes.data(), 8);\n+\n+    size_t offset{0};\n+    bench.batch(total_bytes).unit(\"byte\").run([&] {\n+        for (auto& data : test_data) {\n+            util::Xor(data, key_bytes, offset++);\n+        }\n+        ankerl::nanobench::doNotOptimizeAway(test_data);\n+    });\n+}\n+\n+static void AutoFileXor(benchmark::Bench& bench)",
      "path": "src/bench/xor.cpp",
      "position": null,
      "original_position": 1054,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "caafbd069246848a8bdfc2f42fd1d692a824de94",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"bench: Make Xor benchmark more representative\" (caafbd069246848a8bdfc2f42fd1d692a824de94)\r\n\r\nNot really sure I understand the goal if this benchmark. Is it significant that the xor key is 0? Would be helpful to have a description of what this benchmark is measuring and indicating.\r\n\r\n",
      "created_at": "2024-12-11T00:03:00Z",
      "updated_at": "2024-12-11T01:17:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1879104907",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879104907"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1056,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879106378",
      "pull_request_review_id": 2492769021,
      "id": 1879106378,
      "node_id": "PRRC_kwDOABII585wAONK",
      "diff_hunk": "@@ -7,18 +7,1069 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <cmath>\n #include <cstddef>\n+#include <map>\n #include <vector>\n \n-static void Xor(benchmark::Bench& bench)\n+static void XorHistogram(benchmark::Bench& bench)\n {\n-    FastRandomContext frc{/*fDeterministic=*/true};\n-    auto data{frc.randbytes<std::byte>(1024)};\n-    auto key{frc.randbytes<std::byte>(31)};\n+    // The top util::Xor method's [write.size(), frequency] calls for the IBD of the first 860k blocks\n+    std::map<uint32_t, uint64_t> histogram{\n+        std::pair{1, 47584838861},\n+        std::pair{2, 155252857},\n+        std::pair{4, 14983070199},\n+        std::pair{7, 51354839},\n+        std::pair{8, 5939128629},\n+        std::pair{9, 16698793},\n+        std::pair{10, 27406144},\n+        std::pair{11, 3986792},\n+        std::pair{12, 3282613},\n+        std::pair{13, 314839},\n+        std::pair{14, 536980},\n+        std::pair{15, 1610643},\n+        std::pair{16, 542064},\n+        std::pair{17, 407345},\n+        std::pair{18, 261587},\n+        std::pair{19, 230151},\n+        std::pair{20, 339705},\n+        std::pair{21, 2019807250},\n+        std::pair{22, 1616301504},\n+        std::pair{23, 2357347372},\n+        std::pair{25, 2705183236},\n+        std::pair{26, 35870265},\n+        std::pair{27, 87057844},\n+        std::pair{28, 78184146},\n+        std::pair{29, 30858682},\n+        std::pair{30, 19197417},\n+        std::pair{31, 1579479},\n+        std::pair{32, 5369404406},\n+        std::pair{33, 2025696499},\n+        std::pair{34, 682781008},\n+        std::pair{35, 269339238},\n+        std::pair{36, 223445},\n+        std::pair{37, 41467794},\n+        std::pair{38, 1475762},\n+        std::pair{39, 6662400},\n+        std::pair{40, 50600412},\n+        std::pair{41, 5297315},\n+        std::pair{42, 3013707},\n+        std::pair{43, 443306},\n+        std::pair{44, 567194},\n+        std::pair{46, 111535},\n+        std::pair{47, 155071},\n+        std::pair{48, 1038788},\n+        std::pair{49, 101166},\n+        std::pair{53, 414677},\n+        std::pair{54, 42084},\n+        std::pair{55, 150863},\n+        std::pair{56, 694439},\n+        std::pair{58, 38884},\n+        std::pair{59, 69597},\n+        std::pair{60, 55155},\n+        std::pair{62, 64150},\n+        std::pair{63, 44837},\n+        std::pair{64, 275253628},\n+        std::pair{65, 29197009},\n+        std::pair{66, 463395},\n+        std::pair{67, 1807929},\n+        std::pair{68, 264550},\n+        std::pair{69, 1031048},\n+        std::pair{70, 12772097},\n+        std::pair{71, 1763349816},\n+        std::pair{72, 827712501},\n+        std::pair{73, 3835426},\n+        std::pair{74, 869472},\n+        std::pair{75, 538515},\n+        std::pair{76, 268232},\n+        std::pair{77, 1407359},\n+        std::pair{78, 2899481},\n+        std::pair{79, 672145},\n+        std::pair{80, 2240943},\n+        std::pair{81, 1142405},\n+        std::pair{82, 482636},\n+        std::pair{83, 53818260},\n+        std::pair{84, 551826},\n+        std::pair{85, 274521},\n+        std::pair{86, 191212},\n+        std::pair{87, 148744},\n+        std::pair{88, 798839},\n+        std::pair{89, 131754},\n+        std::pair{90, 181244},\n+        std::pair{91, 632574},\n+        std::pair{92, 54802},\n+        std::pair{93, 40008},\n+        std::pair{94, 58679},\n+        std::pair{95, 3986219},\n+        std::pair{96, 69872},\n+        std::pair{97, 836318},\n+        std::pair{98, 124792},\n+        std::pair{99, 228622},\n+        std::pair{100, 550755},\n+        std::pair{101, 70480},\n+        std::pair{102, 29036},\n+        std::pair{103, 134544},\n+        std::pair{104, 138387},\n+        std::pair{105, 198656556},\n+        std::pair{106, 1193555153},\n+        std::pair{107, 1064027363},\n+        std::pair{108, 24662023},\n+        std::pair{109, 7506161},\n+        std::pair{110, 1500218},\n+        std::pair{111, 2768082},\n+        std::pair{112, 3056669},\n+        std::pair{113, 17829712},\n+        std::pair{114, 9826401},\n+        std::pair{115, 409391},\n+        std::pair{116, 388988},\n+        std::pair{117, 199627},\n+        std::pair{118, 156933},\n+        std::pair{119, 266888},\n+        std::pair{120, 2215468},\n+        std::pair{121, 3735124},\n+        std::pair{122, 3221526},\n+        std::pair{123, 12986923},\n+        std::pair{124, 3039553},\n+        std::pair{125, 2378723},\n+        std::pair{126, 4080425},\n+        std::pair{127, 3993712},\n+        std::pair{128, 13323530},\n+        std::pair{129, 1404783},\n+        std::pair{130, 7111451},\n+        std::pair{131, 6398914},\n+        std::pair{132, 1574554},\n+        std::pair{133, 753121},\n+        std::pair{134, 995846},\n+        std::pair{135, 2299257},\n+        std::pair{136, 2841133},\n+        std::pair{137, 1432824},\n+        std::pair{138, 112918349},\n+        std::pair{139, 155158814},\n+        std::pair{140, 37826769},\n+        std::pair{141, 138259},\n+        std::pair{142, 228782},\n+        std::pair{143, 155226},\n+        std::pair{144, 523085},\n+        std::pair{145, 1043545},\n+        std::pair{146, 936776},\n+        std::pair{147, 135958},\n+        std::pair{148, 53477},\n+        std::pair{149, 85944},\n+        std::pair{150, 139591},\n+        std::pair{151, 51432},\n+        std::pair{152, 101719},\n+        std::pair{153, 71302},\n+        std::pair{154, 26873},\n+        std::pair{155, 150196},\n+        std::pair{156, 44863},\n+        std::pair{157, 81708},\n+        std::pair{158, 16245},\n+        std::pair{159, 16539},\n+        std::pair{160, 30363},\n+        std::pair{161, 19167},\n+        std::pair{163, 59580},\n+        std::pair{164, 247459},\n+        std::pair{165, 248525},\n+        std::pair{166, 56551},\n+        std::pair{167, 72096},\n+        std::pair{169, 80727},\n+        std::pair{170, 83764},\n+        std::pair{172, 42020},\n+        std::pair{173, 482585},\n+        std::pair{174, 63200},\n+        std::pair{175, 23018},\n+        std::pair{176, 29041},\n+        std::pair{177, 27504},\n+        std::pair{178, 162526},\n+        std::pair{179, 16034},\n+        std::pair{180, 54624},\n+        std::pair{181, 54459},\n+        std::pair{184, 24405},\n+        std::pair{186, 23024},\n+        std::pair{187, 156538},\n+        std::pair{188, 31919},\n+        std::pair{189, 53778},\n+        std::pair{190, 95945},\n+        std::pair{191, 91777},\n+        std::pair{192, 756282},\n+        std::pair{193, 130194},\n+        std::pair{194, 14765},\n+        std::pair{195, 19600},\n+        std::pair{196, 35530},\n+        std::pair{197, 18439},\n+        std::pair{198, 645343},\n+        std::pair{199, 49680},\n+        std::pair{200, 110974},\n+        std::pair{201, 192016},\n+        std::pair{202, 77989},\n+        std::pair{203, 97997},\n+        std::pair{204, 122473},\n+        std::pair{205, 197169},\n+        std::pair{206, 666763},\n+        std::pair{207, 125972},\n+        std::pair{208, 44187},\n+        std::pair{209, 63692},\n+        std::pair{210, 180094},\n+        std::pair{211, 78496},\n+        std::pair{212, 76417},\n+        std::pair{213, 48926},\n+        std::pair{214, 114383},\n+        std::pair{215, 82850},\n+        std::pair{216, 262811},\n+        std::pair{217, 13625647},\n+        std::pair{218, 25918921},\n+        std::pair{219, 12992432},\n+        std::pair{220, 108554},\n+        std::pair{221, 31243},\n+        std::pair{222, 29187},\n+        std::pair{223, 10083},\n+        std::pair{224, 22281},\n+        std::pair{225, 13950},\n+        std::pair{226, 31886},\n+        std::pair{227, 18084},\n+        std::pair{228, 14657},\n+        std::pair{229, 79168},\n+        std::pair{230, 15963},\n+        std::pair{231, 21742},\n+        std::pair{232, 11410},\n+        std::pair{233, 12367},\n+        std::pair{234, 15037},\n+        std::pair{235, 16192},\n+        std::pair{236, 25139},\n+        std::pair{237, 16192},\n+        std::pair{238, 18500},\n+        std::pair{239, 18810},\n+        std::pair{240, 38316},\n+        std::pair{241, 149042},\n+        std::pair{242, 24003},\n+        std::pair{243, 19104},\n+        std::pair{244, 15440},\n+        std::pair{245, 9379},\n+        std::pair{247, 9889},\n+        std::pair{248, 12683},\n+        std::pair{249, 85955},\n+        std::pair{250, 48511},\n+        std::pair{251, 746625},\n+        std::pair{252, 48105681},\n+        std::pair{253, 83729340},\n+        std::pair{254, 38940977},\n+        std::pair{255, 151929},\n+        std::pair{256, 28326},\n+        std::pair{257, 47575},\n+        std::pair{258, 25005},\n+        std::pair{259, 24940},\n+        std::pair{260, 37845},\n+        std::pair{261, 23197},\n+        std::pair{262, 34312},\n+        std::pair{263, 21453},\n+        std::pair{264, 55215},\n+        std::pair{267, 11005},\n+        std::pair{268, 40335},\n+        std::pair{269, 31338},\n+        std::pair{275, 8153},\n+        std::pair{278, 12014},\n+        std::pair{280, 19109},\n+        std::pair{282, 17085},\n+        std::pair{283, 27004},\n+        std::pair{284, 346378},\n+        std::pair{285, 342589},\n+        std::pair{286, 352838},\n+        std::pair{287, 343470},\n+        std::pair{288, 242657},\n+        std::pair{289, 13735},\n+        std::pair{290, 23228},\n+        std::pair{291, 22868},\n+        std::pair{296, 10044},\n+        std::pair{297, 67198},\n+        std::pair{298, 21992},\n+        std::pair{299, 28253},\n+        std::pair{302, 23977},\n+        std::pair{306, 17984},\n+        std::pair{307, 11476},\n+        std::pair{308, 7421},\n+        std::pair{309, 8469},\n+        std::pair{314, 11850},\n+        std::pair{315, 16052},\n+        std::pair{316, 25342},\n+        std::pair{317, 28064},\n+        std::pair{318, 20989},\n+        std::pair{319, 23071},\n+        std::pair{320, 48109},\n+        std::pair{321, 48075},\n+        std::pair{322, 25238},\n+        std::pair{323, 10398},\n+        std::pair{324, 37202},\n+        std::pair{325, 51911},\n+        std::pair{326, 39506},\n+        std::pair{327, 11413},\n+        std::pair{333, 13024},\n+        std::pair{334, 19214},\n+        std::pair{335, 28438},\n+        std::pair{337, 8269},\n+        std::pair{342, 13666},\n+        std::pair{344, 6944},\n+        std::pair{345, 7907},\n+        std::pair{347, 16630},\n+        std::pair{348, 593985},\n+        std::pair{349, 1130760},\n+        std::pair{350, 578492},\n+        std::pair{351, 14457},\n+        std::pair{352, 7764},\n+        std::pair{353, 9544},\n+        std::pair{354, 263313},\n+        std::pair{355, 513902},\n+        std::pair{356, 260735},\n+        std::pair{358, 36433},\n+        std::pair{359, 75013},\n+        std::pair{360, 78454},\n+        std::pair{361, 35048},\n+        std::pair{362, 9077},\n+        std::pair{363, 7329},\n+        std::pair{365, 6250},\n+        std::pair{366, 38768},\n+        std::pair{368, 6462},\n+        std::pair{370, 6695},\n+        std::pair{371, 6738},\n+        std::pair{372, 6741},\n+        std::pair{373, 6718},\n+        std::pair{374, 22779},\n+        std::pair{377, 15183},\n+        std::pair{378, 8535},\n+        std::pair{381, 9493},\n+        std::pair{383, 8045},\n+        std::pair{386, 9833},\n+        std::pair{388, 6020},\n+        std::pair{389, 6431},\n+        std::pair{390, 6042},\n+        std::pair{391, 12471},\n+        std::pair{392, 288555},\n+        std::pair{393, 805000},\n+        std::pair{394, 798675},\n+        std::pair{395, 268494},\n+        std::pair{402, 5731},\n+        std::pair{403, 8028},\n+        std::pair{404, 8535},\n+        std::pair{406, 5719},\n+        std::pair{408, 13451},\n+        std::pair{410, 7235},\n+        std::pair{412, 5798},\n+        std::pair{415, 9227},\n+        std::pair{416, 7012},\n+        std::pair{417, 6305},\n+        std::pair{418, 16208},\n+        std::pair{419, 5801},\n+        std::pair{422, 6460},\n+        std::pair{423, 14468},\n+        std::pair{424, 31198},\n+        std::pair{425, 6148},\n+        std::pair{426, 22403},\n+        std::pair{427, 30448},\n+        std::pair{428, 32413},\n+        std::pair{429, 14787},\n+        std::pair{430, 7622},\n+        std::pair{431, 5669},\n+        std::pair{432, 19538},\n+        std::pair{437, 9812},\n+        std::pair{438, 5234},\n+        std::pair{439, 5277},\n+        std::pair{440, 24196},\n+        std::pair{441, 5915},\n+        std::pair{442, 5495},\n+        std::pair{443, 5093},\n+        std::pair{444, 5122},\n+        std::pair{445, 7284},\n+        std::pair{452, 6373},\n+        std::pair{454, 14438},\n+        std::pair{458, 5345},\n+        std::pair{459, 9986},\n+        std::pair{460, 25818},\n+        std::pair{461, 46493},\n+        std::pair{462, 42770},\n+        std::pair{463, 15676},\n+        std::pair{464, 7848},\n+        std::pair{465, 10933},\n+        std::pair{466, 25088},\n+        std::pair{467, 8687},\n+        std::pair{468, 5129},\n+        std::pair{476, 6189},\n+        std::pair{478, 4757},\n+        std::pair{479, 4846},\n+        std::pair{480, 11673},\n+        std::pair{481, 7191},\n+        std::pair{482, 7809},\n+        std::pair{483, 6500},\n+        std::pair{484, 29549},\n+        std::pair{485, 5616},\n+        std::pair{486, 81135},\n+        std::pair{487, 1836899},\n+        std::pair{488, 4909014},\n+        std::pair{489, 4483016},\n+        std::pair{490, 1380253},\n+        std::pair{491, 6215},\n+        std::pair{492, 5690},\n+        std::pair{493, 6055},\n+        std::pair{494, 6152},\n+        std::pair{495, 7111},\n+        std::pair{496, 9440},\n+        std::pair{497, 8856},\n+        std::pair{498, 16635},\n+        std::pair{499, 23648},\n+        std::pair{500, 34100},\n+        std::pair{501, 28017},\n+        std::pair{502, 11328},\n+        std::pair{503, 6404},\n+        std::pair{504, 6609},\n+        std::pair{505, 5843},\n+        std::pair{506, 8391},\n+        std::pair{507, 6715},\n+        std::pair{508, 7718},\n+        std::pair{509, 7176},\n+        std::pair{510, 7907},\n+        std::pair{511, 7416},\n+        std::pair{512, 7470},\n+        std::pair{513, 8519},\n+        std::pair{514, 7539},\n+        std::pair{515, 8152},\n+        std::pair{516, 18214},\n+        std::pair{517, 7683},\n+        std::pair{518, 12525},\n+        std::pair{519, 8026},\n+        std::pair{520, 13074},\n+        std::pair{521, 9877},\n+        std::pair{522, 9724},\n+        std::pair{523, 8772},\n+        std::pair{524, 8703},\n+        std::pair{525, 8371},\n+        std::pair{526, 8736},\n+        std::pair{527, 14001},\n+        std::pair{528, 22842},\n+        std::pair{529, 8367},\n+        std::pair{530, 9047},\n+        std::pair{531, 9902},\n+        std::pair{532, 9660},\n+        std::pair{533, 10733},\n+        std::pair{534, 12872},\n+        std::pair{535, 11037},\n+        std::pair{536, 10538},\n+        std::pair{537, 9862},\n+        std::pair{538, 7955},\n+        std::pair{539, 6772},\n+        std::pair{540, 6423},\n+        std::pair{541, 7553},\n+        std::pair{542, 8321},\n+        std::pair{543, 8603},\n+        std::pair{544, 17988},\n+        std::pair{545, 6705},\n+        std::pair{546, 5722},\n+        std::pair{547, 6070},\n+        std::pair{548, 6433},\n+        std::pair{549, 5086},\n+        std::pair{550, 4713},\n+        std::pair{551, 4981},\n+        std::pair{552, 4844},\n+        std::pair{553, 7459},\n+        std::pair{554, 20596},\n+        std::pair{555, 15940},\n+        std::pair{556, 9479},\n+        std::pair{557, 5917},\n+        std::pair{558, 6102},\n+        std::pair{559, 5010},\n+        std::pair{560, 5632},\n+        std::pair{561, 8368},\n+        std::pair{562, 6829},\n+        std::pair{563, 5066},\n+        std::pair{564, 22671},\n+        std::pair{565, 8881},\n+        std::pair{566, 16467},\n+        std::pair{567, 11634},\n+        std::pair{568, 7651},\n+        std::pair{569, 5176},\n+        std::pair{570, 5142},\n+        std::pair{571, 5646},\n+        std::pair{572, 5332},\n+        std::pair{573, 5034},\n+        std::pair{574, 5830},\n+        std::pair{575, 6663},\n+        std::pair{576, 8678},\n+        std::pair{577, 11161},\n+        std::pair{578, 7151},\n+        std::pair{579, 5771},\n+        std::pair{580, 5632},\n+        std::pair{581, 4045},\n+        std::pair{594, 9095},\n+        std::pair{595, 10823},\n+        std::pair{596, 4297},\n+        std::pair{598, 3772},\n+        std::pair{599, 5252},\n+        std::pair{600, 3817},\n+        std::pair{602, 6147},\n+        std::pair{603, 7215},\n+        std::pair{604, 5307},\n+        std::pair{605, 3906},\n+        std::pair{606, 4662},\n+        std::pair{607, 13020},\n+        std::pair{610, 12640},\n+        std::pair{613, 5599},\n+        std::pair{615, 11544},\n+        std::pair{617, 3953},\n+        std::pair{619, 4334},\n+        std::pair{625, 6609},\n+        std::pair{626, 47564},\n+        std::pair{628, 69105},\n+        std::pair{632, 6420},\n+        std::pair{636, 3551},\n+        std::pair{641, 8516},\n+        std::pair{644, 3553},\n+        std::pair{645, 3661},\n+        std::pair{646, 3985},\n+        std::pair{647, 4859},\n+        std::pair{649, 4228},\n+        std::pair{651, 4285},\n+        std::pair{653, 3644},\n+        std::pair{661, 4369},\n+        std::pair{662, 5890},\n+        std::pair{663, 6778},\n+        std::pair{664, 10663},\n+        std::pair{670, 4289},\n+        std::pair{671, 4389},\n+        std::pair{672, 4262},\n+        std::pair{673, 3708},\n+        std::pair{674, 5386},\n+        std::pair{683, 8732},\n+        std::pair{686, 3687},\n+        std::pair{687, 5581},\n+        std::pair{688, 5593},\n+        std::pair{689, 4053},\n+        std::pair{692, 3318},\n+        std::pair{693, 3518},\n+        std::pair{694, 4205},\n+        std::pair{695, 4752},\n+        std::pair{696, 5331},\n+        std::pair{697, 5591},\n+        std::pair{698, 5968},\n+        std::pair{699, 5988},\n+        std::pair{700, 5381},\n+        std::pair{701, 4386},\n+        std::pair{702, 4465},\n+        std::pair{703, 3793},\n+        std::pair{704, 4394},\n+        std::pair{705, 3636},\n+        std::pair{707, 3691},\n+        std::pair{709, 3288},\n+        std::pair{711, 22844},\n+        std::pair{714, 3148},\n+        std::pair{717, 3239},\n+        std::pair{718, 4170},\n+        std::pair{719, 4739},\n+        std::pair{720, 3560},\n+        std::pair{721, 4730},\n+        std::pair{722, 4524},\n+        std::pair{724, 3741},\n+        std::pair{725, 10294},\n+        std::pair{729, 4879},\n+        std::pair{730, 8636},\n+        std::pair{732, 3064},\n+        std::pair{734, 23400},\n+        std::pair{736, 3542},\n+        std::pair{737, 3331},\n+        std::pair{738, 3238},\n+        std::pair{740, 3083},\n+        std::pair{741, 3032},\n+        std::pair{742, 4008},\n+        std::pair{744, 3277},\n+        std::pair{745, 3162},\n+        std::pair{746, 3178},\n+        std::pair{748, 3393},\n+        std::pair{749, 3352},\n+        std::pair{750, 3341},\n+        std::pair{751, 3716},\n+        std::pair{752, 4696},\n+        std::pair{753, 3265},\n+        std::pair{754, 3621},\n+        std::pair{755, 3734},\n+        std::pair{756, 3824},\n+        std::pair{757, 3535},\n+        std::pair{758, 4118},\n+        std::pair{759, 5714},\n+        std::pair{760, 4043},\n+        std::pair{761, 4628},\n+        std::pair{762, 3808},\n+        std::pair{763, 3684},\n+        std::pair{764, 3989},\n+        std::pair{765, 3638},\n+        std::pair{766, 4037},\n+        std::pair{767, 4227},\n+        std::pair{768, 3933},\n+        std::pair{769, 4183},\n+        std::pair{770, 5118},\n+        std::pair{771, 4493},\n+        std::pair{772, 4038},\n+        std::pair{773, 3737},\n+        std::pair{774, 3924},\n+        std::pair{775, 3603},\n+        std::pair{776, 3906},\n+        std::pair{777, 3614},\n+        std::pair{778, 3869},\n+        std::pair{779, 23482},\n+        std::pair{780, 3934},\n+        std::pair{781, 3869},\n+        std::pair{782, 3967},\n+        std::pair{783, 3762},\n+        std::pair{784, 8108},\n+        std::pair{785, 3788},\n+        std::pair{786, 3710},\n+        std::pair{787, 3368},\n+        std::pair{788, 4644},\n+        std::pair{789, 3431},\n+        std::pair{790, 3790},\n+        std::pair{791, 3494},\n+        std::pair{792, 63947},\n+        std::pair{793, 6288},\n+        std::pair{794, 5799},\n+        std::pair{795, 3683},\n+        std::pair{796, 3744},\n+        std::pair{797, 4760},\n+        std::pair{798, 4114},\n+        std::pair{799, 3219},\n+        std::pair{800, 3367},\n+        std::pair{801, 3624},\n+        std::pair{802, 3330},\n+        std::pair{803, 3176},\n+        std::pair{804, 3245},\n+        std::pair{805, 2876},\n+        std::pair{806, 3244},\n+        std::pair{807, 3080},\n+        std::pair{808, 3182},\n+        std::pair{809, 4043},\n+        std::pair{810, 3215},\n+        std::pair{811, 2813},\n+        std::pair{812, 3084},\n+        std::pair{814, 3276},\n+        std::pair{816, 29033},\n+        std::pair{817, 3045},\n+        std::pair{818, 3155},\n+        std::pair{822, 2758},\n+        std::pair{823, 2750},\n+        std::pair{824, 3491},\n+        std::pair{825, 3105},\n+        std::pair{826, 3058},\n+        std::pair{827, 3252},\n+        std::pair{830, 2795},\n+        std::pair{834, 2980},\n+        std::pair{837, 2934},\n+        std::pair{847, 2915},\n+        std::pair{849, 2906},\n+        std::pair{851, 2832},\n+        std::pair{852, 4775},\n+        std::pair{853, 5139},\n+        std::pair{854, 2891},\n+        std::pair{857, 12174},\n+        std::pair{860, 3804},\n+        std::pair{861, 3610},\n+        std::pair{868, 9452},\n+        std::pair{869, 3193},\n+        std::pair{870, 4421},\n+        std::pair{871, 2741},\n+        std::pair{872, 2658},\n+        std::pair{880, 5565},\n+        std::pair{881, 4822},\n+        std::pair{887, 7897},\n+        std::pair{889, 2571},\n+        std::pair{893, 2772},\n+        std::pair{899, 2902},\n+        std::pair{900, 2563},\n+        std::pair{908, 3615},\n+        std::pair{909, 3335},\n+        std::pair{914, 2471},\n+        std::pair{915, 3855},\n+        std::pair{929, 2669},\n+        std::pair{931, 2727},\n+        std::pair{932, 3965},\n+        std::pair{933, 3861},\n+        std::pair{947, 2497},\n+        std::pair{948, 3413},\n+        std::pair{956, 7964},\n+        std::pair{957, 4164},\n+        std::pair{958, 15318},\n+        std::pair{970, 4944},\n+        std::pair{973, 5329},\n+        std::pair{991, 4237},\n+        std::pair{1009, 2996},\n+        std::pair{1013, 2317},\n+        std::pair{1018, 2403},\n+        std::pair{1021, 2264},\n+        std::pair{1027, 2432},\n+        std::pair{1028, 3170},\n+        std::pair{1029, 2282},\n+        std::pair{1062, 2136},\n+        std::pair{1063, 6545},\n+        std::pair{1065, 3930},\n+        std::pair{1071, 2748},\n+        std::pair{1073, 4453},\n+        std::pair{1080, 2280},\n+        std::pair{1081, 2917},\n+        std::pair{1086, 38785},\n+        std::pair{1088, 8662},\n+        std::pair{1094, 5021},\n+        std::pair{1095, 2231},\n+        std::pair{1097, 2063},\n+        std::pair{1099, 2050},\n+        std::pair{1111, 17965},\n+        std::pair{1112, 2278},\n+        std::pair{1117, 4879},\n+        std::pair{1118, 2130},\n+        std::pair{1122, 2016},\n+        std::pair{1129, 3118},\n+        std::pair{1131, 5241},\n+        std::pair{1132, 2044},\n+        std::pair{1133, 7119},\n+        std::pair{1134, 8941},\n+        std::pair{1137, 2184},\n+        std::pair{1138, 2896},\n+        std::pair{1140, 9739},\n+        std::pair{1145, 5445},\n+        std::pair{1157, 7559},\n+        std::pair{1158, 2301},\n+        std::pair{1183, 2098},\n+        std::pair{1191, 5395},\n+        std::pair{1192, 4617},\n+        std::pair{1195, 5422},\n+        std::pair{1203, 2285},\n+        std::pair{1206, 3310},\n+        std::pair{1211, 2079},\n+        std::pair{1212, 5269},\n+        std::pair{1214, 19082},\n+        std::pair{1215, 1876},\n+        std::pair{1229, 2511},\n+        std::pair{1230, 2021},\n+        std::pair{1232, 19221},\n+        std::pair{1233, 2398},\n+        std::pair{1235, 2863},\n+        std::pair{1237, 2601},\n+        std::pair{1238, 1942},\n+        std::pair{1242, 1855},\n+        std::pair{1252, 1814},\n+        std::pair{1259, 8921},\n+        std::pair{1260, 2166},\n+        std::pair{1270, 2508},\n+        std::pair{1276, 1983},\n+        std::pair{1292, 2651},\n+        std::pair{1303, 2344},\n+        std::pair{1304, 1984},\n+        std::pair{1305, 2837},\n+        std::pair{1316, 1784},\n+        std::pair{1343, 2431},\n+        std::pair{1347, 40393},\n+        std::pair{1349, 2713},\n+        std::pair{1363, 20803},\n+        std::pair{1381, 1940},\n+        std::pair{1382, 1738},\n+        std::pair{1383, 1792},\n+        std::pair{1398, 1924},\n+        std::pair{1399, 2076},\n+        std::pair{1402, 3204},\n+        std::pair{1403, 4854},\n+        std::pair{1404, 4220},\n+        std::pair{1411, 1789},\n+        std::pair{1430, 2616},\n+        std::pair{1439, 1556},\n+        std::pair{1448, 2535},\n+        std::pair{1450, 1738},\n+        std::pair{1463, 2819},\n+        std::pair{1464, 3412},\n+        std::pair{1469, 2184},\n+        std::pair{1487, 1571},\n+        std::pair{1501, 3647},\n+        std::pair{1504, 1622},\n+        std::pair{1505, 1540},\n+        std::pair{1535, 3421},\n+        std::pair{1564, 2720},\n+        std::pair{1580, 1699},\n+        std::pair{1581, 5728},\n+        std::pair{1583, 2487},\n+        std::pair{1600, 1513},\n+        std::pair{1601, 1637},\n+        std::pair{1602, 1908},\n+        std::pair{1603, 1840},\n+        std::pair{1604, 2253},\n+        std::pair{1605, 2171},\n+        std::pair{1606, 2151},\n+        std::pair{1607, 2077},\n+        std::pair{1608, 2025},\n+        std::pair{1609, 1924},\n+        std::pair{1610, 1893},\n+        std::pair{1611, 1591},\n+        std::pair{1612, 1521},\n+        std::pair{1613, 1622},\n+        std::pair{1618, 1998},\n+        std::pair{1693, 7588},\n+        std::pair{1748, 1796},\n+        std::pair{1752, 1707},\n+        std::pair{1757, 2606},\n+        std::pair{1758, 3088},\n+        std::pair{1759, 1301},\n+        std::pair{1765, 2397},\n+        std::pair{1779, 1451},\n+        std::pair{1789, 1658},\n+        std::pair{1799, 1425},\n+        std::pair{1800, 1988},\n+        std::pair{1810, 1337},\n+        std::pair{1819, 1582},\n+        std::pair{1820, 1482},\n+        std::pair{1821, 1339},\n+        std::pair{1822, 1574},\n+        std::pair{1823, 1531},\n+        std::pair{1824, 1598},\n+        std::pair{1825, 1574},\n+        std::pair{1826, 1718},\n+        std::pair{1827, 1605},\n+        std::pair{1828, 1567},\n+        std::pair{1829, 1782},\n+        std::pair{1830, 1622},\n+        std::pair{1831, 1934},\n+        std::pair{1832, 1483},\n+        std::pair{1833, 1323},\n+        std::pair{1834, 1416},\n+        std::pair{1839, 1248},\n+        std::pair{1880, 1503},\n+        std::pair{1897, 2634},\n+        std::pair{1912, 1334},\n+        std::pair{1935, 1200},\n+        std::pair{1938, 1477},\n+        std::pair{1939, 1251},\n+        std::pair{1941, 1367},\n+        std::pair{1943, 2004},\n+        std::pair{1945, 1678},\n+        std::pair{1947, 1489},\n+        std::pair{1949, 1469},\n+        std::pair{1951, 1542},\n+        std::pair{1953, 1825},\n+        std::pair{1955, 1262},\n+        std::pair{1957, 1362},\n+        std::pair{1959, 1384},\n+        std::pair{1961, 1281},\n+        std::pair{1965, 1244},\n+        std::pair{1967, 1208},\n+        std::pair{2007, 1280},\n+        std::pair{2015, 1865},\n+        std::pair{2028, 1828},\n+        std::pair{2029, 1492},\n+        std::pair{2138, 1528},\n+        std::pair{2164, 1259},\n+        std::pair{2238, 2749},\n+        std::pair{2239, 1165},\n+        std::pair{2243, 1008},\n+        std::pair{2293, 1132},\n+        std::pair{2329, 1039},\n+        std::pair{2330, 1025},\n+        std::pair{2331, 968},\n+        std::pair{2434, 3310},\n+        std::pair{2439, 1241},\n+        std::pair{2665, 860},\n+        std::pair{2755, 1050},\n+        std::pair{2768, 863},\n+        std::pair{2784, 1633},\n+        std::pair{2791, 1140},\n+        std::pair{2873, 1881},\n+        std::pair{2973, 874},\n+        std::pair{2974, 1492},\n+        std::pair{3023, 825},\n+        std::pair{3097, 765},\n+        std::pair{3098, 1285},\n+        std::pair{3102, 1676},\n+        std::pair{3107, 1090},\n+        std::pair{3108, 782},\n+        std::pair{3124, 1695},\n+        std::pair{3134, 878},\n+        std::pair{3161, 1927},\n+        std::pair{3179, 843},\n+        std::pair{3245, 1628},\n+        std::pair{3249, 1787},\n+        std::pair{3268, 1275},\n+        std::pair{3293, 690},\n+        std::pair{3305, 1073},\n+        std::pair{3306, 1256},\n+        std::pair{3360, 2382},\n+        std::pair{3375, 688},\n+        std::pair{3418, 957},\n+        std::pair{3489, 953},\n+        std::pair{3529, 960},\n+        std::pair{3567, 714},\n+        std::pair{3586, 687},\n+        std::pair{3589, 679},\n+        std::pair{3718, 1482},\n+        std::pair{3729, 635},\n+        std::pair{3776, 693},\n+        std::pair{3779, 611},\n+        std::pair{3784, 1072},\n+        std::pair{3854, 1671},\n+        std::pair{3865, 609},\n+        std::pair{3932, 646},\n+        std::pair{3983, 569},\n+        std::pair{3990, 7442},\n+        std::pair{4007, 1967},\n+        std::pair{4022, 856},\n+        std::pair{4033, 600},\n+        std::pair{4096, 3905157},\n+        std::pair{4197, 854},\n+        std::pair{4201, 839},\n+        std::pair{4206, 1126},\n+        std::pair{4252, 940},\n+        std::pair{4573, 613},\n+        std::pair{4578, 3187},\n+        std::pair{4880, 4217},\n+        std::pair{5229, 503},\n+        std::pair{5662, 418},\n+        std::pair{6103, 629},\n+        std::pair{6111, 1099},\n+        std::pair{7230, 516},\n+        std::pair{7950, 1340},\n+        std::pair{9163, 349},\n+        std::pair{9425, 1030},\n+        std::pair{10626, 2763},\n+        std::pair{11910, 1120},\n+        std::pair{12322, 461},\n+        std::pair{12463, 218},\n+        std::pair{12647, 505},\n+        std::pair{12764, 251},\n+        std::pair{14821, 161},\n+        std::pair{16220, 266},\n+        std::pair{19421, 207},\n+        std::pair{22287, 112},\n+        std::pair{23659, 205},\n+        std::pair{29024, 112},\n+        std::pair{32311, 161},\n+        std::pair{33016, 101},\n+        std::pair{35830, 65},\n+        std::pair{37830, 134},\n+        std::pair{42651, 255},\n+        std::pair{51830, 62},\n+        std::pair{51975, 54},\n+        std::pair{58763, 48},\n+        std::pair{58957, 65},\n+        std::pair{58959, 190},\n+        std::pair{58968, 45},\n+        std::pair{59029, 91},\n+        std::pair{65973, 109},\n+        std::pair{67108, 51},\n+        std::pair{73348, 46},\n+        std::pair{73350, 56},\n+        std::pair{88154, 147},\n+        std::pair{93902, 252},\n+        std::pair{95844, 26},\n+        std::pair{95901, 6384},\n+        std::pair{105054, 160},\n+        std::pair{116108, 143},\n+        std::pair{116132, 28},\n+        std::pair{120562, 19},\n+        std::pair{129509, 21},\n+        std::pair{131887, 112},\n+        std::pair{134762, 66},\n+        std::pair{142727, 79},\n+        std::pair{156030, 20},\n+        std::pair{157030, 59},\n+        std::pair{158830, 19},\n+        std::pair{160030, 47},\n+        std::pair{161030, 27},\n+        std::pair{170730, 15},\n+        std::pair{172242, 48},\n+        std::pair{185416, 15},\n+        std::pair{188014, 34},\n+        std::pair{201064, 18},\n+        std::pair{201956, 308},\n+        std::pair{212447, 71},\n+        std::pair{238133, 11},\n+        std::pair{248911, 14},\n+        std::pair{263128, 382},\n+        std::pair{263715, 109},\n+        std::pair{263717, 64},\n+        std::pair{263826, 12},\n+        std::pair{264526, 14},\n+        std::pair{281222, 15},\n+        std::pair{296649, 20},\n+        std::pair{304568, 9},\n+        std::pair{313930, 10},\n+        std::pair{330734, 11},\n+        std::pair{360543, 9},\n+        std::pair{366453, 7},\n+        std::pair{376701, 7},\n+        std::pair{390618, 7},\n+        std::pair{393960, 13},\n+        std::pair{397614, 9},\n+        std::pair{3208728, 1},\n+        std::pair{3399235, 1},\n+        std::pair{3455039, 1},\n+        std::pair{3901276, 1},\n+        std::pair{3938182, 1},\n+        std::pair{3940737, 1},\n+        std::pair{3960783, 1},\n+        std::pair{3969293, 1},\n+        std::pair{3979245, 1},\n+        std::pair{3983549, 1},\n+        std::pair{3988760, 1},\n+        std::pair{3990061, 1},\n+        std::pair{3990887, 1},\n+        std::pair{3990916, 1},\n+        std::pair{3990944, 1},\n+        std::pair{3991041, 1},\n+        std::pair{3991516, 1},\n+        std::pair{3992188, 1},\n+        std::pair{3992381, 1},\n+        std::pair{3992470, 1},\n+    };\n \n+    constexpr auto scaling_factor{1'000'000U}; // Scale to this many occurrences of 1 byte vectors\n+    const uint64_t max_count{histogram[1]};\n+    assert(max_count == 47'584'838'861); // 1 byte vectors are most frequent\n+\n+    std::vector<std::vector<std::byte>> test_data;\n+    test_data.reserve(1'941'283);\n+\n+    FastRandomContext rng{/*fDeterministic=*/true};\n+    uint64_t total_bytes{0};\n+    for (const auto& [size, count] : histogram) {\n+        const size_t scaled_count{static_cast<size_t>(std::ceil(static_cast<double>(count) / max_count * scaling_factor))};\n+\n+        total_bytes += scaled_count * size;\n+        auto rand_bytes = rng.randbytes<std::byte>(size);\n+        for (size_t j{0}; j < scaled_count; ++j) {\n+            test_data.emplace_back(rand_bytes);\n+        }\n+    }\n+    assert(total_bytes == 114'929'502);\n+\n+    std::ranges::shuffle(test_data, rng); // Make it more realistic & less predictable\n+\n+    std::vector key_bytes{rng.randbytes<std::byte>(8)};\n+    uint64_t key;\n+    std::memcpy(&key, key_bytes.data(), 8);\n+\n+    size_t offset{0};\n+    bench.batch(total_bytes).unit(\"byte\").run([&] {\n+        for (auto& data : test_data) {\n+            util::Xor(data, key, offset++);\n+        }\n+        ankerl::nanobench::doNotOptimizeAway(test_data);\n+    });\n+}\n+\n+static void AutoFileXor(benchmark::Bench& bench)\n+{\n+    FastRandomContext rng{/*fDeterministic=*/true};\n+    const auto data{rng.randbytes<std::byte>(1'000'000)};\n+\n+    const std::vector empty_key_bytes(8, std::byte{0}); // Test disabled xor\n+    uint64_t empty_key;\n+    std::memcpy(&empty_key, empty_key_bytes.data(), 8);\n+",
      "path": "src/bench/xor.cpp",
      "position": null,
      "original_position": 1062,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"bench: Make Xor benchmark more representative\" (caafbd069246848a8bdfc2f42fd1d692a824de94)\r\n\r\nAgain this looks like a nice place to replace these dual key representations with a clean XorKey value.",
      "created_at": "2024-12-11T00:05:19Z",
      "updated_at": "2024-12-11T01:17:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1879106378",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879106378"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 1061,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1064,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879125837",
      "pull_request_review_id": 2492769021,
      "id": 1879125837,
      "node_id": "PRRC_kwDOABII585wAS9N",
      "diff_hunk": "@@ -13,36 +13,64 @@\n \n #include <algorithm>\n #include <assert.h>\n+#include <crypto/common.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n+#include <util/check.h>\n \n namespace util {\n-inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n+inline void XorInt(Span<std::byte> write, const uint64_t key, const size_t size)",
      "path": "src/streams.h",
      "position": null,
      "original_position": 21,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "7a2e5ec97700584eeac6f8b08ef697df6a147606",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"optimization: Xor 64 bits together instead of byte-by-byte\" (7a2e5ec97700584eeac6f8b08ef697df6a147606)\r\n\r\nHaving this `size` parameter is confusing and seems unnecessary. This would be clearer as:\r\n\r\n```c++\r\ninline void XorInt(Span<std::byte> write, const uint64_t key)\r\n{\r\n    uint64_t raw = 0;\r\n    memcpy(&raw, write.data(), write.size());\r\n    raw ^= key;\r\n    memcpy(write.data(), &raw, write.size());\r\n}\r\n```\r\n\r\nCall sites would need to use .subspan(0, size) but this would also make them more obvious.",
      "created_at": "2024-12-11T00:17:43Z",
      "updated_at": "2024-12-11T03:04:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1879125837",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879125837"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879134657",
      "pull_request_review_id": 2492769021,
      "id": 1879134657,
      "node_id": "PRRC_kwDOABII585wAVHB",
      "diff_hunk": "@@ -13,36 +13,64 @@\n \n #include <algorithm>\n #include <assert.h>\n+#include <crypto/common.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n+#include <util/check.h>\n \n namespace util {\n-inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n+inline void XorInt(Span<std::byte> write, const uint64_t key, const size_t size)\n {\n-    if (key.size() == 0) {\n-        return;\n+    Assume(key);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 25,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "7a2e5ec97700584eeac6f8b08ef697df6a147606",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"optimization: Xor 64 bits together instead of byte-by-byte\" (7a2e5ec97700584eeac6f8b08ef697df6a147606)\r\n\r\nSeems like it would be less fragile and would simplify callers to replace this `Assume(key)` with `if (!key) return;`",
      "created_at": "2024-12-11T00:28:52Z",
      "updated_at": "2024-12-11T01:17:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1879134657",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879134657"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879140048",
      "pull_request_review_id": 2492769021,
      "id": 1879140048,
      "node_id": "PRRC_kwDOABII585wAWbQ",
      "diff_hunk": "@@ -255,23 +255,18 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n-\n-    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n-\n-    if (!key_exists && params.obfuscate && IsEmpty()) {\n-        // Initialize non-degenerate obfuscation if it won't upset\n-        // existing, non-obfuscated data.\n-        std::vector<unsigned char> new_key = CreateObfuscateKey();\n+    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000'); // Needed for unobfuscated Read\n+    const bool key_missing = !Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n+    if (key_missing && params.obfuscate && IsEmpty()) {\n+        // Initialize non-degenerate obfuscation if it won't upset existing, non-obfuscated data.\n+        const std::vector<unsigned char> new_key = CreateObfuscateKey();",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "7a2e5ec97700584eeac6f8b08ef697df6a147606",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"optimization: Xor 64 bits together instead of byte-by-byte\" (7a2e5ec97700584eeac6f8b08ef697df6a147606)\r\n\r\nI'm confused why this code is changing in this commit when it seems unrelated to the stream.h optimization the behavior seems the same as before? If it his is a refactoring cleanup it would be good to move it to a separate commit explaining that it is a refactoring and what the point of these changes may be.",
      "created_at": "2024-12-11T00:36:59Z",
      "updated_at": "2024-12-11T01:17:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1879140048",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879140048"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 258,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 262,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879145456",
      "pull_request_review_id": 2492769021,
      "id": 1879145456,
      "node_id": "PRRC_kwDOABII585wAXvw",
      "diff_hunk": "@@ -58,15 +58,16 @@ bool LoadMempool(CTxMemPool& pool, const fs::path& load_path, Chainstate& active\n     try {\n         uint64_t version;\n         file >> version;\n-        std::vector<std::byte> xor_key;\n         if (version == MEMPOOL_DUMP_VERSION_NO_XOR_KEY) {\n-            // Leave XOR-key empty\n+            const std::vector xor_key(sizeof(uint64_t), std::byte{'\\000'});",
      "path": "src/node/mempool_persist.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "7a2e5ec97700584eeac6f8b08ef697df6a147606",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"optimization: Xor 64 bits together instead of byte-by-byte\" (7a2e5ec97700584eeac6f8b08ef697df6a147606)\r\n\r\nAre all the changes in this file also a refactoring that don't change behavior? I don't understand why these changes are in a commit that is supposed to be optimizing stream.h behavior. Would suggest splitting this commit up and and explaining what purpose of these changes are. Maybe they would make more sense in the next commit so this code is not changing twice?",
      "created_at": "2024-12-11T00:42:39Z",
      "updated_at": "2024-12-11T01:17:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1879145456",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879145456"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880099777",
      "pull_request_review_id": 2495509142,
      "id": 1880099777,
      "node_id": "PRRC_kwDOABII585wEAvB",
      "diff_hunk": "@@ -13,36 +13,64 @@\n \n #include <algorithm>\n #include <assert.h>\n+#include <crypto/common.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n+#include <util/check.h>\n \n namespace util {\n-inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n+inline void XorInt(Span<std::byte> write, const uint64_t key, const size_t size)\n {\n-    if (key.size() == 0) {\n-        return;\n+    Assume(key);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 25,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "7a2e5ec97700584eeac6f8b08ef697df6a147606",
      "in_reply_to_id": 1879134657,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I could do that, but the `Assume` here was meant to make sure no calls get here when the key is 0 in the first place - since that can usually eliminate other work as well (e.g. `MakeWritableByteSpan` in `DataStream#Xor`)",
      "created_at": "2024-12-11T12:19:52Z",
      "updated_at": "2024-12-11T12:20:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1880099777",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880099777"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029901481",
      "pull_request_review_id": 2744926304,
      "id": 2029901481,
      "node_id": "PRRC_kwDOABII5854_dap",
      "diff_hunk": "@@ -225,29 +285,34 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Degenerate case\n     {\n         DataStream ds{in};\n-        ds.Xor({0x00, 0x00});\n+        ds.Xor(0);\n         BOOST_CHECK_EQUAL(\"\"s, ds.str());\n     }\n \n     in.push_back(std::byte{0x0f});\n     in.push_back(std::byte{0xf0});\n \n-    // Single character key\n     {\n+        const std::vector xor_pat{std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}, std::byte{0xff}};\n+        uint64_t xor_key;\n+        std::memcpy(&xor_key, xor_pat.data(), 8);\n+\n         DataStream ds{in};\n-        ds.Xor({0xff});\n+        ds.Xor(xor_key);\n         BOOST_CHECK_EQUAL(\"\\xf0\\x0f\"s, ds.str());\n     }\n \n-    // Multi character key\n-\n     in.clear();\n     in.push_back(std::byte{0xf0});\n     in.push_back(std::byte{0x0f});\n \n     {\n+        const std::vector xor_pat{std::byte{0xff}, std::byte{0x0f}, std::byte{0xff}, std::byte{0x0f}, std::byte{0xff}, std::byte{0x0f}, std::byte{0xff}, std::byte{0x0f}};\n+        uint64_t xor_key;\n+        std::memcpy(&xor_key, xor_pat.data(), 8);\n+\n         DataStream ds{in};\n-        ds.Xor({0xff, 0x0f});\n+        ds.Xor(xor_key);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 152,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": 1837161349,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Changed to:\r\n> const Obfuscation obfuscation{\"ff0fff0fff0fff0f\"_hex};",
      "created_at": "2025-04-05T15:46:26Z",
      "updated_at": "2025-04-05T15:46:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2029901481",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029901481"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 315,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029901819",
      "pull_request_review_id": 2744926616,
      "id": 2029901819,
      "node_id": "PRRC_kwDOABII5854_df7",
      "diff_hunk": "@@ -13,36 +13,53 @@\n \n #include <algorithm>\n #include <assert.h>\n+#include <crypto/common.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n-inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n+inline void XorInt(Span<std::byte> write, const uint64_t key, const size_t size)\n {\n-    if (key.size() == 0) {\n-        return;\n+    assert(size <= write.size());\n+    uint64_t raw = 0;\n+    memcpy(&raw, write.data(), size);\n+    raw ^= key;\n+    memcpy(write.data(), &raw, size);\n+}\n+inline void Xor(Span<std::byte> write, const uint64_t key)\n+{\n+    assert(key);\n+    for (; write.size() >= 8; write = write.subspan(8)) {\n+        XorInt(write, key, 8);\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n-\n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    switch (write.size()) { // Specify the optimization categories\n+    case 0: break;\n+    case 1: XorInt(write, key, 1); break;\n+    case 2: XorInt(write, key, 2); break;\n+    case 4: XorInt(write, key, 4); break;\n+    default: XorInt(write, key, write.size());",
      "path": "src/streams.h",
      "position": null,
      "original_position": 52,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "a1232973189126cfc9526713011461709685fcc8",
      "in_reply_to_id": 1837235546,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This isn't needed anymore, since https://github.com/bitcoin/bitcoin/pull/31551 will remove all those tiny writes",
      "created_at": "2025-04-05T15:48:07Z",
      "updated_at": "2025-04-05T15:48:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2029901819",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029901819"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 44,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029902454",
      "pull_request_review_id": 2744927204,
      "id": 2029902454,
      "node_id": "PRRC_kwDOABII5854_dp2",
      "diff_hunk": "@@ -1174,7 +1174,9 @@ static auto InitBlocksdirXorKey(const BlockManager::Options& opts)\n         };\n     }\n     LogInfo(\"Using obfuscation key for blocksdir *.dat files (%s): '%s'\\n\", fs::PathToString(opts.blocks_dir), HexStr(xor_key));\n-    return std::vector<std::byte>{xor_key.begin(), xor_key.end()};\n+    uint64_t key;\n+    std::memcpy(&key, xor_key.data(), sizeof key);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "in_reply_to_id": 1878083641,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The latest version uses a dedicated Obfuscation type - very good suggestion, it's a lot cleaner this way, thanks",
      "created_at": "2025-04-05T15:51:26Z",
      "updated_at": "2025-04-05T15:51:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2029902454",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029902454"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 1177,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1178,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029902488",
      "pull_request_review_id": 2744927244,
      "id": 2029902488,
      "node_id": "PRRC_kwDOABII5854_dqY",
      "diff_hunk": "@@ -14,13 +14,73 @@ using namespace std::string_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(xor_roundtrip_random_chunks)",
      "path": "src/test/streams_tests.cpp",
      "position": 9,
      "original_position": 4,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "e1074081c9f1895a4f629dfee347ceae484a10d3",
      "in_reply_to_id": 1878353972,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, thanks (though different-aligned is a consequence of different-sized)",
      "created_at": "2025-04-05T15:51:36Z",
      "updated_at": "2025-04-05T15:51:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2029902488",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029902488"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029902800",
      "pull_request_review_id": 2744927594,
      "id": 2029902800,
      "node_id": "PRRC_kwDOABII5854_dvQ",
      "diff_hunk": "@@ -7,18 +7,1069 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <cmath>\n #include <cstddef>\n+#include <map>\n #include <vector>\n \n-static void Xor(benchmark::Bench& bench)\n+static void XorHistogram(benchmark::Bench& bench)\n {\n-    FastRandomContext frc{/*fDeterministic=*/true};\n-    auto data{frc.randbytes<std::byte>(1024)};\n-    auto key{frc.randbytes<std::byte>(31)};\n+    // The top util::Xor method's [write.size(), frequency] calls for the IBD of the first 860k blocks",
      "path": "src/bench/xor.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "caafbd069246848a8bdfc2f42fd1d692a824de94",
      "in_reply_to_id": 1878491664,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This isn't needed anymore, since in https://github.com/bitcoin/bitcoin/pull/31551 we batch all the tiny calls now, so this PR only deals with doing the obfuscation on 64 bits",
      "created_at": "2025-04-05T15:53:38Z",
      "updated_at": "2025-04-05T15:53:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2029902800",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029902800"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029914224",
      "pull_request_review_id": 2744937611,
      "id": 2029914224,
      "node_id": "PRRC_kwDOABII5854_ghw",
      "diff_hunk": "@@ -58,15 +58,16 @@ bool LoadMempool(CTxMemPool& pool, const fs::path& load_path, Chainstate& active\n     try {\n         uint64_t version;\n         file >> version;\n-        std::vector<std::byte> xor_key;\n         if (version == MEMPOOL_DUMP_VERSION_NO_XOR_KEY) {\n-            // Leave XOR-key empty\n+            const std::vector xor_key(sizeof(uint64_t), std::byte{'\\000'});",
      "path": "src/node/mempool_persist.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "7a2e5ec97700584eeac6f8b08ef697df6a147606",
      "in_reply_to_id": 1879145456,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Now that we have a dedicated Obfuscation type these should be trivial now - let me know if you still think these should be split out to dedicated commits",
      "created_at": "2025-04-05T16:40:34Z",
      "updated_at": "2025-04-05T16:40:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2029914224",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029914224"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029914242",
      "pull_request_review_id": 2744937635,
      "id": 2029914242,
      "node_id": "PRRC_kwDOABII5854_giC",
      "diff_hunk": "@@ -255,23 +255,18 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n-\n-    bool key_exists = Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n-\n-    if (!key_exists && params.obfuscate && IsEmpty()) {\n-        // Initialize non-degenerate obfuscation if it won't upset\n-        // existing, non-obfuscated data.\n-        std::vector<unsigned char> new_key = CreateObfuscateKey();\n+    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000'); // Needed for unobfuscated Read\n+    const bool key_missing = !Read(OBFUSCATE_KEY_KEY, obfuscate_key);\n+    if (key_missing && params.obfuscate && IsEmpty()) {\n+        // Initialize non-degenerate obfuscation if it won't upset existing, non-obfuscated data.\n+        const std::vector<unsigned char> new_key = CreateObfuscateKey();",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "7a2e5ec97700584eeac6f8b08ef697df6a147606",
      "in_reply_to_id": 1879140048,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We can't write the obfuscation vector directly anymore (since we're storing an Obfuscation object now) and `Read` can only read into a vector, so this part needed a temp vector - which looks a bit awkward, indeed.\r\nSplit it out into a new commit, thanks for the hint!",
      "created_at": "2025-04-05T16:40:40Z",
      "updated_at": "2025-04-05T16:40:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2029914242",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029914242"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 258,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 262,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029914259",
      "pull_request_review_id": 2744937657,
      "id": 2029914259,
      "node_id": "PRRC_kwDOABII5854_giT",
      "diff_hunk": "@@ -13,36 +13,64 @@\n \n #include <algorithm>\n #include <assert.h>\n+#include <crypto/common.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n+#include <util/check.h>\n \n namespace util {\n-inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n+inline void XorInt(Span<std::byte> write, const uint64_t key, const size_t size)",
      "path": "src/streams.h",
      "position": null,
      "original_position": 21,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "7a2e5ec97700584eeac6f8b08ef697df6a147606",
      "in_reply_to_id": 1879125837,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This isn't needed anymore in the latest version",
      "created_at": "2025-04-05T16:40:44Z",
      "updated_at": "2025-04-05T16:40:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2029914259",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029914259"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029914271",
      "pull_request_review_id": 2744937676,
      "id": 2029914271,
      "node_id": "PRRC_kwDOABII5854_gif",
      "diff_hunk": "@@ -7,18 +7,1069 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <cmath>\n #include <cstddef>\n+#include <map>\n #include <vector>\n \n-static void Xor(benchmark::Bench& bench)\n+static void XorHistogram(benchmark::Bench& bench)\n {\n-    FastRandomContext frc{/*fDeterministic=*/true};\n-    auto data{frc.randbytes<std::byte>(1024)};\n-    auto key{frc.randbytes<std::byte>(31)};\n+    // The top util::Xor method's [write.size(), frequency] calls for the IBD of the first 860k blocks\n+    std::map<uint32_t, uint64_t> histogram{\n+        std::pair{1, 47584838861},\n+        std::pair{2, 155252857},\n+        std::pair{4, 14983070199},\n+        std::pair{7, 51354839},\n+        std::pair{8, 5939128629},\n+        std::pair{9, 16698793},\n+        std::pair{10, 27406144},\n+        std::pair{11, 3986792},\n+        std::pair{12, 3282613},\n+        std::pair{13, 314839},\n+        std::pair{14, 536980},\n+        std::pair{15, 1610643},\n+        std::pair{16, 542064},\n+        std::pair{17, 407345},\n+        std::pair{18, 261587},\n+        std::pair{19, 230151},\n+        std::pair{20, 339705},\n+        std::pair{21, 2019807250},\n+        std::pair{22, 1616301504},\n+        std::pair{23, 2357347372},\n+        std::pair{25, 2705183236},\n+        std::pair{26, 35870265},\n+        std::pair{27, 87057844},\n+        std::pair{28, 78184146},\n+        std::pair{29, 30858682},\n+        std::pair{30, 19197417},\n+        std::pair{31, 1579479},\n+        std::pair{32, 5369404406},\n+        std::pair{33, 2025696499},\n+        std::pair{34, 682781008},\n+        std::pair{35, 269339238},\n+        std::pair{36, 223445},\n+        std::pair{37, 41467794},\n+        std::pair{38, 1475762},\n+        std::pair{39, 6662400},\n+        std::pair{40, 50600412},\n+        std::pair{41, 5297315},\n+        std::pair{42, 3013707},\n+        std::pair{43, 443306},\n+        std::pair{44, 567194},\n+        std::pair{46, 111535},\n+        std::pair{47, 155071},\n+        std::pair{48, 1038788},\n+        std::pair{49, 101166},\n+        std::pair{53, 414677},\n+        std::pair{54, 42084},\n+        std::pair{55, 150863},\n+        std::pair{56, 694439},\n+        std::pair{58, 38884},\n+        std::pair{59, 69597},\n+        std::pair{60, 55155},\n+        std::pair{62, 64150},\n+        std::pair{63, 44837},\n+        std::pair{64, 275253628},\n+        std::pair{65, 29197009},\n+        std::pair{66, 463395},\n+        std::pair{67, 1807929},\n+        std::pair{68, 264550},\n+        std::pair{69, 1031048},\n+        std::pair{70, 12772097},\n+        std::pair{71, 1763349816},\n+        std::pair{72, 827712501},\n+        std::pair{73, 3835426},\n+        std::pair{74, 869472},\n+        std::pair{75, 538515},\n+        std::pair{76, 268232},\n+        std::pair{77, 1407359},\n+        std::pair{78, 2899481},\n+        std::pair{79, 672145},\n+        std::pair{80, 2240943},\n+        std::pair{81, 1142405},\n+        std::pair{82, 482636},\n+        std::pair{83, 53818260},\n+        std::pair{84, 551826},\n+        std::pair{85, 274521},\n+        std::pair{86, 191212},\n+        std::pair{87, 148744},\n+        std::pair{88, 798839},\n+        std::pair{89, 131754},\n+        std::pair{90, 181244},\n+        std::pair{91, 632574},\n+        std::pair{92, 54802},\n+        std::pair{93, 40008},\n+        std::pair{94, 58679},\n+        std::pair{95, 3986219},\n+        std::pair{96, 69872},\n+        std::pair{97, 836318},\n+        std::pair{98, 124792},\n+        std::pair{99, 228622},\n+        std::pair{100, 550755},\n+        std::pair{101, 70480},\n+        std::pair{102, 29036},\n+        std::pair{103, 134544},\n+        std::pair{104, 138387},\n+        std::pair{105, 198656556},\n+        std::pair{106, 1193555153},\n+        std::pair{107, 1064027363},\n+        std::pair{108, 24662023},\n+        std::pair{109, 7506161},\n+        std::pair{110, 1500218},\n+        std::pair{111, 2768082},\n+        std::pair{112, 3056669},\n+        std::pair{113, 17829712},\n+        std::pair{114, 9826401},\n+        std::pair{115, 409391},\n+        std::pair{116, 388988},\n+        std::pair{117, 199627},\n+        std::pair{118, 156933},\n+        std::pair{119, 266888},\n+        std::pair{120, 2215468},\n+        std::pair{121, 3735124},\n+        std::pair{122, 3221526},\n+        std::pair{123, 12986923},\n+        std::pair{124, 3039553},\n+        std::pair{125, 2378723},\n+        std::pair{126, 4080425},\n+        std::pair{127, 3993712},\n+        std::pair{128, 13323530},\n+        std::pair{129, 1404783},\n+        std::pair{130, 7111451},\n+        std::pair{131, 6398914},\n+        std::pair{132, 1574554},\n+        std::pair{133, 753121},\n+        std::pair{134, 995846},\n+        std::pair{135, 2299257},\n+        std::pair{136, 2841133},\n+        std::pair{137, 1432824},\n+        std::pair{138, 112918349},\n+        std::pair{139, 155158814},\n+        std::pair{140, 37826769},\n+        std::pair{141, 138259},\n+        std::pair{142, 228782},\n+        std::pair{143, 155226},\n+        std::pair{144, 523085},\n+        std::pair{145, 1043545},\n+        std::pair{146, 936776},\n+        std::pair{147, 135958},\n+        std::pair{148, 53477},\n+        std::pair{149, 85944},\n+        std::pair{150, 139591},\n+        std::pair{151, 51432},\n+        std::pair{152, 101719},\n+        std::pair{153, 71302},\n+        std::pair{154, 26873},\n+        std::pair{155, 150196},\n+        std::pair{156, 44863},\n+        std::pair{157, 81708},\n+        std::pair{158, 16245},\n+        std::pair{159, 16539},\n+        std::pair{160, 30363},\n+        std::pair{161, 19167},\n+        std::pair{163, 59580},\n+        std::pair{164, 247459},\n+        std::pair{165, 248525},\n+        std::pair{166, 56551},\n+        std::pair{167, 72096},\n+        std::pair{169, 80727},\n+        std::pair{170, 83764},\n+        std::pair{172, 42020},\n+        std::pair{173, 482585},\n+        std::pair{174, 63200},\n+        std::pair{175, 23018},\n+        std::pair{176, 29041},\n+        std::pair{177, 27504},\n+        std::pair{178, 162526},\n+        std::pair{179, 16034},\n+        std::pair{180, 54624},\n+        std::pair{181, 54459},\n+        std::pair{184, 24405},\n+        std::pair{186, 23024},\n+        std::pair{187, 156538},\n+        std::pair{188, 31919},\n+        std::pair{189, 53778},\n+        std::pair{190, 95945},\n+        std::pair{191, 91777},\n+        std::pair{192, 756282},\n+        std::pair{193, 130194},\n+        std::pair{194, 14765},\n+        std::pair{195, 19600},\n+        std::pair{196, 35530},\n+        std::pair{197, 18439},\n+        std::pair{198, 645343},\n+        std::pair{199, 49680},\n+        std::pair{200, 110974},\n+        std::pair{201, 192016},\n+        std::pair{202, 77989},\n+        std::pair{203, 97997},\n+        std::pair{204, 122473},\n+        std::pair{205, 197169},\n+        std::pair{206, 666763},\n+        std::pair{207, 125972},\n+        std::pair{208, 44187},\n+        std::pair{209, 63692},\n+        std::pair{210, 180094},\n+        std::pair{211, 78496},\n+        std::pair{212, 76417},\n+        std::pair{213, 48926},\n+        std::pair{214, 114383},\n+        std::pair{215, 82850},\n+        std::pair{216, 262811},\n+        std::pair{217, 13625647},\n+        std::pair{218, 25918921},\n+        std::pair{219, 12992432},\n+        std::pair{220, 108554},\n+        std::pair{221, 31243},\n+        std::pair{222, 29187},\n+        std::pair{223, 10083},\n+        std::pair{224, 22281},\n+        std::pair{225, 13950},\n+        std::pair{226, 31886},\n+        std::pair{227, 18084},\n+        std::pair{228, 14657},\n+        std::pair{229, 79168},\n+        std::pair{230, 15963},\n+        std::pair{231, 21742},\n+        std::pair{232, 11410},\n+        std::pair{233, 12367},\n+        std::pair{234, 15037},\n+        std::pair{235, 16192},\n+        std::pair{236, 25139},\n+        std::pair{237, 16192},\n+        std::pair{238, 18500},\n+        std::pair{239, 18810},\n+        std::pair{240, 38316},\n+        std::pair{241, 149042},\n+        std::pair{242, 24003},\n+        std::pair{243, 19104},\n+        std::pair{244, 15440},\n+        std::pair{245, 9379},\n+        std::pair{247, 9889},\n+        std::pair{248, 12683},\n+        std::pair{249, 85955},\n+        std::pair{250, 48511},\n+        std::pair{251, 746625},\n+        std::pair{252, 48105681},\n+        std::pair{253, 83729340},\n+        std::pair{254, 38940977},\n+        std::pair{255, 151929},\n+        std::pair{256, 28326},\n+        std::pair{257, 47575},\n+        std::pair{258, 25005},\n+        std::pair{259, 24940},\n+        std::pair{260, 37845},\n+        std::pair{261, 23197},\n+        std::pair{262, 34312},\n+        std::pair{263, 21453},\n+        std::pair{264, 55215},\n+        std::pair{267, 11005},\n+        std::pair{268, 40335},\n+        std::pair{269, 31338},\n+        std::pair{275, 8153},\n+        std::pair{278, 12014},\n+        std::pair{280, 19109},\n+        std::pair{282, 17085},\n+        std::pair{283, 27004},\n+        std::pair{284, 346378},\n+        std::pair{285, 342589},\n+        std::pair{286, 352838},\n+        std::pair{287, 343470},\n+        std::pair{288, 242657},\n+        std::pair{289, 13735},\n+        std::pair{290, 23228},\n+        std::pair{291, 22868},\n+        std::pair{296, 10044},\n+        std::pair{297, 67198},\n+        std::pair{298, 21992},\n+        std::pair{299, 28253},\n+        std::pair{302, 23977},\n+        std::pair{306, 17984},\n+        std::pair{307, 11476},\n+        std::pair{308, 7421},\n+        std::pair{309, 8469},\n+        std::pair{314, 11850},\n+        std::pair{315, 16052},\n+        std::pair{316, 25342},\n+        std::pair{317, 28064},\n+        std::pair{318, 20989},\n+        std::pair{319, 23071},\n+        std::pair{320, 48109},\n+        std::pair{321, 48075},\n+        std::pair{322, 25238},\n+        std::pair{323, 10398},\n+        std::pair{324, 37202},\n+        std::pair{325, 51911},\n+        std::pair{326, 39506},\n+        std::pair{327, 11413},\n+        std::pair{333, 13024},\n+        std::pair{334, 19214},\n+        std::pair{335, 28438},\n+        std::pair{337, 8269},\n+        std::pair{342, 13666},\n+        std::pair{344, 6944},\n+        std::pair{345, 7907},\n+        std::pair{347, 16630},\n+        std::pair{348, 593985},\n+        std::pair{349, 1130760},\n+        std::pair{350, 578492},\n+        std::pair{351, 14457},\n+        std::pair{352, 7764},\n+        std::pair{353, 9544},\n+        std::pair{354, 263313},\n+        std::pair{355, 513902},\n+        std::pair{356, 260735},\n+        std::pair{358, 36433},\n+        std::pair{359, 75013},\n+        std::pair{360, 78454},\n+        std::pair{361, 35048},\n+        std::pair{362, 9077},\n+        std::pair{363, 7329},\n+        std::pair{365, 6250},\n+        std::pair{366, 38768},\n+        std::pair{368, 6462},\n+        std::pair{370, 6695},\n+        std::pair{371, 6738},\n+        std::pair{372, 6741},\n+        std::pair{373, 6718},\n+        std::pair{374, 22779},\n+        std::pair{377, 15183},\n+        std::pair{378, 8535},\n+        std::pair{381, 9493},\n+        std::pair{383, 8045},\n+        std::pair{386, 9833},\n+        std::pair{388, 6020},\n+        std::pair{389, 6431},\n+        std::pair{390, 6042},\n+        std::pair{391, 12471},\n+        std::pair{392, 288555},\n+        std::pair{393, 805000},\n+        std::pair{394, 798675},\n+        std::pair{395, 268494},\n+        std::pair{402, 5731},\n+        std::pair{403, 8028},\n+        std::pair{404, 8535},\n+        std::pair{406, 5719},\n+        std::pair{408, 13451},\n+        std::pair{410, 7235},\n+        std::pair{412, 5798},\n+        std::pair{415, 9227},\n+        std::pair{416, 7012},\n+        std::pair{417, 6305},\n+        std::pair{418, 16208},\n+        std::pair{419, 5801},\n+        std::pair{422, 6460},\n+        std::pair{423, 14468},\n+        std::pair{424, 31198},\n+        std::pair{425, 6148},\n+        std::pair{426, 22403},\n+        std::pair{427, 30448},\n+        std::pair{428, 32413},\n+        std::pair{429, 14787},\n+        std::pair{430, 7622},\n+        std::pair{431, 5669},\n+        std::pair{432, 19538},\n+        std::pair{437, 9812},\n+        std::pair{438, 5234},\n+        std::pair{439, 5277},\n+        std::pair{440, 24196},\n+        std::pair{441, 5915},\n+        std::pair{442, 5495},\n+        std::pair{443, 5093},\n+        std::pair{444, 5122},\n+        std::pair{445, 7284},\n+        std::pair{452, 6373},\n+        std::pair{454, 14438},\n+        std::pair{458, 5345},\n+        std::pair{459, 9986},\n+        std::pair{460, 25818},\n+        std::pair{461, 46493},\n+        std::pair{462, 42770},\n+        std::pair{463, 15676},\n+        std::pair{464, 7848},\n+        std::pair{465, 10933},\n+        std::pair{466, 25088},\n+        std::pair{467, 8687},\n+        std::pair{468, 5129},\n+        std::pair{476, 6189},\n+        std::pair{478, 4757},\n+        std::pair{479, 4846},\n+        std::pair{480, 11673},\n+        std::pair{481, 7191},\n+        std::pair{482, 7809},\n+        std::pair{483, 6500},\n+        std::pair{484, 29549},\n+        std::pair{485, 5616},\n+        std::pair{486, 81135},\n+        std::pair{487, 1836899},\n+        std::pair{488, 4909014},\n+        std::pair{489, 4483016},\n+        std::pair{490, 1380253},\n+        std::pair{491, 6215},\n+        std::pair{492, 5690},\n+        std::pair{493, 6055},\n+        std::pair{494, 6152},\n+        std::pair{495, 7111},\n+        std::pair{496, 9440},\n+        std::pair{497, 8856},\n+        std::pair{498, 16635},\n+        std::pair{499, 23648},\n+        std::pair{500, 34100},\n+        std::pair{501, 28017},\n+        std::pair{502, 11328},\n+        std::pair{503, 6404},\n+        std::pair{504, 6609},\n+        std::pair{505, 5843},\n+        std::pair{506, 8391},\n+        std::pair{507, 6715},\n+        std::pair{508, 7718},\n+        std::pair{509, 7176},\n+        std::pair{510, 7907},\n+        std::pair{511, 7416},\n+        std::pair{512, 7470},\n+        std::pair{513, 8519},\n+        std::pair{514, 7539},\n+        std::pair{515, 8152},\n+        std::pair{516, 18214},\n+        std::pair{517, 7683},\n+        std::pair{518, 12525},\n+        std::pair{519, 8026},\n+        std::pair{520, 13074},\n+        std::pair{521, 9877},\n+        std::pair{522, 9724},\n+        std::pair{523, 8772},\n+        std::pair{524, 8703},\n+        std::pair{525, 8371},\n+        std::pair{526, 8736},\n+        std::pair{527, 14001},\n+        std::pair{528, 22842},\n+        std::pair{529, 8367},\n+        std::pair{530, 9047},\n+        std::pair{531, 9902},\n+        std::pair{532, 9660},\n+        std::pair{533, 10733},\n+        std::pair{534, 12872},\n+        std::pair{535, 11037},\n+        std::pair{536, 10538},\n+        std::pair{537, 9862},\n+        std::pair{538, 7955},\n+        std::pair{539, 6772},\n+        std::pair{540, 6423},\n+        std::pair{541, 7553},\n+        std::pair{542, 8321},\n+        std::pair{543, 8603},\n+        std::pair{544, 17988},\n+        std::pair{545, 6705},\n+        std::pair{546, 5722},\n+        std::pair{547, 6070},\n+        std::pair{548, 6433},\n+        std::pair{549, 5086},\n+        std::pair{550, 4713},\n+        std::pair{551, 4981},\n+        std::pair{552, 4844},\n+        std::pair{553, 7459},\n+        std::pair{554, 20596},\n+        std::pair{555, 15940},\n+        std::pair{556, 9479},\n+        std::pair{557, 5917},\n+        std::pair{558, 6102},\n+        std::pair{559, 5010},\n+        std::pair{560, 5632},\n+        std::pair{561, 8368},\n+        std::pair{562, 6829},\n+        std::pair{563, 5066},\n+        std::pair{564, 22671},\n+        std::pair{565, 8881},\n+        std::pair{566, 16467},\n+        std::pair{567, 11634},\n+        std::pair{568, 7651},\n+        std::pair{569, 5176},\n+        std::pair{570, 5142},\n+        std::pair{571, 5646},\n+        std::pair{572, 5332},\n+        std::pair{573, 5034},\n+        std::pair{574, 5830},\n+        std::pair{575, 6663},\n+        std::pair{576, 8678},\n+        std::pair{577, 11161},\n+        std::pair{578, 7151},\n+        std::pair{579, 5771},\n+        std::pair{580, 5632},\n+        std::pair{581, 4045},\n+        std::pair{594, 9095},\n+        std::pair{595, 10823},\n+        std::pair{596, 4297},\n+        std::pair{598, 3772},\n+        std::pair{599, 5252},\n+        std::pair{600, 3817},\n+        std::pair{602, 6147},\n+        std::pair{603, 7215},\n+        std::pair{604, 5307},\n+        std::pair{605, 3906},\n+        std::pair{606, 4662},\n+        std::pair{607, 13020},\n+        std::pair{610, 12640},\n+        std::pair{613, 5599},\n+        std::pair{615, 11544},\n+        std::pair{617, 3953},\n+        std::pair{619, 4334},\n+        std::pair{625, 6609},\n+        std::pair{626, 47564},\n+        std::pair{628, 69105},\n+        std::pair{632, 6420},\n+        std::pair{636, 3551},\n+        std::pair{641, 8516},\n+        std::pair{644, 3553},\n+        std::pair{645, 3661},\n+        std::pair{646, 3985},\n+        std::pair{647, 4859},\n+        std::pair{649, 4228},\n+        std::pair{651, 4285},\n+        std::pair{653, 3644},\n+        std::pair{661, 4369},\n+        std::pair{662, 5890},\n+        std::pair{663, 6778},\n+        std::pair{664, 10663},\n+        std::pair{670, 4289},\n+        std::pair{671, 4389},\n+        std::pair{672, 4262},\n+        std::pair{673, 3708},\n+        std::pair{674, 5386},\n+        std::pair{683, 8732},\n+        std::pair{686, 3687},\n+        std::pair{687, 5581},\n+        std::pair{688, 5593},\n+        std::pair{689, 4053},\n+        std::pair{692, 3318},\n+        std::pair{693, 3518},\n+        std::pair{694, 4205},\n+        std::pair{695, 4752},\n+        std::pair{696, 5331},\n+        std::pair{697, 5591},\n+        std::pair{698, 5968},\n+        std::pair{699, 5988},\n+        std::pair{700, 5381},\n+        std::pair{701, 4386},\n+        std::pair{702, 4465},\n+        std::pair{703, 3793},\n+        std::pair{704, 4394},\n+        std::pair{705, 3636},\n+        std::pair{707, 3691},\n+        std::pair{709, 3288},\n+        std::pair{711, 22844},\n+        std::pair{714, 3148},\n+        std::pair{717, 3239},\n+        std::pair{718, 4170},\n+        std::pair{719, 4739},\n+        std::pair{720, 3560},\n+        std::pair{721, 4730},\n+        std::pair{722, 4524},\n+        std::pair{724, 3741},\n+        std::pair{725, 10294},\n+        std::pair{729, 4879},\n+        std::pair{730, 8636},\n+        std::pair{732, 3064},\n+        std::pair{734, 23400},\n+        std::pair{736, 3542},\n+        std::pair{737, 3331},\n+        std::pair{738, 3238},\n+        std::pair{740, 3083},\n+        std::pair{741, 3032},\n+        std::pair{742, 4008},\n+        std::pair{744, 3277},\n+        std::pair{745, 3162},\n+        std::pair{746, 3178},\n+        std::pair{748, 3393},\n+        std::pair{749, 3352},\n+        std::pair{750, 3341},\n+        std::pair{751, 3716},\n+        std::pair{752, 4696},\n+        std::pair{753, 3265},\n+        std::pair{754, 3621},\n+        std::pair{755, 3734},\n+        std::pair{756, 3824},\n+        std::pair{757, 3535},\n+        std::pair{758, 4118},\n+        std::pair{759, 5714},\n+        std::pair{760, 4043},\n+        std::pair{761, 4628},\n+        std::pair{762, 3808},\n+        std::pair{763, 3684},\n+        std::pair{764, 3989},\n+        std::pair{765, 3638},\n+        std::pair{766, 4037},\n+        std::pair{767, 4227},\n+        std::pair{768, 3933},\n+        std::pair{769, 4183},\n+        std::pair{770, 5118},\n+        std::pair{771, 4493},\n+        std::pair{772, 4038},\n+        std::pair{773, 3737},\n+        std::pair{774, 3924},\n+        std::pair{775, 3603},\n+        std::pair{776, 3906},\n+        std::pair{777, 3614},\n+        std::pair{778, 3869},\n+        std::pair{779, 23482},\n+        std::pair{780, 3934},\n+        std::pair{781, 3869},\n+        std::pair{782, 3967},\n+        std::pair{783, 3762},\n+        std::pair{784, 8108},\n+        std::pair{785, 3788},\n+        std::pair{786, 3710},\n+        std::pair{787, 3368},\n+        std::pair{788, 4644},\n+        std::pair{789, 3431},\n+        std::pair{790, 3790},\n+        std::pair{791, 3494},\n+        std::pair{792, 63947},\n+        std::pair{793, 6288},\n+        std::pair{794, 5799},\n+        std::pair{795, 3683},\n+        std::pair{796, 3744},\n+        std::pair{797, 4760},\n+        std::pair{798, 4114},\n+        std::pair{799, 3219},\n+        std::pair{800, 3367},\n+        std::pair{801, 3624},\n+        std::pair{802, 3330},\n+        std::pair{803, 3176},\n+        std::pair{804, 3245},\n+        std::pair{805, 2876},\n+        std::pair{806, 3244},\n+        std::pair{807, 3080},\n+        std::pair{808, 3182},\n+        std::pair{809, 4043},\n+        std::pair{810, 3215},\n+        std::pair{811, 2813},\n+        std::pair{812, 3084},\n+        std::pair{814, 3276},\n+        std::pair{816, 29033},\n+        std::pair{817, 3045},\n+        std::pair{818, 3155},\n+        std::pair{822, 2758},\n+        std::pair{823, 2750},\n+        std::pair{824, 3491},\n+        std::pair{825, 3105},\n+        std::pair{826, 3058},\n+        std::pair{827, 3252},\n+        std::pair{830, 2795},\n+        std::pair{834, 2980},\n+        std::pair{837, 2934},\n+        std::pair{847, 2915},\n+        std::pair{849, 2906},\n+        std::pair{851, 2832},\n+        std::pair{852, 4775},\n+        std::pair{853, 5139},\n+        std::pair{854, 2891},\n+        std::pair{857, 12174},\n+        std::pair{860, 3804},\n+        std::pair{861, 3610},\n+        std::pair{868, 9452},\n+        std::pair{869, 3193},\n+        std::pair{870, 4421},\n+        std::pair{871, 2741},\n+        std::pair{872, 2658},\n+        std::pair{880, 5565},\n+        std::pair{881, 4822},\n+        std::pair{887, 7897},\n+        std::pair{889, 2571},\n+        std::pair{893, 2772},\n+        std::pair{899, 2902},\n+        std::pair{900, 2563},\n+        std::pair{908, 3615},\n+        std::pair{909, 3335},\n+        std::pair{914, 2471},\n+        std::pair{915, 3855},\n+        std::pair{929, 2669},\n+        std::pair{931, 2727},\n+        std::pair{932, 3965},\n+        std::pair{933, 3861},\n+        std::pair{947, 2497},\n+        std::pair{948, 3413},\n+        std::pair{956, 7964},\n+        std::pair{957, 4164},\n+        std::pair{958, 15318},\n+        std::pair{970, 4944},\n+        std::pair{973, 5329},\n+        std::pair{991, 4237},\n+        std::pair{1009, 2996},\n+        std::pair{1013, 2317},\n+        std::pair{1018, 2403},\n+        std::pair{1021, 2264},\n+        std::pair{1027, 2432},\n+        std::pair{1028, 3170},\n+        std::pair{1029, 2282},\n+        std::pair{1062, 2136},\n+        std::pair{1063, 6545},\n+        std::pair{1065, 3930},\n+        std::pair{1071, 2748},\n+        std::pair{1073, 4453},\n+        std::pair{1080, 2280},\n+        std::pair{1081, 2917},\n+        std::pair{1086, 38785},\n+        std::pair{1088, 8662},\n+        std::pair{1094, 5021},\n+        std::pair{1095, 2231},\n+        std::pair{1097, 2063},\n+        std::pair{1099, 2050},\n+        std::pair{1111, 17965},\n+        std::pair{1112, 2278},\n+        std::pair{1117, 4879},\n+        std::pair{1118, 2130},\n+        std::pair{1122, 2016},\n+        std::pair{1129, 3118},\n+        std::pair{1131, 5241},\n+        std::pair{1132, 2044},\n+        std::pair{1133, 7119},\n+        std::pair{1134, 8941},\n+        std::pair{1137, 2184},\n+        std::pair{1138, 2896},\n+        std::pair{1140, 9739},\n+        std::pair{1145, 5445},\n+        std::pair{1157, 7559},\n+        std::pair{1158, 2301},\n+        std::pair{1183, 2098},\n+        std::pair{1191, 5395},\n+        std::pair{1192, 4617},\n+        std::pair{1195, 5422},\n+        std::pair{1203, 2285},\n+        std::pair{1206, 3310},\n+        std::pair{1211, 2079},\n+        std::pair{1212, 5269},\n+        std::pair{1214, 19082},\n+        std::pair{1215, 1876},\n+        std::pair{1229, 2511},\n+        std::pair{1230, 2021},\n+        std::pair{1232, 19221},\n+        std::pair{1233, 2398},\n+        std::pair{1235, 2863},\n+        std::pair{1237, 2601},\n+        std::pair{1238, 1942},\n+        std::pair{1242, 1855},\n+        std::pair{1252, 1814},\n+        std::pair{1259, 8921},\n+        std::pair{1260, 2166},\n+        std::pair{1270, 2508},\n+        std::pair{1276, 1983},\n+        std::pair{1292, 2651},\n+        std::pair{1303, 2344},\n+        std::pair{1304, 1984},\n+        std::pair{1305, 2837},\n+        std::pair{1316, 1784},\n+        std::pair{1343, 2431},\n+        std::pair{1347, 40393},\n+        std::pair{1349, 2713},\n+        std::pair{1363, 20803},\n+        std::pair{1381, 1940},\n+        std::pair{1382, 1738},\n+        std::pair{1383, 1792},\n+        std::pair{1398, 1924},\n+        std::pair{1399, 2076},\n+        std::pair{1402, 3204},\n+        std::pair{1403, 4854},\n+        std::pair{1404, 4220},\n+        std::pair{1411, 1789},\n+        std::pair{1430, 2616},\n+        std::pair{1439, 1556},\n+        std::pair{1448, 2535},\n+        std::pair{1450, 1738},\n+        std::pair{1463, 2819},\n+        std::pair{1464, 3412},\n+        std::pair{1469, 2184},\n+        std::pair{1487, 1571},\n+        std::pair{1501, 3647},\n+        std::pair{1504, 1622},\n+        std::pair{1505, 1540},\n+        std::pair{1535, 3421},\n+        std::pair{1564, 2720},\n+        std::pair{1580, 1699},\n+        std::pair{1581, 5728},\n+        std::pair{1583, 2487},\n+        std::pair{1600, 1513},\n+        std::pair{1601, 1637},\n+        std::pair{1602, 1908},\n+        std::pair{1603, 1840},\n+        std::pair{1604, 2253},\n+        std::pair{1605, 2171},\n+        std::pair{1606, 2151},\n+        std::pair{1607, 2077},\n+        std::pair{1608, 2025},\n+        std::pair{1609, 1924},\n+        std::pair{1610, 1893},\n+        std::pair{1611, 1591},\n+        std::pair{1612, 1521},\n+        std::pair{1613, 1622},\n+        std::pair{1618, 1998},\n+        std::pair{1693, 7588},\n+        std::pair{1748, 1796},\n+        std::pair{1752, 1707},\n+        std::pair{1757, 2606},\n+        std::pair{1758, 3088},\n+        std::pair{1759, 1301},\n+        std::pair{1765, 2397},\n+        std::pair{1779, 1451},\n+        std::pair{1789, 1658},\n+        std::pair{1799, 1425},\n+        std::pair{1800, 1988},\n+        std::pair{1810, 1337},\n+        std::pair{1819, 1582},\n+        std::pair{1820, 1482},\n+        std::pair{1821, 1339},\n+        std::pair{1822, 1574},\n+        std::pair{1823, 1531},\n+        std::pair{1824, 1598},\n+        std::pair{1825, 1574},\n+        std::pair{1826, 1718},\n+        std::pair{1827, 1605},\n+        std::pair{1828, 1567},\n+        std::pair{1829, 1782},\n+        std::pair{1830, 1622},\n+        std::pair{1831, 1934},\n+        std::pair{1832, 1483},\n+        std::pair{1833, 1323},\n+        std::pair{1834, 1416},\n+        std::pair{1839, 1248},\n+        std::pair{1880, 1503},\n+        std::pair{1897, 2634},\n+        std::pair{1912, 1334},\n+        std::pair{1935, 1200},\n+        std::pair{1938, 1477},\n+        std::pair{1939, 1251},\n+        std::pair{1941, 1367},\n+        std::pair{1943, 2004},\n+        std::pair{1945, 1678},\n+        std::pair{1947, 1489},\n+        std::pair{1949, 1469},\n+        std::pair{1951, 1542},\n+        std::pair{1953, 1825},\n+        std::pair{1955, 1262},\n+        std::pair{1957, 1362},\n+        std::pair{1959, 1384},\n+        std::pair{1961, 1281},\n+        std::pair{1965, 1244},\n+        std::pair{1967, 1208},\n+        std::pair{2007, 1280},\n+        std::pair{2015, 1865},\n+        std::pair{2028, 1828},\n+        std::pair{2029, 1492},\n+        std::pair{2138, 1528},\n+        std::pair{2164, 1259},\n+        std::pair{2238, 2749},\n+        std::pair{2239, 1165},\n+        std::pair{2243, 1008},\n+        std::pair{2293, 1132},\n+        std::pair{2329, 1039},\n+        std::pair{2330, 1025},\n+        std::pair{2331, 968},\n+        std::pair{2434, 3310},\n+        std::pair{2439, 1241},\n+        std::pair{2665, 860},\n+        std::pair{2755, 1050},\n+        std::pair{2768, 863},\n+        std::pair{2784, 1633},\n+        std::pair{2791, 1140},\n+        std::pair{2873, 1881},\n+        std::pair{2973, 874},\n+        std::pair{2974, 1492},\n+        std::pair{3023, 825},\n+        std::pair{3097, 765},\n+        std::pair{3098, 1285},\n+        std::pair{3102, 1676},\n+        std::pair{3107, 1090},\n+        std::pair{3108, 782},\n+        std::pair{3124, 1695},\n+        std::pair{3134, 878},\n+        std::pair{3161, 1927},\n+        std::pair{3179, 843},\n+        std::pair{3245, 1628},\n+        std::pair{3249, 1787},\n+        std::pair{3268, 1275},\n+        std::pair{3293, 690},\n+        std::pair{3305, 1073},\n+        std::pair{3306, 1256},\n+        std::pair{3360, 2382},\n+        std::pair{3375, 688},\n+        std::pair{3418, 957},\n+        std::pair{3489, 953},\n+        std::pair{3529, 960},\n+        std::pair{3567, 714},\n+        std::pair{3586, 687},\n+        std::pair{3589, 679},\n+        std::pair{3718, 1482},\n+        std::pair{3729, 635},\n+        std::pair{3776, 693},\n+        std::pair{3779, 611},\n+        std::pair{3784, 1072},\n+        std::pair{3854, 1671},\n+        std::pair{3865, 609},\n+        std::pair{3932, 646},\n+        std::pair{3983, 569},\n+        std::pair{3990, 7442},\n+        std::pair{4007, 1967},\n+        std::pair{4022, 856},\n+        std::pair{4033, 600},\n+        std::pair{4096, 3905157},\n+        std::pair{4197, 854},\n+        std::pair{4201, 839},\n+        std::pair{4206, 1126},\n+        std::pair{4252, 940},\n+        std::pair{4573, 613},\n+        std::pair{4578, 3187},\n+        std::pair{4880, 4217},\n+        std::pair{5229, 503},\n+        std::pair{5662, 418},\n+        std::pair{6103, 629},\n+        std::pair{6111, 1099},\n+        std::pair{7230, 516},\n+        std::pair{7950, 1340},\n+        std::pair{9163, 349},\n+        std::pair{9425, 1030},\n+        std::pair{10626, 2763},\n+        std::pair{11910, 1120},\n+        std::pair{12322, 461},\n+        std::pair{12463, 218},\n+        std::pair{12647, 505},\n+        std::pair{12764, 251},\n+        std::pair{14821, 161},\n+        std::pair{16220, 266},\n+        std::pair{19421, 207},\n+        std::pair{22287, 112},\n+        std::pair{23659, 205},\n+        std::pair{29024, 112},\n+        std::pair{32311, 161},\n+        std::pair{33016, 101},\n+        std::pair{35830, 65},\n+        std::pair{37830, 134},\n+        std::pair{42651, 255},\n+        std::pair{51830, 62},\n+        std::pair{51975, 54},\n+        std::pair{58763, 48},\n+        std::pair{58957, 65},\n+        std::pair{58959, 190},\n+        std::pair{58968, 45},\n+        std::pair{59029, 91},\n+        std::pair{65973, 109},\n+        std::pair{67108, 51},\n+        std::pair{73348, 46},\n+        std::pair{73350, 56},\n+        std::pair{88154, 147},\n+        std::pair{93902, 252},\n+        std::pair{95844, 26},\n+        std::pair{95901, 6384},\n+        std::pair{105054, 160},\n+        std::pair{116108, 143},\n+        std::pair{116132, 28},\n+        std::pair{120562, 19},\n+        std::pair{129509, 21},\n+        std::pair{131887, 112},\n+        std::pair{134762, 66},\n+        std::pair{142727, 79},\n+        std::pair{156030, 20},\n+        std::pair{157030, 59},\n+        std::pair{158830, 19},\n+        std::pair{160030, 47},\n+        std::pair{161030, 27},\n+        std::pair{170730, 15},\n+        std::pair{172242, 48},\n+        std::pair{185416, 15},\n+        std::pair{188014, 34},\n+        std::pair{201064, 18},\n+        std::pair{201956, 308},\n+        std::pair{212447, 71},\n+        std::pair{238133, 11},\n+        std::pair{248911, 14},\n+        std::pair{263128, 382},\n+        std::pair{263715, 109},\n+        std::pair{263717, 64},\n+        std::pair{263826, 12},\n+        std::pair{264526, 14},\n+        std::pair{281222, 15},\n+        std::pair{296649, 20},\n+        std::pair{304568, 9},\n+        std::pair{313930, 10},\n+        std::pair{330734, 11},\n+        std::pair{360543, 9},\n+        std::pair{366453, 7},\n+        std::pair{376701, 7},\n+        std::pair{390618, 7},\n+        std::pair{393960, 13},\n+        std::pair{397614, 9},\n+        std::pair{3208728, 1},\n+        std::pair{3399235, 1},\n+        std::pair{3455039, 1},\n+        std::pair{3901276, 1},\n+        std::pair{3938182, 1},\n+        std::pair{3940737, 1},\n+        std::pair{3960783, 1},\n+        std::pair{3969293, 1},\n+        std::pair{3979245, 1},\n+        std::pair{3983549, 1},\n+        std::pair{3988760, 1},\n+        std::pair{3990061, 1},\n+        std::pair{3990887, 1},\n+        std::pair{3990916, 1},\n+        std::pair{3990944, 1},\n+        std::pair{3991041, 1},\n+        std::pair{3991516, 1},\n+        std::pair{3992188, 1},\n+        std::pair{3992381, 1},\n+        std::pair{3992470, 1},\n+    };\n \n+    constexpr auto scaling_factor{1'000'000U}; // Scale to this many occurrences of 1 byte vectors\n+    const uint64_t max_count{histogram[1]};\n+    assert(max_count == 47'584'838'861); // 1 byte vectors are most frequent\n+\n+    std::vector<std::vector<std::byte>> test_data;\n+    test_data.reserve(1'941'283);\n+\n+    FastRandomContext rng{/*fDeterministic=*/true};\n+    uint64_t total_bytes{0};\n+    for (const auto& [size, count] : histogram) {\n+        const size_t scaled_count{static_cast<size_t>(std::ceil(static_cast<double>(count) / max_count * scaling_factor))};\n+\n+        total_bytes += scaled_count * size;\n+        auto rand_bytes = rng.randbytes<std::byte>(size);\n+        for (size_t j{0}; j < scaled_count; ++j) {\n+            test_data.emplace_back(rand_bytes);\n+        }\n+    }\n+    assert(total_bytes == 114'929'502);\n+\n+    std::ranges::shuffle(test_data, rng); // Make it more realistic & less predictable\n+\n+    std::vector key_bytes{rng.randbytes<std::byte>(8)};\n+    uint64_t key;\n+    std::memcpy(&key, key_bytes.data(), 8);\n+\n+    size_t offset{0};\n+    bench.batch(total_bytes).unit(\"byte\").run([&] {\n+        for (auto& data : test_data) {\n+            util::Xor(data, key, offset++);\n+        }\n+        ankerl::nanobench::doNotOptimizeAway(test_data);\n+    });\n+}\n+\n+static void AutoFileXor(benchmark::Bench& bench)\n+{\n+    FastRandomContext rng{/*fDeterministic=*/true};\n+    const auto data{rng.randbytes<std::byte>(1'000'000)};\n+\n+    const std::vector empty_key_bytes(8, std::byte{0}); // Test disabled xor\n+    uint64_t empty_key;\n+    std::memcpy(&empty_key, empty_key_bytes.data(), 8);\n+",
      "path": "src/bench/xor.cpp",
      "position": null,
      "original_position": 1062,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "b9c847fd093d100628817af98fe837db938160f7",
      "in_reply_to_id": 1879106378,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, this was done in the last commit",
      "created_at": "2025-04-05T16:40:48Z",
      "updated_at": "2025-04-05T16:40:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2029914271",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029914271"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 1061,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1064,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029914278",
      "pull_request_review_id": 2744937688,
      "id": 2029914278,
      "node_id": "PRRC_kwDOABII5854_gim",
      "diff_hunk": "@@ -7,18 +7,1069 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <cmath>\n #include <cstddef>\n+#include <map>\n #include <vector>\n \n-static void Xor(benchmark::Bench& bench)\n+static void XorHistogram(benchmark::Bench& bench)\n {\n-    FastRandomContext frc{/*fDeterministic=*/true};\n-    auto data{frc.randbytes<std::byte>(1024)};\n-    auto key{frc.randbytes<std::byte>(31)};\n+    // The top util::Xor method's [write.size(), frequency] calls for the IBD of the first 860k blocks\n+    std::map<uint32_t, uint64_t> histogram{\n+        std::pair{1, 47584838861},\n+        std::pair{2, 155252857},\n+        std::pair{4, 14983070199},\n+        std::pair{7, 51354839},\n+        std::pair{8, 5939128629},\n+        std::pair{9, 16698793},\n+        std::pair{10, 27406144},\n+        std::pair{11, 3986792},\n+        std::pair{12, 3282613},\n+        std::pair{13, 314839},\n+        std::pair{14, 536980},\n+        std::pair{15, 1610643},\n+        std::pair{16, 542064},\n+        std::pair{17, 407345},\n+        std::pair{18, 261587},\n+        std::pair{19, 230151},\n+        std::pair{20, 339705},\n+        std::pair{21, 2019807250},\n+        std::pair{22, 1616301504},\n+        std::pair{23, 2357347372},\n+        std::pair{25, 2705183236},\n+        std::pair{26, 35870265},\n+        std::pair{27, 87057844},\n+        std::pair{28, 78184146},\n+        std::pair{29, 30858682},\n+        std::pair{30, 19197417},\n+        std::pair{31, 1579479},\n+        std::pair{32, 5369404406},\n+        std::pair{33, 2025696499},\n+        std::pair{34, 682781008},\n+        std::pair{35, 269339238},\n+        std::pair{36, 223445},\n+        std::pair{37, 41467794},\n+        std::pair{38, 1475762},\n+        std::pair{39, 6662400},\n+        std::pair{40, 50600412},\n+        std::pair{41, 5297315},\n+        std::pair{42, 3013707},\n+        std::pair{43, 443306},\n+        std::pair{44, 567194},\n+        std::pair{46, 111535},\n+        std::pair{47, 155071},\n+        std::pair{48, 1038788},\n+        std::pair{49, 101166},\n+        std::pair{53, 414677},\n+        std::pair{54, 42084},\n+        std::pair{55, 150863},\n+        std::pair{56, 694439},\n+        std::pair{58, 38884},\n+        std::pair{59, 69597},\n+        std::pair{60, 55155},\n+        std::pair{62, 64150},\n+        std::pair{63, 44837},\n+        std::pair{64, 275253628},\n+        std::pair{65, 29197009},\n+        std::pair{66, 463395},\n+        std::pair{67, 1807929},\n+        std::pair{68, 264550},\n+        std::pair{69, 1031048},\n+        std::pair{70, 12772097},\n+        std::pair{71, 1763349816},\n+        std::pair{72, 827712501},\n+        std::pair{73, 3835426},\n+        std::pair{74, 869472},\n+        std::pair{75, 538515},\n+        std::pair{76, 268232},\n+        std::pair{77, 1407359},\n+        std::pair{78, 2899481},\n+        std::pair{79, 672145},\n+        std::pair{80, 2240943},\n+        std::pair{81, 1142405},\n+        std::pair{82, 482636},\n+        std::pair{83, 53818260},\n+        std::pair{84, 551826},\n+        std::pair{85, 274521},\n+        std::pair{86, 191212},\n+        std::pair{87, 148744},\n+        std::pair{88, 798839},\n+        std::pair{89, 131754},\n+        std::pair{90, 181244},\n+        std::pair{91, 632574},\n+        std::pair{92, 54802},\n+        std::pair{93, 40008},\n+        std::pair{94, 58679},\n+        std::pair{95, 3986219},\n+        std::pair{96, 69872},\n+        std::pair{97, 836318},\n+        std::pair{98, 124792},\n+        std::pair{99, 228622},\n+        std::pair{100, 550755},\n+        std::pair{101, 70480},\n+        std::pair{102, 29036},\n+        std::pair{103, 134544},\n+        std::pair{104, 138387},\n+        std::pair{105, 198656556},\n+        std::pair{106, 1193555153},\n+        std::pair{107, 1064027363},\n+        std::pair{108, 24662023},\n+        std::pair{109, 7506161},\n+        std::pair{110, 1500218},\n+        std::pair{111, 2768082},\n+        std::pair{112, 3056669},\n+        std::pair{113, 17829712},\n+        std::pair{114, 9826401},\n+        std::pair{115, 409391},\n+        std::pair{116, 388988},\n+        std::pair{117, 199627},\n+        std::pair{118, 156933},\n+        std::pair{119, 266888},\n+        std::pair{120, 2215468},\n+        std::pair{121, 3735124},\n+        std::pair{122, 3221526},\n+        std::pair{123, 12986923},\n+        std::pair{124, 3039553},\n+        std::pair{125, 2378723},\n+        std::pair{126, 4080425},\n+        std::pair{127, 3993712},\n+        std::pair{128, 13323530},\n+        std::pair{129, 1404783},\n+        std::pair{130, 7111451},\n+        std::pair{131, 6398914},\n+        std::pair{132, 1574554},\n+        std::pair{133, 753121},\n+        std::pair{134, 995846},\n+        std::pair{135, 2299257},\n+        std::pair{136, 2841133},\n+        std::pair{137, 1432824},\n+        std::pair{138, 112918349},\n+        std::pair{139, 155158814},\n+        std::pair{140, 37826769},\n+        std::pair{141, 138259},\n+        std::pair{142, 228782},\n+        std::pair{143, 155226},\n+        std::pair{144, 523085},\n+        std::pair{145, 1043545},\n+        std::pair{146, 936776},\n+        std::pair{147, 135958},\n+        std::pair{148, 53477},\n+        std::pair{149, 85944},\n+        std::pair{150, 139591},\n+        std::pair{151, 51432},\n+        std::pair{152, 101719},\n+        std::pair{153, 71302},\n+        std::pair{154, 26873},\n+        std::pair{155, 150196},\n+        std::pair{156, 44863},\n+        std::pair{157, 81708},\n+        std::pair{158, 16245},\n+        std::pair{159, 16539},\n+        std::pair{160, 30363},\n+        std::pair{161, 19167},\n+        std::pair{163, 59580},\n+        std::pair{164, 247459},\n+        std::pair{165, 248525},\n+        std::pair{166, 56551},\n+        std::pair{167, 72096},\n+        std::pair{169, 80727},\n+        std::pair{170, 83764},\n+        std::pair{172, 42020},\n+        std::pair{173, 482585},\n+        std::pair{174, 63200},\n+        std::pair{175, 23018},\n+        std::pair{176, 29041},\n+        std::pair{177, 27504},\n+        std::pair{178, 162526},\n+        std::pair{179, 16034},\n+        std::pair{180, 54624},\n+        std::pair{181, 54459},\n+        std::pair{184, 24405},\n+        std::pair{186, 23024},\n+        std::pair{187, 156538},\n+        std::pair{188, 31919},\n+        std::pair{189, 53778},\n+        std::pair{190, 95945},\n+        std::pair{191, 91777},\n+        std::pair{192, 756282},\n+        std::pair{193, 130194},\n+        std::pair{194, 14765},\n+        std::pair{195, 19600},\n+        std::pair{196, 35530},\n+        std::pair{197, 18439},\n+        std::pair{198, 645343},\n+        std::pair{199, 49680},\n+        std::pair{200, 110974},\n+        std::pair{201, 192016},\n+        std::pair{202, 77989},\n+        std::pair{203, 97997},\n+        std::pair{204, 122473},\n+        std::pair{205, 197169},\n+        std::pair{206, 666763},\n+        std::pair{207, 125972},\n+        std::pair{208, 44187},\n+        std::pair{209, 63692},\n+        std::pair{210, 180094},\n+        std::pair{211, 78496},\n+        std::pair{212, 76417},\n+        std::pair{213, 48926},\n+        std::pair{214, 114383},\n+        std::pair{215, 82850},\n+        std::pair{216, 262811},\n+        std::pair{217, 13625647},\n+        std::pair{218, 25918921},\n+        std::pair{219, 12992432},\n+        std::pair{220, 108554},\n+        std::pair{221, 31243},\n+        std::pair{222, 29187},\n+        std::pair{223, 10083},\n+        std::pair{224, 22281},\n+        std::pair{225, 13950},\n+        std::pair{226, 31886},\n+        std::pair{227, 18084},\n+        std::pair{228, 14657},\n+        std::pair{229, 79168},\n+        std::pair{230, 15963},\n+        std::pair{231, 21742},\n+        std::pair{232, 11410},\n+        std::pair{233, 12367},\n+        std::pair{234, 15037},\n+        std::pair{235, 16192},\n+        std::pair{236, 25139},\n+        std::pair{237, 16192},\n+        std::pair{238, 18500},\n+        std::pair{239, 18810},\n+        std::pair{240, 38316},\n+        std::pair{241, 149042},\n+        std::pair{242, 24003},\n+        std::pair{243, 19104},\n+        std::pair{244, 15440},\n+        std::pair{245, 9379},\n+        std::pair{247, 9889},\n+        std::pair{248, 12683},\n+        std::pair{249, 85955},\n+        std::pair{250, 48511},\n+        std::pair{251, 746625},\n+        std::pair{252, 48105681},\n+        std::pair{253, 83729340},\n+        std::pair{254, 38940977},\n+        std::pair{255, 151929},\n+        std::pair{256, 28326},\n+        std::pair{257, 47575},\n+        std::pair{258, 25005},\n+        std::pair{259, 24940},\n+        std::pair{260, 37845},\n+        std::pair{261, 23197},\n+        std::pair{262, 34312},\n+        std::pair{263, 21453},\n+        std::pair{264, 55215},\n+        std::pair{267, 11005},\n+        std::pair{268, 40335},\n+        std::pair{269, 31338},\n+        std::pair{275, 8153},\n+        std::pair{278, 12014},\n+        std::pair{280, 19109},\n+        std::pair{282, 17085},\n+        std::pair{283, 27004},\n+        std::pair{284, 346378},\n+        std::pair{285, 342589},\n+        std::pair{286, 352838},\n+        std::pair{287, 343470},\n+        std::pair{288, 242657},\n+        std::pair{289, 13735},\n+        std::pair{290, 23228},\n+        std::pair{291, 22868},\n+        std::pair{296, 10044},\n+        std::pair{297, 67198},\n+        std::pair{298, 21992},\n+        std::pair{299, 28253},\n+        std::pair{302, 23977},\n+        std::pair{306, 17984},\n+        std::pair{307, 11476},\n+        std::pair{308, 7421},\n+        std::pair{309, 8469},\n+        std::pair{314, 11850},\n+        std::pair{315, 16052},\n+        std::pair{316, 25342},\n+        std::pair{317, 28064},\n+        std::pair{318, 20989},\n+        std::pair{319, 23071},\n+        std::pair{320, 48109},\n+        std::pair{321, 48075},\n+        std::pair{322, 25238},\n+        std::pair{323, 10398},\n+        std::pair{324, 37202},\n+        std::pair{325, 51911},\n+        std::pair{326, 39506},\n+        std::pair{327, 11413},\n+        std::pair{333, 13024},\n+        std::pair{334, 19214},\n+        std::pair{335, 28438},\n+        std::pair{337, 8269},\n+        std::pair{342, 13666},\n+        std::pair{344, 6944},\n+        std::pair{345, 7907},\n+        std::pair{347, 16630},\n+        std::pair{348, 593985},\n+        std::pair{349, 1130760},\n+        std::pair{350, 578492},\n+        std::pair{351, 14457},\n+        std::pair{352, 7764},\n+        std::pair{353, 9544},\n+        std::pair{354, 263313},\n+        std::pair{355, 513902},\n+        std::pair{356, 260735},\n+        std::pair{358, 36433},\n+        std::pair{359, 75013},\n+        std::pair{360, 78454},\n+        std::pair{361, 35048},\n+        std::pair{362, 9077},\n+        std::pair{363, 7329},\n+        std::pair{365, 6250},\n+        std::pair{366, 38768},\n+        std::pair{368, 6462},\n+        std::pair{370, 6695},\n+        std::pair{371, 6738},\n+        std::pair{372, 6741},\n+        std::pair{373, 6718},\n+        std::pair{374, 22779},\n+        std::pair{377, 15183},\n+        std::pair{378, 8535},\n+        std::pair{381, 9493},\n+        std::pair{383, 8045},\n+        std::pair{386, 9833},\n+        std::pair{388, 6020},\n+        std::pair{389, 6431},\n+        std::pair{390, 6042},\n+        std::pair{391, 12471},\n+        std::pair{392, 288555},\n+        std::pair{393, 805000},\n+        std::pair{394, 798675},\n+        std::pair{395, 268494},\n+        std::pair{402, 5731},\n+        std::pair{403, 8028},\n+        std::pair{404, 8535},\n+        std::pair{406, 5719},\n+        std::pair{408, 13451},\n+        std::pair{410, 7235},\n+        std::pair{412, 5798},\n+        std::pair{415, 9227},\n+        std::pair{416, 7012},\n+        std::pair{417, 6305},\n+        std::pair{418, 16208},\n+        std::pair{419, 5801},\n+        std::pair{422, 6460},\n+        std::pair{423, 14468},\n+        std::pair{424, 31198},\n+        std::pair{425, 6148},\n+        std::pair{426, 22403},\n+        std::pair{427, 30448},\n+        std::pair{428, 32413},\n+        std::pair{429, 14787},\n+        std::pair{430, 7622},\n+        std::pair{431, 5669},\n+        std::pair{432, 19538},\n+        std::pair{437, 9812},\n+        std::pair{438, 5234},\n+        std::pair{439, 5277},\n+        std::pair{440, 24196},\n+        std::pair{441, 5915},\n+        std::pair{442, 5495},\n+        std::pair{443, 5093},\n+        std::pair{444, 5122},\n+        std::pair{445, 7284},\n+        std::pair{452, 6373},\n+        std::pair{454, 14438},\n+        std::pair{458, 5345},\n+        std::pair{459, 9986},\n+        std::pair{460, 25818},\n+        std::pair{461, 46493},\n+        std::pair{462, 42770},\n+        std::pair{463, 15676},\n+        std::pair{464, 7848},\n+        std::pair{465, 10933},\n+        std::pair{466, 25088},\n+        std::pair{467, 8687},\n+        std::pair{468, 5129},\n+        std::pair{476, 6189},\n+        std::pair{478, 4757},\n+        std::pair{479, 4846},\n+        std::pair{480, 11673},\n+        std::pair{481, 7191},\n+        std::pair{482, 7809},\n+        std::pair{483, 6500},\n+        std::pair{484, 29549},\n+        std::pair{485, 5616},\n+        std::pair{486, 81135},\n+        std::pair{487, 1836899},\n+        std::pair{488, 4909014},\n+        std::pair{489, 4483016},\n+        std::pair{490, 1380253},\n+        std::pair{491, 6215},\n+        std::pair{492, 5690},\n+        std::pair{493, 6055},\n+        std::pair{494, 6152},\n+        std::pair{495, 7111},\n+        std::pair{496, 9440},\n+        std::pair{497, 8856},\n+        std::pair{498, 16635},\n+        std::pair{499, 23648},\n+        std::pair{500, 34100},\n+        std::pair{501, 28017},\n+        std::pair{502, 11328},\n+        std::pair{503, 6404},\n+        std::pair{504, 6609},\n+        std::pair{505, 5843},\n+        std::pair{506, 8391},\n+        std::pair{507, 6715},\n+        std::pair{508, 7718},\n+        std::pair{509, 7176},\n+        std::pair{510, 7907},\n+        std::pair{511, 7416},\n+        std::pair{512, 7470},\n+        std::pair{513, 8519},\n+        std::pair{514, 7539},\n+        std::pair{515, 8152},\n+        std::pair{516, 18214},\n+        std::pair{517, 7683},\n+        std::pair{518, 12525},\n+        std::pair{519, 8026},\n+        std::pair{520, 13074},\n+        std::pair{521, 9877},\n+        std::pair{522, 9724},\n+        std::pair{523, 8772},\n+        std::pair{524, 8703},\n+        std::pair{525, 8371},\n+        std::pair{526, 8736},\n+        std::pair{527, 14001},\n+        std::pair{528, 22842},\n+        std::pair{529, 8367},\n+        std::pair{530, 9047},\n+        std::pair{531, 9902},\n+        std::pair{532, 9660},\n+        std::pair{533, 10733},\n+        std::pair{534, 12872},\n+        std::pair{535, 11037},\n+        std::pair{536, 10538},\n+        std::pair{537, 9862},\n+        std::pair{538, 7955},\n+        std::pair{539, 6772},\n+        std::pair{540, 6423},\n+        std::pair{541, 7553},\n+        std::pair{542, 8321},\n+        std::pair{543, 8603},\n+        std::pair{544, 17988},\n+        std::pair{545, 6705},\n+        std::pair{546, 5722},\n+        std::pair{547, 6070},\n+        std::pair{548, 6433},\n+        std::pair{549, 5086},\n+        std::pair{550, 4713},\n+        std::pair{551, 4981},\n+        std::pair{552, 4844},\n+        std::pair{553, 7459},\n+        std::pair{554, 20596},\n+        std::pair{555, 15940},\n+        std::pair{556, 9479},\n+        std::pair{557, 5917},\n+        std::pair{558, 6102},\n+        std::pair{559, 5010},\n+        std::pair{560, 5632},\n+        std::pair{561, 8368},\n+        std::pair{562, 6829},\n+        std::pair{563, 5066},\n+        std::pair{564, 22671},\n+        std::pair{565, 8881},\n+        std::pair{566, 16467},\n+        std::pair{567, 11634},\n+        std::pair{568, 7651},\n+        std::pair{569, 5176},\n+        std::pair{570, 5142},\n+        std::pair{571, 5646},\n+        std::pair{572, 5332},\n+        std::pair{573, 5034},\n+        std::pair{574, 5830},\n+        std::pair{575, 6663},\n+        std::pair{576, 8678},\n+        std::pair{577, 11161},\n+        std::pair{578, 7151},\n+        std::pair{579, 5771},\n+        std::pair{580, 5632},\n+        std::pair{581, 4045},\n+        std::pair{594, 9095},\n+        std::pair{595, 10823},\n+        std::pair{596, 4297},\n+        std::pair{598, 3772},\n+        std::pair{599, 5252},\n+        std::pair{600, 3817},\n+        std::pair{602, 6147},\n+        std::pair{603, 7215},\n+        std::pair{604, 5307},\n+        std::pair{605, 3906},\n+        std::pair{606, 4662},\n+        std::pair{607, 13020},\n+        std::pair{610, 12640},\n+        std::pair{613, 5599},\n+        std::pair{615, 11544},\n+        std::pair{617, 3953},\n+        std::pair{619, 4334},\n+        std::pair{625, 6609},\n+        std::pair{626, 47564},\n+        std::pair{628, 69105},\n+        std::pair{632, 6420},\n+        std::pair{636, 3551},\n+        std::pair{641, 8516},\n+        std::pair{644, 3553},\n+        std::pair{645, 3661},\n+        std::pair{646, 3985},\n+        std::pair{647, 4859},\n+        std::pair{649, 4228},\n+        std::pair{651, 4285},\n+        std::pair{653, 3644},\n+        std::pair{661, 4369},\n+        std::pair{662, 5890},\n+        std::pair{663, 6778},\n+        std::pair{664, 10663},\n+        std::pair{670, 4289},\n+        std::pair{671, 4389},\n+        std::pair{672, 4262},\n+        std::pair{673, 3708},\n+        std::pair{674, 5386},\n+        std::pair{683, 8732},\n+        std::pair{686, 3687},\n+        std::pair{687, 5581},\n+        std::pair{688, 5593},\n+        std::pair{689, 4053},\n+        std::pair{692, 3318},\n+        std::pair{693, 3518},\n+        std::pair{694, 4205},\n+        std::pair{695, 4752},\n+        std::pair{696, 5331},\n+        std::pair{697, 5591},\n+        std::pair{698, 5968},\n+        std::pair{699, 5988},\n+        std::pair{700, 5381},\n+        std::pair{701, 4386},\n+        std::pair{702, 4465},\n+        std::pair{703, 3793},\n+        std::pair{704, 4394},\n+        std::pair{705, 3636},\n+        std::pair{707, 3691},\n+        std::pair{709, 3288},\n+        std::pair{711, 22844},\n+        std::pair{714, 3148},\n+        std::pair{717, 3239},\n+        std::pair{718, 4170},\n+        std::pair{719, 4739},\n+        std::pair{720, 3560},\n+        std::pair{721, 4730},\n+        std::pair{722, 4524},\n+        std::pair{724, 3741},\n+        std::pair{725, 10294},\n+        std::pair{729, 4879},\n+        std::pair{730, 8636},\n+        std::pair{732, 3064},\n+        std::pair{734, 23400},\n+        std::pair{736, 3542},\n+        std::pair{737, 3331},\n+        std::pair{738, 3238},\n+        std::pair{740, 3083},\n+        std::pair{741, 3032},\n+        std::pair{742, 4008},\n+        std::pair{744, 3277},\n+        std::pair{745, 3162},\n+        std::pair{746, 3178},\n+        std::pair{748, 3393},\n+        std::pair{749, 3352},\n+        std::pair{750, 3341},\n+        std::pair{751, 3716},\n+        std::pair{752, 4696},\n+        std::pair{753, 3265},\n+        std::pair{754, 3621},\n+        std::pair{755, 3734},\n+        std::pair{756, 3824},\n+        std::pair{757, 3535},\n+        std::pair{758, 4118},\n+        std::pair{759, 5714},\n+        std::pair{760, 4043},\n+        std::pair{761, 4628},\n+        std::pair{762, 3808},\n+        std::pair{763, 3684},\n+        std::pair{764, 3989},\n+        std::pair{765, 3638},\n+        std::pair{766, 4037},\n+        std::pair{767, 4227},\n+        std::pair{768, 3933},\n+        std::pair{769, 4183},\n+        std::pair{770, 5118},\n+        std::pair{771, 4493},\n+        std::pair{772, 4038},\n+        std::pair{773, 3737},\n+        std::pair{774, 3924},\n+        std::pair{775, 3603},\n+        std::pair{776, 3906},\n+        std::pair{777, 3614},\n+        std::pair{778, 3869},\n+        std::pair{779, 23482},\n+        std::pair{780, 3934},\n+        std::pair{781, 3869},\n+        std::pair{782, 3967},\n+        std::pair{783, 3762},\n+        std::pair{784, 8108},\n+        std::pair{785, 3788},\n+        std::pair{786, 3710},\n+        std::pair{787, 3368},\n+        std::pair{788, 4644},\n+        std::pair{789, 3431},\n+        std::pair{790, 3790},\n+        std::pair{791, 3494},\n+        std::pair{792, 63947},\n+        std::pair{793, 6288},\n+        std::pair{794, 5799},\n+        std::pair{795, 3683},\n+        std::pair{796, 3744},\n+        std::pair{797, 4760},\n+        std::pair{798, 4114},\n+        std::pair{799, 3219},\n+        std::pair{800, 3367},\n+        std::pair{801, 3624},\n+        std::pair{802, 3330},\n+        std::pair{803, 3176},\n+        std::pair{804, 3245},\n+        std::pair{805, 2876},\n+        std::pair{806, 3244},\n+        std::pair{807, 3080},\n+        std::pair{808, 3182},\n+        std::pair{809, 4043},\n+        std::pair{810, 3215},\n+        std::pair{811, 2813},\n+        std::pair{812, 3084},\n+        std::pair{814, 3276},\n+        std::pair{816, 29033},\n+        std::pair{817, 3045},\n+        std::pair{818, 3155},\n+        std::pair{822, 2758},\n+        std::pair{823, 2750},\n+        std::pair{824, 3491},\n+        std::pair{825, 3105},\n+        std::pair{826, 3058},\n+        std::pair{827, 3252},\n+        std::pair{830, 2795},\n+        std::pair{834, 2980},\n+        std::pair{837, 2934},\n+        std::pair{847, 2915},\n+        std::pair{849, 2906},\n+        std::pair{851, 2832},\n+        std::pair{852, 4775},\n+        std::pair{853, 5139},\n+        std::pair{854, 2891},\n+        std::pair{857, 12174},\n+        std::pair{860, 3804},\n+        std::pair{861, 3610},\n+        std::pair{868, 9452},\n+        std::pair{869, 3193},\n+        std::pair{870, 4421},\n+        std::pair{871, 2741},\n+        std::pair{872, 2658},\n+        std::pair{880, 5565},\n+        std::pair{881, 4822},\n+        std::pair{887, 7897},\n+        std::pair{889, 2571},\n+        std::pair{893, 2772},\n+        std::pair{899, 2902},\n+        std::pair{900, 2563},\n+        std::pair{908, 3615},\n+        std::pair{909, 3335},\n+        std::pair{914, 2471},\n+        std::pair{915, 3855},\n+        std::pair{929, 2669},\n+        std::pair{931, 2727},\n+        std::pair{932, 3965},\n+        std::pair{933, 3861},\n+        std::pair{947, 2497},\n+        std::pair{948, 3413},\n+        std::pair{956, 7964},\n+        std::pair{957, 4164},\n+        std::pair{958, 15318},\n+        std::pair{970, 4944},\n+        std::pair{973, 5329},\n+        std::pair{991, 4237},\n+        std::pair{1009, 2996},\n+        std::pair{1013, 2317},\n+        std::pair{1018, 2403},\n+        std::pair{1021, 2264},\n+        std::pair{1027, 2432},\n+        std::pair{1028, 3170},\n+        std::pair{1029, 2282},\n+        std::pair{1062, 2136},\n+        std::pair{1063, 6545},\n+        std::pair{1065, 3930},\n+        std::pair{1071, 2748},\n+        std::pair{1073, 4453},\n+        std::pair{1080, 2280},\n+        std::pair{1081, 2917},\n+        std::pair{1086, 38785},\n+        std::pair{1088, 8662},\n+        std::pair{1094, 5021},\n+        std::pair{1095, 2231},\n+        std::pair{1097, 2063},\n+        std::pair{1099, 2050},\n+        std::pair{1111, 17965},\n+        std::pair{1112, 2278},\n+        std::pair{1117, 4879},\n+        std::pair{1118, 2130},\n+        std::pair{1122, 2016},\n+        std::pair{1129, 3118},\n+        std::pair{1131, 5241},\n+        std::pair{1132, 2044},\n+        std::pair{1133, 7119},\n+        std::pair{1134, 8941},\n+        std::pair{1137, 2184},\n+        std::pair{1138, 2896},\n+        std::pair{1140, 9739},\n+        std::pair{1145, 5445},\n+        std::pair{1157, 7559},\n+        std::pair{1158, 2301},\n+        std::pair{1183, 2098},\n+        std::pair{1191, 5395},\n+        std::pair{1192, 4617},\n+        std::pair{1195, 5422},\n+        std::pair{1203, 2285},\n+        std::pair{1206, 3310},\n+        std::pair{1211, 2079},\n+        std::pair{1212, 5269},\n+        std::pair{1214, 19082},\n+        std::pair{1215, 1876},\n+        std::pair{1229, 2511},\n+        std::pair{1230, 2021},\n+        std::pair{1232, 19221},\n+        std::pair{1233, 2398},\n+        std::pair{1235, 2863},\n+        std::pair{1237, 2601},\n+        std::pair{1238, 1942},\n+        std::pair{1242, 1855},\n+        std::pair{1252, 1814},\n+        std::pair{1259, 8921},\n+        std::pair{1260, 2166},\n+        std::pair{1270, 2508},\n+        std::pair{1276, 1983},\n+        std::pair{1292, 2651},\n+        std::pair{1303, 2344},\n+        std::pair{1304, 1984},\n+        std::pair{1305, 2837},\n+        std::pair{1316, 1784},\n+        std::pair{1343, 2431},\n+        std::pair{1347, 40393},\n+        std::pair{1349, 2713},\n+        std::pair{1363, 20803},\n+        std::pair{1381, 1940},\n+        std::pair{1382, 1738},\n+        std::pair{1383, 1792},\n+        std::pair{1398, 1924},\n+        std::pair{1399, 2076},\n+        std::pair{1402, 3204},\n+        std::pair{1403, 4854},\n+        std::pair{1404, 4220},\n+        std::pair{1411, 1789},\n+        std::pair{1430, 2616},\n+        std::pair{1439, 1556},\n+        std::pair{1448, 2535},\n+        std::pair{1450, 1738},\n+        std::pair{1463, 2819},\n+        std::pair{1464, 3412},\n+        std::pair{1469, 2184},\n+        std::pair{1487, 1571},\n+        std::pair{1501, 3647},\n+        std::pair{1504, 1622},\n+        std::pair{1505, 1540},\n+        std::pair{1535, 3421},\n+        std::pair{1564, 2720},\n+        std::pair{1580, 1699},\n+        std::pair{1581, 5728},\n+        std::pair{1583, 2487},\n+        std::pair{1600, 1513},\n+        std::pair{1601, 1637},\n+        std::pair{1602, 1908},\n+        std::pair{1603, 1840},\n+        std::pair{1604, 2253},\n+        std::pair{1605, 2171},\n+        std::pair{1606, 2151},\n+        std::pair{1607, 2077},\n+        std::pair{1608, 2025},\n+        std::pair{1609, 1924},\n+        std::pair{1610, 1893},\n+        std::pair{1611, 1591},\n+        std::pair{1612, 1521},\n+        std::pair{1613, 1622},\n+        std::pair{1618, 1998},\n+        std::pair{1693, 7588},\n+        std::pair{1748, 1796},\n+        std::pair{1752, 1707},\n+        std::pair{1757, 2606},\n+        std::pair{1758, 3088},\n+        std::pair{1759, 1301},\n+        std::pair{1765, 2397},\n+        std::pair{1779, 1451},\n+        std::pair{1789, 1658},\n+        std::pair{1799, 1425},\n+        std::pair{1800, 1988},\n+        std::pair{1810, 1337},\n+        std::pair{1819, 1582},\n+        std::pair{1820, 1482},\n+        std::pair{1821, 1339},\n+        std::pair{1822, 1574},\n+        std::pair{1823, 1531},\n+        std::pair{1824, 1598},\n+        std::pair{1825, 1574},\n+        std::pair{1826, 1718},\n+        std::pair{1827, 1605},\n+        std::pair{1828, 1567},\n+        std::pair{1829, 1782},\n+        std::pair{1830, 1622},\n+        std::pair{1831, 1934},\n+        std::pair{1832, 1483},\n+        std::pair{1833, 1323},\n+        std::pair{1834, 1416},\n+        std::pair{1839, 1248},\n+        std::pair{1880, 1503},\n+        std::pair{1897, 2634},\n+        std::pair{1912, 1334},\n+        std::pair{1935, 1200},\n+        std::pair{1938, 1477},\n+        std::pair{1939, 1251},\n+        std::pair{1941, 1367},\n+        std::pair{1943, 2004},\n+        std::pair{1945, 1678},\n+        std::pair{1947, 1489},\n+        std::pair{1949, 1469},\n+        std::pair{1951, 1542},\n+        std::pair{1953, 1825},\n+        std::pair{1955, 1262},\n+        std::pair{1957, 1362},\n+        std::pair{1959, 1384},\n+        std::pair{1961, 1281},\n+        std::pair{1965, 1244},\n+        std::pair{1967, 1208},\n+        std::pair{2007, 1280},\n+        std::pair{2015, 1865},\n+        std::pair{2028, 1828},\n+        std::pair{2029, 1492},\n+        std::pair{2138, 1528},\n+        std::pair{2164, 1259},\n+        std::pair{2238, 2749},\n+        std::pair{2239, 1165},\n+        std::pair{2243, 1008},\n+        std::pair{2293, 1132},\n+        std::pair{2329, 1039},\n+        std::pair{2330, 1025},\n+        std::pair{2331, 968},\n+        std::pair{2434, 3310},\n+        std::pair{2439, 1241},\n+        std::pair{2665, 860},\n+        std::pair{2755, 1050},\n+        std::pair{2768, 863},\n+        std::pair{2784, 1633},\n+        std::pair{2791, 1140},\n+        std::pair{2873, 1881},\n+        std::pair{2973, 874},\n+        std::pair{2974, 1492},\n+        std::pair{3023, 825},\n+        std::pair{3097, 765},\n+        std::pair{3098, 1285},\n+        std::pair{3102, 1676},\n+        std::pair{3107, 1090},\n+        std::pair{3108, 782},\n+        std::pair{3124, 1695},\n+        std::pair{3134, 878},\n+        std::pair{3161, 1927},\n+        std::pair{3179, 843},\n+        std::pair{3245, 1628},\n+        std::pair{3249, 1787},\n+        std::pair{3268, 1275},\n+        std::pair{3293, 690},\n+        std::pair{3305, 1073},\n+        std::pair{3306, 1256},\n+        std::pair{3360, 2382},\n+        std::pair{3375, 688},\n+        std::pair{3418, 957},\n+        std::pair{3489, 953},\n+        std::pair{3529, 960},\n+        std::pair{3567, 714},\n+        std::pair{3586, 687},\n+        std::pair{3589, 679},\n+        std::pair{3718, 1482},\n+        std::pair{3729, 635},\n+        std::pair{3776, 693},\n+        std::pair{3779, 611},\n+        std::pair{3784, 1072},\n+        std::pair{3854, 1671},\n+        std::pair{3865, 609},\n+        std::pair{3932, 646},\n+        std::pair{3983, 569},\n+        std::pair{3990, 7442},\n+        std::pair{4007, 1967},\n+        std::pair{4022, 856},\n+        std::pair{4033, 600},\n+        std::pair{4096, 3905157},\n+        std::pair{4197, 854},\n+        std::pair{4201, 839},\n+        std::pair{4206, 1126},\n+        std::pair{4252, 940},\n+        std::pair{4573, 613},\n+        std::pair{4578, 3187},\n+        std::pair{4880, 4217},\n+        std::pair{5229, 503},\n+        std::pair{5662, 418},\n+        std::pair{6103, 629},\n+        std::pair{6111, 1099},\n+        std::pair{7230, 516},\n+        std::pair{7950, 1340},\n+        std::pair{9163, 349},\n+        std::pair{9425, 1030},\n+        std::pair{10626, 2763},\n+        std::pair{11910, 1120},\n+        std::pair{12322, 461},\n+        std::pair{12463, 218},\n+        std::pair{12647, 505},\n+        std::pair{12764, 251},\n+        std::pair{14821, 161},\n+        std::pair{16220, 266},\n+        std::pair{19421, 207},\n+        std::pair{22287, 112},\n+        std::pair{23659, 205},\n+        std::pair{29024, 112},\n+        std::pair{32311, 161},\n+        std::pair{33016, 101},\n+        std::pair{35830, 65},\n+        std::pair{37830, 134},\n+        std::pair{42651, 255},\n+        std::pair{51830, 62},\n+        std::pair{51975, 54},\n+        std::pair{58763, 48},\n+        std::pair{58957, 65},\n+        std::pair{58959, 190},\n+        std::pair{58968, 45},\n+        std::pair{59029, 91},\n+        std::pair{65973, 109},\n+        std::pair{67108, 51},\n+        std::pair{73348, 46},\n+        std::pair{73350, 56},\n+        std::pair{88154, 147},\n+        std::pair{93902, 252},\n+        std::pair{95844, 26},\n+        std::pair{95901, 6384},\n+        std::pair{105054, 160},\n+        std::pair{116108, 143},\n+        std::pair{116132, 28},\n+        std::pair{120562, 19},\n+        std::pair{129509, 21},\n+        std::pair{131887, 112},\n+        std::pair{134762, 66},\n+        std::pair{142727, 79},\n+        std::pair{156030, 20},\n+        std::pair{157030, 59},\n+        std::pair{158830, 19},\n+        std::pair{160030, 47},\n+        std::pair{161030, 27},\n+        std::pair{170730, 15},\n+        std::pair{172242, 48},\n+        std::pair{185416, 15},\n+        std::pair{188014, 34},\n+        std::pair{201064, 18},\n+        std::pair{201956, 308},\n+        std::pair{212447, 71},\n+        std::pair{238133, 11},\n+        std::pair{248911, 14},\n+        std::pair{263128, 382},\n+        std::pair{263715, 109},\n+        std::pair{263717, 64},\n+        std::pair{263826, 12},\n+        std::pair{264526, 14},\n+        std::pair{281222, 15},\n+        std::pair{296649, 20},\n+        std::pair{304568, 9},\n+        std::pair{313930, 10},\n+        std::pair{330734, 11},\n+        std::pair{360543, 9},\n+        std::pair{366453, 7},\n+        std::pair{376701, 7},\n+        std::pair{390618, 7},\n+        std::pair{393960, 13},\n+        std::pair{397614, 9},\n+        std::pair{3208728, 1},\n+        std::pair{3399235, 1},\n+        std::pair{3455039, 1},\n+        std::pair{3901276, 1},\n+        std::pair{3938182, 1},\n+        std::pair{3940737, 1},\n+        std::pair{3960783, 1},\n+        std::pair{3969293, 1},\n+        std::pair{3979245, 1},\n+        std::pair{3983549, 1},\n+        std::pair{3988760, 1},\n+        std::pair{3990061, 1},\n+        std::pair{3990887, 1},\n+        std::pair{3990916, 1},\n+        std::pair{3990944, 1},\n+        std::pair{3991041, 1},\n+        std::pair{3991516, 1},\n+        std::pair{3992188, 1},\n+        std::pair{3992381, 1},\n+        std::pair{3992470, 1},\n+    };\n \n+    constexpr auto scaling_factor{1'000'000U}; // Scale to this many occurrences of 1 byte vectors\n+    const uint64_t max_count{histogram[1]};\n+    assert(max_count == 47'584'838'861); // 1 byte vectors are most frequent\n+\n+    std::vector<std::vector<std::byte>> test_data;\n+    test_data.reserve(1'941'283);\n+\n+    FastRandomContext rng{/*fDeterministic=*/true};\n+    uint64_t total_bytes{0};\n+    for (const auto& [size, count] : histogram) {\n+        const size_t scaled_count{static_cast<size_t>(std::ceil(static_cast<double>(count) / max_count * scaling_factor))};\n+\n+        total_bytes += scaled_count * size;\n+        auto rand_bytes = rng.randbytes<std::byte>(size);\n+        for (size_t j{0}; j < scaled_count; ++j) {\n+            test_data.emplace_back(rand_bytes);\n+        }\n+    }\n+    assert(total_bytes == 114'929'502);\n+\n+    std::ranges::shuffle(test_data, rng); // Make it more realistic & less predictable\n+\n+    std::vector key_bytes{rng.randbytes<std::byte>(8)};\n+    uint64_t key;\n+    std::memcpy(&key, key_bytes.data(), 8);\n+\n+    size_t offset{0};\n+    bench.batch(total_bytes).unit(\"byte\").run([&] {\n+        for (auto& data : test_data) {\n+            util::Xor(data, key_bytes, offset++);\n+        }\n+        ankerl::nanobench::doNotOptimizeAway(test_data);\n+    });\n+}\n+\n+static void AutoFileXor(benchmark::Bench& bench)",
      "path": "src/bench/xor.cpp",
      "position": null,
      "original_position": 1054,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "caafbd069246848a8bdfc2f42fd1d692a824de94",
      "in_reply_to_id": 1879104907,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Was removed since",
      "created_at": "2025-04-05T16:40:50Z",
      "updated_at": "2025-04-05T16:40:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2029914278",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029914278"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1056,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029914291",
      "pull_request_review_id": 2744937700,
      "id": 2029914291,
      "node_id": "PRRC_kwDOABII5854_giz",
      "diff_hunk": "@@ -7,18 +7,1069 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <cmath>\n #include <cstddef>\n+#include <map>\n #include <vector>\n \n-static void Xor(benchmark::Bench& bench)\n+static void XorHistogram(benchmark::Bench& bench)\n {\n-    FastRandomContext frc{/*fDeterministic=*/true};\n-    auto data{frc.randbytes<std::byte>(1024)};\n-    auto key{frc.randbytes<std::byte>(31)};\n+    // The top util::Xor method's [write.size(), frequency] calls for the IBD of the first 860k blocks\n+    std::map<uint32_t, uint64_t> histogram{\n+        std::pair{1, 47584838861},\n+        std::pair{2, 155252857},\n+        std::pair{4, 14983070199},\n+        std::pair{7, 51354839},\n+        std::pair{8, 5939128629},\n+        std::pair{9, 16698793},\n+        std::pair{10, 27406144},\n+        std::pair{11, 3986792},\n+        std::pair{12, 3282613},\n+        std::pair{13, 314839},\n+        std::pair{14, 536980},\n+        std::pair{15, 1610643},\n+        std::pair{16, 542064},\n+        std::pair{17, 407345},\n+        std::pair{18, 261587},\n+        std::pair{19, 230151},\n+        std::pair{20, 339705},\n+        std::pair{21, 2019807250},\n+        std::pair{22, 1616301504},\n+        std::pair{23, 2357347372},\n+        std::pair{25, 2705183236},\n+        std::pair{26, 35870265},\n+        std::pair{27, 87057844},\n+        std::pair{28, 78184146},\n+        std::pair{29, 30858682},\n+        std::pair{30, 19197417},\n+        std::pair{31, 1579479},\n+        std::pair{32, 5369404406},\n+        std::pair{33, 2025696499},\n+        std::pair{34, 682781008},\n+        std::pair{35, 269339238},\n+        std::pair{36, 223445},\n+        std::pair{37, 41467794},\n+        std::pair{38, 1475762},\n+        std::pair{39, 6662400},\n+        std::pair{40, 50600412},\n+        std::pair{41, 5297315},\n+        std::pair{42, 3013707},\n+        std::pair{43, 443306},\n+        std::pair{44, 567194},\n+        std::pair{46, 111535},\n+        std::pair{47, 155071},\n+        std::pair{48, 1038788},\n+        std::pair{49, 101166},\n+        std::pair{53, 414677},\n+        std::pair{54, 42084},\n+        std::pair{55, 150863},\n+        std::pair{56, 694439},\n+        std::pair{58, 38884},\n+        std::pair{59, 69597},\n+        std::pair{60, 55155},\n+        std::pair{62, 64150},\n+        std::pair{63, 44837},\n+        std::pair{64, 275253628},\n+        std::pair{65, 29197009},\n+        std::pair{66, 463395},\n+        std::pair{67, 1807929},\n+        std::pair{68, 264550},\n+        std::pair{69, 1031048},\n+        std::pair{70, 12772097},\n+        std::pair{71, 1763349816},\n+        std::pair{72, 827712501},\n+        std::pair{73, 3835426},\n+        std::pair{74, 869472},\n+        std::pair{75, 538515},\n+        std::pair{76, 268232},\n+        std::pair{77, 1407359},\n+        std::pair{78, 2899481},\n+        std::pair{79, 672145},\n+        std::pair{80, 2240943},\n+        std::pair{81, 1142405},\n+        std::pair{82, 482636},\n+        std::pair{83, 53818260},\n+        std::pair{84, 551826},\n+        std::pair{85, 274521},\n+        std::pair{86, 191212},\n+        std::pair{87, 148744},\n+        std::pair{88, 798839},\n+        std::pair{89, 131754},\n+        std::pair{90, 181244},\n+        std::pair{91, 632574},\n+        std::pair{92, 54802},\n+        std::pair{93, 40008},\n+        std::pair{94, 58679},\n+        std::pair{95, 3986219},\n+        std::pair{96, 69872},\n+        std::pair{97, 836318},\n+        std::pair{98, 124792},\n+        std::pair{99, 228622},\n+        std::pair{100, 550755},\n+        std::pair{101, 70480},\n+        std::pair{102, 29036},\n+        std::pair{103, 134544},\n+        std::pair{104, 138387},\n+        std::pair{105, 198656556},\n+        std::pair{106, 1193555153},\n+        std::pair{107, 1064027363},\n+        std::pair{108, 24662023},\n+        std::pair{109, 7506161},\n+        std::pair{110, 1500218},\n+        std::pair{111, 2768082},\n+        std::pair{112, 3056669},\n+        std::pair{113, 17829712},\n+        std::pair{114, 9826401},\n+        std::pair{115, 409391},\n+        std::pair{116, 388988},\n+        std::pair{117, 199627},\n+        std::pair{118, 156933},\n+        std::pair{119, 266888},\n+        std::pair{120, 2215468},\n+        std::pair{121, 3735124},\n+        std::pair{122, 3221526},\n+        std::pair{123, 12986923},\n+        std::pair{124, 3039553},\n+        std::pair{125, 2378723},\n+        std::pair{126, 4080425},\n+        std::pair{127, 3993712},\n+        std::pair{128, 13323530},\n+        std::pair{129, 1404783},\n+        std::pair{130, 7111451},\n+        std::pair{131, 6398914},\n+        std::pair{132, 1574554},\n+        std::pair{133, 753121},\n+        std::pair{134, 995846},\n+        std::pair{135, 2299257},\n+        std::pair{136, 2841133},\n+        std::pair{137, 1432824},\n+        std::pair{138, 112918349},\n+        std::pair{139, 155158814},\n+        std::pair{140, 37826769},\n+        std::pair{141, 138259},\n+        std::pair{142, 228782},\n+        std::pair{143, 155226},\n+        std::pair{144, 523085},\n+        std::pair{145, 1043545},\n+        std::pair{146, 936776},\n+        std::pair{147, 135958},\n+        std::pair{148, 53477},\n+        std::pair{149, 85944},\n+        std::pair{150, 139591},\n+        std::pair{151, 51432},\n+        std::pair{152, 101719},\n+        std::pair{153, 71302},\n+        std::pair{154, 26873},\n+        std::pair{155, 150196},\n+        std::pair{156, 44863},\n+        std::pair{157, 81708},\n+        std::pair{158, 16245},\n+        std::pair{159, 16539},\n+        std::pair{160, 30363},\n+        std::pair{161, 19167},\n+        std::pair{163, 59580},\n+        std::pair{164, 247459},\n+        std::pair{165, 248525},\n+        std::pair{166, 56551},\n+        std::pair{167, 72096},\n+        std::pair{169, 80727},\n+        std::pair{170, 83764},\n+        std::pair{172, 42020},\n+        std::pair{173, 482585},\n+        std::pair{174, 63200},\n+        std::pair{175, 23018},\n+        std::pair{176, 29041},\n+        std::pair{177, 27504},\n+        std::pair{178, 162526},\n+        std::pair{179, 16034},\n+        std::pair{180, 54624},\n+        std::pair{181, 54459},\n+        std::pair{184, 24405},\n+        std::pair{186, 23024},\n+        std::pair{187, 156538},\n+        std::pair{188, 31919},\n+        std::pair{189, 53778},\n+        std::pair{190, 95945},\n+        std::pair{191, 91777},\n+        std::pair{192, 756282},\n+        std::pair{193, 130194},\n+        std::pair{194, 14765},\n+        std::pair{195, 19600},\n+        std::pair{196, 35530},\n+        std::pair{197, 18439},\n+        std::pair{198, 645343},\n+        std::pair{199, 49680},\n+        std::pair{200, 110974},\n+        std::pair{201, 192016},\n+        std::pair{202, 77989},\n+        std::pair{203, 97997},\n+        std::pair{204, 122473},\n+        std::pair{205, 197169},\n+        std::pair{206, 666763},\n+        std::pair{207, 125972},\n+        std::pair{208, 44187},\n+        std::pair{209, 63692},\n+        std::pair{210, 180094},\n+        std::pair{211, 78496},\n+        std::pair{212, 76417},\n+        std::pair{213, 48926},\n+        std::pair{214, 114383},\n+        std::pair{215, 82850},\n+        std::pair{216, 262811},\n+        std::pair{217, 13625647},\n+        std::pair{218, 25918921},\n+        std::pair{219, 12992432},\n+        std::pair{220, 108554},\n+        std::pair{221, 31243},\n+        std::pair{222, 29187},\n+        std::pair{223, 10083},\n+        std::pair{224, 22281},\n+        std::pair{225, 13950},\n+        std::pair{226, 31886},\n+        std::pair{227, 18084},\n+        std::pair{228, 14657},\n+        std::pair{229, 79168},\n+        std::pair{230, 15963},\n+        std::pair{231, 21742},\n+        std::pair{232, 11410},\n+        std::pair{233, 12367},\n+        std::pair{234, 15037},\n+        std::pair{235, 16192},\n+        std::pair{236, 25139},\n+        std::pair{237, 16192},\n+        std::pair{238, 18500},\n+        std::pair{239, 18810},\n+        std::pair{240, 38316},\n+        std::pair{241, 149042},\n+        std::pair{242, 24003},\n+        std::pair{243, 19104},\n+        std::pair{244, 15440},\n+        std::pair{245, 9379},\n+        std::pair{247, 9889},\n+        std::pair{248, 12683},\n+        std::pair{249, 85955},\n+        std::pair{250, 48511},\n+        std::pair{251, 746625},\n+        std::pair{252, 48105681},\n+        std::pair{253, 83729340},\n+        std::pair{254, 38940977},\n+        std::pair{255, 151929},\n+        std::pair{256, 28326},\n+        std::pair{257, 47575},\n+        std::pair{258, 25005},\n+        std::pair{259, 24940},\n+        std::pair{260, 37845},\n+        std::pair{261, 23197},\n+        std::pair{262, 34312},\n+        std::pair{263, 21453},\n+        std::pair{264, 55215},\n+        std::pair{267, 11005},\n+        std::pair{268, 40335},\n+        std::pair{269, 31338},\n+        std::pair{275, 8153},\n+        std::pair{278, 12014},\n+        std::pair{280, 19109},\n+        std::pair{282, 17085},\n+        std::pair{283, 27004},\n+        std::pair{284, 346378},\n+        std::pair{285, 342589},\n+        std::pair{286, 352838},\n+        std::pair{287, 343470},\n+        std::pair{288, 242657},\n+        std::pair{289, 13735},\n+        std::pair{290, 23228},\n+        std::pair{291, 22868},\n+        std::pair{296, 10044},\n+        std::pair{297, 67198},\n+        std::pair{298, 21992},\n+        std::pair{299, 28253},\n+        std::pair{302, 23977},\n+        std::pair{306, 17984},\n+        std::pair{307, 11476},\n+        std::pair{308, 7421},\n+        std::pair{309, 8469},\n+        std::pair{314, 11850},\n+        std::pair{315, 16052},\n+        std::pair{316, 25342},\n+        std::pair{317, 28064},\n+        std::pair{318, 20989},\n+        std::pair{319, 23071},\n+        std::pair{320, 48109},\n+        std::pair{321, 48075},\n+        std::pair{322, 25238},\n+        std::pair{323, 10398},\n+        std::pair{324, 37202},\n+        std::pair{325, 51911},\n+        std::pair{326, 39506},\n+        std::pair{327, 11413},\n+        std::pair{333, 13024},\n+        std::pair{334, 19214},\n+        std::pair{335, 28438},\n+        std::pair{337, 8269},\n+        std::pair{342, 13666},\n+        std::pair{344, 6944},\n+        std::pair{345, 7907},\n+        std::pair{347, 16630},\n+        std::pair{348, 593985},\n+        std::pair{349, 1130760},\n+        std::pair{350, 578492},\n+        std::pair{351, 14457},\n+        std::pair{352, 7764},\n+        std::pair{353, 9544},\n+        std::pair{354, 263313},\n+        std::pair{355, 513902},\n+        std::pair{356, 260735},\n+        std::pair{358, 36433},\n+        std::pair{359, 75013},\n+        std::pair{360, 78454},\n+        std::pair{361, 35048},\n+        std::pair{362, 9077},\n+        std::pair{363, 7329},\n+        std::pair{365, 6250},\n+        std::pair{366, 38768},\n+        std::pair{368, 6462},\n+        std::pair{370, 6695},\n+        std::pair{371, 6738},\n+        std::pair{372, 6741},\n+        std::pair{373, 6718},\n+        std::pair{374, 22779},\n+        std::pair{377, 15183},\n+        std::pair{378, 8535},\n+        std::pair{381, 9493},\n+        std::pair{383, 8045},\n+        std::pair{386, 9833},\n+        std::pair{388, 6020},\n+        std::pair{389, 6431},\n+        std::pair{390, 6042},\n+        std::pair{391, 12471},\n+        std::pair{392, 288555},\n+        std::pair{393, 805000},\n+        std::pair{394, 798675},\n+        std::pair{395, 268494},\n+        std::pair{402, 5731},\n+        std::pair{403, 8028},\n+        std::pair{404, 8535},\n+        std::pair{406, 5719},\n+        std::pair{408, 13451},\n+        std::pair{410, 7235},\n+        std::pair{412, 5798},\n+        std::pair{415, 9227},\n+        std::pair{416, 7012},\n+        std::pair{417, 6305},\n+        std::pair{418, 16208},\n+        std::pair{419, 5801},\n+        std::pair{422, 6460},\n+        std::pair{423, 14468},\n+        std::pair{424, 31198},\n+        std::pair{425, 6148},\n+        std::pair{426, 22403},\n+        std::pair{427, 30448},\n+        std::pair{428, 32413},\n+        std::pair{429, 14787},\n+        std::pair{430, 7622},\n+        std::pair{431, 5669},\n+        std::pair{432, 19538},\n+        std::pair{437, 9812},\n+        std::pair{438, 5234},\n+        std::pair{439, 5277},\n+        std::pair{440, 24196},\n+        std::pair{441, 5915},\n+        std::pair{442, 5495},\n+        std::pair{443, 5093},\n+        std::pair{444, 5122},\n+        std::pair{445, 7284},\n+        std::pair{452, 6373},\n+        std::pair{454, 14438},\n+        std::pair{458, 5345},\n+        std::pair{459, 9986},\n+        std::pair{460, 25818},\n+        std::pair{461, 46493},\n+        std::pair{462, 42770},\n+        std::pair{463, 15676},\n+        std::pair{464, 7848},\n+        std::pair{465, 10933},\n+        std::pair{466, 25088},\n+        std::pair{467, 8687},\n+        std::pair{468, 5129},\n+        std::pair{476, 6189},\n+        std::pair{478, 4757},\n+        std::pair{479, 4846},\n+        std::pair{480, 11673},\n+        std::pair{481, 7191},\n+        std::pair{482, 7809},\n+        std::pair{483, 6500},\n+        std::pair{484, 29549},\n+        std::pair{485, 5616},\n+        std::pair{486, 81135},\n+        std::pair{487, 1836899},\n+        std::pair{488, 4909014},\n+        std::pair{489, 4483016},\n+        std::pair{490, 1380253},\n+        std::pair{491, 6215},\n+        std::pair{492, 5690},\n+        std::pair{493, 6055},\n+        std::pair{494, 6152},\n+        std::pair{495, 7111},\n+        std::pair{496, 9440},\n+        std::pair{497, 8856},\n+        std::pair{498, 16635},\n+        std::pair{499, 23648},\n+        std::pair{500, 34100},\n+        std::pair{501, 28017},\n+        std::pair{502, 11328},\n+        std::pair{503, 6404},\n+        std::pair{504, 6609},\n+        std::pair{505, 5843},\n+        std::pair{506, 8391},\n+        std::pair{507, 6715},\n+        std::pair{508, 7718},\n+        std::pair{509, 7176},\n+        std::pair{510, 7907},\n+        std::pair{511, 7416},\n+        std::pair{512, 7470},\n+        std::pair{513, 8519},\n+        std::pair{514, 7539},\n+        std::pair{515, 8152},\n+        std::pair{516, 18214},\n+        std::pair{517, 7683},\n+        std::pair{518, 12525},\n+        std::pair{519, 8026},\n+        std::pair{520, 13074},\n+        std::pair{521, 9877},\n+        std::pair{522, 9724},\n+        std::pair{523, 8772},\n+        std::pair{524, 8703},\n+        std::pair{525, 8371},\n+        std::pair{526, 8736},\n+        std::pair{527, 14001},\n+        std::pair{528, 22842},\n+        std::pair{529, 8367},\n+        std::pair{530, 9047},\n+        std::pair{531, 9902},\n+        std::pair{532, 9660},\n+        std::pair{533, 10733},\n+        std::pair{534, 12872},\n+        std::pair{535, 11037},\n+        std::pair{536, 10538},\n+        std::pair{537, 9862},\n+        std::pair{538, 7955},\n+        std::pair{539, 6772},\n+        std::pair{540, 6423},\n+        std::pair{541, 7553},\n+        std::pair{542, 8321},\n+        std::pair{543, 8603},\n+        std::pair{544, 17988},\n+        std::pair{545, 6705},\n+        std::pair{546, 5722},\n+        std::pair{547, 6070},\n+        std::pair{548, 6433},\n+        std::pair{549, 5086},\n+        std::pair{550, 4713},\n+        std::pair{551, 4981},\n+        std::pair{552, 4844},\n+        std::pair{553, 7459},\n+        std::pair{554, 20596},\n+        std::pair{555, 15940},\n+        std::pair{556, 9479},\n+        std::pair{557, 5917},\n+        std::pair{558, 6102},\n+        std::pair{559, 5010},\n+        std::pair{560, 5632},\n+        std::pair{561, 8368},\n+        std::pair{562, 6829},\n+        std::pair{563, 5066},\n+        std::pair{564, 22671},\n+        std::pair{565, 8881},\n+        std::pair{566, 16467},\n+        std::pair{567, 11634},\n+        std::pair{568, 7651},\n+        std::pair{569, 5176},\n+        std::pair{570, 5142},\n+        std::pair{571, 5646},\n+        std::pair{572, 5332},\n+        std::pair{573, 5034},\n+        std::pair{574, 5830},\n+        std::pair{575, 6663},\n+        std::pair{576, 8678},\n+        std::pair{577, 11161},\n+        std::pair{578, 7151},\n+        std::pair{579, 5771},\n+        std::pair{580, 5632},\n+        std::pair{581, 4045},\n+        std::pair{594, 9095},\n+        std::pair{595, 10823},\n+        std::pair{596, 4297},\n+        std::pair{598, 3772},\n+        std::pair{599, 5252},\n+        std::pair{600, 3817},\n+        std::pair{602, 6147},\n+        std::pair{603, 7215},\n+        std::pair{604, 5307},\n+        std::pair{605, 3906},\n+        std::pair{606, 4662},\n+        std::pair{607, 13020},\n+        std::pair{610, 12640},\n+        std::pair{613, 5599},\n+        std::pair{615, 11544},\n+        std::pair{617, 3953},\n+        std::pair{619, 4334},\n+        std::pair{625, 6609},\n+        std::pair{626, 47564},\n+        std::pair{628, 69105},\n+        std::pair{632, 6420},\n+        std::pair{636, 3551},\n+        std::pair{641, 8516},\n+        std::pair{644, 3553},\n+        std::pair{645, 3661},\n+        std::pair{646, 3985},\n+        std::pair{647, 4859},\n+        std::pair{649, 4228},\n+        std::pair{651, 4285},\n+        std::pair{653, 3644},\n+        std::pair{661, 4369},\n+        std::pair{662, 5890},\n+        std::pair{663, 6778},\n+        std::pair{664, 10663},\n+        std::pair{670, 4289},\n+        std::pair{671, 4389},\n+        std::pair{672, 4262},\n+        std::pair{673, 3708},\n+        std::pair{674, 5386},\n+        std::pair{683, 8732},\n+        std::pair{686, 3687},\n+        std::pair{687, 5581},\n+        std::pair{688, 5593},\n+        std::pair{689, 4053},\n+        std::pair{692, 3318},\n+        std::pair{693, 3518},\n+        std::pair{694, 4205},\n+        std::pair{695, 4752},\n+        std::pair{696, 5331},\n+        std::pair{697, 5591},\n+        std::pair{698, 5968},\n+        std::pair{699, 5988},\n+        std::pair{700, 5381},\n+        std::pair{701, 4386},\n+        std::pair{702, 4465},\n+        std::pair{703, 3793},\n+        std::pair{704, 4394},\n+        std::pair{705, 3636},\n+        std::pair{707, 3691},\n+        std::pair{709, 3288},\n+        std::pair{711, 22844},\n+        std::pair{714, 3148},\n+        std::pair{717, 3239},\n+        std::pair{718, 4170},\n+        std::pair{719, 4739},\n+        std::pair{720, 3560},\n+        std::pair{721, 4730},\n+        std::pair{722, 4524},\n+        std::pair{724, 3741},\n+        std::pair{725, 10294},\n+        std::pair{729, 4879},\n+        std::pair{730, 8636},\n+        std::pair{732, 3064},\n+        std::pair{734, 23400},\n+        std::pair{736, 3542},\n+        std::pair{737, 3331},\n+        std::pair{738, 3238},\n+        std::pair{740, 3083},\n+        std::pair{741, 3032},\n+        std::pair{742, 4008},\n+        std::pair{744, 3277},\n+        std::pair{745, 3162},\n+        std::pair{746, 3178},\n+        std::pair{748, 3393},\n+        std::pair{749, 3352},\n+        std::pair{750, 3341},\n+        std::pair{751, 3716},\n+        std::pair{752, 4696},\n+        std::pair{753, 3265},\n+        std::pair{754, 3621},\n+        std::pair{755, 3734},\n+        std::pair{756, 3824},\n+        std::pair{757, 3535},\n+        std::pair{758, 4118},\n+        std::pair{759, 5714},\n+        std::pair{760, 4043},\n+        std::pair{761, 4628},\n+        std::pair{762, 3808},\n+        std::pair{763, 3684},\n+        std::pair{764, 3989},\n+        std::pair{765, 3638},\n+        std::pair{766, 4037},\n+        std::pair{767, 4227},\n+        std::pair{768, 3933},\n+        std::pair{769, 4183},\n+        std::pair{770, 5118},\n+        std::pair{771, 4493},\n+        std::pair{772, 4038},\n+        std::pair{773, 3737},\n+        std::pair{774, 3924},\n+        std::pair{775, 3603},\n+        std::pair{776, 3906},\n+        std::pair{777, 3614},\n+        std::pair{778, 3869},\n+        std::pair{779, 23482},\n+        std::pair{780, 3934},\n+        std::pair{781, 3869},\n+        std::pair{782, 3967},\n+        std::pair{783, 3762},\n+        std::pair{784, 8108},\n+        std::pair{785, 3788},\n+        std::pair{786, 3710},\n+        std::pair{787, 3368},\n+        std::pair{788, 4644},\n+        std::pair{789, 3431},\n+        std::pair{790, 3790},\n+        std::pair{791, 3494},\n+        std::pair{792, 63947},\n+        std::pair{793, 6288},\n+        std::pair{794, 5799},\n+        std::pair{795, 3683},\n+        std::pair{796, 3744},\n+        std::pair{797, 4760},\n+        std::pair{798, 4114},\n+        std::pair{799, 3219},\n+        std::pair{800, 3367},\n+        std::pair{801, 3624},\n+        std::pair{802, 3330},\n+        std::pair{803, 3176},\n+        std::pair{804, 3245},\n+        std::pair{805, 2876},\n+        std::pair{806, 3244},\n+        std::pair{807, 3080},\n+        std::pair{808, 3182},\n+        std::pair{809, 4043},\n+        std::pair{810, 3215},\n+        std::pair{811, 2813},\n+        std::pair{812, 3084},\n+        std::pair{814, 3276},\n+        std::pair{816, 29033},\n+        std::pair{817, 3045},\n+        std::pair{818, 3155},\n+        std::pair{822, 2758},\n+        std::pair{823, 2750},\n+        std::pair{824, 3491},\n+        std::pair{825, 3105},\n+        std::pair{826, 3058},\n+        std::pair{827, 3252},\n+        std::pair{830, 2795},\n+        std::pair{834, 2980},\n+        std::pair{837, 2934},\n+        std::pair{847, 2915},\n+        std::pair{849, 2906},\n+        std::pair{851, 2832},\n+        std::pair{852, 4775},\n+        std::pair{853, 5139},\n+        std::pair{854, 2891},\n+        std::pair{857, 12174},\n+        std::pair{860, 3804},\n+        std::pair{861, 3610},\n+        std::pair{868, 9452},\n+        std::pair{869, 3193},\n+        std::pair{870, 4421},\n+        std::pair{871, 2741},\n+        std::pair{872, 2658},\n+        std::pair{880, 5565},\n+        std::pair{881, 4822},\n+        std::pair{887, 7897},\n+        std::pair{889, 2571},\n+        std::pair{893, 2772},\n+        std::pair{899, 2902},\n+        std::pair{900, 2563},\n+        std::pair{908, 3615},\n+        std::pair{909, 3335},\n+        std::pair{914, 2471},\n+        std::pair{915, 3855},\n+        std::pair{929, 2669},\n+        std::pair{931, 2727},\n+        std::pair{932, 3965},\n+        std::pair{933, 3861},\n+        std::pair{947, 2497},\n+        std::pair{948, 3413},\n+        std::pair{956, 7964},\n+        std::pair{957, 4164},\n+        std::pair{958, 15318},\n+        std::pair{970, 4944},\n+        std::pair{973, 5329},\n+        std::pair{991, 4237},\n+        std::pair{1009, 2996},\n+        std::pair{1013, 2317},\n+        std::pair{1018, 2403},\n+        std::pair{1021, 2264},\n+        std::pair{1027, 2432},\n+        std::pair{1028, 3170},\n+        std::pair{1029, 2282},\n+        std::pair{1062, 2136},\n+        std::pair{1063, 6545},\n+        std::pair{1065, 3930},\n+        std::pair{1071, 2748},\n+        std::pair{1073, 4453},\n+        std::pair{1080, 2280},\n+        std::pair{1081, 2917},\n+        std::pair{1086, 38785},\n+        std::pair{1088, 8662},\n+        std::pair{1094, 5021},\n+        std::pair{1095, 2231},\n+        std::pair{1097, 2063},\n+        std::pair{1099, 2050},\n+        std::pair{1111, 17965},\n+        std::pair{1112, 2278},\n+        std::pair{1117, 4879},\n+        std::pair{1118, 2130},\n+        std::pair{1122, 2016},\n+        std::pair{1129, 3118},\n+        std::pair{1131, 5241},\n+        std::pair{1132, 2044},\n+        std::pair{1133, 7119},\n+        std::pair{1134, 8941},\n+        std::pair{1137, 2184},\n+        std::pair{1138, 2896},\n+        std::pair{1140, 9739},\n+        std::pair{1145, 5445},\n+        std::pair{1157, 7559},\n+        std::pair{1158, 2301},\n+        std::pair{1183, 2098},\n+        std::pair{1191, 5395},\n+        std::pair{1192, 4617},\n+        std::pair{1195, 5422},\n+        std::pair{1203, 2285},\n+        std::pair{1206, 3310},\n+        std::pair{1211, 2079},\n+        std::pair{1212, 5269},\n+        std::pair{1214, 19082},\n+        std::pair{1215, 1876},\n+        std::pair{1229, 2511},\n+        std::pair{1230, 2021},\n+        std::pair{1232, 19221},\n+        std::pair{1233, 2398},\n+        std::pair{1235, 2863},\n+        std::pair{1237, 2601},\n+        std::pair{1238, 1942},\n+        std::pair{1242, 1855},\n+        std::pair{1252, 1814},\n+        std::pair{1259, 8921},\n+        std::pair{1260, 2166},\n+        std::pair{1270, 2508},\n+        std::pair{1276, 1983},\n+        std::pair{1292, 2651},\n+        std::pair{1303, 2344},\n+        std::pair{1304, 1984},\n+        std::pair{1305, 2837},\n+        std::pair{1316, 1784},\n+        std::pair{1343, 2431},\n+        std::pair{1347, 40393},\n+        std::pair{1349, 2713},\n+        std::pair{1363, 20803},\n+        std::pair{1381, 1940},\n+        std::pair{1382, 1738},\n+        std::pair{1383, 1792},\n+        std::pair{1398, 1924},\n+        std::pair{1399, 2076},\n+        std::pair{1402, 3204},\n+        std::pair{1403, 4854},\n+        std::pair{1404, 4220},\n+        std::pair{1411, 1789},\n+        std::pair{1430, 2616},\n+        std::pair{1439, 1556},\n+        std::pair{1448, 2535},\n+        std::pair{1450, 1738},\n+        std::pair{1463, 2819},\n+        std::pair{1464, 3412},\n+        std::pair{1469, 2184},\n+        std::pair{1487, 1571},\n+        std::pair{1501, 3647},\n+        std::pair{1504, 1622},\n+        std::pair{1505, 1540},\n+        std::pair{1535, 3421},\n+        std::pair{1564, 2720},\n+        std::pair{1580, 1699},\n+        std::pair{1581, 5728},\n+        std::pair{1583, 2487},\n+        std::pair{1600, 1513},\n+        std::pair{1601, 1637},\n+        std::pair{1602, 1908},\n+        std::pair{1603, 1840},\n+        std::pair{1604, 2253},\n+        std::pair{1605, 2171},\n+        std::pair{1606, 2151},\n+        std::pair{1607, 2077},\n+        std::pair{1608, 2025},\n+        std::pair{1609, 1924},\n+        std::pair{1610, 1893},\n+        std::pair{1611, 1591},\n+        std::pair{1612, 1521},\n+        std::pair{1613, 1622},\n+        std::pair{1618, 1998},\n+        std::pair{1693, 7588},\n+        std::pair{1748, 1796},\n+        std::pair{1752, 1707},\n+        std::pair{1757, 2606},\n+        std::pair{1758, 3088},\n+        std::pair{1759, 1301},\n+        std::pair{1765, 2397},\n+        std::pair{1779, 1451},\n+        std::pair{1789, 1658},\n+        std::pair{1799, 1425},\n+        std::pair{1800, 1988},\n+        std::pair{1810, 1337},\n+        std::pair{1819, 1582},\n+        std::pair{1820, 1482},\n+        std::pair{1821, 1339},\n+        std::pair{1822, 1574},\n+        std::pair{1823, 1531},\n+        std::pair{1824, 1598},\n+        std::pair{1825, 1574},\n+        std::pair{1826, 1718},\n+        std::pair{1827, 1605},\n+        std::pair{1828, 1567},\n+        std::pair{1829, 1782},\n+        std::pair{1830, 1622},\n+        std::pair{1831, 1934},\n+        std::pair{1832, 1483},\n+        std::pair{1833, 1323},\n+        std::pair{1834, 1416},\n+        std::pair{1839, 1248},\n+        std::pair{1880, 1503},\n+        std::pair{1897, 2634},\n+        std::pair{1912, 1334},\n+        std::pair{1935, 1200},\n+        std::pair{1938, 1477},\n+        std::pair{1939, 1251},\n+        std::pair{1941, 1367},\n+        std::pair{1943, 2004},\n+        std::pair{1945, 1678},\n+        std::pair{1947, 1489},\n+        std::pair{1949, 1469},\n+        std::pair{1951, 1542},\n+        std::pair{1953, 1825},\n+        std::pair{1955, 1262},\n+        std::pair{1957, 1362},\n+        std::pair{1959, 1384},\n+        std::pair{1961, 1281},\n+        std::pair{1965, 1244},\n+        std::pair{1967, 1208},\n+        std::pair{2007, 1280},\n+        std::pair{2015, 1865},\n+        std::pair{2028, 1828},\n+        std::pair{2029, 1492},\n+        std::pair{2138, 1528},\n+        std::pair{2164, 1259},\n+        std::pair{2238, 2749},\n+        std::pair{2239, 1165},\n+        std::pair{2243, 1008},\n+        std::pair{2293, 1132},\n+        std::pair{2329, 1039},\n+        std::pair{2330, 1025},\n+        std::pair{2331, 968},\n+        std::pair{2434, 3310},\n+        std::pair{2439, 1241},\n+        std::pair{2665, 860},\n+        std::pair{2755, 1050},\n+        std::pair{2768, 863},\n+        std::pair{2784, 1633},\n+        std::pair{2791, 1140},\n+        std::pair{2873, 1881},\n+        std::pair{2973, 874},\n+        std::pair{2974, 1492},\n+        std::pair{3023, 825},\n+        std::pair{3097, 765},\n+        std::pair{3098, 1285},\n+        std::pair{3102, 1676},\n+        std::pair{3107, 1090},\n+        std::pair{3108, 782},\n+        std::pair{3124, 1695},\n+        std::pair{3134, 878},\n+        std::pair{3161, 1927},\n+        std::pair{3179, 843},\n+        std::pair{3245, 1628},\n+        std::pair{3249, 1787},\n+        std::pair{3268, 1275},\n+        std::pair{3293, 690},\n+        std::pair{3305, 1073},\n+        std::pair{3306, 1256},\n+        std::pair{3360, 2382},\n+        std::pair{3375, 688},\n+        std::pair{3418, 957},\n+        std::pair{3489, 953},\n+        std::pair{3529, 960},\n+        std::pair{3567, 714},\n+        std::pair{3586, 687},\n+        std::pair{3589, 679},\n+        std::pair{3718, 1482},\n+        std::pair{3729, 635},\n+        std::pair{3776, 693},\n+        std::pair{3779, 611},\n+        std::pair{3784, 1072},\n+        std::pair{3854, 1671},\n+        std::pair{3865, 609},\n+        std::pair{3932, 646},\n+        std::pair{3983, 569},\n+        std::pair{3990, 7442},\n+        std::pair{4007, 1967},\n+        std::pair{4022, 856},\n+        std::pair{4033, 600},\n+        std::pair{4096, 3905157},\n+        std::pair{4197, 854},\n+        std::pair{4201, 839},\n+        std::pair{4206, 1126},\n+        std::pair{4252, 940},\n+        std::pair{4573, 613},\n+        std::pair{4578, 3187},\n+        std::pair{4880, 4217},\n+        std::pair{5229, 503},\n+        std::pair{5662, 418},\n+        std::pair{6103, 629},\n+        std::pair{6111, 1099},\n+        std::pair{7230, 516},\n+        std::pair{7950, 1340},\n+        std::pair{9163, 349},\n+        std::pair{9425, 1030},\n+        std::pair{10626, 2763},\n+        std::pair{11910, 1120},\n+        std::pair{12322, 461},\n+        std::pair{12463, 218},\n+        std::pair{12647, 505},\n+        std::pair{12764, 251},\n+        std::pair{14821, 161},\n+        std::pair{16220, 266},\n+        std::pair{19421, 207},\n+        std::pair{22287, 112},\n+        std::pair{23659, 205},\n+        std::pair{29024, 112},\n+        std::pair{32311, 161},\n+        std::pair{33016, 101},\n+        std::pair{35830, 65},\n+        std::pair{37830, 134},\n+        std::pair{42651, 255},\n+        std::pair{51830, 62},\n+        std::pair{51975, 54},\n+        std::pair{58763, 48},\n+        std::pair{58957, 65},\n+        std::pair{58959, 190},\n+        std::pair{58968, 45},\n+        std::pair{59029, 91},\n+        std::pair{65973, 109},\n+        std::pair{67108, 51},\n+        std::pair{73348, 46},\n+        std::pair{73350, 56},\n+        std::pair{88154, 147},\n+        std::pair{93902, 252},\n+        std::pair{95844, 26},\n+        std::pair{95901, 6384},\n+        std::pair{105054, 160},\n+        std::pair{116108, 143},\n+        std::pair{116132, 28},\n+        std::pair{120562, 19},\n+        std::pair{129509, 21},\n+        std::pair{131887, 112},\n+        std::pair{134762, 66},\n+        std::pair{142727, 79},\n+        std::pair{156030, 20},\n+        std::pair{157030, 59},\n+        std::pair{158830, 19},\n+        std::pair{160030, 47},\n+        std::pair{161030, 27},\n+        std::pair{170730, 15},\n+        std::pair{172242, 48},\n+        std::pair{185416, 15},\n+        std::pair{188014, 34},\n+        std::pair{201064, 18},\n+        std::pair{201956, 308},\n+        std::pair{212447, 71},\n+        std::pair{238133, 11},\n+        std::pair{248911, 14},\n+        std::pair{263128, 382},\n+        std::pair{263715, 109},\n+        std::pair{263717, 64},\n+        std::pair{263826, 12},\n+        std::pair{264526, 14},\n+        std::pair{281222, 15},\n+        std::pair{296649, 20},\n+        std::pair{304568, 9},\n+        std::pair{313930, 10},\n+        std::pair{330734, 11},\n+        std::pair{360543, 9},\n+        std::pair{366453, 7},\n+        std::pair{376701, 7},\n+        std::pair{390618, 7},\n+        std::pair{393960, 13},\n+        std::pair{397614, 9},\n+        std::pair{3208728, 1},\n+        std::pair{3399235, 1},\n+        std::pair{3455039, 1},\n+        std::pair{3901276, 1},\n+        std::pair{3938182, 1},\n+        std::pair{3940737, 1},\n+        std::pair{3960783, 1},\n+        std::pair{3969293, 1},\n+        std::pair{3979245, 1},\n+        std::pair{3983549, 1},\n+        std::pair{3988760, 1},\n+        std::pair{3990061, 1},\n+        std::pair{3990887, 1},\n+        std::pair{3990916, 1},\n+        std::pair{3990944, 1},\n+        std::pair{3991041, 1},\n+        std::pair{3991516, 1},\n+        std::pair{3992188, 1},\n+        std::pair{3992381, 1},\n+        std::pair{3992470, 1},\n+    };\n \n+    constexpr auto scaling_factor{1'000'000U}; // Scale to this many occurrences of 1 byte vectors\n+    const uint64_t max_count{histogram[1]};\n+    assert(max_count == 47'584'838'861); // 1 byte vectors are most frequent\n+\n+    std::vector<std::vector<std::byte>> test_data;\n+    test_data.reserve(1'941'283);\n+\n+    FastRandomContext rng{/*fDeterministic=*/true};\n+    uint64_t total_bytes{0};\n+    for (const auto& [size, count] : histogram) {\n+        const size_t scaled_count{static_cast<size_t>(std::ceil(static_cast<double>(count) / max_count * scaling_factor))};\n+\n+        total_bytes += scaled_count * size;\n+        auto rand_bytes = rng.randbytes<std::byte>(size);\n+        for (size_t j{0}; j < scaled_count; ++j) {\n+            test_data.emplace_back(rand_bytes);\n+        }\n+    }\n+    assert(total_bytes == 114'929'502);\n+\n+    std::ranges::shuffle(test_data, rng); // Make it more realistic & less predictable",
      "path": "src/bench/xor.cpp",
      "position": null,
      "original_position": 1039,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "caafbd069246848a8bdfc2f42fd1d692a824de94",
      "in_reply_to_id": 1879090034,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, this was removed since",
      "created_at": "2025-04-05T16:40:56Z",
      "updated_at": "2025-04-05T16:40:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2029914291",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029914291"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 1021,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1041,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029914305",
      "pull_request_review_id": 2744937717,
      "id": 2029914305,
      "node_id": "PRRC_kwDOABII5854_gjB",
      "diff_hunk": "@@ -7,18 +7,1069 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <cmath>\n #include <cstddef>\n+#include <map>\n #include <vector>\n \n-static void Xor(benchmark::Bench& bench)\n+static void XorHistogram(benchmark::Bench& bench)",
      "path": "src/bench/xor.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "caafbd069246848a8bdfc2f42fd1d692a824de94",
      "in_reply_to_id": 1879061751,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This was removed since",
      "created_at": "2025-04-05T16:41:01Z",
      "updated_at": "2025-04-05T16:41:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2029914305",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029914305"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029914318",
      "pull_request_review_id": 2744937733,
      "id": 2029914318,
      "node_id": "PRRC_kwDOABII5854_gjO",
      "diff_hunk": "@@ -14,13 +14,73 @@ using namespace std::string_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(xor_roundtrip_random_chunks)\n+{\n+    auto apply_random_xor_chunks{[](std::span<std::byte> write, const std::span<std::byte> key, FastRandomContext& rng) {\n+        for (size_t offset{0}; offset < write.size();) {\n+            const size_t chunk_size{1 + rng.randrange(write.size() - offset)};\n+            util::Xor(write.subspan(offset, chunk_size), key, offset);\n+            offset += chunk_size;\n+        }\n+    }};\n+\n+    FastRandomContext rng{/*fDeterministic=*/false};\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + rng.randrange(100U)};\n+        const std::vector original{rng.randbytes<std::byte>(write_size)};\n+        std::vector roundtrip{original};\n+\n+        std::vector key_bytes{rng.randbytes<std::byte>(sizeof(uint64_t))};\n+        uint64_t key;\n+        std::memcpy(&key, key_bytes.data(), sizeof key);\n+\n+        apply_random_xor_chunks(roundtrip, key_bytes, rng);\n+\n+        const bool all_zero = (key == 0) || (HexStr(key_bytes).find_first_not_of('0') >= write_size * 2);\n+        BOOST_CHECK_EQUAL(original != roundtrip, !all_zero);\n+\n+        apply_random_xor_chunks(roundtrip, key_bytes, rng);\n+        BOOST_CHECK(original == roundtrip);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(xor_bytes_reference)\n+{\n+    auto expected_xor{[](std::span<std::byte> write, const std::span<const std::byte> key, size_t key_offset) {\n+        for (auto& b : write) {\n+            b ^= key[key_offset++ % key.size()];\n+        }\n+    }};\n+\n+    FastRandomContext rng{/*fDeterministic=*/false};\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + rng.randrange(100U)};\n+        const size_t key_offset{rng.randrange(3 * 8U)}; // Should wrap around\n+\n+        std::vector key_bytes{rng.randbytes<std::byte>(sizeof(uint64_t))};\n+        uint64_t key;",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 48,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "e1074081c9f1895a4f629dfee347ceae484a10d3",
      "in_reply_to_id": 1879037588,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good find, unified the test in the first commit",
      "created_at": "2025-04-05T16:41:05Z",
      "updated_at": "2025-04-05T16:41:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2029914318",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029914318"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 60,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 61,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029914338",
      "pull_request_review_id": 2744937765,
      "id": 2029914338,
      "node_id": "PRRC_kwDOABII5854_gji",
      "diff_hunk": "@@ -14,13 +14,73 @@ using namespace std::string_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(xor_roundtrip_random_chunks)\n+{\n+    auto apply_random_xor_chunks{[](std::span<std::byte> write, const std::span<std::byte> key, FastRandomContext& rng) {\n+        for (size_t offset{0}; offset < write.size();) {\n+            const size_t chunk_size{1 + rng.randrange(write.size() - offset)};\n+            util::Xor(write.subspan(offset, chunk_size), key, offset);\n+            offset += chunk_size;\n+        }\n+    }};\n+\n+    FastRandomContext rng{/*fDeterministic=*/false};\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + rng.randrange(100U)};\n+        const std::vector original{rng.randbytes<std::byte>(write_size)};\n+        std::vector roundtrip{original};\n+\n+        std::vector key_bytes{rng.randbytes<std::byte>(sizeof(uint64_t))};\n+        uint64_t key;\n+        std::memcpy(&key, key_bytes.data(), sizeof key);\n+\n+        apply_random_xor_chunks(roundtrip, key_bytes, rng);\n+\n+        const bool all_zero = (key == 0) || (HexStr(key_bytes).find_first_not_of('0') >= write_size * 2);\n+        BOOST_CHECK_EQUAL(original != roundtrip, !all_zero);\n+\n+        apply_random_xor_chunks(roundtrip, key_bytes, rng);\n+        BOOST_CHECK(original == roundtrip);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(xor_bytes_reference)",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "e1074081c9f1895a4f629dfee347ceae484a10d3",
      "in_reply_to_id": 1878366327,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-04-05T16:41:10Z",
      "updated_at": "2025-04-05T16:41:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2029914338",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029914338"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053495512",
      "pull_request_review_id": 2783071854,
      "id": 2053495512,
      "node_id": "PRRC_kwDOABII5856ZdrY",
      "diff_hunk": "@@ -6,19 +6,27 @@\n #include <random.h>\n #include <span.h>\n #include <streams.h>\n+#include <util/byte_units.h>\n \n+#include <cmath>\n #include <cstddef>\n+#include <map>",
      "path": "src/bench/xor.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Unused?",
      "created_at": "2025-04-22T07:23:39Z",
      "updated_at": "2025-04-22T12:30:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2053495512",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053495512"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053502958",
      "pull_request_review_id": 2783071854,
      "id": 2053502958,
      "node_id": "PRRC_kwDOABII5856Zffu",
      "diff_hunk": "@@ -213,7 +213,11 @@ struct LevelDBContext {\n };\n \n CDBWrapper::CDBWrapper(const DBParams& params)\n-    : m_db_context{std::make_unique<LevelDBContext>()}, m_name{fs::PathToString(params.path.stem())}, m_path{params.path}, m_is_memory{params.memory_only}\n+    : m_db_context{std::make_unique<LevelDBContext>()},\n+      m_name{fs::PathToString(params.path.stem())},\n+      m_obfuscation{0},",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Could declare default initialization value for `m_obfuscation` in header to avoid touching these lines.",
      "created_at": "2025-04-22T07:27:55Z",
      "updated_at": "2025-04-22T12:30:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2053502958",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053502958"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 218,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053511581",
      "pull_request_review_id": 2783071854,
      "id": 2053511581,
      "node_id": "PRRC_kwDOABII5856Zhmd",
      "diff_hunk": "@@ -248,24 +252,24 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    {\n+        m_obfuscation = 0; // Needed for unobfuscated Read",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "There's no `return` before the assignment on line 271, and we already set this field to 0 during initialization, so could be removed?",
      "created_at": "2025-04-22T07:32:47Z",
      "updated_at": "2025-04-22T12:30:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2053511581",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053511581"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053529374",
      "pull_request_review_id": 2783071854,
      "id": 2053529374,
      "node_id": "PRRC_kwDOABII5856Zl8e",
      "diff_hunk": "@@ -188,16 +187,11 @@ class CDBWrapper\n     std::string m_name;\n \n     //! a key used for optional XOR-obfuscation of the database\n-    std::vector<unsigned char> obfuscate_key;\n+    Obfuscation m_obfuscation;",
      "path": "src/dbwrapper.h",
      "position": null,
      "original_position": 33,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "(Thanks for restoring sanity with the `m_`-prefix).",
      "created_at": "2025-04-22T07:43:04Z",
      "updated_at": "2025-04-22T12:30:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2053529374",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053529374"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 190,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053535171",
      "pull_request_review_id": 2783071854,
      "id": 2053535171,
      "node_id": "PRRC_kwDOABII5856ZnXD",
      "diff_hunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers",
      "path": "src/obfuscation.h",
      "position": null,
      "original_position": 1,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "2009?",
      "created_at": "2025-04-22T07:45:56Z",
      "updated_at": "2025-04-22T12:30:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2053535171",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053535171"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053538744",
      "pull_request_review_id": 2783071854,
      "id": 2053538744,
      "node_id": "PRRC_kwDOABII5856ZoO4",
      "diff_hunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_OBFUSCATION_H\n+#define BITCOIN_OBFUSCATION_H\n+\n+#include <array>\n+#include <cassert>\n+#include <cstdint>\n+#include <random>\n+#include <span.h>\n+#include <util/check.h>\n+#include <cstring>\n+#include <climits>\n+#include <serialize.h>\n+\n+class Obfuscation\n+{\n+public:\n+    static constexpr size_t SIZE_BYTES{sizeof(uint64_t)};\n+\n+private:\n+    std::array<uint64_t, SIZE_BYTES> rotations; // Cached key rotations",
      "path": "src/obfuscation.h",
      "position": null,
      "original_position": 24,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n    // Cached key rotations for different offsets.\r\n    std::array<uint64_t, SIZE_BYTES> m_rotations;\r\n    \r\n```\r\nMost important for me is `m_`-prefix, newline and comment are nits.",
      "created_at": "2025-04-22T07:48:01Z",
      "updated_at": "2025-04-22T12:30:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2053538744",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053538744"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053627072",
      "pull_request_review_id": 2783071854,
      "id": 2053627072,
      "node_id": "PRRC_kwDOABII5856Z9zA",
      "diff_hunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_OBFUSCATION_H\n+#define BITCOIN_OBFUSCATION_H\n+\n+#include <array>\n+#include <cassert>\n+#include <cstdint>\n+#include <random>\n+#include <span.h>\n+#include <util/check.h>\n+#include <cstring>\n+#include <climits>\n+#include <serialize.h>",
      "path": "src/obfuscation.h",
      "position": null,
      "original_position": 16,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "util/check.h, random and cstring seem unused?\r\nbit-header seems required for `rotr` and `std::endian`.\r\n\r\n```suggestion\r\n#include <serialize.h>\r\n#include <span.h>\r\n\r\n#include <array>\r\n#include <bit>\r\n#include <cassert>\r\n#include <climits>\r\n#include <cstdint>\r\n```",
      "created_at": "2025-04-22T08:38:10Z",
      "updated_at": "2025-04-22T12:30:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2053627072",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053627072"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 8,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053632651",
      "pull_request_review_id": 2783071854,
      "id": 2053632651,
      "node_id": "PRRC_kwDOABII5856Z_KL",
      "diff_hunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_OBFUSCATION_H\n+#define BITCOIN_OBFUSCATION_H\n+\n+#include <array>\n+#include <cassert>\n+#include <cstdint>\n+#include <random>\n+#include <span.h>\n+#include <util/check.h>\n+#include <cstring>\n+#include <climits>\n+#include <serialize.h>\n+\n+class Obfuscation\n+{\n+public:\n+    static constexpr size_t SIZE_BYTES{sizeof(uint64_t)};\n+\n+private:",
      "path": "src/obfuscation.h",
      "position": null,
      "original_position": 23,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Might as well move the `private` section last and merge the two `public` ones?",
      "created_at": "2025-04-22T08:41:25Z",
      "updated_at": "2025-04-22T12:30:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2053632651",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053632651"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053635433",
      "pull_request_review_id": 2783071854,
      "id": 2053635433,
      "node_id": "PRRC_kwDOABII5856Z_1p",
      "diff_hunk": "@@ -57,7 +47,7 @@ BOOST_AUTO_TEST_CASE(dbwrapper_basic_data)\n         bool res_bool;\n \n         // Ensure that we're doing real obfuscation when obfuscate=true\n-        BOOST_CHECK(obfuscate != is_null_key(dbwrapper_private::GetObfuscateKey(dbw)));\n+        BOOST_CHECK(obfuscate == dbwrapper_private::GetObfuscation(dbw));",
      "path": "src/test/dbwrapper_tests.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:\r\n```suggestion\r\n        BOOST_CHECK_EQUAL(obfuscate, dbwrapper_private::GetObfuscation(dbw));\r\n```\r\nHere and above on line 30.",
      "created_at": "2025-04-22T08:42:58Z",
      "updated_at": "2025-04-22T12:30:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2053635433",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053635433"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053648375",
      "pull_request_review_id": 2783071854,
      "id": 2053648375,
      "node_id": "PRRC_kwDOABII5856aC_3",
      "diff_hunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_OBFUSCATION_H\n+#define BITCOIN_OBFUSCATION_H\n+\n+#include <array>\n+#include <cassert>\n+#include <cstdint>\n+#include <random>\n+#include <span.h>\n+#include <util/check.h>\n+#include <cstring>\n+#include <climits>\n+#include <serialize.h>\n+\n+class Obfuscation\n+{\n+public:\n+    static constexpr size_t SIZE_BYTES{sizeof(uint64_t)};\n+\n+private:\n+    std::array<uint64_t, SIZE_BYTES> rotations; // Cached key rotations\n+    void SetRotations(const uint64_t key)\n+    {\n+        for (size_t i{0}; i < SIZE_BYTES; ++i) {\n+            size_t key_rotation_bits{CHAR_BIT * i};\n+            if constexpr (std::endian::native == std::endian::big) key_rotation_bits *= -1;\n+            rotations[i] = std::rotr(key, key_rotation_bits);\n+        }\n+    }\n+\n+    static uint64_t ToUint64(const std::span<const std::byte, SIZE_BYTES> key_span)\n+    {\n+        uint64_t key{};\n+        std::memcpy(&key, key_span.data(), SIZE_BYTES);\n+        return key;\n+    }\n+\n+    static void Xor(std::span<std::byte> write, const uint64_t key, const size_t size)\n+    {\n+        assert(size <= write.size());\n+        uint64_t raw{};\n+        std::memcpy(&raw, write.data(), size);\n+        raw ^= key;\n+        std::memcpy(write.data(), &raw, size);\n+    }\n+\n+public:\n+    Obfuscation(const uint64_t key) { SetRotations(key); }\n+    Obfuscation(const std::span<const std::byte, SIZE_BYTES> key_span) : Obfuscation(ToUint64(key_span)) {}\n+    Obfuscation(const std::vector<uint8_t>& key_vec) : Obfuscation(MakeByteSpan(key_vec).first<SIZE_BYTES>()) {}\n+    Obfuscation(const std::vector<std::byte>& key_vec) : Obfuscation(std::span(key_vec).first<SIZE_BYTES>()) {}\n+\n+    uint64_t Key() const { return rotations[0]; }\n+    operator bool() const { return Key() != 0; }\n+    void operator()(std::span<std::byte> write, const size_t key_offset_bytes = 0) const",
      "path": "src/obfuscation.h",
      "position": null,
      "original_position": 58,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: This is inherited from stream.h, but could change to \"target\"/\"dest\" to make it more of a noun?\r\n```suggestion\r\n    void operator()(std::span<std::byte> target, const size_t key_offset_bytes = 0) const\r\n```\r\nSame in `xor_roundtrip_random_chunks` and `xor_bytes_reference` test cases.",
      "created_at": "2025-04-22T08:48:29Z",
      "updated_at": "2025-04-22T12:30:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2053648375",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053648375"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053675574",
      "pull_request_review_id": 2783071854,
      "id": 2053675574,
      "node_id": "PRRC_kwDOABII5856aJo2",
      "diff_hunk": "@@ -411,10 +402,6 @@ void CDBIterator::SeekToFirst() { m_impl_iter->iter->SeekToFirst(); }\n void CDBIterator::Next() { m_impl_iter->iter->Next(); }\n \n namespace dbwrapper_private {\n-\n-const std::vector<unsigned char>& GetObfuscateKey(const CDBWrapper &w)\n-{\n-    return w.obfuscate_key;\n-}\n+const std::vector<unsigned char>& GetObfuscateKey(const CDBWrapper& w) { return w.obfuscate_key; }",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 77,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "118d8083b913e130b073ed3ad0eeb5aca4887899",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Commit message in 118d8083b913e130b073ed3ad0eeb5aca4887899:\r\n\r\n```diff\r\n- This commit inlines the obfuscate‑key initialization, replaces `key_exists` with `key_missing`, and simplifies the `if` condition that writes a new obfuscation key.\r\n- The `CreateObfuscateKey` method and its private helper are removed.\r\n+ This commit inlines the `CreateObfuscateKey` method, replaces `key_exists` with `key_missing`, and simplifies the `if` condition that writes a new obfuscation key.\r\n```\r\n\r\n1. This private method is just reformatted. Maybe a case of moving changes between commits. Seems unnecessary.\r\n\r\n2. \"The `CreateObfuscateKey` method is inlined\" might be more precise?",
      "created_at": "2025-04-22T09:00:21Z",
      "updated_at": "2025-04-22T12:30:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2053675574",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053675574"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 405,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053721792",
      "pull_request_review_id": 2783071854,
      "id": 2053721792,
      "node_id": "PRRC_kwDOABII5856aU7A",
      "diff_hunk": "@@ -13,19 +13,129 @@\n #include <boost/test/unit_test.hpp>\n \n using namespace std::string_literals;\n+using namespace util::hex_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+// Test that obfuscation can be properly reversed even with random chunk sizes.\n+BOOST_AUTO_TEST_CASE(xor_roundtrip_random_chunks)\n+{\n+    auto apply_random_xor_chunks{[&](std::span<std::byte> write, const Obfuscation& obfuscation) {\n+        for (size_t offset{0}; offset < write.size();) {\n+            const size_t chunk_size{1 + m_rng.randrange(write.size() - offset)};\n+            obfuscation(write.subspan(offset, chunk_size), offset);\n+            offset += chunk_size;\n+        }\n+    }};\n+\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + m_rng.randrange(100U)};\n+        const std::vector original{m_rng.randbytes<std::byte>(write_size)};\n+        std::vector roundtrip{original};\n+\n+        const auto key_bytes{m_rng.randbytes<std::byte>(Obfuscation::SIZE_BYTES)};\n+        const Obfuscation obfuscation{key_bytes};\n+        apply_random_xor_chunks(roundtrip, obfuscation);\n+\n+        // Verify intermediate state is different from original (unless key is zero)\n+        const bool all_zero = !obfuscation || (HexStr(key_bytes).find_first_not_of('0') >= write_size * 2);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would rather skip converting to string:\r\n```suggestion\r\n        const bool all_zero = !obfuscation || (static_cast<size_t>(std::count(key_bytes.begin(), key_bytes.begin() + write_size, std::byte{0})) == write_size);\r\n```",
      "created_at": "2025-04-22T09:23:39Z",
      "updated_at": "2025-04-22T12:30:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2053721792",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053721792"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053769498",
      "pull_request_review_id": 2783071854,
      "id": 2053769498,
      "node_id": "PRRC_kwDOABII5856agka",
      "diff_hunk": "@@ -13,19 +13,129 @@\n #include <boost/test/unit_test.hpp>\n \n using namespace std::string_literals;\n+using namespace util::hex_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+// Test that obfuscation can be properly reversed even with random chunk sizes.\n+BOOST_AUTO_TEST_CASE(xor_roundtrip_random_chunks)\n+{\n+    auto apply_random_xor_chunks{[&](std::span<std::byte> write, const Obfuscation& obfuscation) {\n+        for (size_t offset{0}; offset < write.size();) {\n+            const size_t chunk_size{1 + m_rng.randrange(write.size() - offset)};\n+            obfuscation(write.subspan(offset, chunk_size), offset);\n+            offset += chunk_size;\n+        }\n+    }};\n+\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + m_rng.randrange(100U)};\n+        const std::vector original{m_rng.randbytes<std::byte>(write_size)};\n+        std::vector roundtrip{original};\n+\n+        const auto key_bytes{m_rng.randbytes<std::byte>(Obfuscation::SIZE_BYTES)};\n+        const Obfuscation obfuscation{key_bytes};\n+        apply_random_xor_chunks(roundtrip, obfuscation);\n+\n+        // Verify intermediate state is different from original (unless key is zero)\n+        const bool all_zero = !obfuscation || (HexStr(key_bytes).find_first_not_of('0') >= write_size * 2);\n+        BOOST_CHECK_EQUAL(original != roundtrip, !all_zero);\n+\n+        apply_random_xor_chunks(roundtrip, obfuscation);\n+        BOOST_CHECK(original == roundtrip);\n+    }\n+}\n+\n+// Compares optimized obfuscation against a trivial byte-by-byte reference implementation\n+// with random offsets to ensure proper handling of key wrapping.\n+BOOST_AUTO_TEST_CASE(xor_bytes_reference)\n+{\n+    auto expected_xor{[](std::span<std::byte> write, const std::span<const std::byte> key, size_t key_offset) {\n+        for (auto& b : write) {\n+            b ^= key[key_offset++ % key.size()];\n+        }\n+    }};\n+\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + m_rng.randrange(100U)};\n+        const size_t key_offset{m_rng.randrange(3 * 8U)}; // Should wrap around\n+\n+        const auto key_bytes{m_rng.randbytes<std::byte>(Obfuscation::SIZE_BYTES)};\n+        const Obfuscation obfuscation{key_bytes};\n+        std::vector expected{m_rng.randbytes<std::byte>(write_size)};\n+        std::vector actual{expected};\n+\n+        expected_xor(expected, key_bytes, key_offset);\n+        obfuscation(actual, key_offset);\n+\n+        BOOST_CHECK_EQUAL_COLLECTIONS(expected.begin(), expected.end(), actual.begin(), actual.end());\n+    }\n+}\n+\n+\n+BOOST_AUTO_TEST_CASE(obfuscation_constructors)\n+{\n+    constexpr uint64_t test_key = 0x0123456789ABCDEF;\n+\n+    // Direct uint64_t constructor\n+    const Obfuscation obf1{test_key};\n+    BOOST_CHECK_EQUAL(obf1.Key(), test_key);\n+\n+    // std::span constructor\n+    std::array<std::byte, Obfuscation::SIZE_BYTES> key_bytes{};\n+    std::memcpy(key_bytes.data(), &test_key, Obfuscation::SIZE_BYTES);\n+    const Obfuscation obf2{std::span{key_bytes}};\n+    BOOST_CHECK_EQUAL(obf2.Key(), test_key);\n+\n+    // std::vector<uint8_t> constructor\n+    std::vector<uint8_t> uint8_key(Obfuscation::SIZE_BYTES);\n+    std::memcpy(uint8_key.data(), &test_key, uint8_key.size());\n+    const Obfuscation obf4{uint8_key};",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 81,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`obf3` went missing.",
      "created_at": "2025-04-22T09:50:35Z",
      "updated_at": "2025-04-22T12:30:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2053769498",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053769498"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053773631",
      "pull_request_review_id": 2783071854,
      "id": 2053773631,
      "node_id": "PRRC_kwDOABII5856ahk_",
      "diff_hunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_OBFUSCATION_H\n+#define BITCOIN_OBFUSCATION_H\n+\n+#include <array>\n+#include <cassert>\n+#include <cstdint>\n+#include <random>\n+#include <span.h>\n+#include <util/check.h>\n+#include <cstring>\n+#include <climits>\n+#include <serialize.h>\n+\n+class Obfuscation\n+{\n+public:\n+    static constexpr size_t SIZE_BYTES{sizeof(uint64_t)};\n+\n+private:\n+    std::array<uint64_t, SIZE_BYTES> rotations; // Cached key rotations\n+    void SetRotations(const uint64_t key)\n+    {\n+        for (size_t i{0}; i < SIZE_BYTES; ++i) {\n+            size_t key_rotation_bits{CHAR_BIT * i};\n+            if constexpr (std::endian::native == std::endian::big) key_rotation_bits *= -1;\n+            rotations[i] = std::rotr(key, key_rotation_bits);\n+        }\n+    }\n+\n+    static uint64_t ToUint64(const std::span<const std::byte, SIZE_BYTES> key_span)\n+    {\n+        uint64_t key{};\n+        std::memcpy(&key, key_span.data(), SIZE_BYTES);\n+        return key;\n+    }\n+\n+    static void Xor(std::span<std::byte> write, const uint64_t key, const size_t size)\n+    {\n+        assert(size <= write.size());\n+        uint64_t raw{};\n+        std::memcpy(&raw, write.data(), size);\n+        raw ^= key;\n+        std::memcpy(write.data(), &raw, size);\n+    }\n+\n+public:\n+    Obfuscation(const uint64_t key) { SetRotations(key); }\n+    Obfuscation(const std::span<const std::byte, SIZE_BYTES> key_span) : Obfuscation(ToUint64(key_span)) {}\n+    Obfuscation(const std::vector<uint8_t>& key_vec) : Obfuscation(MakeByteSpan(key_vec).first<SIZE_BYTES>()) {}\n+    Obfuscation(const std::vector<std::byte>& key_vec) : Obfuscation(std::span(key_vec).first<SIZE_BYTES>()) {}",
      "path": "src/obfuscation.h",
      "position": 24,
      "original_position": 54,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`span::first()` is unchecked (https://en.cppreference.com/w/cpp/container/span/first), so we may be reading out of bounds of these vectors.\r\n\r\nI managed to make it work with these constructors, part of larger diff which uses `std::array` over `std::vector` in most places:\r\n```suggestion\r\n    Obfuscation(std::span<const std::byte, SIZE_BYTES> key_span) : Obfuscation(ToUint64(key_span)) {}\r\n    Obfuscation(std::span<const uint8_t, SIZE_BYTES> key_span) : Obfuscation(MakeByteSpan(key_span).first<SIZE_BYTES>()) {}\r\n```",
      "created_at": "2025-04-22T09:53:00Z",
      "updated_at": "2025-04-22T12:30:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2053773631",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053773631"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": 22,
      "original_start_line": 52,
      "start_side": "RIGHT",
      "line": 24,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053952306",
      "pull_request_review_id": 2783071854,
      "id": 2053952306,
      "node_id": "PRRC_kwDOABII5856bNMy",
      "diff_hunk": "@@ -227,29 +289,32 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Degenerate case\n     {\n         DataStream ds{in};\n-        ds.Xor({0x00, 0x00});\n+        ds.Xor(\"0000000000000000\"_hex_v_u8);\n         BOOST_CHECK_EQUAL(\"\"s, ds.str());\n     }\n \n     in.push_back(std::byte{0x0f});\n     in.push_back(std::byte{0xf0});\n \n-    // Single character key\n     {\n+        const auto key_bytes{\"ffffffffffffffff\"_hex_v};\n+        uint64_t xor_key;\n+        std::memcpy(&xor_key, key_bytes.data(), sizeof(xor_key));\n+\n         DataStream ds{in};\n-        ds.Xor({0xff});\n+        ds.Xor(\"ffffffffffffffff\"_hex_v_u8);\n         BOOST_CHECK_EQUAL(\"\\xf0\\x0f\"s, ds.str());\n     }\n \n-    // Multi character key\n-\n     in.clear();\n     in.push_back(std::byte{0xf0});\n     in.push_back(std::byte{0x0f});\n \n     {\n+        const auto key_bytes{\"ff0fff0fff0fff0f\"_hex_v};",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 151,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "71eb6eaa740ad0b28737e90e59b89a8e951d90d9",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 71eb6eaa740ad0b28737e90e59b89a8e951d90d9:\r\n`key_bytes` is unused.",
      "created_at": "2025-04-22T11:51:09Z",
      "updated_at": "2025-04-22T12:30:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2053952306",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053952306"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053955176",
      "pull_request_review_id": 2783071854,
      "id": 2053955176,
      "node_id": "PRRC_kwDOABII5856bN5o",
      "diff_hunk": "@@ -227,29 +289,32 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Degenerate case\n     {\n         DataStream ds{in};\n-        ds.Xor({0x00, 0x00});\n+        ds.Xor(\"0000000000000000\"_hex_v_u8);\n         BOOST_CHECK_EQUAL(\"\"s, ds.str());\n     }\n \n     in.push_back(std::byte{0x0f});\n     in.push_back(std::byte{0xf0});\n \n-    // Single character key\n     {\n+        const auto key_bytes{\"ffffffffffffffff\"_hex_v};\n+        uint64_t xor_key;\n+        std::memcpy(&xor_key, key_bytes.data(), sizeof(xor_key));",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 136,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "71eb6eaa740ad0b28737e90e59b89a8e951d90d9",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 71eb6eaa740ad0b28737e90e59b89a8e951d90d9:\r\n`key_bytes` and `xor_key` are unused after this.",
      "created_at": "2025-04-22T11:53:05Z",
      "updated_at": "2025-04-22T12:30:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2053955176",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2053955176"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 300,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 302,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054042572",
      "pull_request_review_id": 2783985983,
      "id": 2054042572,
      "node_id": "PRRC_kwDOABII5856bjPM",
      "diff_hunk": "@@ -248,24 +252,24 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    {\n+        m_obfuscation = 0; // Needed for unobfuscated Read",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053511581,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is needed to be able to read without obfuscation - as the comment states. Can you suggest how to reword that to make it obvious?",
      "created_at": "2025-04-22T12:46:24Z",
      "updated_at": "2025-04-22T12:46:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2054042572",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054042572"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054043508",
      "pull_request_review_id": 2783987567,
      "id": 2054043508,
      "node_id": "PRRC_kwDOABII5856bjd0",
      "diff_hunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers",
      "path": "src/obfuscation.h",
      "position": null,
      "original_position": 1,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053535171,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm moving code, I never know what that implies",
      "created_at": "2025-04-22T12:46:58Z",
      "updated_at": "2025-04-22T12:46:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2054043508",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054043508"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054107249",
      "pull_request_review_id": 2784094638,
      "id": 2054107249,
      "node_id": "PRRC_kwDOABII5856bzBx",
      "diff_hunk": "@@ -248,24 +252,24 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    {\n+        m_obfuscation = 0; // Needed for unobfuscated Read",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053511581,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> This is needed to be able to read without obfuscation - as the comment states.\r\n\r\nWhy does it need to be set to zero again when it's been set in the initializer list of this same ctor?",
      "created_at": "2025-04-22T13:21:46Z",
      "updated_at": "2025-04-22T13:21:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2054107249",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054107249"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054469201",
      "pull_request_review_id": 2784693978,
      "id": 2054469201,
      "node_id": "PRRC_kwDOABII5856dLZR",
      "diff_hunk": "@@ -6,19 +6,27 @@\n #include <random.h>\n #include <span.h>\n #include <streams.h>\n+#include <util/byte_units.h>\n \n+#include <cmath>\n #include <cstddef>\n+#include <map>",
      "path": "src/bench/xor.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053495512,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-04-22T16:35:04Z",
      "updated_at": "2025-04-22T16:35:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2054469201",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054469201"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054469498",
      "pull_request_review_id": 2784694389,
      "id": 2054469498,
      "node_id": "PRRC_kwDOABII5856dLd6",
      "diff_hunk": "@@ -248,24 +252,24 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    {\n+        m_obfuscation = 0; // Needed for unobfuscated Read",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053511581,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've changed it to an assert - if that's what you meant.",
      "created_at": "2025-04-22T16:35:15Z",
      "updated_at": "2025-04-22T16:35:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2054469498",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054469498"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054469693",
      "pull_request_review_id": 2784694736,
      "id": 2054469693,
      "node_id": "PRRC_kwDOABII5856dLg9",
      "diff_hunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers",
      "path": "src/obfuscation.h",
      "position": null,
      "original_position": 1,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053535171,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Changed anyway",
      "created_at": "2025-04-22T16:35:24Z",
      "updated_at": "2025-04-22T16:35:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2054469693",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054469693"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054469803",
      "pull_request_review_id": 2784694916,
      "id": 2054469803,
      "node_id": "PRRC_kwDOABII5856dLir",
      "diff_hunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_OBFUSCATION_H\n+#define BITCOIN_OBFUSCATION_H\n+\n+#include <array>\n+#include <cassert>\n+#include <cstdint>\n+#include <random>\n+#include <span.h>\n+#include <util/check.h>\n+#include <cstring>\n+#include <climits>\n+#include <serialize.h>\n+\n+class Obfuscation\n+{\n+public:\n+    static constexpr size_t SIZE_BYTES{sizeof(uint64_t)};\n+\n+private:\n+    std::array<uint64_t, SIZE_BYTES> rotations; // Cached key rotations",
      "path": "src/obfuscation.h",
      "position": null,
      "original_position": 24,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053538744,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "renamed to `m_rotations`",
      "created_at": "2025-04-22T16:35:29Z",
      "updated_at": "2025-04-22T16:35:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2054469803",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054469803"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054469920",
      "pull_request_review_id": 2784695126,
      "id": 2054469920,
      "node_id": "PRRC_kwDOABII5856dLkg",
      "diff_hunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_OBFUSCATION_H\n+#define BITCOIN_OBFUSCATION_H\n+\n+#include <array>\n+#include <cassert>\n+#include <cstdint>\n+#include <random>\n+#include <span.h>\n+#include <util/check.h>\n+#include <cstring>\n+#include <climits>\n+#include <serialize.h>",
      "path": "src/obfuscation.h",
      "position": null,
      "original_position": 16,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053627072,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Did something similar (except for cstdint)",
      "created_at": "2025-04-22T16:35:34Z",
      "updated_at": "2025-04-22T16:35:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2054469920",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054469920"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 8,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054470025",
      "pull_request_review_id": 2784695305,
      "id": 2054470025,
      "node_id": "PRRC_kwDOABII5856dLmJ",
      "diff_hunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_OBFUSCATION_H\n+#define BITCOIN_OBFUSCATION_H\n+\n+#include <array>\n+#include <cassert>\n+#include <cstdint>\n+#include <random>\n+#include <span.h>\n+#include <util/check.h>\n+#include <cstring>\n+#include <climits>\n+#include <serialize.h>\n+\n+class Obfuscation\n+{\n+public:\n+    static constexpr size_t SIZE_BYTES{sizeof(uint64_t)};\n+\n+private:",
      "path": "src/obfuscation.h",
      "position": null,
      "original_position": 23,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053632651,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Want to avoid this, but I don't actually mind either way - done",
      "created_at": "2025-04-22T16:35:39Z",
      "updated_at": "2025-04-22T16:35:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2054470025",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054470025"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054470143",
      "pull_request_review_id": 2784695472,
      "id": 2054470143,
      "node_id": "PRRC_kwDOABII5856dLn_",
      "diff_hunk": "@@ -57,7 +47,7 @@ BOOST_AUTO_TEST_CASE(dbwrapper_basic_data)\n         bool res_bool;\n \n         // Ensure that we're doing real obfuscation when obfuscate=true\n-        BOOST_CHECK(obfuscate != is_null_key(dbwrapper_private::GetObfuscateKey(dbw)));\n+        BOOST_CHECK(obfuscate == dbwrapper_private::GetObfuscation(dbw));",
      "path": "src/test/dbwrapper_tests.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053635433,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-04-22T16:35:44Z",
      "updated_at": "2025-04-22T16:35:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2054470143",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054470143"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054470225",
      "pull_request_review_id": 2784695626,
      "id": 2054470225,
      "node_id": "PRRC_kwDOABII5856dLpR",
      "diff_hunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_OBFUSCATION_H\n+#define BITCOIN_OBFUSCATION_H\n+\n+#include <array>\n+#include <cassert>\n+#include <cstdint>\n+#include <random>\n+#include <span.h>\n+#include <util/check.h>\n+#include <cstring>\n+#include <climits>\n+#include <serialize.h>\n+\n+class Obfuscation\n+{\n+public:\n+    static constexpr size_t SIZE_BYTES{sizeof(uint64_t)};\n+\n+private:\n+    std::array<uint64_t, SIZE_BYTES> rotations; // Cached key rotations\n+    void SetRotations(const uint64_t key)\n+    {\n+        for (size_t i{0}; i < SIZE_BYTES; ++i) {\n+            size_t key_rotation_bits{CHAR_BIT * i};\n+            if constexpr (std::endian::native == std::endian::big) key_rotation_bits *= -1;\n+            rotations[i] = std::rotr(key, key_rotation_bits);\n+        }\n+    }\n+\n+    static uint64_t ToUint64(const std::span<const std::byte, SIZE_BYTES> key_span)\n+    {\n+        uint64_t key{};\n+        std::memcpy(&key, key_span.data(), SIZE_BYTES);\n+        return key;\n+    }\n+\n+    static void Xor(std::span<std::byte> write, const uint64_t key, const size_t size)\n+    {\n+        assert(size <= write.size());\n+        uint64_t raw{};\n+        std::memcpy(&raw, write.data(), size);\n+        raw ^= key;\n+        std::memcpy(write.data(), &raw, size);\n+    }\n+\n+public:\n+    Obfuscation(const uint64_t key) { SetRotations(key); }\n+    Obfuscation(const std::span<const std::byte, SIZE_BYTES> key_span) : Obfuscation(ToUint64(key_span)) {}\n+    Obfuscation(const std::vector<uint8_t>& key_vec) : Obfuscation(MakeByteSpan(key_vec).first<SIZE_BYTES>()) {}\n+    Obfuscation(const std::vector<std::byte>& key_vec) : Obfuscation(std::span(key_vec).first<SIZE_BYTES>()) {}\n+\n+    uint64_t Key() const { return rotations[0]; }\n+    operator bool() const { return Key() != 0; }\n+    void operator()(std::span<std::byte> write, const size_t key_offset_bytes = 0) const",
      "path": "src/obfuscation.h",
      "position": null,
      "original_position": 58,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053648375,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-04-22T16:35:48Z",
      "updated_at": "2025-04-22T16:35:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2054470225",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054470225"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054470316",
      "pull_request_review_id": 2784695784,
      "id": 2054470316,
      "node_id": "PRRC_kwDOABII5856dLqs",
      "diff_hunk": "@@ -411,10 +402,6 @@ void CDBIterator::SeekToFirst() { m_impl_iter->iter->SeekToFirst(); }\n void CDBIterator::Next() { m_impl_iter->iter->Next(); }\n \n namespace dbwrapper_private {\n-\n-const std::vector<unsigned char>& GetObfuscateKey(const CDBWrapper &w)\n-{\n-    return w.obfuscate_key;\n-}\n+const std::vector<unsigned char>& GetObfuscateKey(const CDBWrapper& w) { return w.obfuscate_key; }",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 77,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "118d8083b913e130b073ed3ad0eeb5aca4887899",
      "in_reply_to_id": 2053675574,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Did something similar",
      "created_at": "2025-04-22T16:35:53Z",
      "updated_at": "2025-04-22T16:35:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2054470316",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054470316"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 405,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054473019",
      "pull_request_review_id": 2784700321,
      "id": 2054473019,
      "node_id": "PRRC_kwDOABII5856dMU7",
      "diff_hunk": "@@ -13,19 +13,129 @@\n #include <boost/test/unit_test.hpp>\n \n using namespace std::string_literals;\n+using namespace util::hex_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+// Test that obfuscation can be properly reversed even with random chunk sizes.\n+BOOST_AUTO_TEST_CASE(xor_roundtrip_random_chunks)\n+{\n+    auto apply_random_xor_chunks{[&](std::span<std::byte> write, const Obfuscation& obfuscation) {\n+        for (size_t offset{0}; offset < write.size();) {\n+            const size_t chunk_size{1 + m_rng.randrange(write.size() - offset)};\n+            obfuscation(write.subspan(offset, chunk_size), offset);\n+            offset += chunk_size;\n+        }\n+    }};\n+\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + m_rng.randrange(100U)};\n+        const std::vector original{m_rng.randbytes<std::byte>(write_size)};\n+        std::vector roundtrip{original};\n+\n+        const auto key_bytes{m_rng.randbytes<std::byte>(Obfuscation::SIZE_BYTES)};\n+        const Obfuscation obfuscation{key_bytes};\n+        apply_random_xor_chunks(roundtrip, obfuscation);\n+\n+        // Verify intermediate state is different from original (unless key is zero)\n+        const bool all_zero = !obfuscation || (HexStr(key_bytes).find_first_not_of('0') >= write_size * 2);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053721792,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "None are very readable, but I still find the stringy one simpler to read - the performance doesn't matter here at all",
      "created_at": "2025-04-22T16:37:54Z",
      "updated_at": "2025-04-22T16:37:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2054473019",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054473019"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054474183",
      "pull_request_review_id": 2784702499,
      "id": 2054474183,
      "node_id": "PRRC_kwDOABII5856dMnH",
      "diff_hunk": "@@ -13,19 +13,129 @@\n #include <boost/test/unit_test.hpp>\n \n using namespace std::string_literals;\n+using namespace util::hex_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+// Test that obfuscation can be properly reversed even with random chunk sizes.\n+BOOST_AUTO_TEST_CASE(xor_roundtrip_random_chunks)\n+{\n+    auto apply_random_xor_chunks{[&](std::span<std::byte> write, const Obfuscation& obfuscation) {\n+        for (size_t offset{0}; offset < write.size();) {\n+            const size_t chunk_size{1 + m_rng.randrange(write.size() - offset)};\n+            obfuscation(write.subspan(offset, chunk_size), offset);\n+            offset += chunk_size;\n+        }\n+    }};\n+\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + m_rng.randrange(100U)};\n+        const std::vector original{m_rng.randbytes<std::byte>(write_size)};\n+        std::vector roundtrip{original};\n+\n+        const auto key_bytes{m_rng.randbytes<std::byte>(Obfuscation::SIZE_BYTES)};\n+        const Obfuscation obfuscation{key_bytes};\n+        apply_random_xor_chunks(roundtrip, obfuscation);\n+\n+        // Verify intermediate state is different from original (unless key is zero)\n+        const bool all_zero = !obfuscation || (HexStr(key_bytes).find_first_not_of('0') >= write_size * 2);\n+        BOOST_CHECK_EQUAL(original != roundtrip, !all_zero);\n+\n+        apply_random_xor_chunks(roundtrip, obfuscation);\n+        BOOST_CHECK(original == roundtrip);\n+    }\n+}\n+\n+// Compares optimized obfuscation against a trivial byte-by-byte reference implementation\n+// with random offsets to ensure proper handling of key wrapping.\n+BOOST_AUTO_TEST_CASE(xor_bytes_reference)\n+{\n+    auto expected_xor{[](std::span<std::byte> write, const std::span<const std::byte> key, size_t key_offset) {\n+        for (auto& b : write) {\n+            b ^= key[key_offset++ % key.size()];\n+        }\n+    }};\n+\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + m_rng.randrange(100U)};\n+        const size_t key_offset{m_rng.randrange(3 * 8U)}; // Should wrap around\n+\n+        const auto key_bytes{m_rng.randbytes<std::byte>(Obfuscation::SIZE_BYTES)};\n+        const Obfuscation obfuscation{key_bytes};\n+        std::vector expected{m_rng.randbytes<std::byte>(write_size)};\n+        std::vector actual{expected};\n+\n+        expected_xor(expected, key_bytes, key_offset);\n+        obfuscation(actual, key_offset);\n+\n+        BOOST_CHECK_EQUAL_COLLECTIONS(expected.begin(), expected.end(), actual.begin(), actual.end());\n+    }\n+}\n+\n+\n+BOOST_AUTO_TEST_CASE(obfuscation_constructors)\n+{\n+    constexpr uint64_t test_key = 0x0123456789ABCDEF;\n+\n+    // Direct uint64_t constructor\n+    const Obfuscation obf1{test_key};\n+    BOOST_CHECK_EQUAL(obf1.Key(), test_key);\n+\n+    // std::span constructor\n+    std::array<std::byte, Obfuscation::SIZE_BYTES> key_bytes{};\n+    std::memcpy(key_bytes.data(), &test_key, Obfuscation::SIZE_BYTES);\n+    const Obfuscation obf2{std::span{key_bytes}};\n+    BOOST_CHECK_EQUAL(obf2.Key(), test_key);\n+\n+    // std::vector<uint8_t> constructor\n+    std::vector<uint8_t> uint8_key(Obfuscation::SIZE_BYTES);\n+    std::memcpy(uint8_key.data(), &test_key, uint8_key.size());\n+    const Obfuscation obf4{uint8_key};",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 81,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053769498,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hah, removed a constructor during refactoring and left these - moved them to braced scopes, this way the names can be the same",
      "created_at": "2025-04-22T16:38:41Z",
      "updated_at": "2025-04-22T16:38:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2054474183",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054474183"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054475071",
      "pull_request_review_id": 2784703870,
      "id": 2054475071,
      "node_id": "PRRC_kwDOABII5856dM0_",
      "diff_hunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_OBFUSCATION_H\n+#define BITCOIN_OBFUSCATION_H\n+\n+#include <array>\n+#include <cassert>\n+#include <cstdint>\n+#include <random>\n+#include <span.h>\n+#include <util/check.h>\n+#include <cstring>\n+#include <climits>\n+#include <serialize.h>\n+\n+class Obfuscation\n+{\n+public:\n+    static constexpr size_t SIZE_BYTES{sizeof(uint64_t)};\n+\n+private:\n+    std::array<uint64_t, SIZE_BYTES> rotations; // Cached key rotations\n+    void SetRotations(const uint64_t key)\n+    {\n+        for (size_t i{0}; i < SIZE_BYTES; ++i) {\n+            size_t key_rotation_bits{CHAR_BIT * i};\n+            if constexpr (std::endian::native == std::endian::big) key_rotation_bits *= -1;\n+            rotations[i] = std::rotr(key, key_rotation_bits);\n+        }\n+    }\n+\n+    static uint64_t ToUint64(const std::span<const std::byte, SIZE_BYTES> key_span)\n+    {\n+        uint64_t key{};\n+        std::memcpy(&key, key_span.data(), SIZE_BYTES);\n+        return key;\n+    }\n+\n+    static void Xor(std::span<std::byte> write, const uint64_t key, const size_t size)\n+    {\n+        assert(size <= write.size());\n+        uint64_t raw{};\n+        std::memcpy(&raw, write.data(), size);\n+        raw ^= key;\n+        std::memcpy(write.data(), &raw, size);\n+    }\n+\n+public:\n+    Obfuscation(const uint64_t key) { SetRotations(key); }\n+    Obfuscation(const std::span<const std::byte, SIZE_BYTES> key_span) : Obfuscation(ToUint64(key_span)) {}\n+    Obfuscation(const std::vector<uint8_t>& key_vec) : Obfuscation(MakeByteSpan(key_vec).first<SIZE_BYTES>()) {}\n+    Obfuscation(const std::vector<std::byte>& key_vec) : Obfuscation(std::span(key_vec).first<SIZE_BYTES>()) {}",
      "path": "src/obfuscation.h",
      "position": 24,
      "original_position": 54,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053773631,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm not yet sure about the array (tried it, CI or local IBD didn't work for the reason you've also mentioned) - will take a look at that later",
      "created_at": "2025-04-22T16:39:16Z",
      "updated_at": "2025-04-22T16:39:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2054475071",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054475071"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": 22,
      "original_start_line": 52,
      "start_side": "RIGHT",
      "line": 24,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054475842",
      "pull_request_review_id": 2784705176,
      "id": 2054475842,
      "node_id": "PRRC_kwDOABII5856dNBC",
      "diff_hunk": "@@ -213,7 +213,11 @@ struct LevelDBContext {\n };\n \n CDBWrapper::CDBWrapper(const DBParams& params)\n-    : m_db_context{std::make_unique<LevelDBContext>()}, m_name{fs::PathToString(params.path.stem())}, m_path{params.path}, m_is_memory{params.memory_only}\n+    : m_db_context{std::make_unique<LevelDBContext>()},\n+      m_name{fs::PathToString(params.path.stem())},\n+      m_obfuscation{0},",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053502958,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-04-22T16:39:50Z",
      "updated_at": "2025-04-22T16:39:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2054475842",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054475842"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 218,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054477284",
      "pull_request_review_id": 2784707455,
      "id": 2054477284,
      "node_id": "PRRC_kwDOABII5856dNXk",
      "diff_hunk": "@@ -227,29 +289,32 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Degenerate case\n     {\n         DataStream ds{in};\n-        ds.Xor({0x00, 0x00});\n+        ds.Xor(\"0000000000000000\"_hex_v_u8);\n         BOOST_CHECK_EQUAL(\"\"s, ds.str());\n     }\n \n     in.push_back(std::byte{0x0f});\n     in.push_back(std::byte{0xf0});\n \n-    // Single character key\n     {\n+        const auto key_bytes{\"ffffffffffffffff\"_hex_v};\n+        uint64_t xor_key;\n+        std::memcpy(&xor_key, key_bytes.data(), sizeof(xor_key));\n+\n         DataStream ds{in};\n-        ds.Xor({0xff});\n+        ds.Xor(\"ffffffffffffffff\"_hex_v_u8);\n         BOOST_CHECK_EQUAL(\"\\xf0\\x0f\"s, ds.str());\n     }\n \n-    // Multi character key\n-\n     in.clear();\n     in.push_back(std::byte{0xf0});\n     in.push_back(std::byte{0x0f});\n \n     {\n+        const auto key_bytes{\"ff0fff0fff0fff0f\"_hex_v};",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 151,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "71eb6eaa740ad0b28737e90e59b89a8e951d90d9",
      "in_reply_to_id": 2053952306,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Was meant as a simplification for the final commit - but didn't actually use these - thanks, fixed",
      "created_at": "2025-04-22T16:40:53Z",
      "updated_at": "2025-04-22T16:40:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2054477284",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054477284"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054477414",
      "pull_request_review_id": 2784707659,
      "id": 2054477414,
      "node_id": "PRRC_kwDOABII5856dNZm",
      "diff_hunk": "@@ -227,29 +289,32 @@ BOOST_AUTO_TEST_CASE(streams_serializedata_xor)\n     // Degenerate case\n     {\n         DataStream ds{in};\n-        ds.Xor({0x00, 0x00});\n+        ds.Xor(\"0000000000000000\"_hex_v_u8);\n         BOOST_CHECK_EQUAL(\"\"s, ds.str());\n     }\n \n     in.push_back(std::byte{0x0f});\n     in.push_back(std::byte{0xf0});\n \n-    // Single character key\n     {\n+        const auto key_bytes{\"ffffffffffffffff\"_hex_v};\n+        uint64_t xor_key;\n+        std::memcpy(&xor_key, key_bytes.data(), sizeof(xor_key));",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 136,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "71eb6eaa740ad0b28737e90e59b89a8e951d90d9",
      "in_reply_to_id": 2053955176,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed",
      "created_at": "2025-04-22T16:40:59Z",
      "updated_at": "2025-04-22T16:40:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2054477414",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054477414"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 300,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 302,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2056077020",
      "pull_request_review_id": 2787351654,
      "id": 2056077020,
      "node_id": "PRRC_kwDOABII5856jT7c",
      "diff_hunk": "@@ -248,24 +252,24 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    {\n+        m_obfuscation = 0; // Needed for unobfuscated Read",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053511581,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That's better. But I still think it's redundant as the code block now ends with\r\n```C++\r\nm_obfuscation = obfuscate_key_vector;\r\n```\r\nand all code paths lead there.",
      "created_at": "2025-04-23T13:35:53Z",
      "updated_at": "2025-04-23T14:15:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2056077020",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2056077020"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2056093869",
      "pull_request_review_id": 2787351654,
      "id": 2056093869,
      "node_id": "PRRC_kwDOABII5856jYCt",
      "diff_hunk": "@@ -411,10 +402,6 @@ void CDBIterator::SeekToFirst() { m_impl_iter->iter->SeekToFirst(); }\n void CDBIterator::Next() { m_impl_iter->iter->Next(); }\n \n namespace dbwrapper_private {\n-\n-const std::vector<unsigned char>& GetObfuscateKey(const CDBWrapper &w)\n-{\n-    return w.obfuscate_key;\n-}\n+const std::vector<unsigned char>& GetObfuscateKey(const CDBWrapper& w) { return w.obfuscate_key; }",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 77,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "118d8083b913e130b073ed3ad0eeb5aca4887899",
      "in_reply_to_id": 2053675574,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Seems you forgot to remove \"The `CreateObfuscateKey` method and its private helper were also removed.\"?\r\nI think saying CreateObfuscateKey was inlined is sufficient and no private helper was removed as stated above in (1.",
      "created_at": "2025-04-23T13:43:31Z",
      "updated_at": "2025-04-23T14:15:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2056093869",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2056093869"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 405,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2056150490",
      "pull_request_review_id": 2787351654,
      "id": 2056150490,
      "node_id": "PRRC_kwDOABII5856jl3a",
      "diff_hunk": "@@ -13,19 +13,129 @@\n #include <boost/test/unit_test.hpp>\n \n using namespace std::string_literals;\n+using namespace util::hex_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+// Test that obfuscation can be properly reversed even with random chunk sizes.\n+BOOST_AUTO_TEST_CASE(xor_roundtrip_random_chunks)\n+{\n+    auto apply_random_xor_chunks{[&](std::span<std::byte> write, const Obfuscation& obfuscation) {\n+        for (size_t offset{0}; offset < write.size();) {\n+            const size_t chunk_size{1 + m_rng.randrange(write.size() - offset)};\n+            obfuscation(write.subspan(offset, chunk_size), offset);\n+            offset += chunk_size;\n+        }\n+    }};\n+\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + m_rng.randrange(100U)};\n+        const std::vector original{m_rng.randbytes<std::byte>(write_size)};\n+        std::vector roundtrip{original};\n+\n+        const auto key_bytes{m_rng.randbytes<std::byte>(Obfuscation::SIZE_BYTES)};\n+        const Obfuscation obfuscation{key_bytes};\n+        apply_random_xor_chunks(roundtrip, obfuscation);\n+\n+        // Verify intermediate state is different from original (unless key is zero)\n+        const bool all_zero = !obfuscation || (HexStr(key_bytes).find_first_not_of('0') >= write_size * 2);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053721792,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n        const bool all_zero = !obfuscation || std::ranges::all_of(std::span{key_bytes.begin(), write_size}, [](auto& b) { return b == std::byte{0}; });\r\n```\r\n```suggestion\r\n        const bool all_zero = !obfuscation || std::all_of(key_bytes.begin(), key_bytes.begin() + write_size, [](auto& b) { return b == std::byte{0}; });\r\n```",
      "created_at": "2025-04-23T14:10:19Z",
      "updated_at": "2025-04-23T14:15:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2056150490",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2056150490"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2056174501",
      "pull_request_review_id": 2787522472,
      "id": 2056174501,
      "node_id": "PRRC_kwDOABII5856jrul",
      "diff_hunk": "@@ -248,24 +252,24 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    {\n+        m_obfuscation = 0; // Needed for unobfuscated Read",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053511581,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah, can you tell me what's wrong with it? If you have a suggestion that passes ci (and local IBD for some blocks), let me know",
      "created_at": "2025-04-23T14:18:13Z",
      "updated_at": "2025-04-23T14:18:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2056174501",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2056174501"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2056177529",
      "pull_request_review_id": 2787527427,
      "id": 2056177529,
      "node_id": "PRRC_kwDOABII5856jsd5",
      "diff_hunk": "@@ -248,24 +252,24 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    {\n+        m_obfuscation = 0; // Needed for unobfuscated Read",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053511581,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I had that one coming. :)",
      "created_at": "2025-04-23T14:19:43Z",
      "updated_at": "2025-04-23T14:19:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2056177529",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2056177529"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2056830517",
      "pull_request_review_id": 2788618744,
      "id": 2056830517,
      "node_id": "PRRC_kwDOABII5856mL41",
      "diff_hunk": "@@ -6,19 +6,26 @@\n #include <random.h>\n #include <span.h>\n #include <streams.h>\n+#include <util/byte_units.h>\n \n #include <cstddef>\n #include <vector>\n \n-static void Xor(benchmark::Bench& bench)\n+static void XorObfuscationBench(benchmark::Bench& bench)\n {\n-    FastRandomContext frc{/*fDeterministic=*/true};\n-    auto data{frc.randbytes<std::byte>(1024)};\n-    auto key{frc.randbytes<std::byte>(31)};\n+    FastRandomContext rng{/*fDeterministic=*/true};\n+    constexpr size_t bytes{10_MiB};\n+    auto test_data{rng.randbytes<std::byte>(bytes)};\n \n-    bench.batch(data.size()).unit(\"byte\").run([&] {\n-        util::Xor(data, key);\n+    std::vector key_bytes{rng.randbytes<std::byte>(8)};\n+    uint64_t key;\n+    std::memcpy(&key, key_bytes.data(), 8);",
      "path": "src/bench/xor.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "2a50ec0d17b12f2adb1bf8872592b898810e9ac4",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 2a50ec0d17b12f2adb1bf8872592b898810e9ac4:\r\n`key` is no longer used.",
      "created_at": "2025-04-23T20:29:59Z",
      "updated_at": "2025-04-24T07:02:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2056830517",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2056830517"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 21,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2057656754",
      "pull_request_review_id": 2788618744,
      "id": 2057656754,
      "node_id": "PRRC_kwDOABII5856pVmy",
      "diff_hunk": "@@ -248,24 +252,24 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    {\n+        m_obfuscation = 0; // Needed for unobfuscated Read",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053511581,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Inside a ctor which initializes `m_obfuscation{0}` through the header, you have:\r\n```C++\r\n    ...\r\n    {\r\n        std::vector<unsigned char> obfuscate_key_vector(Obfuscation::SIZE_BYTES, '\\000');\r\n        ...\r\n        if (...) {\r\n            ... (modify obfuscate_key_vector)\r\n        }\r\n        m_obfuscation = obfuscate_key_vector;\r\n    }\r\n}\r\n```\r\nDo you feel a need to `assert(m_obfuscation == 0)` at the beginning of the block because the ctor has ~30 preceeding lines? Can't think of another reason.",
      "created_at": "2025-04-24T06:41:38Z",
      "updated_at": "2025-04-24T07:02:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2057656754",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2057656754"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2057968526",
      "pull_request_review_id": 2790425443,
      "id": 2057968526,
      "node_id": "PRRC_kwDOABII5856qhuO",
      "diff_hunk": "@@ -6,19 +6,26 @@\n #include <random.h>\n #include <span.h>\n #include <streams.h>\n+#include <util/byte_units.h>\n \n #include <cstddef>\n #include <vector>\n \n-static void Xor(benchmark::Bench& bench)\n+static void XorObfuscationBench(benchmark::Bench& bench)\n {\n-    FastRandomContext frc{/*fDeterministic=*/true};\n-    auto data{frc.randbytes<std::byte>(1024)};\n-    auto key{frc.randbytes<std::byte>(31)};\n+    FastRandomContext rng{/*fDeterministic=*/true};\n+    constexpr size_t bytes{10_MiB};\n+    auto test_data{rng.randbytes<std::byte>(bytes)};\n \n-    bench.batch(data.size()).unit(\"byte\").run([&] {\n-        util::Xor(data, key);\n+    std::vector key_bytes{rng.randbytes<std::byte>(8)};\n+    uint64_t key;\n+    std::memcpy(&key, key_bytes.data(), 8);",
      "path": "src/bench/xor.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "2a50ec0d17b12f2adb1bf8872592b898810e9ac4",
      "in_reply_to_id": 2056830517,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Oops!…I Did It Again",
      "created_at": "2025-04-24T09:32:51Z",
      "updated_at": "2025-04-24T09:32:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2057968526",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2057968526"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": 21,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2057968721",
      "pull_request_review_id": 2790425797,
      "id": 2057968721,
      "node_id": "PRRC_kwDOABII5856qhxR",
      "diff_hunk": "@@ -13,19 +13,129 @@\n #include <boost/test/unit_test.hpp>\n \n using namespace std::string_literals;\n+using namespace util::hex_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+// Test that obfuscation can be properly reversed even with random chunk sizes.\n+BOOST_AUTO_TEST_CASE(xor_roundtrip_random_chunks)\n+{\n+    auto apply_random_xor_chunks{[&](std::span<std::byte> write, const Obfuscation& obfuscation) {\n+        for (size_t offset{0}; offset < write.size();) {\n+            const size_t chunk_size{1 + m_rng.randrange(write.size() - offset)};\n+            obfuscation(write.subspan(offset, chunk_size), offset);\n+            offset += chunk_size;\n+        }\n+    }};\n+\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + m_rng.randrange(100U)};\n+        const std::vector original{m_rng.randbytes<std::byte>(write_size)};\n+        std::vector roundtrip{original};\n+\n+        const auto key_bytes{m_rng.randbytes<std::byte>(Obfuscation::SIZE_BYTES)};\n+        const Obfuscation obfuscation{key_bytes};\n+        apply_random_xor_chunks(roundtrip, obfuscation);\n+\n+        // Verify intermediate state is different from original (unless key is zero)\n+        const bool all_zero = !obfuscation || (HexStr(key_bytes).find_first_not_of('0') >= write_size * 2);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053721792,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ok, sure, changed it to something similar:\r\n```C++\r\nconst bool all_zeros{!obfuscation || std::ranges::all_of(std::span(key_bytes).first(write_size), [](auto b) { return b == std::byte{0}; })};\r\n```",
      "created_at": "2025-04-24T09:32:58Z",
      "updated_at": "2025-04-24T09:32:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2057968721",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2057968721"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2057968867",
      "pull_request_review_id": 2790426033,
      "id": 2057968867,
      "node_id": "PRRC_kwDOABII5856qhzj",
      "diff_hunk": "@@ -411,10 +402,6 @@ void CDBIterator::SeekToFirst() { m_impl_iter->iter->SeekToFirst(); }\n void CDBIterator::Next() { m_impl_iter->iter->Next(); }\n \n namespace dbwrapper_private {\n-\n-const std::vector<unsigned char>& GetObfuscateKey(const CDBWrapper &w)\n-{\n-    return w.obfuscate_key;\n-}\n+const std::vector<unsigned char>& GetObfuscateKey(const CDBWrapper& w) { return w.obfuscate_key; }",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 77,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "118d8083b913e130b073ed3ad0eeb5aca4887899",
      "in_reply_to_id": 2053675574,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Sure, done",
      "created_at": "2025-04-24T09:33:04Z",
      "updated_at": "2025-04-24T09:33:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2057968867",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2057968867"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 405,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2057969172",
      "pull_request_review_id": 2790426568,
      "id": 2057969172,
      "node_id": "PRRC_kwDOABII5856qh4U",
      "diff_hunk": "@@ -248,24 +252,24 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    {\n+        m_obfuscation = 0; // Needed for unobfuscated Read",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053511581,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`assert(m_obfuscation == 0)` is needed to document (and to make sure) that the obfuscation key is already written with obfuscation turned on, so we have to make sure the obfuscation key is 0 to turn it off for this write only.\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/src/test/dbwrapper_tests.cpp#L29-L46 demonstrates the usage of this call - I've updated it to verify that reopening the database will read the obfuscation key correctly.\r\n\r\nSo without `assert(m_obfuscation == 0)` we might not read back old stored obfuscation keys back correctly. Does that explain it? If not, let's have a call.",
      "created_at": "2025-04-24T09:33:15Z",
      "updated_at": "2025-04-24T09:33:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2057969172",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2057969172"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2058025067",
      "pull_request_review_id": 2790514724,
      "id": 2058025067,
      "node_id": "PRRC_kwDOABII5856qvhr",
      "diff_hunk": "@@ -13,19 +13,129 @@\n #include <boost/test/unit_test.hpp>\n \n using namespace std::string_literals;\n+using namespace util::hex_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+// Test that obfuscation can be properly reversed even with random chunk sizes.\n+BOOST_AUTO_TEST_CASE(xor_roundtrip_random_chunks)\n+{\n+    auto apply_random_xor_chunks{[&](std::span<std::byte> write, const Obfuscation& obfuscation) {\n+        for (size_t offset{0}; offset < write.size();) {\n+            const size_t chunk_size{1 + m_rng.randrange(write.size() - offset)};\n+            obfuscation(write.subspan(offset, chunk_size), offset);\n+            offset += chunk_size;\n+        }\n+    }};\n+\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + m_rng.randrange(100U)};\n+        const std::vector original{m_rng.randbytes<std::byte>(write_size)};\n+        std::vector roundtrip{original};\n+\n+        const auto key_bytes{m_rng.randbytes<std::byte>(Obfuscation::SIZE_BYTES)};\n+        const Obfuscation obfuscation{key_bytes};\n+        apply_random_xor_chunks(roundtrip, obfuscation);\n+\n+        // Verify intermediate state is different from original (unless key is zero)\n+        const bool all_zero = !obfuscation || (HexStr(key_bytes).find_first_not_of('0') >= write_size * 2);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053721792,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks! (If you re-touch: `std::span{key_bytes}`)",
      "created_at": "2025-04-24T10:04:09Z",
      "updated_at": "2025-04-24T10:16:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2058025067",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2058025067"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2058041033",
      "pull_request_review_id": 2790514724,
      "id": 2058041033,
      "node_id": "PRRC_kwDOABII5856qzbJ",
      "diff_hunk": "@@ -248,24 +252,24 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    {\n+        m_obfuscation = 0; // Needed for unobfuscated Read",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053511581,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah, I was interpreting \"Needed for unobfuscated Read\" as applying to `Read`-calls *after* the ctor, hadn't realized it was for the call 2 lines below. :man_facepalming: That's why I didn't think it was relevant to include in https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2057656754. Sorry for this detour. `assert` is good.\r\n\r\nMaybe comment could spell out \"Needed for unobfuscated Read *directly below*\" for similar readers to me, but hopefully there aren't too many of them.",
      "created_at": "2025-04-24T10:14:39Z",
      "updated_at": "2025-04-24T10:16:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2058041033",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2058041033"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2058295285",
      "pull_request_review_id": 2790955358,
      "id": 2058295285,
      "node_id": "PRRC_kwDOABII5856rxf1",
      "diff_hunk": "@@ -13,19 +13,129 @@\n #include <boost/test/unit_test.hpp>\n \n using namespace std::string_literals;\n+using namespace util::hex_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+// Test that obfuscation can be properly reversed even with random chunk sizes.\n+BOOST_AUTO_TEST_CASE(xor_roundtrip_random_chunks)\n+{\n+    auto apply_random_xor_chunks{[&](std::span<std::byte> write, const Obfuscation& obfuscation) {\n+        for (size_t offset{0}; offset < write.size();) {\n+            const size_t chunk_size{1 + m_rng.randrange(write.size() - offset)};\n+            obfuscation(write.subspan(offset, chunk_size), offset);\n+            offset += chunk_size;\n+        }\n+    }};\n+\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + m_rng.randrange(100U)};\n+        const std::vector original{m_rng.randbytes<std::byte>(write_size)};\n+        std::vector roundtrip{original};\n+\n+        const auto key_bytes{m_rng.randbytes<std::byte>(Obfuscation::SIZE_BYTES)};\n+        const Obfuscation obfuscation{key_bytes};\n+        apply_random_xor_chunks(roundtrip, obfuscation);\n+\n+        // Verify intermediate state is different from original (unless key is zero)\n+        const bool all_zero = !obfuscation || (HexStr(key_bytes).find_first_not_of('0') >= write_size * 2);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053721792,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/31144/checks?check_run_id=41075184292\r\nWas able to repro with GCC using:\r\n```\r\ncmake -B build -DCMAKE_BUILD_TYPE=Debug -DAPPEND_CPPFLAGS=\"-D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_DEBUG -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC\"\r\n```\r\nWe both forgot to limit the span:\r\n```C++\r\nconst bool all_zeros{!obfuscation || std::ranges::all_of(std::span{key_bytes}.first(std::min(write_size, key_bytes.size())), [](auto b) { return b == std::byte{0}; })};\r\n```\r\n\r\nEdit: Could drop `!obfuscation || ` since I guess it was mainly there as an optimization to short-circuit the stringly code.",
      "created_at": "2025-04-24T12:32:16Z",
      "updated_at": "2025-04-24T13:06:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2058295285",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2058295285"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2059063160",
      "pull_request_review_id": 2792220825,
      "id": 2059063160,
      "node_id": "PRRC_kwDOABII5856us94",
      "diff_hunk": "@@ -13,19 +13,129 @@\n #include <boost/test/unit_test.hpp>\n \n using namespace std::string_literals;\n+using namespace util::hex_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+// Test that obfuscation can be properly reversed even with random chunk sizes.\n+BOOST_AUTO_TEST_CASE(xor_roundtrip_random_chunks)\n+{\n+    auto apply_random_xor_chunks{[&](std::span<std::byte> write, const Obfuscation& obfuscation) {\n+        for (size_t offset{0}; offset < write.size();) {\n+            const size_t chunk_size{1 + m_rng.randrange(write.size() - offset)};\n+            obfuscation(write.subspan(offset, chunk_size), offset);\n+            offset += chunk_size;\n+        }\n+    }};\n+\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + m_rng.randrange(100U)};\n+        const std::vector original{m_rng.randbytes<std::byte>(write_size)};\n+        std::vector roundtrip{original};\n+\n+        const auto key_bytes{m_rng.randbytes<std::byte>(Obfuscation::SIZE_BYTES)};\n+        const Obfuscation obfuscation{key_bytes};\n+        apply_random_xor_chunks(roundtrip, obfuscation);\n+\n+        // Verify intermediate state is different from original (unless key is zero)\n+        const bool all_zero = !obfuscation || (HexStr(key_bytes).find_first_not_of('0') >= write_size * 2);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053721792,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done (except for the edit part, it's better documentation this way I think)",
      "created_at": "2025-04-24T19:02:06Z",
      "updated_at": "2025-04-24T19:02:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2059063160",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2059063160"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2059063505",
      "pull_request_review_id": 2792221509,
      "id": 2059063505,
      "node_id": "PRRC_kwDOABII5856utDR",
      "diff_hunk": "@@ -248,24 +252,24 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    {\n+        m_obfuscation = 0; // Needed for unobfuscated Read",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053511581,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Extended the comment",
      "created_at": "2025-04-24T19:02:23Z",
      "updated_at": "2025-04-24T19:02:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2059063505",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2059063505"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2059069279",
      "pull_request_review_id": 2792231610,
      "id": 2059069279,
      "node_id": "PRRC_kwDOABII5856uudf",
      "diff_hunk": "@@ -248,24 +252,24 @@ CDBWrapper::CDBWrapper(const DBParams& params)\n         LogPrintf(\"Finished database compaction of %s\\n\", fs::PathToString(params.path));\n     }\n \n-    // The base-case obfuscation key, which is a noop.\n-    obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n+    {\n+        m_obfuscation = 0; // Needed for unobfuscated Read",
      "path": "src/dbwrapper.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053511581,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "No problem, glad it's sorted. Extended the comment to make it even clearer.",
      "created_at": "2025-04-24T19:07:13Z",
      "updated_at": "2025-04-24T19:07:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2059069279",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2059069279"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2059071228",
      "pull_request_review_id": 2792234662,
      "id": 2059071228,
      "node_id": "PRRC_kwDOABII5856uu78",
      "diff_hunk": "@@ -13,19 +13,129 @@\n #include <boost/test/unit_test.hpp>\n \n using namespace std::string_literals;\n+using namespace util::hex_literals;\n \n BOOST_FIXTURE_TEST_SUITE(streams_tests, BasicTestingSetup)\n \n+// Test that obfuscation can be properly reversed even with random chunk sizes.\n+BOOST_AUTO_TEST_CASE(xor_roundtrip_random_chunks)\n+{\n+    auto apply_random_xor_chunks{[&](std::span<std::byte> write, const Obfuscation& obfuscation) {\n+        for (size_t offset{0}; offset < write.size();) {\n+            const size_t chunk_size{1 + m_rng.randrange(write.size() - offset)};\n+            obfuscation(write.subspan(offset, chunk_size), offset);\n+            offset += chunk_size;\n+        }\n+    }};\n+\n+    for (size_t test{0}; test < 100; ++test) {\n+        const size_t write_size{1 + m_rng.randrange(100U)};\n+        const std::vector original{m_rng.randbytes<std::byte>(write_size)};\n+        std::vector roundtrip{original};\n+\n+        const auto key_bytes{m_rng.randbytes<std::byte>(Obfuscation::SIZE_BYTES)};\n+        const Obfuscation obfuscation{key_bytes};\n+        apply_random_xor_chunks(roundtrip, obfuscation);\n+\n+        // Verify intermediate state is different from original (unless key is zero)\n+        const bool all_zero = !obfuscation || (HexStr(key_bytes).find_first_not_of('0') >= write_size * 2);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "6f9240d70c5c480e25433482c347ba8c829c4bb7",
      "original_commit_id": "46854038e7984b599d25640de26d4680e62caba7",
      "in_reply_to_id": 2053721792,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, thanks",
      "created_at": "2025-04-24T19:08:01Z",
      "updated_at": "2025-04-24T19:08:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r2059071228",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2059071228"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    }
  ]
}