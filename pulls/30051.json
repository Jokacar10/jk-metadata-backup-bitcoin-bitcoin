{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051",
    "id": 1855942055,
    "node_id": "PR_kwDOABII585un22n",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30051",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30051.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30051.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
    "number": 30051,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "crypto, refactor: add new KeyPair class",
    "user": {
      "login": "josibake",
      "id": 7444140,
      "node_id": "MDQ6VXNlcjc0NDQxNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josibake",
      "html_url": "https://github.com/josibake",
      "followers_url": "https://api.github.com/users/josibake/followers",
      "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
      "organizations_url": "https://api.github.com/users/josibake/orgs",
      "repos_url": "https://api.github.com/users/josibake/repos",
      "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/josibake/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Broken out from #28201 \r\n\r\n---\r\n\r\nThe wallet returns an untweaked internal key for taproot outputs. If the output commits to a tree of scripts, this key needs to be tweaked with the merkle root. Even if the output does not commit to a tree of scripts, BIP341/342 recommend commiting to a hash of the public key.\r\n\r\nPreviously, this logic for applying the taptweak was implemented in the `CKey::SignSchnorr` method.\r\n\r\nThis PR moves introduces a KeyPair class which wraps a `secp256k1_keypair` type and refactors SignSchnorr to use this new KeyPair. The KeyPair class is created with an optional merkle_root argument and the logic from BIP341 is applied depending on the state of the merkle_root argument.\r\n\r\nThe motivation for this refactor is to be able to use the tap tweak logic outside of signing, e.g. in silent payments when retrieving the private key (see #28201). \r\n\r\nOutside of silent payments, since we almost always convert a `CKey` to a `secp256k1_keypair` when doing anything with taproot keys, it seems generally useful to have a way to model this type in our code base.",
    "labels": [],
    "created_at": "2024-05-06T11:00:17Z",
    "updated_at": "2025-08-12T11:25:24Z",
    "closed_at": "2024-08-07T02:10:13Z",
    "mergeable_state": "unknown",
    "merged": true,
    "merged_at": "2024-08-07T02:10:13Z",
    "merged_by": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "merge_commit_sha": "b38fb19b7eed952726a8b858de3f0533c867fc90",
    "assignee": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "assignees": [
      {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_reviewers": [
      {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "josibake:add-apply-taptweak-method",
      "ref": "add-apply-taptweak-method",
      "sha": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 344501009,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNDQ1MDEwMDk=",
        "name": "bitcoin",
        "full_name": "josibake/bitcoin",
        "owner": {
          "login": "josibake",
          "id": 7444140,
          "node_id": "MDQ6VXNlcjc0NDQxNDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/josibake",
          "html_url": "https://github.com/josibake",
          "followers_url": "https://api.github.com/users/josibake/followers",
          "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
          "organizations_url": "https://api.github.com/users/josibake/orgs",
          "repos_url": "https://api.github.com/users/josibake/repos",
          "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/josibake/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/josibake/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/josibake/bitcoin",
        "archive_url": "https://api.github.com/repos/josibake/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/josibake/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/josibake/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/josibake/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/josibake/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/josibake/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/josibake/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/josibake/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/josibake/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/josibake/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/josibake/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/josibake/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/josibake/bitcoin/events",
        "forks_url": "https://api.github.com/repos/josibake/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/josibake/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/josibake/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/josibake/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/josibake/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/josibake/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/josibake/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/josibake/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/josibake/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/josibake/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/josibake/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/josibake/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/josibake/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/josibake/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/josibake/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/josibake/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:josibake/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/josibake/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/josibake/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/josibake/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/josibake/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/josibake/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/josibake/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/josibake/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/josibake/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/josibake/bitcoin/hooks",
        "svn_url": "https://github.com/josibake/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 279713,
        "default_branch": "master",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-04T09:19:05Z",
        "created_at": "2021-03-04T14:24:20Z",
        "updated_at": "2025-08-04T09:19:21Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "2aff9a36c352640a263e8b5de469710f7e80eb54",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37627,
        "stargazers_count": 84998,
        "watchers_count": 84998,
        "size": 291059,
        "default_branch": "master",
        "open_issues_count": 750,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-11T22:16:17Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-08-12T11:52:36Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 183,
    "deletions": 21,
    "changed_files": 4,
    "commits": 6,
    "review_comments": 135,
    "comments": 26
  },
  "events": [
    {
      "event": "commented",
      "id": 2095746172,
      "node_id": "IC_kwDOABII58586ox8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2095746172",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-06T11:00:20Z",
      "updated_at": "2024-08-06T17:59:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30051).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [ismaelsadeeq](https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2218335492), [paplorinc](https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2268780105), [itornaza](https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2219301924), [theStack](https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2221804572) |\n| Stale ACK | [theuni](https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2050642049) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29432](https://github.com/bitcoin/bitcoin/pull/29432) (Stratum v2 Template Provider (take 3) by Sjors)\n* [#29295](https://github.com/bitcoin/bitcoin/pull/29295) (CKey: add Serialize and Unserialize by Sjors)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2095746172",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "comment_deleted",
      "id": 12714942745,
      "node_id": "CDE_lADOABII586H706dzwAAAAL13qEZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12714942745",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-06T13:19:13Z"
    },
    {
      "event": "comment_deleted",
      "id": 12714943883,
      "node_id": "CDE_lADOABII586H706dzwAAAAL13qWL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12714943883",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-06T13:19:18Z"
    },
    {
      "event": "reviewed",
      "id": 2041367317,
      "node_id": "PRR_kwDOABII5855rMsV",
      "url": null,
      "actor": null,
      "commit_id": "e8d1b223e0c618bb08adbae0d51ff8c7151549b6",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-05-06T17:59:50Z",
      "author_association": "MEMBER",
      "body": "This function feels kinda weird. As it's named `ApplyTapTweak`, I would expect it to modify `*this`. It also takes in a `uint256* merkle_root` but doesn't check for null, a reference would make more sense.\r\n\r\nPerhaps this would make more sense as a static utility function that takes input/output keys?",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2041367317",
      "submitted_at": "2024-05-06T17:59:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "subscribed",
      "id": 12722226786,
      "node_id": "SE_lADOABII586H706dzwAAAAL2TcZi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12722226786",
      "actor": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-07T01:40:12Z"
    },
    {
      "event": "commented",
      "id": 2097902146,
      "node_id": "IC_kwDOABII5859C3JC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2097902146",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-07T09:51:01Z",
      "updated_at": "2024-05-07T09:51:01Z",
      "author_association": "MEMBER",
      "body": "> This function feels kinda weird. As it's named `ApplyTapTweak`, I would expect it to modify `*this`. It also takes in a `uint256* merkle_root` but doesn't check for null, a reference would make more sense.\r\n> \r\n> Perhaps this would make more sense as a static utility function that takes input/output keys?\r\n\r\nUtility function might make more sense here: could do a utility function with `secp256k1_keypairs` as in/out args:\r\n\r\n```\r\nint compute_taptweak(secp256k1_keypair in, unsigned char merkle_root, secp256k1_keypair out)\r\n```\r\n\r\nand use that inside `::SignSchnorr`. This means we still only creating one `secp256k1_keypair` when signing. For usage outside of signing, wrap that utility function in a function takes and returns `CKey`s as arguments:\r\n\r\n```\r\nCKey tweaked_key ComputeTapTweak(CKey& internal_key, uint256& merkle_root) {\r\n    // .. do stuff\r\n    compute_taptweak(..);\r\n    return tweaked_key;\r\n```\r\n\r\nWDYT?",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2097902146",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "commented",
      "id": 2098527381,
      "node_id": "IC_kwDOABII5859FPyV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2098527381",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-07T14:21:27Z",
      "updated_at": "2024-05-07T14:21:27Z",
      "author_association": "MEMBER",
      "body": "`ComputeTapTweak` is more like what I had in mind, yes.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2098527381",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12741509247,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAL3dAB_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12741509247",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "commit_url": "https://api.github.com/repos/josibake/bitcoin/commits/6cc72ced115828c60520c2f598795ee7d41275c9",
      "created_at": "2024-05-08T10:04:20Z"
    },
    {
      "event": "commented",
      "id": 2100225575,
      "node_id": "IC_kwDOABII5859LuYn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2100225575",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-08T10:05:57Z",
      "updated_at": "2024-05-08T10:05:57Z",
      "author_association": "MEMBER",
      "body": "Updated to use a utility function (instead of a method on `CKey`) per the @theuni 's feedback",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2100225575",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "mentioned",
      "id": 12741529173,
      "node_id": "MEE_lADOABII586H706dzwAAAAL3dE5V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12741529173",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-08T10:05:58Z"
    },
    {
      "event": "subscribed",
      "id": 12741529193,
      "node_id": "SE_lADOABII586H706dzwAAAAL3dE5p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12741529193",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-08T10:05:58Z"
    },
    {
      "event": "reviewed",
      "id": 2046154187,
      "node_id": "PRR_kwDOABII58559dXL",
      "url": null,
      "actor": null,
      "commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-05-08T16:48:49Z",
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2046154187",
      "submitted_at": "2024-05-08T16:48:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12768720758,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAL5Ezd2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12768720758",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a982cb49739e783b3734157e0cae7dd77313cb31",
      "commit_url": "https://api.github.com/repos/josibake/bitcoin/commits/a982cb49739e783b3734157e0cae7dd77313cb31",
      "created_at": "2024-05-10T11:34:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12768870122,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAL5FX7q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12768870122",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f92dde3d7b76247777c7ffe9e1d6f8cf64146dcc",
      "commit_url": "https://api.github.com/repos/josibake/bitcoin/commits/f92dde3d7b76247777c7ffe9e1d6f8cf64146dcc",
      "created_at": "2024-05-10T11:51:46Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12769107313,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAL5GR1x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12769107313",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0caa3241b00ee49c7f103c04b6aaad292ec18372",
      "commit_url": "https://api.github.com/repos/josibake/bitcoin/commits/0caa3241b00ee49c7f103c04b6aaad292ec18372",
      "created_at": "2024-05-10T12:17:49Z"
    },
    {
      "event": "commented",
      "id": 2104541750,
      "node_id": "IC_kwDOABII5859cMI2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2104541750",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T12:41:31Z",
      "updated_at": "2024-05-10T12:41:31Z",
      "author_association": "MEMBER",
      "body": "Updated to use the new `KeyPair` wrapper class (h/t @theuni).",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2104541750",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "mentioned",
      "id": 12769334399,
      "node_id": "MEE_lADOABII586H706dzwAAAAL5HJR_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12769334399",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T12:41:33Z"
    },
    {
      "event": "subscribed",
      "id": 12769334412,
      "node_id": "SE_lADOABII586H706dzwAAAAL5HJSM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12769334412",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T12:41:33Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12770336692,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAL5K9-0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12770336692",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8d33daf93871c34c4fbe19f3c6ffa5d337eae144",
      "commit_url": "https://api.github.com/repos/josibake/bitcoin/commits/8d33daf93871c34c4fbe19f3c6ffa5d337eae144",
      "created_at": "2024-05-10T14:12:59Z"
    },
    {
      "event": "reviewed",
      "id": 2050167463,
      "node_id": "PRR_kwDOABII5856MxKn",
      "url": null,
      "actor": null,
      "commit_id": "8d33daf93871c34c4fbe19f3c6ffa5d337eae144",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-05-10T14:20:40Z",
      "author_association": "MEMBER",
      "body": "It's weird to see this hooked up but unused. It could also use some simple test vectors.\r\n\r\nMind killing both birds by adding some tests, at least 1 for each `merkle_root` state?",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2050167463",
      "submitted_at": "2024-05-10T14:16:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12771898558,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAL5Q7S-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12771898558",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e82c2c7e379b2061716c6e21122ee83fdad6f4be",
      "commit_url": "https://api.github.com/repos/josibake/bitcoin/commits/e82c2c7e379b2061716c6e21122ee83fdad6f4be",
      "created_at": "2024-05-10T16:43:53Z"
    },
    {
      "event": "commented",
      "id": 2104921312,
      "node_id": "IC_kwDOABII5859dozg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2104921312",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T16:46:14Z",
      "updated_at": "2024-05-10T16:46:14Z",
      "author_association": "MEMBER",
      "body": "@theuni Updated with a comment and added `KeyPair` to the BIP340 test vectors. This does test all possible merkle_root states and ensures everything is 1-to-1 with `XOnlyPubKey::ComputeTapTweakHash` and `CKey::SignSchnorr`",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2104921312",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "mentioned",
      "id": 12771921724,
      "node_id": "MEE_lADOABII586H706dzwAAAAL5RA88",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12771921724",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T16:46:15Z"
    },
    {
      "event": "subscribed",
      "id": 12771921735,
      "node_id": "SE_lADOABII586H706dzwAAAAL5RA9H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12771921735",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T16:46:15Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12772360638,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAL5SsG-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12772360638",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c2c5e72ea09f55d40013ce2363f2045affbc76fa",
      "commit_url": "https://api.github.com/repos/josibake/bitcoin/commits/c2c5e72ea09f55d40013ce2363f2045affbc76fa",
      "created_at": "2024-05-10T17:36:11Z"
    },
    {
      "event": "commented",
      "id": 2105011629,
      "node_id": "IC_kwDOABII5859d-2t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2105011629",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:38:37Z",
      "updated_at": "2024-05-10T17:39:11Z",
      "author_association": "MEMBER",
      "body": "Updated to add a move constructor to the KeyPair class. I noticed this was missing while trying to use the new class in #28201 (i.e. creating a std::vector of KeyPairs). @theuni assuming this was just missed, but if not curious if you have any objections to adding a move constructor on KeyPair?\r\n\r\nEDIT: also rebased on master to fix conflicts",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2105011629",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "mentioned",
      "id": 12772381477,
      "node_id": "MEE_lADOABII586H706dzwAAAAL5SxMl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12772381477",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:38:38Z"
    },
    {
      "event": "subscribed",
      "id": 12772381487,
      "node_id": "SE_lADOABII586H706dzwAAAAL5SxMv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12772381487",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:38:38Z"
    },
    {
      "event": "reviewed",
      "id": 2050565640,
      "node_id": "PRR_kwDOABII5856OSYI",
      "url": null,
      "actor": null,
      "commit_id": "c2c5e72ea09f55d40013ce2363f2045affbc76fa",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-05-10T17:43:40Z",
      "author_association": "MEMBER",
      "body": "Mind changing the dumb c-style casts to `reinterpret_cast` so it's clear that they can't be `static_cast`s ?  Sorry, I know that's my code.\r\n\r\nutACK after that.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2050565640",
      "submitted_at": "2024-05-10T17:43:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "commented",
      "id": 2105023865,
      "node_id": "IC_kwDOABII5859eB15",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2105023865",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:48:02Z",
      "updated_at": "2024-05-10T17:48:02Z",
      "author_association": "MEMBER",
      "body": "PR description needs an update too :)",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2105023865",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12772503226,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAL5TO66",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12772503226",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "commit_url": "https://api.github.com/repos/josibake/bitcoin/commits/bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "created_at": "2024-05-10T17:53:15Z"
    },
    {
      "event": "renamed",
      "id": 12772545930,
      "node_id": "RTE_lADOABII586H706dzwAAAAL5TZWK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12772545930",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:58:28Z",
      "rename": {
        "from": "crypto, refactor: add method for applying the taptweak",
        "to": "crypto, refactor: add new KeyPair class"
      }
    },
    {
      "event": "commented",
      "id": 2105045459,
      "node_id": "IC_kwDOABII5859eHHT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2105045459",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:59:18Z",
      "updated_at": "2024-05-10T17:59:18Z",
      "author_association": "MEMBER",
      "body": "@theuni title, description, and dumb c-style casts updated!",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2105045459",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "mentioned",
      "id": 12772552396,
      "node_id": "MEE_lADOABII586H706dzwAAAAL5Ta7M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12772552396",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:59:18Z"
    },
    {
      "event": "subscribed",
      "id": 12772552417,
      "node_id": "SE_lADOABII586H706dzwAAAAL5Ta7h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12772552417",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-10T17:59:19Z"
    },
    {
      "event": "reviewed",
      "id": 2050642049,
      "node_id": "PRR_kwDOABII5856OlCB",
      "url": null,
      "actor": null,
      "commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-05-10T18:35:37Z",
      "author_association": "MEMBER",
      "body": "ACK bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2050642049",
      "submitted_at": "2024-05-10T18:35:37Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "reviewed",
      "id": 2051346482,
      "node_id": "PRR_kwDOABII5856RRAy",
      "url": null,
      "actor": null,
      "commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-05-12T10:26:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2051346482",
      "submitted_at": "2024-05-12T10:26:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "reviewed",
      "id": 2169749598,
      "node_id": "PRR_kwDOABII586BU8Be",
      "url": null,
      "actor": null,
      "commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-10T17:03:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "tested ACK bdc2a656c2d2a61d226fde1d1fd4e79664106e18\r\n\r\nBuilt from source and run all unit, functional and extended tests and all of them pass. Looked through the code changes and they look great to me. I particularly like the default definition of the move constructors in `KeyPair` since there is a pointer member `m_keydata` in that class, plus the fact that the generation of the copy constructors that are not needed anywhere is suppressed due to the use of the default keyword which I consider an excellent programming practice. One small suggestion about repeating the KeyPair header for your consideration if you ever need to update for other more serious reasons.",
      "user": {
        "login": "itornaza",
        "id": 11520757,
        "node_id": "MDQ6VXNlcjExNTIwNzU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/11520757?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itornaza",
        "html_url": "https://github.com/itornaza",
        "followers_url": "https://api.github.com/users/itornaza/followers",
        "following_url": "https://api.github.com/users/itornaza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/itornaza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/itornaza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/itornaza/subscriptions",
        "organizations_url": "https://api.github.com/users/itornaza/orgs",
        "repos_url": "https://api.github.com/users/itornaza/repos",
        "events_url": "https://api.github.com/users/itornaza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/itornaza/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2169749598",
      "submitted_at": "2024-07-10T17:03:02Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "reviewed",
      "id": 2169947102,
      "node_id": "PRR_kwDOABII586BVsPe",
      "url": null,
      "actor": null,
      "commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-10T18:38:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "Not yet sure about adding stuff that \"will hopefully used this way one day\".\r\n\r\nRefactoring is welcome, as long as it's easy to review, which is not yet the case here, could you split the change into trivial, focused commits?",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2169947102",
      "submitted_at": "2024-07-10T18:38:27Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13525166154,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAMmKahK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13525166154",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "commit_url": "https://api.github.com/repos/josibake/bitcoin/commits/5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "created_at": "2024-07-16T18:09:12Z"
    },
    {
      "event": "commented",
      "id": 2231532258,
      "node_id": "IC_kwDOABII586FAnri",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2231532258",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T18:19:31Z",
      "updated_at": "2024-07-16T18:23:06Z",
      "author_association": "MEMBER",
      "body": "Updated https://github.com/bitcoin/bitcoin/commit/bdc2a656c2d2a61d226fde1d1fd4e79664106e18 -> https://github.com/bitcoin/bitcoin/commit/5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec ([add-apply-taptweak-method-00](https://github.com/josibake/bitcoin/tree/add-apply-taptweak-method-00) -> [add-apply-taptweak-method-01](https://github.com/josibake/bitcoin/tree/add-apply-taptweak-method-01) ([compare](https://github.com/josibake/bitcoin/compare/add-apply-taptweak-method-00..josibake:add-apply-taptweak-method-01))\r\n\r\n* Follows some `CKey` conventions with `MakeKeyPairData`, `ClearKeyPairData`, etc\r\n* Add copy constructors (same as `CKey`) - this is necessary to be able to hold `KeyPair` objects in stl containers, e.g., `std::vector<KeyPair>`\r\n* Breaks up the first commit into smaller, more focused commits to aid review (h/t @paplorinc)\r\n\r\nNot much in terms of logical changes from the previous version, but broken into incremental steps to aid with review. Worth mentioning for reviewers: `[staging]` commits are changes that should not be considered final on their own but are incremental steps to make the overall change easier to review. Each commit is still atomic in that it compiles on its own, but having them in smaller steps like this helps quite a bit in understanding the diffs. However, if reviewers feel this is unnecessary, I'm happy to squash these staging commits back into a single commit.\r\n\r\nThis push also includes a rebase on master, but the [compare](https://github.com/josibake/bitcoin/compare/add-apply-taptweak-method-00..josibake:add-apply-taptweak-method-01) is provided with both the old and new branch rebased on master.\r\n\r\n",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2231532258",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "mentioned",
      "id": 13525268674,
      "node_id": "MEE_lADOABII586H706dzwAAAAMmKzjC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13525268674",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T18:19:32Z"
    },
    {
      "event": "subscribed",
      "id": 13525268688,
      "node_id": "SE_lADOABII586H706dzwAAAAMmKzjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13525268688",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T18:19:32Z"
    },
    {
      "event": "commented",
      "id": 2231544856,
      "node_id": "IC_kwDOABII586FAqwY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2231544856",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T18:27:00Z",
      "updated_at": "2024-07-16T18:27:00Z",
      "author_association": "MEMBER",
      "body": "cc @theuni - would appreciate your eyes on this again",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2231544856",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "mentioned",
      "id": 13525346445,
      "node_id": "MEE_lADOABII586H706dzwAAAAMmLGiN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13525346445",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T18:27:01Z"
    },
    {
      "event": "subscribed",
      "id": 13525346461,
      "node_id": "SE_lADOABII586H706dzwAAAAMmLGid",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13525346461",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-16T18:27:01Z"
    },
    {
      "event": "reviewed",
      "id": 2182966578,
      "node_id": "PRR_kwDOABII586CHW0y",
      "url": null,
      "actor": null,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-17T15:04:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "Started reviewing, but got a bit stuck at the first commit, will continue a bit later",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2182966578",
      "submitted_at": "2024-07-17T15:04:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "reviewed",
      "id": 2183858096,
      "node_id": "PRR_kwDOABII586CKwew",
      "url": null,
      "actor": null,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-17T20:15:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "Very nice separation into commits, left some questions",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2183858096",
      "submitted_at": "2024-07-17T20:15:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "reviewed",
      "id": 2185359882,
      "node_id": "PRR_kwDOABII586CQfIK",
      "url": null,
      "actor": null,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-18T10:19:23Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "itornaza",
        "id": 11520757,
        "node_id": "MDQ6VXNlcjExNTIwNzU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/11520757?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itornaza",
        "html_url": "https://github.com/itornaza",
        "followers_url": "https://api.github.com/users/itornaza/followers",
        "following_url": "https://api.github.com/users/itornaza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/itornaza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/itornaza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/itornaza/subscriptions",
        "organizations_url": "https://api.github.com/users/itornaza/orgs",
        "repos_url": "https://api.github.com/users/itornaza/repos",
        "events_url": "https://api.github.com/users/itornaza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/itornaza/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2185359882",
      "submitted_at": "2024-07-18T10:19:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "reviewed",
      "id": 2186375491,
      "node_id": "PRR_kwDOABII586CUXFD",
      "url": null,
      "actor": null,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-18T16:35:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "re tACK 5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec\r\n\r\nThank you for your commit redo in a more granular way. Just a couple of questions really in the discussion above. To be thorough, rebuilt and retested the commit and all tests included the extended suite pass.",
      "user": {
        "login": "itornaza",
        "id": 11520757,
        "node_id": "MDQ6VXNlcjExNTIwNzU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/11520757?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itornaza",
        "html_url": "https://github.com/itornaza",
        "followers_url": "https://api.github.com/users/itornaza/followers",
        "following_url": "https://api.github.com/users/itornaza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/itornaza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/itornaza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/itornaza/subscriptions",
        "organizations_url": "https://api.github.com/users/itornaza/orgs",
        "repos_url": "https://api.github.com/users/itornaza/repos",
        "events_url": "https://api.github.com/users/itornaza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/itornaza/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2186375491",
      "submitted_at": "2024-07-18T16:35:20Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "review_requested",
      "id": 13559562341,
      "node_id": "RRE_lADOABII586H706dzwAAAAMoNoBl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13559562341",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-18T16:35:24Z",
      "requested_reviewer": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13589975816,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAMqBpMI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13589975816",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5d9a6cf6286f9a7f93527ea76b910537d709a860",
      "commit_url": "https://api.github.com/repos/josibake/bitcoin/commits/5d9a6cf6286f9a7f93527ea76b910537d709a860",
      "created_at": "2024-07-20T15:34:51Z"
    },
    {
      "event": "commented",
      "id": 2241187170,
      "node_id": "IC_kwDOABII586Flc1i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2241187170",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-20T15:39:13Z",
      "updated_at": "2024-07-20T15:39:13Z",
      "author_association": "MEMBER",
      "body": "Updated https://github.com/bitcoin/bitcoin/commit/5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec -> https://github.com/bitcoin/bitcoin/commit/5d9a6cf6286f9a7f93527ea76b910537d709a860  ([add-apply-taptweak-method-01](https://github.com/josibake/bitcoin/tree/add-apply-taptweak-method-01) -> [apply-taptweak-method-02](https://github.com/josibake/bitcoin/tree/apply-taptweak-method-02) ([compare](https://github.com/josibake/bitcoin/compare/add-apply-taptweak-method-01..josibake:apply-taptweak-method-02))\r\n\r\n* Fix typos in commit messages, `src/key.h` (h/t @paplorinc)\r\n* Use `IsValid()` instead of `m_keypair ?` (h/t @paplorinc)\r\n\r\nThanks for the re-review @paplorinc and @itornaza!",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2241187170",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "mentioned",
      "id": 13589982346,
      "node_id": "MEE_lADOABII586H706dzwAAAAMqBqyK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13589982346",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-20T15:39:13Z"
    },
    {
      "event": "subscribed",
      "id": 13589982348,
      "node_id": "SE_lADOABII586H706dzwAAAAMqBqyM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13589982348",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-20T15:39:13Z"
    },
    {
      "event": "mentioned",
      "id": 13589982350,
      "node_id": "MEE_lADOABII586H706dzwAAAAMqBqyO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13589982350",
      "actor": {
        "login": "itornaza",
        "id": 11520757,
        "node_id": "MDQ6VXNlcjExNTIwNzU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/11520757?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itornaza",
        "html_url": "https://github.com/itornaza",
        "followers_url": "https://api.github.com/users/itornaza/followers",
        "following_url": "https://api.github.com/users/itornaza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/itornaza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/itornaza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/itornaza/subscriptions",
        "organizations_url": "https://api.github.com/users/itornaza/orgs",
        "repos_url": "https://api.github.com/users/itornaza/repos",
        "events_url": "https://api.github.com/users/itornaza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/itornaza/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-20T15:39:14Z"
    },
    {
      "event": "subscribed",
      "id": 13589982352,
      "node_id": "SE_lADOABII586H706dzwAAAAMqBqyQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13589982352",
      "actor": {
        "login": "itornaza",
        "id": 11520757,
        "node_id": "MDQ6VXNlcjExNTIwNzU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/11520757?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itornaza",
        "html_url": "https://github.com/itornaza",
        "followers_url": "https://api.github.com/users/itornaza/followers",
        "following_url": "https://api.github.com/users/itornaza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/itornaza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/itornaza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/itornaza/subscriptions",
        "organizations_url": "https://api.github.com/users/itornaza/orgs",
        "repos_url": "https://api.github.com/users/itornaza/repos",
        "events_url": "https://api.github.com/users/itornaza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/itornaza/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-20T15:39:14Z"
    },
    {
      "event": "reviewed",
      "id": 2190027482,
      "node_id": "PRR_kwDOABII586CiSra",
      "url": null,
      "actor": null,
      "commit_id": "36ecf72a04c9ecb82660fb14a734c155e89e5abd",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-20T17:27:56Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2190027482",
      "submitted_at": "2024-07-20T17:27:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "reviewed",
      "id": 2190030725,
      "node_id": "PRR_kwDOABII586CiTeF",
      "url": null,
      "actor": null,
      "commit_id": "5d9a6cf6286f9a7f93527ea76b910537d709a860",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-20T17:38:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the fixes!\r\nI'm still not convinced that the lack of short-circuits didn't introduce any change.\r\nPlease prove me wrong, I want to ACK this :)",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2190030725",
      "submitted_at": "2024-07-20T17:38:06Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13591893194,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAMqI9TK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13591893194",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "49057fc4f1e73a14f673c934573d727ae0229779",
      "commit_url": "https://api.github.com/repos/josibake/bitcoin/commits/49057fc4f1e73a14f673c934573d727ae0229779",
      "created_at": "2024-07-21T08:53:11Z"
    },
    {
      "event": "commented",
      "id": 2241534584,
      "node_id": "IC_kwDOABII586Fmxp4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2241534584",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-21T08:59:45Z",
      "updated_at": "2024-07-21T08:59:45Z",
      "author_association": "MEMBER",
      "body": "Update https://github.com/bitcoin/bitcoin/commit/5d9a6cf6286f9a7f93527ea76b910537d709a860 ->  https://github.com/bitcoin/bitcoin/commit/49057fc4f1e73a14f673c934573d727ae0229779 ([apply-taptweak-method-02](https://github.com/josibake/bitcoin/tree/apply-taptweak-method-02) -> [apply-taptweak-method-03](https://github.com/josibake/bitcoin/tree/apply-taptweak-method-03) ([compare](https://github.com/josibake/bitcoin/compare/apply-taptweak-method-02..josibake:apply-taptweak-method-03))\r\n\r\n* Use `CKey::GetPubKey()` instead of extracting and serializing the public key from the keypair object\r\n* Save `reinterpret_cast` as a variable to simplify diff/code (h/t @paplorinc )\r\n\r\nOverall, I think this simplifies things quite a bit. If you look at the internals of `CKey::GetPubKey()`, there are already `asserts` for intermediate libsecp256k1 function calls which make it clear these calls (`_serialize`, for example) are always expected to succeed when using a valid secret key.",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2241534584",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "mentioned",
      "id": 13591911226,
      "node_id": "MEE_lADOABII586H706dzwAAAAMqJBs6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13591911226",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-21T08:59:45Z"
    },
    {
      "event": "subscribed",
      "id": 13591911232,
      "node_id": "SE_lADOABII586H706dzwAAAAMqJBtA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13591911232",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-21T08:59:46Z"
    },
    {
      "event": "reviewed",
      "id": 2190286464,
      "node_id": "PRR_kwDOABII586CjR6A",
      "url": null,
      "actor": null,
      "commit_id": "49057fc4f1e73a14f673c934573d727ae0229779",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-21T10:25:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "Nice, left a few nits and a clarification",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2190286464",
      "submitted_at": "2024-07-21T10:25:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13593215578,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAMqOAJa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13593215578",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b8b3a9f18670ec7bf246a57950cdae7e034a264d",
      "commit_url": "https://api.github.com/repos/josibake/bitcoin/commits/b8b3a9f18670ec7bf246a57950cdae7e034a264d",
      "created_at": "2024-07-21T17:11:55Z"
    },
    {
      "event": "commented",
      "id": 2241716848,
      "node_id": "IC_kwDOABII586FneJw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2241716848",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-21T17:15:19Z",
      "updated_at": "2024-07-22T05:35:36Z",
      "author_association": "MEMBER",
      "body": "Update https://github.com/bitcoin/bitcoin/commit/49057fc4f1e73a14f673c934573d727ae0229779 - > https://github.com/bitcoin/bitcoin/commit/b8b3a9f18670ec7bf246a57950cdae7e034a264d ([apply-taptweak-method-03](https://github.com/josibake/bitcoin/tree/apply-taptweak-method-03) -> [apply-taptweak-method-04](https://github.com/josibake/bitcoin/tree/apply-taptweak-method-04) ([compare](https://github.com/josibake/bitcoin/compare/apply-taptweak-method-03..josibake:apply-taptweak-method-04))\r\n\r\n* Renamed `ret` to `success` in KeyPair constructor (h/t @paplorinc)\r\n* Removed unnecessary `KeyPair()` call\r\n* Added key tweak smoke test (h/t @paplorinc )",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2241716848",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "mentioned",
      "id": 13593221049,
      "node_id": "MEE_lADOABII586H706dzwAAAAMqOBe5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13593221049",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-21T17:15:20Z"
    },
    {
      "event": "subscribed",
      "id": 13593221052,
      "node_id": "SE_lADOABII586H706dzwAAAAMqOBe8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13593221052",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-21T17:15:20Z"
    },
    {
      "event": "reviewed",
      "id": 2190378474,
      "node_id": "PRR_kwDOABII586CjoXq",
      "url": null,
      "actor": null,
      "commit_id": "b8b3a9f18670ec7bf246a57950cdae7e034a264d",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-21T18:10:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "re ACK b8b3a9f18670ec7bf246a57950cdae7e034a264d\r\n\r\nBoth of you did an amazing job over this weekend and I learned a lot by just watching this thread! Just to re-confirm from my side as well, the aforementioned `KeyPair()` call removal comes without any security implications as we discussed above https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685779789. However, just for the sake of paranoia I build the commit in debug configuration and run the tests in debug mode using `lldb` and confirmed that `m_keypair` becomes a `nullptr` at the end of `CKey::SignSchnorr()` scope. \r\n\r\n<img width=\"1034\" alt=\"Screenshot 2024-07-21 at 20 46 38\" src=\"https://github.com/user-attachments/assets/b470587b-0dff-4fb1-9d24-1a42d5691b98\">\r\n\r\nAll unit, functional and extended tests pass as well.\r\n\r\n",
      "user": {
        "login": "itornaza",
        "id": 11520757,
        "node_id": "MDQ6VXNlcjExNTIwNzU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/11520757?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itornaza",
        "html_url": "https://github.com/itornaza",
        "followers_url": "https://api.github.com/users/itornaza/followers",
        "following_url": "https://api.github.com/users/itornaza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/itornaza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/itornaza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/itornaza/subscriptions",
        "organizations_url": "https://api.github.com/users/itornaza/orgs",
        "repos_url": "https://api.github.com/users/itornaza/repos",
        "events_url": "https://api.github.com/users/itornaza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/itornaza/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2190378474",
      "submitted_at": "2024-07-21T18:10:01Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "review_requested",
      "id": 13593311829,
      "node_id": "RRE_lADOABII586H706dzwAAAAMqOXpV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13593311829",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-21T18:10:06Z",
      "requested_reviewer": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2190393727,
      "node_id": "PRR_kwDOABII586CjsF_",
      "url": null,
      "actor": null,
      "commit_id": "b8b3a9f18670ec7bf246a57950cdae7e034a264d",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-21T20:29:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "utACK b8b3a9f18670ec7bf246a57950cdae7e034a264d\r\n\r\nAppreciate your perseverance and creativity @josibake, and your tests @itornaza.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2190393727",
      "submitted_at": "2024-07-21T20:29:23Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13598561985,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAMqiZbB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13598561985",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "56267cf84281789186035f09898cce3d749748ec",
      "commit_url": "https://api.github.com/repos/josibake/bitcoin/commits/56267cf84281789186035f09898cce3d749748ec",
      "created_at": "2024-07-22T09:44:26Z"
    },
    {
      "event": "commented",
      "id": 2242545417,
      "node_id": "IC_kwDOABII586FqocJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2242545417",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T09:48:35Z",
      "updated_at": "2024-07-22T09:48:35Z",
      "author_association": "MEMBER",
      "body": "Update https://github.com/bitcoin/bitcoin/commit/b8b3a9f18670ec7bf246a57950cdae7e034a264d -> https://github.com/bitcoin/bitcoin/commit/56267cf84281789186035f09898cce3d749748ec ([apply-taptweak-method-04](https://github.com/josibake/bitcoin/tree/apply-taptweak-method-04) -> [apply-taptweak-method-05](https://github.com/josibake/bitcoin/tree/apply-taptweak-method-05) ([compare](https://github.com/josibake/bitcoin/compare/apply-taptweak-method-04..josibake:apply-taptweak-method-05))\r\n\r\nRealised I unintentionally dropped @theuni as a co-author of the `KeyPair` class. Also applied @paplorinc 's suggestion for `CKey::SignScnorr`. Apologies for making you guys re-ack again, this should be the last one :) \r\n",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2242545417",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "mentioned",
      "id": 13598616409,
      "node_id": "MEE_lADOABII586H706dzwAAAAMqimtZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13598616409",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T09:48:36Z"
    },
    {
      "event": "subscribed",
      "id": 13598616431,
      "node_id": "SE_lADOABII586H706dzwAAAAMqimtv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13598616431",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T09:48:36Z"
    },
    {
      "event": "mentioned",
      "id": 13598616450,
      "node_id": "MEE_lADOABII586H706dzwAAAAMqimuC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13598616450",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T09:48:37Z"
    },
    {
      "event": "subscribed",
      "id": 13598616461,
      "node_id": "SE_lADOABII586H706dzwAAAAMqimuN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13598616461",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T09:48:37Z"
    },
    {
      "event": "commented",
      "id": 2242574270,
      "node_id": "IC_kwDOABII586Fqve-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2242574270",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T10:03:00Z",
      "updated_at": "2024-07-22T10:03:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "CI failure seems unrelated, please restart or rebase so we can ACK - and don't worry about our reacks :)\r\n\r\n> Update https://github.com/bitcoin/bitcoin/commit/b8b3a9f18670ec7bf246a57950cdae7e034a264d -> https://github.com/bitcoin/bitcoin/commit/56267cf84281789186035f09898cce3d749748ec ([apply-taptweak-method-04](https://github.com/josibake/bitcoin/tree/apply-taptweak-method-04) -> [apply-taptweak-method-05](https://github.com/josibake/bitcoin/tree/apply-taptweak-method-05) ([compare](https://github.com/josibake/bitcoin/compare/apply-taptweak-method-04..josibake:apply-taptweak-method-05))\r\n\r\nI usually review the changes first via:\r\n<img src=\"https://github.com/user-attachments/assets/4356aa17-72a2-4198-af6c-8082e102edac\">\r\n",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2242574270",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13599253841,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAMqlCVR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13599253841",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e998ca2c53bb8320e102a02a06182f8bc49a4f90",
      "commit_url": "https://api.github.com/repos/josibake/bitcoin/commits/e998ca2c53bb8320e102a02a06182f8bc49a4f90",
      "created_at": "2024-07-22T10:40:16Z"
    },
    {
      "event": "labeled",
      "id": 13599255098,
      "node_id": "LE_lADOABII586H706dzwAAAAMqlCo6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13599255098",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T10:40:22Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2242645711,
      "node_id": "IC_kwDOABII586FrA7P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2242645711",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T10:40:23Z",
      "updated_at": "2024-07-22T10:40:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/27740474818</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2242645711",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "commented",
      "id": 2242659405,
      "node_id": "IC_kwDOABII586FrERN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2242659405",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T10:47:52Z",
      "updated_at": "2024-07-22T10:47:52Z",
      "author_association": "MEMBER",
      "body": "Update https://github.com/bitcoin/bitcoin/commit/56267cf84281789186035f09898cce3d749748ec -> https://github.com/bitcoin/bitcoin/commit/e998ca2c53bb8320e102a02a06182f8bc49a4f90 ([apply-taptweak-method-05](https://github.com/josibake/bitcoin/tree/apply-taptweak-method-05) -> [apply-taptweak-method-06](https://github.com/josibake/bitcoin/tree/apply-taptweak-method-06) ([compare](https://github.com/josibake/bitcoin/compare/apply-taptweak-method-05..josibake:apply-taptweak-method-06))\r\n\r\n* Fix CI failure (due to moving `test: add key tweak smoke test` up, but without adding `#include secp256k1_keypair`\r\n\r\nNot sure about the other CI failures, but if they fail again I'll rebase on master.\r\n\r\n> I usually review the changes first via:\r\n\r\nAdding the update summary is more for my own book keeping. Also, pushing the individual numbered branches for each change allows reviewers to easily check the diff between force pushes without needing to use github's UI. It also allows reviewers to easily go back and verify old force pushes, whereas I think github deletes the force pushed commits after a certain amount of time?\r\n",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2242659405",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13599375323,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAMqlf_b",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13599375323",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9afa2c9e50370b2918377f3f3eac0950a4296ec0",
      "commit_url": "https://api.github.com/repos/josibake/bitcoin/commits/9afa2c9e50370b2918377f3f3eac0950a4296ec0",
      "created_at": "2024-07-22T10:50:43Z"
    },
    {
      "event": "commented",
      "id": 2242668252,
      "node_id": "IC_kwDOABII586FrGbc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2242668252",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T10:53:11Z",
      "updated_at": "2024-07-22T10:53:11Z",
      "author_association": "MEMBER",
      "body": "Rebased on master https://github.com/bitcoin/bitcoin/commit/e998ca2c53bb8320e102a02a06182f8bc49a4f90 -> https://github.com/bitcoin/bitcoin/commit/9afa2c9e50370b2918377f3f3eac0950a4296ec0 ([apply-taptweak-method-06](https://github.com/josibake/bitcoin/tree/apply-taptweak-method-06) -> [apply-taptweak-method-06](https://github.com/josibake/bitcoin/tree/apply-taptweak-method-06-rebase) ([compare](https://github.com/josibake/bitcoin/compare/apply-taptweak-method-05..josibake:apply-taptweak-method-06-rebase))\r\n",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2242668252",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "commented",
      "id": 2242742189,
      "node_id": "IC_kwDOABII586FrYet",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2242742189",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T11:35:57Z",
      "updated_at": "2024-07-22T11:35:57Z",
      "author_association": "MEMBER",
      "body": "lint CI failure is unrelated and fixed by https://github.com/bitcoin/bitcoin/pull/30499",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2242742189",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "commented",
      "id": 2242746610,
      "node_id": "IC_kwDOABII586FrZjy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2242746610",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T11:38:32Z",
      "updated_at": "2024-07-22T12:32:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "> lint CI failure is unrelated and fixed by #30499\r\n\r\n~seems that PR is also failing~ fixed now",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2242746610",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "unlabeled",
      "id": 13601954317,
      "node_id": "UNLE_lADOABII586H706dzwAAAAMqvVoN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13601954317",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T14:07:30Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2243227225,
      "node_id": "IC_kwDOABII586FtO5Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2243227225",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T15:22:44Z",
      "updated_at": "2024-07-22T15:22:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "utACK 9afa2c9e50370b2918377f3f3eac0950a4296ec0",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2243227225",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "review_requested",
      "id": 13603068255,
      "node_id": "RRE_lADOABII586H706dzwAAAAMqzllf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13603068255",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-22T15:22:50Z",
      "requested_reviewer": {
        "login": "itornaza",
        "id": 11520757,
        "node_id": "MDQ6VXNlcjExNTIwNzU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/11520757?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itornaza",
        "html_url": "https://github.com/itornaza",
        "followers_url": "https://api.github.com/users/itornaza/followers",
        "following_url": "https://api.github.com/users/itornaza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/itornaza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/itornaza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/itornaza/subscriptions",
        "organizations_url": "https://api.github.com/users/itornaza/orgs",
        "repos_url": "https://api.github.com/users/itornaza/repos",
        "events_url": "https://api.github.com/users/itornaza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/itornaza/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2191928826,
      "node_id": "PRR_kwDOABII586Cpi36",
      "url": null,
      "actor": null,
      "commit_id": "9afa2c9e50370b2918377f3f3eac0950a4296ec0",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-22T16:50:53Z",
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2191928826",
      "submitted_at": "2024-07-22T16:50:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "reviewed",
      "id": 2192299471,
      "node_id": "PRR_kwDOABII586Cq9XP",
      "url": null,
      "actor": null,
      "commit_id": "9afa2c9e50370b2918377f3f3eac0950a4296ec0",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-22T18:37:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "trACK 9afa2c9e50370b2918377f3f3eac0950a4296ec0\r\n\r\nReviewed the changes in the `key_tests.cpp` since my last review on this PR. Again, all unit and functional including the extended tests pass. Just dropped a name candidate if you consider renaming `KeyPair::data()` and run out of options.",
      "user": {
        "login": "itornaza",
        "id": 11520757,
        "node_id": "MDQ6VXNlcjExNTIwNzU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/11520757?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itornaza",
        "html_url": "https://github.com/itornaza",
        "followers_url": "https://api.github.com/users/itornaza/followers",
        "following_url": "https://api.github.com/users/itornaza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/itornaza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/itornaza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/itornaza/subscriptions",
        "organizations_url": "https://api.github.com/users/itornaza/orgs",
        "repos_url": "https://api.github.com/users/itornaza/repos",
        "events_url": "https://api.github.com/users/itornaza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/itornaza/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2192299471",
      "submitted_at": "2024-07-22T18:37:55Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "reviewed",
      "id": 2197175891,
      "node_id": "PRR_kwDOABII586C9j5T",
      "url": null,
      "actor": null,
      "commit_id": "9afa2c9e50370b2918377f3f3eac0950a4296ec0",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-24T16:03:35Z",
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nclean refactor IMO.",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2197175891",
      "submitted_at": "2024-07-24T16:03:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "commented",
      "id": 2262726539,
      "node_id": "IC_kwDOABII586G3neL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2262726539",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-01T10:44:27Z",
      "updated_at": "2024-08-01T10:44:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "To make sure my [benchmarks related post](https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1687854257) doesn't get lost in resolved comment land, lemme' repost it here:\r\n```patch\r\ndiff --git a/src/bench/sign_transaction.cpp b/src/bench/sign_transaction.cpp\r\n--- a/src/bench/sign_transaction.cpp\t(revision 8d573611575c3fa66f08407aa9b02f91b29a94c3)\r\n+++ b/src/bench/sign_transaction.cpp\t(date 1721731869277)\r\n@@ -12,6 +12,7 @@\r\n #include <script/script.h>\r\n #include <script/sign.h>\r\n #include <uint256.h>\r\n+#include <test/util/random.h>\r\n #include <util/translation.h>\r\n \r\n enum class InputType {\r\n@@ -66,5 +67,33 @@\r\n static void SignTransactionECDSA(benchmark::Bench& bench)   { SignTransactionSingleInput(bench, InputType::P2WPKH); }\r\n static void SignTransactionSchnorr(benchmark::Bench& bench) { SignTransactionSingleInput(bench, InputType::P2TR);   }\r\n \r\n+static void SignSchnorrBenchmark(benchmark::Bench& bench, bool use_null_merkle_root)\r\n+{\r\n+    ECC_Context ecc_context{};\r\n+\r\n+    auto key = GenerateRandomKey();\r\n+    auto msg = InsecureRand256();\r\n+    auto merkle_root = use_null_merkle_root ? uint256() : InsecureRand256();\r\n+    auto aux = InsecureRand256();\r\n+    std::vector<unsigned char> sig(64);\r\n+\r\n+    bench.batch(1).unit(\"signature\").run([&] {\r\n+        bool success = key.SignSchnorr(msg, sig, &merkle_root, aux);\r\n+        assert(success);\r\n+    });\r\n+}\r\n+\r\n+static void SignSchnorrWithMerkleRoot(benchmark::Bench& bench)\r\n+{\r\n+    SignSchnorrBenchmark(bench, /*use_null_merkle_root=*/false);\r\n+}\r\n+\r\n+static void SignSchnorrWithNullMerkleRoot(benchmark::Bench& bench)\r\n+{\r\n+    SignSchnorrBenchmark(bench, /*use_null_merkle_root=*/true);\r\n+}\r\n+\r\n BENCHMARK(SignTransactionECDSA, benchmark::PriorityLevel::HIGH);\r\n BENCHMARK(SignTransactionSchnorr, benchmark::PriorityLevel::HIGH);\r\n+BENCHMARK(SignSchnorrWithMerkleRoot, benchmark::PriorityLevel::HIGH);\r\n+BENCHMARK(SignSchnorrWithNullMerkleRoot, benchmark::PriorityLevel::HIGH);\r\n```\r\n\r\n\r\nwhich reveals:\r\nbefore:\r\n|        ns/signature |         signature/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|           69,383.89 |           14,412.57 |    0.1% |      1.06 | `SignSchnorrWithMerkleRoot`\r\n|           69,548.30 |           14,378.50 |    0.0% |      1.06 | `SignSchnorrWithNullMerkleRoot`\r\n\r\n|        ns/signature |         signature/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|           70,189.31 |           14,247.18 |    0.2% |      1.07 | `SignSchnorrWithMerkleRoot`\r\n|           69,464.39 |           14,395.87 |    0.1% |      1.06 | `SignSchnorrWithNullMerkleRoot`\r\n\r\n\r\nafter:\r\n|        ns/signature |         signature/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|           83,055.75 |           12,040.11 |    0.2% |      1.08 | `SignSchnorrWithMerkleRoot`\r\n|           80,971.71 |           12,349.99 |    0.1% |      1.08 | `SignSchnorrWithNullMerkleRoot`\r\n\r\n|        ns/signature |         signature/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|           81,841.15 |           12,218.79 |    0.1% |      1.08 | `SignSchnorrWithMerkleRoot`\r\n|           82,112.31 |           12,178.44 |    0.1% |      1.08 | `SignSchnorrWithNullMerkleRoot`\r\n\r\n\r\n------\r\n\r\ni.e because of the signing code simplifications signing is now ~15% slower.\r\nWe could commit the benchmarks and consider a speedup in a separate PR, if this is problematic.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2262726539",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "reviewed",
      "id": 2215955046,
      "node_id": "PRR_kwDOABII586EFMpm",
      "url": null,
      "actor": null,
      "commit_id": "9afa2c9e50370b2918377f3f3eac0950a4296ec0",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-08-02T17:53:28Z",
      "author_association": "MEMBER",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2215955046",
      "submitted_at": "2024-08-02T17:53:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13750054100,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAMzkSzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13750054100",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "34e7014076de39c8414b883123ffaee243a7d9c9",
      "commit_url": "https://api.github.com/repos/josibake/bitcoin/commits/34e7014076de39c8414b883123ffaee243a7d9c9",
      "created_at": "2024-08-03T13:12:40Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGYxNDkwMGI2ZTRlYWMyNmFlNWYxYzBiYWRmYTE3NmQ4OTU4NTFjOTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f14900b6e4eac26ae5f1c0badfa176d895851c97",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f14900b6e4eac26ae5f1c0badfa176d895851c97",
      "tree": {
        "sha": "e78842293d84d2b12feacaa2c930aa8f9602e00b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e78842293d84d2b12feacaa2c930aa8f9602e00b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e78842293d84d2b12feacaa2c930aa8f9602e00b\nparent 8d573611575c3fa66f08407aa9b02f91b29a94c3\nauthor josibake <josibake@protonmail.com> 1722681871 +0200\ncommitter josibake <josibake@protonmail.com> 1722690963 +0200\n\nbench: add benchmark for signing with a taptweak\n\nAdd benchmarks for signing with null and non-null merkle_root arguments.\nNull and non-null merkle_root arguments will apply the taptweaks\nH_TapTweak(P) and H_TapTweak(P | merkle_root), respectively, to the\nprivate key during signing.\n\nThis benchmark is added to verify there are no significant performance\nchanges after moving the taptweak signing logic in a later commit.\n\nCo-authored-by: l0rinc <pap.lorinc@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmauLZMACgkQity1WMTz\nPWWIrA/+NfwTw1d3e2oCFui3u3O0CK5PIzVySVy8Rnmr+HGzeZUDxCQYn46ji2LH\nyXhxFCIcWh+vWMbrpFegEKnPwoAiZft4WUCY+YbwzBK5wLvsVOBJhwqbx2ckXgwu\nHBrCfuAwGD5P9aK7pbf6ir3F0CEWqjdDjV1l7jHPx7aHEpMn1XIbxt9Y7ZYc9OQ/\npPMC2XaE2B7M0Au9F6hXuuy6kfb+ip2LVJWeh3h2uqknun0JgDu4/cbrzmh+FMsc\nkiba/a7MLzUbU7t09crPL0LRRLUXUP1EFBwbgWrAPVjbuShD9p5kU6bmret4Ul0Z\n1pDLgOh6SgnkQfcXplWJGdOXzdrqOieR+167xCTuw1BP2OYR6OWZ5ErJ2Y2JaW2Z\nm1NR9RevO+PS4/el/qfoIpRZ65AFCcD1qIKuT17Ce5EbeDej7+PR7QY4j8tJCVUj\nGB98/7dsntRNPSntLPTbKUR07lXFikQ3VQpl04LZG08ju9Xv9X+yvvpVcIVZazFl\nZKaSkRYrWpEExj6N3wC0PZBsVdrxNDsPasbAY+kRCgMngQ5Wfx8Aj7s9jzeoq3fS\nxx6TZjWUZ0zYwzo2MDoWdE6/BVVmbxdo63G71aYqptnDdzqtLE8A34Zgh41d9iLJ\nIa3DbvoKuNqZX0xAF9RlSzFn6dcY8WSqA2fPRRLRaJinJY8KKSc=\n=N0hY\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d573611575c3fa66f08407aa9b02f91b29a94c3",
          "sha": "8d573611575c3fa66f08407aa9b02f91b29a94c3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8d573611575c3fa66f08407aa9b02f91b29a94c3"
        }
      ],
      "message": "bench: add benchmark for signing with a taptweak\n\nAdd benchmarks for signing with null and non-null merkle_root arguments.\nNull and non-null merkle_root arguments will apply the taptweaks\nH_TapTweak(P) and H_TapTweak(P | merkle_root), respectively, to the\nprivate key during signing.\n\nThis benchmark is added to verify there are no significant performance\nchanges after moving the taptweak signing logic in a later commit.\n\nCo-authored-by: l0rinc <pap.lorinc@gmail.com>",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-08-03T13:16:03Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-08-03T10:44:31Z"
      },
      "sha": "f14900b6e4eac26ae5f1c0badfa176d895851c97"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVkNTA3YTAwOTFkYTFiNmMwMTNiMDBiNmM3NmUxOWRkNGQzYjkzYTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5d507a0091da1b6c013b00b6c76e19dd4d3b93a7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5d507a0091da1b6c013b00b6c76e19dd4d3b93a7",
      "tree": {
        "sha": "d97fdb1a09be82111c1fef4562268de11551f272",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d97fdb1a09be82111c1fef4562268de11551f272"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d97fdb1a09be82111c1fef4562268de11551f272\nparent f14900b6e4eac26ae5f1c0badfa176d895851c97\nauthor josibake <josibake@protonmail.com> 1721580180 +0200\ncommitter josibake <josibake@protonmail.com> 1722690963 +0200\n\ntests: add key tweak smoke test\n\nSanity check that using CKey/CPubKey directly vs using secp256k1_keypair objects\nreturns the same results for BIP341 key tweaking.\n\nCo-authored-by: l0rinc <pap.lorinc@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmauLZMACgkQity1WMTz\nPWVGHQ//f01KrAHXFTF1CiAlxe2tRwf5XYZmE+7C/C0dRYi7FeNRi+7D2PDOHcGk\nDhzlFdw/zWJYpnwRBR/8YPYgZPYouf5oWc2v/P1fhq2xfUoyBJQaLun0xC/5x4GM\nXPrhvt4QlqBhc6FsAqUE5+xE5F7ilbN7GTTghBaVLcAVtLLfGmzXJeZFurLnq4Jp\nqlpawULL3GGL9DXZXGEoBjHX+e3B2ZHc7UTjWtQGOKHGDPZQP/LEb4Qm6ZD1g6ES\nEax440FUtgUxiEfKL3xoVSGcF+yGgNXzpnfUvpQrWAMVhcvNwjIXWGNac/xWJwfB\n+6dXuB/U6wSIv9QaAm399zUv6bhyYt6oL1JLeFV3fznuh/7lvs5cZDCgYuL+Bdx2\nXVEvTXtSOzF5b17bFT/spPv1TLmWoLIn6o8nMeKkImxq1r0DngpbO9trhv57c1Sm\nfeGnwQqQHrIoduD9Fsw4kKoYq6kHcjzhDv50CAGgPAAhRyG9BdSjxvECQCa6IEeF\nnNqCP/iJFY+seVmslIJtXj3CB8sQcLFN5WIZiGeerDNGYBCvK/0fOrOrKHBR/V61\nc+zjaG+VDn3dyld0F5MpuF/bCzjTIhVHOa7AWRdG6wHxyRYMhSPRFxESBJ8baKCZ\ndFwzORbjUTafNYQ+i2zvGAxI+xMD+NlQyQT04/Gj0gnMiGhZEog=\n=XUtH\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f14900b6e4eac26ae5f1c0badfa176d895851c97",
          "sha": "f14900b6e4eac26ae5f1c0badfa176d895851c97",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f14900b6e4eac26ae5f1c0badfa176d895851c97"
        }
      ],
      "message": "tests: add key tweak smoke test\n\nSanity check that using CKey/CPubKey directly vs using secp256k1_keypair objects\nreturns the same results for BIP341 key tweaking.\n\nCo-authored-by: l0rinc <pap.lorinc@gmail.com>",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-08-03T13:16:03Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-07-21T16:43:00Z"
      },
      "sha": "5d507a0091da1b6c013b00b6c76e19dd4d3b93a7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGMzOWZkMzliYTg2ODI1M2I1MTE4ZGIyZTFhYzE0NjFkMjlmMGI0Y2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c39fd39ba868253b5118db2e1ac1461d29f0b4ce",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c39fd39ba868253b5118db2e1ac1461d29f0b4ce",
      "tree": {
        "sha": "3f129d64b3c8fd26d7b1ff9a40ec772c20744e63",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3f129d64b3c8fd26d7b1ff9a40ec772c20744e63"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3f129d64b3c8fd26d7b1ff9a40ec772c20744e63\nparent 5d507a0091da1b6c013b00b6c76e19dd4d3b93a7\nauthor josibake <josibake@protonmail.com> 1721147650 +0200\ncommitter josibake <josibake@protonmail.com> 1722690963 +0200\n\ncrypto: add KeyPair wrapper class\n\nAdd a `KeyPair` class which wraps the `secp256k1_keypair`. This keeps\nthe secret data in secure memory and enables passing the\n`KeyPair` object directly to libsecp256k1 functions expecting a\n`secp256k1_keypair`.\n\nMotivation: when passing `CKeys` for taproot outputs to libsecp256k1 functions,\nthe first step is to create a `secp256k1_keypair` data type and use that\ninstead. This is so the libsecp256k1 function can determine if the key\nneeds to be negated, e.g., when signing.\n\nThis is a bit clunky in that it creates an extra step when using a `CKey`\nfor a taproot output and also involves copying the secret data into a\ntemporary object, which the caller must then take care to cleanse. In\naddition, the logic for applying the merkle_root tweak currently\nonly exists in the `SignSchnorr` function.\n\nIn a later commit, we will add the merkle_root tweaking logic to this\nfunction, which will make the merkle_root logic reusable outside of\nsigning by using the `KeyPair` class directly.\n\nCo-authored-by: Cory Fields <cory-nospam-@coryfields.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmauLZMACgkQity1WMTz\nPWXpuQ/9Hng3zNQhnl9Y0mywayXMODruJmuJw2M17KXMtd4/NWqg75EKQz9Cbe3b\nXgxL6J23dtNfyAcLqFjT4jguE1CadF9d0hccLGH4jNs0639Cj3Isjph/DYXDNMFf\nnVekeg8vIrt0F3qpAUsATxDkEVj9ziUge5xoncWMV15b7O06kK81VKMiodYfawo2\nIcyES/iuVLiI9nHR9HCWo15MEG9PjVRDdMfwyeDIYGlwW/1BYiN+Ym9KGbEYqfPa\nZQONjEuM595XttpK/GJILfUTprmrtO9ZthXoS6fZUu7fdROYM0eUXW2U/i0Bg5Hc\nUijf3Qm8CmeDCR98dV1pe86VJKGd43W6pEJ/FljrIIRkLIINbQ5+v/vq+gEda9hx\nHN72ssjmlTRBqLhnjgHhHDmGlNFzpWG+z/MKkgTFKHh3fxORZSiPNNOPUvrB74nk\nY1XR31l2L5sXlQUBj9JkGKP7aCa6pwr8Vfa1BXYt2pRMNOzNJuaCnjv4qwjsCfro\nIg8v4IFAf1Hz+eO/jDVkzusjjEXC6j9jtWJ6+kRJmZZy3VboKogKKz6X3sLbn6Kf\nRU3VMcH1v171/encKwIbSECWb0uvThsx/hCMpnVJe+KDlJNZHXiZdZQYPIlteQXn\n3e69jVWdg2mmn1YCRs19QFiGpEFIz7Yn1ffm/pvsK9X68IYhQzs=\n=scOa\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5d507a0091da1b6c013b00b6c76e19dd4d3b93a7",
          "sha": "5d507a0091da1b6c013b00b6c76e19dd4d3b93a7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5d507a0091da1b6c013b00b6c76e19dd4d3b93a7"
        }
      ],
      "message": "crypto: add KeyPair wrapper class\n\nAdd a `KeyPair` class which wraps the `secp256k1_keypair`. This keeps\nthe secret data in secure memory and enables passing the\n`KeyPair` object directly to libsecp256k1 functions expecting a\n`secp256k1_keypair`.\n\nMotivation: when passing `CKeys` for taproot outputs to libsecp256k1 functions,\nthe first step is to create a `secp256k1_keypair` data type and use that\ninstead. This is so the libsecp256k1 function can determine if the key\nneeds to be negated, e.g., when signing.\n\nThis is a bit clunky in that it creates an extra step when using a `CKey`\nfor a taproot output and also involves copying the secret data into a\ntemporary object, which the caller must then take care to cleanse. In\naddition, the logic for applying the merkle_root tweak currently\nonly exists in the `SignSchnorr` function.\n\nIn a later commit, we will add the merkle_root tweaking logic to this\nfunction, which will make the merkle_root logic reusable outside of\nsigning by using the `KeyPair` class directly.\n\nCo-authored-by: Cory Fields <cory-nospam-@coryfields.com>",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-08-03T13:16:03Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-07-16T16:34:10Z"
      },
      "sha": "c39fd39ba868253b5118db2e1ac1461d29f0b4ce"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13750060120,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAMzkURY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13750060120",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "bfb2e6bcef0269141453e43cad56c566c33b9666",
      "commit_url": "https://api.github.com/repos/josibake/bitcoin/commits/bfb2e6bcef0269141453e43cad56c566c33b9666",
      "created_at": "2024-08-03T13:16:37Z"
    },
    {
      "event": "commented",
      "id": 2266713078,
      "node_id": "IC_kwDOABII586HG0v2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2266713078",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-03T13:29:54Z",
      "updated_at": "2024-08-03T13:29:54Z",
      "author_association": "MEMBER",
      "body": "Update https://github.com/bitcoin/bitcoin/commit/9afa2c9e50370b2918377f3f3eac0950a4296ec0 -> https://github.com/bitcoin/bitcoin/commit/bfb2e6bcef0269141453e43cad56c566c33b9666 ([apply-taptweak-method-06-rebase](https://github.com/josibake/bitcoin/tree/apply-taptweak-method-06-rebase) -> [apply-taptweak-method-07](https://github.com/josibake/bitcoin/tree/apply-taptweak-method-07) ([compare](https://github.com/josibake/bitcoin/compare/apply-taptweak-method-06-rebase..josibake:apply-taptweak-method-07))\r\n\r\n* Add `SignSchnorrTapTweakBenchmark` (h/t @paplorinc)\r\n  * Modified the name from @paplorinc 's version and changed it to use `minEpochIterations(100)` instead of `batch(1)`\r\n* Removed public `data()` method. Since this is method is not currently used, it seems better to add this in the Silent Payments sending PR (as `GetKeyPairData()`) where it will be used\r\n* Renamed variables in the schnorr tweak smoke test\r\n* Replaced early returns in the `if merkle_root` block with asserts",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2266713078",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "mentioned",
      "id": 13750082672,
      "node_id": "MEE_lADOABII586H706dzwAAAAMzkZxw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13750082672",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-03T13:29:56Z"
    },
    {
      "event": "subscribed",
      "id": 13750082678,
      "node_id": "SE_lADOABII586H706dzwAAAAMzkZx2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13750082678",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-03T13:29:56Z"
    },
    {
      "event": "reviewed",
      "id": 2217060285,
      "node_id": "PRR_kwDOABII586EJae9",
      "url": null,
      "actor": null,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-08-04T06:52:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "utACK bfb2e6bcef0269141453e43cad56c566c33b9666\r\n\r\nThanks for your perseverance! ",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2217060285",
      "submitted_at": "2024-08-03T14:01:01Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "review_requested",
      "id": 13750136869,
      "node_id": "RRE_lADOABII586H706dzwAAAAMzknAl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13750136869",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-03T14:01:07Z",
      "requested_reviewer": {
        "login": "itornaza",
        "id": 11520757,
        "node_id": "MDQ6VXNlcjExNTIwNzU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/11520757?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itornaza",
        "html_url": "https://github.com/itornaza",
        "followers_url": "https://api.github.com/users/itornaza/followers",
        "following_url": "https://api.github.com/users/itornaza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/itornaza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/itornaza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/itornaza/subscriptions",
        "organizations_url": "https://api.github.com/users/itornaza/orgs",
        "repos_url": "https://api.github.com/users/itornaza/repos",
        "events_url": "https://api.github.com/users/itornaza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/itornaza/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 13750136885,
      "node_id": "RRE_lADOABII586H706dzwAAAAMzknA1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13750136885",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-03T14:01:07Z",
      "requested_reviewer": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2217090887,
      "node_id": "PRR_kwDOABII586EJh9H",
      "url": null,
      "actor": null,
      "commit_id": "bfb2e6bcef0269141453e43cad56c566c33b9666",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-08-03T16:16:29Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2217090887",
      "submitted_at": "2024-08-03T16:16:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13753802080,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAMzyl1g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13753802080",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8a878f552c4d150a9e6bc411477c3ec83a976d85",
      "commit_url": "https://api.github.com/repos/josibake/bitcoin/commits/8a878f552c4d150a9e6bc411477c3ec83a976d85",
      "created_at": "2024-08-04T06:50:37Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNlYmIwOGIxMjFjZThjNGM1ZTY4YmQwNDNiODY2OGMxMDZlMzExNjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cebb08b121ce8c4c5e68bd043b8668c106e31169",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cebb08b121ce8c4c5e68bd043b8668c106e31169",
      "tree": {
        "sha": "a688b569a333af67e4de2a8f7c1057872a6a4531",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a688b569a333af67e4de2a8f7c1057872a6a4531"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a688b569a333af67e4de2a8f7c1057872a6a4531\nparent c39fd39ba868253b5118db2e1ac1461d29f0b4ce\nauthor josibake <josibake@protonmail.com> 1721147801 +0200\ncommitter josibake <josibake@protonmail.com> 1722754296 +0200\n\nrefactor: move SignSchnorr to KeyPair\n\nMove `SignSchnorr` to `KeyPair`. This makes `CKey::SignSchnorr` now\ncompute a `KeyPair` object and then call `KeyPair::SignSchorr`. The\nnotable changes are:\n\n    * Move the merkle_root tweaking out of the sign function and into\n      the KeyPair constructor\n    * Remove the temporary secp256k1_keypair object and have the\n      functions access m_keypair->data() directly\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmavJSUACgkQity1WMTz\nPWUzXw/+IgqFNzSFqdoiwXjoqZYil54TZowwGf3nLz73DcwIMpLebnWABu5Ca4hO\n3UVQZtg2K/8K7kxkPlw8tQtNThOXelt1QiIEE6ruy/ccpoPr9S0FEO7z+4iXZ51l\n8YKR0fAnKN45/+NWPfaY5FCO+koFbmqpCvGUyR42H+9Ww5atBmBGCkGgyP7l2yvx\n4710Y75b36DKvjI4XgHMvVfsXNV5hrNFzw6oLSZN7uH8atnLYoX+1K2go4qZFLN9\n+k7GjGSdpmng5JBetwS8ZmlfoHcNmf3IlGt/mo5FLeRcsNdSdgRQvea/CwKJGBJc\nwZv4bOu47MaPjeDFRFEhHO2wtWEpVdXZzk1idPXWsWbJFT2KH23+w0+SCMikm21j\nQcyV2t6b97edrU3Qg1zDDHbbqKqURg2SIKGoxjOGuQPXO08RvPpLCfl+EG0Yw8QA\nyLlYf9s9Y9NUYDoDNiZagrtoIj28WfIBUv51j7eLGRJEnQCuxAOATDuqCmFk/5HV\nNJfU5bPNAlsHhbS5Y9ziU2O/yBebVlD9bKff3NUXvqv+t0B8D5RvO5MWosL7gKGX\nYCO9hmKGrBIRWXrJhM1ONKKQy9WLGiC2n5y03s6ShXGTlFOleq0/igve2SBXekDr\nR6EsC5vQb87SYCshOmPkQUjxCugVlFXzhJQ5xo22iHpc9t1yqcs=\n=5lFA\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c39fd39ba868253b5118db2e1ac1461d29f0b4ce",
          "sha": "c39fd39ba868253b5118db2e1ac1461d29f0b4ce",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c39fd39ba868253b5118db2e1ac1461d29f0b4ce"
        }
      ],
      "message": "refactor: move SignSchnorr to KeyPair\n\nMove `SignSchnorr` to `KeyPair`. This makes `CKey::SignSchnorr` now\ncompute a `KeyPair` object and then call `KeyPair::SignSchorr`. The\nnotable changes are:\n\n    * Move the merkle_root tweaking out of the sign function and into\n      the KeyPair constructor\n    * Remove the temporary secp256k1_keypair object and have the\n      functions access m_keypair->data() directly",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-08-04T06:51:36Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-07-16T16:36:41Z"
      },
      "sha": "cebb08b121ce8c4c5e68bd043b8668c106e31169"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDcyYTU4MjJkNDNkNDc0MzFiMjgzOGViZmNiMWYyZTIxMjEwZjVjY2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/72a5822d43d47431b2838ebfcb1f2e21210f5ccb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/72a5822d43d47431b2838ebfcb1f2e21210f5ccb",
      "tree": {
        "sha": "23a999429fa3eb7877cf9ee1826578a21b9e93e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/23a999429fa3eb7877cf9ee1826578a21b9e93e3"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 23a999429fa3eb7877cf9ee1826578a21b9e93e3\nparent cebb08b121ce8c4c5e68bd043b8668c106e31169\nauthor josibake <josibake@protonmail.com> 1721144552 +0200\ncommitter josibake <josibake@protonmail.com> 1722754341 +0200\n\ntests: add tests for KeyPair\n\nReuse existing BIP340 tests, as there should be\nno behavior change between the two\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmavJSUACgkQity1WMTz\nPWWS5Q/9G0n6Y4F4PcGA3PfiVc43mtfoYwXl9vPWr8chAXGXBVryMQsmWjPjwB62\nkqb5CF9q5zwV7qKXXjh+okX1cIRx20tHrPZdXGYOYLoJXNIpOpsuuXzSAYITsYXf\n9eiFtMlZn+N/K0RJbBJalolGCZ3COUVxD5ikC4poV7kW6lNwucTE0yOsXLXVYO61\nS4iHUT8v+VeqJGHMzzJFVxtDjmErAWTXODm/vNX3BzqxW1hK0Jo3TVhI/XZtWYHg\nOY/ElTHeCg8VuCu3qoTsItFS0PSEuDuc9aVfPKHQ0AJ7iRU1PXKhFVZodVEDwnn/\npEQ5OMrudGq2aMEZQbFHTz468Q9ekv55W3Hq5A8/H04BDxPu98yfnz6wOGGOSbNO\nD8RPeLetwJrBZL9kOaxg/NMObvPjoCbfSD3SG/lmqLjW9zXLX0TxeSnyHtsMhfye\nnt6I+FEt6li84m5fdrzKndaY0Y5jdTGIUI0SRBWr1MkXuerItAOjN4tHelxsZieg\nUr1+sHnAc2oFRN/mwvC57+N/6u5vlypOU8NUn7xwdnagfQyBsRzqxN94NVxNrsEq\nH/hmdfcnAJnX9U7wISDpOWaRD1JwXN+J9AD5uBBuyK+IFkQ931XpiPs2WTOkg/qf\nuR9bbIbD5uZ/Dwz4ayYRe8HR4E0T4l18I2Zbwk+8ONDlRowcOGA=\n=FPjm\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cebb08b121ce8c4c5e68bd043b8668c106e31169",
          "sha": "cebb08b121ce8c4c5e68bd043b8668c106e31169",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cebb08b121ce8c4c5e68bd043b8668c106e31169"
        }
      ],
      "message": "tests: add tests for KeyPair\n\nReuse existing BIP340 tests, as there should be\nno behavior change between the two",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-08-04T06:52:21Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-07-16T15:42:32Z"
      },
      "sha": "72a5822d43d47431b2838ebfcb1f2e21210f5ccb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVjOTczZGQxOTcxOTU0MWRiY2Q2ZjNhNmZhY2Y2ZjVkZDdjZjQzOWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "tree": {
        "sha": "23913a95df3310d67e59563226b5ad249697dd29",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/23913a95df3310d67e59563226b5ad249697dd29"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 23913a95df3310d67e59563226b5ad249697dd29\nparent 72a5822d43d47431b2838ebfcb1f2e21210f5ccb\nauthor josibake <josibake@protonmail.com> 1722689908 +0200\ncommitter josibake <josibake@protonmail.com> 1722754342 +0200\n\nrefactor: remove un-tested early returns\n\nReplace early returns in KeyPair::KeyPair() with asserts.\n\nThe if statements imply there is an error we are handling, but keypair_xonly_pub\nand xonly_pubkey_serialize can only fail if the keypair object is malformed, i.e.,\nit was created with a bad secret key. Since we check that the keypair was created\nsuccessfully before attempting to extract the public key, using asserts more\naccurately documents what we expect here and removes untested branches from the code.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmavJSYACgkQity1WMTz\nPWXUKQ/+KxZf9JZiUWTj3XimRpSzksPkAd7H9bRN06OmUH7ZMKpk2k/U+6MZdKNw\n+FGhw+1ijnXp78Ofs8q1qQ9Zae1O9r1bfVZxqzUN9Fk7FeE0fHyn88jMg8M+u8xf\nO0lq/nJaAP7b/BMhAJGFwWW0KBnclfE22Vnonz4j0IQtaLtJBxUk5mH6YeSq7KGw\nOJSYP6PmMWW50Ysakh3K/bRBmoPPPiQGcOTnD1BV9ojQjLpXzr1QFt7ecIcoSvZF\nhb1k74QMMN5cgJsZci9oAHUW3JOqi8hyS2dyAv+001uo9DSFslo1P2VNseM0qPp6\nta5qjXgZbU04xPitsK4mxVuvIndrB8p4ff0BVPE1R26ghaWooghPGLUPovbxMAAV\nK1HadB6o4YdniZrTOj8lwDfNB4xRLGpTa1JFLA1YeeE0I+gybn+AsXpJvNdQqw0E\nprKITwm75kcjm210ld+vW8+pZxmAyQW9ohkN7zjMKCtj0mGIEhVGLtpEc2x3/1jL\n4vADnDiN/UxKRLKZiVrwkRKaXfIkw1vNeArM7Q718iGH28Pdwri0I8J6yv69jkuX\naK6mhLoG0YfkrNDJEnZjGnIIN9zeq57gN/XoIEbWF78yLGK4aZIeslT+hr3BzkWE\nEa7DZEnfKAn4x7KbmpZB751ALpDes3a3xCYrr/gIdAdr17mtY2w=\n=5/n1\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/72a5822d43d47431b2838ebfcb1f2e21210f5ccb",
          "sha": "72a5822d43d47431b2838ebfcb1f2e21210f5ccb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/72a5822d43d47431b2838ebfcb1f2e21210f5ccb"
        }
      ],
      "message": "refactor: remove un-tested early returns\n\nReplace early returns in KeyPair::KeyPair() with asserts.\n\nThe if statements imply there is an error we are handling, but keypair_xonly_pub\nand xonly_pubkey_serialize can only fail if the keypair object is malformed, i.e.,\nit was created with a bad secret key. Since we check that the keypair was created\nsuccessfully before attempting to extract the public key, using asserts more\naccurately documents what we expect here and removes untested branches from the code.",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-08-04T06:52:22Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-08-03T12:58:28Z"
      },
      "sha": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13753807472,
      "node_id": "HRFPE_lADOABII586H706dzwAAAAMzynJw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13753807472",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "commit_url": "https://api.github.com/repos/josibake/bitcoin/commits/ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "created_at": "2024-08-04T06:52:40Z"
    },
    {
      "event": "labeled",
      "id": 13754163203,
      "node_id": "LE_lADOABII586H706dzwAAAAMzz-AD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13754163203",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-04T08:05:43Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 13760974004,
      "node_id": "UNLE_lADOABII586H706dzwAAAAM0N8y0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13760974004",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-05T09:13:35Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2218335492,
      "node_id": "PRR_kwDOABII586EOR0E",
      "url": null,
      "actor": null,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-08-05T10:34:04Z",
      "author_association": "MEMBER",
      "body": "Code review ACK ec973dd19719541dbcd6f3a6facf6f5dd7cf439c\r\n",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2218335492",
      "submitted_at": "2024-08-05T10:34:04Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "review_requested",
      "id": 13762171568,
      "node_id": "RRE_lADOABII586H706dzwAAAAM0ShKw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13762171568",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-05T10:34:10Z",
      "requested_reviewer": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 2268780105,
      "node_id": "IC_kwDOABII586HOtZJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2268780105",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-05T10:51:42Z",
      "updated_at": "2024-08-05T10:51:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK ec973dd19719541dbcd6f3a6facf6f5dd7cf439c - will happily reack if you decide to apply @ismaelsadeeq's suggestions",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2268780105",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "mentioned",
      "id": 13762386086,
      "node_id": "MEE_lADOABII586H706dzwAAAAM0TVim",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13762386086",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-05T10:51:43Z"
    },
    {
      "event": "subscribed",
      "id": 13762386105,
      "node_id": "SE_lADOABII586H706dzwAAAAM0TVi5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13762386105",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-05T10:51:43Z"
    },
    {
      "event": "reviewed",
      "id": 2219301924,
      "node_id": "PRR_kwDOABII586ER9wk",
      "url": null,
      "actor": null,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-08-05T15:39:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "trACK ec973dd19719541dbcd6f3a6facf6f5dd7cf439c\r\n\r\nRebuilt the commit, run all unit, functional and extended tests and all of them pass.",
      "user": {
        "login": "itornaza",
        "id": 11520757,
        "node_id": "MDQ6VXNlcjExNTIwNzU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/11520757?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itornaza",
        "html_url": "https://github.com/itornaza",
        "followers_url": "https://api.github.com/users/itornaza/followers",
        "following_url": "https://api.github.com/users/itornaza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/itornaza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/itornaza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/itornaza/subscriptions",
        "organizations_url": "https://api.github.com/users/itornaza/orgs",
        "repos_url": "https://api.github.com/users/itornaza/repos",
        "events_url": "https://api.github.com/users/itornaza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/itornaza/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2219301924",
      "submitted_at": "2024-08-05T15:29:30Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "reviewed",
      "id": 2221804572,
      "node_id": "PRR_kwDOABII586Ebgwc",
      "url": null,
      "actor": null,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-08-06T17:59:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "Code-review ACK ec973dd19719541dbcd6f3a6facf6f5dd7cf439c\r\n\r\nLeft a few non-critical nits below, feel free to ignore.",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#pullrequestreview-2221804572",
      "submitted_at": "2024-08-06T17:59:46Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
    },
    {
      "event": "assigned",
      "id": 13785579073,
      "node_id": "AE_lADOABII586H706dzwAAAAM1rz5B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13785579073",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-07T01:42:41Z",
      "assignee": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "merged",
      "id": 13785729611,
      "node_id": "ME_lADOABII586H706dzwAAAAM1sYpL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13785729611",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b38fb19b7eed952726a8b858de3f0533c867fc90",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b38fb19b7eed952726a8b858de3f0533c867fc90",
      "created_at": "2024-08-07T02:10:13Z"
    },
    {
      "event": "closed",
      "id": 13785729620,
      "node_id": "CE_lADOABII586H706dzwAAAAM1sYpU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13785729620",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-07T02:10:13Z"
    },
    {
      "event": "labeled",
      "id": 13821223723,
      "node_id": "LE_lADOABII586H706dzwAAAAM3zyMr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13821223723",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-09T13:52:12Z",
      "label": {
        "name": "Needs CMake port",
        "color": "0e8a16"
      }
    },
    {
      "event": "commented",
      "id": 2278035414,
      "node_id": "IC_kwDOABII586HyA_W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2278035414",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-09T14:08:51Z",
      "updated_at": "2024-08-09T14:08:51Z",
      "author_association": "MEMBER",
      "body": "The buildsystem related stuff has been ported to the CMake-based buildsystem in https://github.com/hebasto/bitcoin/pull/317.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#issuecomment-2278035414",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30051"
    },
    {
      "event": "unlabeled",
      "id": 13821486898,
      "node_id": "UNLE_lADOABII586H706dzwAAAAM30ycy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13821486898",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-09T14:09:00Z",
      "label": {
        "name": "Needs CMake port",
        "color": "0e8a16"
      }
    },
    {
      "event": "referenced",
      "id": 13825006441,
      "node_id": "REFE_lADOABII586H706dzwAAAAM4CNtp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13825006441",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "783a27b71d7a6b71d7ab16d8125a985510247244",
      "commit_url": "https://api.github.com/repos/hebasto/bitcoin/commits/783a27b71d7a6b71d7ab16d8125a985510247244",
      "created_at": "2024-08-09T19:47:05Z"
    },
    {
      "event": "comment_deleted",
      "id": 13841291938,
      "node_id": "CDE_lADOABII586H706dzwAAAAM5AVqi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13841291938",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-12T05:18:40Z"
    },
    {
      "event": "locked",
      "id": 19110104192,
      "node_id": "LOE_lADOABII586H706dzwAAAARzDQyA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19110104192",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-12T11:25:24Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594325841",
      "pull_request_review_id": 2046154187,
      "id": 1594325841,
      "node_id": "PRRC_kwDOABII585fB3tR",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": null,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Will anything ever use this key directly? Or will it always just be turned back into a `secp256k1_keypair`? It seems the CKey output is just a wrapper that causes overhead here. I guess for the sake of not exposing `secp256k1_keypair` to the caller?",
      "created_at": "2024-05-08T16:44:21Z",
      "updated_at": "2024-05-08T16:48:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1594325841",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594325841"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594328715",
      "pull_request_review_id": 2046154187,
      "id": 1594328715,
      "node_id": "PRRC_kwDOABII585fB4aL",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;\n+        if (!ComputeTapTweak(*this, *merkle_root, tweaked_key)) return false;\n+        ret = secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(tweaked_key.begin()));\n+        tweaked_key = CKey();",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": null,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is going out of scope anyway, no need?",
      "created_at": "2024-05-08T16:46:56Z",
      "updated_at": "2024-05-08T16:48:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1594328715",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594328715"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594465354",
      "pull_request_review_id": 2046365854,
      "id": 1594465354,
      "node_id": "PRRC_kwDOABII585fCZxK",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": 1594325841,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yep! From the description:\r\n\r\n> The motivation is to be able to use the ::ApplyTapTweak logic outside of signing, e.g. in silent payments when retrieving the private key. Outside of silent payments, having this method would support any future use cases where the tweaked key is needed outside of signing.\r\n\r\nThis commit was broken out of the silent payments sending PR, because there we need the tweaked `CKey`. However, we do eventually turn it back into a `keypair` when passing it to libsecp, so maybe there is an argument for just returning the `keypair`? But passing around libsecp types seemed a bit weird..",
      "created_at": "2024-05-08T18:26:18Z",
      "updated_at": "2024-05-08T18:26:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1594465354",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594465354"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594569600",
      "pull_request_review_id": 2046546616,
      "id": 1594569600,
      "node_id": "PRRC_kwDOABII585fCzOA",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": 1594325841,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hmm, if what you need is a wrapped `keypair`, how about creating a wrapped `keypair`? :) https://github.com/theuni/bitcoin/commit/db1d199bf93eae046a62245db8f7782a94f25e9d\r\n\r\n^^ Completely untested. Maybe state via `ApplyTapTweak` is unnecessary as the ctor could just take a pointer to a merkle root instead?",
      "created_at": "2024-05-08T20:08:32Z",
      "updated_at": "2024-05-08T20:28:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1594569600",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1594569600"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595092731",
      "pull_request_review_id": 2047353278,
      "id": 1595092731,
      "node_id": "PRRC_kwDOABII585fEy77",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": 1594325841,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nice, thanks for the suggestion! This makes a ton more sense. I think it would be better to have the ctor take a pointer to the merkle root because `ApplyTapTweak` is something that you a) only want to do once over the lifetime of the object and b) will always be applied if a `merkle_root` is present (even if its `merkle_root.IsNull() == true`). I don't think this is actually a use case, but if for whatever reason you did need to do something with the key and then later apply a merkle root tweak, you could just use the `CKey` first and then create a `KeyPair(*this, merkle_root)` with the merkle root when needed. \r\n\r\nAlso, what do you think about something like `KeyPair CKey::ComputeKeyPair(*merkle_root);` method, instead of `KeyPair(CKey, merkle_root)`?\r\n\r\nWill pull this in and test it in #28122 and #28201.",
      "created_at": "2024-05-09T07:46:23Z",
      "updated_at": "2024-05-09T07:46:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1595092731",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595092731"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595390078",
      "pull_request_review_id": 2047862139,
      "id": 1595390078,
      "node_id": "PRRC_kwDOABII585fF7h-",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": 1594325841,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Please consider the above a doodle, change it however you'd like. I just wanted to sketch out the concept of a wrapped `keypair`.",
      "created_at": "2024-05-09T12:37:48Z",
      "updated_at": "2024-05-09T12:37:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1595390078",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595390078"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595408180",
      "pull_request_review_id": 2047891999,
      "id": 1595408180,
      "node_id": "PRRC_kwDOABII585fF_80",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": 1594325841,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah, for sure! But thanks, very helpful doodle. Not sure why I was so apprehensive about passing around a keypair, but seeing you write it out helped it click for me.",
      "created_at": "2024-05-09T12:54:23Z",
      "updated_at": "2024-05-09T12:54:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1595408180",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595408180"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595821023",
      "pull_request_review_id": 2048562521,
      "id": 1595821023,
      "node_id": "PRRC_kwDOABII585fHkvf",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": 1594325841,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Updated as suggested here: https://github.com/theuni/bitcoin/commits/keypairtaptweak/",
      "created_at": "2024-05-09T18:22:39Z",
      "updated_at": "2024-05-09T18:22:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1595821023",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1595821023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596696710",
      "pull_request_review_id": 2049982773,
      "id": 1596696710,
      "node_id": "PRRC_kwDOABII585fK6iG",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": 1594325841,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Awesome, thanks @theuni ! I pulled this commit in and also add a \"simple read only vector like interface\" to the `KeyPair` class (same as `CKey`). Needed for: https://github.com/josibake/bitcoin/blob/33868a74dc7b3403ff38343899c37feb4c88d0c6/src/common/bip352.cpp#L204\r\nI also rebased #28122 on this PR and confirmed everything works with the new `KeyPair` class.",
      "created_at": "2024-05-10T12:33:24Z",
      "updated_at": "2024-05-10T12:46:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1596696710",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596696710"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596806833",
      "pull_request_review_id": 2050167463,
      "id": 1596806833,
      "node_id": "PRRC_kwDOABII585fLVax",
      "diff_hunk": "@@ -203,6 +205,8 @@ class CKey\n     ECDHSecret ComputeBIP324ECDHSecret(const EllSwiftPubKey& their_ellswift,\n                                        const EllSwiftPubKey& our_ellswift,\n                                        bool initiating) const;\n+\n+    KeyPair ComputeKeyPair(const uint256* merkle_root) const;",
      "path": "src/key.h",
      "position": 28,
      "original_position": 14,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "0caa3241b00ee49c7f103c04b6aaad292ec18372",
      "in_reply_to_id": null,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This could use a comment.",
      "created_at": "2024-05-10T14:11:53Z",
      "updated_at": "2024-05-10T14:16:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1596806833",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596806833"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 222,
      "original_line": 222,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596815685",
      "pull_request_review_id": 2050182032,
      "id": 1596815685,
      "node_id": "PRRC_kwDOABII585fLXlF",
      "diff_hunk": "@@ -275,20 +275,51 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool ComputeTapTweak(const CKey& internal_key, const uint256& merkle_root, CKey& tweaked_key)\n+{\n+    secp256k1_keypair keypair;\n+    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(internal_key.begin()))) return false;\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char pubkey_bytes[32];\n+    if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\n+    if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    unsigned char tweaked_secret_bytes[32];\n+    if (!secp256k1_keypair_sec(secp256k1_context_sign, tweaked_secret_bytes, &keypair)) {\n+        memory_cleanse(&keypair, sizeof(keypair));\n+        return false;\n+    }\n+    tweaked_key.Set(std::begin(tweaked_secret_bytes), std::end(tweaked_secret_bytes), true);\n+    memory_cleanse(&keypair, sizeof(keypair));\n+    memory_cleanse(tweaked_secret_bytes, sizeof(tweaked_secret_bytes));\n+    return tweaked_key.IsValid();\n+}\n+\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret;\n     secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        CKey tweaked_key;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "6cc72ced115828c60520c2f598795ee7d41275c9",
      "in_reply_to_id": 1594325841,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That looks much better, thanks. Exposing the vector-like interface is a shame, but I don't see any way around it for `secp256k1_silentpayments_sender_create_outputs`.",
      "created_at": "2024-05-10T14:19:26Z",
      "updated_at": "2024-05-10T14:19:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1596815685",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596815685"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596979700",
      "pull_request_review_id": 2050461011,
      "id": 1596979700,
      "node_id": "PRRC_kwDOABII585fL_n0",
      "diff_hunk": "@@ -203,6 +205,8 @@ class CKey\n     ECDHSecret ComputeBIP324ECDHSecret(const EllSwiftPubKey& their_ellswift,\n                                        const EllSwiftPubKey& our_ellswift,\n                                        bool initiating) const;\n+\n+    KeyPair ComputeKeyPair(const uint256* merkle_root) const;",
      "path": "src/key.h",
      "position": 28,
      "original_position": 14,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "0caa3241b00ee49c7f103c04b6aaad292ec18372",
      "in_reply_to_id": 1596806833,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2024-05-10T16:44:18Z",
      "updated_at": "2024-05-10T16:44:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1596979700",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596979700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 222,
      "original_line": 222,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1597605164",
      "pull_request_review_id": 2051346482,
      "id": 1597605164,
      "node_id": "PRRC_kwDOABII585fOYUs",
      "diff_hunk": "@@ -327,6 +327,16 @@ BOOST_AUTO_TEST_CASE(bip340_test_vectors)\n         // Verify those signatures for good measure.\n         BOOST_CHECK(pubkey.VerifySchnorr(msg256, sig64));\n \n+        // Repeat the same check, but use the KeyPair directly without any merkle tweak\n+        KeyPair keypair = key.ComputeKeyPair(/*merkle_root=*/nullptr);\n+        CKey keypair_seckey;\n+        BOOST_CHECK(keypair.GetKey(keypair_seckey));",
      "path": "src/test/key_tests.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: BOOST_CHECK_MESSAGE often produces more readable results, but it may be inconvenient to set it up properly. If you think it adds value, it may be helpful to add some debug info as a message in case of likely failures.",
      "created_at": "2024-05-12T10:16:07Z",
      "updated_at": "2024-05-12T10:26:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1597605164",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1597605164"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 333,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1597605647",
      "pull_request_review_id": 2051346482,
      "id": 1597605647,
      "node_id": "PRRC_kwDOABII585fOYcP",
      "diff_hunk": "@@ -236,6 +252,41 @@ struct CExtKey {\n     void SetSeed(Span<const std::byte> seed);\n };\n \n+/** KeyPair\n+ *\n+ *  Wraps a `secp256k1_keypair` type. `merkle_root` is used to optionally perform tweaking of\n+ *  the internal key, as specified in BIP341:\n+ *\n+ *  - If merkle_root == nullptr: no tweaking is done, use the internal key directly (this is\n+ *                               used for signatures in BIP342 script).\n+ *  - If merkle_root->IsNull():  tweak the internal key with H_TapTweak(pubkey) (this is used for\n+ *                               key path spending when no scripts are present).\n+ *  - Otherwise:                 tweak the internal key H_TapTweak(pubkey || *merkle_root)\n+ *                               (this is used for key path spending, with specific\n+ *                               Merkle root of the script tree).\n+ */\n+class KeyPair\n+{\n+public:\n+    KeyPair(KeyPair&&) noexcept = default;\n+    KeyPair& operator=(KeyPair&&) noexcept = default;\n+\n+    friend KeyPair CKey::ComputeKeyPair(const uint256* merkle_root) const;\n+    [[nodiscard]] bool GetKey(CKey& key) const;\n+    [[nodiscard]] bool SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256& aux) const;\n+\n+    //! Simple read-only vector-like interface.\n+    unsigned int size() const { return m_keydata ? m_keydata->size() : 0; }\n+    const std::byte* data() const { return m_keydata ? reinterpret_cast<const std::byte*>(m_keydata->data()) : nullptr; }\n+    const std::byte* begin() const { return data(); }\n+    const std::byte* end() const { return data() + size(); }\n+private:\n+    KeyPair(const CKey& key, const uint256* merkle_root);\n+\n+    using KeyType = std::array<unsigned char, 96>;",
      "path": "src/key.h",
      "position": 77,
      "original_position": 65,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: would it make sense to extract the `96` to a const?\r\n```C++\r\nconstexpr size_t SECP256K1_KEYPAIR_SIZE = 96;\r\nusing KeyType = std::array<unsigned char, SECP256K1_KEYPAIR_SIZE>;\r\n```",
      "created_at": "2024-05-12T10:18:42Z",
      "updated_at": "2024-05-12T10:26:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1597605647",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1597605647"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 297,
      "original_line": 297,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1598114179",
      "pull_request_review_id": 2052091990,
      "id": 1598114179,
      "node_id": "PRRC_kwDOABII585fQUmD",
      "diff_hunk": "@@ -327,6 +327,16 @@ BOOST_AUTO_TEST_CASE(bip340_test_vectors)\n         // Verify those signatures for good measure.\n         BOOST_CHECK(pubkey.VerifySchnorr(msg256, sig64));\n \n+        // Repeat the same check, but use the KeyPair directly without any merkle tweak\n+        KeyPair keypair = key.ComputeKeyPair(/*merkle_root=*/nullptr);\n+        CKey keypair_seckey;\n+        BOOST_CHECK(keypair.GetKey(keypair_seckey));",
      "path": "src/test/key_tests.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "in_reply_to_id": 1597605164,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't think it adds much here? We are using BOOST_CHECK to to ensure the function call succeeds before proceeding, so getting a line number failure for BOOST_CHECK seems sufficient for debugging. Also, if dealing with valid keys, this function should never fail.",
      "created_at": "2024-05-13T08:55:21Z",
      "updated_at": "2024-05-13T08:55:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1598114179",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1598114179"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 333,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1598119960",
      "pull_request_review_id": 2052101222,
      "id": 1598119960,
      "node_id": "PRRC_kwDOABII585fQWAY",
      "diff_hunk": "@@ -236,6 +252,41 @@ struct CExtKey {\n     void SetSeed(Span<const std::byte> seed);\n };\n \n+/** KeyPair\n+ *\n+ *  Wraps a `secp256k1_keypair` type. `merkle_root` is used to optionally perform tweaking of\n+ *  the internal key, as specified in BIP341:\n+ *\n+ *  - If merkle_root == nullptr: no tweaking is done, use the internal key directly (this is\n+ *                               used for signatures in BIP342 script).\n+ *  - If merkle_root->IsNull():  tweak the internal key with H_TapTweak(pubkey) (this is used for\n+ *                               key path spending when no scripts are present).\n+ *  - Otherwise:                 tweak the internal key H_TapTweak(pubkey || *merkle_root)\n+ *                               (this is used for key path spending, with specific\n+ *                               Merkle root of the script tree).\n+ */\n+class KeyPair\n+{\n+public:\n+    KeyPair(KeyPair&&) noexcept = default;\n+    KeyPair& operator=(KeyPair&&) noexcept = default;\n+\n+    friend KeyPair CKey::ComputeKeyPair(const uint256* merkle_root) const;\n+    [[nodiscard]] bool GetKey(CKey& key) const;\n+    [[nodiscard]] bool SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256& aux) const;\n+\n+    //! Simple read-only vector-like interface.\n+    unsigned int size() const { return m_keydata ? m_keydata->size() : 0; }\n+    const std::byte* data() const { return m_keydata ? reinterpret_cast<const std::byte*>(m_keydata->data()) : nullptr; }\n+    const std::byte* begin() const { return data(); }\n+    const std::byte* end() const { return data() + size(); }\n+private:\n+    KeyPair(const CKey& key, const uint256* merkle_root);\n+\n+    using KeyType = std::array<unsigned char, 96>;",
      "path": "src/key.h",
      "position": 77,
      "original_position": 65,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "in_reply_to_id": 1597605647,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't really see a benefit. We shouldn't be exposing this value to anything outside the class, so defining a constexpr here seems unnecessarily verbose. ",
      "created_at": "2024-05-13T08:59:33Z",
      "updated_at": "2024-05-13T08:59:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1598119960",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1598119960"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 297,
      "original_line": 297,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1672656999",
      "pull_request_review_id": 2169749598,
      "id": 1672656999,
      "node_id": "PRRC_kwDOABII585jsrhn",
      "diff_hunk": "@@ -236,6 +252,41 @@ struct CExtKey {\n     void SetSeed(Span<const std::byte> seed);\n };\n \n+/** KeyPair",
      "path": "src/key.h",
      "position": 36,
      "original_position": 34,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "in_reply_to_id": null,
      "user": {
        "login": "itornaza",
        "id": 11520757,
        "node_id": "MDQ6VXNlcjExNTIwNzU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/11520757?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itornaza",
        "html_url": "https://github.com/itornaza",
        "followers_url": "https://api.github.com/users/itornaza/followers",
        "following_url": "https://api.github.com/users/itornaza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/itornaza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/itornaza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/itornaza/subscriptions",
        "organizations_url": "https://api.github.com/users/itornaza/orgs",
        "repos_url": "https://api.github.com/users/itornaza/repos",
        "events_url": "https://api.github.com/users/itornaza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/itornaza/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The same header is already and very thoughtfully provided for the following function a few lines above\r\n\r\n`KeyPair ComputeKeyPair(const uint256* merkle_root) const;` \r\n\r\n Maybe here a shorter header would be more appropriate to avoid repeating ourselves and make maintenance easier to handle (at the comment level), like so\r\n\r\n```\r\n/** KeyPair\r\n *\r\n *  Wrapper class for the `secp256k1_keypair` type.\r\n */ \r\n```\r\n",
      "created_at": "2024-07-10T16:53:01Z",
      "updated_at": "2024-07-10T17:04:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1672656999",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1672656999"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 256,
      "original_line": 256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1672775882",
      "pull_request_review_id": 2169947102,
      "id": 1672775882,
      "node_id": "PRRC_kwDOABII585jtIjK",
      "diff_hunk": "@@ -277,27 +277,7 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n \n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n-    assert(sig.size() == 64);",
      "path": "src/key.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "54b3c73ec50d4c3902049a66bca56438bb4078ba",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Moving and modifying the code in the same commit (while many of the changes serve different purposes, mixing low and high-risk changes) makes the review a lot harder since the diff isn't really useful – having separate red and green parts, not really a diff.\r\n\r\nAdditionally, the commit doesn't explain each change separately. For example:\r\n* The exact reason for memory management changes (via `make_secure_unique`) is not explained, nor are the security implications or potential performance impacts discussed.\r\n* It's unclear why `GetKey` is only used in tests. Why not delete it and introduce it in another PR where it's actually needed by production code?\r\n* The fate of `memory_cleanse(&keypair, sizeof(keypair))` is not explained, nor are the implications of its removal or replacement addressed.\r\n\r\nIt would help a lot if a commit did a single thing, such as a rename or cast change, changing a constant, moving implementation over to a new method, introducing a new class, or splitting a method into two methods, etc - where the commit message explains why the change was necessarry.\r\nThis would separate trivial changes from high-risk ones that need extra attention, so we don't have unrelated changes competing for our attention.\r\n\r\nPlease see https://github.com/bitcoin/bitcoin/pull/28280/commits for an example of focused, single-purpose commits that separate low and high-risk changes (e.g., preparatory refactorings from the focus of the PR), making the review a lot easier.\r\n",
      "created_at": "2024-07-10T18:36:33Z",
      "updated_at": "2024-07-10T18:40:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1672775882",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1672775882"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 274,
      "original_line": 274,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679854604",
      "pull_request_review_id": 2180983178,
      "id": 1679854604,
      "node_id": "PRRC_kwDOABII585kIIwM",
      "diff_hunk": "@@ -277,27 +277,7 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n \n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n-    assert(sig.size() == 64);",
      "path": "src/key.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "54b3c73ec50d4c3902049a66bca56438bb4078ba",
      "in_reply_to_id": 1672775882,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hey @paplorinc , thanks for taking a look! I agree, the first commit was quite dense. I've broken the first commit into smaller commits to aid with review and tried to include more information in the commit messages as to the motivation for the changes. Per your feedback, I've also removed the `GetKey` method as its not necessary.",
      "created_at": "2024-07-16T18:21:39Z",
      "updated_at": "2024-07-16T18:21:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1679854604",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679854604"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 274,
      "original_line": 274,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679873577",
      "pull_request_review_id": 2181004865,
      "id": 1679873577,
      "node_id": "PRRC_kwDOABII585kINYp",
      "diff_hunk": "@@ -236,6 +252,41 @@ struct CExtKey {\n     void SetSeed(Span<const std::byte> seed);\n };\n \n+/** KeyPair",
      "path": "src/key.h",
      "position": 36,
      "original_position": 34,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "bdc2a656c2d2a61d226fde1d1fd4e79664106e18",
      "in_reply_to_id": 1672656999,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hey @itornaza , thanks for the review! I've incorporated your feedback and moved the comment regarding the merkle root to the `ComputeKeyPair` function and made this comment more specific to the class itself.",
      "created_at": "2024-07-16T18:31:13Z",
      "updated_at": "2024-07-16T18:31:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1679873577",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1679873577"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 256,
      "original_line": 256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681077911",
      "pull_request_review_id": 2182966578,
      "id": 1681077911,
      "node_id": "PRRC_kwDOABII585kMzaX",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n         unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n+        ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n     }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    if (!ret) return false;\n+    ret &= secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: it might be simplified to `ret =` - or even `bool ret =` if we narrow the scope of the previous one.",
      "created_at": "2024-07-17T13:40:46Z",
      "updated_at": "2024-07-17T15:04:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1681077911",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681077911"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 287,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681187567",
      "pull_request_review_id": 2182966578,
      "id": 1681187567,
      "node_id": "PRRC_kwDOABII585kNOLv",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: my understanding is that you've chosen this style to mimic the calls in `secp256k1_keypair_xonly_pub` and friends - but maybe it would make sense to migrate to `C++` style here, I couldn't find any other `bool` in `cpp` files where we're assigning ints, like we do in the `C` files, i.e. `bool ret = true` - or rather use it for the first assignment instead.",
      "created_at": "2024-07-17T14:43:46Z",
      "updated_at": "2024-07-17T15:05:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1681187567",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681187567"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681189065",
      "pull_request_review_id": 2182966578,
      "id": 1681189065,
      "node_id": "PRRC_kwDOABII585kNOjJ",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n         unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n+        ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n     }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    if (!ret) return false;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> we do not change behavior by exiting early before attempting to sign if there is a failure with the merkle_root logic.\r\n\r\nPreviously, when an error occurred, subsequent calculations weren't performed. \r\nSince `&=` doesn't short-circuit (and even if it did, `pubkey_bytes` would be allocated and `ComputeTapTweakHash` would run even if `secp256k1_keypair_xonly_pub` failed), the methods could be called even though a previous dependency failed.\r\nAre you sure this is just a refactoring and not a behavior change?",
      "created_at": "2024-07-17T14:44:30Z",
      "updated_at": "2024-07-17T15:04:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1681189065",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681189065"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681189987",
      "pull_request_review_id": 2182966578,
      "id": 1681189987,
      "node_id": "PRRC_kwDOABII585kNOxj",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is there any advantage in reusing `ret`, or could we do `bool ret = secp256k1_keypair_xonly_pub` and return inside the if instead?",
      "created_at": "2024-07-17T14:45:05Z",
      "updated_at": "2024-07-17T15:04:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1681189987",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681189987"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 280,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681216935",
      "pull_request_review_id": 2182966578,
      "id": 1681216935,
      "node_id": "PRRC_kwDOABII585kNVWn",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n         unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n+        ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "off topic: we might not need a [copy of pubkey_bytes](https://github.com/bitcoin/bitcoin/blob/b946f8a4c51be42e52d63a6d578158c0b2a6b7ed/src/pubkey.cpp#L199) in this case, but I guess that's unrelated to the PR",
      "created_at": "2024-07-17T15:01:06Z",
      "updated_at": "2024-07-20T17:28:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1681216935",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681216935"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 283,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681219368",
      "pull_request_review_id": 2182966578,
      "id": 1681219368,
      "node_id": "PRRC_kwDOABII585kNV8o",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n         unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n+        ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n     }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    if (!ret) return false;\n+    ret &= secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n     if (ret) {\n         // Additional verification step to prevent using a potentially corrupted signature\n         secp256k1_xonly_pubkey pubkey_verify;\n-        ret = secp256k1_keypair_xonly_pub(secp256k1_context_static, &pubkey_verify, nullptr, &keypair);\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_static, &pubkey_verify, nullptr, &keypair);\n         ret &= secp256k1_schnorrsig_verify(secp256k1_context_static, sig.data(), hash.begin(), 32, &pubkey_verify);\n     }\n     if (!ret) memory_cleanse(sig.data(), sig.size());",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "off topic: I'm out of my depth here, but curious, what's the reason for not needing a cleanup of keypair in the merkle_root branch as well? Was that a bug? Do we have tests for that?",
      "created_at": "2024-07-17T15:02:37Z",
      "updated_at": "2024-07-17T20:16:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1681219368",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681219368"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 294,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681222762",
      "pull_request_review_id": 2182966578,
      "id": 1681222762,
      "node_id": "PRRC_kwDOABII585kNWxq",
      "diff_hunk": "",
      "path": "src/key.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: typos in commit message: `Accumlute` and `returning early on the function`",
      "created_at": "2024-07-17T15:04:25Z",
      "updated_at": "2024-07-17T15:04:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1681222762",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681222762"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681620128",
      "pull_request_review_id": 2183858096,
      "id": 1681620128,
      "node_id": "PRRC_kwDOABII585kO3yg",
      "diff_hunk": "",
      "path": "src/key.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "original_commit_id": "3ca329795ce76be2201a943398cc200dec35b15a",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: typo in commit message: `his allows keeps the secret`,`allows for passing`, `the logic for for applying`, `and the finally move`",
      "created_at": "2024-07-17T19:30:38Z",
      "updated_at": "2024-07-17T20:15:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1681620128",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681620128"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681626093",
      "pull_request_review_id": 2183858096,
      "id": 1681626093,
      "node_id": "PRRC_kwDOABII585kO5Pt",
      "diff_hunk": "@@ -235,6 +242,64 @@ struct CExtKey {\n     void SetSeed(Span<const std::byte> seed);\n };\n \n+/** KeyPair\n+ *\n+ *  Wraps a `secp256k1_keypair` type, an opaque data structure for holding a secret and public key.\n+ *  This is intended for BIP340 keys and allows us to easily determine if the secret key needs to\n+ *  be negated by checking the parity of the public key. This class primarily intended for passing\n+ *  secret keys to libsecp256k1 functions expecting a `secp256k1_keypair`. For all other cases,\n+ *  CKey should be preferred.\n+ */\n+class KeyPair\n+{\n+public:\n+    KeyPair() noexcept = default;\n+    KeyPair(KeyPair&&) noexcept = default;\n+    KeyPair& operator=(KeyPair&&) noexcept = default;\n+    KeyPair& operator=(const KeyPair& other)\n+    {\n+        if (this != &other) {\n+            if (other.m_keypair) {\n+                MakeKeyPairData();\n+                *m_keypair = *other.m_keypair;\n+            } else {\n+                ClearKeyPairData();\n+            }\n+        }\n+        return *this;\n+    }\n+\n+    KeyPair(const KeyPair& other) { *this = other; }\n+\n+    friend KeyPair CKey::ComputeKeyPair() const;\n+    [[nodiscard]] bool SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256& aux) const;\n+\n+    /**\n+     * This method will be made read-only in a later commit.\n+     * It is only read/write here to simplify the diff in the next two commits\n+     */\n+    unsigned char* data() { return m_keypair ? m_keypair->data() : nullptr; }",
      "path": "src/key.h",
      "position": null,
      "original_position": 61,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "3ca329795ce76be2201a943398cc200dec35b15a",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: would it make sense to use `IsValid()` here?",
      "created_at": "2024-07-17T19:36:43Z",
      "updated_at": "2024-07-17T20:15:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1681626093",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681626093"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 281,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681636478",
      "pull_request_review_id": 2183858096,
      "id": 1681636478,
      "node_id": "PRRC_kwDOABII585kO7x-",
      "diff_hunk": "@@ -273,22 +273,22 @@ bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint2\n {\n     assert(sig.size() == 64);\n     bool ret = 1;\n-    secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n+    KeyPair keypair = ComputeKeyPair();\n+    if (!keypair.IsValid()) return false;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "21d031e7867ef97c07cee691c115d59b3aebfd19",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "maybe it would simplify the diff if we extracted the `keypair.data()` here\r\n```C++\r\n    KeyPair keypair = ComputeKeyPair();\r\n    if (!keypair.IsValid()) return false;\r\n    const secp256k1_keypair *keypairData = reinterpret_cast<const secp256k1_keypair *>(keypair.data());\r\n```",
      "created_at": "2024-07-17T19:45:17Z",
      "updated_at": "2024-07-17T20:16:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1681636478",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681636478"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": 276,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681648449",
      "pull_request_review_id": 2183858096,
      "id": 1681648449,
      "node_id": "PRRC_kwDOABII585kO-tB",
      "diff_hunk": "@@ -273,22 +273,22 @@ bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint2\n {\n     assert(sig.size() == 64);\n     bool ret = 1;\n-    secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n+    KeyPair keypair = ComputeKeyPair();\n+    if (!keypair.IsValid()) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, reinterpret_cast<const secp256k1_keypair*>(keypair.data()));\n         unsigned char pubkey_bytes[32];\n         ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, reinterpret_cast<secp256k1_keypair*>(keypair.data()), tweak.data());",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "21d031e7867ef97c07cee691c115d59b3aebfd19",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Might make the code more uniform (and maybe the diff simpler, if we'd extract it as suggested above) if instead of not making this a const cast, like the rest, we rather added the const to the method's signature:\r\n```patch\r\ndiff --git a/src/secp256k1/include/secp256k1_extrakeys.h b/src/secp256k1/include/secp256k1_extrakeys.h\r\n--- a/src/secp256k1/include/secp256k1_extrakeys.h\t(revision 21d031e7867ef97c07cee691c115d59b3aebfd19)\r\n+++ b/src/secp256k1/include/secp256k1_extrakeys.h\t(date 1721245901582)\r\n@@ -236,7 +236,7 @@\r\n  */\r\n SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_keypair_xonly_tweak_add(\r\n     const secp256k1_context *ctx,\r\n-    secp256k1_keypair *keypair,\r\n+    const secp256k1_keypair *keypair,\r\n     const unsigned char *tweak32\r\n ) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\r\n \r\nIndex: src/secp256k1/src/modules/extrakeys/main_impl.h\r\nIDEA additional info:\r\nSubsystem: com.intellij.openapi.diff.impl.patch.CharsetEP\r\n<+>UTF-8\r\n===================================================================\r\ndiff --git a/src/secp256k1/src/modules/extrakeys/main_impl.h b/src/secp256k1/src/modules/extrakeys/main_impl.h\r\n--- a/src/secp256k1/src/modules/extrakeys/main_impl.h\t(revision 21d031e7867ef97c07cee691c115d59b3aebfd19)\r\n+++ b/src/secp256k1/src/modules/extrakeys/main_impl.h\t(date 1721245849520)\r\n@@ -252,7 +252,7 @@\r\n     return 1;\r\n }\r\n \r\n-int secp256k1_keypair_xonly_tweak_add(const secp256k1_context* ctx, secp256k1_keypair *keypair, const unsigned char *tweak32) {\r\n+int secp256k1_keypair_xonly_tweak_add(const secp256k1_context* ctx, const secp256k1_keypair *keypair, const unsigned char *tweak32) {\r\n     secp256k1_ge pk;\r\n     secp256k1_scalar sk;\r\n     int y_parity;\r\n```",
      "created_at": "2024-07-17T19:54:12Z",
      "updated_at": "2024-07-17T20:15:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1681648449",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681648449"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681661927",
      "pull_request_review_id": 2183858096,
      "id": 1681661927,
      "node_id": "PRRC_kwDOABII585kPB_n",
      "diff_hunk": "@@ -207,8 +207,19 @@ class CKey\n     /** Compute a KeyPair\n      *\n      *  Wraps a `secp256k1_keypair` type.\n+     *\n+     *  `merkle_root` is used to optionally perform tweaking of\n+     *  the internal key, as specified in BIP341:\n+     *\n+     *  - If merkle_root == nullptr: no tweaking is done, use the internal key directly (this is\n+     *                               used for signatures in BIP342 script).\n+     *  - If merkle_root->IsNull():  tweak the internal key with H_TapTweak(pubkey) (this is used for\n+     *                               key path spending when no scripts are present).\n+     *  - Otherwise:                 tweak the internal key H_TapTweak(pubkey || *merkle_root)",
      "path": "src/key.h",
      "position": null,
      "original_position": 12,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "82af81b51a84097fd10953d0418aac3c9b78b1c8",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n     *  - Otherwise:                 tweak the internal key with H_TapTweak(pubkey || *merkle_root)\r\n```",
      "created_at": "2024-07-17T20:05:09Z",
      "updated_at": "2024-07-17T20:15:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1681661927",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681661927"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 218,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681662778",
      "pull_request_review_id": 2183858096,
      "id": 1681662778,
      "node_id": "PRRC_kwDOABII585kPCM6",
      "diff_hunk": "@@ -207,8 +207,19 @@ class CKey\n     /** Compute a KeyPair\n      *\n      *  Wraps a `secp256k1_keypair` type.\n+     *\n+     *  `merkle_root` is used to optionally perform tweaking of\n+     *  the internal key, as specified in BIP341:\n+     *\n+     *  - If merkle_root == nullptr: no tweaking is done, use the internal key directly (this is\n+     *                               used for signatures in BIP342 script).\n+     *  - If merkle_root->IsNull():  tweak the internal key with H_TapTweak(pubkey) (this is used for\n+     *                               key path spending when no scripts are present).\n+     *  - Otherwise:                 tweak the internal key H_TapTweak(pubkey || *merkle_root)\n+     *                               (this is used for key path spending, with specific",
      "path": "src/key.h",
      "position": null,
      "original_position": 13,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "82af81b51a84097fd10953d0418aac3c9b78b1c8",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n     *                               (this is used for key path spending with a specific\r\n```",
      "created_at": "2024-07-17T20:05:42Z",
      "updated_at": "2024-07-17T20:15:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1681662778",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681662778"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 219,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681668029",
      "pull_request_review_id": 2183858096,
      "id": 1681668029,
      "node_id": "PRRC_kwDOABII585kPDe9",
      "diff_hunk": "@@ -271,20 +285,27 @@ class KeyPair\n \n     KeyPair(const KeyPair& other) { *this = other; }\n \n-    friend KeyPair CKey::ComputeKeyPair() const;\n+    friend KeyPair CKey::ComputeKeyPair(const uint256* merkle_root) const;\n     [[nodiscard]] bool SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256& aux) const;\n \n     /**\n-     * This method will be made read-only in a later commit.\n-     * It is only read/write here to simplify the diff in the next two commits\n+     * This is provided as a read-only method for passing a KeyPair object to secp256k1 functions\n+     * expecting a `secp256k1_keypair`. This avoids need to create a `secp256k1_keypair` object and",
      "path": "src/key.h",
      "position": null,
      "original_position": 43,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "82af81b51a84097fd10953d0418aac3c9b78b1c8",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n     * expecting a `secp256k1_keypair`. This avoids the need to create a `secp256k1_keypair` object and\r\n ```",
      "created_at": "2024-07-17T20:09:59Z",
      "updated_at": "2024-07-17T20:15:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1681668029",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681668029"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 293,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681669713",
      "pull_request_review_id": 2183858096,
      "id": 1681669713,
      "node_id": "PRRC_kwDOABII585kPD5R",
      "diff_hunk": "",
      "path": "src/key.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "original_commit_id": "a76cc3650d56f81d2c6fee2259e9f67c88c25557",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: typo in commit message: `Instead of calling ... instead invalidate`",
      "created_at": "2024-07-17T20:11:30Z",
      "updated_at": "2024-07-17T20:15:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1681669713",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681669713"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681672646",
      "pull_request_review_id": 2183858096,
      "id": 1681672646,
      "node_id": "PRRC_kwDOABII585kPEnG",
      "diff_hunk": "@@ -271,19 +271,11 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n \n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n-    assert(sig.size() == 64);\n-    bool ret = 1;\n     KeyPair keypair = ComputeKeyPair(merkle_root);\n     if (!keypair.IsValid()) return false;\n-    ret &= secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), reinterpret_cast<const secp256k1_keypair*>(keypair.data()), aux.data());\n-    if (ret) {\n-        // Additional verification step to prevent using a potentially corrupted signature\n-        secp256k1_xonly_pubkey pubkey_verify;\n-        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_static, &pubkey_verify, nullptr, reinterpret_cast<const secp256k1_keypair*>(keypair.data()));\n-        ret &= secp256k1_schnorrsig_verify(secp256k1_context_static, sig.data(), hash.begin(), 32, &pubkey_verify);\n-    }\n-    if (!ret) memory_cleanse(sig.data(), sig.size());\n-    memory_cleanse(&keypair, sizeof(keypair));\n+    bool ret = keypair.SignSchnorr(hash, sig, aux);\n+    /* Clear the keypair */\n+    keypair = KeyPair();",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "a76cc3650d56f81d2c6fee2259e9f67c88c25557",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Might be a naive question, but isn't this a behavior change? Does it have any security implications (e.g. could it leave keys in the memory or something)?",
      "created_at": "2024-07-17T20:13:50Z",
      "updated_at": "2024-07-19T06:35:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1681672646",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1681672646"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682584021",
      "pull_request_review_id": 2185343165,
      "id": 1682584021,
      "node_id": "PRRC_kwDOABII585kSjHV",
      "diff_hunk": "@@ -271,19 +271,11 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n \n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n-    assert(sig.size() == 64);\n-    bool ret = 1;\n     KeyPair keypair = ComputeKeyPair(merkle_root);\n     if (!keypair.IsValid()) return false;\n-    ret &= secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), reinterpret_cast<const secp256k1_keypair*>(keypair.data()), aux.data());\n-    if (ret) {\n-        // Additional verification step to prevent using a potentially corrupted signature\n-        secp256k1_xonly_pubkey pubkey_verify;\n-        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_static, &pubkey_verify, nullptr, reinterpret_cast<const secp256k1_keypair*>(keypair.data()));\n-        ret &= secp256k1_schnorrsig_verify(secp256k1_context_static, sig.data(), hash.begin(), 32, &pubkey_verify);\n-    }\n-    if (!ret) memory_cleanse(sig.data(), sig.size());\n-    memory_cleanse(&keypair, sizeof(keypair));\n+    bool ret = keypair.SignSchnorr(hash, sig, aux);\n+    /* Clear the keypair */\n+    keypair = KeyPair();",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "a76cc3650d56f81d2c6fee2259e9f67c88c25557",
      "in_reply_to_id": 1681672646,
      "user": {
        "login": "itornaza",
        "id": 11520757,
        "node_id": "MDQ6VXNlcjExNTIwNzU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/11520757?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itornaza",
        "html_url": "https://github.com/itornaza",
        "followers_url": "https://api.github.com/users/itornaza/followers",
        "following_url": "https://api.github.com/users/itornaza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/itornaza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/itornaza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/itornaza/subscriptions",
        "organizations_url": "https://api.github.com/users/itornaza/orgs",
        "repos_url": "https://api.github.com/users/itornaza/repos",
        "events_url": "https://api.github.com/users/itornaza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/itornaza/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I am also wandering how the assignment involving the default constructor will clear the existing keypair data from memory, but I might be naive as well! Since keypair is a local variable in this function shouldn't the KeyPair destructor do the secure erase job anyway at the end of the scope through RAII since m_keypair is a secure_unique_ptr?",
      "created_at": "2024-07-18T10:10:54Z",
      "updated_at": "2024-07-18T16:31:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1682584021",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682584021"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682594351",
      "pull_request_review_id": 2185359882,
      "id": 1682594351,
      "node_id": "PRRC_kwDOABII585kSlov",
      "diff_hunk": "@@ -271,26 +271,11 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n \n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n-    assert(sig.size() == 64);\n-    secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n-    if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n-    }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n-    if (ret) {\n-        // Additional verification step to prevent using a potentially corrupted signature\n-        secp256k1_xonly_pubkey pubkey_verify;\n-        ret = secp256k1_keypair_xonly_pub(secp256k1_context_static, &pubkey_verify, nullptr, &keypair);\n-        ret &= secp256k1_schnorrsig_verify(secp256k1_context_static, sig.data(), hash.begin(), 32, &pubkey_verify);\n-    }\n-    if (!ret) memory_cleanse(sig.data(), sig.size());\n-    memory_cleanse(&keypair, sizeof(keypair));\n+    KeyPair keypair = ComputeKeyPair(merkle_root);\n+    if (!keypair.IsValid()) return false;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "in_reply_to_id": null,
      "user": {
        "login": "itornaza",
        "id": 11520757,
        "node_id": "MDQ6VXNlcjExNTIwNzU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/11520757?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itornaza",
        "html_url": "https://github.com/itornaza",
        "followers_url": "https://api.github.com/users/itornaza/followers",
        "following_url": "https://api.github.com/users/itornaza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/itornaza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/itornaza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/itornaza/subscriptions",
        "organizations_url": "https://api.github.com/users/itornaza/orgs",
        "repos_url": "https://api.github.com/users/itornaza/repos",
        "events_url": "https://api.github.com/users/itornaza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/itornaza/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It would be trivial to also erase the `keypair` even if it turns out not to be valid, or would that be paranoid?",
      "created_at": "2024-07-18T10:19:23Z",
      "updated_at": "2024-07-18T10:19:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1682594351",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1682594351"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685446875",
      "pull_request_review_id": 2189993144,
      "id": 1685446875,
      "node_id": "PRRC_kwDOABII585kdeDb",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n         unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n+        ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n     }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    if (!ret) return false;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": 1681189065,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm fairly confident this is not a behavior change, but could have missed something. \r\n\r\nIf you look at `secp256k1_keypair_xonly_pub`, this will only fail if there was an issue creating the `keypair` object, but this is checked above so we would have already short-circuited. The same is true for `secp256k1_keypair_xonly_pubkey_serialize` (only fails if we can't load the `keypair`, which only fails if the `keypair` is malformed).\r\n\r\n`secp256k1_keypair_xonly_tweak_add` will fail if `tweak32` is greater than the curve order or if the tweak is the negation of the secret key.\r\n\r\nPutting it all together, if we can't create a valid `keypair`, the function will exit (same as before). If we do create a valid `keypair`, then the only error path we can hit is `secp256k1_keypair_xonly_tweak_add` and if we do hit an error here, we exit before attempting to sign (same as before).",
      "created_at": "2024-07-20T14:14:11Z",
      "updated_at": "2024-07-20T14:14:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685446875",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685446875"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685450966",
      "pull_request_review_id": 2189997653,
      "id": 1685450966,
      "node_id": "PRRC_kwDOABII585kdfDW",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": 1681189987,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Personally, I don't see any reason to not reuse `ret` and I think it makes the logic easier to follow vs re-initializing the variable. Regarding returning inside the `if (ret)`, as mentioned in https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685446875, `keypair_xonly_pub` will only fail if the `keypair` is malformed, so if we've successfully created the keypair this call should never fail. So if `schnorrsig_verify` fails, we check it on the next line and clear the signature data before returning. I find this easier to follow than having a return inside the `if (ret)` block (and we don't gain anything by having an early return inside the `if (ret)` block.",
      "created_at": "2024-07-20T14:20:03Z",
      "updated_at": "2024-07-20T14:20:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685450966",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685450966"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 280,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685454366",
      "pull_request_review_id": 2190000513,
      "id": 1685454366,
      "node_id": "PRRC_kwDOABII585kdf4e",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n         unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n+        ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n     }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    if (!ret) return false;\n+    ret &= secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n     if (ret) {\n         // Additional verification step to prevent using a potentially corrupted signature\n         secp256k1_xonly_pubkey pubkey_verify;\n-        ret = secp256k1_keypair_xonly_pub(secp256k1_context_static, &pubkey_verify, nullptr, &keypair);\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_static, &pubkey_verify, nullptr, &keypair);\n         ret &= secp256k1_schnorrsig_verify(secp256k1_context_static, sig.data(), hash.begin(), 32, &pubkey_verify);\n     }\n     if (!ret) memory_cleanse(sig.data(), sig.size());",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": 1681219368,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good catch, I think you're right that if `xonly_tweak_add` were to fail (e.g. tweak32 is the negation of the secret key), then we would return without explicitly clearing the keypair variable. That being said, the variable should already be cleared when it goes out of scope, so the explicit `memory_cleanse` is more of a belt and suspenders approach, from what I understand.",
      "created_at": "2024-07-20T14:29:15Z",
      "updated_at": "2024-07-20T14:29:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685454366",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685454366"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 294,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685459510",
      "pull_request_review_id": 2190003973,
      "id": 1685459510,
      "node_id": "PRRC_kwDOABII585kdhI2",
      "diff_hunk": "@@ -273,22 +273,22 @@ bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint2\n {\n     assert(sig.size() == 64);\n     bool ret = 1;\n-    secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n+    KeyPair keypair = ComputeKeyPair();\n+    if (!keypair.IsValid()) return false;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "21d031e7867ef97c07cee691c115d59b3aebfd19",
      "in_reply_to_id": 1681636478,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hm, I don't think it makes much of a difference for the diff and makes this particular staging commit more confusing by creating the `KeyPair` object just to pull out the data back out into a `secp256k1_keypair` object. The main advantage of the `KeyPair` wrapper class is that we are keeping the keypair in secure memory, which we would be undoing here by copying it out into a `keypair` object.",
      "created_at": "2024-07-20T14:48:51Z",
      "updated_at": "2024-07-20T14:48:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685459510",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685459510"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": 276,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685460212",
      "pull_request_review_id": 2190004255,
      "id": 1685460212,
      "node_id": "PRRC_kwDOABII585kdhT0",
      "diff_hunk": "@@ -273,22 +273,22 @@ bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint2\n {\n     assert(sig.size() == 64);\n     bool ret = 1;\n-    secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n+    KeyPair keypair = ComputeKeyPair();\n+    if (!keypair.IsValid()) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, reinterpret_cast<const secp256k1_keypair*>(keypair.data()));\n         unsigned char pubkey_bytes[32];\n         ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, reinterpret_cast<secp256k1_keypair*>(keypair.data()), tweak.data());",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "21d031e7867ef97c07cee691c115d59b3aebfd19",
      "in_reply_to_id": 1681648449,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`secp256k1_keypair_xonly_tweak_add` modifies the `keypair` object with `tweak32`, so it can't be const. More generally, libsecp256k1 is a dependency of Bitcoin Core, so we shouldn't ever be modifying `secp256k1_` functions in our code base (despite us pulling it in as a subtree).",
      "created_at": "2024-07-20T14:51:36Z",
      "updated_at": "2024-07-20T14:51:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685460212",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685460212"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685462749",
      "pull_request_review_id": 2190005505,
      "id": 1685462749,
      "node_id": "PRRC_kwDOABII585kdh7d",
      "diff_hunk": "@@ -271,26 +271,11 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n \n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n-    assert(sig.size() == 64);\n-    secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n-    if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n-    }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n-    if (ret) {\n-        // Additional verification step to prevent using a potentially corrupted signature\n-        secp256k1_xonly_pubkey pubkey_verify;\n-        ret = secp256k1_keypair_xonly_pub(secp256k1_context_static, &pubkey_verify, nullptr, &keypair);\n-        ret &= secp256k1_schnorrsig_verify(secp256k1_context_static, sig.data(), hash.begin(), 32, &pubkey_verify);\n-    }\n-    if (!ret) memory_cleanse(sig.data(), sig.size());\n-    memory_cleanse(&keypair, sizeof(keypair));\n+    KeyPair keypair = ComputeKeyPair(merkle_root);\n+    if (!keypair.IsValid()) return false;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "in_reply_to_id": 1682594351,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`IsValid()` returns false when `m_keypair` data is a nullptr, which effectively means the key data was never created or has been cleared (see `src/support/allocators/secure.h`)",
      "created_at": "2024-07-20T15:01:10Z",
      "updated_at": "2024-07-20T15:01:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685462749",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685462749"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685467250",
      "pull_request_review_id": 2190007895,
      "id": 1685467250,
      "node_id": "PRRC_kwDOABII585kdjBy",
      "diff_hunk": "@@ -271,19 +271,11 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n \n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n-    assert(sig.size() == 64);\n-    bool ret = 1;\n     KeyPair keypair = ComputeKeyPair(merkle_root);\n     if (!keypair.IsValid()) return false;\n-    ret &= secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), reinterpret_cast<const secp256k1_keypair*>(keypair.data()), aux.data());\n-    if (ret) {\n-        // Additional verification step to prevent using a potentially corrupted signature\n-        secp256k1_xonly_pubkey pubkey_verify;\n-        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_static, &pubkey_verify, nullptr, reinterpret_cast<const secp256k1_keypair*>(keypair.data()));\n-        ret &= secp256k1_schnorrsig_verify(secp256k1_context_static, sig.data(), hash.begin(), 32, &pubkey_verify);\n-    }\n-    if (!ret) memory_cleanse(sig.data(), sig.size());\n-    memory_cleanse(&keypair, sizeof(keypair));\n+    bool ret = keypair.SignSchnorr(hash, sig, aux);\n+    /* Clear the keypair */\n+    keypair = KeyPair();",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "a76cc3650d56f81d2c6fee2259e9f67c88c25557",
      "in_reply_to_id": 1681672646,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Since keypair is a local variable in this function shouldn't the KeyPair destructor do the secure erase job anyway at the end of the scope through RAII since m_keypair is a secure_unique_ptr\r\n\r\nCorrect, which should happen regardless of whether or not we explicitly clear the key data with `keypair = KeyPair();`. Having `keypair = KeyPair()` a belt and suspenders by explicitly clearing the variable. This is because if we create a `KeyPair` object with the default constructor, there is no call to `MakeKeyPairData`, hence `m_keypair` is empty. When we assign this default constructed `KeyPair` to `keypair`, it calls `ClearKeyPairData` on `keypair`, which resets it. The assignment operator was copied from `CKey` and you can see an example of the same pattern used here: https://github.com/bitcoin/bitcoin/blob/5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec/src/bip324.cpp#L66-L70",
      "created_at": "2024-07-20T15:18:00Z",
      "updated_at": "2024-07-20T15:18:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685467250",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685467250"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685473421",
      "pull_request_review_id": 2190011265,
      "id": 1685473421,
      "node_id": "PRRC_kwDOABII585kdkiN",
      "diff_hunk": "",
      "path": "src/key.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "original_commit_id": "a76cc3650d56f81d2c6fee2259e9f67c88c25557",
      "in_reply_to_id": 1681669713,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed.",
      "created_at": "2024-07-20T15:39:38Z",
      "updated_at": "2024-07-20T15:39:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685473421",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685473421"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685473484",
      "pull_request_review_id": 2190011309,
      "id": 1685473484,
      "node_id": "PRRC_kwDOABII585kdkjM",
      "diff_hunk": "@@ -271,20 +285,27 @@ class KeyPair\n \n     KeyPair(const KeyPair& other) { *this = other; }\n \n-    friend KeyPair CKey::ComputeKeyPair() const;\n+    friend KeyPair CKey::ComputeKeyPair(const uint256* merkle_root) const;\n     [[nodiscard]] bool SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256& aux) const;\n \n     /**\n-     * This method will be made read-only in a later commit.\n-     * It is only read/write here to simplify the diff in the next two commits\n+     * This is provided as a read-only method for passing a KeyPair object to secp256k1 functions\n+     * expecting a `secp256k1_keypair`. This avoids need to create a `secp256k1_keypair` object and",
      "path": "src/key.h",
      "position": null,
      "original_position": 43,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "82af81b51a84097fd10953d0418aac3c9b78b1c8",
      "in_reply_to_id": 1681668029,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed.",
      "created_at": "2024-07-20T15:39:47Z",
      "updated_at": "2024-07-20T15:39:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685473484",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685473484"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 293,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685473548",
      "pull_request_review_id": 2190011332,
      "id": 1685473548,
      "node_id": "PRRC_kwDOABII585kdkkM",
      "diff_hunk": "@@ -207,8 +207,19 @@ class CKey\n     /** Compute a KeyPair\n      *\n      *  Wraps a `secp256k1_keypair` type.\n+     *\n+     *  `merkle_root` is used to optionally perform tweaking of\n+     *  the internal key, as specified in BIP341:\n+     *\n+     *  - If merkle_root == nullptr: no tweaking is done, use the internal key directly (this is\n+     *                               used for signatures in BIP342 script).\n+     *  - If merkle_root->IsNull():  tweak the internal key with H_TapTweak(pubkey) (this is used for\n+     *                               key path spending when no scripts are present).\n+     *  - Otherwise:                 tweak the internal key H_TapTweak(pubkey || *merkle_root)\n+     *                               (this is used for key path spending, with specific",
      "path": "src/key.h",
      "position": null,
      "original_position": 13,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "82af81b51a84097fd10953d0418aac3c9b78b1c8",
      "in_reply_to_id": 1681662778,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed.",
      "created_at": "2024-07-20T15:40:00Z",
      "updated_at": "2024-07-20T15:40:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685473548",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685473548"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 219,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685473582",
      "pull_request_review_id": 2190011351,
      "id": 1685473582,
      "node_id": "PRRC_kwDOABII585kdkku",
      "diff_hunk": "@@ -207,8 +207,19 @@ class CKey\n     /** Compute a KeyPair\n      *\n      *  Wraps a `secp256k1_keypair` type.\n+     *\n+     *  `merkle_root` is used to optionally perform tweaking of\n+     *  the internal key, as specified in BIP341:\n+     *\n+     *  - If merkle_root == nullptr: no tweaking is done, use the internal key directly (this is\n+     *                               used for signatures in BIP342 script).\n+     *  - If merkle_root->IsNull():  tweak the internal key with H_TapTweak(pubkey) (this is used for\n+     *                               key path spending when no scripts are present).\n+     *  - Otherwise:                 tweak the internal key H_TapTweak(pubkey || *merkle_root)",
      "path": "src/key.h",
      "position": null,
      "original_position": 12,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "82af81b51a84097fd10953d0418aac3c9b78b1c8",
      "in_reply_to_id": 1681661927,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed.",
      "created_at": "2024-07-20T15:40:07Z",
      "updated_at": "2024-07-20T15:40:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685473582",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685473582"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 218,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685473725",
      "pull_request_review_id": 2190011440,
      "id": 1685473725,
      "node_id": "PRRC_kwDOABII585kdkm9",
      "diff_hunk": "@@ -235,6 +242,64 @@ struct CExtKey {\n     void SetSeed(Span<const std::byte> seed);\n };\n \n+/** KeyPair\n+ *\n+ *  Wraps a `secp256k1_keypair` type, an opaque data structure for holding a secret and public key.\n+ *  This is intended for BIP340 keys and allows us to easily determine if the secret key needs to\n+ *  be negated by checking the parity of the public key. This class primarily intended for passing\n+ *  secret keys to libsecp256k1 functions expecting a `secp256k1_keypair`. For all other cases,\n+ *  CKey should be preferred.\n+ */\n+class KeyPair\n+{\n+public:\n+    KeyPair() noexcept = default;\n+    KeyPair(KeyPair&&) noexcept = default;\n+    KeyPair& operator=(KeyPair&&) noexcept = default;\n+    KeyPair& operator=(const KeyPair& other)\n+    {\n+        if (this != &other) {\n+            if (other.m_keypair) {\n+                MakeKeyPairData();\n+                *m_keypair = *other.m_keypair;\n+            } else {\n+                ClearKeyPairData();\n+            }\n+        }\n+        return *this;\n+    }\n+\n+    KeyPair(const KeyPair& other) { *this = other; }\n+\n+    friend KeyPair CKey::ComputeKeyPair() const;\n+    [[nodiscard]] bool SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256& aux) const;\n+\n+    /**\n+     * This method will be made read-only in a later commit.\n+     * It is only read/write here to simplify the diff in the next two commits\n+     */\n+    unsigned char* data() { return m_keypair ? m_keypair->data() : nullptr; }",
      "path": "src/key.h",
      "position": null,
      "original_position": 61,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "3ca329795ce76be2201a943398cc200dec35b15a",
      "in_reply_to_id": 1681626093,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Agree, I think `IsValid` makes this more readable, updated.",
      "created_at": "2024-07-20T15:40:33Z",
      "updated_at": "2024-07-20T15:40:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685473725",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685473725"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 281,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685473790",
      "pull_request_review_id": 2190011479,
      "id": 1685473790,
      "node_id": "PRRC_kwDOABII585kdkn-",
      "diff_hunk": "",
      "path": "src/key.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "original_commit_id": "3ca329795ce76be2201a943398cc200dec35b15a",
      "in_reply_to_id": 1681620128,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed.",
      "created_at": "2024-07-20T15:40:43Z",
      "updated_at": "2024-07-20T15:40:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685473790",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685473790"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685473927",
      "pull_request_review_id": 2190011508,
      "id": 1685473927,
      "node_id": "PRRC_kwDOABII585kdkqH",
      "diff_hunk": "",
      "path": "src/key.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "5e9f4f41de98c2cdcc74e31fe925b2f5cf9f6aec",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": 1681222762,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed.",
      "created_at": "2024-07-20T15:40:54Z",
      "updated_at": "2024-07-20T15:40:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685473927",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685473927"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685474212",
      "pull_request_review_id": 2190011669,
      "id": 1685474212,
      "node_id": "PRRC_kwDOABII585kdkuk",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": 1681187567,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Agree, more readable to have this as `bool ret = true;`, updated.",
      "created_at": "2024-07-20T15:42:17Z",
      "updated_at": "2024-07-20T15:42:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685474212",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685474212"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685475299",
      "pull_request_review_id": 2190012425,
      "id": 1685475299,
      "node_id": "PRRC_kwDOABII585kdk_j",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n         unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n+        ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n     }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    if (!ret) return false;\n+    ret &= secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": 1681077911,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Unless there is a functional disadvantage to having it this way, I prefer this for readability as it makes it more clear (to me, anyways) that we are accumulating the return values from the various secp256k1 function calls in the `ret` variable.",
      "created_at": "2024-07-20T15:46:55Z",
      "updated_at": "2024-07-20T15:46:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685475299",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685475299"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 287,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685505233",
      "pull_request_review_id": 2190025749,
      "id": 1685505233,
      "node_id": "PRRC_kwDOABII585kdsTR",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n         unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n+        ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n     }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    if (!ret) return false;\n+    ret &= secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": 1681077911,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "it's narrowing the scope, what would be the reason for reusing a variable and widening its scope?\r\nIf you feel strongly about it, I don't particularly mind either way.",
      "created_at": "2024-07-20T17:14:58Z",
      "updated_at": "2024-07-20T17:14:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685505233",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685505233"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 287,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685506662",
      "pull_request_review_id": 2190027482,
      "id": 1685506662,
      "node_id": "PRRC_kwDOABII585kdspm",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = true;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "36ecf72a04c9ecb82660fb14a734c155e89e5abd",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: we could move this down, after the first early return, since it's not needed before that",
      "created_at": "2024-07-20T17:25:28Z",
      "updated_at": "2024-07-20T17:27:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685506662",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685506662"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685507018",
      "pull_request_review_id": 2190027482,
      "id": 1685507018,
      "node_id": "PRRC_kwDOABII585kdsvK",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n         unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n+        ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n     }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    if (!ret) return false;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": 1681189065,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Your version always executes all steps (e.g. computes `XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);` even after `secp256k1_keypair_load` wasn't successful, right? Previously this method wasn't executed, so at best it's a performance difference, at worst we're hoping that each method handles this error properly (which wasn't necessary before, since the first method guarded them).",
      "created_at": "2024-07-20T17:27:56Z",
      "updated_at": "2024-07-20T17:27:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685507018",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685507018"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685507979",
      "pull_request_review_id": 2190029337,
      "id": 1685507979,
      "node_id": "PRRC_kwDOABII585kds-L",
      "diff_hunk": "@@ -273,22 +273,22 @@ bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint2\n {\n     assert(sig.size() == 64);\n     bool ret = 1;\n-    secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n+    KeyPair keypair = ComputeKeyPair();\n+    if (!keypair.IsValid()) return false;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "21d031e7867ef97c07cee691c115d59b3aebfd19",
      "in_reply_to_id": 1681636478,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "there's a lot of ugly duplication because of all the `reinterpret_cast` changes. Wouldn't it make sense to extract those and simplify the function and the diff?",
      "created_at": "2024-07-20T17:34:02Z",
      "updated_at": "2024-07-20T17:34:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685507979",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685507979"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": 276,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685508729",
      "pull_request_review_id": 2190030463,
      "id": 1685508729,
      "node_id": "PRRC_kwDOABII585kdtJ5",
      "diff_hunk": "@@ -273,22 +273,22 @@ bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint2\n {\n     assert(sig.size() == 64);\n     bool ret = 1;\n-    secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n+    KeyPair keypair = ComputeKeyPair();\n+    if (!keypair.IsValid()) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, reinterpret_cast<const secp256k1_keypair*>(keypair.data()));\n         unsigned char pubkey_bytes[32];\n         ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, reinterpret_cast<secp256k1_keypair*>(keypair.data()), tweak.data());",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "21d031e7867ef97c07cee691c115d59b3aebfd19",
      "in_reply_to_id": 1681648449,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "right, I thought that `make` would catch that, not sure why it allowed a `memset` on a const (most be C vs C++ boundary, I guess).",
      "created_at": "2024-07-20T17:35:51Z",
      "updated_at": "2024-07-20T17:35:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685508729",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685508729"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685512256",
      "pull_request_review_id": 2190034898,
      "id": 1685512256,
      "node_id": "PRRC_kwDOABII585kduBA",
      "diff_hunk": "@@ -273,22 +273,22 @@ bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint2\n {\n     assert(sig.size() == 64);\n     bool ret = 1;\n-    secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n+    KeyPair keypair = ComputeKeyPair();\n+    if (!keypair.IsValid()) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, reinterpret_cast<const secp256k1_keypair*>(keypair.data()));\n         unsigned char pubkey_bytes[32];\n         ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, reinterpret_cast<secp256k1_keypair*>(keypair.data()), tweak.data());",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "21d031e7867ef97c07cee691c115d59b3aebfd19",
      "in_reply_to_id": 1681648449,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That is surprising. I applied your patch directly in `bitcoin-core/secp256k1` and did get a warning:\r\n\r\n```\r\nsrc/modules/extrakeys/main_impl.h:266:12: warning: passing argument 1 of ‘memset’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]\r\n  266 |     memset(keypair, 0, sizeof(*keypair));\r\n      |            ^~~~~~~\r\nIn file included from src/ecmult_impl.h:10,\r\n                 from src/secp256k1.c:30:\r\n/usr/include/string.h:61:28: note: expected ‘void *’ but argument is of type ‘const secp256k1_keypair *’\r\n   61 | extern void *memset (void *__s, int __c, size_t __n) __THROW __nonnull ((1));\r\n      |                      ~~~~~~^~~\r\nsrc/modules/extrakeys/main_impl.h:278:32: warning: passing argument 1 of ‘secp256k1_keypair_save’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]\r\n  278 |         secp256k1_keypair_save(keypair, &sk, &pk);\r\n      |                                ^~~~~~~\r\nsrc/modules/extrakeys/main_impl.h:156:55: note: expected ‘secp256k1_keypair *’ but argument is of type ‘const secp256k1_keypair *’\r\n  156 | static void secp256k1_keypair_save(secp256k1_keypair *keypair, const secp256k1_scalar *sk, secp256k1_ge *pk) {\r\n```\r\n\r\nwhich is good, but I would have also expected it to fail to compile :thinking: ",
      "created_at": "2024-07-20T18:01:55Z",
      "updated_at": "2024-07-20T18:01:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685512256",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685512256"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685519477",
      "pull_request_review_id": 2190043088,
      "id": 1685519477,
      "node_id": "PRRC_kwDOABII585kdvx1",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n         unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n+        ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n     }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    if (!ret) return false;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": 1681189065,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Right, my point is there is no way to call `CKey::SignSchnorr` such that `_keypair_create` will succeed but `_xonly_pub` or `_serialize` will fail. Annoyingly, this means in the old version we have branches in the code that we cannot test (easy to prove me wrong if you have a test case :wink:). Hence, I stand by the statement this is not a behavior change and we are merely disagreeing over code aesthetics.\r\n\r\nI think you make a good point that _future_ changes to libsecp256k1 could change this (although, I'd argue if we can create a keypair object but cannot extract and serialize the pubkey portion something is seriously broken), so I can add back the early returns. However, I'll reiterate that I find it to be a bit smelly when we have if branches in the code we cannot test.",
      "created_at": "2024-07-20T18:59:34Z",
      "updated_at": "2024-07-20T18:59:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685519477",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685519477"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685520450",
      "pull_request_review_id": 2190044139,
      "id": 1685520450,
      "node_id": "PRRC_kwDOABII585kdwBC",
      "diff_hunk": "@@ -273,22 +273,22 @@ bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint2\n {\n     assert(sig.size() == 64);\n     bool ret = 1;\n-    secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n+    KeyPair keypair = ComputeKeyPair();\n+    if (!keypair.IsValid()) return false;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "21d031e7867ef97c07cee691c115d59b3aebfd19",
      "in_reply_to_id": 1681636478,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Or maybe introduce a casting helper like https://github.com/bitcoin/bitcoin/blob/master/src/span.h#L295",
      "created_at": "2024-07-20T19:09:24Z",
      "updated_at": "2024-07-20T19:09:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685520450",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685520450"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": 276,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685520827",
      "pull_request_review_id": 2190044447,
      "id": 1685520827,
      "node_id": "PRRC_kwDOABII585kdwG7",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n         unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n+        ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n     }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    if (!ret) return false;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": 1681189065,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Do you agree that computations are done now, that would have been avoided previously? It might return the same value, but it does different calculations than before.\r\n\r\n> it to be a bit smelly when we have if branches in the code we cannot test.\r\n\r\nabsolutely, but I don't yet see how avoiding short-circuiting helps with the testing - but exploding it into multiple methods certainly did!",
      "created_at": "2024-07-20T19:12:03Z",
      "updated_at": "2024-07-20T19:12:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685520827",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685520827"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685522043",
      "pull_request_review_id": 2190045658,
      "id": 1685522043,
      "node_id": "PRRC_kwDOABII585kdwZ7",
      "diff_hunk": "@@ -273,22 +273,22 @@ bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint2\n {\n     assert(sig.size() == 64);\n     bool ret = 1;\n-    secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n+    KeyPair keypair = ComputeKeyPair();\n+    if (!keypair.IsValid()) return false;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "21d031e7867ef97c07cee691c115d59b3aebfd19",
      "in_reply_to_id": 1681636478,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah, sorry, I misunderstood your suggestion as \"extract\" (copy) the data out into a variable but you're suggesting saving the pointer as a variable. I think this would simplify the diff a lot, will give it a shot.\r\n\r\nThe only thing I don't like here is needing to pass it as non-const to two functions and const to the other two, but I think its okay to pass a non-const object to a function with const in the signature? ",
      "created_at": "2024-07-20T19:20:45Z",
      "updated_at": "2024-07-20T19:20:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685522043",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685522043"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": 276,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685527164",
      "pull_request_review_id": 2190052448,
      "id": 1685527164,
      "node_id": "PRRC_kwDOABII585kdxp8",
      "diff_hunk": "@@ -273,22 +273,22 @@ bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint2\n {\n     assert(sig.size() == 64);\n     bool ret = 1;\n-    secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n+    KeyPair keypair = ComputeKeyPair();\n+    if (!keypair.IsValid()) return false;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "21d031e7867ef97c07cee691c115d59b3aebfd19",
      "in_reply_to_id": 1681636478,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "if you end up using similar casting helper methods, the const part won't matter anymore, right?",
      "created_at": "2024-07-20T19:51:27Z",
      "updated_at": "2024-07-20T19:51:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685527164",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685527164"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": 276,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685528003",
      "pull_request_review_id": 2190053143,
      "id": 1685528003,
      "node_id": "PRRC_kwDOABII585kdx3D",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n         unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n+        ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n     }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    if (!ret) return false;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": 1681189065,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Do you agree that computations are done now, that would have been avoided previously?\r\n\r\nNo, this is the part I am disagreeing with. As I explained in the first message, there is no way for `_xonly_pub` or `_serialize` to fail if `keypair_create` succeeds. If `_create`, `_xonly_pub`, and `_serialize` succeed, then `XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);` is computed. After that, `_xonly_tweak_add` will be called. `_xonly_tweak_add` can fail if tweak32 is greater than the curve order or if it is the negation of the private key that was used to create `keypair`. If this function fails, `CKey::SignSchnorr` will exit before attempting to sign, which is the same behavior in the old version and the new version.\r\n\r\n> absolutely, but I don't yet see how avoiding short-circuiting helps with the testing\r\n\r\nIt helps by removing dead branches from the code. I'd be much happier to keep it broken out into multiple if branches if we had test cases to exercise the if branches. But if we have if branches that can realistically never be hit, I think it makes the code overly complicated. In this case, we end up with a more complicated function in the hopes of preventing an unnecessary call to `ComputeTapTweakHash`, which realistically will never happen and hardly seems worth it given this is a relatively cheap operation (and one without side effects).",
      "created_at": "2024-07-20T19:57:52Z",
      "updated_at": "2024-07-20T19:57:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685528003",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685528003"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685530015",
      "pull_request_review_id": 2190055046,
      "id": 1685530015,
      "node_id": "PRRC_kwDOABII585kdyWf",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n         unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n+        ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n     }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    if (!ret) return false;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": 1681189065,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> there is no way for _xonly_pub or _serialize to fail if keypair_create succeeds\r\n\r\nI wish it were as clear in the code as it was before the change.\r\nI'll review it more thoroughly tomorrow.\r\nIf you can make the code more explicit by replacing confusing `ret &=` code with asserts where certain values can only be true, that would be helpful (if that's what you're stating).",
      "created_at": "2024-07-20T20:16:21Z",
      "updated_at": "2024-07-20T20:19:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685530015",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685530015"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685690725",
      "pull_request_review_id": 2190281744,
      "id": 1685690725,
      "node_id": "PRRC_kwDOABII585keZll",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n         unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n+        ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n     }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    if (!ret) return false;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": 1681189065,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Spent some time thinking about this and realised the main issue here is we start with a valid secret key, create a keypair (which generates the public key in the process), and then extract the public key from the keypair and serialise it. Instead, we can just get the public key directly from the secret key via `CKey::GetPubKey`. This makes the original code more clear, eliminates the unnecessary if branches and makes the diff _much_ simpler.\r\n\r\nIf you look into `GetPubKey` you can see it’s calling the same libsecp256k1 functions to generate the public key, but asserting true for the serialisation and removes the unnecessary load steps. \r\n\r\n",
      "created_at": "2024-07-21T09:09:59Z",
      "updated_at": "2024-07-21T09:09:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685690725",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685690725"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685690873",
      "pull_request_review_id": 2190281884,
      "id": 1685690873,
      "node_id": "PRRC_kwDOABII585keZn5",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": 1681189987,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Resolving since this is no longer relevant.",
      "created_at": "2024-07-21T09:10:51Z",
      "updated_at": "2024-07-21T09:10:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685690873",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685690873"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 280,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685691416",
      "pull_request_review_id": 2190282366,
      "id": 1685691416,
      "node_id": "PRRC_kwDOABII585keZwY",
      "diff_hunk": "@@ -273,22 +273,22 @@ bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint2\n {\n     assert(sig.size() == 64);\n     bool ret = 1;\n-    secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n+    KeyPair keypair = ComputeKeyPair();\n+    if (!keypair.IsValid()) return false;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "21d031e7867ef97c07cee691c115d59b3aebfd19",
      "in_reply_to_id": 1681636478,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Took your suggestion of saving the pointer in a variable. I’m not sure about a cast helper, mainly because I don’t want to put `secp256k1_keypair` into a header file, so seems better to just have people use reinterpret cast wherever KeyPair is being used.",
      "created_at": "2024-07-21T09:14:17Z",
      "updated_at": "2024-07-21T09:14:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685691416",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685691416"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": 276,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685691767",
      "pull_request_review_id": 2190282733,
      "id": 1685691767,
      "node_id": "PRRC_kwDOABII585keZ13",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = true;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "36ecf72a04c9ecb82660fb14a734c155e89e5abd",
      "in_reply_to_id": 1685506662,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed all of the instances of initialisation the bool outside of a function call.",
      "created_at": "2024-07-21T09:16:38Z",
      "updated_at": "2024-07-21T09:16:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685691767",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685691767"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685696117",
      "pull_request_review_id": 2190286464,
      "id": 1685696117,
      "node_id": "PRRC_kwDOABII585kea51",
      "diff_hunk": "@@ -275,10 +275,7 @@ bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint2\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n+        CPubKey pubkey_bytes = GetPubKey();",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "1cbf89693cf91e6c23d6e535439c1448e0758772",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "this is SO MUCH BETTER! \\\\:D/ (it even has the asserts that we were talking about)\r\n\r\nI didn't trust, but verified, of course, if you think it makes sense, please add this test to the commit (you can add me as co-author if you want as `l0rinc <pap.lorinc@gmail.com>`):\r\n```C++\r\nBOOST_AUTO_TEST_CASE(key_sign_schnorr_tweak_test)\r\n{\r\n    secp256k1_context* secp256k1_context_sign = secp256k1_context_create(SECP256K1_CONTEXT_SIGN);\r\n\r\n    for (int i = 0; i < 1000; ++i) {\r\n        CKey key;\r\n        key.MakeNewKey(true);\r\n        uint256 merkle_root = InsecureRandBool() ? uint256(0) : InsecureRand256();\r\n\r\n        // Old method\r\n        secp256k1_keypair keypair;\r\n        BOOST_CHECK(secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(key.begin())));\r\n        secp256k1_xonly_pubkey pubkey_old;\r\n        BOOST_CHECK(secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey_old, nullptr, &keypair));\r\n        unsigned char pubkey_bytes_old[32];\r\n        BOOST_CHECK(secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes_old, &pubkey_old));\r\n        uint256 tweak_old = XOnlyPubKey(pubkey_bytes_old).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\r\n\r\n        // New method\r\n        CPubKey pubkey_bytes_new = key.GetPubKey();\r\n        uint256 tweak_new = XOnlyPubKey(pubkey_bytes_new).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);\r\n\r\n        BOOST_CHECK_EQUAL(tweak_old, tweak_new);\r\n    }\r\n\r\n    secp256k1_context_destroy(secp256k1_context_sign);\r\n}\r\n```",
      "created_at": "2024-07-21T09:40:59Z",
      "updated_at": "2024-07-21T10:25:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685696117",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685696117"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685697345",
      "pull_request_review_id": 2190286464,
      "id": 1685697345,
      "node_id": "PRRC_kwDOABII585kebNB",
      "diff_hunk": "@@ -272,22 +272,19 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n-    secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n-    if (merkle_root) {\n-        CPubKey pubkey_bytes = GetPubKey();\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n-    }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    KeyPair kp = ComputeKeyPair(merkle_root);\n+    if (!kp.IsValid()) return false;\n+    auto keypair = reinterpret_cast<const secp256k1_keypair*>(kp.data());\n+    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), keypair, aux.data());\n     if (ret) {\n         // Additional verification step to prevent using a potentially corrupted signature\n         secp256k1_xonly_pubkey pubkey_verify;\n-        ret = secp256k1_keypair_xonly_pub(secp256k1_context_static, &pubkey_verify, nullptr, &keypair);\n+        ret = secp256k1_keypair_xonly_pub(secp256k1_context_static, &pubkey_verify, nullptr, keypair);\n         ret &= secp256k1_schnorrsig_verify(secp256k1_context_static, sig.data(), hash.begin(), 32, &pubkey_verify);",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "7bbb215e575970e227b5364a2077d1acda7902d3",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: I understand this was the code before and that we've talked about this before, but in other places we use short circuiting logic for such code: https://github.com/bitcoin/bitcoin/blob/master/src/secp256k1/src/modules/extrakeys/main_impl.h#L185. Will leave it up to you to decide which is better, seems safer to me not to call verify when we're already in an invalid state.",
      "created_at": "2024-07-21T09:46:54Z",
      "updated_at": "2024-07-21T10:25:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685697345",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685697345"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 283,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685699288",
      "pull_request_review_id": 2190286464,
      "id": 1685699288,
      "node_id": "PRRC_kwDOABII585kebrY",
      "diff_hunk": "@@ -422,13 +419,17 @@ void CExtKey::Decode(const unsigned char code[BIP32_EXTKEY_SIZE]) {\n     if ((nDepth == 0 && (nChild != 0 || ReadLE32(vchFingerprint) != 0)) || code[41] != 0) key = CKey();\n }\n \n-KeyPair::KeyPair(const CKey& key)\n+KeyPair::KeyPair(const CKey& key, const uint256* merkle_root)\n {\n     static_assert(std::tuple_size<KeyType>() == sizeof(secp256k1_keypair));\n     MakeKeyPairData();\n     auto keypair = reinterpret_cast<secp256k1_keypair*>(m_keypair->data());\n-\n     bool ret = secp256k1_keypair_create(secp256k1_context_sign, keypair, UCharCast(key.data()));",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 53,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "7bbb215e575970e227b5364a2077d1acda7902d3",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: in other cases it makes sense to call it `ret`, since it's the return value, here it's just a validity check - if you think it makes sense, [consider renaming](https://github.com/bitcoin/bitcoin/blob/master/src/key.cpp#L338) to avoid the surprise",
      "created_at": "2024-07-21T09:53:55Z",
      "updated_at": "2024-07-21T10:25:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685699288",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685699288"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 427,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685701466",
      "pull_request_review_id": 2190286464,
      "id": 1685701466,
      "node_id": "PRRC_kwDOABII585kecNa",
      "diff_hunk": "@@ -433,6 +424,21 @@ KeyPair::KeyPair(const CKey& key, const uint256* merkle_root)\n     if (!ret) ClearKeyPairData();\n }\n \n+bool KeyPair::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256& aux) const\n+{\n+    assert(sig.size() == 64);",
      "path": "src/key.cpp",
      "position": 65,
      "original_position": 26,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "8b7f460b1f5e7e7e2067a8ed073a4cb183469c77",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: it's 64 because of https://github.com/bitcoin/bitcoin/blob/master/src/script/sign.cpp#L86, right?\r\nIt's not really called from other places, the assert seems like noise here.",
      "created_at": "2024-07-21T10:07:00Z",
      "updated_at": "2024-07-21T10:25:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685701466",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685701466"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 428,
      "original_line": 428,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685702437",
      "pull_request_review_id": 2190286464,
      "id": 1685702437,
      "node_id": "PRRC_kwDOABII585keccl",
      "diff_hunk": "@@ -299,6 +300,13 @@ BOOST_AUTO_TEST_CASE(bip340_test_vectors)\n         // Verify those signatures for good measure.\n         BOOST_CHECK(pubkey.VerifySchnorr(msg256, sig64));\n \n+        // Repeat the same check, but use the KeyPair directly without any merkle tweak\n+        KeyPair keypair = key.ComputeKeyPair(/*merkle_root=*/nullptr);\n+        bool kp_ok = keypair.SignSchnorr(msg256, sig64, aux256);\n+        BOOST_CHECK(kp_ok);\n+        BOOST_CHECK(pubkey.VerifySchnorr(msg256, sig64));\n+        BOOST_CHECK(std::vector<unsigned char>(sig64, sig64 + 64) == sig);",
      "path": "src/test/key_tests.cpp",
      "position": 17,
      "original_position": 17,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "49057fc4f1e73a14f673c934573d727ae0229779",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`BOOST_CHECK` has very bad error messages, consider using the `_EQUAL` or in this case `_EQUAL_COLLECTIONS` for better errors:\r\n```suggestion\r\n        BOOST_CHECK_EQUAL_COLLECTIONS(std::begin(sig64), std::end(sig64), sig.begin(), sig.end());\r\n```",
      "created_at": "2024-07-21T10:12:06Z",
      "updated_at": "2024-07-21T10:25:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685702437",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685702437"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 308,
      "original_line": 308,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685703075",
      "pull_request_review_id": 2190286464,
      "id": 1685703075,
      "node_id": "PRRC_kwDOABII585kecmj",
      "diff_hunk": "@@ -271,26 +271,11 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n \n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n-    assert(sig.size() == 64);\n-    secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n-    if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n-    }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n-    if (ret) {\n-        // Additional verification step to prevent using a potentially corrupted signature\n-        secp256k1_xonly_pubkey pubkey_verify;\n-        ret = secp256k1_keypair_xonly_pub(secp256k1_context_static, &pubkey_verify, nullptr, &keypair);\n-        ret &= secp256k1_schnorrsig_verify(secp256k1_context_static, sig.data(), hash.begin(), 32, &pubkey_verify);\n-    }\n-    if (!ret) memory_cleanse(sig.data(), sig.size());\n-    memory_cleanse(&keypair, sizeof(keypair));\n+    KeyPair kp = ComputeKeyPair(merkle_root);\n+    if (!kp.IsValid()) return false;\n+    bool ret = kp.SignSchnorr(hash, sig, aux);\n+    /* Clear the keypair */\n+    kp = KeyPair();",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "49057fc4f1e73a14f673c934573d727ae0229779",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "this is the only remaining part that I'm uncomfortable with, even the IDE is complaining:\r\n<img  width=\"300px\" src=\"https://github.com/user-attachments/assets/52bf7173-a562-4dde-9f2c-9834b3a5d5da\">\r\n\r\nwhich I'm not getting for `BIP324Cipher::Initialize`, since it's assigning a field, not a local variable.\r\n\r\nIs there a more intuitive way to do this? Do we have tests to check that this value is cleared?",
      "created_at": "2024-07-21T10:16:47Z",
      "updated_at": "2024-07-21T11:27:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685703075",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685703075"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685703852",
      "pull_request_review_id": 2190286464,
      "id": 1685703852,
      "node_id": "PRRC_kwDOABII585kecys",
      "diff_hunk": "@@ -273,22 +273,22 @@ bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint2\n {\n     assert(sig.size() == 64);\n     bool ret = 1;\n-    secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n+    KeyPair keypair = ComputeKeyPair();\n+    if (!keypair.IsValid()) return false;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "21d031e7867ef97c07cee691c115d59b3aebfd19",
      "in_reply_to_id": 1681636478,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nice!",
      "created_at": "2024-07-21T10:20:51Z",
      "updated_at": "2024-07-21T10:25:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685703852",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685703852"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": 276,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685703896",
      "pull_request_review_id": 2190286464,
      "id": 1685703896,
      "node_id": "PRRC_kwDOABII585keczY",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n         unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n+        ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n     }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    if (!ret) return false;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": 1681189065,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "beautiful!",
      "created_at": "2024-07-21T10:21:26Z",
      "updated_at": "2024-07-21T10:25:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685703896",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685703896"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685703954",
      "pull_request_review_id": 2190286464,
      "id": 1685703954,
      "node_id": "PRRC_kwDOABII585kec0S",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n         unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n+        ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n     }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    if (!ret) return false;\n+    ret &= secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": 1681077911,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "resolved",
      "created_at": "2024-07-21T10:21:47Z",
      "updated_at": "2024-07-21T10:25:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685703954",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685703954"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 287,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685704090",
      "pull_request_review_id": 2190286464,
      "id": 1685704090,
      "node_id": "PRRC_kwDOABII585kec2a",
      "diff_hunk": "@@ -273,22 +273,22 @@ bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint2\n {\n     assert(sig.size() == 64);\n     bool ret = 1;\n-    secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n+    KeyPair keypair = ComputeKeyPair();\n+    if (!keypair.IsValid()) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, reinterpret_cast<const secp256k1_keypair*>(keypair.data()));\n         unsigned char pubkey_bytes[32];\n         ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, reinterpret_cast<secp256k1_keypair*>(keypair.data()), tweak.data());",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "21d031e7867ef97c07cee691c115d59b3aebfd19",
      "in_reply_to_id": 1681648449,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "it must be a C vs C++ inconsistency - we're not affected by it anymore, you can resolve this",
      "created_at": "2024-07-21T10:22:40Z",
      "updated_at": "2024-07-21T10:25:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685704090",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685704090"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685704154",
      "pull_request_review_id": 2190286464,
      "id": 1685704154,
      "node_id": "PRRC_kwDOABII585kec3a",
      "diff_hunk": "@@ -271,19 +271,11 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n \n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n-    assert(sig.size() == 64);\n-    bool ret = 1;\n     KeyPair keypair = ComputeKeyPair(merkle_root);\n     if (!keypair.IsValid()) return false;\n-    ret &= secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), reinterpret_cast<const secp256k1_keypair*>(keypair.data()), aux.data());\n-    if (ret) {\n-        // Additional verification step to prevent using a potentially corrupted signature\n-        secp256k1_xonly_pubkey pubkey_verify;\n-        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_static, &pubkey_verify, nullptr, reinterpret_cast<const secp256k1_keypair*>(keypair.data()));\n-        ret &= secp256k1_schnorrsig_verify(secp256k1_context_static, sig.data(), hash.begin(), 32, &pubkey_verify);\n-    }\n-    if (!ret) memory_cleanse(sig.data(), sig.size());\n-    memory_cleanse(&keypair, sizeof(keypair));\n+    bool ret = keypair.SignSchnorr(hash, sig, aux);\n+    /* Clear the keypair */\n+    keypair = KeyPair();",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "a76cc3650d56f81d2c6fee2259e9f67c88c25557",
      "in_reply_to_id": 1681672646,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm still a bit hesitant here, see my related comment",
      "created_at": "2024-07-21T10:23:11Z",
      "updated_at": "2024-07-21T10:25:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685704154",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685704154"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685767669",
      "pull_request_review_id": 2190361038,
      "id": 1685767669,
      "node_id": "PRRC_kwDOABII585kesX1",
      "diff_hunk": "@@ -433,6 +424,21 @@ KeyPair::KeyPair(const CKey& key, const uint256* merkle_root)\n     if (!ret) ClearKeyPairData();\n }\n \n+bool KeyPair::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256& aux) const\n+{\n+    assert(sig.size() == 64);",
      "path": "src/key.cpp",
      "position": 65,
      "original_position": 26,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "8b7f460b1f5e7e7e2067a8ed073a4cb183469c77",
      "in_reply_to_id": 1685701466,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It's 64 because Schnorr signatures, unlike ECDSA signatures, are by definition 64 bytes (see https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki#description), so we definitely want to keep this assert.",
      "created_at": "2024-07-21T15:50:20Z",
      "updated_at": "2024-07-21T15:50:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685767669",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685767669"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 428,
      "original_line": 428,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685769335",
      "pull_request_review_id": 2190362455,
      "id": 1685769335,
      "node_id": "PRRC_kwDOABII585kesx3",
      "diff_hunk": "@@ -433,6 +424,21 @@ KeyPair::KeyPair(const CKey& key, const uint256* merkle_root)\n     if (!ret) ClearKeyPairData();\n }\n \n+bool KeyPair::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256& aux) const\n+{\n+    assert(sig.size() == 64);",
      "path": "src/key.cpp",
      "position": 65,
      "original_position": 26,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "8b7f460b1f5e7e7e2067a8ed073a4cb183469c77",
      "in_reply_to_id": 1685701466,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, of course, but that's already the case for every caller currently (i.e. not part of a public api, we know all the callers), and we're not really asserting this in other such methods, so it seems redundant to me. If you disagree, just resolve it, not a big deal either way.",
      "created_at": "2024-07-21T16:01:22Z",
      "updated_at": "2024-07-21T16:01:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685769335",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685769335"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 428,
      "original_line": 428,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685772925",
      "pull_request_review_id": 2190365620,
      "id": 1685772925,
      "node_id": "PRRC_kwDOABII585ketp9",
      "diff_hunk": "@@ -299,6 +300,13 @@ BOOST_AUTO_TEST_CASE(bip340_test_vectors)\n         // Verify those signatures for good measure.\n         BOOST_CHECK(pubkey.VerifySchnorr(msg256, sig64));\n \n+        // Repeat the same check, but use the KeyPair directly without any merkle tweak\n+        KeyPair keypair = key.ComputeKeyPair(/*merkle_root=*/nullptr);\n+        bool kp_ok = keypair.SignSchnorr(msg256, sig64, aux256);\n+        BOOST_CHECK(kp_ok);\n+        BOOST_CHECK(pubkey.VerifySchnorr(msg256, sig64));\n+        BOOST_CHECK(std::vector<unsigned char>(sig64, sig64 + 64) == sig);",
      "path": "src/test/key_tests.cpp",
      "position": 17,
      "original_position": 17,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "49057fc4f1e73a14f673c934573d727ae0229779",
      "in_reply_to_id": 1685702437,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In this case, I think it's better to match the style of the existing test but I've made a note regarding `_EQUAL` and `_EQUAL_COLLECTIONS` going forward.",
      "created_at": "2024-07-21T16:24:48Z",
      "updated_at": "2024-07-21T16:24:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685772925",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685772925"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 308,
      "original_line": 308,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685779527",
      "pull_request_review_id": 2190371210,
      "id": 1685779527,
      "node_id": "PRRC_kwDOABII585kevRH",
      "diff_hunk": "@@ -271,26 +271,11 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n \n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n-    assert(sig.size() == 64);\n-    secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n-    if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n-    }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n-    if (ret) {\n-        // Additional verification step to prevent using a potentially corrupted signature\n-        secp256k1_xonly_pubkey pubkey_verify;\n-        ret = secp256k1_keypair_xonly_pub(secp256k1_context_static, &pubkey_verify, nullptr, &keypair);\n-        ret &= secp256k1_schnorrsig_verify(secp256k1_context_static, sig.data(), hash.begin(), 32, &pubkey_verify);\n-    }\n-    if (!ret) memory_cleanse(sig.data(), sig.size());\n-    memory_cleanse(&keypair, sizeof(keypair));\n+    KeyPair kp = ComputeKeyPair(merkle_root);\n+    if (!kp.IsValid()) return false;\n+    bool ret = kp.SignSchnorr(hash, sig, aux);\n+    /* Clear the keypair */\n+    kp = KeyPair();",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "49057fc4f1e73a14f673c934573d727ae0229779",
      "in_reply_to_id": 1685703075,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah! I was misunderstanding `m_key = CKey()`. Since CKey (and KeyPair) are using secure allocator, the contents will be cleared before deletion (e.g. when the variable goes out of scope). But in the case of `BIP324Cipher::Initialize`, it seems `m_key` is used to initialize the connection, but then needs to be explicitly cleared by setting with an empty CKey (invalid CKey), because the member field will not go out of scope and be cleared.\r\n\r\nSo in this case, we don't need the `kp = KeyPair();` line at all. Also worth mentioning: `memory_cleanse(keypair..` was needed before because the keypair object was _not_ using a secure allocator.",
      "created_at": "2024-07-21T17:09:24Z",
      "updated_at": "2024-07-21T17:09:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685779527",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685779527"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685779789",
      "pull_request_review_id": 2190371411,
      "id": 1685779789,
      "node_id": "PRRC_kwDOABII585kevVN",
      "diff_hunk": "@@ -271,19 +271,11 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n \n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n-    assert(sig.size() == 64);\n-    bool ret = 1;\n     KeyPair keypair = ComputeKeyPair(merkle_root);\n     if (!keypair.IsValid()) return false;\n-    ret &= secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), reinterpret_cast<const secp256k1_keypair*>(keypair.data()), aux.data());\n-    if (ret) {\n-        // Additional verification step to prevent using a potentially corrupted signature\n-        secp256k1_xonly_pubkey pubkey_verify;\n-        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_static, &pubkey_verify, nullptr, reinterpret_cast<const secp256k1_keypair*>(keypair.data()));\n-        ret &= secp256k1_schnorrsig_verify(secp256k1_context_static, sig.data(), hash.begin(), 32, &pubkey_verify);\n-    }\n-    if (!ret) memory_cleanse(sig.data(), sig.size());\n-    memory_cleanse(&keypair, sizeof(keypair));\n+    bool ret = keypair.SignSchnorr(hash, sig, aux);\n+    /* Clear the keypair */\n+    keypair = KeyPair();",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "a76cc3650d56f81d2c6fee2259e9f67c88c25557",
      "in_reply_to_id": 1681672646,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "My last comment was wrong, @itornaza is correct: the KeyPair destructor is doing the secure erase job and the `kp = KeyPair();` is unnecessary.",
      "created_at": "2024-07-21T17:11:15Z",
      "updated_at": "2024-07-21T17:11:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685779789",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685779789"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685780351",
      "pull_request_review_id": 2190371932,
      "id": 1685780351,
      "node_id": "PRRC_kwDOABII585kevd_",
      "diff_hunk": "@@ -422,13 +419,17 @@ void CExtKey::Decode(const unsigned char code[BIP32_EXTKEY_SIZE]) {\n     if ((nDepth == 0 && (nChild != 0 || ReadLE32(vchFingerprint) != 0)) || code[41] != 0) key = CKey();\n }\n \n-KeyPair::KeyPair(const CKey& key)\n+KeyPair::KeyPair(const CKey& key, const uint256* merkle_root)\n {\n     static_assert(std::tuple_size<KeyType>() == sizeof(secp256k1_keypair));\n     MakeKeyPairData();\n     auto keypair = reinterpret_cast<secp256k1_keypair*>(m_keypair->data());\n-\n     bool ret = secp256k1_keypair_create(secp256k1_context_sign, keypair, UCharCast(key.data()));",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 53,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "7bbb215e575970e227b5364a2077d1acda7902d3",
      "in_reply_to_id": 1685699288,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Updated.",
      "created_at": "2024-07-21T17:15:38Z",
      "updated_at": "2024-07-21T17:15:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685780351",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685780351"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 427,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685780941",
      "pull_request_review_id": 2190372373,
      "id": 1685780941,
      "node_id": "PRRC_kwDOABII585kevnN",
      "diff_hunk": "@@ -275,10 +275,7 @@ bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint2\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n+        CPubKey pubkey_bytes = GetPubKey();",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "1cbf89693cf91e6c23d6e535439c1448e0758772",
      "in_reply_to_id": 1685696117,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks! I added a modified version of this as a test. I took out the iterations because creating the keys, signing, etc is an expensive operation and I don't think it adds anything to do multiple rounds every time the tests are ran (i.e., if it this were to fail, it will fail for _all_ keys, not a particular key).\r\n\r\nThis also means the merkle root isn't be switched, but that's fine since the thing we actually want to test here is that we get the same results using two different methods of getting the public key for the tweak.\r\n\r\n",
      "created_at": "2024-07-21T17:19:15Z",
      "updated_at": "2024-07-21T17:19:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685780941",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685780941"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685781344",
      "pull_request_review_id": 2190372739,
      "id": 1685781344,
      "node_id": "PRRC_kwDOABII585kevtg",
      "diff_hunk": "@@ -272,22 +272,19 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n-    secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n-    if (merkle_root) {\n-        CPubKey pubkey_bytes = GetPubKey();\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n-    }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    KeyPair kp = ComputeKeyPair(merkle_root);\n+    if (!kp.IsValid()) return false;\n+    auto keypair = reinterpret_cast<const secp256k1_keypair*>(kp.data());\n+    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), keypair, aux.data());\n     if (ret) {\n         // Additional verification step to prevent using a potentially corrupted signature\n         secp256k1_xonly_pubkey pubkey_verify;\n-        ret = secp256k1_keypair_xonly_pub(secp256k1_context_static, &pubkey_verify, nullptr, &keypair);\n+        ret = secp256k1_keypair_xonly_pub(secp256k1_context_static, &pubkey_verify, nullptr, keypair);\n         ret &= secp256k1_schnorrsig_verify(secp256k1_context_static, sig.data(), hash.begin(), 32, &pubkey_verify);",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "7bbb215e575970e227b5364a2077d1acda7902d3",
      "in_reply_to_id": 1685697345,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Leaving as is for the reasons mentioned in https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685528003",
      "created_at": "2024-07-21T17:22:36Z",
      "updated_at": "2024-07-21T17:22:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685781344",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685781344"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 283,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685806155",
      "pull_request_review_id": 2190393727,
      "id": 1685806155,
      "node_id": "PRRC_kwDOABII585ke1xL",
      "diff_hunk": "@@ -271,27 +271,9 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n \n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n-    assert(sig.size() == 64);\n-    secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n-    if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n-    }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n-    if (ret) {\n-        // Additional verification step to prevent using a potentially corrupted signature\n-        secp256k1_xonly_pubkey pubkey_verify;\n-        ret = secp256k1_keypair_xonly_pub(secp256k1_context_static, &pubkey_verify, nullptr, &keypair);\n-        ret &= secp256k1_schnorrsig_verify(secp256k1_context_static, sig.data(), hash.begin(), 32, &pubkey_verify);\n-    }\n-    if (!ret) memory_cleanse(sig.data(), sig.size());\n-    memory_cleanse(&keypair, sizeof(keypair));\n-    return ret;\n+    KeyPair kp = ComputeKeyPair(merkle_root);\n+    if (!kp.IsValid()) return false;\n+    return kp.SignSchnorr(hash, sig, aux);",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "b8b3a9f18670ec7bf246a57950cdae7e034a264d",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:\r\n```suggestion\r\n    return kp.IsValid() && kp.SignSchnorr(hash, sig, aux);\r\n```",
      "created_at": "2024-07-21T20:20:59Z",
      "updated_at": "2024-07-21T20:29:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685806155",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685806155"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": 275,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685807082",
      "pull_request_review_id": 2190393727,
      "id": 1685807082,
      "node_id": "PRRC_kwDOABII585ke1_q",
      "diff_hunk": "@@ -272,22 +272,19 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n-    secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n-    if (merkle_root) {\n-        CPubKey pubkey_bytes = GetPubKey();\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n-    }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    KeyPair kp = ComputeKeyPair(merkle_root);\n+    if (!kp.IsValid()) return false;\n+    auto keypair = reinterpret_cast<const secp256k1_keypair*>(kp.data());\n+    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), keypair, aux.data());\n     if (ret) {\n         // Additional verification step to prevent using a potentially corrupted signature\n         secp256k1_xonly_pubkey pubkey_verify;\n-        ret = secp256k1_keypair_xonly_pub(secp256k1_context_static, &pubkey_verify, nullptr, &keypair);\n+        ret = secp256k1_keypair_xonly_pub(secp256k1_context_static, &pubkey_verify, nullptr, keypair);\n         ret &= secp256k1_schnorrsig_verify(secp256k1_context_static, sig.data(), hash.begin(), 32, &pubkey_verify);",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "7bbb215e575970e227b5364a2077d1acda7902d3",
      "in_reply_to_id": 1685697345,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "One last attempt from my part, but it's not a blocker, would appreciate if you would consider it anyway: in the previous example we've solved this basically by changing the return aggregation (into `ret`) with assertions instead, since we knew that in reality we can't have short-circuiting here. It could make sense to do the same here (if that's the reasoning) and leave a simple return here as well.",
      "created_at": "2024-07-21T20:27:00Z",
      "updated_at": "2024-07-21T20:29:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685807082",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1685807082"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 283,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686283547",
      "pull_request_review_id": 2191134930,
      "id": 1686283547,
      "node_id": "PRRC_kwDOABII585kgqUb",
      "diff_hunk": "@@ -271,27 +271,9 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n \n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n-    assert(sig.size() == 64);\n-    secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n-    if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n-    }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n-    if (ret) {\n-        // Additional verification step to prevent using a potentially corrupted signature\n-        secp256k1_xonly_pubkey pubkey_verify;\n-        ret = secp256k1_keypair_xonly_pub(secp256k1_context_static, &pubkey_verify, nullptr, &keypair);\n-        ret &= secp256k1_schnorrsig_verify(secp256k1_context_static, sig.data(), hash.begin(), 32, &pubkey_verify);\n-    }\n-    if (!ret) memory_cleanse(sig.data(), sig.size());\n-    memory_cleanse(&keypair, sizeof(keypair));\n-    return ret;\n+    KeyPair kp = ComputeKeyPair(merkle_root);\n+    if (!kp.IsValid()) return false;\n+    return kp.SignSchnorr(hash, sig, aux);",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "b8b3a9f18670ec7bf246a57950cdae7e034a264d",
      "in_reply_to_id": 1685806155,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Updated.",
      "created_at": "2024-07-22T09:48:49Z",
      "updated_at": "2024-07-22T09:48:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1686283547",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686283547"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": 275,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686762705",
      "pull_request_review_id": 2191928826,
      "id": 1686762705,
      "node_id": "PRRC_kwDOABII585kifTR",
      "diff_hunk": "@@ -345,4 +346,31 @@ BOOST_AUTO_TEST_CASE(bip341_test_h)\n     BOOST_CHECK(XOnlyPubKey::NUMS_H == H);\n }\n \n+BOOST_AUTO_TEST_CASE(key_schnorr_tweak_smoke_test)\n+{\n+    // Sanity check to ensure we get the same tweak using CPubKey vs secp256k1 functions\n+    secp256k1_context* secp256k1_context_sign = secp256k1_context_create(SECP256K1_CONTEXT_SIGN);\n+\n+    CKey key;\n+    key.MakeNewKey(true);\n+    uint256 merkle_root = InsecureRand256();\n+\n+    // secp256k1 functions\n+    secp256k1_keypair keypair;\n+    BOOST_CHECK(secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(key.begin())));\n+    secp256k1_xonly_pubkey pubkey_old;\n+    BOOST_CHECK(secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey_old, nullptr, &keypair));\n+    unsigned char pubkey_bytes_old[32];\n+    BOOST_CHECK(secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes_old, &pubkey_old));\n+    uint256 tweak_old = XOnlyPubKey(pubkey_bytes_old).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);",
      "path": "src/test/key_tests.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "a10ecc45fae4ee1e514c3b2deac793f18a10d0e4",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"tests: add key tweak smoke test\"\r\n\r\nThe `merkle_root.IsNull()` condition will never hold here. Perhaps it makes sense to run this test in a loop, and only set `merkle_root` to `InsecureRand256()` in some of the iterations?",
      "created_at": "2024-07-22T15:42:06Z",
      "updated_at": "2024-07-22T16:50:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1686762705",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686762705"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 365,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686843355",
      "pull_request_review_id": 2191928826,
      "id": 1686843355,
      "node_id": "PRRC_kwDOABII585kiy_b",
      "diff_hunk": "@@ -235,6 +242,71 @@ struct CExtKey {\n     void SetSeed(Span<const std::byte> seed);\n };\n \n+/** KeyPair\n+ *\n+ *  Wraps a `secp256k1_keypair` type, an opaque data structure for holding a secret and public key.\n+ *  This is intended for BIP340 keys and allows us to easily determine if the secret key needs to\n+ *  be negated by checking the parity of the public key. This class primarily intended for passing\n+ *  secret keys to libsecp256k1 functions expecting a `secp256k1_keypair`. For all other cases,\n+ *  CKey should be preferred.\n+ */\n+class KeyPair\n+{\n+public:\n+    KeyPair() noexcept = default;\n+    KeyPair(KeyPair&&) noexcept = default;\n+    KeyPair& operator=(KeyPair&&) noexcept = default;\n+    KeyPair& operator=(const KeyPair& other)\n+    {\n+        if (this != &other) {\n+            if (other.m_keypair) {\n+                MakeKeyPairData();\n+                *m_keypair = *other.m_keypair;\n+            } else {\n+                ClearKeyPairData();\n+            }\n+        }\n+        return *this;\n+    }\n+\n+    KeyPair(const KeyPair& other) { *this = other; }\n+\n+    friend KeyPair CKey::ComputeKeyPair() const;\n+    [[nodiscard]] bool SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256& aux) const;\n+\n+    /**\n+     * data() is provided as a read-only method for passing a KeyPair object to secp256k1 functions\n+     * expecting a `secp256k1_keypair`. This avoids needing to create a temporary `secp256k1_keypair`\n+     * object by allowing the KeyPair to be passed directly in the following manner:\n+     *\n+     *     reinterpret_cast<const secp256k1_keypair*>(keypair.data())\n+     *\n+     * Recall that `secp256k1_keypair` is an opaque data type, so this method should only be used\n+     * for passing a KeyPair object as a secp256k1_keypair and should never be used to access the\n+     * underlying keypair bytes directly.\n+     */\n+    const unsigned char* data() const { return IsValid() ? m_keypair->data() : nullptr; }",
      "path": "src/key.h",
      "position": null,
      "original_position": 68,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "fa855cfa0db0be163465bf99d32f7e46d0285b8d",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If the only purpose of this function is constructing a `const secp256k1_keypair*`, I think it would be better to make it private (it seems only accessed inside `KeyPair` anyway?), and give it another name (`data()` is used in STL containers to give raw access to the contents, which seems to be explicitly what we don't want here).",
      "created_at": "2024-07-22T16:43:01Z",
      "updated_at": "2024-07-22T16:50:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1686843355",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686843355"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 288,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686876369",
      "pull_request_review_id": 2192115944,
      "id": 1686876369,
      "node_id": "PRRC_kwDOABII585ki7DR",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n         unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n+        ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n     }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    if (!ret) return false;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": 1681189065,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Spent some time thinking about this and realised the main issue here is we start with a valid secret key, create a keypair (which generates the public key in the process), and then extract the public key from the keypair and serialise it. Instead, we can just get the public key directly from the secret key via `CKey::GetPubKey`. This makes the original code more clear, eliminates the unnecessary if branches and makes the diff _much_ simpler.\r\n> \r\n\r\nNot sure if we care that much about signing speed, but isn't this almost certainly slower, as the privkey->pubkey step (i.e. point multiplication with generator G) has to be done twice now?",
      "created_at": "2024-07-22T17:11:51Z",
      "updated_at": "2024-07-22T17:11:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1686876369",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686876369"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686990120",
      "pull_request_review_id": 2192299471,
      "id": 1686990120,
      "node_id": "PRRC_kwDOABII585kjW0o",
      "diff_hunk": "@@ -235,6 +242,71 @@ struct CExtKey {\n     void SetSeed(Span<const std::byte> seed);\n };\n \n+/** KeyPair\n+ *\n+ *  Wraps a `secp256k1_keypair` type, an opaque data structure for holding a secret and public key.\n+ *  This is intended for BIP340 keys and allows us to easily determine if the secret key needs to\n+ *  be negated by checking the parity of the public key. This class primarily intended for passing\n+ *  secret keys to libsecp256k1 functions expecting a `secp256k1_keypair`. For all other cases,\n+ *  CKey should be preferred.\n+ */\n+class KeyPair\n+{\n+public:\n+    KeyPair() noexcept = default;\n+    KeyPair(KeyPair&&) noexcept = default;\n+    KeyPair& operator=(KeyPair&&) noexcept = default;\n+    KeyPair& operator=(const KeyPair& other)\n+    {\n+        if (this != &other) {\n+            if (other.m_keypair) {\n+                MakeKeyPairData();\n+                *m_keypair = *other.m_keypair;\n+            } else {\n+                ClearKeyPairData();\n+            }\n+        }\n+        return *this;\n+    }\n+\n+    KeyPair(const KeyPair& other) { *this = other; }\n+\n+    friend KeyPair CKey::ComputeKeyPair() const;\n+    [[nodiscard]] bool SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256& aux) const;\n+\n+    /**\n+     * data() is provided as a read-only method for passing a KeyPair object to secp256k1 functions\n+     * expecting a `secp256k1_keypair`. This avoids needing to create a temporary `secp256k1_keypair`\n+     * object by allowing the KeyPair to be passed directly in the following manner:\n+     *\n+     *     reinterpret_cast<const secp256k1_keypair*>(keypair.data())\n+     *\n+     * Recall that `secp256k1_keypair` is an opaque data type, so this method should only be used\n+     * for passing a KeyPair object as a secp256k1_keypair and should never be used to access the\n+     * underlying keypair bytes directly.\n+     */\n+    const unsigned char* data() const { return IsValid() ? m_keypair->data() : nullptr; }",
      "path": "src/key.h",
      "position": null,
      "original_position": 68,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "fa855cfa0db0be163465bf99d32f7e46d0285b8d",
      "in_reply_to_id": 1686843355,
      "user": {
        "login": "itornaza",
        "id": 11520757,
        "node_id": "MDQ6VXNlcjExNTIwNzU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/11520757?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itornaza",
        "html_url": "https://github.com/itornaza",
        "followers_url": "https://api.github.com/users/itornaza/followers",
        "following_url": "https://api.github.com/users/itornaza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/itornaza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/itornaza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/itornaza/subscriptions",
        "organizations_url": "https://api.github.com/users/itornaza/orgs",
        "repos_url": "https://api.github.com/users/itornaza/repos",
        "events_url": "https://api.github.com/users/itornaza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/itornaza/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If there is not a better alternative, I would suggest `secp256k1_keypair()` as a candidate for renaming this `data()` member function to further signify its use through the cast and be called like so:\r\n\r\n`reinterpret_cast<const secp256k1_keypair*>(keypair.secp256k1_keypair())`",
      "created_at": "2024-07-22T18:35:59Z",
      "updated_at": "2024-07-22T18:37:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1686990120",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1686990120"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 288,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687728635",
      "pull_request_review_id": 2193445047,
      "id": 1687728635,
      "node_id": "PRRC_kwDOABII585kmLH7",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n         unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n+        ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n     }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    if (!ret) return false;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": 1681189065,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yep, this will be slower (in cases where we don't have a merkle root and instead use the public key per BIP341's recommendation). I looked to see if we had a benchmark for signing to see if I could quantify this, but didn't see one. Was thinking about writing one but then talked myself out of it because I don't think performance is as much a concern in signing (as opposed to verification, where it absolutely is a concern).\r\n\r\nIn this case, I do think improving the clarity of the code and removing extra steps at the cost of performance seems worth it? I can also write a benchmark to quantify if performance here is indeed a concern.",
      "created_at": "2024-07-23T09:20:45Z",
      "updated_at": "2024-07-23T09:20:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1687728635",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687728635"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687754852",
      "pull_request_review_id": 2193484884,
      "id": 1687754852,
      "node_id": "PRRC_kwDOABII585kmRhk",
      "diff_hunk": "@@ -235,6 +242,71 @@ struct CExtKey {\n     void SetSeed(Span<const std::byte> seed);\n };\n \n+/** KeyPair\n+ *\n+ *  Wraps a `secp256k1_keypair` type, an opaque data structure for holding a secret and public key.\n+ *  This is intended for BIP340 keys and allows us to easily determine if the secret key needs to\n+ *  be negated by checking the parity of the public key. This class primarily intended for passing\n+ *  secret keys to libsecp256k1 functions expecting a `secp256k1_keypair`. For all other cases,\n+ *  CKey should be preferred.\n+ */\n+class KeyPair\n+{\n+public:\n+    KeyPair() noexcept = default;\n+    KeyPair(KeyPair&&) noexcept = default;\n+    KeyPair& operator=(KeyPair&&) noexcept = default;\n+    KeyPair& operator=(const KeyPair& other)\n+    {\n+        if (this != &other) {\n+            if (other.m_keypair) {\n+                MakeKeyPairData();\n+                *m_keypair = *other.m_keypair;\n+            } else {\n+                ClearKeyPairData();\n+            }\n+        }\n+        return *this;\n+    }\n+\n+    KeyPair(const KeyPair& other) { *this = other; }\n+\n+    friend KeyPair CKey::ComputeKeyPair() const;\n+    [[nodiscard]] bool SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256& aux) const;\n+\n+    /**\n+     * data() is provided as a read-only method for passing a KeyPair object to secp256k1 functions\n+     * expecting a `secp256k1_keypair`. This avoids needing to create a temporary `secp256k1_keypair`\n+     * object by allowing the KeyPair to be passed directly in the following manner:\n+     *\n+     *     reinterpret_cast<const secp256k1_keypair*>(keypair.data())\n+     *\n+     * Recall that `secp256k1_keypair` is an opaque data type, so this method should only be used\n+     * for passing a KeyPair object as a secp256k1_keypair and should never be used to access the\n+     * underlying keypair bytes directly.\n+     */\n+    const unsigned char* data() const { return IsValid() ? m_keypair->data() : nullptr; }",
      "path": "src/key.h",
      "position": null,
      "original_position": 68,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "fa855cfa0db0be163465bf99d32f7e46d0285b8d",
      "in_reply_to_id": 1686843355,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "(just realised I need to update the description of this PR to be a bit more clear on the motivation)\r\n\r\n@sipa - my main motivations for having the `KeyPair` class is to a) encapsulate the taptweak logic so that it can be used outside of signing and b) to be able to pass the `KeyPair` directly to `secp256k1_*` functions expecting a `const secp256k1_keypair *`. For the latter, I think we will need some sort of public function. Here is an example of how this used in #28201:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/38067a6ef07d9b5108e75207960bdb7a21c14b70/src/common/bip352.cpp#L206-L221\r\n\r\nI do agree a rename would be much better here, perhaps `ReadKeyPairData()/GetKeyPairData()`, or something like @itornaza 's suggestion, `secp256k1_keypair()`?.\r\n\r\nAnother option is leave the read-only public method out of this PR (since it's not currently used) and add the read-only method in #28201 ?",
      "created_at": "2024-07-23T09:38:16Z",
      "updated_at": "2024-07-23T09:38:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1687754852",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687754852"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 288,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687763266",
      "pull_request_review_id": 2193497634,
      "id": 1687763266,
      "node_id": "PRRC_kwDOABII585kmTlC",
      "diff_hunk": "@@ -345,4 +346,31 @@ BOOST_AUTO_TEST_CASE(bip341_test_h)\n     BOOST_CHECK(XOnlyPubKey::NUMS_H == H);\n }\n \n+BOOST_AUTO_TEST_CASE(key_schnorr_tweak_smoke_test)\n+{\n+    // Sanity check to ensure we get the same tweak using CPubKey vs secp256k1 functions\n+    secp256k1_context* secp256k1_context_sign = secp256k1_context_create(SECP256K1_CONTEXT_SIGN);\n+\n+    CKey key;\n+    key.MakeNewKey(true);\n+    uint256 merkle_root = InsecureRand256();\n+\n+    // secp256k1 functions\n+    secp256k1_keypair keypair;\n+    BOOST_CHECK(secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(key.begin())));\n+    secp256k1_xonly_pubkey pubkey_old;\n+    BOOST_CHECK(secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey_old, nullptr, &keypair));\n+    unsigned char pubkey_bytes_old[32];\n+    BOOST_CHECK(secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes_old, &pubkey_old));\n+    uint256 tweak_old = XOnlyPubKey(pubkey_bytes_old).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);",
      "path": "src/test/key_tests.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "a10ecc45fae4ee1e514c3b2deac793f18a10d0e4",
      "in_reply_to_id": 1686762705,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is how @paplorinc originally proposed the test: https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1685696117\r\n\r\nI felt like computing multiple keys in a loop was overkill and removed the merkle root switching since that's not really what's being tested here. The goal here is to sanity check that we get the same public key bytes from GetPubKey() as we would get directly accessing the `secp256k1_keypair` using the `_xonly_pub` and `_serialize`.\r\n\r\nSo perhaps better to just remove the `IsNull()` check, considering this is being checked in the manner you describe in the `bip340_test_vectors` test?",
      "created_at": "2024-07-23T09:44:02Z",
      "updated_at": "2024-07-23T09:44:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1687763266",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687763266"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 365,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687820299",
      "pull_request_review_id": 2193588782,
      "id": 1687820299,
      "node_id": "PRRC_kwDOABII585kmhgL",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n         unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n+        ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n     }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    if (!ret) return false;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": 1681189065,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fwiw, we have a signing benchmark for taproot key-path spends, haven't verified yet if it covers the discussed code path though: https://github.com/bitcoin/bitcoin/blob/910d38b22f575cba9a3325de3f4c5ac667d4a487/src/bench/sign_transaction.cpp#L67\r\n\r\n> In this case, I do think improving the clarity of the code and removing extra steps at the cost of performance seems worth it? I can also write a benchmark to quantify if performance here is indeed a concern.\r\n\r\nNo hard feelings on that topic from my side, my guess would indeed be that in the grand scheme of signing an extra generator point multiplication is barely noticable. Just wanted to point out that this could be a slight drawback.",
      "created_at": "2024-07-23T10:27:25Z",
      "updated_at": "2024-07-23T10:27:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1687820299",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687820299"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687848841",
      "pull_request_review_id": 2193635242,
      "id": 1687848841,
      "node_id": "PRRC_kwDOABII585kmoeJ",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n         unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n+        ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n     }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    if (!ret) return false;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": 1681189065,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah, nice! I'll see if I can easily modify the benchmark to validate that the difference is indeed negligible (and quantify the difference in the event it is not negligible).\r\n\r\n> Just wanted to point out that this could be a slight drawback.\r\n\r\nIt's a good observation! I have a slight preference for clarity over performance in this context, but good you mentioned it in case others feel differently.",
      "created_at": "2024-07-23T10:51:07Z",
      "updated_at": "2024-07-23T10:51:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1687848841",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687848841"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687854257",
      "pull_request_review_id": 2193643726,
      "id": 1687854257,
      "node_id": "PRRC_kwDOABII585kmpyx",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n         unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n+        ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n     }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    if (!ret) return false;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": 1681189065,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "it doesn't cover the path, but this one does:\r\n```patch\r\ndiff --git a/src/bench/sign_transaction.cpp b/src/bench/sign_transaction.cpp\r\n--- a/src/bench/sign_transaction.cpp\t(revision 8d573611575c3fa66f08407aa9b02f91b29a94c3)\r\n+++ b/src/bench/sign_transaction.cpp\t(date 1721731869277)\r\n@@ -12,6 +12,7 @@\r\n #include <script/script.h>\r\n #include <script/sign.h>\r\n #include <uint256.h>\r\n+#include <test/util/random.h>\r\n #include <util/translation.h>\r\n \r\n enum class InputType {\r\n@@ -66,5 +67,33 @@\r\n static void SignTransactionECDSA(benchmark::Bench& bench)   { SignTransactionSingleInput(bench, InputType::P2WPKH); }\r\n static void SignTransactionSchnorr(benchmark::Bench& bench) { SignTransactionSingleInput(bench, InputType::P2TR);   }\r\n \r\n+static void SignSchnorrBenchmark(benchmark::Bench& bench, bool use_null_merkle_root)\r\n+{\r\n+    ECC_Context ecc_context{};\r\n+\r\n+    auto key = GenerateRandomKey();\r\n+    auto msg = InsecureRand256();\r\n+    auto merkle_root = use_null_merkle_root ? uint256() : InsecureRand256();\r\n+    auto aux = InsecureRand256();\r\n+    std::vector<unsigned char> sig(64);\r\n+\r\n+    bench.batch(1).unit(\"signature\").run([&] {\r\n+        bool success = key.SignSchnorr(msg, sig, &merkle_root, aux);\r\n+        assert(success);\r\n+    });\r\n+}\r\n+\r\n+static void SignSchnorrWithMerkleRoot(benchmark::Bench& bench)\r\n+{\r\n+    SignSchnorrBenchmark(bench, /*use_null_merkle_root=*/false);\r\n+}\r\n+\r\n+static void SignSchnorrWithNullMerkleRoot(benchmark::Bench& bench)\r\n+{\r\n+    SignSchnorrBenchmark(bench, /*use_null_merkle_root=*/true);\r\n+}\r\n+\r\n BENCHMARK(SignTransactionECDSA, benchmark::PriorityLevel::HIGH);\r\n BENCHMARK(SignTransactionSchnorr, benchmark::PriorityLevel::HIGH);\r\n+BENCHMARK(SignSchnorrWithMerkleRoot, benchmark::PriorityLevel::HIGH);\r\n+BENCHMARK(SignSchnorrWithNullMerkleRoot, benchmark::PriorityLevel::HIGH);\r\n```\r\n\r\n\r\nwhich reveals that the new signing is ~15% slower:\r\nbefore:\r\n|        ns/signature |         signature/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|           69,383.89 |           14,412.57 |    0.1% |      1.06 | `SignSchnorrWithMerkleRoot`\r\n|           69,548.30 |           14,378.50 |    0.0% |      1.06 | `SignSchnorrWithNullMerkleRoot`\r\n\r\n|        ns/signature |         signature/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|           70,189.31 |           14,247.18 |    0.2% |      1.07 | `SignSchnorrWithMerkleRoot`\r\n|           69,464.39 |           14,395.87 |    0.1% |      1.06 | `SignSchnorrWithNullMerkleRoot`\r\n\r\n\r\nafter:\r\n|        ns/signature |         signature/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|           83,055.75 |           12,040.11 |    0.2% |      1.08 | `SignSchnorrWithMerkleRoot`\r\n|           80,971.71 |           12,349.99 |    0.1% |      1.08 | `SignSchnorrWithNullMerkleRoot`\r\n\r\n|        ns/signature |         signature/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|           81,841.15 |           12,218.79 |    0.1% |      1.08 | `SignSchnorrWithMerkleRoot`\r\n|           82,112.31 |           12,178.44 |    0.1% |      1.08 | `SignSchnorrWithNullMerkleRoot`\r\n",
      "created_at": "2024-07-23T10:55:32Z",
      "updated_at": "2024-07-23T10:56:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1687854257",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1687854257"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696679201",
      "pull_request_review_id": 2207222039,
      "id": 1696679201,
      "node_id": "PRRC_kwDOABII585lIUUh",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n         unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n+        ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n     }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    if (!ret) return false;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": 1681189065,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@josibake, what do you think of this?",
      "created_at": "2024-07-30T09:51:17Z",
      "updated_at": "2024-07-30T09:51:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1696679201",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696679201"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702056966",
      "pull_request_review_id": 2215955046,
      "id": 1702056966,
      "node_id": "PRRC_kwDOABII585lc1QG",
      "diff_hunk": "@@ -345,4 +346,31 @@ BOOST_AUTO_TEST_CASE(bip341_test_h)\n     BOOST_CHECK(XOnlyPubKey::NUMS_H == H);\n }\n \n+BOOST_AUTO_TEST_CASE(key_schnorr_tweak_smoke_test)\n+{\n+    // Sanity check to ensure we get the same tweak using CPubKey vs secp256k1 functions\n+    secp256k1_context* secp256k1_context_sign = secp256k1_context_create(SECP256K1_CONTEXT_SIGN);\n+\n+    CKey key;\n+    key.MakeNewKey(true);\n+    uint256 merkle_root = InsecureRand256();\n+\n+    // secp256k1 functions\n+    secp256k1_keypair keypair;\n+    BOOST_CHECK(secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(key.begin())));\n+    secp256k1_xonly_pubkey pubkey_old;\n+    BOOST_CHECK(secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey_old, nullptr, &keypair));\n+    unsigned char pubkey_bytes_old[32];\n+    BOOST_CHECK(secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes_old, &pubkey_old));\n+    uint256 tweak_old = XOnlyPubKey(pubkey_bytes_old).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);",
      "path": "src/test/key_tests.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "a10ecc45fae4ee1e514c3b2deac793f18a10d0e4",
      "in_reply_to_id": 1686762705,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Should this instead check that the two pub keys are the same?\r\nIf they are, we certain that `ComputeTapTweakHash` will generate same tweak.",
      "created_at": "2024-08-02T16:12:25Z",
      "updated_at": "2024-08-02T17:53:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1702056966",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702056966"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 365,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702103148",
      "pull_request_review_id": 2215955046,
      "id": 1702103148,
      "node_id": "PRRC_kwDOABII585ldAhs",
      "diff_hunk": "@@ -235,6 +242,71 @@ struct CExtKey {\n     void SetSeed(Span<const std::byte> seed);\n };\n \n+/** KeyPair\n+ *\n+ *  Wraps a `secp256k1_keypair` type, an opaque data structure for holding a secret and public key.\n+ *  This is intended for BIP340 keys and allows us to easily determine if the secret key needs to\n+ *  be negated by checking the parity of the public key. This class primarily intended for passing\n+ *  secret keys to libsecp256k1 functions expecting a `secp256k1_keypair`. For all other cases,\n+ *  CKey should be preferred.\n+ */\n+class KeyPair\n+{\n+public:\n+    KeyPair() noexcept = default;\n+    KeyPair(KeyPair&&) noexcept = default;\n+    KeyPair& operator=(KeyPair&&) noexcept = default;\n+    KeyPair& operator=(const KeyPair& other)\n+    {\n+        if (this != &other) {\n+            if (other.m_keypair) {\n+                MakeKeyPairData();\n+                *m_keypair = *other.m_keypair;\n+            } else {\n+                ClearKeyPairData();\n+            }\n+        }\n+        return *this;\n+    }\n+\n+    KeyPair(const KeyPair& other) { *this = other; }\n+\n+    friend KeyPair CKey::ComputeKeyPair() const;\n+    [[nodiscard]] bool SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256& aux) const;\n+\n+    /**\n+     * data() is provided as a read-only method for passing a KeyPair object to secp256k1 functions\n+     * expecting a `secp256k1_keypair`. This avoids needing to create a temporary `secp256k1_keypair`\n+     * object by allowing the KeyPair to be passed directly in the following manner:\n+     *\n+     *     reinterpret_cast<const secp256k1_keypair*>(keypair.data())\n+     *\n+     * Recall that `secp256k1_keypair` is an opaque data type, so this method should only be used\n+     * for passing a KeyPair object as a secp256k1_keypair and should never be used to access the\n+     * underlying keypair bytes directly.\n+     */\n+    const unsigned char* data() const { return IsValid() ? m_keypair->data() : nullptr; }",
      "path": "src/key.h",
      "position": null,
      "original_position": 68,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "fa855cfa0db0be163465bf99d32f7e46d0285b8d",
      "in_reply_to_id": 1686843355,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "+1 on renaming to `GetKeyPairData`",
      "created_at": "2024-08-02T16:57:49Z",
      "updated_at": "2024-08-02T17:53:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1702103148",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702103148"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 288,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702109542",
      "pull_request_review_id": 2215955046,
      "id": 1702109542,
      "node_id": "PRRC_kwDOABII585ldCFm",
      "diff_hunk": "@@ -272,22 +272,17 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n-    secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n-    if (merkle_root) {\n-        CPubKey pubkey_bytes = GetPubKey();\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n-    }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    KeyPair kp = ComputeKeyPair(merkle_root);",
      "path": "src/key.cpp",
      "position": 25,
      "original_position": 12,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "7d160f116c00134df9e6aee726024e86ff359eb6",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nitty-nit:\r\nI think `ConstructKeyPair` might be a better name?",
      "created_at": "2024-08-02T17:04:59Z",
      "updated_at": "2024-08-02T17:53:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1702109542",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702109542"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 274,
      "original_line": 274,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702137349",
      "pull_request_review_id": 2215955046,
      "id": 1702137349,
      "node_id": "PRRC_kwDOABII585ldI4F",
      "diff_hunk": "@@ -431,6 +420,21 @@ KeyPair::KeyPair(const CKey& key, const uint256* merkle_root)\n     if (!success) ClearKeyPairData();\n }\n \n+bool KeyPair::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256& aux) const\n+{\n+    assert(sig.size() == 64);",
      "path": "src/key.cpp",
      "position": 65,
      "original_position": 27,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "a380faa124026d4ce235dc27cb0147d88fe08e65",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`m_keypair->data()` can be a `nullptr`, should we return `false` early if it is?",
      "created_at": "2024-08-02T17:35:37Z",
      "updated_at": "2024-08-02T17:53:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1702137349",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702137349"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 428,
      "original_line": 428,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702146553",
      "pull_request_review_id": 2215955046,
      "id": 1702146553,
      "node_id": "PRRC_kwDOABII585ldLH5",
      "diff_hunk": "@@ -300,6 +300,13 @@ BOOST_AUTO_TEST_CASE(bip340_test_vectors)\n         // Verify those signatures for good measure.",
      "path": "src/test/key_tests.cpp",
      "position": 9,
      "original_position": 1,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "9afa2c9e50370b2918377f3f3eac0950a4296ec0",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is 9afa2c9e50370b2918377f3f3eac0950a4296ec0 needed, I think this is just a duplicate, because `key.SignSchnorr` is implicitly doing the same thing.",
      "created_at": "2024-08-02T17:45:24Z",
      "updated_at": "2024-08-02T17:53:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1702146553",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702146553"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 300,
      "original_line": 300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702769944",
      "pull_request_review_id": 2217056357,
      "id": 1702769944,
      "node_id": "PRRC_kwDOABII585lfjUY",
      "diff_hunk": "@@ -431,6 +420,21 @@ KeyPair::KeyPair(const CKey& key, const uint256* merkle_root)\n     if (!success) ClearKeyPairData();\n }\n \n+bool KeyPair::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256& aux) const\n+{\n+    assert(sig.size() == 64);",
      "path": "src/key.cpp",
      "position": 65,
      "original_position": 27,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "a380faa124026d4ce235dc27cb0147d88fe08e65",
      "in_reply_to_id": 1702137349,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point. Since a KeyPair can be constructed and in an invalid state, I've moved the `if (!IsValid()) return false;` from `CKey::SignSchnorr` to here.",
      "created_at": "2024-08-03T13:32:54Z",
      "updated_at": "2024-08-03T13:32:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1702769944",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702769944"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 428,
      "original_line": 428,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702771127",
      "pull_request_review_id": 2217056693,
      "id": 1702771127,
      "node_id": "PRRC_kwDOABII585lfjm3",
      "diff_hunk": "@@ -300,6 +300,13 @@ BOOST_AUTO_TEST_CASE(bip340_test_vectors)\n         // Verify those signatures for good measure.",
      "path": "src/test/key_tests.cpp",
      "position": 9,
      "original_position": 1,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "9afa2c9e50370b2918377f3f3eac0950a4296ec0",
      "in_reply_to_id": 1702146553,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't think there is any harm having a test for both and have a slight preference for keeping it this way only because if someone were to change `CKey::SignSchnorr` in the future (e.g., to not use `KeyPair` or remove the method entirely), `KeyPair` would end up untested.",
      "created_at": "2024-08-03T13:35:57Z",
      "updated_at": "2024-08-03T13:35:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1702771127",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702771127"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 300,
      "original_line": 300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702772023",
      "pull_request_review_id": 2217056960,
      "id": 1702772023,
      "node_id": "PRRC_kwDOABII585lfj03",
      "diff_hunk": "@@ -272,22 +272,17 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n-    secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n-    if (merkle_root) {\n-        CPubKey pubkey_bytes = GetPubKey();\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n-    }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    KeyPair kp = ComputeKeyPair(merkle_root);",
      "path": "src/key.cpp",
      "position": 25,
      "original_position": 12,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "7d160f116c00134df9e6aee726024e86ff359eb6",
      "in_reply_to_id": 1702109542,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I prefer to use `Compute*` whenever an actual computation is happening. In this case, calling `ComputeKeyPair` will compute a public key for the private key and (optionally) tweak the newly created key pair.",
      "created_at": "2024-08-03T13:37:52Z",
      "updated_at": "2024-08-03T13:37:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1702772023",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702772023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 274,
      "original_line": 274,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702773089",
      "pull_request_review_id": 2217057278,
      "id": 1702773089,
      "node_id": "PRRC_kwDOABII585lfkFh",
      "diff_hunk": "@@ -235,6 +242,71 @@ struct CExtKey {\n     void SetSeed(Span<const std::byte> seed);\n };\n \n+/** KeyPair\n+ *\n+ *  Wraps a `secp256k1_keypair` type, an opaque data structure for holding a secret and public key.\n+ *  This is intended for BIP340 keys and allows us to easily determine if the secret key needs to\n+ *  be negated by checking the parity of the public key. This class primarily intended for passing\n+ *  secret keys to libsecp256k1 functions expecting a `secp256k1_keypair`. For all other cases,\n+ *  CKey should be preferred.\n+ */\n+class KeyPair\n+{\n+public:\n+    KeyPair() noexcept = default;\n+    KeyPair(KeyPair&&) noexcept = default;\n+    KeyPair& operator=(KeyPair&&) noexcept = default;\n+    KeyPair& operator=(const KeyPair& other)\n+    {\n+        if (this != &other) {\n+            if (other.m_keypair) {\n+                MakeKeyPairData();\n+                *m_keypair = *other.m_keypair;\n+            } else {\n+                ClearKeyPairData();\n+            }\n+        }\n+        return *this;\n+    }\n+\n+    KeyPair(const KeyPair& other) { *this = other; }\n+\n+    friend KeyPair CKey::ComputeKeyPair() const;\n+    [[nodiscard]] bool SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256& aux) const;\n+\n+    /**\n+     * data() is provided as a read-only method for passing a KeyPair object to secp256k1 functions\n+     * expecting a `secp256k1_keypair`. This avoids needing to create a temporary `secp256k1_keypair`\n+     * object by allowing the KeyPair to be passed directly in the following manner:\n+     *\n+     *     reinterpret_cast<const secp256k1_keypair*>(keypair.data())\n+     *\n+     * Recall that `secp256k1_keypair` is an opaque data type, so this method should only be used\n+     * for passing a KeyPair object as a secp256k1_keypair and should never be used to access the\n+     * underlying keypair bytes directly.\n+     */\n+    const unsigned char* data() const { return IsValid() ? m_keypair->data() : nullptr; }",
      "path": "src/key.h",
      "position": null,
      "original_position": 68,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "fa855cfa0db0be163465bf99d32f7e46d0285b8d",
      "in_reply_to_id": 1686843355,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've removed `data()` for now and will add `GetKeyPairData` as a read-only method in #28201 ",
      "created_at": "2024-08-03T13:39:34Z",
      "updated_at": "2024-08-03T13:39:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1702773089",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702773089"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 288,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702774488",
      "pull_request_review_id": 2217057848,
      "id": 1702774488,
      "node_id": "PRRC_kwDOABII585lfkbY",
      "diff_hunk": "@@ -345,4 +346,31 @@ BOOST_AUTO_TEST_CASE(bip341_test_h)\n     BOOST_CHECK(XOnlyPubKey::NUMS_H == H);\n }\n \n+BOOST_AUTO_TEST_CASE(key_schnorr_tweak_smoke_test)\n+{\n+    // Sanity check to ensure we get the same tweak using CPubKey vs secp256k1 functions\n+    secp256k1_context* secp256k1_context_sign = secp256k1_context_create(SECP256K1_CONTEXT_SIGN);\n+\n+    CKey key;\n+    key.MakeNewKey(true);\n+    uint256 merkle_root = InsecureRand256();\n+\n+    // secp256k1 functions\n+    secp256k1_keypair keypair;\n+    BOOST_CHECK(secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(key.begin())));\n+    secp256k1_xonly_pubkey pubkey_old;\n+    BOOST_CHECK(secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey_old, nullptr, &keypair));\n+    unsigned char pubkey_bytes_old[32];\n+    BOOST_CHECK(secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes_old, &pubkey_old));\n+    uint256 tweak_old = XOnlyPubKey(pubkey_bytes_old).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);",
      "path": "src/test/key_tests.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "a10ecc45fae4ee1e514c3b2deac793f18a10d0e4",
      "in_reply_to_id": 1686762705,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've updated the to remove the `merkle_root.IsNull()` check.\r\n\r\n@ismaelsadeeq I kept the `ComputeTapTweakHash` line because they are testing _slightly_ different paths: in the first case, an `XOnlyPubKey` is being constructed from a 32 byte unsigned char array, in the second case it's being created from a `CPubKey` object. I renamed the variables to try to make this more clear in the test.",
      "created_at": "2024-08-03T13:42:27Z",
      "updated_at": "2024-08-03T13:42:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1702774488",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702774488"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 365,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702776795",
      "pull_request_review_id": 2217058853,
      "id": 1702776795,
      "node_id": "PRRC_kwDOABII585lfk_b",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n         unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n+        ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n     }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    if (!ret) return false;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": 1681189065,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks for writing the benchmark @paplorinc ! I've added a _slightly_ modified version in the first commit. 15% is a tough pill to swallow, so I reverted back to extracting the xonly public key from the secp256k1_keypair object and serialising it. Per our early conversation, I replaced the early returns with asserts. This more closely mirrors what `CKey::GetPubKey()` is doing and I think better documents what the code is doing.\r\n\r\nI added this as the last commit to keep the diffs as clean as possible.",
      "created_at": "2024-08-03T13:48:47Z",
      "updated_at": "2024-08-03T13:48:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1702776795",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702776795"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702779940",
      "pull_request_review_id": 2217059890,
      "id": 1702779940,
      "node_id": "PRRC_kwDOABII585lflwk",
      "diff_hunk": "@@ -272,21 +272,23 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n+    bool ret = 1;\n     secp256k1_keypair keypair;\n     if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n     if (merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n+        ret &= secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair);\n         unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n+        ret &= secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey);\n         uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n+        ret &= secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data());\n     }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    if (!ret) return false;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4e8d61e750487f8ff81e3411a014b0a907c5e47d",
      "in_reply_to_id": 1681189065,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think you found a good compromise, especially with the updated test which checks that it basically does the same thing.",
      "created_at": "2024-08-03T13:57:19Z",
      "updated_at": "2024-08-03T13:57:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1702779940",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702779940"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702814297",
      "pull_request_review_id": 2217090887,
      "id": 1702814297,
      "node_id": "PRRC_kwDOABII585lfuJZ",
      "diff_hunk": "@@ -272,25 +272,17 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n-    secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n-    if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n-    }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    KeyPair kp = ComputeKeyPair(merkle_root);\n+    if (!kp.IsValid()) return false;\n+    auto keypair = reinterpret_cast<const secp256k1_keypair*>(kp.data());",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4cb66dea087786acea046698f742253565eeaaa1",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This fails on the commit-by-commit CI task, we still need the getter in this commit - can be removed in the next where we'll access it directly",
      "created_at": "2024-08-03T16:13:48Z",
      "updated_at": "2024-08-03T16:16:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1702814297",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702814297"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 277,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703085817",
      "pull_request_review_id": 2217451007,
      "id": 1703085817,
      "node_id": "PRRC_kwDOABII585lgwb5",
      "diff_hunk": "@@ -272,25 +272,17 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n-    secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n-    if (merkle_root) {\n-        secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, &keypair)) return false;\n-        unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return false;\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n-    }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    KeyPair kp = ComputeKeyPair(merkle_root);\n+    if (!kp.IsValid()) return false;\n+    auto keypair = reinterpret_cast<const secp256k1_keypair*>(kp.data());",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "4cb66dea087786acea046698f742253565eeaaa1",
      "in_reply_to_id": 1702814297,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah, oversight on my part. I meant to combine these two commits in the last push but forgot 😅  The combined commit is still easy enough to review and I think this is more clear than adding a getter and then removing it in the next commit.",
      "created_at": "2024-08-04T06:55:39Z",
      "updated_at": "2024-08-04T06:55:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1703085817",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703085817"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 277,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703724186",
      "pull_request_review_id": 2218335492,
      "id": 1703724186,
      "node_id": "PRRC_kwDOABII585ljMSa",
      "diff_hunk": "@@ -345,4 +346,31 @@ BOOST_AUTO_TEST_CASE(bip341_test_h)\n     BOOST_CHECK(XOnlyPubKey::NUMS_H == H);\n }\n \n+BOOST_AUTO_TEST_CASE(key_schnorr_tweak_smoke_test)\n+{\n+    // Sanity check to ensure we get the same tweak using CPubKey vs secp256k1 functions\n+    secp256k1_context* secp256k1_context_sign = secp256k1_context_create(SECP256K1_CONTEXT_SIGN);",
      "path": "src/test/key_tests.cpp",
      "position": 42,
      "original_position": 15,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "5d507a0091da1b6c013b00b6c76e19dd4d3b93a7",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:\r\n`secp256k1_context_create` docs says\r\n```\r\n The only valid non-deprecated flag in recent library versions is\r\n *  SECP256K1_CONTEXT_NONE, which will create a context sufficient for all functionality\r\n *  offered by the library. All other (deprecated) flags will be treated as equivalent\r\n *  to the SECP256K1_CONTEXT_NONE flag.\r\n```\r\n\r\n```suggestion\r\n    secp256k1_context* secp256k1_context_sign = secp256k1_context_create(SECP256K1_CONTEXT_NONE);\r\n```",
      "created_at": "2024-08-05T08:20:13Z",
      "updated_at": "2024-08-05T10:34:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1703724186",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703724186"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 365,
      "original_line": 352,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703823064",
      "pull_request_review_id": 2218335492,
      "id": 1703823064,
      "node_id": "PRRC_kwDOABII585ljkbY",
      "diff_hunk": "@@ -425,16 +406,39 @@ void CExtKey::Decode(const unsigned char code[BIP32_EXTKEY_SIZE]) {\n     if ((nDepth == 0 && (nChild != 0 || ReadLE32(vchFingerprint) != 0)) || code[41] != 0) key = CKey();\n }\n \n-KeyPair::KeyPair(const CKey& key)\n+KeyPair::KeyPair(const CKey& key, const uint256* merkle_root)\n {\n     static_assert(std::tuple_size<KeyType>() == sizeof(secp256k1_keypair));\n     MakeKeyPairData();\n     auto keypair = reinterpret_cast<secp256k1_keypair*>(m_keypair->data());\n-\n     bool success = secp256k1_keypair_create(secp256k1_context_sign, keypair, UCharCast(key.data()));\n+    if (success && merkle_root) {\n+        secp256k1_xonly_pubkey pubkey;\n+        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, keypair)) return;\n+        unsigned char pubkey_bytes[32];\n+        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 58,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "cebb08b121ce8c4c5e68bd043b8668c106e31169",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Will be nice to have a wrapper for this that generates a serialized x-only public key.\r\ntheir is a dup of this same code in the test.",
      "created_at": "2024-08-05T09:24:26Z",
      "updated_at": "2024-08-05T10:34:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1703823064",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703823064"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": 416,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 419,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703826460",
      "pull_request_review_id": 2218335492,
      "id": 1703826460,
      "node_id": "PRRC_kwDOABII585ljlQc",
      "diff_hunk": "@@ -272,22 +272,17 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n bool CKey::SignSchnorr(const uint256& hash, Span<unsigned char> sig, const uint256* merkle_root, const uint256& aux) const\n {\n     assert(sig.size() == 64);\n-    secp256k1_keypair keypair;\n-    if (!secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(begin()))) return false;\n-    if (merkle_root) {\n-        CPubKey pubkey_bytes = GetPubKey();\n-        uint256 tweak = XOnlyPubKey(pubkey_bytes).ComputeTapTweakHash(merkle_root->IsNull() ? nullptr : merkle_root);\n-        if (!secp256k1_keypair_xonly_tweak_add(secp256k1_context_static, &keypair, tweak.data())) return false;\n-    }\n-    bool ret = secp256k1_schnorrsig_sign32(secp256k1_context_sign, sig.data(), hash.data(), &keypair, aux.data());\n+    KeyPair kp = ComputeKeyPair(merkle_root);",
      "path": "src/key.cpp",
      "position": 25,
      "original_position": 12,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "7d160f116c00134df9e6aee726024e86ff359eb6",
      "in_reply_to_id": 1702109542,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "fair enough",
      "created_at": "2024-08-05T09:26:50Z",
      "updated_at": "2024-08-05T10:34:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1703826460",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703826460"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 274,
      "original_line": 274,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703842444",
      "pull_request_review_id": 2218335492,
      "id": 1703842444,
      "node_id": "PRRC_kwDOABII585ljpKM",
      "diff_hunk": "@@ -300,6 +300,13 @@ BOOST_AUTO_TEST_CASE(bip340_test_vectors)\n         // Verify those signatures for good measure.",
      "path": "src/test/key_tests.cpp",
      "position": 9,
      "original_position": 1,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "9afa2c9e50370b2918377f3f3eac0950a4296ec0",
      "in_reply_to_id": 1702146553,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, good point.",
      "created_at": "2024-08-05T09:38:36Z",
      "updated_at": "2024-08-05T10:34:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1703842444",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703842444"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 300,
      "original_line": 300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703843919",
      "pull_request_review_id": 2218335492,
      "id": 1703843919,
      "node_id": "PRRC_kwDOABII585ljphP",
      "diff_hunk": "@@ -414,9 +414,9 @@ KeyPair::KeyPair(const CKey& key, const uint256* merkle_root)\n     bool success = secp256k1_keypair_create(secp256k1_context_sign, keypair, UCharCast(key.data()));",
      "path": "src/key.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nice adding ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "created_at": "2024-08-05T09:39:39Z",
      "updated_at": "2024-08-05T10:34:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1703843919",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703843919"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 414,
      "original_line": 414,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703856364",
      "pull_request_review_id": 2218335492,
      "id": 1703856364,
      "node_id": "PRRC_kwDOABII585ljsjs",
      "diff_hunk": "@@ -345,4 +346,31 @@ BOOST_AUTO_TEST_CASE(bip341_test_h)\n     BOOST_CHECK(XOnlyPubKey::NUMS_H == H);\n }\n \n+BOOST_AUTO_TEST_CASE(key_schnorr_tweak_smoke_test)\n+{\n+    // Sanity check to ensure we get the same tweak using CPubKey vs secp256k1 functions\n+    secp256k1_context* secp256k1_context_sign = secp256k1_context_create(SECP256K1_CONTEXT_SIGN);\n+\n+    CKey key;\n+    key.MakeNewKey(true);\n+    uint256 merkle_root = InsecureRand256();\n+\n+    // secp256k1 functions\n+    secp256k1_keypair keypair;\n+    BOOST_CHECK(secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(key.begin())));\n+    secp256k1_xonly_pubkey pubkey_old;\n+    BOOST_CHECK(secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey_old, nullptr, &keypair));\n+    unsigned char pubkey_bytes_old[32];\n+    BOOST_CHECK(secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes_old, &pubkey_old));\n+    uint256 tweak_old = XOnlyPubKey(pubkey_bytes_old).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);",
      "path": "src/test/key_tests.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "a10ecc45fae4ee1e514c3b2deac793f18a10d0e4",
      "in_reply_to_id": 1686762705,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The other `XOnlyPubKey` constructor is just stripping the `2...32` bytes of the `CPubKey` and calling the same constructor called with `xonly_bytes`.",
      "created_at": "2024-08-05T09:49:01Z",
      "updated_at": "2024-08-05T10:34:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1703856364",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703856364"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 365,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703949451",
      "pull_request_review_id": 2218713576,
      "id": 1703949451,
      "node_id": "PRRC_kwDOABII585lkDSL",
      "diff_hunk": "@@ -345,4 +346,31 @@ BOOST_AUTO_TEST_CASE(bip341_test_h)\n     BOOST_CHECK(XOnlyPubKey::NUMS_H == H);\n }\n \n+BOOST_AUTO_TEST_CASE(key_schnorr_tweak_smoke_test)\n+{\n+    // Sanity check to ensure we get the same tweak using CPubKey vs secp256k1 functions\n+    secp256k1_context* secp256k1_context_sign = secp256k1_context_create(SECP256K1_CONTEXT_SIGN);",
      "path": "src/test/key_tests.cpp",
      "position": 42,
      "original_position": 15,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "5d507a0091da1b6c013b00b6c76e19dd4d3b93a7",
      "in_reply_to_id": 1703724186,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah, nice! Good catch. Will change if I end up retouching.",
      "created_at": "2024-08-05T11:08:59Z",
      "updated_at": "2024-08-05T11:08:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1703949451",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703949451"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 365,
      "original_line": 352,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703952236",
      "pull_request_review_id": 2218718036,
      "id": 1703952236,
      "node_id": "PRRC_kwDOABII585lkD9s",
      "diff_hunk": "@@ -345,4 +346,31 @@ BOOST_AUTO_TEST_CASE(bip341_test_h)\n     BOOST_CHECK(XOnlyPubKey::NUMS_H == H);\n }\n \n+BOOST_AUTO_TEST_CASE(key_schnorr_tweak_smoke_test)\n+{\n+    // Sanity check to ensure we get the same tweak using CPubKey vs secp256k1 functions\n+    secp256k1_context* secp256k1_context_sign = secp256k1_context_create(SECP256K1_CONTEXT_SIGN);",
      "path": "src/test/key_tests.cpp",
      "position": 42,
      "original_position": 15,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "5d507a0091da1b6c013b00b6c76e19dd4d3b93a7",
      "in_reply_to_id": 1703724186,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If you do that, please change other usages as well",
      "created_at": "2024-08-05T11:11:29Z",
      "updated_at": "2024-08-05T11:11:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1703952236",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703952236"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 365,
      "original_line": 352,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703961024",
      "pull_request_review_id": 2218732676,
      "id": 1703961024,
      "node_id": "PRRC_kwDOABII585lkGHA",
      "diff_hunk": "@@ -425,16 +406,39 @@ void CExtKey::Decode(const unsigned char code[BIP32_EXTKEY_SIZE]) {\n     if ((nDepth == 0 && (nChild != 0 || ReadLE32(vchFingerprint) != 0)) || code[41] != 0) key = CKey();\n }\n \n-KeyPair::KeyPair(const CKey& key)\n+KeyPair::KeyPair(const CKey& key, const uint256* merkle_root)\n {\n     static_assert(std::tuple_size<KeyType>() == sizeof(secp256k1_keypair));\n     MakeKeyPairData();\n     auto keypair = reinterpret_cast<secp256k1_keypair*>(m_keypair->data());\n-\n     bool success = secp256k1_keypair_create(secp256k1_context_sign, keypair, UCharCast(key.data()));\n+    if (success && merkle_root) {\n+        secp256k1_xonly_pubkey pubkey;\n+        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, keypair)) return;\n+        unsigned char pubkey_bytes[32];\n+        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 58,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "cebb08b121ce8c4c5e68bd043b8668c106e31169",
      "in_reply_to_id": 1703823064,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not sure if this is still applicable after the change in the last commit to replace the if branches with asserts, but will take a look and updated if I end up needing to retouch.",
      "created_at": "2024-08-05T11:19:19Z",
      "updated_at": "2024-08-05T11:19:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1703961024",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703961024"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": 416,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 419,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703978780",
      "pull_request_review_id": 2218762596,
      "id": 1703978780,
      "node_id": "PRRC_kwDOABII585lkKcc",
      "diff_hunk": "@@ -345,4 +346,31 @@ BOOST_AUTO_TEST_CASE(bip341_test_h)\n     BOOST_CHECK(XOnlyPubKey::NUMS_H == H);\n }\n \n+BOOST_AUTO_TEST_CASE(key_schnorr_tweak_smoke_test)\n+{\n+    // Sanity check to ensure we get the same tweak using CPubKey vs secp256k1 functions\n+    secp256k1_context* secp256k1_context_sign = secp256k1_context_create(SECP256K1_CONTEXT_SIGN);\n+\n+    CKey key;\n+    key.MakeNewKey(true);\n+    uint256 merkle_root = InsecureRand256();\n+\n+    // secp256k1 functions\n+    secp256k1_keypair keypair;\n+    BOOST_CHECK(secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(key.begin())));\n+    secp256k1_xonly_pubkey pubkey_old;\n+    BOOST_CHECK(secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey_old, nullptr, &keypair));\n+    unsigned char pubkey_bytes_old[32];\n+    BOOST_CHECK(secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes_old, &pubkey_old));\n+    uint256 tweak_old = XOnlyPubKey(pubkey_bytes_old).ComputeTapTweakHash(merkle_root.IsNull() ? nullptr : &merkle_root);",
      "path": "src/test/key_tests.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "a10ecc45fae4ee1e514c3b2deac793f18a10d0e4",
      "in_reply_to_id": 1686762705,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Agree the code paths are very similar but I think the same argument as https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1702771127 applies here (admittedly much weaker).",
      "created_at": "2024-08-05T11:34:27Z",
      "updated_at": "2024-08-05T11:34:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1703978780",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703978780"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 365,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703994782",
      "pull_request_review_id": 2218789477,
      "id": 1703994782,
      "node_id": "PRRC_kwDOABII585lkOWe",
      "diff_hunk": "@@ -345,4 +346,31 @@ BOOST_AUTO_TEST_CASE(bip341_test_h)\n     BOOST_CHECK(XOnlyPubKey::NUMS_H == H);\n }\n \n+BOOST_AUTO_TEST_CASE(key_schnorr_tweak_smoke_test)\n+{\n+    // Sanity check to ensure we get the same tweak using CPubKey vs secp256k1 functions\n+    secp256k1_context* secp256k1_context_sign = secp256k1_context_create(SECP256K1_CONTEXT_SIGN);",
      "path": "src/test/key_tests.cpp",
      "position": 42,
      "original_position": 15,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "5d507a0091da1b6c013b00b6c76e19dd4d3b93a7",
      "in_reply_to_id": 1703724186,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah, did a quick grep and it looks there is at least one other place in the fuzz tests where `_SIGN` is used, so this one is probably best as a follow up PR to replace all instances with `_NONE` in the codebase and perhaps add a mention to the developer notes.",
      "created_at": "2024-08-05T11:49:01Z",
      "updated_at": "2024-08-05T11:49:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1703994782",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703994782"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 365,
      "original_line": 352,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705843010",
      "pull_request_review_id": 2221804572,
      "id": 1705843010,
      "node_id": "PRRC_kwDOABII585lrRlC",
      "diff_hunk": "@@ -345,4 +346,31 @@ BOOST_AUTO_TEST_CASE(bip341_test_h)\n     BOOST_CHECK(XOnlyPubKey::NUMS_H == H);\n }\n \n+BOOST_AUTO_TEST_CASE(key_schnorr_tweak_smoke_test)\n+{\n+    // Sanity check to ensure we get the same tweak using CPubKey vs secp256k1 functions\n+    secp256k1_context* secp256k1_context_sign = secp256k1_context_create(SECP256K1_CONTEXT_SIGN);\n+\n+    CKey key;\n+    key.MakeNewKey(true);",
      "path": "src/test/key_tests.cpp",
      "position": 45,
      "original_position": 18,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "5d507a0091da1b6c013b00b6c76e19dd4d3b93a7",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit, if you have to retouch:\r\n```suggestion\r\n    CKey key = GenerateRandomKey();\r\n```",
      "created_at": "2024-08-06T16:46:36Z",
      "updated_at": "2024-08-06T17:59:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1705843010",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705843010"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": 367,
      "original_start_line": 354,
      "start_side": "RIGHT",
      "line": 368,
      "original_line": 355,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705899285",
      "pull_request_review_id": 2221804572,
      "id": 1705899285,
      "node_id": "PRRC_kwDOABII585lrfUV",
      "diff_hunk": "@@ -345,4 +346,31 @@ BOOST_AUTO_TEST_CASE(bip341_test_h)\n     BOOST_CHECK(XOnlyPubKey::NUMS_H == H);\n }\n \n+BOOST_AUTO_TEST_CASE(key_schnorr_tweak_smoke_test)\n+{\n+    // Sanity check to ensure we get the same tweak using CPubKey vs secp256k1 functions\n+    secp256k1_context* secp256k1_context_sign = secp256k1_context_create(SECP256K1_CONTEXT_SIGN);\n+\n+    CKey key;\n+    key.MakeNewKey(true);\n+    uint256 merkle_root = InsecureRand256();\n+\n+    // secp256k1 functions\n+    secp256k1_keypair keypair;\n+    BOOST_CHECK(secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(key.begin())));\n+    secp256k1_xonly_pubkey xonly_pubkey;\n+    BOOST_CHECK(secp256k1_keypair_xonly_pub(secp256k1_context_sign, &xonly_pubkey, nullptr, &keypair));\n+    unsigned char xonly_bytes[32];\n+    BOOST_CHECK(secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, xonly_bytes, &xonly_pubkey));\n+    uint256 tweak_old = XOnlyPubKey(xonly_bytes).ComputeTapTweakHash(&merkle_root);\n+\n+    // CPubKey\n+    CPubKey pubkey = key.GetPubKey();\n+    uint256 tweak_new = XOnlyPubKey(pubkey).ComputeTapTweakHash(&merkle_root);",
      "path": "src/test/key_tests.cpp",
      "position": 59,
      "original_position": 32,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "5d507a0091da1b6c013b00b6c76e19dd4d3b93a7",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think this effectively only tests that given a certain private key, the same `XOnlyPubKey` objects result with both used methods (once via the secp256k1 keypair functions, once with `.GetPubKey()`). So strictly speaking computing and comparing the tweak hashes on top of that isn't needed and could be removed, but no strong feelings about that, as it also doesn't hurt. (Seems like this was already discussed in https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1702774488 ff., so feel free to ignore).",
      "created_at": "2024-08-06T17:38:19Z",
      "updated_at": "2024-08-06T17:59:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1705899285",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705899285"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": 378,
      "original_start_line": 365,
      "start_side": "RIGHT",
      "line": 382,
      "original_line": 369,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705917794",
      "pull_request_review_id": 2221804572,
      "id": 1705917794,
      "node_id": "PRRC_kwDOABII585lrj1i",
      "diff_hunk": "@@ -414,9 +414,9 @@ KeyPair::KeyPair(const CKey& key, const uint256* merkle_root)\n     bool success = secp256k1_keypair_create(secp256k1_context_sign, keypair, UCharCast(key.data()));\n     if (success && merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, keypair)) return;\n         unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return;\n+        assert(secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, keypair));\n+        assert(secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey));",
      "path": "src/key.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: AFAIR, for a long time we preferred to store the return value in a `ret` boolean and assert only on that (see e.g. `$ git grep ret.*secp256k1` vs `$ git grep assert.*secp256k1`), but not sure if we still have a developer guideline like \"don't use assert with side-effects\" in place (I think we once had, and removed it, so this way seems to be fine.)",
      "created_at": "2024-08-06T17:55:09Z",
      "updated_at": "2024-08-06T17:59:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1705917794",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705917794"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": 418,
      "original_start_line": 418,
      "start_side": "RIGHT",
      "line": 419,
      "original_line": 419,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706546530",
      "pull_request_review_id": 2223084991,
      "id": 1706546530,
      "node_id": "PRRC_kwDOABII585lt9Vi",
      "diff_hunk": "@@ -345,4 +346,31 @@ BOOST_AUTO_TEST_CASE(bip341_test_h)\n     BOOST_CHECK(XOnlyPubKey::NUMS_H == H);\n }\n \n+BOOST_AUTO_TEST_CASE(key_schnorr_tweak_smoke_test)\n+{\n+    // Sanity check to ensure we get the same tweak using CPubKey vs secp256k1 functions\n+    secp256k1_context* secp256k1_context_sign = secp256k1_context_create(SECP256K1_CONTEXT_SIGN);\n+\n+    CKey key;\n+    key.MakeNewKey(true);\n+    uint256 merkle_root = InsecureRand256();\n+\n+    // secp256k1 functions\n+    secp256k1_keypair keypair;\n+    BOOST_CHECK(secp256k1_keypair_create(secp256k1_context_sign, &keypair, UCharCast(key.begin())));\n+    secp256k1_xonly_pubkey xonly_pubkey;\n+    BOOST_CHECK(secp256k1_keypair_xonly_pub(secp256k1_context_sign, &xonly_pubkey, nullptr, &keypair));\n+    unsigned char xonly_bytes[32];\n+    BOOST_CHECK(secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, xonly_bytes, &xonly_pubkey));\n+    uint256 tweak_old = XOnlyPubKey(xonly_bytes).ComputeTapTweakHash(&merkle_root);\n+\n+    // CPubKey\n+    CPubKey pubkey = key.GetPubKey();\n+    uint256 tweak_new = XOnlyPubKey(pubkey).ComputeTapTweakHash(&merkle_root);",
      "path": "src/test/key_tests.cpp",
      "position": 59,
      "original_position": 32,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "5d507a0091da1b6c013b00b6c76e19dd4d3b93a7",
      "in_reply_to_id": 1705899285,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This was the result of a change that was reverted since, where it was important to test the exact before/after structure.",
      "created_at": "2024-08-07T07:49:13Z",
      "updated_at": "2024-08-07T07:49:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1706546530",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706546530"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": 378,
      "original_start_line": 365,
      "start_side": "RIGHT",
      "line": 382,
      "original_line": 369,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706563939",
      "pull_request_review_id": 2223157774,
      "id": 1706563939,
      "node_id": "PRRC_kwDOABII585luBlj",
      "diff_hunk": "@@ -414,9 +414,9 @@ KeyPair::KeyPair(const CKey& key, const uint256* merkle_root)\n     bool success = secp256k1_keypair_create(secp256k1_context_sign, keypair, UCharCast(key.data()));\n     if (success && merkle_root) {\n         secp256k1_xonly_pubkey pubkey;\n-        if (!secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, keypair)) return;\n         unsigned char pubkey_bytes[32];\n-        if (!secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey)) return;\n+        assert(secp256k1_keypair_xonly_pub(secp256k1_context_sign, &pubkey, nullptr, keypair));\n+        assert(secp256k1_xonly_pubkey_serialize(secp256k1_context_sign, pubkey_bytes, &pubkey));",
      "path": "src/key.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "original_commit_id": "ec973dd19719541dbcd6f3a6facf6f5dd7cf439c",
      "in_reply_to_id": 1705917794,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We've had something like that before: https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1681077911\r\n\r\nBut it was ambiguous, as to whether it can fail or not during execution as we can see here:\r\nhttps://github.com/hebasto/bitcoin/blob/master/src/pubkey.cpp#L345-L350 or https://github.com/hebasto/bitcoin/blob/master/src/secp256k1/src/secp256k1.c#L685\r\n\r\nBut @josibake argued that they cannot fail at that point - if they do it's a bug, but we didn't want to ignore the return values either. So we ended up asserting, like we did in [GetPubKey](https://github.com/hebasto/bitcoin/blob/master/src/key.cpp#L188) already.",
      "created_at": "2024-08-07T08:01:34Z",
      "updated_at": "2024-08-07T08:01:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30051#discussion_r1706563939",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706563939"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30051"
        }
      },
      "start_line": 418,
      "original_start_line": 418,
      "start_side": "RIGHT",
      "line": 419,
      "original_line": 419,
      "side": "RIGHT"
    }
  ]
}