{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490",
    "id": 2233880448,
    "node_id": "PR_kwDOABII586FJk-A",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31490",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31490.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31490.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31490",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31490/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/223081ece651dc616ff63d9ac447eedc5c2a28fa",
    "number": 31490,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "refactor: inline `UndoWriteToDisk` and `WriteBlockToDisk` to reduce serialization calls",
    "user": {
      "login": "l0rinc",
      "id": 1841944,
      "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l0rinc",
      "html_url": "https://github.com/l0rinc",
      "followers_url": "https://api.github.com/users/l0rinc/followers",
      "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
      "organizations_url": "https://api.github.com/users/l0rinc/orgs",
      "repos_url": "https://api.github.com/users/l0rinc/repos",
      "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/l0rinc/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "`UndoWriteToDisk` and `WriteBlockToDisk` were delegating a subset of their functionality to single-use methods that didn't optimally capture a meaningful chunk of the algorithm, resulting in calculating things twice (serialized size, header size).\r\nThis change inlines the awkward methods (asserting that all previous behavior was retained), and in separate commits makes the usages less confusing.\r\nBesides making the methods slightly more intuitive, the refactorings reduce duplicate calculations as well.\r\n\r\nThe speed difference is insignificant for now (~0.5% for the new `SaveBlockToDiskBench`), but are a cleanup for follow-ups such as https://github.com/bitcoin/bitcoin/pull/31539",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      }
    ],
    "created_at": "2024-12-13T13:52:01Z",
    "updated_at": "2025-01-19T18:03:37Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "d083f4a2036ca1512ea613269b82d1550ea3e925",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "l0rinc:l0rinc/undo",
      "ref": "l0rinc/undo",
      "sha": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 674169038,
        "node_id": "R_kgDOKC8Azg",
        "name": "bitcoin",
        "full_name": "l0rinc/bitcoin",
        "owner": {
          "login": "l0rinc",
          "id": 1841944,
          "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/l0rinc",
          "html_url": "https://github.com/l0rinc",
          "followers_url": "https://api.github.com/users/l0rinc/followers",
          "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
          "organizations_url": "https://api.github.com/users/l0rinc/orgs",
          "repos_url": "https://api.github.com/users/l0rinc/repos",
          "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/l0rinc/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/l0rinc/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/l0rinc/bitcoin",
        "archive_url": "https://api.github.com/repos/l0rinc/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/l0rinc/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/l0rinc/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/l0rinc/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/l0rinc/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/l0rinc/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/l0rinc/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/l0rinc/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/l0rinc/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/l0rinc/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/l0rinc/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/l0rinc/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/l0rinc/bitcoin/events",
        "forks_url": "https://api.github.com/repos/l0rinc/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/l0rinc/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/l0rinc/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/l0rinc/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/l0rinc/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/l0rinc/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/l0rinc/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/l0rinc/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/l0rinc/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/l0rinc/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/l0rinc/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/l0rinc/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/l0rinc/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/l0rinc/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/l0rinc/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/l0rinc/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:l0rinc/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/l0rinc/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/l0rinc/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/l0rinc/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/l0rinc/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/l0rinc/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/l0rinc/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/l0rinc/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/l0rinc/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/l0rinc/bitcoin/hooks",
        "svn_url": "https://github.com/l0rinc/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 252584,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-01-19T17:34:13Z",
        "created_at": "2023-08-03T09:49:12Z",
        "updated_at": "2024-07-18T12:40:18Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "66aa6a47bd8efd7e0448319c74be3ee62caa777a",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36570,
        "stargazers_count": 81499,
        "watchers_count": 81499,
        "size": 274383,
        "default_branch": "master",
        "open_issues_count": 700,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-01-17T14:11:36Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-01-19T17:52:33Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 179,
    "deletions": 204,
    "changed_files": 20,
    "commits": 7,
    "review_comments": 46,
    "comments": 8
  },
  "events": [
    {
      "event": "commented",
      "id": 2541510975,
      "node_id": "IC_kwDOABII586XfGE_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2541510975",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-13T13:52:05Z",
      "updated_at": "2025-01-19T18:01:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/31490.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [ryanofsky](https://github.com/bitcoin/bitcoin/pull/31490#pullrequestreview-2540290494), [hodlinator](https://github.com/bitcoin/bitcoin/pull/31490#pullrequestreview-2542174622), [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/31490#pullrequestreview-2549773423), [andrewtoth](https://github.com/bitcoin/bitcoin/pull/31490#pullrequestreview-2561056791) |\n| Concept ACK | [BrandonOdiwuor](https://github.com/bitcoin/bitcoin/pull/31490#pullrequestreview-2511904911), [theuni](https://github.com/bitcoin/bitcoin/pull/31490#issuecomment-2552134696) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#31551](https://github.com/bitcoin/bitcoin/pull/31551) (optimization: bulk reads(27%)/writes(290%) in [undo]block [de]serialization, 6% faster IBD by l0rinc)\n* [#31539](https://github.com/bitcoin/bitcoin/pull/31539) (optimization: buffer reads(23%)/writes(290%) in [undo]block [de]serialization, 6% faster IBD by l0rinc)\n* [#31533](https://github.com/bitcoin/bitcoin/pull/31533) (fuzz: Add fuzz target for block index tree and related validation events by mzumsande)\n* [#31144](https://github.com/bitcoin/bitcoin/pull/31144) (optimization: batch XOR operations 12% faster IBD by l0rinc)\n* [#29641](https://github.com/bitcoin/bitcoin/pull/29641) (scripted-diff: Use LogInfo over LogPrintf [WIP, NOMERGE, DRAFT] by maflcko)\n* [#29307](https://github.com/bitcoin/bitcoin/pull/29307) (util: explicitly close all AutoFiles that have been written by vasild)\n* [#26966](https://github.com/bitcoin/bitcoin/pull/26966) (index: initial sync speedup, parallelize process by furszy)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#issuecomment-2541510975",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31490"
    },
    {
      "event": "labeled",
      "id": 15649110903,
      "node_id": "LE_lADOABII586jOXsgzwAAAAOkwnt3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15649110903",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-13T13:52:08Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "commented",
      "id": 2541534181,
      "node_id": "IC_kwDOABII586XfLvl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2541534181",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-13T14:04:05Z",
      "updated_at": "2024-12-13T14:04:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#issuecomment-2541534181",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31490"
    },
    {
      "event": "reviewed",
      "id": 2502858986,
      "node_id": "PRR_kwDOABII586VLpjq",
      "url": null,
      "actor": null,
      "commit_id": "e913e773926ecb72e327acf60c68655b5611cb7a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nShould we not prefer the more modern and explicit `uint32_t` vs `unsigned int`?",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#pullrequestreview-2502858986",
      "submitted_at": "2024-12-13T18:04:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15661178712,
      "node_id": "HRFPE_lADOABII586jOXsgzwAAAAOlep9Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15661178712",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d69766164d177707ec7be19c4c188bd79ba3e4a3",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/d69766164d177707ec7be19c4c188bd79ba3e4a3",
      "created_at": "2024-12-15T14:29:24Z"
    },
    {
      "event": "commented",
      "id": 2543895583,
      "node_id": "IC_kwDOABII586XoMQf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2543895583",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-15T14:30:25Z",
      "updated_at": "2024-12-15T20:19:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "> prefer the more modern and explicit uint32_t\r\n\r\nI was hoping someone will recommend that - done: https://github.com/bitcoin/bitcoin/compare/e913e773926ecb72e327acf60c68655b5611cb7a..d69766164d177707ec7be19c4c188bd79ba3e4a3\r\n\r\nEdit: Added block size calculation deduplication as well to the PR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#issuecomment-2543895583",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31490"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15661993071,
      "node_id": "HRFPE_lADOABII586jOXsgzwAAAAOlhwxv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15661993071",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5fd6b3f0fdfd09cb2c0620aa6ae3b3065d948e4f",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/5fd6b3f0fdfd09cb2c0620aa6ae3b3065d948e4f",
      "created_at": "2024-12-15T20:16:51Z"
    },
    {
      "event": "renamed",
      "id": 15661993355,
      "node_id": "RTE_lADOABII586jOXsgzwAAAAOlhw2L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15661993355",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-15T20:17:01Z",
      "rename": {
        "from": "refactor: Cache blockundo serialized size for consecutive calls",
        "to": "refactor: Cache block[undo] serialized size for consecutive calls"
      }
    },
    {
      "event": "reviewed",
      "id": 2507653645,
      "node_id": "PRR_kwDOABII586Vd8IN",
      "url": null,
      "actor": null,
      "commit_id": "5fd6b3f0fdfd09cb2c0620aa6ae3b3065d948e4f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#pullrequestreview-2507653645",
      "submitted_at": "2024-12-17T01:08:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
    },
    {
      "event": "reviewed",
      "id": 2508402873,
      "node_id": "PRR_kwDOABII586VgzC5",
      "url": null,
      "actor": null,
      "commit_id": "a50f9d71529c5873cd3b41d8dc472dcc8f4cbb3f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Not sure about the changes.\r\n\r\nWhat is the goal? Is this an optimization? If yes, how can it be observed?\r\n\r\nAlso, the changes seem to be based on a misunderstanding of the log and check macros.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#pullrequestreview-2508402873",
      "submitted_at": "2024-12-17T10:06:00Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15683834797,
      "node_id": "HRFPE_lADOABII586jOXsgzwAAAAOm1FOt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15683834797",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9a7e1ced7c3bb17193c7401181365c4075d45ec2",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/9a7e1ced7c3bb17193c7401181365c4075d45ec2",
      "created_at": "2024-12-17T10:37:23Z"
    },
    {
      "event": "renamed",
      "id": 15683837367,
      "node_id": "RTE_lADOABII586jOXsgzwAAAAOm1F23",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15683837367",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-17T10:37:36Z",
      "rename": {
        "from": "refactor: Cache block[undo] serialized size for consecutive calls",
        "to": "optimization: Cache block[undo] serialized size for consecutive calls"
      }
    },
    {
      "event": "reviewed",
      "id": 2509562827,
      "node_id": "PRR_kwDOABII586VlOPL",
      "url": null,
      "actor": null,
      "commit_id": "9a7e1ced7c3bb17193c7401181365c4075d45ec2",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 9a7e1ced7c3bb17193c7401181365c4075d45ec2. This seems like a safer, more efficient approach, but I still think the API is very confusing.\r\n\r\nNo need to address here, but for a followup I think it would make more sense for  WriteBlockToDisk instead of SaveBlockToDisk call FindNextBlockPos, and for UndoWriteToDisk instead of WriteUndoDataForBlock to be call FindUndoPos, so higher level SaveBlockToDisk / WriteUndoDataForBlock functions don't contain any logic dealing with header fields.\r\n\r\nI also find names of these functions to be inconsistent, overlong and confusing. Would rename:\r\n\r\n- SaveBlockToDisk to SaveBlock\r\n- WriteBlockToDisk to WriteBlock\r\n- WriteUndoDataForBlock to SaveBlockUndo\r\n- UndoWriteToDisk to WriteBlockUndo",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#pullrequestreview-2509562827",
      "submitted_at": "2024-12-17T17:32:05Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
    },
    {
      "event": "review_requested",
      "id": 15690136560,
      "node_id": "RRE_lADOABII586jOXsgzwAAAAOnNHvw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15690136560",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-17T17:32:09Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 15690136700,
      "node_id": "RRE_lADOABII586jOXsgzwAAAAOnNHx8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15690136700",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-17T17:32:10Z",
      "requested_reviewer": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15702418506,
      "node_id": "HRFPE_lADOABII586jOXsgzwAAAAOn7-RK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15702418506",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a730402ab7e13afd2f3252423f94a6dd2c86cfb3",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/a730402ab7e13afd2f3252423f94a6dd2c86cfb3",
      "created_at": "2024-12-18T12:15:21Z"
    },
    {
      "event": "reviewed",
      "id": 2511692729,
      "node_id": "PRR_kwDOABII586VtWO5",
      "url": null,
      "actor": null,
      "commit_id": "a730402ab7e13afd2f3252423f94a6dd2c86cfb3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "concept ack, if this improves a benchmark. In the future, it would be good to mention a speedup in the pull request description, so that reviewers can see the motivation and goal for the change.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#pullrequestreview-2511692729",
      "submitted_at": "2024-12-18T12:33:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15703407790,
      "node_id": "HRFPE_lADOABII586jOXsgzwAAAAOn_vyu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15703407790",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3ff1b2ce8484d4e5b2d3870a28d1042f2d94c1de",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/3ff1b2ce8484d4e5b2d3870a28d1042f2d94c1de",
      "created_at": "2024-12-18T13:34:34Z"
    },
    {
      "event": "referenced",
      "id": 15703472697,
      "node_id": "REFE_lADOABII586jOXsgzwAAAAOn__o5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15703472697",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fe49ecea669f0d9bf7b682252a34476ee020c386",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/fe49ecea669f0d9bf7b682252a34476ee020c386",
      "created_at": "2024-12-18T13:39:37Z"
    },
    {
      "event": "reviewed",
      "id": 2511904911,
      "node_id": "PRR_kwDOABII586VuKCP",
      "url": null,
      "actor": null,
      "commit_id": "3ff1b2ce8484d4e5b2d3870a28d1042f2d94c1de",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#pullrequestreview-2511904911",
      "submitted_at": "2024-12-18T13:54:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
    },
    {
      "event": "commented",
      "id": 2552134696,
      "node_id": "IC_kwDOABII586YHnwo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2552134696",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-18T19:43:44Z",
      "updated_at": "2024-12-18T19:43:44Z",
      "author_association": "MEMBER",
      "body": "> concept ack, if this improves a benchmark. In the future, it would be good to mention a speedup in the pull request description, so that reviewers can see the motivation and goal for the change.\r\n\r\nAgree with this. If this actually shows up as significant in real workloads (IBD), concept ACK and we could potentially take this further by caching the size even earlier (as part of deserializing over the wire) to avoid the need for the calculation at all.\r\n\r\nBut if there's no noticeable speedup, I'm not a fan of muddying the api.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#issuecomment-2552134696",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31490"
    },
    {
      "event": "commented",
      "id": 2552147789,
      "node_id": "IC_kwDOABII586YHq9N",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2552147789",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-18T19:51:33Z",
      "updated_at": "2024-12-19T11:10:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "> If this actually shows up as significant in real workloads\r\n\r\nThanks for the reviews, I'm running full IBD benchmarks currently, we'll see the results shortly (can't just do a quick reindex-chainstate since the changes are undo and block writing related).\r\n\r\nI have two other changes in queue that will be based on this refactor (https://github.com/bitcoin/bitcoin/pull/31539 and https://github.com/bitcoin/bitcoin/pull/31144, which I've drafted until these are sorted).\r\nThe 3 changes together seem to result in >5% speedup for IBD (every kind, regardless of dbcache or prunedness) - but those benchmarks are also still running.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#issuecomment-2552147789",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31490"
    },
    {
      "event": "renamed",
      "id": 15718266170,
      "node_id": "RTE_lADOABII586jOXsgzwAAAAOo4bU6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15718266170",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-19T13:13:28Z",
      "rename": {
        "from": "optimization: Cache block[undo] serialized size for consecutive calls",
        "to": "optimization: cache block[undo] serialized size for consecutive calls"
      }
    },
    {
      "event": "commented",
      "id": 2553915546,
      "node_id": "IC_kwDOABII586YOaia",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2553915546",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-19T13:17:13Z",
      "updated_at": "2024-12-19T13:17:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "> we could potentially take this further by caching the size even earlier\r\n\r\nAbsolutely, but that's a bigger change (would cache the serialized sizes in `CBlock`, guarding against any other mutation (which requires better encapsulation), storing `GetSerializeSize` for `TX_NO_WITNESS()` and `TX_WITH_WITNESS()` lazily, similarly to the existing `checked*` flags)... but that's a big change, affecting a lot of consensus code, I'm still working on that and will push in a separate PR.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#issuecomment-2553915546",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31490"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15725890609,
      "node_id": "HRFPE_lADOABII586jOXsgzwAAAAOpVgwx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15725890609",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "92abdde7bb97a4410af7e24086d3ce38cf36dc45",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/92abdde7bb97a4410af7e24086d3ce38cf36dc45",
      "created_at": "2024-12-19T22:13:19Z"
    },
    {
      "event": "renamed",
      "id": 15725893726,
      "node_id": "RTE_lADOABII586jOXsgzwAAAAOpVhhe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15725893726",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-19T22:13:31Z",
      "rename": {
        "from": "optimization: cache block[undo] serialized size for consecutive calls",
        "to": "refactor: cache block[undo] serialized size for consecutive calls"
      }
    },
    {
      "event": "commented",
      "id": 2555874634,
      "node_id": "IC_kwDOABII586YV41K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2555874634",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-19T22:21:56Z",
      "updated_at": "2024-12-22T13:05:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "@maflcko, @theuni, the reindex and IBD didn't show any speedup, so I've added a `SaveBlockToDiskBench` microbenchmark which only revealed a tiny speedup in itself, so I've demoted this from an optimization to a refactoring.\r\nThis PR is now meant as a cleanup for follow-ups such as https://github.com/bitcoin/bitcoin/pull/31539 and https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2558426619 where the total IBD speedup (until 870k blocks) is 12% - and `ReadBlockFromDiskBench` benchmark is 2x faster and `SaveBlockToDiskBench` goes from 190.67 op/s to 1,529.59 op/s (8x).\r\n\r\nI wanted to split this from https://github.com/bitcoin/bitcoin/pull/31144 to reduce risk, but if you think it's easier to review them in a single PR, I don't mind.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#issuecomment-2555874634",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31490"
    },
    {
      "event": "mentioned",
      "id": 15725957511,
      "node_id": "MEE_lADOABII586jOXsgzwAAAAOpVxGH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15725957511",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-19T22:21:58Z"
    },
    {
      "event": "subscribed",
      "id": 15725957528,
      "node_id": "SE_lADOABII586jOXsgzwAAAAOpVxGY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15725957528",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-19T22:21:58Z"
    },
    {
      "event": "mentioned",
      "id": 15725957552,
      "node_id": "MEE_lADOABII586jOXsgzwAAAAOpVxGw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15725957552",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-19T22:21:58Z"
    },
    {
      "event": "subscribed",
      "id": 15725957563,
      "node_id": "SE_lADOABII586jOXsgzwAAAAOpVxG7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15725957563",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-19T22:21:58Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15797703041,
      "node_id": "HRFPE_lADOABII586jOXsgzwAAAAOtndGB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15797703041",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0dd386994bafd67081c4521673018ddd22e2d63c",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/0dd386994bafd67081c4521673018ddd22e2d63c",
      "created_at": "2025-01-02T11:10:28Z"
    },
    {
      "event": "reviewed",
      "id": 2530457024,
      "node_id": "PRR_kwDOABII586W07XA",
      "url": null,
      "actor": null,
      "commit_id": "0dd386994bafd67081c4521673018ddd22e2d63c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#pullrequestreview-2530457024",
      "submitted_at": "2025-01-04T08:36:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15815378296,
      "node_id": "HRFPE_lADOABII586jOXsgzwAAAAOuq4V4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15815378296",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2ff0ea366c61b2fcb80ad1f711480915c7a7aa2e",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/2ff0ea366c61b2fcb80ad1f711480915c7a7aa2e",
      "created_at": "2025-01-04T12:07:37Z"
    },
    {
      "event": "reviewed",
      "id": 2534307845,
      "node_id": "PRR_kwDOABII586XDngF",
      "url": null,
      "actor": null,
      "commit_id": "2ff0ea366c61b2fcb80ad1f711480915c7a7aa2e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK cba4378072a6bd43f3e37a7d5e662d3041681566\r\n\r\nRemoves repetitive calls to `GetSerializeSize()`. And avoids calling `.tell()`.\r\n\r\nNothing blocking.\r\n\r\n\r\n### PR summary\r\n\r\nRepetitive mention of #31539.\r\n\r\n\r\n### Commit history\r\n\r\nTested splitting up 96c9b578a6b85fac9977cdf25bf2e52d04645bd4 into one which refactors existing code (225d294070fc403e03028b9fab714bd9dc4f3307), and a second commit (61a7254e1b3d4b5159ffcab6e1096da32dc1ace0) which renames the file and adds `SaveBlockBench()`. Keeping the changes small in the rename-commit means that Git clients correctly show it as a rename instead of add+delete.\r\n\r\n#### Current PR\r\n\r\n```\r\n₿ git -c log.showSignature=false log --oneline --follow readwriteblock.cpp\r\n2ff0ea366c (HEAD -> pr/31490) scripted-diff: rename block and undo functions for consistency\r\n96c9b578a6 bench: add SaveBlockBench\r\n```\r\n\r\n#### With suggested splitting of commit 96c9b578a6b85fac9977cdf25bf2e52d04645bd4\r\n\r\n```\r\n₿ git -c log.showSignature=false log --oneline --follow readwriteblock.cpp\r\n9eba6eae8b (HEAD -> pr/31490_suggestions, myfork/pr/31490_suggestions) scripted-diff: rename block and undo functions for consistency\r\n61a7254e1b bench: add SaveBlockBench\r\n225d294070 refactor,bench: Stop calling benchmarks test, etc\r\nfaecca9a85 test: Use span for raw data\r\nfab0e834b8 bench: [refactor] iwyu\r\nd9e477c4dc validation, blockstorage: Separate code paths for reindex and saving new blocks\r\n1c4b9cbe90 bench: add readblock benchmark\r\n```",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#pullrequestreview-2534307845",
      "submitted_at": "2025-01-07T14:58:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
    },
    {
      "event": "reviewed",
      "id": 2537328922,
      "node_id": "PRR_kwDOABII586XPJEa",
      "url": null,
      "actor": null,
      "commit_id": "2ff0ea366c61b2fcb80ad1f711480915c7a7aa2e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 2ff0ea366c61b2fcb80ad1f711480915c7a7aa2e. New version of this PR is different and I think easier to follow than the previous version. All the changes now seem like obvious code cleanups.\r\n\r\nMight consider renaming PR from \"cache block[undo] serialized size\" because I'm not sure it's even accurate to call not pointlessly recomputing the same values twice in a row \"caching\".",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#pullrequestreview-2537328922",
      "submitted_at": "2025-01-08T16:18:12Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
    },
    {
      "event": "review_requested",
      "id": 15856591970,
      "node_id": "RRE_lADOABII586jOXsgzwAAAAOxIGRi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15856591970",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-08T16:18:17Z",
      "requested_reviewer": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 15856592111,
      "node_id": "RRE_lADOABII586jOXsgzwAAAAOxIGTv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15856592111",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-08T16:18:17Z",
      "requested_reviewer": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 15856592276,
      "node_id": "RRE_lADOABII586jOXsgzwAAAAOxIGWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15856592276",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-08T16:18:18Z",
      "requested_reviewer": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 15856592575,
      "node_id": "RRE_lADOABII586jOXsgzwAAAAOxIGa_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15856592575",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-08T16:18:20Z",
      "requested_reviewer": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "renamed",
      "id": 15866349829,
      "node_id": "RTE_lADOABII586jOXsgzwAAAAOxtUkF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15866349829",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-09T11:07:06Z",
      "rename": {
        "from": "refactor: cache block[undo] serialized size for consecutive calls",
        "to": "refactor: inline `UndoWriteToDisk` and `WriteBlockToDisk` to reduce serialization calls"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM0ZjlhMDE1N2FhZDdjMTBhYzM2NGI3ZTQ2MDJjNWY3NGMxZjllMjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34f9a0157aad7c10ac364b7e4602c5f74c1f9e20",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/34f9a0157aad7c10ac364b7e4602c5f74c1f9e20",
      "tree": {
        "sha": "113ce083f1cfb42a0c42f71df2a6fdebfc9d0bd7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/113ce083f1cfb42a0c42f71df2a6fdebfc9d0bd7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/228aba2c4d9ac0b2ca3edd3c2cdf0a92e55f669b",
          "sha": "228aba2c4d9ac0b2ca3edd3c2cdf0a92e55f669b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/228aba2c4d9ac0b2ca3edd3c2cdf0a92e55f669b"
        }
      ],
      "message": "refactor,bench: rename bench/readblock.cpp to bench/readwriteblock.cpp\n\nDone in separate commit to simplify review.\nAlso renames benchmarks, since they're not strictly tests.\n\nCo-authored-by: Hodlinator <172445034+hodlinator@users.noreply.github.com>",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-01-09T11:48:46Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-01-09T11:41:44Z"
      },
      "sha": "34f9a0157aad7c10ac364b7e4602c5f74c1f9e20"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg2Yjg1YmIxMWY4OTk5ZWI1OWUzNGJkMDI2YjA3OTFkYzg2NmYyZWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/86b85bb11f8999eb59e34bd026b0791dc866f2eb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/86b85bb11f8999eb59e34bd026b0791dc866f2eb",
      "tree": {
        "sha": "32e6fec780ea358fabdd2349b01394e013a5ff43",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/32e6fec780ea358fabdd2349b01394e013a5ff43"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34f9a0157aad7c10ac364b7e4602c5f74c1f9e20",
          "sha": "34f9a0157aad7c10ac364b7e4602c5f74c1f9e20",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/34f9a0157aad7c10ac364b7e4602c5f74c1f9e20"
        }
      ],
      "message": "bench: add SaveBlockBench",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-01-09T11:54:58Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-01-09T11:42:01Z"
      },
      "sha": "86b85bb11f8999eb59e34bd026b0791dc866f2eb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQyYmM0OTE0NjU4ZDk4MzRhNjUzYmQxNzYzYWE4ZjBkNTQzNTU0ODA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/42bc4914658d9834a653bd1763aa8f0d54355480",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/42bc4914658d9834a653bd1763aa8f0d54355480",
      "tree": {
        "sha": "3f86fbf6fb6ae87105c70bb642f2836d2abb38be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3f86fbf6fb6ae87105c70bb642f2836d2abb38be"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/86b85bb11f8999eb59e34bd026b0791dc866f2eb",
          "sha": "86b85bb11f8999eb59e34bd026b0791dc866f2eb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/86b85bb11f8999eb59e34bd026b0791dc866f2eb"
        }
      ],
      "message": "refactor,blocks: inline `UndoWriteToDisk`\n\n`UndoWriteToDisk` wasn't really extracting a meaningful subset of the `WriteUndoDataForBlock` functionality, it's tied closely to the only caller (needs the header size twice, recalculated undo serializes size, returns multiple branches, modifies parameter, needs documentation).\n\nThe inlined code should only differ in these parts (modernization will be done in other commits):\n* renamed `_pos` to `pos` in `WriteUndoDataForBlock` to match the parameter name;\n* inlined `hashBlock` parameter usage into `hasher << block.pprev->GetBlockHash()`;\n* changed `return false` to `return FatalError`;\n* capitalize comment.\n\nCo-authored-by: Ryan Ofsky <ryan@ofsky.org>",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-01-09T12:18:22Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-12-18T11:38:55Z"
      },
      "sha": "42bc4914658d9834a653bd1763aa8f0d54355480"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRmYjJmOWQwMDQ4NjBjOTVmYzZmMGQ0YTAxNmE5YzAzOGQ1M2E0NzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dfb2f9d004860c95fc6f0d4a016a9c038d53a475",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/dfb2f9d004860c95fc6f0d4a016a9c038d53a475",
      "tree": {
        "sha": "41acd8ecce206e208d0c644587abaca8307b8aee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/41acd8ecce206e208d0c644587abaca8307b8aee"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/42bc4914658d9834a653bd1763aa8f0d54355480",
          "sha": "42bc4914658d9834a653bd1763aa8f0d54355480",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/42bc4914658d9834a653bd1763aa8f0d54355480"
        }
      ],
      "message": "refactor,blocks: inline `WriteBlockToDisk`\n\nSimilarly, `WriteBlockToDisk` wasn't really extracting a meaningful subset of the `SaveBlockToDisk` functionality, it's tied closely to the only caller (needs the header size twice, recalculated block serializes size, returns multiple branches, mutates parameter).\n\nThe inlined code should only differ in these parts (modernization will be done in other commits):\n* renamed `blockPos` to `pos` in `SaveBlockToDisk` to match the parameter name;\n* changed `return false` to `return FlatFilePos()`.\n\nAlso removed remaining references to `SaveBlockToDisk`.\n\nCo-authored-by: Ryan Ofsky <ryan@ofsky.org>",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-01-09T12:24:53Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-12-18T11:44:31Z"
      },
      "sha": "dfb2f9d004860c95fc6f0d4a016a9c038d53a475"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15867666422,
      "node_id": "HRFPE_lADOABII586jOXsgzwAAAAOxyV_2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15867666422",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e25f0292117bce2e9f82240a4bfe86cc91e2f6c2",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/e25f0292117bce2e9f82240a4bfe86cc91e2f6c2",
      "created_at": "2025-01-09T13:02:41Z"
    },
    {
      "event": "commented",
      "id": 2580109368,
      "node_id": "IC_kwDOABII586ZyVg4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2580109368",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-09T13:05:29Z",
      "updated_at": "2025-01-09T14:18:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks a lot for the reviews, I've pushed [these changes](https://github.com/bitcoin/bitcoin/compare/2ff0ea366c61b2fcb80ad1f711480915c7a7aa2e..223081ece651dc616ff63d9ac447eedc5c2a28fa):\r\n* changed title and commit messages to reflect the new purpose of refactoring and code cleanup;\r\n* removed repetitive mention of follow-up;\r\n* split benchmark renaming into a separate diff to ease review;\r\n* replaced temporary assert to static_assert (with todos to help the reviewers);\r\n* added assertion to the scripted diff to make sure the new names don't exist yet;\r\n* changed `SaveBlock[Undo]` replacements to `WriteBlock[Undo]` in the scripted diff;\r\n* unified type sizes in new code to `unsigned int`;\r\n* reverted comments that were used to group code parts.\r\n\r\n\r\n",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#issuecomment-2580109368",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31490"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhMzlmMjdhMGY4YjhkMTRmNjc2OWQ0OGY0Mzk5OWEzYTExNDhlNGY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa39f27a0f8b8d14f6769d48f43999a3a1148e4f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa39f27a0f8b8d14f6769d48f43999a3a1148e4f",
      "tree": {
        "sha": "e0a6c445f803a064b0c99c64387fad002b835ad9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e0a6c445f803a064b0c99c64387fad002b835ad9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dfb2f9d004860c95fc6f0d4a016a9c038d53a475",
          "sha": "dfb2f9d004860c95fc6f0d4a016a9c038d53a475",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/dfb2f9d004860c95fc6f0d4a016a9c038d53a475"
        }
      ],
      "message": "refactor,blocks: deduplicate block's serialized size calculations\n\nFor consistency `UNDO_DATA_DISK_OVERHEAD` was also extracted to avoid the constant's ambiguity.\nAsserts were added to help with the review - they are removed in the next commit.\n\nCo-authored-by: Ryan Ofsky <ryan@ofsky.org>",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-01-09T14:16:28Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-12-18T11:29:25Z"
      },
      "sha": "fa39f27a0f8b8d14f6769d48f43999a3a1148e4f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJhYWEzYjI4NDY3MWJhMjhkYmJjYmI0Mzg1MWVhNDYxNzVmZDJiMTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/baaa3b284671ba28dbbcbb43851ea46175fd2b13",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/baaa3b284671ba28dbbcbb43851ea46175fd2b13",
      "tree": {
        "sha": "58f19ee9f4248eb1ab1001a7f562a50293c75d29",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/58f19ee9f4248eb1ab1001a7f562a50293c75d29"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa39f27a0f8b8d14f6769d48f43999a3a1148e4f",
          "sha": "fa39f27a0f8b8d14f6769d48f43999a3a1148e4f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa39f27a0f8b8d14f6769d48f43999a3a1148e4f"
        }
      ],
      "message": "refactor,blocks: remove costly asserts and modernize affected logs\n\nWhen the behavior was changes in a previous commit (caching `GetSerializeSize` and avoiding `AutoFile.tell`), (static)asserts were added to make sure the behavior was kept - to make sure reviewers and CI validates it.\nWe can safely remove them now.\n\nLogs were also slightly modernized since they were trivial to do.\n\nCo-authored-by: Anthony Towns <aj@erisian.com.au>\nCo-authored-by: Hodlinator <172445034+hodlinator@users.noreply.github.com>",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-01-09T14:16:49Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-12-18T11:57:25Z"
      },
      "sha": "baaa3b284671ba28dbbcbb43851ea46175fd2b13"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIyMzA4MWVjZTY1MWRjNjE2ZmY2M2Q5YWM0NDdlZWRjNWMyYTI4ZmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "tree": {
        "sha": "e0177d98566a443d6f773b638915a07a22ee5b78",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e0177d98566a443d6f773b638915a07a22ee5b78"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/baaa3b284671ba28dbbcbb43851ea46175fd2b13",
          "sha": "baaa3b284671ba28dbbcbb43851ea46175fd2b13",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/baaa3b284671ba28dbbcbb43851ea46175fd2b13"
        }
      ],
      "message": "scripted-diff: rename block and undo functions for consistency\n\nCo-authored-by: Ryan Ofsky <ryan@ofsky.org>\nCo-authored-by: Hodlinator <172445034+hodlinator@users.noreply.github.com>\n\n-BEGIN VERIFY SCRIPT-\ngrep -r -wE 'WriteBlock|ReadRawBlock|ReadBlock|WriteBlockUndo|ReadBlockUndo' $(git ls-files src/ ':!src/leveldb') && \\\n    echo \"Error: One or more target names already exist!\" && exit 1\nsed -i \\\n    -e 's/\\bSaveBlockToDisk/WriteBlock/g' \\\n    -e 's/\\bReadRawBlockFromDisk/ReadRawBlock/g' \\\n    -e 's/\\bReadBlockFromDisk/ReadBlock/g' \\\n    -e 's/\\bWriteUndoDataForBlock/WriteBlockUndo/g' \\\n    -e 's/\\bUndoReadFromDisk/ReadBlockUndo/g' \\\n    $(git ls-files src/ ':!src/leveldb')\n-END VERIFY SCRIPT-",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-01-09T14:17:02Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-01-09T12:31:19Z"
      },
      "sha": "223081ece651dc616ff63d9ac447eedc5c2a28fa"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15868667260,
      "node_id": "HRFPE_lADOABII586jOXsgzwAAAAOx2KV8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15868667260",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "created_at": "2025-01-09T14:17:34Z"
    },
    {
      "event": "reviewed",
      "id": 2540290494,
      "node_id": "PRR_kwDOABII586XacG-",
      "url": null,
      "actor": null,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 223081ece651dc616ff63d9ac447eedc5c2a28fa. Since last review, \"Save\" was renamed to \"Write\", uint32_t references were dropped, some log statements and comments were improved as suggested, and a lot of tweaks made to commits and commit messages which should make this easier to review.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#pullrequestreview-2540290494",
      "submitted_at": "2025-01-09T15:58:56Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
    },
    {
      "event": "reviewed",
      "id": 2540328217,
      "node_id": "PRR_kwDOABII586XalUZ",
      "url": null,
      "actor": null,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#pullrequestreview-2540328217",
      "submitted_at": "2025-01-09T16:01:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
    },
    {
      "event": "review_requested",
      "id": 15870244810,
      "node_id": "RRE_lADOABII586jOXsgzwAAAAOx8LfK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15870244810",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-09T16:09:38Z",
      "requested_reviewer": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2542174622,
      "node_id": "PRR_kwDOABII586XhoGe",
      "url": null,
      "actor": null,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 223081ece651dc616ff63d9ac447eedc5c2a28fa\r\n\r\nThanks for reorganizing the first commits!\r\nConfirmed that `git -c log.showSignature=false log --oneline --follow src/bench/readwriteblock.cpp` shows 7 commits.\r\n\r\nCool with the sanity-check in the scripted diff, not sure I've seen that before.\r\n\r\n\r\n### Commit message dfb2f9d004860c95fc6f0d4a016a9c038d53a475\r\n\r\nMight add some more context:\r\n\"Similarly +to `UndoWriteToDisk` in parent commit+, `WriteBlockToDisk` wasn't really extracting\"\r\n\r\n\r\n### Commit message 42bc4914658d9834a653bd1763aa8f0d54355480\r\n\r\n(What's the inspiration for all the semicolons? Doesn't appear to be one of the uses described here: https://grammarist.com/punctuation/how-to-use-semicolons-in-a-list/)\r\n\r\n\r\n### Benchmarked with new bench target\r\n\r\n```\r\n₿ build/src/bench/bench_bitcoin -filter=SaveBlockBench -min-time=10000\r\n```\r\n\r\n#### At second commit (86b85bb11f8999eb59e34bd026b0791dc866f2eb)\r\n\r\n```\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|        3,172,375.74 |              315.22 |    0.6% |   20,053,788.28 |    9,071,225.51 |  2.211 |   3,133,287.73 |    0.5% |     11.12 | `SaveBlockBench`\r\n```\r\n\r\n(Median result of 3 runs).\r\n\r\n#### At final commit (223081ece651dc616ff63d9ac447eedc5c2a28fa)\r\n\r\n```\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|        3,159,241.92 |              316.53 |    1.4% |   19,805,232.51 |    8,963,495.75 |  2.210 |   3,080,238.64 |    0.4% |     11.08 | `SaveBlockBench`\r\n```\r\n\r\n(Median result of 3 runs).\r\n\r\n#### Conclusion\r\n\r\nUnfortunately this confirms that serializing blocks is insanely fast, making this PR more of a refactor than an optimization.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#pullrequestreview-2542174622",
      "submitted_at": "2025-01-10T13:55:12Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
    },
    {
      "event": "reviewed",
      "id": 2549773423,
      "node_id": "PRR_kwDOABII586X-nRv",
      "url": null,
      "actor": null,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 223081ece651dc616ff63d9ac447eedc5c2a28fa\r\n\r\nI don't see a change in the runtime of the benchmarks, but these are some good refactors that I have wanted for some time.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#pullrequestreview-2549773423",
      "submitted_at": "2025-01-14T13:54:23Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
    },
    {
      "event": "reviewed",
      "id": 2561056791,
      "node_id": "PRR_kwDOABII586YpqAX",
      "url": null,
      "actor": null,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#pullrequestreview-2561056791",
      "submitted_at": "2025-01-19T18:01:28Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1887765453",
      "pull_request_review_id": 2507653645,
      "id": 1887765453,
      "node_id": "PRRC_kwDOABII585whQPN",
      "diff_hunk": "@@ -679,8 +679,8 @@ bool BlockManager::UndoWriteToDisk(const CBlockUndo& blockundo, FlatFilePos& pos\n     }\n \n     // Write index header\n-    unsigned int nSize = GetSerializeSize(blockundo);\n-    fileout << GetParams().MessageStart() << nSize;\n+    Assume(blockundo_size == GetSerializeSize(blockundo));",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "5fd6b3f0fdfd09cb2c0620aa6ae3b3065d948e4f",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Calling `Assume(x)` always fully evaluates `x`, so there's no saving here... The only thing `Assume()` does differently in release mode is that it doesn't abort.",
      "created_at": "2024-12-17T01:08:01Z",
      "updated_at": "2024-12-17T01:08:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1887765453",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1887765453"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 682,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1888122048",
      "pull_request_review_id": 2508207497,
      "id": 1888122048,
      "node_id": "PRRC_kwDOABII585winTA",
      "diff_hunk": "@@ -679,8 +679,8 @@ bool BlockManager::UndoWriteToDisk(const CBlockUndo& blockundo, FlatFilePos& pos\n     }\n \n     // Write index header\n-    unsigned int nSize = GetSerializeSize(blockundo);\n-    fileout << GetParams().MessageStart() << nSize;\n+    Assume(blockundo_size == GetSerializeSize(blockundo));",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "5fd6b3f0fdfd09cb2c0620aa6ae3b3065d948e4f",
      "in_reply_to_id": 1887765453,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Damn, you're right, thank you!\r\nPushed a [separate commit](https://github.com/bitcoin/bitcoin/compare/5fd6b3f0fdfd09cb2c0620aa6ae3b3065d948e4f..a50f9d71529c5873cd3b41d8dc472dcc8f4cbb3f) that removes the `Assume`s (this way the reviewers and CI can make sure the values are the same before/after) - plus found another debug log that has a similar problem, snuck it into this PR as well.\r\n\r\n<details>\r\n<summary>Test</summary>\r\n\r\n> mkdir demo && cmake -B build -DCMAKE_BUILD_TYPE=Debug && cmake --build build -j$(nproc) && build/src/bitcoind -datadir=demo\r\n\r\n```C++\r\nstatic bool test()\r\n{\r\n    std::cout << \"Assume was called!\" << std::endl;\r\n    return false;\r\n}\r\n\r\nstatic auto InitBlocksdirXorKey(const BlockManager::Options& opts)\r\n{\r\n    Assume(test());\r\n...\r\n```\r\n\r\nprints in both cases, fails only with `Debug`\r\n\r\n</details>",
      "created_at": "2024-12-17T08:48:12Z",
      "updated_at": "2024-12-17T08:50:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1888122048",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1888122048"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 682,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1888235421",
      "pull_request_review_id": 2508402873,
      "id": 1888235421,
      "node_id": "PRRC_kwDOABII585wjC-d",
      "diff_hunk": "@@ -167,7 +167,9 @@ ReadStatus PartiallyDownloadedBlock::InitData(const CBlockHeaderAndShortTxIDs& c\n             break;\n     }\n \n-    LogDebug(BCLog::CMPCTBLOCK, \"Initialized PartiallyDownloadedBlock for block %s using a cmpctblock of size %lu\\n\", cmpctblock.header.GetHash().ToString(), GetSerializeSize(cmpctblock));\n+    if (LogAcceptCategory(BCLog::CMPCTBLOCK, BCLog::Level::Debug)) {\n+        LogDebug(BCLog::CMPCTBLOCK, \"Initialized PartiallyDownloadedBlock for block %s using a cmpctblock of size %lu\\n\", cmpctblock.header.GetHash().ToString(), GetSerializeSize(cmpctblock));\n+    }",
      "path": "src/blockencodings.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "a50f9d71529c5873cd3b41d8dc472dcc8f4cbb3f",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`LogDebug` is already a macro doing exactly that. No need to do the same check twice.",
      "created_at": "2024-12-17T10:03:08Z",
      "updated_at": "2024-12-17T10:06:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1888235421",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1888235421"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 172,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1888289864",
      "pull_request_review_id": 2508495268,
      "id": 1888289864,
      "node_id": "PRRC_kwDOABII585wjQRI",
      "diff_hunk": "@@ -167,7 +167,9 @@ ReadStatus PartiallyDownloadedBlock::InitData(const CBlockHeaderAndShortTxIDs& c\n             break;\n     }\n \n-    LogDebug(BCLog::CMPCTBLOCK, \"Initialized PartiallyDownloadedBlock for block %s using a cmpctblock of size %lu\\n\", cmpctblock.header.GetHash().ToString(), GetSerializeSize(cmpctblock));\n+    if (LogAcceptCategory(BCLog::CMPCTBLOCK, BCLog::Level::Debug)) {\n+        LogDebug(BCLog::CMPCTBLOCK, \"Initialized PartiallyDownloadedBlock for block %s using a cmpctblock of size %lu\\n\", cmpctblock.header.GetHash().ToString(), GetSerializeSize(cmpctblock));\n+    }",
      "path": "src/blockencodings.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "a50f9d71529c5873cd3b41d8dc472dcc8f4cbb3f",
      "in_reply_to_id": 1888235421,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> // Use a macro instead of a function for conditional logging to prevent\r\n> // evaluating arguments when logging for the category is not enabled.\r\n\r\nThanks, dropped the logger related commit. What's the reason for the logger avoiding evaluation but `Assume` not doing it?\r\n\r\n> What is the goal? Is this an optimization?\r\n\r\nAs stated in the description `a costly calculation, we can deduplicate it`. I'll clarify further in the description.\r\n\r\n> If yes, how can it be observed?\r\n\r\nA quick peek can be seen in https://github.com/bitcoin-dev-tools/benchcoin/pull/66, but I'm currently running several full reindex-chainstates to see how much effect it has - previous measurements show 2-3%.",
      "created_at": "2024-12-17T10:36:56Z",
      "updated_at": "2024-12-17T10:36:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1888289864",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1888289864"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 172,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1888919702",
      "pull_request_review_id": 2509562827,
      "id": 1888919702,
      "node_id": "PRRC_kwDOABII585wlqCW",
      "diff_hunk": "@@ -175,7 +175,7 @@ class BlockManager\n      * After this call, it will point to the beginning of the serialized CBlock data, after the separator fields\n      * (BLOCK_SERIALIZATION_HEADER_SIZE)\n      */\n-    bool WriteBlockToDisk(const CBlock& block, FlatFilePos& pos) const;\n+    bool WriteBlockToDisk(const CBlock& block, uint32_t block_size, FlatFilePos& pos) const;",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 5,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "0cb15046b039d0e6efd2b57075bade46e1a10237",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: Cache block serialized size for consecutive calls\" (0cb15046b039d0e6efd2b57075bade46e1a10237)\r\n\r\nWould be good to document new `WriteBlockToDisk` `block_size` and `UndoWriteToDisk` `blockundo_size` arguments to clarify how they relate to the `pos` argument. Specifically it would be good to say that size arguments should be set to the size of data without the header, but the `pos` argument will increase by size of the data plus the header.",
      "created_at": "2024-12-17T17:16:50Z",
      "updated_at": "2024-12-17T17:32:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1888919702",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1888919702"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 178,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1889496948",
      "pull_request_review_id": 2510605624,
      "id": 1889496948,
      "node_id": "PRRC_kwDOABII585wn290",
      "diff_hunk": "@@ -679,8 +679,8 @@ bool BlockManager::UndoWriteToDisk(const CBlockUndo& blockundo, FlatFilePos& pos\n     }\n \n     // Write index header\n-    unsigned int nSize = GetSerializeSize(blockundo);\n-    fileout << GetParams().MessageStart() << nSize;\n+    Assume(blockundo_size == GetSerializeSize(blockundo));",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "5fd6b3f0fdfd09cb2c0620aa6ae3b3065d948e4f",
      "in_reply_to_id": 1887765453,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Calling `Assume(x)` always fully evaluates `x`, so there's no saving here... The only thing `Assume()` does differently in release mode is that it doesn't abort.\r\n\r\nI thought this wasn't the case if `x` can be determined by the compiler to have no side effects?\r\n\r\nIn any case https://github.com/bitcoin/bitcoin/issues/31178 shows that one shouldn't treat  `assume(x)` as a no-op that can be placed in a hot path for free.",
      "created_at": "2024-12-18T02:07:53Z",
      "updated_at": "2024-12-18T02:08:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1889496948",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1889496948"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 682,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1890142276",
      "pull_request_review_id": 2511662408,
      "id": 1890142276,
      "node_id": "PRRC_kwDOABII585wqUhE",
      "diff_hunk": "@@ -175,7 +175,7 @@ class BlockManager\n      * After this call, it will point to the beginning of the serialized CBlock data, after the separator fields\n      * (BLOCK_SERIALIZATION_HEADER_SIZE)\n      */\n-    bool WriteBlockToDisk(const CBlock& block, FlatFilePos& pos) const;\n+    bool WriteBlockToDisk(const CBlock& block, uint32_t block_size, FlatFilePos& pos) const;",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 5,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "0cb15046b039d0e6efd2b57075bade46e1a10237",
      "in_reply_to_id": 1888919702,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I tried doing that, but noticed that all variants were awkward.\r\nRealized that the code smell is caused by extracting a part of the write methods that isn't a meaningful subset of the functionality: it's tied closely to the only caller (needs the header size twice, recalculated undo serializes size, returns multiple branches, modifies parameter, needs documentation).\r\nSo I've recreated the PR completely, inlining these single-use methods, which also solves the serialization size calculations more naturally.",
      "created_at": "2024-12-18T12:15:49Z",
      "updated_at": "2024-12-18T12:15:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1890142276",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1890142276"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 178,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1890159703",
      "pull_request_review_id": 2511692729,
      "id": 1890159703,
      "node_id": "PRRC_kwDOABII585wqYxX",
      "diff_hunk": "@@ -93,6 +93,7 @@ constexpr T&& inline_assertion_check(LIFETIMEBOUND T&& val, [[maybe_unused]] con\n  * - For fatal errors, use Assert().\n  * - For non-fatal errors in interactive sessions (e.g. RPC or command line\n  *   interfaces), CHECK_NONFATAL() might be more appropriate.\n+ *   Note that the assumption is always fully evaluated - even in non-debug builds.",
      "path": "src/util/check.h",
      "position": null,
      "original_position": 4,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "a730402ab7e13afd2f3252423f94a6dd2c86cfb3",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is part of \"identity function\". A function can not return the value that was passed in without evaluating it. (Having a different return type, depending on build type would also make it harder to use the function).\r\n\r\nIf the docs are worthy to change, it would be good to either change none of them, or all of them in this file for other identity functions as well.",
      "created_at": "2024-12-18T12:30:10Z",
      "updated_at": "2024-12-18T12:33:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1890159703",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1890159703"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1890248424",
      "pull_request_review_id": 2511853284,
      "id": 1890248424,
      "node_id": "PRRC_kwDOABII585wqubo",
      "diff_hunk": "@@ -93,6 +93,7 @@ constexpr T&& inline_assertion_check(LIFETIMEBOUND T&& val, [[maybe_unused]] con\n  * - For fatal errors, use Assert().\n  * - For non-fatal errors in interactive sessions (e.g. RPC or command line\n  *   interfaces), CHECK_NONFATAL() might be more appropriate.\n+ *   Note that the assumption is always fully evaluated - even in non-debug builds.",
      "path": "src/util/check.h",
      "position": null,
      "original_position": 4,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "a730402ab7e13afd2f3252423f94a6dd2c86cfb3",
      "in_reply_to_id": 1890159703,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Since `Assume` is a macro, it could have been written differently to avoid parameter evaluation (similarly to `LogDebug`), so I think it needs a comment.\r\nBut I'm fine doing it in a different PR is this is remotely controversial.",
      "created_at": "2024-12-18T13:33:22Z",
      "updated_at": "2024-12-18T13:33:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1890248424",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1890248424"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1890258247",
      "pull_request_review_id": 2511870014,
      "id": 1890258247,
      "node_id": "PRRC_kwDOABII585wqw1H",
      "diff_hunk": "@@ -679,8 +679,8 @@ bool BlockManager::UndoWriteToDisk(const CBlockUndo& blockundo, FlatFilePos& pos\n     }\n \n     // Write index header\n-    unsigned int nSize = GetSerializeSize(blockundo);\n-    fileout << GetParams().MessageStart() << nSize;\n+    Assume(blockundo_size == GetSerializeSize(blockundo));",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "5fd6b3f0fdfd09cb2c0620aa6ae3b3065d948e4f",
      "in_reply_to_id": 1887765453,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Migrated the doc update to https://github.com/bitcoin/bitcoin/pull/31528",
      "created_at": "2024-12-18T13:40:32Z",
      "updated_at": "2024-12-18T13:40:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1890258247",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1890258247"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 682,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1890258766",
      "pull_request_review_id": 2511870806,
      "id": 1890258766,
      "node_id": "PRRC_kwDOABII585wqw9O",
      "diff_hunk": "@@ -93,6 +93,7 @@ constexpr T&& inline_assertion_check(LIFETIMEBOUND T&& val, [[maybe_unused]] con\n  * - For fatal errors, use Assert().\n  * - For non-fatal errors in interactive sessions (e.g. RPC or command line\n  *   interfaces), CHECK_NONFATAL() might be more appropriate.\n+ *   Note that the assumption is always fully evaluated - even in non-debug builds.",
      "path": "src/util/check.h",
      "position": null,
      "original_position": 4,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "a730402ab7e13afd2f3252423f94a6dd2c86cfb3",
      "in_reply_to_id": 1890159703,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Migrated it to https://github.com/bitcoin/bitcoin/pull/31528",
      "created_at": "2024-12-18T13:40:52Z",
      "updated_at": "2024-12-18T13:40:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1890258766",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1890258766"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1890260767",
      "pull_request_review_id": 2511874134,
      "id": 1890260767,
      "node_id": "PRRC_kwDOABII585wqxcf",
      "diff_hunk": "@@ -93,6 +93,7 @@ constexpr T&& inline_assertion_check(LIFETIMEBOUND T&& val, [[maybe_unused]] con\n  * - For fatal errors, use Assert().\n  * - For non-fatal errors in interactive sessions (e.g. RPC or command line\n  *   interfaces), CHECK_NONFATAL() might be more appropriate.\n+ *   Note that the assumption is always fully evaluated - even in non-debug builds.",
      "path": "src/util/check.h",
      "position": null,
      "original_position": 4,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "a730402ab7e13afd2f3252423f94a6dd2c86cfb3",
      "in_reply_to_id": 1890159703,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@l0rinc The point is that `Assume(x)` and `x` have the same behavior, apart from error detection. So if the expression `x` has side-effects, and the error condition does not occur, debug (e.g., fuzz) builds and release builds will behave identically.\r\n\r\nOf course, if the expression `x` is simple enough that the compiler *knows* it has no side effects, the optimizer will just remove it in non-debug builds, so for such expressions, you get the best of both worlds: no runtime penalty, but still a guarantee that release and debug builds behave identically (modulo compiler bugs).\r\n\r\nLastly, `Assume(x)` is an expression, not a statement. You can use it like `if (!Assume(x != nullptr)) { ... }`. This isn't possible to avoid evaluating.",
      "created_at": "2024-12-18T13:42:15Z",
      "updated_at": "2024-12-18T13:42:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1890260767",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1890260767"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1890275427",
      "pull_request_review_id": 2511898632,
      "id": 1890275427,
      "node_id": "PRRC_kwDOABII585wq1Bj",
      "diff_hunk": "@@ -93,6 +93,7 @@ constexpr T&& inline_assertion_check(LIFETIMEBOUND T&& val, [[maybe_unused]] con\n  * - For fatal errors, use Assert().\n  * - For non-fatal errors in interactive sessions (e.g. RPC or command line\n  *   interfaces), CHECK_NONFATAL() might be more appropriate.\n+ *   Note that the assumption is always fully evaluated - even in non-debug builds.",
      "path": "src/util/check.h",
      "position": null,
      "original_position": 4,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "a730402ab7e13afd2f3252423f94a6dd2c86cfb3",
      "in_reply_to_id": 1890159703,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thank you for clarifying.\r\nBut given that we've bumped into this multiple times, do you think https://github.com/bitcoin/bitcoin/pull/31528 isn't a valid change?",
      "created_at": "2024-12-18T13:52:25Z",
      "updated_at": "2024-12-18T13:52:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1890275427",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1890275427"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1902837379",
      "pull_request_review_id": 2530457024,
      "id": 1902837379,
      "node_id": "PRRC_kwDOABII585xav6D",
      "diff_hunk": "@@ -123,7 +123,7 @@ bool CoinStatsIndex::CustomAppend(const interfaces::BlockInfo& block)\n         // pindex variable gives indexing code access to node internals. It\n         // will be removed in upcoming commit\n         const CBlockIndex* pindex = WITH_LOCK(cs_main, return m_chainstate->m_blockman.LookupBlockIndex(block.hash));\n-        if (!m_chainstate->m_blockman.UndoReadFromDisk(block_undo, *pindex)) {\n+        if (!m_chainstate->m_blockman.UndoRead(block_undo, *pindex)) {",
      "path": "src/index/coinstatsindex.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "0dd386994bafd67081c4521673018ddd22e2d63c",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit 0dd386994bafd67081c4521673018ddd22e2d63c\r\n\r\nCan we call this `ReadBlockUndo` instead?",
      "created_at": "2025-01-04T08:36:11Z",
      "updated_at": "2025-01-04T08:36:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1902837379",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1902837379"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1903089183",
      "pull_request_review_id": 2530728045,
      "id": 1903089183,
      "node_id": "PRRC_kwDOABII585xbtYf",
      "diff_hunk": "@@ -123,7 +123,7 @@ bool CoinStatsIndex::CustomAppend(const interfaces::BlockInfo& block)\n         // pindex variable gives indexing code access to node internals. It\n         // will be removed in upcoming commit\n         const CBlockIndex* pindex = WITH_LOCK(cs_main, return m_chainstate->m_blockman.LookupBlockIndex(block.hash));\n-        if (!m_chainstate->m_blockman.UndoReadFromDisk(block_undo, *pindex)) {\n+        if (!m_chainstate->m_blockman.UndoRead(block_undo, *pindex)) {",
      "path": "src/index/coinstatsindex.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "0dd386994bafd67081c4521673018ddd22e2d63c",
      "in_reply_to_id": 1902837379,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That was inconsistent, indeed - [fixed](https://github.com/bitcoin/bitcoin/compare/0dd386994bafd67081c4521673018ddd22e2d63c..2ff0ea366c61b2fcb80ad1f711480915c7a7aa2e)!",
      "created_at": "2025-01-04T12:07:46Z",
      "updated_at": "2025-01-04T12:07:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1903089183",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1903089183"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905437524",
      "pull_request_review_id": 2534307845,
      "id": 1905437524,
      "node_id": "PRRC_kwDOABII585xkqtU",
      "diff_hunk": "@@ -0,0 +1,68 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <bench/data/block413567.raw.h>\n+#include <flatfile.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <serialize.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <memory>\n+#include <vector>\n+\n+CBlock CreateTestBlock()",
      "path": "src/bench/readwriteblock.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "2ff0ea366c61b2fcb80ad1f711480915c7a7aa2e",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:\r\n```suggestion\r\nstatic CBlock CreateTestBlock()\r\n```",
      "created_at": "2025-01-07T13:13:17Z",
      "updated_at": "2025-01-07T14:58:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1905437524",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905437524"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905456335",
      "pull_request_review_id": 2534307845,
      "id": 1905456335,
      "node_id": "PRRC_kwDOABII585xkvTP",
      "diff_hunk": "@@ -963,70 +936,65 @@ bool BlockManager::FindUndoPos(BlockValidationState& state, int nFile, FlatFileP\n     return true;\n }\n \n-bool BlockManager::WriteBlockToDisk(const CBlock& block, FlatFilePos& pos) const\n-{\n-    // Open history file to append\n-    AutoFile fileout{OpenBlockFile(pos)};\n-    if (fileout.IsNull()) {\n-        LogError(\"%s: OpenBlockFile failed\\n\", __func__);\n-        return false;\n-    }\n-\n-    // Write index header\n-    unsigned int nSize = GetSerializeSize(TX_WITH_WITNESS(block));\n-    fileout << GetParams().MessageStart() << nSize;\n-\n-    // Write block\n-    long fileOutPos = fileout.tell();\n-    pos.nPos = (unsigned int)fileOutPos;\n-    fileout << TX_WITH_WITNESS(block);\n-\n-    return true;\n-}\n-\n-bool BlockManager::WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)\n+bool BlockManager::SaveBlockUndo(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)\n {\n     AssertLockHeld(::cs_main);\n     const BlockfileType type = BlockfileTypeForHeight(block.nHeight);\n     auto& cursor = *Assert(WITH_LOCK(cs_LastBlockFile, return m_blockfile_cursors[type]));\n \n     // Write undo information to disk\n     if (block.GetUndoPos().IsNull()) {\n-        FlatFilePos _pos;\n-        if (!FindUndoPos(state, block.nFile, _pos, ::GetSerializeSize(blockundo) + 40)) {\n+        FlatFilePos pos;\n+        const uint32_t blockundo_size{static_cast<uint32_t>(GetSerializeSize(blockundo))};\n+        if (!FindUndoPos(state, block.nFile, pos, blockundo_size + UNDO_DATA_DISK_OVERHEAD)) {\n             LogError(\"%s: FindUndoPos failed\\n\", __func__);\n             return false;\n         }\n-        if (!UndoWriteToDisk(blockundo, _pos, block.pprev->GetBlockHash())) {\n+        // Open history file to append\n+        AutoFile fileout{OpenUndoFile(pos)};\n+        if (fileout.IsNull()) {\n+            LogError(\"%s: OpenUndoFile failed\\n\", __func__);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 82,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "2ff0ea366c61b2fcb80ad1f711480915c7a7aa2e",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Newer code shouldn't need to explicitly log `__func__` as we have `-logsourcelocations`.\r\n```suggestion\r\n            LogError(\"OpenUndoFile failed\");\r\n```",
      "created_at": "2025-01-07T13:28:50Z",
      "updated_at": "2025-01-07T14:58:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1905456335",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905456335"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 956,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905481382",
      "pull_request_review_id": 2534307845,
      "id": 1905481382,
      "node_id": "PRRC_kwDOABII585xk1am",
      "diff_hunk": "@@ -0,0 +1,68 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <bench/data/block413567.raw.h>\n+#include <flatfile.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <serialize.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <memory>\n+#include <vector>\n+\n+CBlock CreateTestBlock()\n+{\n+    DataStream stream{benchmark::data::block413567};\n+    CBlock block;\n+    stream >> TX_WITH_WITNESS(block);\n+    return block;\n+}\n+\n+static void SaveBlockBench(benchmark::Bench& bench)\n+{\n+    const auto testing_setup{MakeNoLogFileContext<const TestingSetup>(ChainType::MAIN)};\n+    auto& blockman{testing_setup->m_node.chainman->m_blockman};\n+    const CBlock block{CreateTestBlock()};\n+    bench.run([&] {\n+        const auto pos{blockman.SaveBlock(block, 413'567)};\n+        assert(!pos.IsNull());\n+    });\n+}\n+\n+static void ReadBlockBench(benchmark::Bench& bench)\n+{\n+    const auto testing_setup{MakeNoLogFileContext<const TestingSetup>(ChainType::MAIN)};\n+    auto& blockman{testing_setup->m_node.chainman->m_blockman};\n+    const auto pos{blockman.SaveBlock(CreateTestBlock(), 413'567)};\n+    CBlock block;\n+    bench.run([&] {\n+        const auto success{blockman.ReadBlock(block, pos)};\n+        assert(success);\n+    });\n+}\n+\n+static void ReadRawBlockBench(benchmark::Bench& bench)\n+{\n+    const auto testing_setup{MakeNoLogFileContext<const TestingSetup>(ChainType::MAIN)};\n+    auto& blockman{testing_setup->m_node.chainman->m_blockman};\n+    const auto pos{blockman.SaveBlock(CreateTestBlock(), 413'567)};\n+    std::vector<uint8_t> block_data;\n+    blockman.ReadRawBlock(block_data, pos); // warmup\n+    bench.run([&] {\n+        const auto success{blockman.ReadRawBlock(block_data, pos)};\n+        assert(success);\n+    });\n+}\n+\n+BENCHMARK(SaveBlockBench, benchmark::PriorityLevel::HIGH);\n+BENCHMARK(ReadBlockBench, benchmark::PriorityLevel::HIGH);\n+BENCHMARK(ReadRawBlockBench, benchmark::PriorityLevel::HIGH);",
      "path": "src/bench/readwriteblock.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "2ff0ea366c61b2fcb80ad1f711480915c7a7aa2e",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Could add missing newline before EOF.",
      "created_at": "2025-01-07T13:48:01Z",
      "updated_at": "2025-01-07T14:58:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1905481382",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905481382"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905565819",
      "pull_request_review_id": 2534307845,
      "id": 1905565819,
      "node_id": "PRRC_kwDOABII585xlKB7",
      "diff_hunk": "@@ -330,7 +324,7 @@ class BlockManager\n     /** Get block file info entry for one block file */\n     CBlockFileInfo* GetBlockFileInfo(size_t n);\n \n-    bool WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)\n+    bool SaveBlockUndo(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 44,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "2ff0ea366c61b2fcb80ad1f711480915c7a7aa2e",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: \r\n### Terminology\r\n\r\nTo me read/write and save/load are distinct pairs, so `ReadBlock`/`SaveBlock` seems off. Would have preferred `WriteBlockUndo` and `WriteBlock`.\r\n\r\nI liked the explicitness of `ToDisk`/`FromDisk` for cases where that is actually what it's doing, makes code more self-documenting, even if slightly verbose. I see the change was prompted by https://github.com/bitcoin/bitcoin/pull/31490#pullrequestreview-2509562827.\r\n\r\nCould the scripted diff commit message at least include a one-line rationale?",
      "created_at": "2025-01-07T14:48:15Z",
      "updated_at": "2025-01-07T14:58:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1905565819",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905565819"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 327,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905586719",
      "pull_request_review_id": 2534565809,
      "id": 1905586719,
      "node_id": "PRRC_kwDOABII585xlPIf",
      "diff_hunk": "@@ -330,7 +324,7 @@ class BlockManager\n     /** Get block file info entry for one block file */\n     CBlockFileInfo* GetBlockFileInfo(size_t n);\n \n-    bool WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)\n+    bool SaveBlockUndo(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 44,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "2ff0ea366c61b2fcb80ad1f711480915c7a7aa2e",
      "in_reply_to_id": 1905565819,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks @hodlinator!\r\nThe new names were requested by @ryanofsky and @TheCharlatan - I don't have strong feelings about them either way. What do other reviewers think?",
      "created_at": "2025-01-07T15:01:09Z",
      "updated_at": "2025-01-07T15:02:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1905586719",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905586719"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 327,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1907288195",
      "pull_request_review_id": 2537328922,
      "id": 1907288195,
      "node_id": "PRRC_kwDOABII585xruiD",
      "diff_hunk": "@@ -945,7 +945,9 @@ bool BlockManager::WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValid\n     // Write undo information to disk\n     if (block.GetUndoPos().IsNull()) {\n         FlatFilePos pos;\n-        if (!FindUndoPos(state, block.nFile, pos, ::GetSerializeSize(blockundo) + 40)) {\n+        const uint32_t blockundo_size{static_cast<uint32_t>(GetSerializeSize(blockundo))};\n+        assert(UNDO_DATA_DISK_OVERHEAD == 40);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "6e22e55920da33dc8970793f9e6a854eb3faa3c4",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor,blocks: cache block serialized size for consecutive calls\" (6e22e55920da33dc8970793f9e6a854eb3faa3c4)\r\n\r\nSeems like this could be a static assert\r\n\r\nEDIT: but I guess it is removed in the upcoming commit, so doesn't matter too much",
      "created_at": "2025-01-08T14:39:40Z",
      "updated_at": "2025-01-08T16:18:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1907288195",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1907288195"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 949,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1907299844",
      "pull_request_review_id": 2537328922,
      "id": 1907299844,
      "node_id": "PRRC_kwDOABII585xrxYE",
      "diff_hunk": "@@ -945,7 +945,9 @@ bool BlockManager::WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValid\n     // Write undo information to disk\n     if (block.GetUndoPos().IsNull()) {\n         FlatFilePos pos;\n-        if (!FindUndoPos(state, block.nFile, pos, ::GetSerializeSize(blockundo) + 40)) {\n+        const uint32_t blockundo_size{static_cast<uint32_t>(GetSerializeSize(blockundo))};",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "6e22e55920da33dc8970793f9e6a854eb3faa3c4",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor,blocks: cache block serialized size for consecutive calls\" (https://github.com/bitcoin/bitcoin/commit/6e22e55920da33dc8970793f9e6a854eb3faa3c4)\r\n\r\nIMO in new code it would be better to avoid using `uint32_t` and `unsigned int` for sizes and just use `size_t` for consistency and simplicity. static_casts like this could then be avoided except when calling older functions, and could eventually be removed when older functions are updated.\r\n\r\nHowever, if we do want to keep using narrower size types for efficiency or backwards compatibility, I think the correct type to use would be `unsigned int` not `uint32_t`, because `unsigned int` is the type used by existing code, and the type that should be more efficient for whatever platform is being used. `unsigned int` and `size_t` are the two types that are used currently so casting to `uint32_t` introduces a third type and adds unnecessary complexity.",
      "created_at": "2025-01-08T14:47:10Z",
      "updated_at": "2025-01-08T16:18:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1907299844",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1907299844"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 948,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1907322326",
      "pull_request_review_id": 2537328922,
      "id": 1907322326,
      "node_id": "PRRC_kwDOABII585xr23W",
      "diff_hunk": "@@ -1092,33 +1092,24 @@ bool BlockManager::ReadRawBlockFromDisk(std::vector<uint8_t>& block, const FlatF\n \n FlatFilePos BlockManager::SaveBlockToDisk(const CBlock& block, int nHeight)\n {\n-    unsigned int nBlockSize = ::GetSerializeSize(TX_WITH_WITNESS(block));\n-    // Account for the 4 magic message start bytes + the 4 length bytes (8 bytes total,\n-    // defined as BLOCK_SERIALIZATION_HEADER_SIZE)\n-    nBlockSize += static_cast<unsigned int>(BLOCK_SERIALIZATION_HEADER_SIZE);\n-    FlatFilePos pos{FindNextBlockPos(nBlockSize, nHeight, block.GetBlockTime())};\n+    const uint32_t block_size{static_cast<uint32_t>(GetSerializeSize(TX_WITH_WITNESS(block)))};",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "6e22e55920da33dc8970793f9e6a854eb3faa3c4",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor,blocks: cache block serialized size for consecutive calls\" (https://github.com/bitcoin/bitcoin/commit/6e22e55920da33dc8970793f9e6a854eb3faa3c4)\r\n\r\nSame comments here about inappropriate use of uint32_t. IMO, we should prefer `size_t` if trying to modernize code or `unsigned int` if trying to be backwards compatible. If there is really a reason for introducing a third size type, it should be stated and clarified somewhere.",
      "created_at": "2025-01-08T15:01:43Z",
      "updated_at": "2025-01-08T16:18:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1907322326",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1907322326"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1095,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1907341326",
      "pull_request_review_id": 2537328922,
      "id": 1907341326,
      "node_id": "PRRC_kwDOABII585xr7gO",
      "diff_hunk": "@@ -1092,33 +1092,24 @@ bool BlockManager::ReadRawBlockFromDisk(std::vector<uint8_t>& block, const FlatF\n \n FlatFilePos BlockManager::SaveBlockToDisk(const CBlock& block, int nHeight)\n {\n-    unsigned int nBlockSize = ::GetSerializeSize(TX_WITH_WITNESS(block));\n-    // Account for the 4 magic message start bytes + the 4 length bytes (8 bytes total,\n-    // defined as BLOCK_SERIALIZATION_HEADER_SIZE)\n-    nBlockSize += static_cast<unsigned int>(BLOCK_SERIALIZATION_HEADER_SIZE);\n-    FlatFilePos pos{FindNextBlockPos(nBlockSize, nHeight, block.GetBlockTime())};\n+    const uint32_t block_size{static_cast<uint32_t>(GetSerializeSize(TX_WITH_WITNESS(block)))};\n+    FlatFilePos pos{FindNextBlockPos(block_size + BLOCK_SERIALIZATION_HEADER_SIZE, nHeight, block.GetBlockTime())};\n     if (pos.IsNull()) {\n         LogError(\"%s: FindNextBlockPos failed\\n\", __func__);\n         return FlatFilePos();\n     }\n-\n-    // Open history file to append",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "6e22e55920da33dc8970793f9e6a854eb3faa3c4",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor,blocks: cache block serialized size for consecutive calls\" (https://github.com/bitcoin/bitcoin/commit/6e22e55920da33dc8970793f9e6a854eb3faa3c4)\r\n\r\nI don't see a reason to delete the comments from this function. I think they are helpful and it is inconsistent to get rid of these because this commit is not deleting the corresponding comments in the WriteUndoDataForBlock function.\r\n\r\nI particularly think the \"Write index header\" comments in both functions are helpful because they define the \"header\" term that is used elsewhere and make it clear it refers to the (magic constant + size) fields that are output before serialized CBlock and CBlockUndo objects. I think the other deleted comments also helped organize the code and make it legible.",
      "created_at": "2025-01-08T15:08:26Z",
      "updated_at": "2025-01-08T16:18:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1907341326",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1907341326"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1105,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1907413267",
      "pull_request_review_id": 2537328922,
      "id": 1907413267,
      "node_id": "PRRC_kwDOABII585xsNET",
      "diff_hunk": "@@ -330,7 +324,7 @@ class BlockManager\n     /** Get block file info entry for one block file */\n     CBlockFileInfo* GetBlockFileInfo(size_t n);\n \n-    bool WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)\n+    bool SaveBlockUndo(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 44,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "2ff0ea366c61b2fcb80ad1f711480915c7a7aa2e",
      "in_reply_to_id": 1905565819,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"scripted-diff: rename block and undo functions for consistency\" (2ff0ea366c61b2fcb80ad1f711480915c7a7aa2e)\r\n\r\nAgree with hodlinator that Read/Write or Load/Save would now be better than Read/Save. The reason I suggested Save instead of Write in https://github.com/bitcoin/bitcoin/pull/31490#pullrequestreview-250956282 is that previously we had a high level function for writing called Save and lower level functions called Write, but now after 9b59f8b624cc641bd7216ececffa3111041fd760, the lower level functions are dropped, so there's no need to have a naming distinction.\r\n\r\n> I liked the explicitness of ToDisk/FromDisk for cases where that is actually what it's doing, makes code more self-documenting, even if slightly verbose.\r\n\r\nOne reason I think it is good to drop ToDisk/FromDisk suffixes is for consistency. Lots of block storage functions (particularly WriteUndoDataForBlock here) access the disk but don't have \"disk\" in the name so having \"disk\" some places and not others without having a clear rule for where it is used seems likely to lead to misinterpretation and false inferences.\r\n\r\nBut the main reason I think it is good to drop \"disk\" from the names is that the main functions here (the high-level functions called by application code, not the low-level functions called by benchmarks) do not accept any parameters referencing files or disk locations:\r\n\r\n```c++\r\nbool ReadBlock(CBlock& block, const CBlockIndex& index) const;\r\nFlatFilePos SaveBlock(const CBlock& block, int nHeight);\r\nbool ReadBlockUndo(CBlockUndo& blockundo, const CBlockIndex& index) const;\r\nbool SaveBlockUndo(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block);\r\n```\r\n\r\nThese functions don't need to use disk storage, even if that is what they are doing now. They could just as easily be using any type of storage (cloud, mobile, browser, etc).\r\n\r\nHowever, I do think it would be good to call these Read/Write or Load/Save instead of Read/Save. And if we want to add ToDisk/FromDisk suffixes to lower level functions that seems ok as long as it is done consistently.",
      "created_at": "2025-01-08T15:54:11Z",
      "updated_at": "2025-01-08T16:18:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1907413267",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1907413267"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 327,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1908760035",
      "pull_request_review_id": 2539864126,
      "id": 1908760035,
      "node_id": "PRRC_kwDOABII585xxV3j",
      "diff_hunk": "@@ -0,0 +1,68 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <bench/data/block413567.raw.h>\n+#include <flatfile.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <serialize.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <memory>\n+#include <vector>\n+\n+CBlock CreateTestBlock()",
      "path": "src/bench/readwriteblock.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "2ff0ea366c61b2fcb80ad1f711480915c7a7aa2e",
      "in_reply_to_id": 1905437524,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-01-09T13:02:51Z",
      "updated_at": "2025-01-09T13:02:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1908760035",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1908760035"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1908760127",
      "pull_request_review_id": 2539864265,
      "id": 1908760127,
      "node_id": "PRRC_kwDOABII585xxV4_",
      "diff_hunk": "@@ -963,70 +936,65 @@ bool BlockManager::FindUndoPos(BlockValidationState& state, int nFile, FlatFileP\n     return true;\n }\n \n-bool BlockManager::WriteBlockToDisk(const CBlock& block, FlatFilePos& pos) const\n-{\n-    // Open history file to append\n-    AutoFile fileout{OpenBlockFile(pos)};\n-    if (fileout.IsNull()) {\n-        LogError(\"%s: OpenBlockFile failed\\n\", __func__);\n-        return false;\n-    }\n-\n-    // Write index header\n-    unsigned int nSize = GetSerializeSize(TX_WITH_WITNESS(block));\n-    fileout << GetParams().MessageStart() << nSize;\n-\n-    // Write block\n-    long fileOutPos = fileout.tell();\n-    pos.nPos = (unsigned int)fileOutPos;\n-    fileout << TX_WITH_WITNESS(block);\n-\n-    return true;\n-}\n-\n-bool BlockManager::WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)\n+bool BlockManager::SaveBlockUndo(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)\n {\n     AssertLockHeld(::cs_main);\n     const BlockfileType type = BlockfileTypeForHeight(block.nHeight);\n     auto& cursor = *Assert(WITH_LOCK(cs_LastBlockFile, return m_blockfile_cursors[type]));\n \n     // Write undo information to disk\n     if (block.GetUndoPos().IsNull()) {\n-        FlatFilePos _pos;\n-        if (!FindUndoPos(state, block.nFile, _pos, ::GetSerializeSize(blockundo) + 40)) {\n+        FlatFilePos pos;\n+        const uint32_t blockundo_size{static_cast<uint32_t>(GetSerializeSize(blockundo))};\n+        if (!FindUndoPos(state, block.nFile, pos, blockundo_size + UNDO_DATA_DISK_OVERHEAD)) {\n             LogError(\"%s: FindUndoPos failed\\n\", __func__);\n             return false;\n         }\n-        if (!UndoWriteToDisk(blockundo, _pos, block.pprev->GetBlockHash())) {\n+        // Open history file to append\n+        AutoFile fileout{OpenUndoFile(pos)};\n+        if (fileout.IsNull()) {\n+            LogError(\"%s: OpenUndoFile failed\\n\", __func__);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 82,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "2ff0ea366c61b2fcb80ad1f711480915c7a7aa2e",
      "in_reply_to_id": 1905456335,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added it to the assert removal commits, thanks!",
      "created_at": "2025-01-09T13:02:55Z",
      "updated_at": "2025-01-09T13:02:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1908760127",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1908760127"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 956,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1908760232",
      "pull_request_review_id": 2539864426,
      "id": 1908760232,
      "node_id": "PRRC_kwDOABII585xxV6o",
      "diff_hunk": "@@ -0,0 +1,68 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <bench/data/block413567.raw.h>\n+#include <flatfile.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <serialize.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <memory>\n+#include <vector>\n+\n+CBlock CreateTestBlock()\n+{\n+    DataStream stream{benchmark::data::block413567};\n+    CBlock block;\n+    stream >> TX_WITH_WITNESS(block);\n+    return block;\n+}\n+\n+static void SaveBlockBench(benchmark::Bench& bench)\n+{\n+    const auto testing_setup{MakeNoLogFileContext<const TestingSetup>(ChainType::MAIN)};\n+    auto& blockman{testing_setup->m_node.chainman->m_blockman};\n+    const CBlock block{CreateTestBlock()};\n+    bench.run([&] {\n+        const auto pos{blockman.SaveBlock(block, 413'567)};\n+        assert(!pos.IsNull());\n+    });\n+}\n+\n+static void ReadBlockBench(benchmark::Bench& bench)\n+{\n+    const auto testing_setup{MakeNoLogFileContext<const TestingSetup>(ChainType::MAIN)};\n+    auto& blockman{testing_setup->m_node.chainman->m_blockman};\n+    const auto pos{blockman.SaveBlock(CreateTestBlock(), 413'567)};\n+    CBlock block;\n+    bench.run([&] {\n+        const auto success{blockman.ReadBlock(block, pos)};\n+        assert(success);\n+    });\n+}\n+\n+static void ReadRawBlockBench(benchmark::Bench& bench)\n+{\n+    const auto testing_setup{MakeNoLogFileContext<const TestingSetup>(ChainType::MAIN)};\n+    auto& blockman{testing_setup->m_node.chainman->m_blockman};\n+    const auto pos{blockman.SaveBlock(CreateTestBlock(), 413'567)};\n+    std::vector<uint8_t> block_data;\n+    blockman.ReadRawBlock(block_data, pos); // warmup\n+    bench.run([&] {\n+        const auto success{blockman.ReadRawBlock(block_data, pos)};\n+        assert(success);\n+    });\n+}\n+\n+BENCHMARK(SaveBlockBench, benchmark::PriorityLevel::HIGH);\n+BENCHMARK(ReadBlockBench, benchmark::PriorityLevel::HIGH);\n+BENCHMARK(ReadRawBlockBench, benchmark::PriorityLevel::HIGH);",
      "path": "src/bench/readwriteblock.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "2ff0ea366c61b2fcb80ad1f711480915c7a7aa2e",
      "in_reply_to_id": 1905481382,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-01-09T13:03:00Z",
      "updated_at": "2025-01-09T13:03:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1908760232",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1908760232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1908760480",
      "pull_request_review_id": 2539864779,
      "id": 1908760480,
      "node_id": "PRRC_kwDOABII585xxV-g",
      "diff_hunk": "@@ -330,7 +324,7 @@ class BlockManager\n     /** Get block file info entry for one block file */\n     CBlockFileInfo* GetBlockFileInfo(size_t n);\n \n-    bool WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)\n+    bool SaveBlockUndo(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 44,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "2ff0ea366c61b2fcb80ad1f711480915c7a7aa2e",
      "in_reply_to_id": 1905565819,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've updated the scripted diff to use consistent Read/Write terminology - dropping the `[To/From]Disk` part which also just seems like noise to me. Thanks for the proposals.",
      "created_at": "2025-01-09T13:03:09Z",
      "updated_at": "2025-01-09T13:03:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1908760480",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1908760480"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 327,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1908760615",
      "pull_request_review_id": 2539864984,
      "id": 1908760615,
      "node_id": "PRRC_kwDOABII585xxWAn",
      "diff_hunk": "@@ -945,7 +945,9 @@ bool BlockManager::WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValid\n     // Write undo information to disk\n     if (block.GetUndoPos().IsNull()) {\n         FlatFilePos pos;\n-        if (!FindUndoPos(state, block.nFile, pos, ::GetSerializeSize(blockundo) + 40)) {\n+        const uint32_t blockundo_size{static_cast<uint32_t>(GetSerializeSize(blockundo))};\n+        assert(UNDO_DATA_DISK_OVERHEAD == 40);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "6e22e55920da33dc8970793f9e6a854eb3faa3c4",
      "in_reply_to_id": 1907288195,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, also added TODOs to the commit (+ message) to obviate that they're temporary",
      "created_at": "2025-01-09T13:03:14Z",
      "updated_at": "2025-01-09T13:03:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1908760615",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1908760615"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 949,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1908760710",
      "pull_request_review_id": 2539865119,
      "id": 1908760710,
      "node_id": "PRRC_kwDOABII585xxWCG",
      "diff_hunk": "@@ -945,7 +945,9 @@ bool BlockManager::WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValid\n     // Write undo information to disk\n     if (block.GetUndoPos().IsNull()) {\n         FlatFilePos pos;\n-        if (!FindUndoPos(state, block.nFile, pos, ::GetSerializeSize(blockundo) + 40)) {\n+        const uint32_t blockundo_size{static_cast<uint32_t>(GetSerializeSize(blockundo))};",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "6e22e55920da33dc8970793f9e6a854eb3faa3c4",
      "in_reply_to_id": 1907299844,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I usually went in the other direction to make sure we know the sizes exactly.\r\nSince `size_t` doesn't really serialize (e.g. in `fileout << GetParams().MessageStart() << blockundo_size` -> `call to 'Serialize' is ambiguous`) - I made it into a `unsigned int` (I don't particularly like it, but it's not that important).",
      "created_at": "2025-01-09T13:03:18Z",
      "updated_at": "2025-01-09T13:20:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1908760710",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1908760710"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 948,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1908760793",
      "pull_request_review_id": 2539865229,
      "id": 1908760793,
      "node_id": "PRRC_kwDOABII585xxWDZ",
      "diff_hunk": "@@ -1092,33 +1092,24 @@ bool BlockManager::ReadRawBlockFromDisk(std::vector<uint8_t>& block, const FlatF\n \n FlatFilePos BlockManager::SaveBlockToDisk(const CBlock& block, int nHeight)\n {\n-    unsigned int nBlockSize = ::GetSerializeSize(TX_WITH_WITNESS(block));\n-    // Account for the 4 magic message start bytes + the 4 length bytes (8 bytes total,\n-    // defined as BLOCK_SERIALIZATION_HEADER_SIZE)\n-    nBlockSize += static_cast<unsigned int>(BLOCK_SERIALIZATION_HEADER_SIZE);\n-    FlatFilePos pos{FindNextBlockPos(nBlockSize, nHeight, block.GetBlockTime())};\n+    const uint32_t block_size{static_cast<uint32_t>(GetSerializeSize(TX_WITH_WITNESS(block)))};",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "6e22e55920da33dc8970793f9e6a854eb3faa3c4",
      "in_reply_to_id": 1907322326,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, went with `unsigned int`",
      "created_at": "2025-01-09T13:03:22Z",
      "updated_at": "2025-01-09T13:03:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1908760793",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1908760793"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1095,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1908761002",
      "pull_request_review_id": 2539865602,
      "id": 1908761002,
      "node_id": "PRRC_kwDOABII585xxWGq",
      "diff_hunk": "@@ -1092,33 +1092,24 @@ bool BlockManager::ReadRawBlockFromDisk(std::vector<uint8_t>& block, const FlatF\n \n FlatFilePos BlockManager::SaveBlockToDisk(const CBlock& block, int nHeight)\n {\n-    unsigned int nBlockSize = ::GetSerializeSize(TX_WITH_WITNESS(block));\n-    // Account for the 4 magic message start bytes + the 4 length bytes (8 bytes total,\n-    // defined as BLOCK_SERIALIZATION_HEADER_SIZE)\n-    nBlockSize += static_cast<unsigned int>(BLOCK_SERIALIZATION_HEADER_SIZE);\n-    FlatFilePos pos{FindNextBlockPos(nBlockSize, nHeight, block.GetBlockTime())};\n+    const uint32_t block_size{static_cast<uint32_t>(GetSerializeSize(TX_WITH_WITNESS(block)))};\n+    FlatFilePos pos{FindNextBlockPos(block_size + BLOCK_SERIALIZATION_HEADER_SIZE, nHeight, block.GetBlockTime())};\n     if (pos.IsNull()) {\n         LogError(\"%s: FindNextBlockPos failed\\n\", __func__);\n         return FlatFilePos();\n     }\n-\n-    // Open history file to append",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "6e22e55920da33dc8970793f9e6a854eb3faa3c4",
      "in_reply_to_id": 1907341326,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've reverted the comments that were used to group functionality (write header ... write [undo[block), but I've deleted the ones that were just repeating code. Especially after extracting the constant to names values, they don't add any value.",
      "created_at": "2025-01-09T13:03:32Z",
      "updated_at": "2025-01-09T13:03:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1908761002",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1908761002"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1105,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1908767141",
      "pull_request_review_id": 2539873914,
      "id": 1908767141,
      "node_id": "PRRC_kwDOABII585xxXml",
      "diff_hunk": "@@ -1092,33 +1092,24 @@ bool BlockManager::ReadRawBlockFromDisk(std::vector<uint8_t>& block, const FlatF\n \n FlatFilePos BlockManager::SaveBlockToDisk(const CBlock& block, int nHeight)\n {\n-    unsigned int nBlockSize = ::GetSerializeSize(TX_WITH_WITNESS(block));\n-    // Account for the 4 magic message start bytes + the 4 length bytes (8 bytes total,\n-    // defined as BLOCK_SERIALIZATION_HEADER_SIZE)\n-    nBlockSize += static_cast<unsigned int>(BLOCK_SERIALIZATION_HEADER_SIZE);\n-    FlatFilePos pos{FindNextBlockPos(nBlockSize, nHeight, block.GetBlockTime())};\n+    const uint32_t block_size{static_cast<uint32_t>(GetSerializeSize(TX_WITH_WITNESS(block)))};",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "6e22e55920da33dc8970793f9e6a854eb3faa3c4",
      "in_reply_to_id": 1907322326,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "My guess was that for serialization fixed-size ints are required and this was the motivation for the change in the first place, so I am surprised to see it reverted.\r\n\r\nNot that it matter in this codebase in practise, given that int is assumed to be 32-bit, but I wanted to mention it.",
      "created_at": "2025-01-09T13:07:32Z",
      "updated_at": "2025-01-09T13:07:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1908767141",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1908767141"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1095,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1908785810",
      "pull_request_review_id": 2539899305,
      "id": 1908785810,
      "node_id": "PRRC_kwDOABII585xxcKS",
      "diff_hunk": "@@ -1092,33 +1092,24 @@ bool BlockManager::ReadRawBlockFromDisk(std::vector<uint8_t>& block, const FlatF\n \n FlatFilePos BlockManager::SaveBlockToDisk(const CBlock& block, int nHeight)\n {\n-    unsigned int nBlockSize = ::GetSerializeSize(TX_WITH_WITNESS(block));\n-    // Account for the 4 magic message start bytes + the 4 length bytes (8 bytes total,\n-    // defined as BLOCK_SERIALIZATION_HEADER_SIZE)\n-    nBlockSize += static_cast<unsigned int>(BLOCK_SERIALIZATION_HEADER_SIZE);\n-    FlatFilePos pos{FindNextBlockPos(nBlockSize, nHeight, block.GetBlockTime())};\n+    const uint32_t block_size{static_cast<uint32_t>(GetSerializeSize(TX_WITH_WITNESS(block)))};",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "6e22e55920da33dc8970793f9e6a854eb3faa3c4",
      "in_reply_to_id": 1907322326,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": ">  for serialization fixed-size ints are required\r\n\r\nYes, it's the same argument as in https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1908760710",
      "created_at": "2025-01-09T13:19:28Z",
      "updated_at": "2025-01-09T13:19:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1908785810",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1908785810"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1095,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1909056496",
      "pull_request_review_id": 2540290494,
      "id": 1909056496,
      "node_id": "PRRC_kwDOABII585xyePw",
      "diff_hunk": "@@ -945,7 +945,9 @@ bool BlockManager::WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValid\n     // Write undo information to disk\n     if (block.GetUndoPos().IsNull()) {\n         FlatFilePos pos;\n-        if (!FindUndoPos(state, block.nFile, pos, ::GetSerializeSize(blockundo) + 40)) {\n+        const uint32_t blockundo_size{static_cast<uint32_t>(GetSerializeSize(blockundo))};",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "6e22e55920da33dc8970793f9e6a854eb3faa3c4",
      "in_reply_to_id": 1907299844,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1908760710\r\n\r\n> I made it into a `unsigned int` (I don't particularly like it, but it's not that important).\r\n\r\nThanks, your change makes sense and to be clear I don't like code writing `unsigned int` everywhere either, even though I do think `unsigned int` is a reasonable type for this code to be using. I think more ideally src/flatfile.h would define something like:\r\n\r\n```c++\r\nusing FilePos = unsigned int;\r\n```\r\n\r\n and then code could reference the `FilePos` type instead of unsigned int.\r\n\r\n",
      "created_at": "2025-01-09T15:48:11Z",
      "updated_at": "2025-01-09T15:58:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1909056496",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1909056496"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 948,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1909082218",
      "pull_request_review_id": 2540328217,
      "id": 1909082218,
      "node_id": "PRRC_kwDOABII585xykhq",
      "diff_hunk": "@@ -0,0 +1,68 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <bench/data/block413567.raw.h>\n+#include <flatfile.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <serialize.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <memory>\n+#include <vector>\n+\n+static CBlock CreateTestBlock()\n+{\n+    DataStream stream{benchmark::data::block413567};\n+    CBlock block;\n+    stream >> TX_WITH_WITNESS(block);\n+    return block;\n+}\n+\n+static void SaveBlockBench(benchmark::Bench& bench)",
      "path": "src/bench/readwriteblock.cpp",
      "position": 30,
      "original_position": 30,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"bench: add SaveBlockBench\" (86b85bb11f8999eb59e34bd026b0791dc866f2eb)\r\n\r\nCould rename SaveBlock to WriteBlock here too",
      "created_at": "2025-01-09T16:01:54Z",
      "updated_at": "2025-01-09T16:01:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1909082218",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1909082218"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 30,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1909093808",
      "pull_request_review_id": 2540344746,
      "id": 1909093808,
      "node_id": "PRRC_kwDOABII585xynWw",
      "diff_hunk": "@@ -0,0 +1,68 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <bench/data/block413567.raw.h>\n+#include <flatfile.h>\n+#include <node/blockstorage.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <serialize.h>\n+#include <span.h>\n+#include <streams.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <memory>\n+#include <vector>\n+\n+static CBlock CreateTestBlock()\n+{\n+    DataStream stream{benchmark::data::block413567};\n+    CBlock block;\n+    stream >> TX_WITH_WITNESS(block);\n+    return block;\n+}\n+\n+static void SaveBlockBench(benchmark::Bench& bench)",
      "path": "src/bench/readwriteblock.cpp",
      "position": 30,
      "original_position": 30,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "in_reply_to_id": 1909082218,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Right, if I need to edit, I'll rename this as well",
      "created_at": "2025-01-09T16:08:25Z",
      "updated_at": "2025-01-09T16:08:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1909093808",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1909093808"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 30,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1910222878",
      "pull_request_review_id": 2542174622,
      "id": 1910222878,
      "node_id": "PRRC_kwDOABII585x27Ae",
      "diff_hunk": "@@ -963,70 +936,66 @@ bool BlockManager::FindUndoPos(BlockValidationState& state, int nFile, FlatFileP\n     return true;\n }\n \n-bool BlockManager::WriteBlockToDisk(const CBlock& block, FlatFilePos& pos) const\n-{\n-    // Open history file to append\n-    AutoFile fileout{OpenBlockFile(pos)};\n-    if (fileout.IsNull()) {\n-        LogError(\"%s: OpenBlockFile failed\\n\", __func__);\n-        return false;\n-    }\n-\n-    // Write index header\n-    unsigned int nSize = GetSerializeSize(TX_WITH_WITNESS(block));\n-    fileout << GetParams().MessageStart() << nSize;\n-\n-    // Write block\n-    long fileOutPos = fileout.tell();\n-    pos.nPos = (unsigned int)fileOutPos;\n-    fileout << TX_WITH_WITNESS(block);\n-\n-    return true;\n-}\n-\n-bool BlockManager::WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)\n+bool BlockManager::WriteBlockUndo(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)\n {\n     AssertLockHeld(::cs_main);\n     const BlockfileType type = BlockfileTypeForHeight(block.nHeight);\n     auto& cursor = *Assert(WITH_LOCK(cs_LastBlockFile, return m_blockfile_cursors[type]));\n \n     // Write undo information to disk\n     if (block.GetUndoPos().IsNull()) {\n-        FlatFilePos _pos;\n-        if (!FindUndoPos(state, block.nFile, _pos, ::GetSerializeSize(blockundo) + 40)) {\n-            LogError(\"%s: FindUndoPos failed\\n\", __func__);\n+        FlatFilePos pos;\n+        const unsigned int blockundo_size{static_cast<unsigned int>(GetSerializeSize(blockundo))};\n+        if (!FindUndoPos(state, block.nFile, pos, blockundo_size + UNDO_DATA_DISK_OVERHEAD)) {\n+            LogError(\"FindUndoPos failed\");\n             return false;\n         }\n-        if (!UndoWriteToDisk(blockundo, _pos, block.pprev->GetBlockHash())) {\n+        // Open history file to append\n+        AutoFile fileout{OpenUndoFile(pos)};\n+        if (fileout.IsNull()) {\n+            LogError(\"OpenUndoFile failed\");\n             return FatalError(m_opts.notifications, state, _(\"Failed to write undo data.\"));\n         }\n+\n+        // Write index header\n+        fileout << GetParams().MessageStart() << blockundo_size;\n+        // Write undo data\n+        pos.nPos += BLOCK_SERIALIZATION_HEADER_SIZE;\n+        fileout << blockundo;\n+\n+        // Calculate & write checksum\n+        HashWriter hasher{};\n+        hasher << block.pprev->GetBlockHash();\n+        hasher << blockundo;\n+        fileout << hasher.GetHash();\n+\n         // rev files are written in block height order, whereas blk files are written as blocks come in (often out of order)\n         // we want to flush the rev (undo) file once we've written the last block, which is indicated by the last height\n         // in the block file info as below; note that this does not catch the case where the undo writes are keeping up\n         // with the block writes (usually when a synced up node is getting newly mined blocks) -- this case is caught in\n         // the FindNextBlockPos function\n-        if (_pos.nFile < cursor.file_num && static_cast<uint32_t>(block.nHeight) == m_blockfile_info[_pos.nFile].nHeightLast) {\n+        if (pos.nFile < cursor.file_num && static_cast<uint32_t>(block.nHeight) == m_blockfile_info[pos.nFile].nHeightLast) {\n             // Do not propagate the return code, a failed flush here should not\n             // be an indication for a failed write. If it were propagated here,\n             // the caller would assume the undo data not to be written, when in\n             // fact it is. Note though, that a failed flush might leave the data\n             // file untrimmed.\n-            if (!FlushUndoFile(_pos.nFile, true)) {\n-                LogPrintLevel(BCLog::BLOCKSTORAGE, BCLog::Level::Warning, \"Failed to flush undo file %05i\\n\", _pos.nFile);\n+            if (!FlushUndoFile(pos.nFile, true)) {\n+                LogPrintLevel(BCLog::BLOCKSTORAGE, BCLog::Level::Warning, \"Failed to flush undo file %05i\\n\", pos.nFile);",
      "path": "src/node/blockstorage.cpp",
      "position": 122,
      "original_position": 122,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Could at least remove newline, and possibly switch to more modern way of non-filterable non-categorized warning:\r\n```suggestion\r\n                LogWarning(\"Failed to flush undo file %05i\", pos.nFile);\r\n```",
      "created_at": "2025-01-10T11:09:10Z",
      "updated_at": "2025-01-10T13:55:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1910222878",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1910222878"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 984,
      "original_line": 984,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1910226418",
      "pull_request_review_id": 2542174622,
      "id": 1910226418,
      "node_id": "PRRC_kwDOABII585x273y",
      "diff_hunk": "@@ -963,70 +936,66 @@ bool BlockManager::FindUndoPos(BlockValidationState& state, int nFile, FlatFileP\n     return true;\n }\n \n-bool BlockManager::WriteBlockToDisk(const CBlock& block, FlatFilePos& pos) const\n-{\n-    // Open history file to append\n-    AutoFile fileout{OpenBlockFile(pos)};\n-    if (fileout.IsNull()) {\n-        LogError(\"%s: OpenBlockFile failed\\n\", __func__);\n-        return false;\n-    }\n-\n-    // Write index header\n-    unsigned int nSize = GetSerializeSize(TX_WITH_WITNESS(block));\n-    fileout << GetParams().MessageStart() << nSize;\n-\n-    // Write block\n-    long fileOutPos = fileout.tell();\n-    pos.nPos = (unsigned int)fileOutPos;\n-    fileout << TX_WITH_WITNESS(block);\n-\n-    return true;\n-}\n-\n-bool BlockManager::WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)\n+bool BlockManager::WriteBlockUndo(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)\n {\n     AssertLockHeld(::cs_main);\n     const BlockfileType type = BlockfileTypeForHeight(block.nHeight);\n     auto& cursor = *Assert(WITH_LOCK(cs_LastBlockFile, return m_blockfile_cursors[type]));\n \n     // Write undo information to disk\n     if (block.GetUndoPos().IsNull()) {\n-        FlatFilePos _pos;\n-        if (!FindUndoPos(state, block.nFile, _pos, ::GetSerializeSize(blockundo) + 40)) {\n-            LogError(\"%s: FindUndoPos failed\\n\", __func__);\n+        FlatFilePos pos;\n+        const unsigned int blockundo_size{static_cast<unsigned int>(GetSerializeSize(blockundo))};\n+        if (!FindUndoPos(state, block.nFile, pos, blockundo_size + UNDO_DATA_DISK_OVERHEAD)) {\n+            LogError(\"FindUndoPos failed\");\n             return false;\n         }\n-        if (!UndoWriteToDisk(blockundo, _pos, block.pprev->GetBlockHash())) {\n+        // Open history file to append\n+        AutoFile fileout{OpenUndoFile(pos)};\n+        if (fileout.IsNull()) {\n+            LogError(\"OpenUndoFile failed\");",
      "path": "src/node/blockstorage.cpp",
      "position": 91,
      "original_position": 91,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Could modernize logging when moving the log statement to avoid touching this line twice, resulting in git blame churn. Here and for \"OpenBlockFile failed\". But I guess you prefer the current commit-style.",
      "created_at": "2025-01-10T11:12:28Z",
      "updated_at": "2025-01-10T13:55:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1910226418",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1910226418"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 956,
      "original_line": 956,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1910364421",
      "pull_request_review_id": 2542174622,
      "id": 1910364421,
      "node_id": "PRRC_kwDOABII585x3dkF",
      "diff_hunk": "@@ -330,7 +324,7 @@ class BlockManager\n     /** Get block file info entry for one block file */\n     CBlockFileInfo* GetBlockFileInfo(size_t n);\n \n-    bool WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)\n+    bool SaveBlockUndo(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 44,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "2ff0ea366c61b2fcb80ad1f711480915c7a7aa2e",
      "in_reply_to_id": 1905565819,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks for resolving the terminology @l0rinc and for the back-story @ryanofsky!",
      "created_at": "2025-01-10T13:15:01Z",
      "updated_at": "2025-01-10T13:55:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1910364421",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1910364421"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 327,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1910422237",
      "pull_request_review_id": 2542520837,
      "id": 1910422237,
      "node_id": "PRRC_kwDOABII585x3rrd",
      "diff_hunk": "@@ -963,70 +936,66 @@ bool BlockManager::FindUndoPos(BlockValidationState& state, int nFile, FlatFileP\n     return true;\n }\n \n-bool BlockManager::WriteBlockToDisk(const CBlock& block, FlatFilePos& pos) const\n-{\n-    // Open history file to append\n-    AutoFile fileout{OpenBlockFile(pos)};\n-    if (fileout.IsNull()) {\n-        LogError(\"%s: OpenBlockFile failed\\n\", __func__);\n-        return false;\n-    }\n-\n-    // Write index header\n-    unsigned int nSize = GetSerializeSize(TX_WITH_WITNESS(block));\n-    fileout << GetParams().MessageStart() << nSize;\n-\n-    // Write block\n-    long fileOutPos = fileout.tell();\n-    pos.nPos = (unsigned int)fileOutPos;\n-    fileout << TX_WITH_WITNESS(block);\n-\n-    return true;\n-}\n-\n-bool BlockManager::WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)\n+bool BlockManager::WriteBlockUndo(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)\n {\n     AssertLockHeld(::cs_main);\n     const BlockfileType type = BlockfileTypeForHeight(block.nHeight);\n     auto& cursor = *Assert(WITH_LOCK(cs_LastBlockFile, return m_blockfile_cursors[type]));\n \n     // Write undo information to disk\n     if (block.GetUndoPos().IsNull()) {\n-        FlatFilePos _pos;\n-        if (!FindUndoPos(state, block.nFile, _pos, ::GetSerializeSize(blockundo) + 40)) {\n-            LogError(\"%s: FindUndoPos failed\\n\", __func__);\n+        FlatFilePos pos;\n+        const unsigned int blockundo_size{static_cast<unsigned int>(GetSerializeSize(blockundo))};\n+        if (!FindUndoPos(state, block.nFile, pos, blockundo_size + UNDO_DATA_DISK_OVERHEAD)) {\n+            LogError(\"FindUndoPos failed\");\n             return false;\n         }\n-        if (!UndoWriteToDisk(blockundo, _pos, block.pprev->GetBlockHash())) {\n+        // Open history file to append\n+        AutoFile fileout{OpenUndoFile(pos)};\n+        if (fileout.IsNull()) {\n+            LogError(\"OpenUndoFile failed\");\n             return FatalError(m_opts.notifications, state, _(\"Failed to write undo data.\"));\n         }\n+\n+        // Write index header\n+        fileout << GetParams().MessageStart() << blockundo_size;\n+        // Write undo data\n+        pos.nPos += BLOCK_SERIALIZATION_HEADER_SIZE;\n+        fileout << blockundo;\n+\n+        // Calculate & write checksum\n+        HashWriter hasher{};\n+        hasher << block.pprev->GetBlockHash();\n+        hasher << blockundo;\n+        fileout << hasher.GetHash();\n+\n         // rev files are written in block height order, whereas blk files are written as blocks come in (often out of order)\n         // we want to flush the rev (undo) file once we've written the last block, which is indicated by the last height\n         // in the block file info as below; note that this does not catch the case where the undo writes are keeping up\n         // with the block writes (usually when a synced up node is getting newly mined blocks) -- this case is caught in\n         // the FindNextBlockPos function\n-        if (_pos.nFile < cursor.file_num && static_cast<uint32_t>(block.nHeight) == m_blockfile_info[_pos.nFile].nHeightLast) {\n+        if (pos.nFile < cursor.file_num && static_cast<uint32_t>(block.nHeight) == m_blockfile_info[pos.nFile].nHeightLast) {\n             // Do not propagate the return code, a failed flush here should not\n             // be an indication for a failed write. If it were propagated here,\n             // the caller would assume the undo data not to be written, when in\n             // fact it is. Note though, that a failed flush might leave the data\n             // file untrimmed.\n-            if (!FlushUndoFile(_pos.nFile, true)) {\n-                LogPrintLevel(BCLog::BLOCKSTORAGE, BCLog::Level::Warning, \"Failed to flush undo file %05i\\n\", _pos.nFile);\n+            if (!FlushUndoFile(pos.nFile, true)) {\n+                LogPrintLevel(BCLog::BLOCKSTORAGE, BCLog::Level::Warning, \"Failed to flush undo file %05i\\n\", pos.nFile);",
      "path": "src/node/blockstorage.cpp",
      "position": 122,
      "original_position": 122,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "in_reply_to_id": 1910222878,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Wouldn't `LogWarning` replace `BCLog::BLOCKSTORAGE` with `BCLog::LogFlags::ALL`?",
      "created_at": "2025-01-10T14:06:04Z",
      "updated_at": "2025-01-10T14:06:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1910422237",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1910422237"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 984,
      "original_line": 984,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1910424074",
      "pull_request_review_id": 2542524303,
      "id": 1910424074,
      "node_id": "PRRC_kwDOABII585x3sIK",
      "diff_hunk": "@@ -963,70 +936,66 @@ bool BlockManager::FindUndoPos(BlockValidationState& state, int nFile, FlatFileP\n     return true;\n }\n \n-bool BlockManager::WriteBlockToDisk(const CBlock& block, FlatFilePos& pos) const\n-{\n-    // Open history file to append\n-    AutoFile fileout{OpenBlockFile(pos)};\n-    if (fileout.IsNull()) {\n-        LogError(\"%s: OpenBlockFile failed\\n\", __func__);\n-        return false;\n-    }\n-\n-    // Write index header\n-    unsigned int nSize = GetSerializeSize(TX_WITH_WITNESS(block));\n-    fileout << GetParams().MessageStart() << nSize;\n-\n-    // Write block\n-    long fileOutPos = fileout.tell();\n-    pos.nPos = (unsigned int)fileOutPos;\n-    fileout << TX_WITH_WITNESS(block);\n-\n-    return true;\n-}\n-\n-bool BlockManager::WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)\n+bool BlockManager::WriteBlockUndo(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)\n {\n     AssertLockHeld(::cs_main);\n     const BlockfileType type = BlockfileTypeForHeight(block.nHeight);\n     auto& cursor = *Assert(WITH_LOCK(cs_LastBlockFile, return m_blockfile_cursors[type]));\n \n     // Write undo information to disk\n     if (block.GetUndoPos().IsNull()) {\n-        FlatFilePos _pos;\n-        if (!FindUndoPos(state, block.nFile, _pos, ::GetSerializeSize(blockundo) + 40)) {\n-            LogError(\"%s: FindUndoPos failed\\n\", __func__);\n+        FlatFilePos pos;\n+        const unsigned int blockundo_size{static_cast<unsigned int>(GetSerializeSize(blockundo))};\n+        if (!FindUndoPos(state, block.nFile, pos, blockundo_size + UNDO_DATA_DISK_OVERHEAD)) {\n+            LogError(\"FindUndoPos failed\");\n             return false;\n         }\n-        if (!UndoWriteToDisk(blockundo, _pos, block.pprev->GetBlockHash())) {\n+        // Open history file to append\n+        AutoFile fileout{OpenUndoFile(pos)};\n+        if (fileout.IsNull()) {\n+            LogError(\"OpenUndoFile failed\");",
      "path": "src/node/blockstorage.cpp",
      "position": 91,
      "original_position": 91,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "in_reply_to_id": 1910226418,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah, I prefer changing it minimally when moving, to make sure I don't hide any changes there.",
      "created_at": "2025-01-10T14:07:40Z",
      "updated_at": "2025-01-10T14:07:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1910424074",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1910424074"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 956,
      "original_line": 956,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1910456541",
      "pull_request_review_id": 2542588975,
      "id": 1910456541,
      "node_id": "PRRC_kwDOABII585x30Dd",
      "diff_hunk": "@@ -963,70 +936,66 @@ bool BlockManager::FindUndoPos(BlockValidationState& state, int nFile, FlatFileP\n     return true;\n }\n \n-bool BlockManager::WriteBlockToDisk(const CBlock& block, FlatFilePos& pos) const\n-{\n-    // Open history file to append\n-    AutoFile fileout{OpenBlockFile(pos)};\n-    if (fileout.IsNull()) {\n-        LogError(\"%s: OpenBlockFile failed\\n\", __func__);\n-        return false;\n-    }\n-\n-    // Write index header\n-    unsigned int nSize = GetSerializeSize(TX_WITH_WITNESS(block));\n-    fileout << GetParams().MessageStart() << nSize;\n-\n-    // Write block\n-    long fileOutPos = fileout.tell();\n-    pos.nPos = (unsigned int)fileOutPos;\n-    fileout << TX_WITH_WITNESS(block);\n-\n-    return true;\n-}\n-\n-bool BlockManager::WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)\n+bool BlockManager::WriteBlockUndo(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)\n {\n     AssertLockHeld(::cs_main);\n     const BlockfileType type = BlockfileTypeForHeight(block.nHeight);\n     auto& cursor = *Assert(WITH_LOCK(cs_LastBlockFile, return m_blockfile_cursors[type]));\n \n     // Write undo information to disk\n     if (block.GetUndoPos().IsNull()) {\n-        FlatFilePos _pos;\n-        if (!FindUndoPos(state, block.nFile, _pos, ::GetSerializeSize(blockundo) + 40)) {\n-            LogError(\"%s: FindUndoPos failed\\n\", __func__);\n+        FlatFilePos pos;\n+        const unsigned int blockundo_size{static_cast<unsigned int>(GetSerializeSize(blockundo))};\n+        if (!FindUndoPos(state, block.nFile, pos, blockundo_size + UNDO_DATA_DISK_OVERHEAD)) {\n+            LogError(\"FindUndoPos failed\");\n             return false;\n         }\n-        if (!UndoWriteToDisk(blockundo, _pos, block.pprev->GetBlockHash())) {\n+        // Open history file to append\n+        AutoFile fileout{OpenUndoFile(pos)};\n+        if (fileout.IsNull()) {\n+            LogError(\"OpenUndoFile failed\");\n             return FatalError(m_opts.notifications, state, _(\"Failed to write undo data.\"));\n         }\n+\n+        // Write index header\n+        fileout << GetParams().MessageStart() << blockundo_size;\n+        // Write undo data\n+        pos.nPos += BLOCK_SERIALIZATION_HEADER_SIZE;\n+        fileout << blockundo;\n+\n+        // Calculate & write checksum\n+        HashWriter hasher{};\n+        hasher << block.pprev->GetBlockHash();\n+        hasher << blockundo;\n+        fileout << hasher.GetHash();\n+\n         // rev files are written in block height order, whereas blk files are written as blocks come in (often out of order)\n         // we want to flush the rev (undo) file once we've written the last block, which is indicated by the last height\n         // in the block file info as below; note that this does not catch the case where the undo writes are keeping up\n         // with the block writes (usually when a synced up node is getting newly mined blocks) -- this case is caught in\n         // the FindNextBlockPos function\n-        if (_pos.nFile < cursor.file_num && static_cast<uint32_t>(block.nHeight) == m_blockfile_info[_pos.nFile].nHeightLast) {\n+        if (pos.nFile < cursor.file_num && static_cast<uint32_t>(block.nHeight) == m_blockfile_info[pos.nFile].nHeightLast) {\n             // Do not propagate the return code, a failed flush here should not\n             // be an indication for a failed write. If it were propagated here,\n             // the caller would assume the undo data not to be written, when in\n             // fact it is. Note though, that a failed flush might leave the data\n             // file untrimmed.\n-            if (!FlushUndoFile(_pos.nFile, true)) {\n-                LogPrintLevel(BCLog::BLOCKSTORAGE, BCLog::Level::Warning, \"Failed to flush undo file %05i\\n\", _pos.nFile);\n+            if (!FlushUndoFile(pos.nFile, true)) {\n+                LogPrintLevel(BCLog::BLOCKSTORAGE, BCLog::Level::Warning, \"Failed to flush undo file %05i\\n\", pos.nFile);",
      "path": "src/node/blockstorage.cpp",
      "position": 122,
      "original_position": 122,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "in_reply_to_id": 1910222878,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Correct, by \"non-categorized\" I was referring to `BCLog::LogFlags::ALL`.",
      "created_at": "2025-01-10T14:32:11Z",
      "updated_at": "2025-01-10T14:32:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1910456541",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1910456541"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 984,
      "original_line": 984,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1921599648",
      "pull_request_review_id": 2561056791,
      "id": 1921599648,
      "node_id": "PRRC_kwDOABII585yiUig",
      "diff_hunk": "@@ -963,70 +936,66 @@ bool BlockManager::FindUndoPos(BlockValidationState& state, int nFile, FlatFileP\n     return true;\n }\n \n-bool BlockManager::WriteBlockToDisk(const CBlock& block, FlatFilePos& pos) const\n-{\n-    // Open history file to append\n-    AutoFile fileout{OpenBlockFile(pos)};\n-    if (fileout.IsNull()) {\n-        LogError(\"%s: OpenBlockFile failed\\n\", __func__);\n-        return false;\n-    }\n-\n-    // Write index header\n-    unsigned int nSize = GetSerializeSize(TX_WITH_WITNESS(block));\n-    fileout << GetParams().MessageStart() << nSize;\n-\n-    // Write block\n-    long fileOutPos = fileout.tell();\n-    pos.nPos = (unsigned int)fileOutPos;\n-    fileout << TX_WITH_WITNESS(block);\n-\n-    return true;\n-}\n-\n-bool BlockManager::WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)\n+bool BlockManager::WriteBlockUndo(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)\n {\n     AssertLockHeld(::cs_main);\n     const BlockfileType type = BlockfileTypeForHeight(block.nHeight);\n     auto& cursor = *Assert(WITH_LOCK(cs_LastBlockFile, return m_blockfile_cursors[type]));\n \n     // Write undo information to disk\n     if (block.GetUndoPos().IsNull()) {\n-        FlatFilePos _pos;\n-        if (!FindUndoPos(state, block.nFile, _pos, ::GetSerializeSize(blockundo) + 40)) {\n-            LogError(\"%s: FindUndoPos failed\\n\", __func__);\n+        FlatFilePos pos;\n+        const unsigned int blockundo_size{static_cast<unsigned int>(GetSerializeSize(blockundo))};",
      "path": "src/node/blockstorage.cpp",
      "position": 82,
      "original_position": 82,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Here and in `WriteBlock`\r\n```suggestion\r\n        const uint32_t blockundo_size{static_cast<uint32_t>(GetSerializeSize(blockundo))};\r\n```",
      "created_at": "2025-01-19T17:32:48Z",
      "updated_at": "2025-01-19T18:01:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1921599648",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1921599648"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 948,
      "original_line": 948,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1921604482",
      "pull_request_review_id": 2561061822,
      "id": 1921604482,
      "node_id": "PRRC_kwDOABII585yiVuC",
      "diff_hunk": "@@ -963,70 +936,66 @@ bool BlockManager::FindUndoPos(BlockValidationState& state, int nFile, FlatFileP\n     return true;\n }\n \n-bool BlockManager::WriteBlockToDisk(const CBlock& block, FlatFilePos& pos) const\n-{\n-    // Open history file to append\n-    AutoFile fileout{OpenBlockFile(pos)};\n-    if (fileout.IsNull()) {\n-        LogError(\"%s: OpenBlockFile failed\\n\", __func__);\n-        return false;\n-    }\n-\n-    // Write index header\n-    unsigned int nSize = GetSerializeSize(TX_WITH_WITNESS(block));\n-    fileout << GetParams().MessageStart() << nSize;\n-\n-    // Write block\n-    long fileOutPos = fileout.tell();\n-    pos.nPos = (unsigned int)fileOutPos;\n-    fileout << TX_WITH_WITNESS(block);\n-\n-    return true;\n-}\n-\n-bool BlockManager::WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)\n+bool BlockManager::WriteBlockUndo(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex& block)\n {\n     AssertLockHeld(::cs_main);\n     const BlockfileType type = BlockfileTypeForHeight(block.nHeight);\n     auto& cursor = *Assert(WITH_LOCK(cs_LastBlockFile, return m_blockfile_cursors[type]));\n \n     // Write undo information to disk\n     if (block.GetUndoPos().IsNull()) {\n-        FlatFilePos _pos;\n-        if (!FindUndoPos(state, block.nFile, _pos, ::GetSerializeSize(blockundo) + 40)) {\n-            LogError(\"%s: FindUndoPos failed\\n\", __func__);\n+        FlatFilePos pos;\n+        const unsigned int blockundo_size{static_cast<unsigned int>(GetSerializeSize(blockundo))};",
      "path": "src/node/blockstorage.cpp",
      "position": 82,
      "original_position": 82,
      "commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "original_commit_id": "223081ece651dc616ff63d9ac447eedc5c2a28fa",
      "in_reply_to_id": 1921599648,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That's what I was going for originally, but this was explicitly requested by @ryanofsky in https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1907299844",
      "created_at": "2025-01-19T18:03:36Z",
      "updated_at": "2025-01-19T18:03:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31490#discussion_r1921604482",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1921604482"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31490"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 948,
      "original_line": 948,
      "side": "RIGHT"
    }
  ]
}