{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405",
    "id": 2211158070,
    "node_id": "PR_kwDOABII586Dy5g2",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31405",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31405.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31405.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31405",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31405/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
    "number": 31405,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "validation: stricter internal handling of invalid blocks",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Some fields in validation are set opportunistically by \"best effort\":\r\n- The `BLOCK_FAILED_CHILD` status (which means that the block index has an invalid predecessor)\r\n- `m_best_header` (the most-work header not known to be invalid).\r\n\r\nThis means that there are known situations in which these fields are not set when they should be, or set to wrong values. This is tolerated because the fields are not used for anything consensus-critical and triggering these situations involved creating invalid blocks with valid PoW header, so would have a cost attached. Also, having stricter guarantees for these fields requires iterating over the entire block index, which has some DoS potential, especially with any header above the checkpoint being accepted int he past (see e.g. #11531). \r\n\r\nHowever, there are reasons to change this now:\r\n- RPCs use these fields and can report wrong results\r\n- There is the constant possibility that someone could add code that expects these fields to be correct, especially because it is not well documented that these fields cannot always be relied upon.\r\n- DoS concerns have become less of an issue after #25717 - now an attacker would need to invest much more work because they can't fork off the last checkpoint anymore\r\n\r\nThis PR continues the work from #30666 to ensure that `BLOCK_FAILED_CHILD` status and `m_best_header` are always correct:\r\n- it adds a call to `InvalidChainFound()` in `AcceptBlock()`.\r\n- it adds checks for `BLOCK_FAILED_CHILD` and `m_best_header`  to `CheckBlockIndex()`. In order to be able to do this, the existing cache in the RPC-only `InvalidateBlock()` is adjusted to handle these as well. These are performance optimizations with the goal of avoiding having a call of `InvalidChainFound()` / looping over the block index after each disconnected block.\r\nI also wrote a fuzz test to find possible edge cases violating `CheckBlockIndex`, which I will PR separately soon.\r\n- it removes the `m_failed_blocks` set, which was a heuristic necessary when we couldn't be sure if a given block index had an invalid predecessor or not. Now that we have that guarantee, the set is no longer needed.",
    "labels": [
      {
        "id": 118379652,
        "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
        "name": "Validation",
        "color": "6060aa",
        "default": false
      }
    ],
    "created_at": "2024-12-02T19:29:15Z",
    "updated_at": "2025-06-10T13:51:27Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "0003cf5a06751135b4a210c6734608fc5afc7a1d",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "stringintech",
        "id": 157148846,
        "node_id": "U_kgDOCV3mrg",
        "avatar_url": "https://avatars.githubusercontent.com/u/157148846?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stringintech",
        "html_url": "https://github.com/stringintech",
        "followers_url": "https://api.github.com/users/stringintech/followers",
        "following_url": "https://api.github.com/users/stringintech/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stringintech/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stringintech/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stringintech/subscriptions",
        "organizations_url": "https://api.github.com/users/stringintech/orgs",
        "repos_url": "https://api.github.com/users/stringintech/repos",
        "events_url": "https://api.github.com/users/stringintech/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stringintech/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "mzumsande:202411_stricter_invalidblock_handling",
      "ref": "202411_stricter_invalidblock_handling",
      "sha": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 187673073,
        "node_id": "MDEwOlJlcG9zaXRvcnkxODc2NzMwNzM=",
        "name": "bitcoin",
        "full_name": "mzumsande/bitcoin",
        "owner": {
          "login": "mzumsande",
          "id": 48763452,
          "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
          "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/mzumsande",
          "html_url": "https://github.com/mzumsande",
          "followers_url": "https://api.github.com/users/mzumsande/followers",
          "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
          "organizations_url": "https://api.github.com/users/mzumsande/orgs",
          "repos_url": "https://api.github.com/users/mzumsande/repos",
          "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/mzumsande/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/mzumsande/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/mzumsande/bitcoin",
        "archive_url": "https://api.github.com/repos/mzumsande/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/mzumsande/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/mzumsande/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/mzumsande/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/mzumsande/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/mzumsande/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/mzumsande/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/mzumsande/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/mzumsande/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/mzumsande/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/mzumsande/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/mzumsande/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/mzumsande/bitcoin/events",
        "forks_url": "https://api.github.com/repos/mzumsande/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/mzumsande/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/mzumsande/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/mzumsande/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/mzumsande/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/mzumsande/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/mzumsande/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/mzumsande/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/mzumsande/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/mzumsande/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/mzumsande/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/mzumsande/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/mzumsande/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/mzumsande/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/mzumsande/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/mzumsande/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:mzumsande/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/mzumsande/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/mzumsande/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/mzumsande/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/mzumsande/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/mzumsande/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/mzumsande/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/mzumsande/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/mzumsande/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/mzumsande/bitcoin/hooks",
        "svn_url": "https://github.com/mzumsande/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 262104,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-06-06T15:24:01Z",
        "created_at": "2019-05-20T16:03:10Z",
        "updated_at": "2025-04-24T18:53:18Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "ae024137bda9fe189f4e7ccf26dbaffd44cbbeb6",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37346,
        "stargazers_count": 84061,
        "watchers_count": 84061,
        "size": 283545,
        "default_branch": "master",
        "open_issues_count": 751,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-06-10T12:28:31Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-06-10T13:49:01Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 52,
    "deletions": 83,
    "changed_files": 2,
    "commits": 7,
    "review_comments": 88,
    "comments": 17
  },
  "events": [
    {
      "event": "commented",
      "id": 2512566754,
      "node_id": "IC_kwDOABII586Vwrni",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2512566754",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-02T19:29:20Z",
      "updated_at": "2025-06-10T08:17:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/31405.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [ryanofsky](https://github.com/bitcoin/bitcoin/pull/31405#pullrequestreview-2905300599), [stickies-v](https://github.com/bitcoin/bitcoin/pull/31405#issuecomment-2955469784), [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/31405#pullrequestreview-2912478922) |\n| Concept ACK | [stringintech](https://github.com/bitcoin/bitcoin/pull/31405#issuecomment-2708437327) |\n| Stale ACK | [sipa](https://github.com/bitcoin/bitcoin/pull/31405#issuecomment-2761742864), [stratospher](https://github.com/bitcoin/bitcoin/pull/31405#pullrequestreview-2738896003), [achow101](https://github.com/bitcoin/bitcoin/pull/31405#issuecomment-2914394066) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30479](https://github.com/bitcoin/bitcoin/pull/30479) (validation: Add eligible ancestors of reconsidered block to setBlockIndexCandidates by mzumsande)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#issuecomment-2512566754",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31405"
    },
    {
      "event": "labeled",
      "id": 15498367331,
      "node_id": "LE_lADOABII586ht3A5zwAAAAObxlFj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15498367331",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-02T19:29:22Z",
      "label": {
        "name": "Validation",
        "color": "6060aa"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15499211539,
      "node_id": "HRFPE_lADOABII586ht3A5zwAAAAOb0zMT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15499211539",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b2136da98df61f10ff8283d42f112f69f041fa7a",
      "commit_url": "https://api.github.com/repos/mzumsande/bitcoin/commits/b2136da98df61f10ff8283d42f112f69f041fa7a",
      "created_at": "2024-12-02T20:47:07Z"
    },
    {
      "event": "labeled",
      "id": 15499212806,
      "node_id": "LE_lADOABII586ht3A5zwAAAAOb0zgG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15499212806",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-02T20:47:12Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2512791401,
      "node_id": "IC_kwDOABII586Vxidp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2512791401",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-02T20:47:13Z",
      "updated_at": "2024-12-02T20:47:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/33808912013</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#issuecomment-2512791401",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31405"
    },
    {
      "event": "unlabeled",
      "id": 15499774752,
      "node_id": "UNLE_lADOABII586ht3A5zwAAAAOb28sg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15499774752",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-02T21:38:30Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "ready_for_review",
      "id": 15501587308,
      "node_id": "RFRE_lADOABII586ht3A5zwAAAAOb93Ns",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15501587308",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T01:05:41Z"
    },
    {
      "event": "reviewed",
      "id": 2546740188,
      "node_id": "PRR_kwDOABII586XzCvc",
      "url": null,
      "actor": null,
      "commit_id": "b2136da98df61f10ff8283d42f112f69f041fa7a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK b2136da9\r\n\r\n- Went through the logs in `rpc_invalidateblock.py` and checked how the children were marked invalid/`m_best_header` was set on master vs in this PR\r\n- Went through logs of some functional tests like `feature_block.py` and verified that BLOCK_FAILED_CHILD wasn't being set in [`m_failed_blocks` loop](https://github.com/bitcoin/bitcoin/blob/35bf426e02210c1bbb04926f4ca2e0285fbfcd11/src/validation.cpp#L4395)\r\n- Ran `invalidateblock` RPC on a full node.\r\n",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#pullrequestreview-2546740188",
      "submitted_at": "2025-01-13T14:14:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
    },
    {
      "event": "reviewed",
      "id": 2548919720,
      "node_id": "PRR_kwDOABII586X7W2o",
      "url": null,
      "actor": null,
      "commit_id": "b2136da98df61f10ff8283d42f112f69f041fa7a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#pullrequestreview-2548919720",
      "submitted_at": "2025-01-15T08:54:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16097499132,
      "node_id": "HRFPE_lADOABII586ht3A5zwAAAAO_fFf8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16097499132",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b35d16344d50fdb8c227fe78ccea9b449c4779fc",
      "commit_url": "https://api.github.com/repos/mzumsande/bitcoin/commits/b35d16344d50fdb8c227fe78ccea9b449c4779fc",
      "created_at": "2025-01-28T18:05:13Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16097544162,
      "node_id": "HRFPE_lADOABII586ht3A5zwAAAAO_fQfi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16097544162",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4ba2e480ffa0b77113953bee4ff5c9349e277e7e",
      "commit_url": "https://api.github.com/repos/mzumsande/bitcoin/commits/4ba2e480ffa0b77113953bee4ff5c9349e277e7e",
      "created_at": "2025-01-28T18:09:18Z"
    },
    {
      "event": "commented",
      "id": 2619726595,
      "node_id": "IC_kwDOABII586cJdsD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2619726595",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-28T18:10:03Z",
      "updated_at": "2025-01-28T18:10:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "[b2136da](https://github.com/bitcoin/bitcoin/commit/b2136da98df61f10ff8283d42f112f69f041fa7a) to [4ba2e48](https://github.com/bitcoin/bitcoin/commit/4ba2e480ffa0b77113953bee4ff5c9349e277e7e):\r\nAddressed review comments by @stratospher (Thanks!) and rebased.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#issuecomment-2619726595",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31405"
    },
    {
      "event": "mentioned",
      "id": 16097552471,
      "node_id": "MEE_lADOABII586ht3A5zwAAAAO_fShX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16097552471",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-28T18:10:04Z"
    },
    {
      "event": "subscribed",
      "id": 16097552499,
      "node_id": "SE_lADOABII586ht3A5zwAAAAO_fShz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16097552499",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-28T18:10:04Z"
    },
    {
      "event": "reviewed",
      "id": 2598002988,
      "node_id": "PRR_kwDOABII586a2mEs",
      "url": null,
      "actor": null,
      "commit_id": "4ba2e480ffa0b77113953bee4ff5c9349e277e7e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "reACK 4ba2e48.",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#pullrequestreview-2598002988",
      "submitted_at": "2025-02-10T15:17:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
    },
    {
      "event": "commented",
      "id": 2694989641,
      "node_id": "IC_kwDOABII586gokdJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2694989641",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-03T16:48:52Z",
      "updated_at": "2025-03-03T16:48:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "PSA: Bitcoin Core PR Review Club will cover this PR in its next meeting at 2025-03-05 at 17:00 UTC. See https://bitcoincore.reviews/31405 for notes, questions, and instructions on [how to join](https://bitcoincore.reviews/).",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#issuecomment-2694989641",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31405"
    },
    {
      "event": "reviewed",
      "id": 2655396246,
      "node_id": "PRR_kwDOABII586eRiGW",
      "url": null,
      "actor": null,
      "commit_id": "4ba2e480ffa0b77113953bee4ff5c9349e277e7e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK for making `m_best_header` and `nStatus` more reliably correct, and the trade-offs seem reasonable. Even though the diff is small, I find reasoning about these changes fairly complex and require a lot of context, so I'll need to think through the implications more.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#pullrequestreview-2655396246",
      "submitted_at": "2025-03-04T00:58:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
    },
    {
      "event": "commented",
      "id": 2708437327,
      "node_id": "IC_kwDOABII586hb3lP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2708437327",
      "actor": {
        "login": "stringintech",
        "id": 157148846,
        "node_id": "U_kgDOCV3mrg",
        "avatar_url": "https://avatars.githubusercontent.com/u/157148846?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stringintech",
        "html_url": "https://github.com/stringintech",
        "followers_url": "https://api.github.com/users/stringintech/followers",
        "following_url": "https://api.github.com/users/stringintech/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stringintech/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stringintech/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stringintech/subscriptions",
        "organizations_url": "https://api.github.com/users/stringintech/orgs",
        "repos_url": "https://api.github.com/users/stringintech/repos",
        "events_url": "https://api.github.com/users/stringintech/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stringintech/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-08T18:37:40Z",
      "updated_at": "2025-03-09T07:20:28Z",
      "author_association": "NONE",
      "body": "Concept ACK.\r\n\r\nI wrote two test cases to understand the general behavior of `InvalidateBlock`, not specifically to test this PR's changes:\r\n```\r\nA->B->C->D->E->F (main chain)\r\nA->B->C->G (fork 1)\r\nA->B->H->I->J (fork 2)\r\nA->B->H->K (fork 3)\r\n```\r\n\r\nIn the [first test](https://github.com/stringintech/bitcoin/blob/1b36dd6a66a44e8756d92e71baa7676646b5f1ce/src/test/validation_block_tests.cpp#L455), I invalidate block C (on active chain) which should invalidate C, D, E, F, and G. The [second test](https://github.com/stringintech/bitcoin/blob/1b36dd6a66a44e8756d92e71baa7676646b5f1ce/src/test/validation_block_tests.cpp#L509) invalidates H (on a fork) which should invalidate H, I, J, and K.\r\n\r\nBoth tests behave the same on the master and PR branches. The first test fails on both because D, E, and F are not marked as `BLOCK_FAILED_CHILD`, which I did not expect.\r\n\r\nI have two questions:\r\n\r\n1 )\r\nI found what appears to be a bug in `InvalidateBlock`:\r\nhttps://github.com/bitcoin/bitcoin/blob/4637cb1eec48d1af8d23eeae1bb4c6f8de55eed9/src/validation.cpp#L3750\r\n\r\nThe first part of the condition seems incorrect and should probably be:\r\n```cpp\r\nif (to_mark_failed->pprev == invalid_walk_tip ...) {\r\n```\r\nThe assertions that fail in the first test are for blocks D, E, and F which were all part of the best chain before invalidation, which led me to this part of the code. I'm not sure if fixing this is in scope for this PR.\r\n\r\n_Update: Just saw the PR #31835 which fixes this issue. :)_\r\n\r\n2 )\r\nTo validate my understanding: Since both branches behave similarly (even on master the `m_best_header` and `BLOCK_FAILED_CHILD` statuses are set correctly because of the final call to `InvalidChainFound` - except for the ones not set as `BLOCK_FAILED_CHILD` because of the potential bug), is it correct that the main goal of changes applied in `InvalidateBlock` is to maintain proper block statuses and best header between tip disconnections by marking children as invalid right away and recalculating the best header immediately rather than doing it later?",
      "user": {
        "login": "stringintech",
        "id": 157148846,
        "node_id": "U_kgDOCV3mrg",
        "avatar_url": "https://avatars.githubusercontent.com/u/157148846?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stringintech",
        "html_url": "https://github.com/stringintech",
        "followers_url": "https://api.github.com/users/stringintech/followers",
        "following_url": "https://api.github.com/users/stringintech/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stringintech/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stringintech/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stringintech/subscriptions",
        "organizations_url": "https://api.github.com/users/stringintech/orgs",
        "repos_url": "https://api.github.com/users/stringintech/repos",
        "events_url": "https://api.github.com/users/stringintech/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stringintech/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#issuecomment-2708437327",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31405"
    },
    {
      "event": "commented",
      "id": 2730598301,
      "node_id": "IC_kwDOABII586iwZ-d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2730598301",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-17T19:23:00Z",
      "updated_at": "2025-03-17T19:23:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Update: Just saw the PR https://github.com/bitcoin/bitcoin/pull/31835 which fixes this issue. :)\r\n\r\nHeh, looks like you are at least the third person who found that bug independently, first one was in #16856!\r\n\r\n>  Since both branches behave similarly (even on master the m_best_header and BLOCK_FAILED_CHILD statuses are set correctly because of the final call to InvalidChainFound - except for the ones not set as BLOCK_FAILED_CHILD because of the potential bug), is it correct that the main goal of changes applied in InvalidateBlock is to maintain proper block statuses and best header between tip disconnections by marking children as invalid right away and recalculating the best header immediately rather than doing it later?\r\n\r\nYes, that's correct. The main goal of this PR to add these assumptions to `CheckBlockIndex()` - this means they should always be true when `cs_main` is not held. Since `InvalidateBlock` will release `cs_main` and call `CheckBlockIndex()` after each step, some tests would fail without the changes to `InvalidateBlock()`  - even if the final `InvalidChainFound()` in that function will eventually correct it!",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#issuecomment-2730598301",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31405"
    },
    {
      "event": "convert_to_draft",
      "id": 16815110169,
      "node_id": "CTDE_lADOABII586ht3A5zwAAAAPqQjgZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16815110169",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-17T21:52:17Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16851106968,
      "node_id": "HRFPE_lADOABII586ht3A5zwAAAAPsZ3yY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16851106968",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fd39a6420dad4cfc8bfff73f32df663da1ec00e2",
      "commit_url": "https://api.github.com/repos/mzumsande/bitcoin/commits/fd39a6420dad4cfc8bfff73f32df663da1ec00e2",
      "created_at": "2025-03-18T22:25:57Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16851157187,
      "node_id": "HRFPE_lADOABII586ht3A5zwAAAAPsaEDD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16851157187",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fe83133998cb7206281eb6d7a0a405aa025bee1b",
      "commit_url": "https://api.github.com/repos/mzumsande/bitcoin/commits/fe83133998cb7206281eb6d7a0a405aa025bee1b",
      "created_at": "2025-03-18T22:32:49Z"
    },
    {
      "event": "commented",
      "id": 2734888712,
      "node_id": "IC_kwDOABII586jAxcI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2734888712",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-18T22:37:51Z",
      "updated_at": "2025-03-18T22:38:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "[4ba2e48](https://github.com/bitcoin/bitcoin/commit/4ba2e480ffa0b77113953bee4ff5c9349e277e7e) to [fe83133](https://github.com/bitcoin/bitcoin/commit/fe83133998cb7206281eb6d7a0a405aa025bee1b): \r\nI changed the approach to `InvalidateBlock()` after the suggestion by @stickies-v: Instead of having 3 slightly different caches, now only one cache is used for everything (`highpow_outofchain_headers`). This should make the changes more simple and have a negligible overhead of a few additional `GetAncestor()` calls.\r\n\r\nI also added a call to CheckBlockIndex after each iteration of `InvalidateBlock()` (which releases `cs_main`, so any other thread could call CBI, which means that the block index cannot be in an inconsistent state, even temporarily). This should make it clear why the changes to `InvalidateBlock()` are necessary, even if (as @stringintech noted) the additional checks to `CheckBlockIndex` might not have led to an failure otherwise.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#issuecomment-2734888712",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31405"
    },
    {
      "event": "mentioned",
      "id": 16851194481,
      "node_id": "MEE_lADOABII586ht3A5zwAAAAPsaNJx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16851194481",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-18T22:37:52Z"
    },
    {
      "event": "subscribed",
      "id": 16851194492,
      "node_id": "SE_lADOABII586ht3A5zwAAAAPsaNJ8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16851194492",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-18T22:37:52Z"
    },
    {
      "event": "mentioned",
      "id": 16851194503,
      "node_id": "MEE_lADOABII586ht3A5zwAAAAPsaNKH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16851194503",
      "actor": {
        "login": "stringintech",
        "id": 157148846,
        "node_id": "U_kgDOCV3mrg",
        "avatar_url": "https://avatars.githubusercontent.com/u/157148846?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stringintech",
        "html_url": "https://github.com/stringintech",
        "followers_url": "https://api.github.com/users/stringintech/followers",
        "following_url": "https://api.github.com/users/stringintech/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stringintech/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stringintech/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stringintech/subscriptions",
        "organizations_url": "https://api.github.com/users/stringintech/orgs",
        "repos_url": "https://api.github.com/users/stringintech/repos",
        "events_url": "https://api.github.com/users/stringintech/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stringintech/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-18T22:37:52Z"
    },
    {
      "event": "subscribed",
      "id": 16851194512,
      "node_id": "SE_lADOABII586ht3A5zwAAAAPsaNKQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16851194512",
      "actor": {
        "login": "stringintech",
        "id": 157148846,
        "node_id": "U_kgDOCV3mrg",
        "avatar_url": "https://avatars.githubusercontent.com/u/157148846?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stringintech",
        "html_url": "https://github.com/stringintech",
        "followers_url": "https://api.github.com/users/stringintech/followers",
        "following_url": "https://api.github.com/users/stringintech/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stringintech/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stringintech/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stringintech/subscriptions",
        "organizations_url": "https://api.github.com/users/stringintech/orgs",
        "repos_url": "https://api.github.com/users/stringintech/repos",
        "events_url": "https://api.github.com/users/stringintech/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stringintech/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-18T22:37:52Z"
    },
    {
      "event": "ready_for_review",
      "id": 16869224321,
      "node_id": "RFRE_lADOABII586ht3A5zwAAAAPte--B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16869224321",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-19T15:27:13Z"
    },
    {
      "event": "reviewed",
      "id": 2700378034,
      "node_id": "PRR_kwDOABII586g9H-y",
      "url": null,
      "actor": null,
      "commit_id": "fe83133998cb7206281eb6d7a0a405aa025bee1b",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "stringintech",
        "id": 157148846,
        "node_id": "U_kgDOCV3mrg",
        "avatar_url": "https://avatars.githubusercontent.com/u/157148846?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stringintech",
        "html_url": "https://github.com/stringintech",
        "followers_url": "https://api.github.com/users/stringintech/followers",
        "following_url": "https://api.github.com/users/stringintech/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stringintech/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stringintech/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stringintech/subscriptions",
        "organizations_url": "https://api.github.com/users/stringintech/orgs",
        "repos_url": "https://api.github.com/users/stringintech/repos",
        "events_url": "https://api.github.com/users/stringintech/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stringintech/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#pullrequestreview-2700378034",
      "submitted_at": "2025-03-19T22:07:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16934496061,
      "node_id": "HRFPE_lADOABII586ht3A5zwAAAAPxX-c9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16934496061",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7a10c2b703e35f3583a5137094ed68d9b09917ba",
      "commit_url": "https://api.github.com/repos/mzumsande/bitcoin/commits/7a10c2b703e35f3583a5137094ed68d9b09917ba",
      "created_at": "2025-03-21T19:46:45Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16934513513,
      "node_id": "HRFPE_lADOABII586ht3A5zwAAAAPxYCtp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16934513513",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7b6fe5a2196d53a3024dfe7f11b316a50acc3cb7",
      "commit_url": "https://api.github.com/repos/mzumsande/bitcoin/commits/7b6fe5a2196d53a3024dfe7f11b316a50acc3cb7",
      "created_at": "2025-03-21T19:48:22Z"
    },
    {
      "event": "commented",
      "id": 2744317516,
      "node_id": "IC_kwDOABII586jkvZM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2744317516",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-21T19:55:11Z",
      "updated_at": "2025-03-21T19:55:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "[fe83133](https://github.com/bitcoin/bitcoin/commit/fe83133998cb7206281eb6d7a0a405aa025bee1b) to [7b6fe5a](https://github.com/bitcoin/bitcoin/commit/7b6fe5a2196d53a3024dfe7f11b316a50acc3cb7) - addressed feedback by @stringintech, thanks!",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#issuecomment-2744317516",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31405"
    },
    {
      "event": "mentioned",
      "id": 16934597528,
      "node_id": "MEE_lADOABII586ht3A5zwAAAAPxYXOY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16934597528",
      "actor": {
        "login": "stringintech",
        "id": 157148846,
        "node_id": "U_kgDOCV3mrg",
        "avatar_url": "https://avatars.githubusercontent.com/u/157148846?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stringintech",
        "html_url": "https://github.com/stringintech",
        "followers_url": "https://api.github.com/users/stringintech/followers",
        "following_url": "https://api.github.com/users/stringintech/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stringintech/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stringintech/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stringintech/subscriptions",
        "organizations_url": "https://api.github.com/users/stringintech/orgs",
        "repos_url": "https://api.github.com/users/stringintech/repos",
        "events_url": "https://api.github.com/users/stringintech/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stringintech/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-21T19:55:12Z"
    },
    {
      "event": "subscribed",
      "id": 16934597546,
      "node_id": "SE_lADOABII586ht3A5zwAAAAPxYXOq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16934597546",
      "actor": {
        "login": "stringintech",
        "id": 157148846,
        "node_id": "U_kgDOCV3mrg",
        "avatar_url": "https://avatars.githubusercontent.com/u/157148846?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stringintech",
        "html_url": "https://github.com/stringintech",
        "followers_url": "https://api.github.com/users/stringintech/followers",
        "following_url": "https://api.github.com/users/stringintech/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stringintech/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stringintech/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stringintech/subscriptions",
        "organizations_url": "https://api.github.com/users/stringintech/orgs",
        "repos_url": "https://api.github.com/users/stringintech/repos",
        "events_url": "https://api.github.com/users/stringintech/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stringintech/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-21T19:55:12Z"
    },
    {
      "event": "commented",
      "id": 2761742864,
      "node_id": "IC_kwDOABII586knNoQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2761742864",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-28T15:48:41Z",
      "updated_at": "2025-03-28T15:49:00Z",
      "author_association": "MEMBER",
      "body": "utACK 7b6fe5a2196d53a3024dfe7f11b316a50acc3cb7\r\n\r\nThe code changes make sense, I think, given the fact that the block index failed flags are generally kept consistent already, apart from some edge cases around `invalidateblock`. I think the existing design stemmed from a desire not to have full block index iterations wherever possible, but if we've already bit the bullet on that, there is no need to for the complexity laziness brings here.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#issuecomment-2761742864",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31405"
    },
    {
      "event": "review_requested",
      "id": 17034801374,
      "node_id": "RRE_lADOABII586ht3A5zwAAAAP3WnDe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17034801374",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-28T15:49:04Z",
      "requested_reviewer": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 17034801581,
      "node_id": "RRE_lADOABII586ht3A5zwAAAAP3WnGt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17034801581",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-28T15:49:05Z",
      "requested_reviewer": {
        "login": "stringintech",
        "id": 157148846,
        "node_id": "U_kgDOCV3mrg",
        "avatar_url": "https://avatars.githubusercontent.com/u/157148846?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stringintech",
        "html_url": "https://github.com/stringintech",
        "followers_url": "https://api.github.com/users/stringintech/followers",
        "following_url": "https://api.github.com/users/stringintech/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stringintech/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stringintech/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stringintech/subscriptions",
        "organizations_url": "https://api.github.com/users/stringintech/orgs",
        "repos_url": "https://api.github.com/users/stringintech/repos",
        "events_url": "https://api.github.com/users/stringintech/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stringintech/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 17034801793,
      "node_id": "RRE_lADOABII586ht3A5zwAAAAP3WnKB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17034801793",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-28T15:49:06Z",
      "requested_reviewer": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2727393482,
      "node_id": "PRR_kwDOABII586ikLjK",
      "url": null,
      "actor": null,
      "commit_id": "7b6fe5a2196d53a3024dfe7f11b316a50acc3cb7",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "crACK 7b6fe5a2196d53a3024dfe7f11b316a50acc3cb7\r\n\r\nThis reduces complexity overall and I am happy that the slightly verbose block in `AcceptBlockHeader` and the `m_dirty_blockindex` are gone. It is not really straight forward to review though and I hope I did not miss any edge cases or real performance drawbacks. Might be good to get some more eyes on this. Having a better abstraction on the BlockMap / block tree data structure that just handles all of this internally could make things easier in the future.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#pullrequestreview-2727393482",
      "submitted_at": "2025-03-29T21:11:17Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17078493977,
      "node_id": "HRFPE_lADOABII586ht3A5zwAAAAP59SMZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17078493977",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "96e6371328c7715ef814da5831d08b5d30285dd3",
      "commit_url": "https://api.github.com/repos/mzumsande/bitcoin/commits/96e6371328c7715ef814da5831d08b5d30285dd3",
      "created_at": "2025-04-01T16:16:28Z"
    },
    {
      "event": "commented",
      "id": 2769906962,
      "node_id": "IC_kwDOABII586lGW0S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2769906962",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-01T16:19:34Z",
      "updated_at": "2025-04-01T16:19:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "[7b6fe5a](https://github.com/bitcoin/bitcoin/commit/7b6fe5a2196d53a3024dfe7f11b316a50acc3cb7) to [96e6371](https://github.com/bitcoin/bitcoin/commit/96e6371328c7715ef814da5831d08b5d30285dd3):\r\nAddressed https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2019820910 and removed unnecessary braces. ",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#issuecomment-2769906962",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31405"
    },
    {
      "event": "reviewed",
      "id": 2733862191,
      "node_id": "PRR_kwDOABII586i820v",
      "url": null,
      "actor": null,
      "commit_id": "96e6371328c7715ef814da5831d08b5d30285dd3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Re-ACK 96e6371328c7715ef814da5831d08b5d30285dd3",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#pullrequestreview-2733862191",
      "submitted_at": "2025-04-01T19:31:38Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
    },
    {
      "event": "review_requested",
      "id": 17081492261,
      "node_id": "RRE_lADOABII586ht3A5zwAAAAP6IuMl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17081492261",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-01T19:31:43Z",
      "requested_reviewer": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2738896003,
      "node_id": "PRR_kwDOABII586jQDyD",
      "url": null,
      "actor": null,
      "commit_id": "96e6371328c7715ef814da5831d08b5d30285dd3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "reACK 96e6371.\r\n\r\nI liked the new approach of using 1 cache for everything and the smaller diff. Also went through the logs in rpc_invalidate.py to make sure that everything works as intended.",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#pullrequestreview-2738896003",
      "submitted_at": "2025-04-03T08:07:41Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
    },
    {
      "event": "labeled",
      "id": 17379204197,
      "node_id": "LE_lADOABII586ht3A5zwAAAAQL4Zxl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17379204197",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-23T22:51:47Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17395637087,
      "node_id": "HRFPE_lADOABII586ht3A5zwAAAAQM3Ftf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17395637087",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "41860d98408f52c29e78f7708e8a0355ea5cc04c",
      "commit_url": "https://api.github.com/repos/mzumsande/bitcoin/commits/41860d98408f52c29e78f7708e8a0355ea5cc04c",
      "created_at": "2025-04-24T18:45:34Z"
    },
    {
      "event": "commented",
      "id": 2828565105,
      "node_id": "IC_kwDOABII586omHpx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2828565105",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-24T18:46:18Z",
      "updated_at": "2025-04-24T18:46:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "[96e6371](https://github.com/bitcoin/bitcoin/commit/96e6371328c7715ef814da5831d08b5d30285dd3) to [41860d9](https://github.com/bitcoin/bitcoin/commit/41860d98408f52c29e78f7708e8a0355ea5cc04c): rebased due to conflict with https://github.com/bitcoin/bitcoin/pull/31835",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#issuecomment-2828565105",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31405"
    },
    {
      "event": "unlabeled",
      "id": 17396525502,
      "node_id": "UNLE_lADOABII586ht3A5zwAAAAQM6em-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17396525502",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-24T19:58:20Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2788075175,
      "node_id": "PRR_kwDOABII586mLqan",
      "url": null,
      "actor": null,
      "commit_id": "41860d98408f52c29e78f7708e8a0355ea5cc04c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "The implementation simplifications since my last review are great (and require a small update to the PR description which still mentions the addition of two caches).\r\n\r\nI'm still not 100% comfortable that the changes don't introduce any unwanted side-effects, so I want to give it another full review first. Approach ACK.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#pullrequestreview-2788075175",
      "submitted_at": "2025-04-24T20:10:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
    },
    {
      "event": "labeled",
      "id": 17397563491,
      "node_id": "LE_lADOABII586ht3A5zwAAAAQM-cBj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17397563491",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-24T21:28:59Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 17460153841,
      "node_id": "UNLE_lADOABII586ht3A5zwAAAAQQtM3x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17460153841",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-29T17:50:17Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17526833714,
      "node_id": "HRFPE_lADOABII586ht3A5zwAAAAQUrkIy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17526833714",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8f4e7a6e7d2c23fd3527a15cf0b0aca26c5bcb49",
      "commit_url": "https://api.github.com/repos/mzumsande/bitcoin/commits/8f4e7a6e7d2c23fd3527a15cf0b0aca26c5bcb49",
      "created_at": "2025-05-05T22:01:40Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17527372441,
      "node_id": "HRFPE_lADOABII586ht3A5zwAAAAQUtnqZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17527372441",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9d001dc1b1627f7a973e21227955bba1f473d6aa",
      "commit_url": "https://api.github.com/repos/mzumsande/bitcoin/commits/9d001dc1b1627f7a973e21227955bba1f473d6aa",
      "created_at": "2025-05-05T22:57:45Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17541466173,
      "node_id": "HRFPE_lADOABII586ht3A5zwAAAAQVjYg9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17541466173",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ed172d3002da68a3ddbd5d13e7d3f0618c1378d4",
      "commit_url": "https://api.github.com/repos/mzumsande/bitcoin/commits/ed172d3002da68a3ddbd5d13e7d3f0618c1378d4",
      "created_at": "2025-05-06T17:18:58Z"
    },
    {
      "event": "reviewed",
      "id": 2843060953,
      "node_id": "PRR_kwDOABII586pdarZ",
      "url": null,
      "actor": null,
      "commit_id": "ed172d3002da68a3ddbd5d13e7d3f0618c1378d4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK ed172d3002da68a3ddbd5d13e7d3f0618c1378d4\r\n\r\nI've thoroughly gone through this PR many times now, and I don't think I can assure myself anymore than I am now that it is correct and safe. Still, the code touched in this PR is fairly complicated and coupled, and I am not as familiar with this validation logic as others, so my main concern is that there are unexpected side-effects I've not considered.\r\n\r\nNits can be ignored, comments (if correct) can be addressed in other pulls.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#pullrequestreview-2843060953",
      "submitted_at": "2025-05-15T12:10:33Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
    },
    {
      "event": "review_requested",
      "id": 17670958083,
      "node_id": "RRE_lADOABII586ht3A5zwAAAAQdRWwD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17670958083",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-15T12:10:38Z",
      "requested_reviewer": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 17670958340,
      "node_id": "RRE_lADOABII586ht3A5zwAAAAQdRW0E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17670958340",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-15T12:10:39Z",
      "requested_reviewer": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2848281583,
      "node_id": "PRR_kwDOABII586pxVPv",
      "url": null,
      "actor": null,
      "commit_id": "ed172d3002da68a3ddbd5d13e7d3f0618c1378d4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Re-ACK ed172d3002da68a3ddbd5d13e7d3f0618c1378d4",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#pullrequestreview-2848281583",
      "submitted_at": "2025-05-17T13:27:02Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
    },
    {
      "event": "referenced",
      "id": 17839403213,
      "node_id": "REFE_lADOABII586ht3A5zwAAAAQnT7DN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17839403213",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "aee7cec0db8f57a9410e85aed7f40bfaa0de9393",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aee7cec0db8f57a9410e85aed7f40bfaa0de9393",
      "created_at": "2025-05-27T22:32:44Z"
    },
    {
      "event": "commented",
      "id": 2914394066,
      "node_id": "IC_kwDOABII586tth_S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2914394066",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-27T23:06:04Z",
      "updated_at": "2025-05-27T23:06:04Z",
      "author_association": "MEMBER",
      "body": "ACK ed172d3002da68a3ddbd5d13e7d3f0618c1378d4\r\n\r\nWould prefer if others more familiar with consensus could review this before merging.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#issuecomment-2914394066",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31405"
    },
    {
      "event": "reviewed",
      "id": 2889196839,
      "node_id": "PRR_kwDOABII586sNaUn",
      "url": null,
      "actor": null,
      "commit_id": "ed172d3002da68a3ddbd5d13e7d3f0618c1378d4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK ed172d3002da68a3ddbd5d13e7d3f0618c1378d4. Seems a lot nicer to track more reliable information instead of relying on best-effort heuristics if this is now possible.\r\n\r\nThis change looks ready to merge with all the reviews and discussion so far, but there are some suggestions from 3 weeks ago https://github.com/bitcoin/bitcoin/pull/31405#pullrequestreview-2843060953 that could be responded to. Could merge this or hold off depending on your preference @mzumsande ",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#pullrequestreview-2889196839",
      "submitted_at": "2025-06-02T19:08:01Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
    },
    {
      "event": "commented",
      "id": 2932138830,
      "node_id": "IC_kwDOABII586uxONO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2932138830",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-02T19:23:45Z",
      "updated_at": "2025-06-02T19:23:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "> This change looks ready to merge with all the reviews and discussion so far, but there are some suggestions from 3 weeks ago [#31405 (review)](https://github.com/bitcoin/bitcoin/pull/31405#pullrequestreview-2843060953) that could be responded to. Could merge this or hold off depending on your preference @mzumsande\r\n\r\nPlease hold off merging, I'll address @stickies-v  and your comments later this week!",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#issuecomment-2932138830",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31405"
    },
    {
      "event": "mentioned",
      "id": 17941466934,
      "node_id": "MEE_lADOABII586ht3A5zwAAAAQtZQ82",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17941466934",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-02T19:23:46Z"
    },
    {
      "event": "subscribed",
      "id": 17941466961,
      "node_id": "SE_lADOABII586ht3A5zwAAAAQtZQ9R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17941466961",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-02T19:23:47Z"
    },
    {
      "event": "mentioned",
      "id": 17941466990,
      "node_id": "MEE_lADOABII586ht3A5zwAAAAQtZQ9u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17941466990",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-02T19:23:47Z"
    },
    {
      "event": "subscribed",
      "id": 17941467003,
      "node_id": "SE_lADOABII586ht3A5zwAAAAQtZQ97",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17941467003",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-02T19:23:47Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18007228158,
      "node_id": "HRFPE_lADOABII586ht3A5zwAAAAQxUH7-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18007228158",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1f09e3754363382806cc1e3d6bed25cd235ac5f4",
      "commit_url": "https://api.github.com/repos/mzumsande/bitcoin/commits/1f09e3754363382806cc1e3d6bed25cd235ac5f4",
      "created_at": "2025-06-05T18:21:09Z"
    },
    {
      "event": "commented",
      "id": 2945690965,
      "node_id": "IC_kwDOABII586vk61V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2945690965",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-05T18:51:38Z",
      "updated_at": "2025-06-05T19:48:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "[ed172d3](https://github.com/bitcoin/bitcoin/commit/ed172d3002da68a3ddbd5d13e7d3f0618c1378d4) to [fdcdc2c](https://github.com/bitcoin/bitcoin/commit/fdcdc2cdeadb5d36076f1b94b54261e22e031354):\r\nAddressed feedback by @stickies-v and @ryanofsky - thanks!",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#issuecomment-2945690965",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31405"
    },
    {
      "event": "mentioned",
      "id": 18007729911,
      "node_id": "MEE_lADOABII586ht3A5zwAAAAQxWCb3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18007729911",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-05T18:51:39Z"
    },
    {
      "event": "subscribed",
      "id": 18007729920,
      "node_id": "SE_lADOABII586ht3A5zwAAAAQxWCcA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18007729920",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-05T18:51:39Z"
    },
    {
      "event": "mentioned",
      "id": 18007729926,
      "node_id": "MEE_lADOABII586ht3A5zwAAAAQxWCcG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18007729926",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-05T18:51:39Z"
    },
    {
      "event": "subscribed",
      "id": 18007729933,
      "node_id": "SE_lADOABII586ht3A5zwAAAAQxWCcN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18007729933",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-05T18:51:39Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18008742548,
      "node_id": "HRFPE_lADOABII586ht3A5zwAAAAQxZ5qU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18008742548",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fdcdc2cdeadb5d36076f1b94b54261e22e031354",
      "commit_url": "https://api.github.com/repos/mzumsande/bitcoin/commits/fdcdc2cdeadb5d36076f1b94b54261e22e031354",
      "created_at": "2025-06-05T19:45:49Z"
    },
    {
      "event": "reviewed",
      "id": 2904751108,
      "node_id": "PRR_kwDOABII586tIvwE",
      "url": null,
      "actor": null,
      "commit_id": "fdcdc2cdeadb5d36076f1b94b54261e22e031354",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "re-ACK fdcdc2cdeadb5d36076f1b94b54261e22e031354\r\n\r\nMostly documentation changes addressing review feedback. Non-trivial code changes are:\r\n- [deduplicating](https://github.com/bitcoin/bitcoin/compare/ed172d3002da68a3ddbd5d13e7d3f0618c1378d4..1f09e3754363382806cc1e3d6bed25cd235ac5f4#diff-97c3a52bc5fad452d82670a7fd291800bae20c7bc35bb82686c2c0a4ea7b5b98R4523-R4525) `InvalidChainFound()` logic, addressing https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2090791378\r\n- [Choosing](https://github.com/bitcoin/bitcoin/compare/ed172d3002da68a3ddbd5d13e7d3f0618c1378d4..1f09e3754363382806cc1e3d6bed25cd235ac5f4#diff-97c3a52bc5fad452d82670a7fd291800bae20c7bc35bb82686c2c0a4ea7b5b98R3787) new `m_best_header` solely based on `nChainwork`, addressing https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2090961175\r\n\r\n",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#pullrequestreview-2904751108",
      "submitted_at": "2025-06-06T12:43:36Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
    },
    {
      "event": "review_requested",
      "id": 18022251452,
      "node_id": "RRE_lADOABII586ht3A5zwAAAAQyNbu8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18022251452",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-06T12:43:42Z",
      "requested_reviewer": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 18022251631,
      "node_id": "RRE_lADOABII586ht3A5zwAAAAQyNbxv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18022251631",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-06T12:43:43Z",
      "requested_reviewer": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 18022251818,
      "node_id": "RRE_lADOABII586ht3A5zwAAAAQyNb0q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18022251818",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-06T12:43:44Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18024647304,
      "node_id": "HRFPE_lADOABII586ht3A5zwAAAAQyWkqI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18024647304",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "76c835f77205d04c4206acad1a8a636562c22f79",
      "commit_url": "https://api.github.com/repos/mzumsande/bitcoin/commits/76c835f77205d04c4206acad1a8a636562c22f79",
      "created_at": "2025-06-06T15:20:16Z"
    },
    {
      "event": "commented",
      "id": 2949593753,
      "node_id": "IC_kwDOABII586vzzqZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2949593753",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-06T15:21:52Z",
      "updated_at": "2025-06-06T15:24:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "[fdcdc2c](https://github.com/bitcoin/bitcoin/commit/fdcdc2cdeadb5d36076f1b94b54261e22e031354) to[f6b782f](https://github.com/bitcoin/bitcoin/commit/f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1): addressed nits",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#issuecomment-2949593753",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31405"
    },
    {
      "event": "labeled",
      "id": 18024695021,
      "node_id": "LE_lADOABII586ht3A5zwAAAAQyWwTt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18024695021",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-06T15:23:39Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2949599591,
      "node_id": "IC_kwDOABII586vz1Fn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2949599591",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-06T15:23:42Z",
      "updated_at": "2025-06-06T15:23:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `TSan, depends, gui`: https://github.com/bitcoin/bitcoin/runs/43626034007</sub>\n<sub>LLM reason (✨ experimental): The CI failed due to a syntax error in src/validation.cpp at line 4493, caused by an unbalanced parenthesis in the line `if (Assume(state.IsInvalid()) {`.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#issuecomment-2949599591",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31405"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE1ZmE1YjVhOTA4ZDEwMTlmYzFiMzA0MjkwMWI0MmJlZTBhMWJkOTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/15fa5b5a908d1019fc1b3042901b42bee0a1bd95",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/15fa5b5a908d1019fc1b3042901b42bee0a1bd95",
      "tree": {
        "sha": "fd728f4ed59b65dbad588cd40bcbe45db73cc771",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd728f4ed59b65dbad588cd40bcbe45db73cc771"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/458720e5e98c6e9103aea1fdfcd39bafc26c27bb",
          "sha": "458720e5e98c6e9103aea1fdfcd39bafc26c27bb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/458720e5e98c6e9103aea1fdfcd39bafc26c27bb"
        }
      ],
      "message": "validation: call InvalidBlockFound also from AcceptBlock\n\nWhen a block it found invalid during acceptance (but before connection)\nwe now mark its descendants with BLOCK_FAILED_CHILD and update\nm_best_header when these things weren't done reliably before.\n\nThis does not fix a serious bug because the flags and m_best_header were being set on a best-effort basis before\nand not used for anything critical.\nSetting these reliably has a slight performance cost (iterating over the\nentire block index) but leads to more consistency in validation and allows removing m_failed_blocks in a later commit.\nThis can only be triggered by providing a block with sufficient PoW\nthat is otherwise invalid, so it is not a DoS vector.",
      "committer": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2025-06-06T15:23:44Z"
      },
      "author": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2024-12-01T04:46:10Z"
      },
      "sha": "15fa5b5a908d1019fc1b3042901b42bee0a1bd95"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRjMjkzMjYxODNiYTNjOWQwYjE5OGNiMmNlYzM3YzMxMTk4NjJjMTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c29326183ba3c9d0b198cb2cec37c3119862c19",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4c29326183ba3c9d0b198cb2cec37c3119862c19",
      "tree": {
        "sha": "869427cf8129e629a74ea4f44b2e2af1aef77cdc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/869427cf8129e629a74ea4f44b2e2af1aef77cdc"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/15fa5b5a908d1019fc1b3042901b42bee0a1bd95",
          "sha": "15fa5b5a908d1019fc1b3042901b42bee0a1bd95",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/15fa5b5a908d1019fc1b3042901b42bee0a1bd95"
        }
      ],
      "message": "validation: cache all headers with enough PoW in invalidateblock\n\nWe now include blocks without HaveNumChainTxs() / lower validation status\nthan BLOCK_VALID_TRANSACTIONS. These checks are still performed at the\nspot where we use the cache to insert into setBlockIndexCandidates.\n\nThis is in preparation for using the cache for more things than\njust setBlockIndexCandidates candidates in the following commits.\n\nCo-authored-by: stickies-v <stickies-v@protonmail.com>",
      "committer": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2025-06-06T15:23:44Z"
      },
      "author": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2025-03-18T20:30:52Z"
      },
      "sha": "4c29326183ba3c9d0b198cb2cec37c3119862c19"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhlMzlmMmQyMGQwOTU5MjAzNWFlMDQ4ZDBjZmU5NTVjNzMzMzEwZDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8e39f2d20d09592035ae048d0cfe955c733310d9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8e39f2d20d09592035ae048d0cfe955c733310d9",
      "tree": {
        "sha": "d78676ec99d28e3a7c13d5d61f0ed021aa04c92f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d78676ec99d28e3a7c13d5d61f0ed021aa04c92f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c29326183ba3c9d0b198cb2cec37c3119862c19",
          "sha": "4c29326183ba3c9d0b198cb2cec37c3119862c19",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4c29326183ba3c9d0b198cb2cec37c3119862c19"
        }
      ],
      "message": "validation: in invalidateblock, mark children as invalid right away\n\nBefore, they would be marked as invalid only after disconnecting\nmultiple blocks, letting go of cs_main in the meantime.\nThis is in preparation for adding a check to\nCheckBlockIndex() requiring that descendants of invalid block indexes\nare always marked as invalid.\nEntries from highpow_outofchain_headers are now only removed if made invalid,\nno longer after inserting into setBlockIndexCandidates, because they\nmight still become invalid later in the second case.\nThis means that blocks could be inserted multiple times now into\nsetBlockIndexCandidates - this won't have any effect, so\nbehavior isn't changed.",
      "committer": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2025-06-06T15:23:44Z"
      },
      "author": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2024-11-30T20:39:55Z"
      },
      "sha": "8e39f2d20d09592035ae048d0cfe955c733310d9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDlhNzA4ODMwMDJlMWZlZTc2YzI0ODEwODA4YWY0ZmI0M2YyYzhjZjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a70883002e1fee76c24810808af4fb43f2c8cf5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9a70883002e1fee76c24810808af4fb43f2c8cf5",
      "tree": {
        "sha": "f12b45fa6762debf56be8980256ec5e80f494fa6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f12b45fa6762debf56be8980256ec5e80f494fa6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8e39f2d20d09592035ae048d0cfe955c733310d9",
          "sha": "8e39f2d20d09592035ae048d0cfe955c733310d9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8e39f2d20d09592035ae048d0cfe955c733310d9"
        }
      ],
      "message": "validation: in invalidateblock, calculate m_best_header right away\n\nBefore, m_best_header would be calculated only after disconnecting\nmultiple blocks, letting go of cs_main in the meantime.\nThis is in preparation for adding checks to CheckBlockIndex()\nrequiring that m_best_header is the most-work header not known to be invalid.\n\nCo-authored-by: stringintech <stringintech@gmail.com>",
      "committer": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2025-06-06T15:23:44Z"
      },
      "author": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2024-11-25T22:07:53Z"
      },
      "sha": "9a70883002e1fee76c24810808af4fb43f2c8cf5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVkNzY0ZWEyYjRlZGIzY2YxOTI1YTRiZmY1ZjM5NTY3YThiZTU0YWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed764ea2b4edb3cf1925a4bff5f39567a8be54ac",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ed764ea2b4edb3cf1925a4bff5f39567a8be54ac",
      "tree": {
        "sha": "ae18ddaee8d045143945e700049429ee59a22e18",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ae18ddaee8d045143945e700049429ee59a22e18"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a70883002e1fee76c24810808af4fb43f2c8cf5",
          "sha": "9a70883002e1fee76c24810808af4fb43f2c8cf5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9a70883002e1fee76c24810808af4fb43f2c8cf5"
        }
      ],
      "message": "validation: Add more checks to CheckBlockIndex()\n\nThis adds checks that\n1) Descendants of invalid block indexes are also marked invalid\n2) m_best_header cannot be invalid, and there can be no valid\nblock with more work than it.",
      "committer": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2025-06-06T15:23:44Z"
      },
      "author": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2024-12-02T16:22:26Z"
      },
      "sha": "ed764ea2b4edb3cf1925a4bff5f39567a8be54ac"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVlNjczYjlhYTAxNTdkOTQyMjA3MjI0OTFmMTM1YWVmMjMxNDI1MjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee673b9aa0157d94220722491f135aef23142521",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ee673b9aa0157d94220722491f135aef23142521",
      "tree": {
        "sha": "e29778c8be6303ef832b4dbe0336a9ea5ef47ba1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e29778c8be6303ef832b4dbe0336a9ea5ef47ba1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed764ea2b4edb3cf1925a4bff5f39567a8be54ac",
          "sha": "ed764ea2b4edb3cf1925a4bff5f39567a8be54ac",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ed764ea2b4edb3cf1925a4bff5f39567a8be54ac"
        }
      ],
      "message": "validation: remove m_failed_blocks\n\nAfter changes in previous commits, we now mark all blocks that descend from an invalid block\nimmediately as the block is found invalid. This happens both in the AcceptBlock\nand ConnectBlock stages of block validation.\nAs a result, the pindexPrev->nStatus check in AcceptBlockHeader is now sufficient to detect\ninvalid blocks and checking m_failed_blocks there is no longer necessary.",
      "committer": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2025-06-06T15:23:44Z"
      },
      "author": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2024-12-01T05:08:51Z"
      },
      "sha": "ee673b9aa0157d94220722491f135aef23142521"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY2Yjc4MmYzYWFkNGE2YmNmODIzYTlhMGZhYmI0NDE4YmNhMWVlYTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "tree": {
        "sha": "514cd3963a15d9ac8825ee510119a46a3b6496a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/514cd3963a15d9ac8825ee510119a46a3b6496a9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee673b9aa0157d94220722491f135aef23142521",
          "sha": "ee673b9aa0157d94220722491f135aef23142521",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ee673b9aa0157d94220722491f135aef23142521"
        }
      ],
      "message": "doc: Improve m_best_header documentation",
      "committer": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2025-06-06T15:23:44Z"
      },
      "author": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2025-06-05T17:54:27Z"
      },
      "sha": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18024700942,
      "node_id": "HRFPE_lADOABII586ht3A5zwAAAAQyWxwO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18024700942",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "commit_url": "https://api.github.com/repos/mzumsande/bitcoin/commits/f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "created_at": "2025-06-06T15:24:03Z"
    },
    {
      "event": "reviewed",
      "id": 2904963797,
      "node_id": "PRR_kwDOABII586tJjrV",
      "url": null,
      "actor": null,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK fdcdc2cdeadb5d36076f1b94b54261e22e031354. Looks good, thanks for many new clarifications! Only changes since last review were switching from a CBlockIndexWorkComparator to a nChainWork comparison, switching from InvalidChainFound to InvalidBlockFound without changing behavior, and improving many comment. I left more suggestions below which are not important and all only about comments.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#pullrequestreview-2904963797",
      "submitted_at": "2025-06-06T15:33:12Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
    },
    {
      "event": "reviewed",
      "id": 2905300599,
      "node_id": "PRR_kwDOABII586tK153",
      "url": null,
      "actor": null,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1 with only minor code & comment updates",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#pullrequestreview-2905300599",
      "submitted_at": "2025-06-06T15:36:42Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
    },
    {
      "event": "review_requested",
      "id": 18024885250,
      "node_id": "RRE_lADOABII586ht3A5zwAAAAQyXewC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18024885250",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-06T15:36:49Z",
      "requested_reviewer": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "unlabeled",
      "id": 18025797153,
      "node_id": "UNLE_lADOABII586ht3A5zwAAAAQya9Yh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18025797153",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-06T16:44:00Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2955469784,
      "node_id": "IC_kwDOABII586wKOPY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2955469784",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-09T11:06:58Z",
      "updated_at": "2025-06-09T11:06:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "re-ACK f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1\r\n\r\nNo changes except minor ones addressing review feedback wrt documentation updates and inlining.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#issuecomment-2955469784",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31405"
    },
    {
      "event": "reviewed",
      "id": 2912478922,
      "node_id": "PRR_kwDOABII586tmObK",
      "url": null,
      "actor": null,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Re-ACK f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#pullrequestreview-2912478922",
      "submitted_at": "2025-06-10T08:17:52Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
    },
    {
      "event": "reviewed",
      "id": 2913549953,
      "node_id": "PRR_kwDOABII586tqT6B",
      "url": null,
      "actor": null,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "This seems ready to merge, but it's also a subtle change so it could be helpful if more reviewers want to take a look and ack. I'm planning to merge this in a day or two if nothing new comes up.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#pullrequestreview-2913549953",
      "submitted_at": "2025-06-10T13:51:26Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1914320847",
      "pull_request_review_id": 2548919720,
      "id": 1914320847,
      "node_id": "PRRC_kwDOABII585yGjfP",
      "diff_hunk": "@@ -5367,6 +5359,8 @@ void ChainstateManager::CheckBlockIndex()\n         if (pindexFirstInvalid == nullptr) {\n             // Checks for not-invalid blocks.\n             assert((pindex->nStatus & BLOCK_FAILED_MASK) == 0); // The failed mask cannot be set for blocks without invalid parents.\n+        } else {",
      "path": "src/validation.cpp",
      "position": 181,
      "original_position": 152,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "b2136da98df61f10ff8283d42f112f69f041fa7a",
      "in_reply_to_id": null,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "528b8cc:  this would be more accurate for descendants.\r\n```suggestion\r\n        } else if (pindexFirstInvalid != pindex) {\r\n```",
      "created_at": "2025-01-14T06:41:56Z",
      "updated_at": "2025-01-15T08:54:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r1914320847",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1914320847"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5379,
      "original_line": 5379,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1914366243",
      "pull_request_review_id": 2548919720,
      "id": 1914366243,
      "node_id": "PRRC_kwDOABII585yGukj",
      "diff_hunk": "@@ -3729,6 +3739,28 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n+        // Mark descendants of the invalidated block as invalid\n+        auto range = cand_invalid_descendants.equal_range(invalid_walk_tip);\n+        for (auto it = range.first; it != range.second; ++it) {\n+            it->second->nStatus |= BLOCK_FAILED_CHILD;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "b2136da98df61f10ff8283d42f112f69f041fa7a",
      "in_reply_to_id": null,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "7f88af8b: when `invalidateblock` is called multiple times, we would need to clear the `BLOCK_FAILED_VALID` from previous iteration so that both `BLOCK_FAILED_VALID` and `BLOCK_FAILED_CHILD` don't happen together on the same block. ex: [this situation](https://github.com/bitcoin/bitcoin/blob/35bf426e02210c1bbb04926f4ca2e0285fbfcd11/test/functional/rpc_invalidateblock.py#L91)\r\n```\r\nif (it->second->nStatus & BLOCK_FAILED_VALID) {\r\n    it->second->nStatus = (it->second->nStatus ^ BLOCK_FAILED_VALID) | BLOCK_FAILED_CHILD;\r\n} else {\r\n    it->second->nStatus |= BLOCK_FAILED_CHILD;\r\n}\r\n```",
      "created_at": "2025-01-14T07:33:29Z",
      "updated_at": "2025-01-15T08:54:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r1914366243",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1914366243"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3745,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1932643967",
      "pull_request_review_id": 2579064521,
      "id": 1932643967,
      "node_id": "PRRC_kwDOABII585zMc5_",
      "diff_hunk": "@@ -5367,6 +5359,8 @@ void ChainstateManager::CheckBlockIndex()\n         if (pindexFirstInvalid == nullptr) {\n             // Checks for not-invalid blocks.\n             assert((pindex->nStatus & BLOCK_FAILED_MASK) == 0); // The failed mask cannot be set for blocks without invalid parents.\n+        } else {",
      "path": "src/validation.cpp",
      "position": 181,
      "original_position": 152,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "b2136da98df61f10ff8283d42f112f69f041fa7a",
      "in_reply_to_id": 1914320847,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I changed the comment to \"Invalid blocks and their descendants must be marked as invalid\" - doesn't really make sense to me to make an exception for the block itself.",
      "created_at": "2025-01-28T18:07:45Z",
      "updated_at": "2025-01-28T18:07:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r1932643967",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1932643967"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5379,
      "original_line": 5379,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1932645135",
      "pull_request_review_id": 2579066563,
      "id": 1932645135,
      "node_id": "PRRC_kwDOABII585zMdMP",
      "diff_hunk": "@@ -3729,6 +3739,28 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n+        // Mark descendants of the invalidated block as invalid\n+        auto range = cand_invalid_descendants.equal_range(invalid_walk_tip);\n+        for (auto it = range.first; it != range.second; ++it) {\n+            it->second->nStatus |= BLOCK_FAILED_CHILD;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "b2136da98df61f10ff8283d42f112f69f041fa7a",
      "in_reply_to_id": 1914366243,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, made it a bit shorter:\r\n`it->second->nStatus = (it->second->nStatus & ~BLOCK_FAILED_VALID) | BLOCK_FAILED_CHILD;`",
      "created_at": "2025-01-28T18:08:49Z",
      "updated_at": "2025-01-28T18:08:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r1932645135",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1932645135"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3745,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1944318554",
      "pull_request_review_id": 2598002988,
      "id": 1944318554,
      "node_id": "PRRC_kwDOABII585z4_Ja",
      "diff_hunk": "@@ -5434,6 +5435,8 @@ void ChainstateManager::CheckBlockIndex()\n         if (pindexFirstInvalid == nullptr) {\n             // Checks for not-invalid blocks.\n             assert((pindex->nStatus & BLOCK_FAILED_MASK) == 0); // The failed mask cannot be set for blocks without invalid parents.\n+        } else {\n+            assert((pindex->nStatus & BLOCK_FAILED_MASK)); // Invalid blocks and their descendants must be marked as invalid",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "eca8d9182e97f80d07bda2bb54481852280e26f1",
      "in_reply_to_id": null,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "eca8d91:   micro-style-nit only if you have to retouch - could make double (()) to ().",
      "created_at": "2025-02-06T08:40:53Z",
      "updated_at": "2025-02-10T15:17:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r1944318554",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1944318554"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5382,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1978269926",
      "pull_request_review_id": 2655396246,
      "id": 1978269926,
      "node_id": "PRRC_kwDOABII58516gDm",
      "diff_hunk": "@@ -3754,6 +3764,29 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n+        // Mark descendants of the invalidated block as invalid\n+        // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n+        auto range = cand_invalid_descendants.equal_range(invalid_walk_tip);\n+        for (auto it = range.first; it != range.second; ++it) {\n+            it->second->nStatus = (it->second->nStatus & ~BLOCK_FAILED_VALID) | BLOCK_FAILED_CHILD;\n+        }",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "4ba2e480ffa0b77113953bee4ff5c9349e277e7e",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is there a reason why we forcefully unset `BLOCK_FAILED_VALID`? Since both flags store orthogonal information in separate bits, intuitively I'd expect we could have both co-exist? If this breaks other assumptions, perhaps good to add to the documentation here?",
      "created_at": "2025-03-03T21:32:44Z",
      "updated_at": "2025-03-04T00:58:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r1978269926",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1978269926"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": 3767,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 3773,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1978292997",
      "pull_request_review_id": 2655396246,
      "id": 1978292997,
      "node_id": "PRRC_kwDOABII58516lsF",
      "diff_hunk": "@@ -3707,6 +3711,12 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n                     candidate->HaveNumChainTxs()) {\n                 candidate_blocks_by_work.insert(std::make_pair(candidate->nChainWork, candidate));\n             }\n+            // Similarly, populate cache for blocks not in main chain to invalidate\n+            if (!m_chain.Contains(candidate) &&\n+                !CBlockIndexWorkComparator()(candidate, pindex->pprev)) {\n+                cand_invalid_descendants.insert(std::make_pair(m_chain.FindFork(candidate), candidate));",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "4ba2e480ffa0b77113953bee4ff5c9349e277e7e",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It's not clear to me why we would only want to mark blocks with large-enough PoW as invalid descendants. If this is not a bug, I think behaviour is inconsistent with the commit message and should probably be document in the code too?",
      "created_at": "2025-03-03T21:48:45Z",
      "updated_at": "2025-03-04T00:58:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r1978292997",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1978292997"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3717,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1978437444",
      "pull_request_review_id": 2655396246,
      "id": 1978437444,
      "node_id": "PRRC_kwDOABII58517I9E",
      "diff_hunk": "@@ -3691,6 +3690,11 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n     // build a map once so that we can look up candidate blocks by chain\n     // work as we go.\n     std::multimap<const arith_uint256, CBlockIndex *> candidate_blocks_by_work;\n+    // Map to cache candidates not in the main chain that might need invalidating.\n+    // Maps fork block in chain to the candidates for invalidation.\n+    std::multimap<const CBlockIndex*, CBlockIndex*> cand_invalid_descendants;\n+    // Map to cache candidates for m_best_header\n+    std::multimap<const arith_uint256, CBlockIndex*> best_header_blocks_by_work;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "4ba2e480ffa0b77113953bee4ff5c9349e277e7e",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Since this map is a superset of `candidate_blocks_by_work `, I think we could just have one, and instead check for `IsValid(BLOCK_VALID_TRANSACTIONS) && HaveNumChainTxs()` further down when we update `setBlockIndexCandidates`? I suspect the memory impllications should be negligible either way, but I think it would clean up the code a bit?\r\n\r\nE.g. something like:\r\n\r\n<details>\r\n<summary>git diff on 4ba2e480ff</summary>\r\n\r\n```diff\r\ndiff --git a/src/validation.cpp b/src/validation.cpp\r\nindex f9c900ef27..ead0454f7b 100644\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -3689,12 +3689,10 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\r\n     // To avoid walking the block index repeatedly in search of candidates,\r\n     // build a map once so that we can look up candidate blocks by chain\r\n     // work as we go.\r\n-    std::multimap<const arith_uint256, CBlockIndex *> candidate_blocks_by_work;\r\n+    std::multimap<const arith_uint256, CBlockIndex *> highpow_outofchain_headers;\r\n     // Map to cache candidates not in the main chain that might need invalidating.\r\n     // Maps fork block in chain to the candidates for invalidation.\r\n     std::multimap<const CBlockIndex*, CBlockIndex*> cand_invalid_descendants;\r\n-    // Map to cache candidates for m_best_header\r\n-    std::multimap<const arith_uint256, CBlockIndex*> best_header_blocks_by_work;\r\n \r\n     {\r\n         LOCK(cs_main);\r\n@@ -3706,16 +3704,9 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\r\n             // Instead, consider only non-active-chain blocks that have at\r\n             // least as much work as where we expect the new tip to end up.\r\n             if (!m_chain.Contains(candidate) &&\r\n-                    !CBlockIndexWorkComparator()(candidate, pindex->pprev) &&\r\n-                    candidate->IsValid(BLOCK_VALID_TRANSACTIONS) &&\r\n-                    candidate->HaveNumChainTxs()) {\r\n-                candidate_blocks_by_work.insert(std::make_pair(candidate->nChainWork, candidate));\r\n-            }\r\n-            // Similarly, populate cache for blocks not in main chain to invalidate\r\n-            if (!m_chain.Contains(candidate) &&\r\n-                !CBlockIndexWorkComparator()(candidate, pindex->pprev)) {\r\n+                    !CBlockIndexWorkComparator()(candidate, pindex->pprev)) {\r\n+                highpow_outofchain_headers.insert(std::make_pair(candidate->nChainWork, candidate));\r\n                 cand_invalid_descendants.insert(std::make_pair(m_chain.FindFork(candidate), candidate));\r\n-                best_header_blocks_by_work.insert(std::make_pair(candidate->nChainWork, candidate));\r\n             }\r\n         }\r\n     }\r\n@@ -3774,11 +3765,9 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\r\n         // Determine new best header\r\n         if (m_chainman.m_best_header->nStatus & BLOCK_FAILED_MASK) {\r\n             m_chainman.m_best_header = invalid_walk_tip->pprev;\r\n-            auto best_header_it = best_header_blocks_by_work.lower_bound(m_chainman.m_best_header->nChainWork);\r\n-            while (best_header_it != best_header_blocks_by_work.end()) {\r\n-                if (best_header_it->second->nStatus & BLOCK_FAILED_MASK) {\r\n-                    best_header_it = best_header_blocks_by_work.erase(best_header_it);\r\n-                } else {\r\n+            auto best_header_it = highpow_outofchain_headers.lower_bound(m_chainman.m_best_header->nChainWork);\r\n+            while (best_header_it != highpow_outofchain_headers.end()) {\r\n+                if (!(best_header_it->second->nStatus & BLOCK_FAILED_MASK)) {\r\n                     if (!CBlockIndexWorkComparator()(best_header_it->second, m_chainman.m_best_header)) {\r\n                         m_chainman.m_best_header = best_header_it->second;\r\n                     }\r\n@@ -3788,11 +3777,12 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\r\n         }\r\n \r\n         // Add any equal or more work headers to setBlockIndexCandidates\r\n-        auto candidate_it = candidate_blocks_by_work.lower_bound(invalid_walk_tip->pprev->nChainWork);\r\n-        while (candidate_it != candidate_blocks_by_work.end()) {\r\n-            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev)) {\r\n-                setBlockIndexCandidates.insert(candidate_it->second);\r\n-                candidate_it = candidate_blocks_by_work.erase(candidate_it);\r\n+        auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\r\n+        while (candidate_it != highpow_outofchain_headers.end()) {\r\n+            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev) &&\r\n+                candidate_it->second->IsValid(BLOCK_VALID_TRANSACTIONS) &&\r\n+                candidate_it->second->HaveNumChainTxs()) {\r\n+                    setBlockIndexCandidates.insert(candidate_it->second);\r\n             } else {\r\n                 ++candidate_it;\r\n             }\r\n\r\n```\r\n</details>\r\n",
      "created_at": "2025-03-04T00:49:42Z",
      "updated_at": "2025-03-04T00:58:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r1978437444",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1978437444"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3697,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1980008065",
      "pull_request_review_id": 2658598209,
      "id": 1980008065,
      "node_id": "PRRC_kwDOABII5852BIaB",
      "diff_hunk": "@@ -3754,6 +3764,29 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n+        // Mark descendants of the invalidated block as invalid\n+        // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n+        auto range = cand_invalid_descendants.equal_range(invalid_walk_tip);\n+        for (auto it = range.first; it != range.second; ++it) {\n+            it->second->nStatus = (it->second->nStatus & ~BLOCK_FAILED_VALID) | BLOCK_FAILED_CHILD;\n+        }",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "4ba2e480ffa0b77113953bee4ff5c9349e277e7e",
      "in_reply_to_id": 1978269926,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "There is some more discussion about this in #31835, where I wrote my opinion. Since `BLOCK_FAILED_CHILD` has never been used for anything, it's hard to say what the intentions really were, but my impression is that the first invalid block should be marked as `BLOCK_FAILED_VALID` and all of its descendants as `BLOCK_FAILED_CHILD` - so having both `BLOCK_FAILED_VALID` and  `BLOCK_FAILED_CHILD` at the same time doesn't make sense to me.",
      "created_at": "2025-03-04T18:34:51Z",
      "updated_at": "2025-03-04T18:34:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r1980008065",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1980008065"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": 3767,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 3773,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1980042629",
      "pull_request_review_id": 2658649844,
      "id": 1980042629,
      "node_id": "PRRC_kwDOABII5852BQ2F",
      "diff_hunk": "@@ -3707,6 +3711,12 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n                     candidate->HaveNumChainTxs()) {\n                 candidate_blocks_by_work.insert(std::make_pair(candidate->nChainWork, candidate));\n             }\n+            // Similarly, populate cache for blocks not in main chain to invalidate\n+            if (!m_chain.Contains(candidate) &&\n+                !CBlockIndexWorkComparator()(candidate, pindex->pprev)) {\n+                cand_invalid_descendants.insert(std::make_pair(m_chain.FindFork(candidate), candidate));",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "4ba2e480ffa0b77113953bee4ff5c9349e277e7e",
      "in_reply_to_id": 1978292997,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "With `pindex->pprev` being the predecessor of the block passed to the `invalidateblock` rpc call, the logic in `InvalidateBlock()` is to go from the tip back to `pindex->pprev` -  and we may need to update other forked descendants of the blocks encountered along that way (which must have more accumulated work than their parents), which is why we put them in the cache. But all blocks with lower work can never be encountered by that process and therefore don't need to be in the caches.\r\nI'll add more documentation with my next push.",
      "created_at": "2025-03-04T18:52:34Z",
      "updated_at": "2025-03-04T18:52:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r1980042629",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1980042629"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3717,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1981280478",
      "pull_request_review_id": 2660916195,
      "id": 1981280478,
      "node_id": "PRRC_kwDOABII5852F_De",
      "diff_hunk": "@@ -3707,6 +3711,12 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n                     candidate->HaveNumChainTxs()) {\n                 candidate_blocks_by_work.insert(std::make_pair(candidate->nChainWork, candidate));\n             }\n+            // Similarly, populate cache for blocks not in main chain to invalidate\n+            if (!m_chain.Contains(candidate) &&\n+                !CBlockIndexWorkComparator()(candidate, pindex->pprev)) {\n+                cand_invalid_descendants.insert(std::make_pair(m_chain.FindFork(candidate), candidate));",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "4ba2e480ffa0b77113953bee4ff5c9349e277e7e",
      "in_reply_to_id": 1978292997,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Oh sorry, I get it now, thanks. For some reason (I think I had just been reviewing the next section dealing with disconnecting the tip) I was confusing `pindex` for the chain tip here. I don't really have any doc suggestions, so can be marked as resolved.",
      "created_at": "2025-03-05T12:07:30Z",
      "updated_at": "2025-03-05T12:07:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r1981280478",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1981280478"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3717,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2002112881",
      "pull_request_review_id": 2696453689,
      "id": 2002112881,
      "node_id": "PRRC_kwDOABII5853VdFx",
      "diff_hunk": "@@ -3691,6 +3690,11 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n     // build a map once so that we can look up candidate blocks by chain\n     // work as we go.\n     std::multimap<const arith_uint256, CBlockIndex *> candidate_blocks_by_work;\n+    // Map to cache candidates not in the main chain that might need invalidating.\n+    // Maps fork block in chain to the candidates for invalidation.\n+    std::multimap<const CBlockIndex*, CBlockIndex*> cand_invalid_descendants;\n+    // Map to cache candidates for m_best_header\n+    std::multimap<const arith_uint256, CBlockIndex*> best_header_blocks_by_work;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "4ba2e480ffa0b77113953bee4ff5c9349e277e7e",
      "in_reply_to_id": 1978437444,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That's a good idea! I think we can even go one step further and use `highpow_outofchain_headers` for everything, also for `cand_invalid_descendants` (at the cost of doing a few `GetAncestor()` calls, which should be cheap enough). I pushed an updated version that uses this approach.",
      "created_at": "2025-03-18T22:26:28Z",
      "updated_at": "2025-03-18T22:26:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2002112881",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2002112881"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3697,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2004380489",
      "pull_request_review_id": 2700378034,
      "id": 2004380489,
      "node_id": "PRRC_kwDOABII5853eGtJ",
      "diff_hunk": "@@ -3754,14 +3753,34 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n-        // Add any equal or more work headers to setBlockIndexCandidates\n-        auto candidate_it = candidate_blocks_by_work.lower_bound(invalid_walk_tip->pprev->nChainWork);\n-        while (candidate_it != candidate_blocks_by_work.end()) {\n-            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev)) {\n+        // Mark descendants of the invalidated block as invalid\n+        // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n+        // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n+        auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n+        while (candidate_it != highpow_outofchain_headers.end()) {\n+            if (candidate_it->second->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip) {\n+                candidate_it->second->nStatus = (candidate_it->second->nStatus & ~BLOCK_FAILED_VALID) | BLOCK_FAILED_CHILD;\n+                // If invalidated, the block is irrelevant for setBlockIndexCandidates and m_best_header and can be removed fro mthe cache\n+                candidate_it = highpow_outofchain_headers.erase(candidate_it);\n+                continue;\n+            }\n+            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev) &&\n+                candidate_it->second->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n+                candidate_it->second->HaveNumChainTxs()) {\n                 setBlockIndexCandidates.insert(candidate_it->second);\n-                candidate_it = candidate_blocks_by_work.erase(candidate_it);\n-            } else {\n-                ++candidate_it;\n+            }\n+            ++candidate_it;\n+        }\n+\n+        // Determine new best header if that was the invalidated block or one of its descendants\n+        if (m_chainman.m_best_header->nStatus & BLOCK_FAILED_MASK) {\n+            m_chainman.m_best_header = invalid_walk_tip->pprev; // this block is definitely still valid at this point, but there may be better ones\n+            auto best_header_it = highpow_outofchain_headers.lower_bound(m_chainman.m_best_header->nChainWork);\n+            while (best_header_it != highpow_outofchain_headers.end()) {\n+                if (!CBlockIndexWorkComparator()(best_header_it->second, m_chainman.m_best_header)) {\n+                    m_chainman.m_best_header = best_header_it->second;\n+                }\n+                ++best_header_it;\n             }\n         }",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 79,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "fe83133998cb7206281eb6d7a0a405aa025bee1b",
      "in_reply_to_id": null,
      "user": {
        "login": "stringintech",
        "id": 157148846,
        "node_id": "U_kgDOCV3mrg",
        "avatar_url": "https://avatars.githubusercontent.com/u/157148846?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stringintech",
        "html_url": "https://github.com/stringintech",
        "followers_url": "https://api.github.com/users/stringintech/followers",
        "following_url": "https://api.github.com/users/stringintech/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stringintech/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stringintech/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stringintech/subscriptions",
        "organizations_url": "https://api.github.com/users/stringintech/orgs",
        "repos_url": "https://api.github.com/users/stringintech/repos",
        "events_url": "https://api.github.com/users/stringintech/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stringintech/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Can the `m_best_header` update logic be merged into the while loop that handles the `nStatus` updates? Not sure if it is necessarily better; but I was thinking of something like:\r\n\r\nAdding this just before the while loop:\r\n```c++\r\nconst bool best_header_needs_update = m_chainman.m_best_header->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip;\r\nif (best_header_needs_update) {\r\n  m_chainman.m_best_header = invalid_walk_tip->pprev;\r\n}\r\n``` \r\n\r\nAnd then here:\r\n```suggestion\r\n            if (best_header_needs_update &&\r\n                !CBlockIndexWorkComparator()(candidate_it->second, m_chainman.m_best_header)) {\r\n                m_chainman.m_best_header = candidate_it->second;\r\n            }\r\n            ++candidate_it;\r\n        }\r\n```",
      "created_at": "2025-03-19T22:03:38Z",
      "updated_at": "2025-03-19T22:07:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2004380489",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2004380489"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": 3772,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 3791,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2004381740",
      "pull_request_review_id": 2700378034,
      "id": 2004381740,
      "node_id": "PRRC_kwDOABII5853eHAs",
      "diff_hunk": "@@ -3754,14 +3753,34 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n-        // Add any equal or more work headers to setBlockIndexCandidates\n-        auto candidate_it = candidate_blocks_by_work.lower_bound(invalid_walk_tip->pprev->nChainWork);\n-        while (candidate_it != candidate_blocks_by_work.end()) {\n-            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev)) {\n+        // Mark descendants of the invalidated block as invalid\n+        // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n+        // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n+        auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n+        while (candidate_it != highpow_outofchain_headers.end()) {\n+            if (candidate_it->second->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip) {\n+                candidate_it->second->nStatus = (candidate_it->second->nStatus & ~BLOCK_FAILED_VALID) | BLOCK_FAILED_CHILD;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 53,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "fe83133998cb7206281eb6d7a0a405aa025bee1b",
      "in_reply_to_id": null,
      "user": {
        "login": "stringintech",
        "id": 157148846,
        "node_id": "U_kgDOCV3mrg",
        "avatar_url": "https://avatars.githubusercontent.com/u/157148846?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stringintech",
        "html_url": "https://github.com/stringintech",
        "followers_url": "https://api.github.com/users/stringintech/followers",
        "following_url": "https://api.github.com/users/stringintech/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stringintech/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stringintech/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stringintech/subscriptions",
        "organizations_url": "https://api.github.com/users/stringintech/orgs",
        "repos_url": "https://api.github.com/users/stringintech/repos",
        "events_url": "https://api.github.com/users/stringintech/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stringintech/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Shouldn't we mark the candidate dirty after this?",
      "created_at": "2025-03-19T22:04:51Z",
      "updated_at": "2025-03-19T22:07:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2004381740",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2004381740"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3769,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2004383630",
      "pull_request_review_id": 2700378034,
      "id": 2004383630,
      "node_id": "PRRC_kwDOABII5853eHeO",
      "diff_hunk": "@@ -3754,14 +3753,34 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n-        // Add any equal or more work headers to setBlockIndexCandidates\n-        auto candidate_it = candidate_blocks_by_work.lower_bound(invalid_walk_tip->pprev->nChainWork);\n-        while (candidate_it != candidate_blocks_by_work.end()) {\n-            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev)) {\n+        // Mark descendants of the invalidated block as invalid\n+        // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n+        // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n+        auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n+        while (candidate_it != highpow_outofchain_headers.end()) {\n+            if (candidate_it->second->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip) {\n+                candidate_it->second->nStatus = (candidate_it->second->nStatus & ~BLOCK_FAILED_VALID) | BLOCK_FAILED_CHILD;\n+                // If invalidated, the block is irrelevant for setBlockIndexCandidates and m_best_header and can be removed fro mthe cache",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 54,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "fe83133998cb7206281eb6d7a0a405aa025bee1b",
      "in_reply_to_id": null,
      "user": {
        "login": "stringintech",
        "id": 157148846,
        "node_id": "U_kgDOCV3mrg",
        "avatar_url": "https://avatars.githubusercontent.com/u/157148846?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stringintech",
        "html_url": "https://github.com/stringintech",
        "followers_url": "https://api.github.com/users/stringintech/followers",
        "following_url": "https://api.github.com/users/stringintech/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stringintech/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stringintech/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stringintech/subscriptions",
        "organizations_url": "https://api.github.com/users/stringintech/orgs",
        "repos_url": "https://api.github.com/users/stringintech/repos",
        "events_url": "https://api.github.com/users/stringintech/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stringintech/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Small typo at the end of the comment",
      "created_at": "2025-03-19T22:06:53Z",
      "updated_at": "2025-03-19T22:07:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2004383630",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2004383630"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3763,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2008237122",
      "pull_request_review_id": 2707098384,
      "id": 2008237122,
      "node_id": "PRRC_kwDOABII5853s0RC",
      "diff_hunk": "@@ -3754,14 +3753,34 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n-        // Add any equal or more work headers to setBlockIndexCandidates\n-        auto candidate_it = candidate_blocks_by_work.lower_bound(invalid_walk_tip->pprev->nChainWork);\n-        while (candidate_it != candidate_blocks_by_work.end()) {\n-            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev)) {\n+        // Mark descendants of the invalidated block as invalid\n+        // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n+        // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n+        auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n+        while (candidate_it != highpow_outofchain_headers.end()) {\n+            if (candidate_it->second->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip) {\n+                candidate_it->second->nStatus = (candidate_it->second->nStatus & ~BLOCK_FAILED_VALID) | BLOCK_FAILED_CHILD;\n+                // If invalidated, the block is irrelevant for setBlockIndexCandidates and m_best_header and can be removed fro mthe cache",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 54,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "fe83133998cb7206281eb6d7a0a405aa025bee1b",
      "in_reply_to_id": 2004383630,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "fixed",
      "created_at": "2025-03-21T19:48:49Z",
      "updated_at": "2025-03-21T19:48:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2008237122",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2008237122"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3763,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2008237336",
      "pull_request_review_id": 2707098700,
      "id": 2008237336,
      "node_id": "PRRC_kwDOABII5853s0UY",
      "diff_hunk": "@@ -3754,14 +3753,34 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n-        // Add any equal or more work headers to setBlockIndexCandidates\n-        auto candidate_it = candidate_blocks_by_work.lower_bound(invalid_walk_tip->pprev->nChainWork);\n-        while (candidate_it != candidate_blocks_by_work.end()) {\n-            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev)) {\n+        // Mark descendants of the invalidated block as invalid\n+        // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n+        // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n+        auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n+        while (candidate_it != highpow_outofchain_headers.end()) {\n+            if (candidate_it->second->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip) {\n+                candidate_it->second->nStatus = (candidate_it->second->nStatus & ~BLOCK_FAILED_VALID) | BLOCK_FAILED_CHILD;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 53,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "fe83133998cb7206281eb6d7a0a405aa025bee1b",
      "in_reply_to_id": 2004381740,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "yes added - nothing bad would happen if we didn't (because BLOCK_FAILED_CHILD would be recalculated at next startup) but I think it's definitely better to do it.",
      "created_at": "2025-03-21T19:49:01Z",
      "updated_at": "2025-03-21T19:49:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2008237336",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2008237336"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3769,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2008242379",
      "pull_request_review_id": 2707106930,
      "id": 2008242379,
      "node_id": "PRRC_kwDOABII5853s1jL",
      "diff_hunk": "@@ -3754,14 +3753,34 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n-        // Add any equal or more work headers to setBlockIndexCandidates\n-        auto candidate_it = candidate_blocks_by_work.lower_bound(invalid_walk_tip->pprev->nChainWork);\n-        while (candidate_it != candidate_blocks_by_work.end()) {\n-            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev)) {\n+        // Mark descendants of the invalidated block as invalid\n+        // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n+        // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n+        auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n+        while (candidate_it != highpow_outofchain_headers.end()) {\n+            if (candidate_it->second->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip) {\n+                candidate_it->second->nStatus = (candidate_it->second->nStatus & ~BLOCK_FAILED_VALID) | BLOCK_FAILED_CHILD;\n+                // If invalidated, the block is irrelevant for setBlockIndexCandidates and m_best_header and can be removed fro mthe cache\n+                candidate_it = highpow_outofchain_headers.erase(candidate_it);\n+                continue;\n+            }\n+            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev) &&\n+                candidate_it->second->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n+                candidate_it->second->HaveNumChainTxs()) {\n                 setBlockIndexCandidates.insert(candidate_it->second);\n-                candidate_it = candidate_blocks_by_work.erase(candidate_it);\n-            } else {\n-                ++candidate_it;\n+            }\n+            ++candidate_it;\n+        }\n+\n+        // Determine new best header if that was the invalidated block or one of its descendants\n+        if (m_chainman.m_best_header->nStatus & BLOCK_FAILED_MASK) {\n+            m_chainman.m_best_header = invalid_walk_tip->pprev; // this block is definitely still valid at this point, but there may be better ones\n+            auto best_header_it = highpow_outofchain_headers.lower_bound(m_chainman.m_best_header->nChainWork);\n+            while (best_header_it != highpow_outofchain_headers.end()) {\n+                if (!CBlockIndexWorkComparator()(best_header_it->second, m_chainman.m_best_header)) {\n+                    m_chainman.m_best_header = best_header_it->second;\n+                }\n+                ++best_header_it;\n             }\n         }",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 79,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "fe83133998cb7206281eb6d7a0a405aa025bee1b",
      "in_reply_to_id": 2004380489,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, I like that solution, it's less code and since we would `continue`  when encountering an invalid header before we'd never set an invalid block as best header, so it's correct. \r\nI added you as co-author of that commit with the email from your github profile - let me know if you want me to change anything about that!",
      "created_at": "2025-03-21T19:54:13Z",
      "updated_at": "2025-03-21T19:55:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2008242379",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2008242379"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": 3772,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 3791,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2008742566",
      "pull_request_review_id": 2707999204,
      "id": 2008742566,
      "node_id": "PRRC_kwDOABII5853uvqm",
      "diff_hunk": "@@ -3754,14 +3753,34 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n-        // Add any equal or more work headers to setBlockIndexCandidates\n-        auto candidate_it = candidate_blocks_by_work.lower_bound(invalid_walk_tip->pprev->nChainWork);\n-        while (candidate_it != candidate_blocks_by_work.end()) {\n-            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev)) {\n+        // Mark descendants of the invalidated block as invalid\n+        // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n+        // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n+        auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n+        while (candidate_it != highpow_outofchain_headers.end()) {\n+            if (candidate_it->second->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip) {\n+                candidate_it->second->nStatus = (candidate_it->second->nStatus & ~BLOCK_FAILED_VALID) | BLOCK_FAILED_CHILD;\n+                // If invalidated, the block is irrelevant for setBlockIndexCandidates and m_best_header and can be removed fro mthe cache\n+                candidate_it = highpow_outofchain_headers.erase(candidate_it);\n+                continue;\n+            }\n+            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev) &&\n+                candidate_it->second->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n+                candidate_it->second->HaveNumChainTxs()) {\n                 setBlockIndexCandidates.insert(candidate_it->second);\n-                candidate_it = candidate_blocks_by_work.erase(candidate_it);\n-            } else {\n-                ++candidate_it;\n+            }\n+            ++candidate_it;\n+        }\n+\n+        // Determine new best header if that was the invalidated block or one of its descendants\n+        if (m_chainman.m_best_header->nStatus & BLOCK_FAILED_MASK) {\n+            m_chainman.m_best_header = invalid_walk_tip->pprev; // this block is definitely still valid at this point, but there may be better ones\n+            auto best_header_it = highpow_outofchain_headers.lower_bound(m_chainman.m_best_header->nChainWork);\n+            while (best_header_it != highpow_outofchain_headers.end()) {\n+                if (!CBlockIndexWorkComparator()(best_header_it->second, m_chainman.m_best_header)) {\n+                    m_chainman.m_best_header = best_header_it->second;\n+                }\n+                ++best_header_it;\n             }\n         }",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 79,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "fe83133998cb7206281eb6d7a0a405aa025bee1b",
      "in_reply_to_id": 2004380489,
      "user": {
        "login": "stringintech",
        "id": 157148846,
        "node_id": "U_kgDOCV3mrg",
        "avatar_url": "https://avatars.githubusercontent.com/u/157148846?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stringintech",
        "html_url": "https://github.com/stringintech",
        "followers_url": "https://api.github.com/users/stringintech/followers",
        "following_url": "https://api.github.com/users/stringintech/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stringintech/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stringintech/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stringintech/subscriptions",
        "organizations_url": "https://api.github.com/users/stringintech/orgs",
        "repos_url": "https://api.github.com/users/stringintech/repos",
        "events_url": "https://api.github.com/users/stringintech/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stringintech/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks a lot! Yes the email is okay.",
      "created_at": "2025-03-22T10:30:56Z",
      "updated_at": "2025-03-22T10:30:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2008742566",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2008742566"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": 3772,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 3791,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019820910",
      "pull_request_review_id": 2727393482,
      "id": 2019820910,
      "node_id": "PRRC_kwDOABII5854ZAVu",
      "diff_hunk": "@@ -3756,14 +3755,14 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n         }\n \n         // Add any equal or more work headers to setBlockIndexCandidates\n-        auto candidate_it = candidate_blocks_by_work.lower_bound(invalid_walk_tip->pprev->nChainWork);\n-        while (candidate_it != candidate_blocks_by_work.end()) {\n-            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev)) {\n+        auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n+        while (candidate_it != highpow_outofchain_headers.end()) {\n+            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev) &&\n+                candidate_it->second->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n+                candidate_it->second->HaveNumChainTxs()) {\n                 setBlockIndexCandidates.insert(candidate_it->second);\n-                candidate_it = candidate_blocks_by_work.erase(candidate_it);",
      "path": "src/validation.cpp",
      "position": 45,
      "original_position": 36,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "fbe9e2a391d5f6e14998776b03d4ffbbf43f33c8",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit fbe9e2a391d5f6e14998776b03d4ffbbf43f33c8:\r\n\r\nNit: Should this change really be in this commit? It does make sense in the next commit. I don't think it would be a bug per se to never erase, but it might be less efficient.",
      "created_at": "2025-03-29T14:47:52Z",
      "updated_at": "2025-03-29T21:11:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2019820910",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019820910"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3762,
      "original_line": 3762,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2023177830",
      "pull_request_review_id": 2733271455,
      "id": 2023177830,
      "node_id": "PRRC_kwDOABII5854lz5m",
      "diff_hunk": "@@ -3756,14 +3755,14 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n         }\n \n         // Add any equal or more work headers to setBlockIndexCandidates\n-        auto candidate_it = candidate_blocks_by_work.lower_bound(invalid_walk_tip->pprev->nChainWork);\n-        while (candidate_it != candidate_blocks_by_work.end()) {\n-            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev)) {\n+        auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n+        while (candidate_it != highpow_outofchain_headers.end()) {\n+            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev) &&\n+                candidate_it->second->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n+                candidate_it->second->HaveNumChainTxs()) {\n                 setBlockIndexCandidates.insert(candidate_it->second);\n-                candidate_it = candidate_blocks_by_work.erase(candidate_it);",
      "path": "src/validation.cpp",
      "position": 45,
      "original_position": 36,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "fbe9e2a391d5f6e14998776b03d4ffbbf43f33c8",
      "in_reply_to_id": 2019820910,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "yes - I've moved it into the next commit and added an explanation to the commit message.",
      "created_at": "2025-04-01T16:16:46Z",
      "updated_at": "2025-04-01T16:16:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2023177830",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2023177830"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3762,
      "original_line": 3762,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2023178713",
      "pull_request_review_id": 2733272972,
      "id": 2023178713,
      "node_id": "PRRC_kwDOABII5854l0HZ",
      "diff_hunk": "@@ -5434,6 +5435,8 @@ void ChainstateManager::CheckBlockIndex()\n         if (pindexFirstInvalid == nullptr) {\n             // Checks for not-invalid blocks.\n             assert((pindex->nStatus & BLOCK_FAILED_MASK) == 0); // The failed mask cannot be set for blocks without invalid parents.\n+        } else {\n+            assert((pindex->nStatus & BLOCK_FAILED_MASK)); // Invalid blocks and their descendants must be marked as invalid",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "eca8d9182e97f80d07bda2bb54481852280e26f1",
      "in_reply_to_id": 1944318554,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I missed this before, but it's fixed now!",
      "created_at": "2025-04-01T16:17:24Z",
      "updated_at": "2025-04-01T16:17:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2023178713",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2023178713"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5382,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2056489560",
      "pull_request_review_id": 2788075175,
      "id": 2056489560,
      "node_id": "PRRC_kwDOABII5856k4pY",
      "diff_hunk": "@@ -4545,6 +4545,7 @@ bool ChainstateManager::AcceptBlock(const std::shared_ptr<const CBlock>& pblock,\n         if (state.IsInvalid() && state.GetResult() != BlockValidationResult::BLOCK_MUTATED) {\n             pindex->nStatus |= BLOCK_FAILED_VALID;\n             m_blockman.m_dirty_blockindex.insert(pindex);\n+            ActiveChainstate().InvalidChainFound(pindex);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "163b01eae82a9dd94dcda94cf13001e46b4a8a56",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "My understanding is that `state.GetResult() != BlockValidationResult::BLOCK_MUTATED` is equivalent to `state.GetResult() == BlockValidationResult::BLOCK_CONSENSUS` here, because none of the other enum values are returned outside of block header validation, and at this point we've already passed `AcceptBlockHeader()`.\r\n\r\nI tested this by adding an `Assume` and running the unit and functional test suite with it:\r\n\r\n```cpp\r\n...\r\n            Assume(state.GetResult() == BlockValidationResult::BLOCK_CONSENSUS);\r\n            ActiveChainstate().InvalidChainFound(pindex);\r\n...\r\n```\r\n\r\nUnderstanding the DoS safety (as documented in the 163b01eae82a9dd94dcda94cf13001e46b4a8a56 commit message) is fairly straightforward from your documentation, but I spent most time figuring out whether the `InvalidChainFound()` call would be safe e.g. in the case of a `BLOCK_TIME_FUTURE` too. If my understanding that it must be a `BLOCK_CONSENSUS` failure at this point, I think adding the `Assume` and/or updating the commit message to reflect that might be helpful?",
      "created_at": "2025-04-23T16:46:19Z",
      "updated_at": "2025-04-24T20:10:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2056489560",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2056489560"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": 4545,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 4522,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2056509235",
      "pull_request_review_id": 2788075175,
      "id": 2056509235,
      "node_id": "PRRC_kwDOABII5856k9cz",
      "diff_hunk": "@@ -3716,6 +3716,7 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n \n         // Make sure the queue of validation callbacks doesn't grow unboundedly.\n         if (m_chainman.m_options.signals) LimitValidationInterfaceQueue(*m_chainman.m_options.signals);\n+        m_chainman.CheckBlockIndex();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "e2b69d48a0c2d75b0a9ca78e172c6a2390111246",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I was surprised to see that `CheckBlockIndex()` is not a `const` method, which I think it should be. To help validate that this call is not having unexpected side-effects, I implemented the const-ness change and found no issues because of it: https://github.com/bitcoin/bitcoin/compare/master...stickies-v:bitcoin:2b68b3f8343fe6582cc2ecbc474f489a50bdeb11\r\n\r\n~~I think this change would be good to have on master, but it doesn't have to be in this PR either, so if you'd rather no include it in this PR (it is a non-trivial change), I'm happy to open it as a separate PR?~~ _edit: opened https://github.com/bitcoin/bitcoin/pull/32364_",
      "created_at": "2025-04-23T16:55:40Z",
      "updated_at": "2025-04-28T18:51:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2056509235",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2056509235"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3717,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2058150283",
      "pull_request_review_id": 2788075175,
      "id": 2058150283,
      "node_id": "PRRC_kwDOABII5856rOGL",
      "diff_hunk": "@@ -3716,6 +3716,7 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n \n         // Make sure the queue of validation callbacks doesn't grow unboundedly.\n         if (m_chainman.m_options.signals) LimitValidationInterfaceQueue(*m_chainman.m_options.signals);\n+        m_chainman.CheckBlockIndex();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "e2b69d48a0c2d75b0a9ca78e172c6a2390111246",
      "in_reply_to_id": 2056509235,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't really understand why we need this extra check in every loop iteration. The commit message states that we need to check it again because `cs_main` was released, but it's not really obvious to me why that's a problem?",
      "created_at": "2025-04-24T11:20:00Z",
      "updated_at": "2025-04-24T20:10:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2058150283",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2058150283"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3717,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2058555357",
      "pull_request_review_id": 2788075175,
      "id": 2058555357,
      "node_id": "PRRC_kwDOABII5856sw_d",
      "diff_hunk": "@@ -3754,15 +3753,35 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n-        // Add any equal or more work headers to setBlockIndexCandidates\n-        auto candidate_it = candidate_blocks_by_work.lower_bound(invalid_walk_tip->pprev->nChainWork);\n-        while (candidate_it != candidate_blocks_by_work.end()) {\n-            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev)) {\n+        // Mark descendants of the invalidated block as invalid",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "96e6371328c7715ef814da5831d08b5d30285dd3",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Would label as out-of-chain (or non-active-chain for consistency)\r\n```suggestion\r\n        // Mark out-of-chain descendants of the invalidated block as invalid\r\n```",
      "created_at": "2025-04-24T14:15:10Z",
      "updated_at": "2025-04-24T20:10:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2058555357",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2058555357"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3756,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2058610946",
      "pull_request_review_id": 2788075175,
      "id": 2058610946,
      "node_id": "PRRC_kwDOABII5856s-kC",
      "diff_hunk": "@@ -3754,17 +3754,24 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n-        // Add any equal or more work headers to setBlockIndexCandidates\n+        // Mark descendants of the invalidated block as invalid\n+        // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n+        // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n         auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);",
      "path": "src/validation.cpp",
      "position": 52,
      "original_position": 8,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "5b92a30a2064b3b62487649544c1622f2d701877",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: I think it would make the code more readable to introduce a `CBlockIndex* candidate` here, to avoid all the `candidate_it->second` in an already verbose code block:\r\n\r\n<details>\r\n<summary>git diff on 5b92a30a20</summary>\r\n\r\n```diff\r\ndiff --git a/src/validation.cpp b/src/validation.cpp\r\nindex fed9186553..6ceeaa6ab5 100644\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -3759,17 +3759,18 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\r\n         // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\r\n         auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\r\n         while (candidate_it != highpow_outofchain_headers.end()) {\r\n-            if (candidate_it->second->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip) {\r\n-                candidate_it->second->nStatus = (candidate_it->second->nStatus & ~BLOCK_FAILED_VALID) | BLOCK_FAILED_CHILD;\r\n-                m_blockman.m_dirty_blockindex.insert(candidate_it->second);\r\n+            CBlockIndex* candidate{candidate_it->second};\r\n+            if (candidate->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip) {\r\n+                candidate->nStatus = (candidate->nStatus & ~BLOCK_FAILED_VALID) | BLOCK_FAILED_CHILD;\r\n+                m_blockman.m_dirty_blockindex.insert(candidate);\r\n                 // If invalidated, the block is irrelevant for setBlockIndexCandidates and can be removed from the cache\r\n                 candidate_it = highpow_outofchain_headers.erase(candidate_it);\r\n                 continue;\r\n             }\r\n-            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev) &&\r\n-                candidate_it->second->IsValid(BLOCK_VALID_TRANSACTIONS) &&\r\n-                candidate_it->second->HaveNumChainTxs()) {\r\n-                setBlockIndexCandidates.insert(candidate_it->second);\r\n+            if (!CBlockIndexWorkComparator()(candidate, invalid_walk_tip->pprev) &&\r\n+                candidate->IsValid(BLOCK_VALID_TRANSACTIONS) &&\r\n+                candidate->HaveNumChainTxs()) {\r\n+                setBlockIndexCandidates.insert(candidate);\r\n             }\r\n             ++candidate_it;\r\n         }\r\n\r\n```\r\n</details>\r\n",
      "created_at": "2025-04-24T14:39:15Z",
      "updated_at": "2025-04-24T20:10:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2058610946",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2058610946"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3759,
      "original_line": 3759,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2058645775",
      "pull_request_review_id": 2788075175,
      "id": 2058645775,
      "node_id": "PRRC_kwDOABII5856tHEP",
      "diff_hunk": "@@ -3754,17 +3754,24 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n-        // Add any equal or more work headers to setBlockIndexCandidates\n+        // Mark descendants of the invalidated block as invalid\n+        // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n+        // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n         auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n         while (candidate_it != highpow_outofchain_headers.end()) {\n+            if (candidate_it->second->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip) {\n+                candidate_it->second->nStatus = (candidate_it->second->nStatus & ~BLOCK_FAILED_VALID) | BLOCK_FAILED_CHILD;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "5b92a30a2064b3b62487649544c1622f2d701877",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: I find splitting this up in two statements to be much more readable:\r\n\r\n```cpp\r\n                // BLOCK_FAILED_VALID should never be set if BLOCK_FAILED_CHILD is set because <...>\r\n                candidate->nStatus &= ~BLOCK_FAILED_VALID;\r\n                candidate->nStatus |= BLOCK_FAILED_CHILD;\r\n```\r\nPerformance implications seems irrelevant here, and most likely optimized by the compiler anyway.",
      "created_at": "2025-04-24T14:54:28Z",
      "updated_at": "2025-04-24T20:10:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2058645775",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2058645775"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3769,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2058657191",
      "pull_request_review_id": 2788075175,
      "id": 2058657191,
      "node_id": "PRRC_kwDOABII5856tJ2n",
      "diff_hunk": "@@ -3757,12 +3757,19 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n         // Mark descendants of the invalidated block as invalid\n         // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n         // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n+        // Recalculate the best header if it became invalid.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "f762a6d8db99fd3b8170628c4e4fff03b82cfd43",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: for grepping purposes: s/the best header/m_best_header",
      "created_at": "2025-04-24T14:59:55Z",
      "updated_at": "2025-04-24T20:10:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2058657191",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2058657191"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3759,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2058660396",
      "pull_request_review_id": 2788075175,
      "id": 2058660396,
      "node_id": "PRRC_kwDOABII5856tKos",
      "diff_hunk": "@@ -3757,12 +3757,19 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n         // Mark descendants of the invalidated block as invalid\n         // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n         // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n+        // Recalculate the best header if it became invalid.\n         auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n+\n+        const bool best_header_needs_update{m_chainman.m_best_header->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip};\n+        if (best_header_needs_update) {\n+            m_chainman.m_best_header = invalid_walk_tip->pprev; // this block is definitely still valid at this point, but there may be better ones",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "f762a6d8db99fd3b8170628c4e4fff03b82cfd43",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: s/this block/pprev/ for reduced ambiguity",
      "created_at": "2025-04-24T15:01:32Z",
      "updated_at": "2025-04-24T20:10:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2058660396",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2058660396"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3764,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2059128406",
      "pull_request_review_id": 2788075175,
      "id": 2059128406,
      "node_id": "PRRC_kwDOABII5856u85W",
      "diff_hunk": "@@ -3771,6 +3778,10 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n                 candidate_it->second->HaveNumChainTxs()) {\n                 setBlockIndexCandidates.insert(candidate_it->second);\n             }\n+            if (best_header_needs_update &&\n+                !CBlockIndexWorkComparator()(candidate_it->second, m_chainman.m_best_header)) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "d854a34525a586fe982e1a3d83917272f94c5ff9",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: it's consistent with how `CBlockIndexWorkComparator` is used most of the time in our codebase, but I don't understand why we don't write this without the negation (swapping the arguments instead)?\r\n\r\n```cpp\r\n                CBlockIndexWorkComparator()(m_chainman.m_best_header, candidate_it->second))\r\n```",
      "created_at": "2025-04-24T19:52:45Z",
      "updated_at": "2025-04-28T14:44:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2059128406",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2059128406"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3782,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2067435003",
      "pull_request_review_id": 2805094277,
      "id": 2067435003,
      "node_id": "PRRC_kwDOABII5857Oo37",
      "diff_hunk": "@@ -3716,6 +3716,7 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n \n         // Make sure the queue of validation callbacks doesn't grow unboundedly.\n         if (m_chainman.m_options.signals) LimitValidationInterfaceQueue(*m_chainman.m_options.signals);\n+        m_chainman.CheckBlockIndex();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "e2b69d48a0c2d75b0a9ca78e172c6a2390111246",
      "in_reply_to_id": 2056509235,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We don't \"need\" the check - but what we want to guarantee is that whenever `cs_main` is not held, the block index must be in a consistent state (i.e. `CheckBlockIndex()` would pass) - because at this point, other threads can change the block index / call CBI, leading to issues such as #16444.\r\nThis spot is pretty critical, because even though `InvalidateBlock` will clean up in the end, it releases `cs_main` for stability reasons multiple times (so that the node doesn't become unresponsive for too long) - so having the BlockIndex in a consistent state at this spot is the reason for the changes to  `InvalidateBlock`  in this PR, so I think it's helpful to also check for this on regtest.\r\n\r\n(I'll address the rest of the feedback soon, thanks!)",
      "created_at": "2025-04-29T21:10:24Z",
      "updated_at": "2025-04-29T21:10:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2067435003",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2067435003"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3717,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2070349543",
      "pull_request_review_id": 2809937517,
      "id": 2070349543,
      "node_id": "PRRC_kwDOABII5857Zwbn",
      "diff_hunk": "@@ -3716,6 +3716,7 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n \n         // Make sure the queue of validation callbacks doesn't grow unboundedly.\n         if (m_chainman.m_options.signals) LimitValidationInterfaceQueue(*m_chainman.m_options.signals);\n+        m_chainman.CheckBlockIndex();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "e2b69d48a0c2d75b0a9ca78e172c6a2390111246",
      "in_reply_to_id": 2056509235,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thank you, I think I understand now. The commit message and the placement of the new `CheckBlockIndex()` call in 79bef1bc52afab860782d6d9a6016b93f94c4503 being before (rather than after) the block index mutations led me to believe that we were worried about _other_ threads leaving the block index in an inconsistent state, and made this particular addition feel rather arbitrary.\r\nInstead, it seems you want to ensure that `InvalidateBlock()` does not leave the block index in an inconsistent state whenever `cs_main` is released.\r\n\r\nIf that's correct, then I think:\r\n- `CheckBlockIndex()` should be called after, rather than before, logic that mutates the block index. Of course, in a loop (and with the extra call after the loop finishes), this is largely (but not entirely) equivalent, so it's mostly about readability and signaling intent.\r\n  - One concern here is that the loop could (and sometimes does*) return early, in which case we might never call `CheckBlockIndex()`, which should probably be addressed with an `RAII` struct that does the check whenever it goes out of scope? Or alternatively, just add a `CheckBlockIndex()` call whenever we return early.\r\n- `CheckBlockIndex()` should be called right before releasing, but **while it still has** the `cs_main` lock, to avoid synchronization issues (effectively making `CheckBlockIndex()` an `EXCLUSIVE_LOCKS_REQUIRED(::cs_main)` method)\r\n\r\n\\* Note: the current implementation in 79bef1bc52afab860782d6d9a6016b93f94c4503 will not call `CheckBlockIndex()` if `DisconnectTip()` [fails](https://github.com/bitcoin/bitcoin/pull/31405/commits/79bef1bc52afab860782d6d9a6016b93f94c4503#diff-97c3a52bc5fad452d82670a7fd291800bae20c7bc35bb82686c2c0a4ea7b5b98L3738). At first sight, it doesn't look like `DisconnectTip()` can bring `m_block_index` in an inconsistent state, so probably fine?\r\n\r\n",
      "created_at": "2025-05-01T14:38:12Z",
      "updated_at": "2025-05-01T14:38:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2070349543",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2070349543"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3717,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2074262054",
      "pull_request_review_id": 2816214213,
      "id": 2074262054,
      "node_id": "PRRC_kwDOABII5857orom",
      "diff_hunk": "@@ -3771,6 +3778,10 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n                 candidate_it->second->HaveNumChainTxs()) {\n                 setBlockIndexCandidates.insert(candidate_it->second);\n             }\n+            if (best_header_needs_update &&\n+                !CBlockIndexWorkComparator()(candidate_it->second, m_chainman.m_best_header)) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "d854a34525a586fe982e1a3d83917272f94c5ff9",
      "in_reply_to_id": 2059128406,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`CBlockIndexWorkComparator()(a, b))` means that a is strictly smaller than b.\r\n`!CBlockIndexWorkComparator()(b, a))` means that a is smaller or or equal to b (in this case, equal means the same block index because of the [pointer address criterion](https://github.com/bitcoin/bitcoin/blob/baa848b8d38187ce6b24a57cfadf1ea180209711/src/node/blockstorage.cpp#L165-L168)).\r\n\r\nI think that's why sometimes one or the other is used.\r\n\r\nIn this case, it doesn't really matter because the two elements are chosen such that they cannot be the same, so I'll change it to the simpler version.",
      "created_at": "2025-05-05T22:03:48Z",
      "updated_at": "2025-05-05T22:03:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2074262054",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2074262054"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3782,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2074262125",
      "pull_request_review_id": 2816214337,
      "id": 2074262125,
      "node_id": "PRRC_kwDOABII5857orpt",
      "diff_hunk": "@@ -3757,12 +3757,19 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n         // Mark descendants of the invalidated block as invalid\n         // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n         // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n+        // Recalculate the best header if it became invalid.\n         auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n+\n+        const bool best_header_needs_update{m_chainman.m_best_header->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip};\n+        if (best_header_needs_update) {\n+            m_chainman.m_best_header = invalid_walk_tip->pprev; // this block is definitely still valid at this point, but there may be better ones",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "f762a6d8db99fd3b8170628c4e4fff03b82cfd43",
      "in_reply_to_id": 2058660396,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2025-05-05T22:03:55Z",
      "updated_at": "2025-05-05T22:03:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2074262125",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2074262125"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3764,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2074262220",
      "pull_request_review_id": 2816214509,
      "id": 2074262220,
      "node_id": "PRRC_kwDOABII5857orrM",
      "diff_hunk": "@@ -3757,12 +3757,19 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n         // Mark descendants of the invalidated block as invalid\n         // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n         // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n+        // Recalculate the best header if it became invalid.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "f762a6d8db99fd3b8170628c4e4fff03b82cfd43",
      "in_reply_to_id": 2058657191,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2025-05-05T22:04:03Z",
      "updated_at": "2025-05-05T22:04:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2074262220",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2074262220"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3759,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2074264089",
      "pull_request_review_id": 2816217588,
      "id": 2074264089,
      "node_id": "PRRC_kwDOABII5857osIZ",
      "diff_hunk": "@@ -3754,17 +3754,24 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n-        // Add any equal or more work headers to setBlockIndexCandidates\n+        // Mark descendants of the invalidated block as invalid\n+        // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n+        // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n         auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n         while (candidate_it != highpow_outofchain_headers.end()) {\n+            if (candidate_it->second->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip) {\n+                candidate_it->second->nStatus = (candidate_it->second->nStatus & ~BLOCK_FAILED_VALID) | BLOCK_FAILED_CHILD;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "5b92a30a2064b3b62487649544c1622f2d701877",
      "in_reply_to_id": 2058645775,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done. The suggested comment is a bit too strong for my taste: In reality the distinction doesn't matter, even if both were set nothing bad would happen, see #31835. This is more for being consistent with how it's handled elsewhere.",
      "created_at": "2025-05-05T22:06:27Z",
      "updated_at": "2025-05-05T22:06:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2074264089",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2074264089"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3769,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2074264281",
      "pull_request_review_id": 2816217883,
      "id": 2074264281,
      "node_id": "PRRC_kwDOABII5857osLZ",
      "diff_hunk": "@@ -3754,17 +3754,24 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n-        // Add any equal or more work headers to setBlockIndexCandidates\n+        // Mark descendants of the invalidated block as invalid\n+        // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n+        // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n         auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);",
      "path": "src/validation.cpp",
      "position": 52,
      "original_position": 8,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "5b92a30a2064b3b62487649544c1622f2d701877",
      "in_reply_to_id": 2058610946,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done, good idea!",
      "created_at": "2025-05-05T22:06:41Z",
      "updated_at": "2025-05-05T22:06:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2074264281",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2074264281"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3759,
      "original_line": 3759,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2074264411",
      "pull_request_review_id": 2816218317,
      "id": 2074264411,
      "node_id": "PRRC_kwDOABII5857osNb",
      "diff_hunk": "@@ -3754,15 +3753,35 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n-        // Add any equal or more work headers to setBlockIndexCandidates\n-        auto candidate_it = candidate_blocks_by_work.lower_bound(invalid_walk_tip->pprev->nChainWork);\n-        while (candidate_it != candidate_blocks_by_work.end()) {\n-            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev)) {\n+        // Mark descendants of the invalidated block as invalid",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "96e6371328c7715ef814da5831d08b5d30285dd3",
      "in_reply_to_id": 2058555357,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2025-05-05T22:06:50Z",
      "updated_at": "2025-05-05T22:06:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2074264411",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2074264411"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3756,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2074270206",
      "pull_request_review_id": 2816231716,
      "id": 2074270206,
      "node_id": "PRRC_kwDOABII5857otn-",
      "diff_hunk": "@@ -4545,6 +4545,7 @@ bool ChainstateManager::AcceptBlock(const std::shared_ptr<const CBlock>& pblock,\n         if (state.IsInvalid() && state.GetResult() != BlockValidationResult::BLOCK_MUTATED) {\n             pindex->nStatus |= BLOCK_FAILED_VALID;\n             m_blockman.m_dirty_blockindex.insert(pindex);\n+            ActiveChainstate().InvalidChainFound(pindex);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "163b01eae82a9dd94dcda94cf13001e46b4a8a56",
      "in_reply_to_id": 2056489560,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hmm, this PR doesn't really change the essence of this:\r\nThe critical thing here is to set `nStatus` to `BLOCK_FAILED_VALID`, and this is already was the case on master.\r\nThis is irrevocable (outside of the `reconsiderblock` RPC which is a hack that doesn't really count) and it means that this block - and therefore all of its descendants - will never be connected. If there was a bug (e.g. if we could fail with `BLOCK_TIME_FUTURE` after accepting a header and then receiving the full block) this would be a bug on master.\r\n\r\nThe added call to `InvalidChainFound` only fixes the accounting for the descendants.",
      "created_at": "2025-05-05T22:11:49Z",
      "updated_at": "2025-05-05T22:11:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2074270206",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2074270206"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": 4545,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 4522,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2074344072",
      "pull_request_review_id": 2816341282,
      "id": 2074344072,
      "node_id": "PRRC_kwDOABII5857o_qI",
      "diff_hunk": "@@ -3716,6 +3716,7 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n \n         // Make sure the queue of validation callbacks doesn't grow unboundedly.\n         if (m_chainman.m_options.signals) LimitValidationInterfaceQueue(*m_chainman.m_options.signals);\n+        m_chainman.CheckBlockIndex();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "e2b69d48a0c2d75b0a9ca78e172c6a2390111246",
      "in_reply_to_id": 2056509235,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> If that's correct, then I think:\r\n\r\nYes, that's correct.\r\n\r\n> CheckBlockIndex() should be called right before releasing, but while it still has the cs_main lock, to avoid synchronization issues (effectively making CheckBlockIndex() an EXCLUSIVE_LOCKS_REQUIRED(::cs_main) method)\r\n\r\n`CheckBlockIndex()` is called from multiple places in validation, some of which hold `cs_main`, some of which don't.\r\nMy understanding is that it must always pass if `cs_main` isn't held (because at that time, other threads could change the block index / invoke CBI themselves), but not necessarily while `cs_main`  is held  (not everything is atomic).\r\n\r\nIn general, I think that CBI calls should be strategically placed to spots where (in case of bugs) those are most likely to occur - no need to cover every return path etc.\r\n\r\nOn second thought, I think the added call (even if it helped find issues during development) might be overkill, considering that we already have a call [here](https://github.com/bitcoin/bitcoin/blob/baa848b8d38187ce6b24a57cfadf1ea180209711/src/validation.cpp#L3738C16-L3738C31). So I have remove the commit that adds it for now.",
      "created_at": "2025-05-05T22:56:23Z",
      "updated_at": "2025-05-05T22:56:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2074344072",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2074344072"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3717,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2075130957",
      "pull_request_review_id": 2817637697,
      "id": 2075130957,
      "node_id": "PRRC_kwDOABII5857r_xN",
      "diff_hunk": "@@ -3716,6 +3716,7 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n \n         // Make sure the queue of validation callbacks doesn't grow unboundedly.\n         if (m_chainman.m_options.signals) LimitValidationInterfaceQueue(*m_chainman.m_options.signals);\n+        m_chainman.CheckBlockIndex();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "e2b69d48a0c2d75b0a9ca78e172c6a2390111246",
      "in_reply_to_id": 2056509235,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> So I have remove the commit that adds it for now.\r\n\r\nThat seems good to me.\r\n\r\n> My understanding is that it must always pass if cs_main isn't held (because at that time, other threads could change the block index / invoke CBI themselves), but not necessarily while cs_main  is held (not everything is atomic).\r\n\r\nThis still feels awkward to me, like we're sprinkling tests throughout the code in case they catch something without a clear aim. If we're trying to ensure that `InvalidateBlock()` does not leave the block index (BI) in an inconsistent state, then releasing `cs_main` so _another thread can change the BI_ seems like the test isn't just testing `InvalidateBlock()`, but also (especially) those other threads? If we want to test `InvalidateBlock()`, then imo we _must_ call CBI before releasing `cs_main`. And if other threads might be problematic, then we should add CBI call(s) in those locations?\r\n\r\nAnyway, commit removed, so this can be resolved now. Thanks!\r\n",
      "created_at": "2025-05-06T09:56:11Z",
      "updated_at": "2025-05-06T09:56:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2075130957",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2075130957"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3717,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2075137416",
      "pull_request_review_id": 2817654045,
      "id": 2075137416,
      "node_id": "PRRC_kwDOABII5857sBWI",
      "diff_hunk": "@@ -3754,17 +3754,24 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n-        // Add any equal or more work headers to setBlockIndexCandidates\n+        // Mark descendants of the invalidated block as invalid\n+        // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n+        // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n         auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n         while (candidate_it != highpow_outofchain_headers.end()) {\n+            if (candidate_it->second->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip) {\n+                candidate_it->second->nStatus = (candidate_it->second->nStatus & ~BLOCK_FAILED_VALID) | BLOCK_FAILED_CHILD;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "5b92a30a2064b3b62487649544c1622f2d701877",
      "in_reply_to_id": 2058645775,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, the new comment \"Children of failed blocks should be marked as BLOCK_FAILED_CHILD instead.\" works for me, can be marked as resolved.",
      "created_at": "2025-05-06T10:00:21Z",
      "updated_at": "2025-05-06T10:00:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2075137416",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2075137416"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3769,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2075145379",
      "pull_request_review_id": 2817672781,
      "id": 2075145379,
      "node_id": "PRRC_kwDOABII5857sDSj",
      "diff_hunk": "@@ -3716,6 +3716,7 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n \n         // Make sure the queue of validation callbacks doesn't grow unboundedly.\n         if (m_chainman.m_options.signals) LimitValidationInterfaceQueue(*m_chainman.m_options.signals);\n+        m_chainman.CheckBlockIndex();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "e2b69d48a0c2d75b0a9ca78e172c6a2390111246",
      "in_reply_to_id": 2056509235,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> So I have remove the commit that adds it for now.\r\n\r\nActually, it looks like 79bef1bc52afab860782d6d9a6016b93f94c4503 is still here (with HEAD 9d001dc1b1627f7a973e21227955bba1f473d6aa). I think you accidentally removed 4153139425 instead of 79bef1bc52afab860782d6d9a6016b93f94c4503?",
      "created_at": "2025-05-06T10:05:24Z",
      "updated_at": "2025-05-06T10:06:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2075145379",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2075145379"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3717,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2075208994",
      "pull_request_review_id": 2817813729,
      "id": 2075208994,
      "node_id": "PRRC_kwDOABII5857sS0i",
      "diff_hunk": "@@ -4545,6 +4545,7 @@ bool ChainstateManager::AcceptBlock(const std::shared_ptr<const CBlock>& pblock,\n         if (state.IsInvalid() && state.GetResult() != BlockValidationResult::BLOCK_MUTATED) {\n             pindex->nStatus |= BLOCK_FAILED_VALID;\n             m_blockman.m_dirty_blockindex.insert(pindex);\n+            ActiveChainstate().InvalidChainFound(pindex);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "163b01eae82a9dd94dcda94cf13001e46b4a8a56",
      "in_reply_to_id": 2056489560,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Oh right, I didn't consider that `pindex` is already set to `BLOCK_FAILED_INVALID` a few lines up. I agree that this change does not introduce any additional risks from unexpected `BLOCK_TIME_FUTURE` etc `BlockValidationResult`. Thanks for the insight, can be marked as resolved.\r\n\r\n(I still think adding the `Assume` could be helpful to catch future bugs, but it's orthogonal to the PR)",
      "created_at": "2025-05-06T10:49:22Z",
      "updated_at": "2025-05-06T10:49:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2075208994",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2075208994"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": 4545,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 4522,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2075270458",
      "pull_request_review_id": 2817918758,
      "id": 2075270458,
      "node_id": "PRRC_kwDOABII5857sh06",
      "diff_hunk": "@@ -3771,6 +3778,10 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n                 candidate_it->second->HaveNumChainTxs()) {\n                 setBlockIndexCandidates.insert(candidate_it->second);\n             }\n+            if (best_header_needs_update &&\n+                !CBlockIndexWorkComparator()(candidate_it->second, m_chainman.m_best_header)) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "d854a34525a586fe982e1a3d83917272f94c5ff9",
      "in_reply_to_id": 2059128406,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I think that's why sometimes one or the other is used.\r\n\r\nRight, that makes sense.\r\n\r\nI think in the two other cases where `CBlockIndexWorkComparator` is used in this PR, comparing directly on `nChainwork` would be more readable and more correct?\r\n- https://github.com/bitcoin/bitcoin/pull/31405/files#diff-97c3a52bc5fad452d82670a7fd291800bae20c7bc35bb82686c2c0a4ea7b5b98R3704: \"that have at least as much work as where we expect the new tip to end up.\"\r\n- https://github.com/bitcoin/bitcoin/pull/31405/files#diff-97c3a52bc5fad452d82670a7fd291800bae20c7bc35bb82686c2c0a4ea7b5b98R3778: the `setBlockIndexCandidates` doc states \"entries that have as much work as our current tip or more\"\r\n\r\n<details>\r\n<summary>git diff on 9d001dc1b1</summary>\r\n\r\n```diff\r\ndiff --git a/src/validation.cpp b/src/validation.cpp\r\nindex b7fe228bbf..b4f6bb40f4 100644\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -3701,7 +3701,7 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\r\n             // Instead, consider only non-active-chain blocks that have at\r\n             // least as much work as where we expect the new tip to end up.\r\n             if (!m_chain.Contains(candidate) &&\r\n-                !CBlockIndexWorkComparator()(candidate, pindex->pprev) &&\r\n+                (candidate->nChainWork >= pindex->pprev->nChainWork) &&\r\n                 !(candidate->nStatus & BLOCK_FAILED_MASK)) {\r\n                 highpow_outofchain_headers.insert(std::make_pair(candidate->nChainWork, candidate));\r\n             }\r\n@@ -3775,7 +3775,7 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\r\n                 candidate_it = highpow_outofchain_headers.erase(candidate_it);\r\n                 continue;\r\n             }\r\n-            if (!CBlockIndexWorkComparator()(candidate, invalid_walk_tip->pprev) &&\r\n+            if ((candidate->nChainWork >= invalid_walk_tip->pprev->nChainWork) &&\r\n                 candidate->IsValid(BLOCK_VALID_TRANSACTIONS) &&\r\n                 candidate->HaveNumChainTxs()) {\r\n                 setBlockIndexCandidates.insert(candidate);\r\n\r\n```\r\n</details>\r\n\r\n\r\nWhere it is [used](https://github.com/bitcoin/bitcoin/pull/31405/files#diff-97c3a52bc5fad452d82670a7fd291800bae20c7bc35bb82686c2c0a4ea7b5b98R3784) to update `m_best_header`, which is just a single block index, it seems sticking to `CBlockIndexWorkComparator` seems appropriate for determinism.",
      "created_at": "2025-05-06T11:32:21Z",
      "updated_at": "2025-05-06T11:32:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2075270458",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2075270458"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3782,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2075937910",
      "pull_request_review_id": 2819079480,
      "id": 2075937910,
      "node_id": "PRRC_kwDOABII5857vEx2",
      "diff_hunk": "@@ -3771,6 +3778,10 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n                 candidate_it->second->HaveNumChainTxs()) {\n                 setBlockIndexCandidates.insert(candidate_it->second);\n             }\n+            if (best_header_needs_update &&\n+                !CBlockIndexWorkComparator()(candidate_it->second, m_chainman.m_best_header)) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "d854a34525a586fe982e1a3d83917272f94c5ff9",
      "in_reply_to_id": 2059128406,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think that this wouldn't be correct: We use `CBlockIndexWorkComparator` during normal adding to `setBlockIndexCandidates` ([here](https://github.com/bitcoin/bitcoin/blob/baa848b8d38187ce6b24a57cfadf1ea180209711/src/validation.cpp#L3840C41-L3840C79)) and also use it while asserting that blocks that sort worse are not in the set [here](https://github.com/bitcoin/bitcoin/blob/baa848b8d38187ce6b24a57cfadf1ea180209711/src/validation.cpp#L5412). If we'd insert blocks in the set that have the same `nChainWork` but sort worse (due to `nSequence`), I would expect the assert to be hit.\r\n\r\nThat being said, some of the comments about this (e.g. also in `TryAddBlockIndexCandidate`) are misleading in my opinion. I have reworded the spot in InvalidateBlock, any other spots should be cleaned up separately.\r\n",
      "created_at": "2025-05-06T17:18:29Z",
      "updated_at": "2025-05-06T17:18:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2075937910",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2075937910"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3782,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2075959357",
      "pull_request_review_id": 2819117100,
      "id": 2075959357,
      "node_id": "PRRC_kwDOABII5857vKA9",
      "diff_hunk": "@@ -3716,6 +3716,7 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n \n         // Make sure the queue of validation callbacks doesn't grow unboundedly.\n         if (m_chainman.m_options.signals) LimitValidationInterfaceQueue(*m_chainman.m_options.signals);\n+        m_chainman.CheckBlockIndex();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "e2b69d48a0c2d75b0a9ca78e172c6a2390111246",
      "in_reply_to_id": 2056509235,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Actually, it looks like https://github.com/bitcoin/bitcoin/commit/79bef1bc52afab860782d6d9a6016b93f94c4503 is still here\r\n\r\noops, fixed\r\n\r\n> releasing cs_main so another thread can change the BI\r\n\r\nI wasn't suggesting this, the reason why we are releasing cs_main frequently during invalidateblock in the first place is so that the node/GUI doesn't become unresponsive in case many blocks in a row are disconnected.\r\n\r\nIn the past, there was a problem with the intermediate state in `InvalidateBlock()` (fixed in https://github.com/bitcoin/bitcoin/pull/16849) after cs_main was released that was only discovered because in a functional test  it happened that headers were received/CBI was invoked in a different thread (https://github.com/bitcoin/bitcoin/issues/16444.).",
      "created_at": "2025-05-06T17:33:35Z",
      "updated_at": "2025-05-06T17:33:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2075959357",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2075959357"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3717,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2077317447",
      "pull_request_review_id": 2821235005,
      "id": 2077317447,
      "node_id": "PRRC_kwDOABII58570VlH",
      "diff_hunk": "@@ -3716,6 +3716,7 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n \n         // Make sure the queue of validation callbacks doesn't grow unboundedly.\n         if (m_chainman.m_options.signals) LimitValidationInterfaceQueue(*m_chainman.m_options.signals);\n+        m_chainman.CheckBlockIndex();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "e2b69d48a0c2d75b0a9ca78e172c6a2390111246",
      "in_reply_to_id": 2056509235,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Can be marked as resolved, thanks! I think we were talking past each other a bit but resolved offline.",
      "created_at": "2025-05-07T10:25:06Z",
      "updated_at": "2025-05-07T10:25:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2077317447",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2077317447"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3717,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2090791378",
      "pull_request_review_id": 2843060953,
      "id": 2090791378,
      "node_id": "PRRC_kwDOABII5858nvHS",
      "diff_hunk": "@@ -4540,6 +4540,7 @@ bool ChainstateManager::AcceptBlock(const std::shared_ptr<const CBlock>& pblock,\n         if (state.IsInvalid() && state.GetResult() != BlockValidationResult::BLOCK_MUTATED) {\n             pindex->nStatus |= BLOCK_FAILED_VALID;\n             m_blockman.m_dirty_blockindex.insert(pindex);\n+            ActiveChainstate().InvalidChainFound(pindex);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "65de18836e5ddbdb8388e3bbdbcebee84c3b4c59",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This code block now duplicates `InvalidBlockFound()`, minus the `setBlockIndex` erasure - but I think that should be a (fast) no-op, perhaps it's worth deduplicating this?\r\n\r\n<details>\r\n<summary>git diff on ed172d3002</summary>\r\n\r\n```diff\r\ndiff --git a/src/validation.cpp b/src/validation.cpp\r\nindex 31a0f54c11..3312849024 100644\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -4516,11 +4516,8 @@ bool ChainstateManager::AcceptBlock(const std::shared_ptr<const CBlock>& pblock,\r\n \r\n     if (!CheckBlock(block, state, params.GetConsensus()) ||\r\n         !ContextualCheckBlock(block, state, *this, pindex->pprev)) {\r\n-        if (state.IsInvalid() && state.GetResult() != BlockValidationResult::BLOCK_MUTATED) {\r\n-            pindex->nStatus |= BLOCK_FAILED_VALID;\r\n-            m_blockman.m_dirty_blockindex.insert(pindex);\r\n-            ActiveChainstate().InvalidChainFound(pindex);\r\n-        }\r\n+        Assume(state.IsInvalid());\r\n+        ActiveChainstate().InvalidBlockFound(pindex, state);\r\n         LogError(\"%s: %s\\n\", __func__, state.ToString());\r\n         return false;\r\n     }\r\n\r\n```\r\n</details>\r\n\r\nFrom my (limited) understanding,  think `state.IsInvalid()` should always evaluate to `true` and thus seems like more of an assertion, but it's orthogonal to my suggestion.",
      "created_at": "2025-05-15T09:57:10Z",
      "updated_at": "2025-05-15T12:10:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2090791378",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2090791378"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4543,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2090806322",
      "pull_request_review_id": 2843060953,
      "id": 2090806322,
      "node_id": "PRRC_kwDOABII5858nywy",
      "diff_hunk": "@@ -3699,13 +3698,12 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             // We don't need to put anything in our active chain into the\n             // multimap, because those candidates will be found and considered\n             // as we disconnect.\n-            // Instead, consider only non-active-chain blocks that have at\n-            // least as much work as where we expect the new tip to end up.\n+            // Instead, consider only non-active-chain blocks that score\n+            // at least as good with CBlockIndexWorkComparator as the new tip.\n             if (!m_chain.Contains(candidate) &&\n-                    !CBlockIndexWorkComparator()(candidate, pindex->pprev) &&\n-                    candidate->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n-                    candidate->HaveNumChainTxs()) {\n-                candidate_blocks_by_work.insert(std::make_pair(candidate->nChainWork, candidate));\n+                !CBlockIndexWorkComparator()(candidate, pindex->pprev) &&\n+                !(candidate->nStatus & BLOCK_FAILED_MASK)) {\n+                highpow_outofchain_headers.insert(std::make_pair(candidate->nChainWork, candidate));",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "ed172d3002da68a3ddbd5d13e7d3f0618c1378d4",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit\r\n```suggestion\r\n                highpow_outofchain_headers.insert({candidate->nChainWork, candidate});\r\n```",
      "created_at": "2025-05-15T10:05:22Z",
      "updated_at": "2025-05-15T12:10:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2090806322",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2090806322"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3706,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2090831336",
      "pull_request_review_id": 2843060953,
      "id": 2090831336,
      "node_id": "PRRC_kwDOABII5858n43o",
      "diff_hunk": "@@ -3755,11 +3754,14 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n         }\n \n         // Add any equal or more work headers to setBlockIndexCandidates\n-        auto candidate_it = candidate_blocks_by_work.lower_bound(invalid_walk_tip->pprev->nChainWork);\n-        while (candidate_it != candidate_blocks_by_work.end()) {\n-            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev)) {\n-                setBlockIndexCandidates.insert(candidate_it->second);\n-                candidate_it = candidate_blocks_by_work.erase(candidate_it);\n+        auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n+        while (candidate_it != highpow_outofchain_headers.end()) {\n+            CBlockIndex* candidate{candidate_it->second};\n+            if (!CBlockIndexWorkComparator()(candidate, invalid_walk_tip->pprev) &&\n+                candidate->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n+                candidate->HaveNumChainTxs()) {\n+                setBlockIndexCandidates.insert(candidate);\n+                candidate_it = highpow_outofchain_headers.erase(candidate_it);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "9304257d67e6f280cc1b45021118c6bb37489d89",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 9304257d67e6f280cc1b45021118c6bb37489d89:\r\n\r\n> Since we don't remove blocks after inserting into\r\nsetBlockIndexCandidates anymore, this means that blocks could be inserted\r\nmultiple times now into the set - this won't have any effect, so\r\nbehavior isn't changed.\r\n\r\nI suspect with \"remove blocks\" you mean erasing from `highpow_outofchain_headers`? In which case, I don't think this part of the commit message is correct, at least for this commit?\r\n",
      "created_at": "2025-05-15T10:16:36Z",
      "updated_at": "2025-05-15T12:10:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2090831336",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2090831336"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3764,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2090892085",
      "pull_request_review_id": 2843060953,
      "id": 2090892085,
      "node_id": "PRRC_kwDOABII5858oHs1",
      "diff_hunk": "@@ -3754,15 +3752,38 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n-        // Add any equal or more work headers to setBlockIndexCandidates\n-        auto candidate_it = candidate_blocks_by_work.lower_bound(invalid_walk_tip->pprev->nChainWork);\n-        while (candidate_it != candidate_blocks_by_work.end()) {\n-            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev)) {\n-                setBlockIndexCandidates.insert(candidate_it->second);\n-                candidate_it = candidate_blocks_by_work.erase(candidate_it);\n-            } else {\n-                ++candidate_it;\n+        // Mark out-of-chain descendants of the invalidated block as invalid\n+        // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n+        // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n+        // Recalculate m_best_header if it became invalid.\n+        auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n+\n+        const bool best_header_needs_update{m_chainman.m_best_header->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip};\n+        if (best_header_needs_update) {\n+            m_chainman.m_best_header = invalid_walk_tip->pprev; // pprev is definitely still valid at this point, but there may be better ones\n+        }\n+\n+        while (candidate_it != highpow_outofchain_headers.end()) {\n+            CBlockIndex* candidate{candidate_it->second};\n+            if (candidate->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip) {\n+                // Children of failed blocks should be marked as BLOCK_FAILED_CHILD instead.\n+                candidate->nStatus &= ~BLOCK_FAILED_VALID;\n+                candidate->nStatus |= BLOCK_FAILED_CHILD;\n+                m_blockman.m_dirty_blockindex.insert(candidate);\n+                // If invalidated, the block is irrelevant for setBlockIndexCandidates and m_best_header and can be removed from the cache",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 66,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "ed172d3002da68a3ddbd5d13e7d3f0618c1378d4",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "grammar nit: parallel structures (and line-length)\r\n```suggestion\r\n                // If invalidated, the block is irrelevant for setBlockIndexCandidates and for\r\n                // m_best_header so it can be removed from the cache\r\n```",
      "created_at": "2025-05-15T10:51:07Z",
      "updated_at": "2025-05-15T12:10:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2090892085",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2090892085"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3773,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2090961175",
      "pull_request_review_id": 2843060953,
      "id": 2090961175,
      "node_id": "PRRC_kwDOABII5858oYkX",
      "diff_hunk": "@@ -3754,15 +3752,38 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n-        // Add any equal or more work headers to setBlockIndexCandidates\n-        auto candidate_it = candidate_blocks_by_work.lower_bound(invalid_walk_tip->pprev->nChainWork);\n-        while (candidate_it != candidate_blocks_by_work.end()) {\n-            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev)) {\n-                setBlockIndexCandidates.insert(candidate_it->second);\n-                candidate_it = candidate_blocks_by_work.erase(candidate_it);\n-            } else {\n-                ++candidate_it;\n+        // Mark out-of-chain descendants of the invalidated block as invalid\n+        // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n+        // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n+        // Recalculate m_best_header if it became invalid.\n+        auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n+\n+        const bool best_header_needs_update{m_chainman.m_best_header->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip};\n+        if (best_header_needs_update) {\n+            m_chainman.m_best_header = invalid_walk_tip->pprev; // pprev is definitely still valid at this point, but there may be better ones\n+        }\n+\n+        while (candidate_it != highpow_outofchain_headers.end()) {\n+            CBlockIndex* candidate{candidate_it->second};\n+            if (candidate->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip) {\n+                // Children of failed blocks should be marked as BLOCK_FAILED_CHILD instead.\n+                candidate->nStatus &= ~BLOCK_FAILED_VALID;\n+                candidate->nStatus |= BLOCK_FAILED_CHILD;\n+                m_blockman.m_dirty_blockindex.insert(candidate);\n+                // If invalidated, the block is irrelevant for setBlockIndexCandidates and m_best_header and can be removed from the cache\n+                candidate_it = highpow_outofchain_headers.erase(candidate_it);\n+                continue;\n+            }\n+            if (!CBlockIndexWorkComparator()(candidate, invalid_walk_tip->pprev) &&\n+                candidate->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n+                candidate->HaveNumChainTxs()) {\n+                setBlockIndexCandidates.insert(candidate);\n+            }\n+            if (best_header_needs_update &&\n+                CBlockIndexWorkComparator()(m_chainman.m_best_header, candidate)) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 76,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "ed172d3002da68a3ddbd5d13e7d3f0618c1378d4",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "note: this logic is different to `RecalculateBestHeader`: https://github.com/bitcoin/bitcoin/blob/c779ee3a4044df3a263394bbb8b104aeeaa7c727/src/validation.cpp#L6404\r\n\r\nFrom our [earlier conversation](https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2059128406) it seems like `CBlockIndexWorkComparator` is the correct choice here, so probably this can be fixed (if necessary) in a separate pull, but it seems worth raising here? Relatedly, I tried modifying `CheckBlockIndex` to use `CBlockIndexWorkComparator` [here](https://github.com/bitcoin/bitcoin/pull/31405/files#diff-97c3a52bc5fad452d82670a7fd291800bae20c7bc35bb82686c2c0a4ea7b5b98R5393), and that leads to assertions being raised, so it seems like `m_best_header` is currently guaranteed to be highest-work, but not necessarily highest-score (even when patching `RecalculateBestHeader` to use `CBlockIndexWorkComparator`)",
      "created_at": "2025-05-15T11:31:38Z",
      "updated_at": "2025-05-15T12:10:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2090961175",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2090961175"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3783,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2090976170",
      "pull_request_review_id": 2843060953,
      "id": 2090976170,
      "node_id": "PRRC_kwDOABII5858ocOq",
      "diff_hunk": "@@ -3754,15 +3752,38 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n-        // Add any equal or more work headers to setBlockIndexCandidates\n-        auto candidate_it = candidate_blocks_by_work.lower_bound(invalid_walk_tip->pprev->nChainWork);\n-        while (candidate_it != candidate_blocks_by_work.end()) {\n-            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev)) {\n-                setBlockIndexCandidates.insert(candidate_it->second);\n-                candidate_it = candidate_blocks_by_work.erase(candidate_it);\n-            } else {\n-                ++candidate_it;\n+        // Mark out-of-chain descendants of the invalidated block as invalid\n+        // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n+        // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n+        // Recalculate m_best_header if it became invalid.\n+        auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n+\n+        const bool best_header_needs_update{m_chainman.m_best_header->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip};\n+        if (best_header_needs_update) {\n+            m_chainman.m_best_header = invalid_walk_tip->pprev; // pprev is definitely still valid at this point, but there may be better ones\n+        }",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "ed172d3002da68a3ddbd5d13e7d3f0618c1378d4",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: developer notes suggest line length < 100\r\n```suggestion\r\n        const bool best_header_needs_update{\r\n            m_chainman.m_best_header->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip\r\n        };\r\n        if (best_header_needs_update) {\r\n            // pprev is definitely still valid at this point, but there may be better ones\r\n            m_chainman.m_best_header = invalid_walk_tip->pprev;\r\n        }\r\n```",
      "created_at": "2025-05-15T11:40:53Z",
      "updated_at": "2025-05-15T12:10:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2090976170",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2090976170"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": 3761,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 3765,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2121667185",
      "pull_request_review_id": 2889196839,
      "id": 2121667185,
      "node_id": "PRRC_kwDOABII585-dhJx",
      "diff_hunk": "@@ -4540,6 +4540,7 @@ bool ChainstateManager::AcceptBlock(const std::shared_ptr<const CBlock>& pblock,\n         if (state.IsInvalid() && state.GetResult() != BlockValidationResult::BLOCK_MUTATED) {\n             pindex->nStatus |= BLOCK_FAILED_VALID;\n             m_blockman.m_dirty_blockindex.insert(pindex);\n+            ActiveChainstate().InvalidChainFound(pindex);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "65de18836e5ddbdb8388e3bbdbcebee84c3b4c59",
      "in_reply_to_id": 2090791378,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2090791378\r\n\r\nIn commit \"validation: call InvalidChainfound also from AcceptBlock\" (65de18836e5ddbdb8388e3bbdbcebee84c3b4c59)\r\n\r\nThe suggestion to call InvalidBlockFound instead of InvalidChainFound to avoid duplicating logic seems like a good idea, and would be interested to see a response, even if the change is not worth making here.",
      "created_at": "2025-06-02T16:40:27Z",
      "updated_at": "2025-06-02T19:08:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2121667185",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2121667185"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4543,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2121671164",
      "pull_request_review_id": 2889196839,
      "id": 2121671164,
      "node_id": "PRRC_kwDOABII585-diH8",
      "diff_hunk": "@@ -4540,6 +4540,7 @@ bool ChainstateManager::AcceptBlock(const std::shared_ptr<const CBlock>& pblock,\n         if (state.IsInvalid() && state.GetResult() != BlockValidationResult::BLOCK_MUTATED) {\n             pindex->nStatus |= BLOCK_FAILED_VALID;\n             m_blockman.m_dirty_blockindex.insert(pindex);\n+            ActiveChainstate().InvalidChainFound(pindex);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "65de18836e5ddbdb8388e3bbdbcebee84c3b4c59",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: call InvalidChainfound also from AcceptBlock\" (65de18836e5ddbdb8388e3bbdbcebee84c3b4c59):\r\n\r\nEven after reading PR overview I found this commit description really confusing, because it only explained why it was ok to set flags here, not why it was actually good, or how the code wasn't broken before this commit. It would be helpful if the commit said these things explicitly:\r\n\r\n- This commit marks descendants of failed blocks with BLOCK_FAILED_CHILD and updates m_best_header when these things weren't done reliably before.\r\n- This is not a bugfix, because the flag was only being set on a best-effort basis before.\r\n- Setting these reliably has a slight performance cost but will make the code less complicated and allow removing `m_failed_blocks` in a later commit.",
      "created_at": "2025-06-02T16:42:23Z",
      "updated_at": "2025-06-02T19:08:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2121671164",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2121671164"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4543,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2121705267",
      "pull_request_review_id": 2889196839,
      "id": 2121705267,
      "node_id": "PRRC_kwDOABII585-dqcz",
      "diff_hunk": "@@ -4540,6 +4540,7 @@ bool ChainstateManager::AcceptBlock(const std::shared_ptr<const CBlock>& pblock,\n         if (state.IsInvalid() && state.GetResult() != BlockValidationResult::BLOCK_MUTATED) {\n             pindex->nStatus |= BLOCK_FAILED_VALID;\n             m_blockman.m_dirty_blockindex.insert(pindex);\n+            ActiveChainstate().InvalidChainFound(pindex);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "65de18836e5ddbdb8388e3bbdbcebee84c3b4c59",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: call InvalidChainfound also from AcceptBlock\" (65de18836e5ddbdb8388e3bbdbcebee84c3b4c59):\r\n\r\nCommit description mentions \"at the cost of looping over the entire block index\" which is referring to the loop in `Chainstate::SetBlockFailureFlags`. Probably not important in this context, but that function does seem like it could trigger unnecessary work because it is [adding blocks to m_dirty_blockindex](https://github.com/bitcoin/bitcoin/blob/1c6602399be6de0148938a3fd7b51e6c48b985d2/src/validation.cpp#L3818) regardless of whether flags have actually changed, which is different than most of the other code updating `m_dirty_blockindex`. Maybe it doesn't matter because the function has no callers that will mark already invalid blocks invalid, but not checking for changes does seem like a footgun that could lead to unnecessary database writes if the function is called other places.\r\n\r\nJust noting in case this could be a potential followup, or in case I'm missing something.\r\n\r\nEDIT: It seems like this behavior was changed recently in aac5488909f72f8c5a91ca7f12398069b7cd9ce4 from #31835. Before that commit there was an incorrect check to see if m_dirty_blockindex should be updated, which the commit removed instead of replacing.",
      "created_at": "2025-06-02T16:57:11Z",
      "updated_at": "2025-06-02T19:08:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2121705267",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2121705267"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4543,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2121727206",
      "pull_request_review_id": 2889196839,
      "id": 2121727206,
      "node_id": "PRRC_kwDOABII585-dvzm",
      "diff_hunk": "@@ -3755,11 +3754,14 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n         }\n \n         // Add any equal or more work headers to setBlockIndexCandidates\n-        auto candidate_it = candidate_blocks_by_work.lower_bound(invalid_walk_tip->pprev->nChainWork);\n-        while (candidate_it != candidate_blocks_by_work.end()) {\n-            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev)) {\n-                setBlockIndexCandidates.insert(candidate_it->second);\n-                candidate_it = candidate_blocks_by_work.erase(candidate_it);\n+        auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n+        while (candidate_it != highpow_outofchain_headers.end()) {\n+            CBlockIndex* candidate{candidate_it->second};\n+            if (!CBlockIndexWorkComparator()(candidate, invalid_walk_tip->pprev) &&\n+                candidate->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n+                candidate->HaveNumChainTxs()) {\n+                setBlockIndexCandidates.insert(candidate);\n+                candidate_it = highpow_outofchain_headers.erase(candidate_it);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "9304257d67e6f280cc1b45021118c6bb37489d89",
      "in_reply_to_id": 2090831336,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2090831336\r\n\r\nIn commit \"validation: cache all headers with enough PoW in invalidateblock\" (9304257d67e6f280cc1b45021118c6bb37489d89)\r\n\r\n> In which case, I don't think this part of the commit message is correct, at least for this commit?\r\n\r\nYes, I was going to ask about this same thing. I don't understand what \"Since we don't remove blocks after inserting into setBlockIndexCandidates anymore\" is referring to.\r\n\r\nEDIT: I guess it refers to the erase() call dropped in the subsequent commit eb973022dc2a324af4d61d9b55134577788bc83e, so maybe this comment should be moved there?\r\n\r\n",
      "created_at": "2025-06-02T17:09:22Z",
      "updated_at": "2025-06-02T19:08:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2121727206",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2121727206"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3764,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2121807875",
      "pull_request_review_id": 2889196839,
      "id": 2121807875,
      "node_id": "PRRC_kwDOABII585-eDgD",
      "diff_hunk": "@@ -3754,15 +3752,38 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n-        // Add any equal or more work headers to setBlockIndexCandidates\n-        auto candidate_it = candidate_blocks_by_work.lower_bound(invalid_walk_tip->pprev->nChainWork);\n-        while (candidate_it != candidate_blocks_by_work.end()) {\n-            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev)) {\n-                setBlockIndexCandidates.insert(candidate_it->second);\n-                candidate_it = candidate_blocks_by_work.erase(candidate_it);\n-            } else {\n-                ++candidate_it;\n+        // Mark out-of-chain descendants of the invalidated block as invalid\n+        // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n+        // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n+        // Recalculate m_best_header if it became invalid.\n+        auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n+\n+        const bool best_header_needs_update{m_chainman.m_best_header->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip};\n+        if (best_header_needs_update) {\n+            m_chainman.m_best_header = invalid_walk_tip->pprev; // pprev is definitely still valid at this point, but there may be better ones\n+        }\n+\n+        while (candidate_it != highpow_outofchain_headers.end()) {\n+            CBlockIndex* candidate{candidate_it->second};\n+            if (candidate->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip) {\n+                // Children of failed blocks should be marked as BLOCK_FAILED_CHILD instead.\n+                candidate->nStatus &= ~BLOCK_FAILED_VALID;\n+                candidate->nStatus |= BLOCK_FAILED_CHILD;\n+                m_blockman.m_dirty_blockindex.insert(candidate);\n+                // If invalidated, the block is irrelevant for setBlockIndexCandidates and m_best_header and can be removed from the cache\n+                candidate_it = highpow_outofchain_headers.erase(candidate_it);\n+                continue;\n+            }\n+            if (!CBlockIndexWorkComparator()(candidate, invalid_walk_tip->pprev) &&\n+                candidate->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n+                candidate->HaveNumChainTxs()) {\n+                setBlockIndexCandidates.insert(candidate);\n+            }\n+            if (best_header_needs_update &&\n+                CBlockIndexWorkComparator()(m_chainman.m_best_header, candidate)) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 76,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "ed172d3002da68a3ddbd5d13e7d3f0618c1378d4",
      "in_reply_to_id": 2090961175,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2090961175\r\n\r\nIn commit \"validation: in invalidateblock, calculate m_best_header right away\" (a335d003eba7bf8204db457a2a6dcca0b2f53a43)\r\n\r\n\r\nIt does seem surprising that if both RecalculateBestHeader and the CheckBlockIndex `pindex->nChainWork <= m_best_header->nChainWork` were changed to use CBlockIndexWorkComparator the check would fail. Would be good to know what causes this and it would be good to have a comment in CheckBlockIndex or on the `m_best_header` variable about which comparison is actually supposed to be used.",
      "created_at": "2025-06-02T17:51:47Z",
      "updated_at": "2025-06-02T19:08:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2121807875",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2121807875"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3783,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2121892715",
      "pull_request_review_id": 2889196839,
      "id": 2121892715,
      "node_id": "PRRC_kwDOABII585-eYNr",
      "diff_hunk": "@@ -3753,18 +3753,27 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n-        // Add any equal or more work headers to setBlockIndexCandidates\n+        // Mark out-of-chain descendants of the invalidated block as invalid\n+        // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n+        // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n         auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n         while (candidate_it != highpow_outofchain_headers.end()) {\n             CBlockIndex* candidate{candidate_it->second};\n+            if (candidate->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip) {\n+                // Children of failed blocks should be marked as BLOCK_FAILED_CHILD instead.\n+                candidate->nStatus &= ~BLOCK_FAILED_VALID;\n+                candidate->nStatus |= BLOCK_FAILED_CHILD;\n+                m_blockman.m_dirty_blockindex.insert(candidate);\n+                // If invalidated, the block is irrelevant for setBlockIndexCandidates and can be removed from the cache\n+                candidate_it = highpow_outofchain_headers.erase(candidate_it);\n+                continue;\n+            }\n             if (!CBlockIndexWorkComparator()(candidate, invalid_walk_tip->pprev) &&\n                 candidate->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n                 candidate->HaveNumChainTxs()) {\n                 setBlockIndexCandidates.insert(candidate);\n-                candidate_it = highpow_outofchain_headers.erase(candidate_it);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "eb973022dc2a324af4d61d9b55134577788bc83e",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: in invalidateblock, mark children as invalid right away\" (eb973022dc2a324af4d61d9b55134577788bc83e)\r\n\r\nComment in commit message about the candidate getting marked failed later seems like useful information to have in the actual code.\r\n\r\nMaybe add comment here like \"// Do not remove candidate from the highpow cache, because it might be a descendant of the block being invalidated which needs to be marked failed later.\"",
      "created_at": "2025-06-02T18:34:08Z",
      "updated_at": "2025-06-02T19:08:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2121892715",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2121892715"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3764,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2121916755",
      "pull_request_review_id": 2889196839,
      "id": 2121916755,
      "node_id": "PRRC_kwDOABII585-eeFT",
      "diff_hunk": "@@ -4379,45 +4375,6 @@ bool ChainstateManager::AcceptBlockHeader(const CBlockHeader& block, BlockValida\n             LogDebug(BCLog::VALIDATION, \"%s: Consensus::ContextualCheckBlockHeader: %s, %s\\n\", __func__, hash.ToString(), state.ToString());\n             return false;\n         }\n-\n-        /* Determine if this block descends from any block which has been found\n-         * invalid (m_failed_blocks), then mark pindexPrev and any blocks between\n-         * them as failed. For example:\n-         *\n-         *                D3\n-         *              /\n-         *      B2 - C2\n-         *    /         \\\n-         *  A             D2 - E2 - F2\n-         *    \\\n-         *      B1 - C1 - D1 - E1\n-         *\n-         * In the case that we attempted to reorg from E1 to F2, only to find\n-         * C2 to be invalid, we would mark D2, E2, and F2 as BLOCK_FAILED_CHILD\n-         * but NOT D3 (it was not in any of our candidate sets at the time).\n-         *\n-         * In any case D3 will also be marked as BLOCK_FAILED_CHILD at restart\n-         * in LoadBlockIndex.\n-         */\n-        if (!pindexPrev->IsValid(BLOCK_VALID_SCRIPTS)) {\n-            // The above does not mean \"invalid\": it checks if the previous block\n-            // hasn't been validated up to BLOCK_VALID_SCRIPTS. This is a performance\n-            // optimization, in the common case of adding a new block to the tip,\n-            // we don't need to iterate over the failed blocks list.\n-            for (const CBlockIndex* failedit : m_failed_blocks) {",
      "path": "src/validation.cpp",
      "position": 140,
      "original_position": 61,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "ed172d3002da68a3ddbd5d13e7d3f0618c1378d4",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: remove m_failed_blocks\" (ed172d3002da68a3ddbd5d13e7d3f0618c1378d4)\r\n\r\nFound this commit message confusing because it is talking about changes that actually happened in previous commits, and only referring to the code that sets flags, not the code that checks them.\r\n\r\nWould suggest a more specific description like \"After previous changes, the `pindexPrev->nStatus` check in `AcceptBlockHeader` is now sufficient to detect invalid blocks and checking `m_failed_blocks` there is no longer necessary.",
      "created_at": "2025-06-02T18:45:57Z",
      "updated_at": "2025-06-02T19:08:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2121916755",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2121916755"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4385,
      "original_line": 4385,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2129737657",
      "pull_request_review_id": 2901606561,
      "id": 2129737657,
      "node_id": "PRRC_kwDOABII585-8Te5",
      "diff_hunk": "@@ -4540,6 +4540,7 @@ bool ChainstateManager::AcceptBlock(const std::shared_ptr<const CBlock>& pblock,\n         if (state.IsInvalid() && state.GetResult() != BlockValidationResult::BLOCK_MUTATED) {\n             pindex->nStatus |= BLOCK_FAILED_VALID;\n             m_blockman.m_dirty_blockindex.insert(pindex);\n+            ActiveChainstate().InvalidChainFound(pindex);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "65de18836e5ddbdb8388e3bbdbcebee84c3b4c59",
      "in_reply_to_id": 2090791378,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done - I agree. The removal from `setBlockIndexCandidates` will be (unnecessary) because at this stage the index cannot be in that set - `ReceivedBlockTransactiosns` is only called later.\r\nBut this is not on a performance-critical path (since behind PoW) so the added removal shouldn't matter. \r\n\r\n>From my (limited) understanding, think state.IsInvalid() should always evaluate to true and thus seems like more of an assertion, but it's orthogonal to my suggestion.\r\n\r\nI don't think calling `InvalidBlockFound()` if the Assume failed for an unexpected reason in a non-debug build would be great, so I added the Assume but left the `if` condition in.\r\n",
      "created_at": "2025-06-05T18:26:09Z",
      "updated_at": "2025-06-05T18:26:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2129737657",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2129737657"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4543,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2129738402",
      "pull_request_review_id": 2901607379,
      "id": 2129738402,
      "node_id": "PRRC_kwDOABII585-8Tqi",
      "diff_hunk": "@@ -3699,13 +3698,12 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             // We don't need to put anything in our active chain into the\n             // multimap, because those candidates will be found and considered\n             // as we disconnect.\n-            // Instead, consider only non-active-chain blocks that have at\n-            // least as much work as where we expect the new tip to end up.\n+            // Instead, consider only non-active-chain blocks that score\n+            // at least as good with CBlockIndexWorkComparator as the new tip.\n             if (!m_chain.Contains(candidate) &&\n-                    !CBlockIndexWorkComparator()(candidate, pindex->pprev) &&\n-                    candidate->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n-                    candidate->HaveNumChainTxs()) {\n-                candidate_blocks_by_work.insert(std::make_pair(candidate->nChainWork, candidate));\n+                !CBlockIndexWorkComparator()(candidate, pindex->pprev) &&\n+                !(candidate->nStatus & BLOCK_FAILED_MASK)) {\n+                highpow_outofchain_headers.insert(std::make_pair(candidate->nChainWork, candidate));",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "ed172d3002da68a3ddbd5d13e7d3f0618c1378d4",
      "in_reply_to_id": 2090806322,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2025-06-05T18:26:17Z",
      "updated_at": "2025-06-05T18:26:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2129738402",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2129738402"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3706,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2129740992",
      "pull_request_review_id": 2901610182,
      "id": 2129740992,
      "node_id": "PRRC_kwDOABII585-8UTA",
      "diff_hunk": "@@ -3755,11 +3754,14 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n         }\n \n         // Add any equal or more work headers to setBlockIndexCandidates\n-        auto candidate_it = candidate_blocks_by_work.lower_bound(invalid_walk_tip->pprev->nChainWork);\n-        while (candidate_it != candidate_blocks_by_work.end()) {\n-            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev)) {\n-                setBlockIndexCandidates.insert(candidate_it->second);\n-                candidate_it = candidate_blocks_by_work.erase(candidate_it);\n+        auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n+        while (candidate_it != highpow_outofchain_headers.end()) {\n+            CBlockIndex* candidate{candidate_it->second};\n+            if (!CBlockIndexWorkComparator()(candidate, invalid_walk_tip->pprev) &&\n+                candidate->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n+                candidate->HaveNumChainTxs()) {\n+                setBlockIndexCandidates.insert(candidate);\n+                candidate_it = highpow_outofchain_headers.erase(candidate_it);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "9304257d67e6f280cc1b45021118c6bb37489d89",
      "in_reply_to_id": 2090831336,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "good point - yes, that comment belonged to the following commit. I moved it there in a slightly shorter form.",
      "created_at": "2025-06-05T18:26:51Z",
      "updated_at": "2025-06-05T18:26:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2129740992",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2129740992"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3764,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2129741569",
      "pull_request_review_id": 2901610771,
      "id": 2129741569,
      "node_id": "PRRC_kwDOABII585-8UcB",
      "diff_hunk": "@@ -3754,15 +3752,38 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n-        // Add any equal or more work headers to setBlockIndexCandidates\n-        auto candidate_it = candidate_blocks_by_work.lower_bound(invalid_walk_tip->pprev->nChainWork);\n-        while (candidate_it != candidate_blocks_by_work.end()) {\n-            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev)) {\n-                setBlockIndexCandidates.insert(candidate_it->second);\n-                candidate_it = candidate_blocks_by_work.erase(candidate_it);\n-            } else {\n-                ++candidate_it;\n+        // Mark out-of-chain descendants of the invalidated block as invalid\n+        // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n+        // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n+        // Recalculate m_best_header if it became invalid.\n+        auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n+\n+        const bool best_header_needs_update{m_chainman.m_best_header->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip};\n+        if (best_header_needs_update) {\n+            m_chainman.m_best_header = invalid_walk_tip->pprev; // pprev is definitely still valid at this point, but there may be better ones\n+        }\n+\n+        while (candidate_it != highpow_outofchain_headers.end()) {\n+            CBlockIndex* candidate{candidate_it->second};\n+            if (candidate->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip) {\n+                // Children of failed blocks should be marked as BLOCK_FAILED_CHILD instead.\n+                candidate->nStatus &= ~BLOCK_FAILED_VALID;\n+                candidate->nStatus |= BLOCK_FAILED_CHILD;\n+                m_blockman.m_dirty_blockindex.insert(candidate);\n+                // If invalidated, the block is irrelevant for setBlockIndexCandidates and m_best_header and can be removed from the cache",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 66,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "ed172d3002da68a3ddbd5d13e7d3f0618c1378d4",
      "in_reply_to_id": 2090892085,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2025-06-05T18:26:59Z",
      "updated_at": "2025-06-05T18:26:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2129741569",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2129741569"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3773,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2129780775",
      "pull_request_review_id": 2901655934,
      "id": 2129780775,
      "node_id": "PRRC_kwDOABII585-8eAn",
      "diff_hunk": "@@ -3754,15 +3752,38 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n-        // Add any equal or more work headers to setBlockIndexCandidates\n-        auto candidate_it = candidate_blocks_by_work.lower_bound(invalid_walk_tip->pprev->nChainWork);\n-        while (candidate_it != candidate_blocks_by_work.end()) {\n-            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev)) {\n-                setBlockIndexCandidates.insert(candidate_it->second);\n-                candidate_it = candidate_blocks_by_work.erase(candidate_it);\n-            } else {\n-                ++candidate_it;\n+        // Mark out-of-chain descendants of the invalidated block as invalid\n+        // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n+        // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n+        // Recalculate m_best_header if it became invalid.\n+        auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n+\n+        const bool best_header_needs_update{m_chainman.m_best_header->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip};\n+        if (best_header_needs_update) {\n+            m_chainman.m_best_header = invalid_walk_tip->pprev; // pprev is definitely still valid at this point, but there may be better ones\n+        }\n+\n+        while (candidate_it != highpow_outofchain_headers.end()) {\n+            CBlockIndex* candidate{candidate_it->second};\n+            if (candidate->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip) {\n+                // Children of failed blocks should be marked as BLOCK_FAILED_CHILD instead.\n+                candidate->nStatus &= ~BLOCK_FAILED_VALID;\n+                candidate->nStatus |= BLOCK_FAILED_CHILD;\n+                m_blockman.m_dirty_blockindex.insert(candidate);\n+                // If invalidated, the block is irrelevant for setBlockIndexCandidates and m_best_header and can be removed from the cache\n+                candidate_it = highpow_outofchain_headers.erase(candidate_it);\n+                continue;\n+            }\n+            if (!CBlockIndexWorkComparator()(candidate, invalid_walk_tip->pprev) &&\n+                candidate->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n+                candidate->HaveNumChainTxs()) {\n+                setBlockIndexCandidates.insert(candidate);\n+            }\n+            if (best_header_needs_update &&\n+                CBlockIndexWorkComparator()(m_chainman.m_best_header, candidate)) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 76,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "ed172d3002da68a3ddbd5d13e7d3f0618c1378d4",
      "in_reply_to_id": 2090961175,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think that this behavior is because the existing behavior during normal addition ([here](https://github.com/bitcoin/bitcoin/blob/ae024137bda9fe189f4e7ccf26dbaffd44cbbeb6/src/node/blockstorage.cpp#L230)), is to set it to the header received first, and it is \r\nnot changed in `ReceivedBlockTransactions` based on which full blocks are first received in full/connected.\r\n\r\nSo in this scenario\r\n1.) Receive Header 1\r\n2.) Receive Header 2 of same height\r\n3.) Receive/Connect Block 2\r\n4.) Receive Block 1\r\nthe tip will be at Block 2, but `m_best_header` will be at header 1.\r\n\r\nThis is why changing the `CheckBlockIndex` assert to use `CBlockIndexWorkComparator` should lead to assert failures. This could be changed in a follow-up, but we should check more closely if this would be beneficial to any of the uses of `m_best_header` (maybe not?).\r\n\r\nIn this PR, I changed the `InvalidateBlock` code to use `nChainWork` to be similar to the way it's done in RecalculateBlockHeader (to not raise the expectation that it needs to fulfill CBlockIndexWorkComparator ordering) - although it's arbitrary which block will be picked in case of multiple candidates. \r\nI also added a comment to `m_best_header` that it does not follow `CBlockIndexWorkComparator` tiebreak scores.\r\n",
      "created_at": "2025-06-05T18:37:33Z",
      "updated_at": "2025-06-05T18:37:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2129780775",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2129780775"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3783,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2129781087",
      "pull_request_review_id": 2901656300,
      "id": 2129781087,
      "node_id": "PRRC_kwDOABII585-8eFf",
      "diff_hunk": "@@ -3754,15 +3752,38 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n-        // Add any equal or more work headers to setBlockIndexCandidates\n-        auto candidate_it = candidate_blocks_by_work.lower_bound(invalid_walk_tip->pprev->nChainWork);\n-        while (candidate_it != candidate_blocks_by_work.end()) {\n-            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev)) {\n-                setBlockIndexCandidates.insert(candidate_it->second);\n-                candidate_it = candidate_blocks_by_work.erase(candidate_it);\n-            } else {\n-                ++candidate_it;\n+        // Mark out-of-chain descendants of the invalidated block as invalid\n+        // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n+        // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n+        // Recalculate m_best_header if it became invalid.\n+        auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n+\n+        const bool best_header_needs_update{m_chainman.m_best_header->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip};\n+        if (best_header_needs_update) {\n+            m_chainman.m_best_header = invalid_walk_tip->pprev; // pprev is definitely still valid at this point, but there may be better ones\n+        }",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "ed172d3002da68a3ddbd5d13e7d3f0618c1378d4",
      "in_reply_to_id": 2090976170,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "fixed",
      "created_at": "2025-06-05T18:37:42Z",
      "updated_at": "2025-06-05T18:37:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2129781087",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2129781087"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": 3761,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 3765,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2129795111",
      "pull_request_review_id": 2901671633,
      "id": 2129795111,
      "node_id": "PRRC_kwDOABII585-8hgn",
      "diff_hunk": "@@ -4540,6 +4540,7 @@ bool ChainstateManager::AcceptBlock(const std::shared_ptr<const CBlock>& pblock,\n         if (state.IsInvalid() && state.GetResult() != BlockValidationResult::BLOCK_MUTATED) {\n             pindex->nStatus |= BLOCK_FAILED_VALID;\n             m_blockman.m_dirty_blockindex.insert(pindex);\n+            ActiveChainstate().InvalidChainFound(pindex);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "65de18836e5ddbdb8388e3bbdbcebee84c3b4c59",
      "in_reply_to_id": 2121671164,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I changed the commit message based on your suggestion. I dropped the \"make the code less complicated\" part - \r\nit's a bit subjective and anyway not my main motivation for this PR:\r\nI think that in an area as central as validation we should avoid having structures that are populated on a \"best-effort\" basis (and therefore cannot be subjected to rigorous checks as in `CheckBlockIndex`) and trust that no one will ever rely on them for anything too serious in the future.",
      "created_at": "2025-06-05T18:41:16Z",
      "updated_at": "2025-06-05T18:41:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2129795111",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2129795111"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4543,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2129806417",
      "pull_request_review_id": 2901683967,
      "id": 2129806417,
      "node_id": "PRRC_kwDOABII585-8kRR",
      "diff_hunk": "@@ -4540,6 +4540,7 @@ bool ChainstateManager::AcceptBlock(const std::shared_ptr<const CBlock>& pblock,\n         if (state.IsInvalid() && state.GetResult() != BlockValidationResult::BLOCK_MUTATED) {\n             pindex->nStatus |= BLOCK_FAILED_VALID;\n             m_blockman.m_dirty_blockindex.insert(pindex);\n+            ActiveChainstate().InvalidChainFound(pindex);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "65de18836e5ddbdb8388e3bbdbcebee84c3b4c59",
      "in_reply_to_id": 2121705267,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> which is referring to the loop in Chainstate::SetBlockFailureFlags\r\n\r\nIt's referring to `SetBlockFailureFlags` and `RecalculateBestHeader` which both loop over the block index.\r\n\r\n> unnecessary database writes\r\n\r\nI agree that this is a potential follow-up (to #31835, pinging @stratospher). It's probably not performance-critical, because it's also guarded by PoW (creating multiple PoW-valid headers that build on a failed block is very costly).",
      "created_at": "2025-06-05T18:43:43Z",
      "updated_at": "2025-06-05T18:43:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2129806417",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2129806417"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4543,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2129810763",
      "pull_request_review_id": 2901688556,
      "id": 2129810763,
      "node_id": "PRRC_kwDOABII585-8lVL",
      "diff_hunk": "@@ -4379,45 +4375,6 @@ bool ChainstateManager::AcceptBlockHeader(const CBlockHeader& block, BlockValida\n             LogDebug(BCLog::VALIDATION, \"%s: Consensus::ContextualCheckBlockHeader: %s, %s\\n\", __func__, hash.ToString(), state.ToString());\n             return false;\n         }\n-\n-        /* Determine if this block descends from any block which has been found\n-         * invalid (m_failed_blocks), then mark pindexPrev and any blocks between\n-         * them as failed. For example:\n-         *\n-         *                D3\n-         *              /\n-         *      B2 - C2\n-         *    /         \\\n-         *  A             D2 - E2 - F2\n-         *    \\\n-         *      B1 - C1 - D1 - E1\n-         *\n-         * In the case that we attempted to reorg from E1 to F2, only to find\n-         * C2 to be invalid, we would mark D2, E2, and F2 as BLOCK_FAILED_CHILD\n-         * but NOT D3 (it was not in any of our candidate sets at the time).\n-         *\n-         * In any case D3 will also be marked as BLOCK_FAILED_CHILD at restart\n-         * in LoadBlockIndex.\n-         */\n-        if (!pindexPrev->IsValid(BLOCK_VALID_SCRIPTS)) {\n-            // The above does not mean \"invalid\": it checks if the previous block\n-            // hasn't been validated up to BLOCK_VALID_SCRIPTS. This is a performance\n-            // optimization, in the common case of adding a new block to the tip,\n-            // we don't need to iterate over the failed blocks list.\n-            for (const CBlockIndex* failedit : m_failed_blocks) {",
      "path": "src/validation.cpp",
      "position": 140,
      "original_position": 61,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "ed172d3002da68a3ddbd5d13e7d3f0618c1378d4",
      "in_reply_to_id": 2121916755,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I rewrote the commit message - hope it's clearer now.",
      "created_at": "2025-06-05T18:44:30Z",
      "updated_at": "2025-06-05T18:44:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2129810763",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2129810763"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4385,
      "original_line": 4385,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132101738",
      "pull_request_review_id": 2904751108,
      "id": 2132101738,
      "node_id": "PRRC_kwDOABII585_FUpq",
      "diff_hunk": "@@ -3754,15 +3752,42 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n-        // Add any equal or more work headers to setBlockIndexCandidates\n-        auto candidate_it = candidate_blocks_by_work.lower_bound(invalid_walk_tip->pprev->nChainWork);\n-        while (candidate_it != candidate_blocks_by_work.end()) {\n-            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev)) {\n-                setBlockIndexCandidates.insert(candidate_it->second);\n-                candidate_it = candidate_blocks_by_work.erase(candidate_it);\n-            } else {\n-                ++candidate_it;\n+        // Mark out-of-chain descendants of the invalidated block as invalid\n+        // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n+        // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n+        // Recalculate m_best_header if it became invalid.\n+        auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n+\n+        const bool best_header_needs_update{m_chainman.m_best_header->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip};\n+        if (best_header_needs_update) {\n+            // pprev is definitely still valid at this point, but there may be better ones\n+            m_chainman.m_best_header = invalid_walk_tip->pprev;\n+        }\n+\n+        while (candidate_it != highpow_outofchain_headers.end()) {\n+            CBlockIndex* candidate{candidate_it->second};\n+            if (candidate->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip) {\n+                // Children of failed blocks should be marked as BLOCK_FAILED_CHILD instead.\n+                candidate->nStatus &= ~BLOCK_FAILED_VALID;\n+                candidate->nStatus |= BLOCK_FAILED_CHILD;\n+                m_blockman.m_dirty_blockindex.insert(candidate);\n+                // If invalidated, the block is irrelevant for setBlockIndexCandidates\n+                // and for m_best_header and can be removed from the cache.\n+                candidate_it = highpow_outofchain_headers.erase(candidate_it);\n+                continue;\n+            }\n+            if (!CBlockIndexWorkComparator()(candidate, invalid_walk_tip->pprev) &&\n+                candidate->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n+                candidate->HaveNumChainTxs()) {\n+                setBlockIndexCandidates.insert(candidate);\n+                // Do not remove candidate from the highpow cache, because it might be a descendant of the block being invalidated",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 76,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "fdcdc2cdeadb5d36076f1b94b54261e22e031354",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit for greppability (and line lenght)\r\n```suggestion\r\n                // Do not remove candidate from highpow_outofchain_headers, because it might be a\r\n                // descendant of the block being invalidated which needs to be marked failed later.\r\n```",
      "created_at": "2025-06-06T12:25:51Z",
      "updated_at": "2025-06-06T12:43:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2132101738",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132101738"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3783,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132118238",
      "pull_request_review_id": 2904751108,
      "id": 2132118238,
      "node_id": "PRRC_kwDOABII585_FYre",
      "diff_hunk": "@@ -4537,9 +4520,9 @@ bool ChainstateManager::AcceptBlock(const std::shared_ptr<const CBlock>& pblock,\n \n     if (!CheckBlock(block, state, params.GetConsensus()) ||\n         !ContextualCheckBlock(block, state, *this, pindex->pprev)) {\n-        if (state.IsInvalid() && state.GetResult() != BlockValidationResult::BLOCK_MUTATED) {\n-            pindex->nStatus |= BLOCK_FAILED_VALID;\n-            m_blockman.m_dirty_blockindex.insert(pindex);\n+        Assume(state.IsInvalid());\n+        if (state.IsInvalid()) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 165,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "fdcdc2cdeadb5d36076f1b94b54261e22e031354",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "inline nit\r\n```suggestion\r\n        if (Assume(state.IsInvalid())) {\r\n```",
      "created_at": "2025-06-06T12:36:53Z",
      "updated_at": "2025-06-06T12:43:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2132118238",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132118238"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": 4523,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 4524,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132120486",
      "pull_request_review_id": 2904751108,
      "id": 2132120486,
      "node_id": "PRRC_kwDOABII585_FZOm",
      "diff_hunk": "@@ -1038,28 +1038,10 @@ class ChainstateManager\n     }\n \n \n-    /**\n-     * In order to efficiently track invalidity of headers, we keep the set of\n-     * blocks which we tried to connect and found to be invalid here (ie which\n-     * were set to BLOCK_FAILED_VALID since the last restart). We can then\n-     * walk this set and check if a new header is a descendant of something in\n-     * this set, preventing us from having to walk m_block_index when we try\n-     * to connect a bad block and fail.\n-     *\n-     * While this is more complicated than marking everything which descends\n-     * from an invalid block as invalid at the time we discover it to be\n-     * invalid, doing so would require walking all of m_block_index to find all\n-     * descendants. Since this case should be very rare, keeping track of all\n-     * BLOCK_FAILED_VALID blocks in a set should be just fine and work just as\n-     * well.\n-     *\n-     * Because we already walk m_block_index in height-order at startup, we go\n-     * ahead and mark descendants of invalid blocks as FAILED_CHILD at that time,\n-     * instead of putting things in this set.\n-     */\n-    std::set<CBlockIndex*> m_failed_blocks;\n-\n-    /** Best header we've seen so far (used for getheaders queries' starting points). */\n+    /** Best header we've seen so far for which the block is not known to be invalid\n+        (used, among others, for getheaders queries' starting points).\n+        In case of multiple best headers with the same work, it could point to any:",
      "path": "src/validation.h",
      "position": null,
      "original_position": 28,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "fdcdc2cdeadb5d36076f1b94b54261e22e031354",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit\r\n```suggestion\r\n        In case of multiple best headers with the same work, it could point to any.\r\n```",
      "created_at": "2025-06-06T12:38:22Z",
      "updated_at": "2025-06-06T12:43:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2132120486",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132120486"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1043,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132231220",
      "pull_request_review_id": 2904963797,
      "id": 2132231220,
      "node_id": "PRRC_kwDOABII585_F0Q0",
      "diff_hunk": "@@ -3753,18 +3753,27 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n-        // Add any equal or more work headers to setBlockIndexCandidates\n+        // Mark out-of-chain descendants of the invalidated block as invalid\n+        // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n+        // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n         auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n         while (candidate_it != highpow_outofchain_headers.end()) {\n             CBlockIndex* candidate{candidate_it->second};\n+            if (candidate->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip) {\n+                // Children of failed blocks should be marked as BLOCK_FAILED_CHILD instead.\n+                candidate->nStatus &= ~BLOCK_FAILED_VALID;\n+                candidate->nStatus |= BLOCK_FAILED_CHILD;\n+                m_blockman.m_dirty_blockindex.insert(candidate);\n+                // If invalidated, the block is irrelevant for setBlockIndexCandidates and can be removed from the cache\n+                candidate_it = highpow_outofchain_headers.erase(candidate_it);\n+                continue;\n+            }\n             if (!CBlockIndexWorkComparator()(candidate, invalid_walk_tip->pprev) &&\n                 candidate->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n                 candidate->HaveNumChainTxs()) {\n                 setBlockIndexCandidates.insert(candidate);\n-                candidate_it = highpow_outofchain_headers.erase(candidate_it);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "eb973022dc2a324af4d61d9b55134577788bc83e",
      "in_reply_to_id": 2121892715,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2121892715\r\n\r\nIn commit \"validation: in invalidateblock, mark children as invalid right away\" (328345d571d9b86af54e915b30183b91d28cab2f)\r\n\r\nThanks for the new comment. Now that there's an explanation directly in the code, I think it would be good to replace the text \"Entries from...\" paragraph with a simple statement that the commit doesn't change behavior, since the paragraph only repeats the code comment out of context.",
      "created_at": "2025-06-06T13:45:19Z",
      "updated_at": "2025-06-06T15:33:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2132231220",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132231220"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3764,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132281266",
      "pull_request_review_id": 2904963797,
      "id": 2132281266,
      "node_id": "PRRC_kwDOABII585_GAey",
      "diff_hunk": "@@ -3753,18 +3753,30 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n-        // Add any equal or more work headers to setBlockIndexCandidates\n+        // Mark out-of-chain descendants of the invalidated block as invalid",
      "path": "src/validation.cpp",
      "position": 48,
      "original_position": 5,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "328345d571d9b86af54e915b30183b91d28cab2f",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: in invalidateblock, mark children as invalid right away\" (328345d571d9b86af54e915b30183b91d28cab2f)\r\n\r\nWould seem more accurate to say this code is marking out-of-chain descendants of the \"disconnected block\" rather than the \"invalidated block\" since the invalidated block sounds like the block passed to invalidateblock\r\n\r\n",
      "created_at": "2025-06-06T14:14:09Z",
      "updated_at": "2025-06-06T15:33:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2132281266",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132281266"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3755,
      "original_line": 3755,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132302141",
      "pull_request_review_id": 2904963797,
      "id": 2132302141,
      "node_id": "PRRC_kwDOABII585_GFk9",
      "diff_hunk": "@@ -3756,7 +3756,15 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n         // Mark out-of-chain descendants of the invalidated block as invalid\n         // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n         // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n+        // Recalculate m_best_header if it became invalid.\n         auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n+\n+        const bool best_header_needs_update{m_chainman.m_best_header->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip};\n+        if (best_header_needs_update) {\n+            // pprev is definitely still valid at this point, but there may be better ones",
      "path": "src/validation.cpp",
      "position": 56,
      "original_position": 9,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "809413fde6893e60078e02b401a9d98a3e341fc1",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: in invalidateblock, calculate m_best_header right away\" (809413fde6893e60078e02b401a9d98a3e341fc1)\r\n\r\nMaybe replace \"but there may be better ones\" with \"but there could be a better header, which will be found in the loop below\", because current comment seems to imply that the code will not actually find the best header.",
      "created_at": "2025-06-06T14:26:04Z",
      "updated_at": "2025-06-06T15:33:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2132302141",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132302141"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3763,
      "original_line": 3763,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132334798",
      "pull_request_review_id": 2904963797,
      "id": 2132334798,
      "node_id": "PRRC_kwDOABII585_GNjO",
      "diff_hunk": "@@ -3776,6 +3784,10 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n                 // Do not remove candidate from the highpow cache, because it might be a descendant of the block being invalidated\n                 // which needs to be marked failed later.\n             }\n+            if (best_header_needs_update &&\n+                m_chainman.m_best_header->nChainWork < candidate->nChainWork) {",
      "path": "src/validation.cpp",
      "position": 80,
      "original_position": 30,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "809413fde6893e60078e02b401a9d98a3e341fc1",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: in invalidateblock, calculate m_best_header right away\" (809413fde6893e60078e02b401a9d98a3e341fc1)\r\n\r\nIt seems like it could be better to use CBlockIndexWorkComparator here instead of relying highpow_outofchain_headers multimap ordering when choosing m_best_header and two headers have the same mount of work because CBlockIndexWorkComparator should be more deterministic and consistent with surrounding code, while map order will depend on iteration order of the `m_block_index` unordered set.\r\n\r\nEDIT: Never mind probably. It looks like RecalculateBestHeader is also relying on `m_block_index` iteration order so this is consistent with that. Could be helpful to just add a comment about intent though.",
      "created_at": "2025-06-06T14:44:59Z",
      "updated_at": "2025-06-06T15:33:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2132334798",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132334798"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3787,
      "original_line": 3787,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132355311",
      "pull_request_review_id": 2904963797,
      "id": 2132355311,
      "node_id": "PRRC_kwDOABII585_GSjv",
      "diff_hunk": "@@ -3756,7 +3756,15 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n         // Mark out-of-chain descendants of the invalidated block as invalid\n         // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n         // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n+        // Recalculate m_best_header if it became invalid.",
      "path": "src/validation.cpp",
      "position": 51,
      "original_position": 4,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "809413fde6893e60078e02b401a9d98a3e341fc1",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: in invalidateblock, calculate m_best_header right away\" (809413fde6893e60078e02b401a9d98a3e341fc1)\r\n\r\nCommit message says \"Before, m_best_header would be calculated only after disconnecting multiple blocks\" but I'm actually not seeing where this was happening, though I think it must have been happening? \r\n\r\nCould help if commit message was clarified (or not if I'm just missing something obvious).",
      "created_at": "2025-06-06T14:56:33Z",
      "updated_at": "2025-06-06T15:33:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2132355311",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132355311"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3758,
      "original_line": 3758,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132373845",
      "pull_request_review_id": 2904963797,
      "id": 2132373845,
      "node_id": "PRRC_kwDOABII585_GXFV",
      "diff_hunk": "@@ -1038,7 +1038,10 @@ class ChainstateManager\n     }\n \n \n-    /** Best header we've seen so far (used for getheaders queries' starting points). */\n+    /** Best header we've seen so far for which the block is not known to be invalid\n+        (used, among others, for getheaders queries' starting points).\n+        In case of multiple best headers with the same work, it could point to any:\n+        CBlockIndexWorkComparator tiebreaker rules don't apply here. */",
      "path": "src/validation.h",
      "position": null,
      "original_position": 8,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "fdcdc2cdeadb5d36076f1b94b54261e22e031354",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"doc: Improve m_best_header documentation\" (fdcdc2cdeadb5d36076f1b94b54261e22e031354)\r\n\r\nIt seems like it would be nice to use CBlockIndexWorkComparator consistently for comparisons, but since it's probably beyond scope of this PR, it's good to have this documentation comment mentioning the lack of consistency.\r\n\r\nJust in case its useful for future reference, the post describing the current situation in the most detail is https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2129780775",
      "created_at": "2025-06-06T15:07:47Z",
      "updated_at": "2025-06-06T15:33:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2132373845",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132373845"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1044,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132394370",
      "pull_request_review_id": 2905255432,
      "id": 2132394370,
      "node_id": "PRRC_kwDOABII585_GcGC",
      "diff_hunk": "@@ -3754,15 +3752,42 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n             m_blockman.m_dirty_blockindex.insert(to_mark_failed);\n         }\n \n-        // Add any equal or more work headers to setBlockIndexCandidates\n-        auto candidate_it = candidate_blocks_by_work.lower_bound(invalid_walk_tip->pprev->nChainWork);\n-        while (candidate_it != candidate_blocks_by_work.end()) {\n-            if (!CBlockIndexWorkComparator()(candidate_it->second, invalid_walk_tip->pprev)) {\n-                setBlockIndexCandidates.insert(candidate_it->second);\n-                candidate_it = candidate_blocks_by_work.erase(candidate_it);\n-            } else {\n-                ++candidate_it;\n+        // Mark out-of-chain descendants of the invalidated block as invalid\n+        // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n+        // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n+        // Recalculate m_best_header if it became invalid.\n+        auto candidate_it = highpow_outofchain_headers.lower_bound(invalid_walk_tip->pprev->nChainWork);\n+\n+        const bool best_header_needs_update{m_chainman.m_best_header->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip};\n+        if (best_header_needs_update) {\n+            // pprev is definitely still valid at this point, but there may be better ones\n+            m_chainman.m_best_header = invalid_walk_tip->pprev;\n+        }\n+\n+        while (candidate_it != highpow_outofchain_headers.end()) {\n+            CBlockIndex* candidate{candidate_it->second};\n+            if (candidate->GetAncestor(invalid_walk_tip->nHeight) == invalid_walk_tip) {\n+                // Children of failed blocks should be marked as BLOCK_FAILED_CHILD instead.\n+                candidate->nStatus &= ~BLOCK_FAILED_VALID;\n+                candidate->nStatus |= BLOCK_FAILED_CHILD;\n+                m_blockman.m_dirty_blockindex.insert(candidate);\n+                // If invalidated, the block is irrelevant for setBlockIndexCandidates\n+                // and for m_best_header and can be removed from the cache.\n+                candidate_it = highpow_outofchain_headers.erase(candidate_it);\n+                continue;\n+            }\n+            if (!CBlockIndexWorkComparator()(candidate, invalid_walk_tip->pprev) &&\n+                candidate->IsValid(BLOCK_VALID_TRANSACTIONS) &&\n+                candidate->HaveNumChainTxs()) {\n+                setBlockIndexCandidates.insert(candidate);\n+                // Do not remove candidate from the highpow cache, because it might be a descendant of the block being invalidated",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 76,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "fdcdc2cdeadb5d36076f1b94b54261e22e031354",
      "in_reply_to_id": 2132101738,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2025-06-06T15:20:45Z",
      "updated_at": "2025-06-06T15:20:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2132394370",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132394370"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3783,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132394658",
      "pull_request_review_id": 2905255896,
      "id": 2132394658,
      "node_id": "PRRC_kwDOABII585_GcKi",
      "diff_hunk": "@@ -4537,9 +4520,9 @@ bool ChainstateManager::AcceptBlock(const std::shared_ptr<const CBlock>& pblock,\n \n     if (!CheckBlock(block, state, params.GetConsensus()) ||\n         !ContextualCheckBlock(block, state, *this, pindex->pprev)) {\n-        if (state.IsInvalid() && state.GetResult() != BlockValidationResult::BLOCK_MUTATED) {\n-            pindex->nStatus |= BLOCK_FAILED_VALID;\n-            m_blockman.m_dirty_blockindex.insert(pindex);\n+        Assume(state.IsInvalid());\n+        if (state.IsInvalid()) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 165,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "fdcdc2cdeadb5d36076f1b94b54261e22e031354",
      "in_reply_to_id": 2132118238,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2025-06-06T15:20:55Z",
      "updated_at": "2025-06-06T15:20:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2132394658",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132394658"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": 4523,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 4524,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132395636",
      "pull_request_review_id": 2905257379,
      "id": 2132395636,
      "node_id": "PRRC_kwDOABII585_GcZ0",
      "diff_hunk": "@@ -1038,28 +1038,10 @@ class ChainstateManager\n     }\n \n \n-    /**\n-     * In order to efficiently track invalidity of headers, we keep the set of\n-     * blocks which we tried to connect and found to be invalid here (ie which\n-     * were set to BLOCK_FAILED_VALID since the last restart). We can then\n-     * walk this set and check if a new header is a descendant of something in\n-     * this set, preventing us from having to walk m_block_index when we try\n-     * to connect a bad block and fail.\n-     *\n-     * While this is more complicated than marking everything which descends\n-     * from an invalid block as invalid at the time we discover it to be\n-     * invalid, doing so would require walking all of m_block_index to find all\n-     * descendants. Since this case should be very rare, keeping track of all\n-     * BLOCK_FAILED_VALID blocks in a set should be just fine and work just as\n-     * well.\n-     *\n-     * Because we already walk m_block_index in height-order at startup, we go\n-     * ahead and mark descendants of invalid blocks as FAILED_CHILD at that time,\n-     * instead of putting things in this set.\n-     */\n-    std::set<CBlockIndex*> m_failed_blocks;\n-\n-    /** Best header we've seen so far (used for getheaders queries' starting points). */\n+    /** Best header we've seen so far for which the block is not known to be invalid\n+        (used, among others, for getheaders queries' starting points).\n+        In case of multiple best headers with the same work, it could point to any:",
      "path": "src/validation.h",
      "position": null,
      "original_position": 28,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "fdcdc2cdeadb5d36076f1b94b54261e22e031354",
      "in_reply_to_id": 2132120486,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "changed to \"because\" - it was meant to imply a causality between the sentences.",
      "created_at": "2025-06-06T15:21:32Z",
      "updated_at": "2025-06-06T15:21:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2132395636",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132395636"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1043,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2135515163",
      "pull_request_review_id": 2909719070,
      "id": 2135515163,
      "node_id": "PRRC_kwDOABII585_SWAb",
      "diff_hunk": "@@ -3756,7 +3756,15 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n         // Mark out-of-chain descendants of the invalidated block as invalid\n         // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n         // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n+        // Recalculate m_best_header if it became invalid.",
      "path": "src/validation.cpp",
      "position": 51,
      "original_position": 4,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "809413fde6893e60078e02b401a9d98a3e341fc1",
      "in_reply_to_id": 2132355311,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> but I'm actually not seeing where this was happening\r\n\r\nThere's a `InvalidChainFound(to_mark_failed)` call near the end of `InvalidateBlock()`, which in turn calls `RecalculateBestHeader()`.",
      "created_at": "2025-06-09T10:58:38Z",
      "updated_at": "2025-06-09T10:58:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2135515163",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2135515163"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3758,
      "original_line": 3758,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2135717500",
      "pull_request_review_id": 2910063013,
      "id": 2135717500,
      "node_id": "PRRC_kwDOABII585_THZ8",
      "diff_hunk": "@@ -3756,7 +3756,15 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n         // Mark out-of-chain descendants of the invalidated block as invalid\n         // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n         // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n+        // Recalculate m_best_header if it became invalid.",
      "path": "src/validation.cpp",
      "position": 51,
      "original_position": 4,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "809413fde6893e60078e02b401a9d98a3e341fc1",
      "in_reply_to_id": 2132355311,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2135515163\r\n\r\nIn commit \"validation: in invalidateblock, calculate m_best_header right away\" (9a70883002e1fee76c24810808af4fb43f2c8cf5)\r\n\r\nThanks! It looks like the later RecalculateBestHeader() call is now unnecessary and could repeat the work this new code is doing, which doesn't seem great from perspective of duplicating code. InvalidChainFound also seems to be updating \r\nm_best_invalid and m_best_header together while the new code is only updating the latter, so that seems a bit fragile.\r\n\r\nI wonder if maybe instead of adding the new code in this commit it might make more sense to just move the InvalidateBlock call above the CheckBlockIndex call?",
      "created_at": "2025-06-09T13:24:14Z",
      "updated_at": "2025-06-09T13:24:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2135717500",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2135717500"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3758,
      "original_line": 3758,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2135886621",
      "pull_request_review_id": 2910343839,
      "id": 2135886621,
      "node_id": "PRRC_kwDOABII585_Twsd",
      "diff_hunk": "@@ -3756,7 +3756,15 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n         // Mark out-of-chain descendants of the invalidated block as invalid\n         // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n         // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n+        // Recalculate m_best_header if it became invalid.",
      "path": "src/validation.cpp",
      "position": 51,
      "original_position": 4,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "809413fde6893e60078e02b401a9d98a3e341fc1",
      "in_reply_to_id": 2132355311,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I wonder if maybe instead of adding the new code in this commit it might make more sense to just move the InvalidateBlock call above the CheckBlockIndex call?\r\n\r\nYou probably meant to suggest moving the `InvalidChainFound` call.\r\n\r\nI think that wouldn't be ideal:\r\nWe could put it into the loop (before `cs_main` is released) and remove all other changed to InvalidateBlock of this PR, but then we'd loop over the entire block index with each iteration, which I'd like to to avoid for performance reasons (e.g. artificial rewinds for ten-thousands of block for AssumeUtxo parameter determination).\r\n\r\nIf we put it directly before the `CheckBlockIndex` call, the block index would be in an inconsistent state after each release of `cs_main` in the main loop, so that other threads can call `CheckBlockIndex()` (this happens, for example, if a new header is received via p2p, see `ProcessNewBlockHeaders`).\r\n\r\nMaybe one possibility would be to add a parameter to `InvalidChainFound` to skip `RecalculateBestHeader` and `SetBlockFailureFlags` (because I think we want to keep setting of `m_best_invalid`,the  logging, and maybe also `CheckForkWarningConditions`).\r\n",
      "created_at": "2025-06-09T14:58:08Z",
      "updated_at": "2025-06-09T14:59:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2135886621",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2135886621"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3758,
      "original_line": 3758,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2137230303",
      "pull_request_review_id": 2912478021,
      "id": 2137230303,
      "node_id": "PRRC_kwDOABII585_Y4vf",
      "diff_hunk": "@@ -3776,6 +3784,10 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n                 // Do not remove candidate from the highpow cache, because it might be a descendant of the block being invalidated\n                 // which needs to be marked failed later.\n             }\n+            if (best_header_needs_update &&\n+                m_chainman.m_best_header->nChainWork < candidate->nChainWork) {",
      "path": "src/validation.cpp",
      "position": 80,
      "original_position": 30,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "809413fde6893e60078e02b401a9d98a3e341fc1",
      "in_reply_to_id": 2132334798,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'd like a comment here too.",
      "created_at": "2025-06-10T08:17:33Z",
      "updated_at": "2025-06-10T08:17:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2137230303",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2137230303"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3787,
      "original_line": 3787,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2137888077",
      "pull_request_review_id": 2913549953,
      "id": 2137888077,
      "node_id": "PRRC_kwDOABII585_bZVN",
      "diff_hunk": "@@ -3756,7 +3756,15 @@ bool Chainstate::InvalidateBlock(BlockValidationState& state, CBlockIndex* pinde\n         // Mark out-of-chain descendants of the invalidated block as invalid\n         // (possibly replacing a pre-existing BLOCK_FAILED_VALID with BLOCK_FAILED_CHILD)\n         // Add any equal or more work headers that are not invalidated to setBlockIndexCandidates\n+        // Recalculate m_best_header if it became invalid.",
      "path": "src/validation.cpp",
      "position": 51,
      "original_position": 4,
      "commit_id": "f6b782f3aad4a6bcf823a9a0fabb4418bca1eea1",
      "original_commit_id": "809413fde6893e60078e02b401a9d98a3e341fc1",
      "in_reply_to_id": 2132355311,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2135886621\r\n\r\nIn commit \"validation: in invalidateblock, calculate m_best_header right away\" (9a70883002e1fee76c24810808af4fb43f2c8cf5)\r\n\r\nThanks. I was just thinking of moving it right before the CheckBlockIndex call, but didn't think about the fact that CheckBlockIndex could be called by other threads during this time.\r\n\r\n> Maybe one possibility would be to add a parameter to `InvalidChainFound` to skip `RecalculateBestHeader`\r\n\r\nYes, this would be helpful especially if it could allow moving the `InvalidChainFound` call inside the loop instead of after it. Current code only updating `m_best_header` inside the loop before cs_main is released, and updating both `m_best_header` and `m_best_invalid` afterward with no comments about the redundancy or rationale seems fragile.",
      "created_at": "2025-06-10T13:19:16Z",
      "updated_at": "2025-06-10T13:51:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31405#discussion_r2137888077",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2137888077"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3758,
      "original_line": 3758,
      "side": "RIGHT"
    }
  ]
}