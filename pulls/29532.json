{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532",
    "id": 1752509725,
    "node_id": "PR_kwDOABII585odS0d",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/29532",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/29532.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/29532.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29532",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29532/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/dbf1f2663b1afbe03d6b1855f83db604bc79979e",
    "number": 29532,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Refactor BnB tests",
    "user": {
      "login": "murchandamus",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murchandamus",
      "html_url": "https://github.com/murchandamus",
      "followers_url": "https://api.github.com/users/murchandamus/followers",
      "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
      "organizations_url": "https://api.github.com/users/murchandamus/orgs",
      "repos_url": "https://api.github.com/users/murchandamus/repos",
      "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/murchandamus/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This PR is splitting off some of the improvements made in #28985 and starts addressing the issues raised in #27754.\r\n\r\nI aim to completely replace `coinselector_tests` with `coinselection_tests`. The goal is to generally use coins created per a nominal _effective value_ so we can get away from testing with `CoinSelectionParams` that are non-representative and effectuate counterintuitive behavior such as `feerate = 0` or `cost_of_change = 0`",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2024-03-01T22:37:48Z",
    "updated_at": "2025-04-29T20:48:47Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "d24644d6f063a63a694047e093f4d18ce5ff3c99",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "murchandamus:2024-03-coinselection_tests",
      "ref": "2024-03-coinselection_tests",
      "sha": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 23979970,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMzk3OTk3MA==",
        "name": "bitcoin",
        "full_name": "murchandamus/bitcoin",
        "owner": {
          "login": "murchandamus",
          "id": 4060799,
          "node_id": "MDQ6VXNlcjQwNjA3OTk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/murchandamus",
          "html_url": "https://github.com/murchandamus",
          "followers_url": "https://api.github.com/users/murchandamus/followers",
          "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
          "organizations_url": "https://api.github.com/users/murchandamus/orgs",
          "repos_url": "https://api.github.com/users/murchandamus/repos",
          "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/murchandamus/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/murchandamus/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/murchandamus/bitcoin",
        "archive_url": "https://api.github.com/repos/murchandamus/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/murchandamus/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/murchandamus/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/murchandamus/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/murchandamus/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/murchandamus/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/murchandamus/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/murchandamus/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/murchandamus/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/murchandamus/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/murchandamus/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/murchandamus/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/murchandamus/bitcoin/events",
        "forks_url": "https://api.github.com/repos/murchandamus/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/murchandamus/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/murchandamus/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/murchandamus/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/murchandamus/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/murchandamus/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/murchandamus/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/murchandamus/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/murchandamus/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/murchandamus/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/murchandamus/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/murchandamus/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/murchandamus/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/murchandamus/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/murchandamus/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/murchandamus/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:murchandamus/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/murchandamus/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/murchandamus/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/murchandamus/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/murchandamus/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/murchandamus/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/murchandamus/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/murchandamus/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/murchandamus/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/murchandamus/bitcoin/hooks",
        "svn_url": "https://github.com/murchandamus/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 244074,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-04-29T14:23:26Z",
        "created_at": "2014-09-12T23:11:53Z",
        "updated_at": "2025-04-14T17:47:31Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "c5e44a043563dbe5439d1cd8e623467936db1187",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37125,
        "stargazers_count": 83091,
        "watchers_count": 83091,
        "size": 280558,
        "default_branch": "master",
        "open_issues_count": 719,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-04-29T17:25:16Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-04-29T19:52:35Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 225,
    "deletions": 162,
    "changed_files": 3,
    "commits": 8,
    "review_comments": 80,
    "comments": 19
  },
  "events": [
    {
      "event": "commented",
      "id": 1974028200,
      "node_id": "IC_kwDOABII5851qUeo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1974028200",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-01T22:37:51Z",
      "updated_at": "2025-04-29T20:48:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/29532.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [jasonribble](https://github.com/bitcoin/bitcoin/pull/29532#pullrequestreview-2411753208), [ismaelsadeeq](https://github.com/bitcoin/bitcoin/pull/29532#pullrequestreview-2419167788), [yancyribbens](https://github.com/bitcoin/bitcoin/pull/29532#issuecomment-2712097498) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#32150](https://github.com/bitcoin/bitcoin/pull/32150) (coinselection: Optimize BnB exploration by murchandamus)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#issuecomment-1974028200",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29532"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12014225137,
      "node_id": "HRFPE_lADOABII586BAJQqzwAAAALMGobx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12014225137",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5d722bbd53308c0988c13056fd0472e83226fbb6",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/5d722bbd53308c0988c13056fd0472e83226fbb6",
      "created_at": "2024-03-05T13:50:48Z"
    },
    {
      "event": "labeled",
      "id": 12223336435,
      "node_id": "LE_lADOABII586BAJQqzwAAAALYkU_z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12223336435",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-23T03:02:25Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 12280053002,
      "node_id": "UNLE_lADOABII586BAJQqzwAAAALb8r0K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12280053002",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-28T11:32:53Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "ready_for_review",
      "id": 12405571452,
      "node_id": "RFRE_lADOABII586BAJQqzwAAAALjbf98",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12405571452",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-09T12:02:15Z"
    },
    {
      "event": "commented",
      "id": 2044975612,
      "node_id": "IC_kwDOABII585549n8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2044975612",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-09T12:03:08Z",
      "updated_at": "2024-04-09T12:03:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "Pinging @furszy, @achow101, @S3RK, as discussed",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#issuecomment-2044975612",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29532"
    },
    {
      "event": "mentioned",
      "id": 12405581496,
      "node_id": "MEE_lADOABII586BAJQqzwAAAALjbia4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12405581496",
      "actor": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-09T12:03:09Z"
    },
    {
      "event": "subscribed",
      "id": 12405581503,
      "node_id": "SE_lADOABII586BAJQqzwAAAALjbia_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12405581503",
      "actor": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-09T12:03:09Z"
    },
    {
      "event": "mentioned",
      "id": 12405581526,
      "node_id": "MEE_lADOABII586BAJQqzwAAAALjbibW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12405581526",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-09T12:03:09Z"
    },
    {
      "event": "subscribed",
      "id": 12405581539,
      "node_id": "SE_lADOABII586BAJQqzwAAAALjbibj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12405581539",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-09T12:03:09Z"
    },
    {
      "event": "mentioned",
      "id": 12405581549,
      "node_id": "MEE_lADOABII586BAJQqzwAAAALjbibt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12405581549",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-09T12:03:09Z"
    },
    {
      "event": "subscribed",
      "id": 12405581562,
      "node_id": "SE_lADOABII586BAJQqzwAAAALjbib6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12405581562",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-09T12:03:10Z"
    },
    {
      "event": "labeled",
      "id": 12541426091,
      "node_id": "LE_lADOABII586BAJQqzwAAAALrhvmr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12541426091",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-19T15:51:30Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 12570956831,
      "node_id": "UNLE_lADOABII586BAJQqzwAAAALtSZQf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12570956831",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-23T07:46:06Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2020119624,
      "node_id": "PRR_kwDOABII5854aJRI",
      "url": null,
      "actor": null,
      "commit_id": "5d722bbd53308c0988c13056fd0472e83226fbb6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#pullrequestreview-2020119624",
      "submitted_at": "2024-04-24T16:24:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
    },
    {
      "event": "reviewed",
      "id": 2034299860,
      "node_id": "PRR_kwDOABII5855QPPU",
      "url": null,
      "actor": null,
      "commit_id": "5d722bbd53308c0988c13056fd0472e83226fbb6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I'm not completely sure about 584e524eb57444d7192df1049cafde9ccc480406. The commit description says \r\n\r\n> Originally these tests verified that at a SelectCoins level that a\r\n> solution with fewer inputs gets preferred at high feerates, and a\r\n> solution with more inputs gets preferred at low feerates. This outcome\r\n> relies on the behavior of BnB, so we move these tests under the umbrella\r\n> of BnB tests.\r\n\r\nIt is true that the outcome relies only on the BnB behavior currently but that might not be true in the future. There could be other algorithm clashing with it.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#pullrequestreview-2034299860",
      "submitted_at": "2024-05-03T15:08:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13319869118,
      "node_id": "HRFPE_lADOABII586BAJQqzwAAAAMZ7RK-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13319869118",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "504873c777b4b3ebf9670824f31331fadb522511",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/504873c777b4b3ebf9670824f31331fadb522511",
      "created_at": "2024-06-27T15:57:53Z"
    },
    {
      "event": "reviewed",
      "id": 2145862711,
      "node_id": "PRR_kwDOABII585_50Q3",
      "url": null,
      "actor": null,
      "commit_id": "504873c777b4b3ebf9670824f31331fadb522511",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#pullrequestreview-2145862711",
      "submitted_at": "2024-06-27T17:06:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13320926777,
      "node_id": "HRFPE_lADOABII586BAJQqzwAAAAMZ_TY5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13320926777",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0bece89cd11f70523179beecb26fa0fa2e8659c2",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/0bece89cd11f70523179beecb26fa0fa2e8659c2",
      "created_at": "2024-06-27T17:29:27Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13320990719,
      "node_id": "HRFPE_lADOABII586BAJQqzwAAAAMZ_i__",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13320990719",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cbeb10b4790233da65eb9978ba37d067e7201dba",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/cbeb10b4790233da65eb9978ba37d067e7201dba",
      "created_at": "2024-06-27T17:35:24Z"
    },
    {
      "event": "commented",
      "id": 2195289826,
      "node_id": "IC_kwDOABII586C2Xbi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2195289826",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-27T17:36:33Z",
      "updated_at": "2024-06-27T17:36:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "Alright, should hopefully be ready to review.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#issuecomment-2195289826",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29532"
    },
    {
      "event": "commented",
      "id": 2195301224,
      "node_id": "IC_kwDOABII586C2aNo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2195301224",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-27T17:44:18Z",
      "updated_at": "2024-06-27T17:44:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I'm not completely sure about [584e524](https://github.com/bitcoin/bitcoin/commit/584e524eb57444d7192df1049cafde9ccc480406). The commit description says\r\n> \r\n> > Originally these tests verified that at a SelectCoins level that a\r\n> > solution with fewer inputs gets preferred at high feerates, and a\r\n> > solution with more inputs gets preferred at low feerates. This outcome\r\n> > relies on the behavior of BnB, so we move these tests under the umbrella\r\n> > of BnB tests.\r\n> \r\n> It is true that the outcome relies only on the BnB behavior currently but that might not be true in the future. There could be other algorithm clashing with it.\r\n\r\nYeah, so the old tests assumed that because BnB behaved a certain way, we would get a specific overall outcome. The new tests just check that BnB behaves a certain way. We might still want tests that test the overall outcome as a result from the interaction of multiple coin selection tests, but this one seemed clearly to be testing BnB behavior, and it seemed strange to me to be testing that at the level where the results are combined rather than checking that BnB assumptions are fulfilled by BnB.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#issuecomment-2195301224",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29532"
    },
    {
      "event": "labeled",
      "id": 13909006731,
      "node_id": "LE_lADOABII586BAJQqzwAAAAM9CpmL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13909006731",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-16T10:12:07Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "labeled",
      "id": 13909006747,
      "node_id": "LE_lADOABII586BAJQqzwAAAAM9Cpmb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13909006747",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-16T10:12:07Z",
      "label": {
        "name": "Needs CMake port",
        "color": "0e8a16"
      }
    },
    {
      "event": "labeled",
      "id": 14107547657,
      "node_id": "LE_lADOABII586BAJQqzwAAAANI4BgJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14107547657",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T22:45:11Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 14109724218,
      "node_id": "UNLE_lADOABII586BAJQqzwAAAANJAU46",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14109724218",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-03T06:15:39Z",
      "label": {
        "name": "Needs CMake port",
        "color": "0e8a16"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14205365792,
      "node_id": "HRFPE_lADOABII586BAJQqzwAAAANOtK4g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14205365792",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "131bbd11202829d9ca7946059aab488c10726369",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/131bbd11202829d9ca7946059aab488c10726369",
      "created_at": "2024-09-10T20:32:49Z"
    },
    {
      "event": "unlabeled",
      "id": 14206600939,
      "node_id": "UNLE_lADOABII586BAJQqzwAAAANOx4br",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14206600939",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-10T22:23:13Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2343448900,
      "node_id": "IC_kwDOABII586LrjFE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2343448900",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-11T11:47:53Z",
      "updated_at": "2024-09-11T11:47:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/29957535397</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#issuecomment-2343448900",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29532"
    },
    {
      "event": "labeled",
      "id": 14214761493,
      "node_id": "LE_lADOABII586BAJQqzwAAAANPRAwV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14214761493",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-11T11:47:53Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14222113671,
      "node_id": "HRFPE_lADOABII586BAJQqzwAAAANPtDuH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14222113671",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "639a0dd520d747a189a9d874d2a2888fb8b553f2",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/639a0dd520d747a189a9d874d2a2888fb8b553f2",
      "created_at": "2024-09-11T19:48:54Z"
    },
    {
      "event": "unlabeled",
      "id": 14263047497,
      "node_id": "UNLE_lADOABII586BAJQqzwAAAANSJNVJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14263047497",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-15T12:35:24Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2320873807,
      "node_id": "PRR_kwDOABII586KVblP",
      "url": null,
      "actor": null,
      "commit_id": "639a0dd520d747a189a9d874d2a2888fb8b553f2",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#pullrequestreview-2320873807",
      "submitted_at": "2024-09-22T15:13:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
    },
    {
      "event": "reviewed",
      "id": 2393479212,
      "node_id": "PRR_kwDOABII586OqZgs",
      "url": null,
      "actor": null,
      "commit_id": "639a0dd520d747a189a9d874d2a2888fb8b553f2",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "nit: I have read the test and I don't have any code related comment yet, but I have noticed that some of the commits are structured with some not written conventions and beside the actual comments about commit message quality in the `CONTRIBUTIONS.md` file, there are some other conventions used by other contributors too, in a similar fashion to [conventional commits](https://www.conventionalcommits.org/en/v1.0.0/) with (`wallet:`, `ci:`, `rpc:`). In that spirit, wouldn't be a good idea to, in case there needs to be a change in some of the commits, to change from `[test]` to `test:` or `coinselection:` to scope the commits a little bit more and move towards a common format? Also, do you think is worth to add these conventions to the `CONTRIBUTIONS.md` file?",
      "user": {
        "login": "nymius",
        "id": 155548262,
        "node_id": "U_kgDOCUV6Zg",
        "avatar_url": "https://avatars.githubusercontent.com/u/155548262?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nymius",
        "html_url": "https://github.com/nymius",
        "followers_url": "https://api.github.com/users/nymius/followers",
        "following_url": "https://api.github.com/users/nymius/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nymius/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nymius/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nymius/subscriptions",
        "organizations_url": "https://api.github.com/users/nymius/orgs",
        "repos_url": "https://api.github.com/users/nymius/repos",
        "events_url": "https://api.github.com/users/nymius/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nymius/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#pullrequestreview-2393479212",
      "submitted_at": "2024-10-24T18:51:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
    },
    {
      "event": "reviewed",
      "id": 2393821836,
      "node_id": "PRR_kwDOABII586OrtKM",
      "url": null,
      "actor": null,
      "commit_id": "639a0dd520d747a189a9d874d2a2888fb8b553f2",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "jasonribble",
        "id": 80722374,
        "node_id": "MDQ6VXNlcjgwNzIyMzc0",
        "avatar_url": "https://avatars.githubusercontent.com/u/80722374?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonribble",
        "html_url": "https://github.com/jasonribble",
        "followers_url": "https://api.github.com/users/jasonribble/followers",
        "following_url": "https://api.github.com/users/jasonribble/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonribble/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonribble/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonribble/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonribble/orgs",
        "repos_url": "https://api.github.com/users/jasonribble/repos",
        "events_url": "https://api.github.com/users/jasonribble/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonribble/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#pullrequestreview-2393821836",
      "submitted_at": "2024-10-24T22:28:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
    },
    {
      "event": "reviewed",
      "id": 2399754338,
      "node_id": "PRR_kwDOABII586PCVhi",
      "url": null,
      "actor": null,
      "commit_id": "639a0dd520d747a189a9d874d2a2888fb8b553f2",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "vicariousdrama",
        "id": 88121568,
        "node_id": "MDQ6VXNlcjg4MTIxNTY4",
        "avatar_url": "https://avatars.githubusercontent.com/u/88121568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vicariousdrama",
        "html_url": "https://github.com/vicariousdrama",
        "followers_url": "https://api.github.com/users/vicariousdrama/followers",
        "following_url": "https://api.github.com/users/vicariousdrama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vicariousdrama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vicariousdrama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vicariousdrama/subscriptions",
        "organizations_url": "https://api.github.com/users/vicariousdrama/orgs",
        "repos_url": "https://api.github.com/users/vicariousdrama/repos",
        "events_url": "https://api.github.com/users/vicariousdrama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vicariousdrama/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#pullrequestreview-2399754338",
      "submitted_at": "2024-10-28T18:59:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15045022157,
      "node_id": "HRFPE_lADOABII586BAJQqzwAAAAOAwNHN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15045022157",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "280e65d3a7993ea38ba49ae00133a7ba709c193e",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/280e65d3a7993ea38ba49ae00133a7ba709c193e",
      "created_at": "2024-10-31T19:07:39Z"
    },
    {
      "event": "reviewed",
      "id": 2408805041,
      "node_id": "PRR_kwDOABII586Pk3Kx",
      "url": null,
      "actor": null,
      "commit_id": "280e65d3a7993ea38ba49ae00133a7ba709c193e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks @furszy, @nymius, @jasonribble, and @vicariousdrama for the review!\r\nI updated the commit message names as suggested, adopted all of your proposed changes as indicated, and added more explanation to the test covering the attempt limit.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#pullrequestreview-2408805041",
      "submitted_at": "2024-10-31T19:11:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
    },
    {
      "event": "commented",
      "id": 2450644019,
      "node_id": "IC_kwDOABII586SEdwz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2450644019",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-31T19:16:36Z",
      "updated_at": "2024-10-31T19:16:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Also, do you think is worth to add these conventions to the `CONTRIBUTIONS.md` file?\r\n\r\nI don’t know! It would be a good thing to ask in the IRC channel or at the weekly meeting. :)",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#issuecomment-2450644019",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29532"
    },
    {
      "event": "commented",
      "id": 2452512182,
      "node_id": "IC_kwDOABII586SLl22",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2452512182",
      "actor": {
        "login": "jasonribble",
        "id": 80722374,
        "node_id": "MDQ6VXNlcjgwNzIyMzc0",
        "avatar_url": "https://avatars.githubusercontent.com/u/80722374?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonribble",
        "html_url": "https://github.com/jasonribble",
        "followers_url": "https://api.github.com/users/jasonribble/followers",
        "following_url": "https://api.github.com/users/jasonribble/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonribble/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonribble/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonribble/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonribble/orgs",
        "repos_url": "https://api.github.com/users/jasonribble/repos",
        "events_url": "https://api.github.com/users/jasonribble/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonribble/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-01T20:03:39Z",
      "updated_at": "2024-11-01T20:03:39Z",
      "author_association": "NONE",
      "body": "So C++ noob question. Not sure if this is an appropriate place to ask.\r\n\r\nI'm noticing that you're calling `CFeeRate` with an `int`: \r\nhttps://github.com/bitcoin/bitcoin/blob/280e65d3a7993ea38ba49ae00133a7ba709c193e/src/wallet/test/coinselection_tests.cpp#L20-L38\r\n\r\nOkay that's cool, clearly it compiles and runs...but how?\r\n\r\nsrc/policy/feerate.h has the `class` definition. I don't see how it's able to only take an `int`\r\n\r\nThis is my best bet of how it works\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/746f88000e8b219b1318839ca1cd7fd9f2057793/src/policy/feerate.h#L38-L43\r\n\r\nit's using `std::integral`, maybe doing some weird magic I didn't know we had. But, I don't see `#include <concepts>`. \r\n\r\nBtw, this curiosity all started because my editor highlighted this error\r\n\r\n```\r\nno instance of constructor \"CFeeRate::CFeeRate\" matches the argument listC/C++(289)\r\n```\r\n\r\nThen in src/policy/feerate.h it the IDE says \r\n\r\n`namespace \"std\" has no member \"integral\"C/C++(135)`\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/746f88000e8b219b1318839ca1cd7fd9f2057793/src/policy/feerate.h#L38-L76\r\n\r\nI see that it does compile but where does `CFeeRate` get constructed with only an `int`?",
      "user": {
        "login": "jasonribble",
        "id": 80722374,
        "node_id": "MDQ6VXNlcjgwNzIyMzc0",
        "avatar_url": "https://avatars.githubusercontent.com/u/80722374?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonribble",
        "html_url": "https://github.com/jasonribble",
        "followers_url": "https://api.github.com/users/jasonribble/followers",
        "following_url": "https://api.github.com/users/jasonribble/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonribble/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonribble/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonribble/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonribble/orgs",
        "repos_url": "https://api.github.com/users/jasonribble/repos",
        "events_url": "https://api.github.com/users/jasonribble/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonribble/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#issuecomment-2452512182",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29532"
    },
    {
      "event": "commented",
      "id": 2452516136,
      "node_id": "IC_kwDOABII586SLm0o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2452516136",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-01T20:06:43Z",
      "updated_at": "2024-11-01T20:06:43Z",
      "author_association": "MEMBER",
      "body": "@jasonribble `template<std::integral I>` is the same as `template<typename I>`, with the added restriction that `I` must be a type that satisfies the `std::integral` concept. Since `int` does satisfy that concept, `I` can be instantiated as `int`.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#issuecomment-2452516136",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29532"
    },
    {
      "event": "mentioned",
      "id": 15074374094,
      "node_id": "MEE_lADOABII586BAJQqzwAAAAOCgLHO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15074374094",
      "actor": {
        "login": "jasonribble",
        "id": 80722374,
        "node_id": "MDQ6VXNlcjgwNzIyMzc0",
        "avatar_url": "https://avatars.githubusercontent.com/u/80722374?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonribble",
        "html_url": "https://github.com/jasonribble",
        "followers_url": "https://api.github.com/users/jasonribble/followers",
        "following_url": "https://api.github.com/users/jasonribble/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonribble/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonribble/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonribble/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonribble/orgs",
        "repos_url": "https://api.github.com/users/jasonribble/repos",
        "events_url": "https://api.github.com/users/jasonribble/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonribble/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-01T20:06:45Z"
    },
    {
      "event": "subscribed",
      "id": 15074374105,
      "node_id": "SE_lADOABII586BAJQqzwAAAAOCgLHZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15074374105",
      "actor": {
        "login": "jasonribble",
        "id": 80722374,
        "node_id": "MDQ6VXNlcjgwNzIyMzc0",
        "avatar_url": "https://avatars.githubusercontent.com/u/80722374?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonribble",
        "html_url": "https://github.com/jasonribble",
        "followers_url": "https://api.github.com/users/jasonribble/followers",
        "following_url": "https://api.github.com/users/jasonribble/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonribble/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonribble/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonribble/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonribble/orgs",
        "repos_url": "https://api.github.com/users/jasonribble/repos",
        "events_url": "https://api.github.com/users/jasonribble/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonribble/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-01T20:06:45Z"
    },
    {
      "event": "commented",
      "id": 2452535019,
      "node_id": "IC_kwDOABII586SLrbr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2452535019",
      "actor": {
        "login": "jasonribble",
        "id": 80722374,
        "node_id": "MDQ6VXNlcjgwNzIyMzc0",
        "avatar_url": "https://avatars.githubusercontent.com/u/80722374?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonribble",
        "html_url": "https://github.com/jasonribble",
        "followers_url": "https://api.github.com/users/jasonribble/followers",
        "following_url": "https://api.github.com/users/jasonribble/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonribble/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonribble/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonribble/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonribble/orgs",
        "repos_url": "https://api.github.com/users/jasonribble/repos",
        "events_url": "https://api.github.com/users/jasonribble/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonribble/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-01T20:21:25Z",
      "updated_at": "2024-11-01T20:21:25Z",
      "author_association": "NONE",
      "body": "> @jasonribble `template<std::integral I>` is the same as `template<typename I>`, with the added restriction that `I` must be a type that satisfies the `std::integral` concept. Since `int` does satisfy that concept, `I` can be instantiated as `int`.\r\n\r\nMagical. Thank you 🙏",
      "user": {
        "login": "jasonribble",
        "id": 80722374,
        "node_id": "MDQ6VXNlcjgwNzIyMzc0",
        "avatar_url": "https://avatars.githubusercontent.com/u/80722374?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonribble",
        "html_url": "https://github.com/jasonribble",
        "followers_url": "https://api.github.com/users/jasonribble/followers",
        "following_url": "https://api.github.com/users/jasonribble/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonribble/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonribble/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonribble/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonribble/orgs",
        "repos_url": "https://api.github.com/users/jasonribble/repos",
        "events_url": "https://api.github.com/users/jasonribble/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonribble/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#issuecomment-2452535019",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29532"
    },
    {
      "event": "mentioned",
      "id": 15074496115,
      "node_id": "MEE_lADOABII586BAJQqzwAAAAOCgo5z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15074496115",
      "actor": {
        "login": "jasonribble",
        "id": 80722374,
        "node_id": "MDQ6VXNlcjgwNzIyMzc0",
        "avatar_url": "https://avatars.githubusercontent.com/u/80722374?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonribble",
        "html_url": "https://github.com/jasonribble",
        "followers_url": "https://api.github.com/users/jasonribble/followers",
        "following_url": "https://api.github.com/users/jasonribble/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonribble/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonribble/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonribble/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonribble/orgs",
        "repos_url": "https://api.github.com/users/jasonribble/repos",
        "events_url": "https://api.github.com/users/jasonribble/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonribble/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-01T20:21:26Z"
    },
    {
      "event": "subscribed",
      "id": 15074496126,
      "node_id": "SE_lADOABII586BAJQqzwAAAAOCgo5-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15074496126",
      "actor": {
        "login": "jasonribble",
        "id": 80722374,
        "node_id": "MDQ6VXNlcjgwNzIyMzc0",
        "avatar_url": "https://avatars.githubusercontent.com/u/80722374?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonribble",
        "html_url": "https://github.com/jasonribble",
        "followers_url": "https://api.github.com/users/jasonribble/followers",
        "following_url": "https://api.github.com/users/jasonribble/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonribble/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonribble/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonribble/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonribble/orgs",
        "repos_url": "https://api.github.com/users/jasonribble/repos",
        "events_url": "https://api.github.com/users/jasonribble/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonribble/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-01T20:21:26Z"
    },
    {
      "event": "commented",
      "id": 2452537469,
      "node_id": "IC_kwDOABII586SLsB9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2452537469",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-01T20:23:26Z",
      "updated_at": "2024-11-01T20:24:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "> But, I don't see #include \\<concepts\\>.\r\n\r\nIf you check the IWYU logs in the \"tidy\" CI job you will see that it is indeed missing:\r\n```\r\n[19:28:01.280] /ci_container_base/src/policy/feerate.h should add these lines:\r\n[19:28:01.280] #include <concepts>            // for integral\r\n```\r\nThis report is generated on each CI run, but the missing includes are not enforced. This can be confusing, so best to always check the CI output.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#issuecomment-2452537469",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29532"
    },
    {
      "event": "commented",
      "id": 2452765858,
      "node_id": "IC_kwDOABII586SMjyi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2452765858",
      "actor": {
        "login": "jasonribble",
        "id": 80722374,
        "node_id": "MDQ6VXNlcjgwNzIyMzc0",
        "avatar_url": "https://avatars.githubusercontent.com/u/80722374?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonribble",
        "html_url": "https://github.com/jasonribble",
        "followers_url": "https://api.github.com/users/jasonribble/followers",
        "following_url": "https://api.github.com/users/jasonribble/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonribble/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonribble/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonribble/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonribble/orgs",
        "repos_url": "https://api.github.com/users/jasonribble/repos",
        "events_url": "https://api.github.com/users/jasonribble/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonribble/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-02T00:43:12Z",
      "updated_at": "2024-11-02T00:43:12Z",
      "author_association": "NONE",
      "body": "> it is indeed missing\r\n\r\nOh interesting! Well, I guess not in this important for this PR, but perhaps it should be explicit. Especially so people don't get those evil red lines",
      "user": {
        "login": "jasonribble",
        "id": 80722374,
        "node_id": "MDQ6VXNlcjgwNzIyMzc0",
        "avatar_url": "https://avatars.githubusercontent.com/u/80722374?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonribble",
        "html_url": "https://github.com/jasonribble",
        "followers_url": "https://api.github.com/users/jasonribble/followers",
        "following_url": "https://api.github.com/users/jasonribble/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonribble/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonribble/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonribble/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonribble/orgs",
        "repos_url": "https://api.github.com/users/jasonribble/repos",
        "events_url": "https://api.github.com/users/jasonribble/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonribble/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#issuecomment-2452765858",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29532"
    },
    {
      "event": "reviewed",
      "id": 2411753208,
      "node_id": "PRR_kwDOABII586PwG74",
      "url": null,
      "actor": null,
      "commit_id": "280e65d3a7993ea38ba49ae00133a7ba709c193e",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "ACK\r\n\r\nI went through each of the commits. It is an improvement of the branch and bound selection tests. ",
      "user": {
        "login": "jasonribble",
        "id": 80722374,
        "node_id": "MDQ6VXNlcjgwNzIyMzc0",
        "avatar_url": "https://avatars.githubusercontent.com/u/80722374?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonribble",
        "html_url": "https://github.com/jasonribble",
        "followers_url": "https://api.github.com/users/jasonribble/followers",
        "following_url": "https://api.github.com/users/jasonribble/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonribble/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonribble/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonribble/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonribble/orgs",
        "repos_url": "https://api.github.com/users/jasonribble/repos",
        "events_url": "https://api.github.com/users/jasonribble/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonribble/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#pullrequestreview-2411753208",
      "submitted_at": "2024-11-02T23:26:54Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
    },
    {
      "event": "reviewed",
      "id": 2419167788,
      "node_id": "PRR_kwDOABII586QMZIs",
      "url": null,
      "actor": null,
      "commit_id": "280e65d3a7993ea38ba49ae00133a7ba709c193e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#pullrequestreview-2419167788",
      "submitted_at": "2024-11-06T18:53:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
    },
    {
      "event": "reviewed",
      "id": 2425008964,
      "node_id": "PRR_kwDOABII586QirNE",
      "url": null,
      "actor": null,
      "commit_id": "280e65d3a7993ea38ba49ae00133a7ba709c193e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#pullrequestreview-2425008964",
      "submitted_at": "2024-11-08T22:21:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
    },
    {
      "event": "reviewed",
      "id": 2430626593,
      "node_id": "PRR_kwDOABII586Q4Gsh",
      "url": null,
      "actor": null,
      "commit_id": "280e65d3a7993ea38ba49ae00133a7ba709c193e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#pullrequestreview-2430626593",
      "submitted_at": "2024-11-12T21:15:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16499804648,
      "node_id": "HRFPE_lADOABII586BAJQqzwAAAAPXdwno",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16499804648",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2787a4fe98783af58b51903a0e908dfef3e6aefb",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/2787a4fe98783af58b51903a0e908dfef3e6aefb",
      "created_at": "2025-02-27T16:27:08Z"
    },
    {
      "event": "reviewed",
      "id": 2671917036,
      "node_id": "PRR_kwDOABII586fQjfs",
      "url": null,
      "actor": null,
      "commit_id": "2787a4fe98783af58b51903a0e908dfef3e6aefb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#pullrequestreview-2671917036",
      "submitted_at": "2025-03-10T18:51:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
    },
    {
      "event": "reviewed",
      "id": 2672397133,
      "node_id": "PRR_kwDOABII586fSYtN",
      "url": null,
      "actor": null,
      "commit_id": "2787a4fe98783af58b51903a0e908dfef3e6aefb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#pullrequestreview-2672397133",
      "submitted_at": "2025-03-10T23:30:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
    },
    {
      "event": "reviewed",
      "id": 2672397367,
      "node_id": "PRR_kwDOABII586fSYw3",
      "url": null,
      "actor": null,
      "commit_id": "2787a4fe98783af58b51903a0e908dfef3e6aefb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#pullrequestreview-2672397367",
      "submitted_at": "2025-03-10T23:30:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
    },
    {
      "event": "commented",
      "id": 2712097498,
      "node_id": "IC_kwDOABII586hp1La",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2712097498",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-10T23:47:47Z",
      "updated_at": "2025-03-10T23:48:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK to refactor the tests.  `TestBnBSuccess` and `TestBnBFail` are much better and easier to read.  Thanks!\r\n\r\n> non-representative and effectuate counterintuitive behavior such as feerate = 0 or cost_of_change = 0\r\n\r\nI'm still trying to sus out what the tests are doing now that's better than before.  Most of the current tests use a cost_of_change = 0.5 * COIN, for [example](https://github.com/bitcoin/bitcoin/blob/45719390a1434ad7377a5ed05dcd73028130cf2d/src/wallet/test/coinselector_tests.cpp#L203).  I personally added a test five years ago [to test cost_of_change](https://github.com/bitcoin/bitcoin/pull/18195).  Also, there are some that do test with varying feerates [here](https://github.com/bitcoin/bitcoin/blob/45719390a1434ad7377a5ed05dcd73028130cf2d/src/wallet/test/coinselector_tests.cpp#L369) that you replaced.  Although I do agree that every test should have feerate above zero and existing tests have feerate of zero which means that `effective_value == value` which is never the case in practice.",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#issuecomment-2712097498",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29532"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16781531603,
      "node_id": "HRFPE_lADOABII586BAJQqzwAAAAPoQdnT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16781531603",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "644335ac3d5b8ca4a55bd83e9a5bd3154c186639",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/644335ac3d5b8ca4a55bd83e9a5bd3154c186639",
      "created_at": "2025-03-14T22:18:35Z"
    },
    {
      "event": "reviewed",
      "id": 2686906009,
      "node_id": "PRR_kwDOABII586gJu6Z",
      "url": null,
      "actor": null,
      "commit_id": "2787a4fe98783af58b51903a0e908dfef3e6aefb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "> Concept ACK to refactor the tests. `TestBnBSuccess` and `TestBnBFail` are much better and easier to read. Thanks!\r\n\r\nI’m glad to read that.\r\n\r\n> > non-representative and effectuate counterintuitive behavior such as feerate = 0 or cost_of_change = 0\r\n> \r\n> I'm still trying to sus out what the tests are doing now that's better than before. \r\n\r\nFor example, our waste calculation used to assume that `cost_of_change` being zero indicated that the transaction is changeless and any excess should be dropped to fees even when there were enough funds left to create a change output. This can lead to unexpected outcomes when we are comparing two selections with change. We would expect at low feerates the input set with more inputs to be preferred, but instead the selection with the smaller change budget is preferred.\r\n\r\nMy motivation for this PR was that I was debugging issues several times and lost hours due to expecting other outcomes than the ones exhibited in the tests, because setting values to zero that should never be zero leads to all sorts of quirky outcomes. Using values that can actually appear in production makes these tests much easier to follow.\r\n\r\n> Most of the current tests use a cost_of_change = 0.5 * COIN, for [example](https://github.com/bitcoin/bitcoin/blob/45719390a1434ad7377a5ed05dcd73028130cf2d/src/wallet/test/coinselector_tests.cpp#L203).\r\n\r\nThese new tests do not exhibit the behavior you point out. Which commit is this that you are linking to? As mentioned, this is just the first PR of an attempt to completely replace the old tests, to be followed by more refactors if/when this ever gets merged.\r\n\r\n> Also, there are some that do test with varying feerates [here](https://github.com/bitcoin/bitcoin/blob/45719390a1434ad7377a5ed05dcd73028130cf2d/src/wallet/test/coinselector_tests.cpp#L369) that you replaced. \r\n\r\nYes, I believe that these tests have been replaced with new tests that introduce equivalent coverage. Please see the commit \"test: Move BnB feerate sensitivity tests\" and the commit message of the commit.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#pullrequestreview-2686906009",
      "submitted_at": "2025-03-14T22:18:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
    },
    {
      "event": "commented",
      "id": 2725992821,
      "node_id": "IC_kwDOABII586ie1l1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2725992821",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-14T23:21:45Z",
      "updated_at": "2025-03-14T23:21:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Which commit is this that you are linking to?\r\n\r\nThis is master from only a few days ago when I submitted the review feedback.",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#issuecomment-2725992821",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29532"
    },
    {
      "event": "reviewed",
      "id": 2687072947,
      "node_id": "PRR_kwDOABII586gKXqz",
      "url": null,
      "actor": null,
      "commit_id": "29b5efd2a4d132ebadf4ad6ccd3fd82fe779df61",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#pullrequestreview-2687072947",
      "submitted_at": "2025-03-14T23:33:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
    },
    {
      "event": "reviewed",
      "id": 2687076706,
      "node_id": "PRR_kwDOABII586gKYli",
      "url": null,
      "actor": null,
      "commit_id": "327a989b1c22e1a1fc26cba47c64512e1aa3fb32",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#pullrequestreview-2687076706",
      "submitted_at": "2025-03-14T23:38:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
    },
    {
      "event": "reviewed",
      "id": 2687083518,
      "node_id": "PRR_kwDOABII586gKaP-",
      "url": null,
      "actor": null,
      "commit_id": "644335ac3d5b8ca4a55bd83e9a5bd3154c186639",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#pullrequestreview-2687083518",
      "submitted_at": "2025-03-14T23:48:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
    },
    {
      "event": "commented",
      "id": 2726030060,
      "node_id": "IC_kwDOABII586ie-rs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2726030060",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-15T00:00:59Z",
      "updated_at": "2025-03-15T00:00:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "> We would expect at low feerates the input set with more inputs to be preferred, but instead the selection with the smaller change budget is preferred.\r\n\r\nI'm familiar with change_budget as it exists in coin-grinder.  Beyond that, I'm not sure how that ties in to BnB and SRD.\r\n\r\n> Please see the commit \"test: Move BnB feerate sensitivity tests\" and the commit message of the commit.\r\n\r\nI reviewed the commits, and it _appears_ that the test coverage is equivalent.  It might be helpful to document a baseline of what we want to be sure is tested for each algorithm at some point, understanding that extended coverage is handled by fuzz testing/mutation testing/property testing.",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#issuecomment-2726030060",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29532"
    },
    {
      "event": "reviewed",
      "id": 2711509540,
      "node_id": "PRR_kwDOABII586hnlok",
      "url": null,
      "actor": null,
      "commit_id": "644335ac3d5b8ca4a55bd83e9a5bd3154c186639",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#pullrequestreview-2711509540",
      "submitted_at": "2025-03-24T19:40:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16962327229,
      "node_id": "HRFPE_lADOABII586BAJQqzwAAAAPzCJK9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16962327229",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e0f4bd36c0b55d12bba19e153df53994d797de9a",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/e0f4bd36c0b55d12bba19e153df53994d797de9a",
      "created_at": "2025-03-24T20:01:19Z"
    },
    {
      "event": "labeled",
      "id": 16962329488,
      "node_id": "LE_lADOABII586BAJQqzwAAAAPzCJuQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16962329488",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-24T20:01:30Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2749258513,
      "node_id": "IC_kwDOABII586j3lsR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2749258513",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-24T20:01:31Z",
      "updated_at": "2025-03-24T20:01:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/39320450081</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#issuecomment-2749258513",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29532"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16962752569,
      "node_id": "HRFPE_lADOABII586BAJQqzwAAAAPzDxA5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16962752569",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0f39b6b919b7d731f6a372708b9539271aab805e",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/0f39b6b919b7d731f6a372708b9539271aab805e",
      "created_at": "2025-03-24T20:34:19Z"
    },
    {
      "event": "unlabeled",
      "id": 16963981213,
      "node_id": "UNLE_lADOABII586BAJQqzwAAAAPzIc-d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16963981213",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-24T22:22:00Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2730416367,
      "node_id": "PRR_kwDOABII586ivtjv",
      "url": null,
      "actor": null,
      "commit_id": "0f39b6b919b7d731f6a372708b9539271aab805e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#pullrequestreview-2730416367",
      "submitted_at": "2025-03-31T20:19:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17063587709,
      "node_id": "HRFPE_lADOABII586BAJQqzwAAAAP5Ea99",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17063587709",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1fb24c68a13de965f4f99664a5c1d1a4bb6eddc3",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/1fb24c68a13de965f4f99664a5c1d1a4bb6eddc3",
      "created_at": "2025-03-31T20:32:54Z"
    },
    {
      "event": "referenced",
      "id": 17131047269,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9Fwll",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17131047269",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f3c74578ed13c3609c0cd31edb071d50895f86da",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/f3c74578ed13c3609c0cd31edb071d50895f86da",
      "created_at": "2025-04-04T14:15:51Z"
    },
    {
      "event": "referenced",
      "id": 17131078644,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9F4P0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17131078644",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3cb837c78fa1d8078ff89f77d542c0424c062b58",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/3cb837c78fa1d8078ff89f77d542c0424c062b58",
      "created_at": "2025-04-04T14:18:08Z"
    },
    {
      "event": "referenced",
      "id": 17134824823,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9UK13",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17134824823",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7f8271a60e517df4d0555189dd6f698922df3f4d",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/7f8271a60e517df4d0555189dd6f698922df3f4d",
      "created_at": "2025-04-04T19:17:02Z"
    },
    {
      "event": "referenced",
      "id": 17134863591,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9UUTn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17134863591",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "25fc7b8a01ad1b74eee94fd97d2df3a31b607992",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/25fc7b8a01ad1b74eee94fd97d2df3a31b607992",
      "created_at": "2025-04-04T19:21:14Z"
    },
    {
      "event": "referenced",
      "id": 17135008925,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9U3yd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17135008925",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c9f17d0a4bcc0382e860b79f2a322785f5341d66",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/c9f17d0a4bcc0382e860b79f2a322785f5341d66",
      "created_at": "2025-04-04T19:35:54Z"
    },
    {
      "event": "referenced",
      "id": 17135423125,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9Wc6V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17135423125",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ada4dc6f5547736674e0e85f6c759de3fd44347d",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/ada4dc6f5547736674e0e85f6c759de3fd44347d",
      "created_at": "2025-04-04T20:19:32Z"
    },
    {
      "event": "referenced",
      "id": 17139725289,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9m3Pp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17139725289",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e92aa709500d053be825058ff71ee298f2a19b35",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/e92aa709500d053be825058ff71ee298f2a19b35",
      "created_at": "2025-04-05T12:01:32Z"
    },
    {
      "event": "referenced",
      "id": 17139729542,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9m4SG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17139729542",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ffa9b3f1fb07f4b0baa44bbbfa5f90c6a810b438",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/ffa9b3f1fb07f4b0baa44bbbfa5f90c6a810b438",
      "created_at": "2025-04-05T12:03:26Z"
    },
    {
      "event": "referenced",
      "id": 17139779758,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9nEiu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17139779758",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "34acfb0585566b1d3e0734f9c0e723910ff2fe87",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/34acfb0585566b1d3e0734f9c0e723910ff2fe87",
      "created_at": "2025-04-05T12:27:27Z"
    },
    {
      "event": "referenced",
      "id": 17139884457,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9neGp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17139884457",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fe8867ee33c43290ea8e101a730d3bd5c5e90608",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/fe8867ee33c43290ea8e101a730d3bd5c5e90608",
      "created_at": "2025-04-05T13:13:01Z"
    },
    {
      "event": "referenced",
      "id": 17139889342,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9nfS-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17139889342",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e52eaf99a4469a8a7c1dbbb03ce63283739328ed",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/e52eaf99a4469a8a7c1dbbb03ce63283739328ed",
      "created_at": "2025-04-05T13:15:31Z"
    },
    {
      "event": "referenced",
      "id": 17139895185,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9nguR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17139895185",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e87213779f1a690100f68fc1cb2b212d7829467f",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/e87213779f1a690100f68fc1cb2b212d7829467f",
      "created_at": "2025-04-05T13:18:29Z"
    },
    {
      "event": "referenced",
      "id": 17140206586,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9osv6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17140206586",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "44ed25f8930d43ec725527633d501b471db57804",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/44ed25f8930d43ec725527633d501b471db57804",
      "created_at": "2025-04-05T15:00:17Z"
    },
    {
      "event": "referenced",
      "id": 17140253437,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9o4L9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17140253437",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c474a99a31263e9a3a64335851bce5b5747ee6e8",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/c474a99a31263e9a3a64335851bce5b5747ee6e8",
      "created_at": "2025-04-05T15:12:42Z"
    },
    {
      "event": "referenced",
      "id": 17140275124,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9o9e0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17140275124",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c86b45ec3c225d369041f1ab337f26b2ad77f500",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/c86b45ec3c225d369041f1ab337f26b2ad77f500",
      "created_at": "2025-04-05T15:22:57Z"
    },
    {
      "event": "referenced",
      "id": 17140695308,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9qkEM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17140695308",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cb6973beadd7a6fe52fb0f67747d3476ebf7dbbf",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/cb6973beadd7a6fe52fb0f67747d3476ebf7dbbf",
      "created_at": "2025-04-05T16:54:36Z"
    },
    {
      "event": "referenced",
      "id": 17140708829,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9qnXd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17140708829",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "11c984d81b3af1bfa2fa1f0bdc753c43ea709780",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/11c984d81b3af1bfa2fa1f0bdc753c43ea709780",
      "created_at": "2025-04-05T16:58:11Z"
    },
    {
      "event": "referenced",
      "id": 17140717585,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9qpgR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17140717585",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8fdf264412f97256390eba2512c5282ca0bfeebc",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/8fdf264412f97256390eba2512c5282ca0bfeebc",
      "created_at": "2025-04-05T17:00:14Z"
    },
    {
      "event": "referenced",
      "id": 17140725741,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9qrft",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17140725741",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0734ae9ef86cea2beb9695e9302641668cb68ffe",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/0734ae9ef86cea2beb9695e9302641668cb68ffe",
      "created_at": "2025-04-05T17:03:52Z"
    },
    {
      "event": "referenced",
      "id": 17140734157,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9qtjN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17140734157",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "faccbb23e4270f6e99da2a7bf2e7ea5830a0b22e",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/faccbb23e4270f6e99da2a7bf2e7ea5830a0b22e",
      "created_at": "2025-04-05T17:07:24Z"
    },
    {
      "event": "referenced",
      "id": 17140948846,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9rh9u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17140948846",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "915b200b7384599b8454d5b841b80c5085bc6e32",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/915b200b7384599b8454d5b841b80c5085bc6e32",
      "created_at": "2025-04-05T18:01:43Z"
    },
    {
      "event": "referenced",
      "id": 17140984376,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9rqo4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17140984376",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fe661d4fed288f3aef23bacf62db965c5059b93b",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/fe661d4fed288f3aef23bacf62db965c5059b93b",
      "created_at": "2025-04-05T18:16:09Z"
    },
    {
      "event": "referenced",
      "id": 17140995888,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9rtcw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17140995888",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e4812122f80805398d5a1479ec1d6f2cf85c5dc0",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/e4812122f80805398d5a1479ec1d6f2cf85c5dc0",
      "created_at": "2025-04-05T18:21:21Z"
    },
    {
      "event": "referenced",
      "id": 17141004531,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9rvjz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17141004531",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4edcdf04bf33940a53625e1d774369f8610fc361",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/4edcdf04bf33940a53625e1d774369f8610fc361",
      "created_at": "2025-04-05T18:25:20Z"
    },
    {
      "event": "referenced",
      "id": 17141019039,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9rzGf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17141019039",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7645727e7ce2cc3699d27f28f04f61300726086c",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/7645727e7ce2cc3699d27f28f04f61300726086c",
      "created_at": "2025-04-05T18:32:22Z"
    },
    {
      "event": "referenced",
      "id": 17141050328,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9r6vY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17141050328",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2fc202628ae2c812c4aece725f26191d82e207f8",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/2fc202628ae2c812c4aece725f26191d82e207f8",
      "created_at": "2025-04-05T18:47:19Z"
    },
    {
      "event": "referenced",
      "id": 17141065713,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9r-fx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17141065713",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0a2dc99f03811c40b906b1af74c5ec8dd977ad7a",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/0a2dc99f03811c40b906b1af74c5ec8dd977ad7a",
      "created_at": "2025-04-05T18:54:15Z"
    },
    {
      "event": "referenced",
      "id": 17142950029,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9zKiN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17142950029",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7327327fe375b6a1c9f3116e6731b9802236dcaf",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/7327327fe375b6a1c9f3116e6731b9802236dcaf",
      "created_at": "2025-04-06T11:30:55Z"
    },
    {
      "event": "referenced",
      "id": 17142953529,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9zLY5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17142953529",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "26b576d724141b55a1e1be14457d0a6e7e69689d",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/26b576d724141b55a1e1be14457d0a6e7e69689d",
      "created_at": "2025-04-06T11:32:26Z"
    },
    {
      "event": "referenced",
      "id": 17142967525,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9zOzl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17142967525",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2066bbb55a1cee037954c21cda45e1e31ab49ebf",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/2066bbb55a1cee037954c21cda45e1e31ab49ebf",
      "created_at": "2025-04-06T11:38:33Z"
    },
    {
      "event": "referenced",
      "id": 17142980657,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9zSAx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17142980657",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b2fff77f3dd0d8c20970a19d7dabb28831f4ed32",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/b2fff77f3dd0d8c20970a19d7dabb28831f4ed32",
      "created_at": "2025-04-06T11:44:51Z"
    },
    {
      "event": "referenced",
      "id": 17142991764,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9zUuU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17142991764",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c2976ec6ef3c33abb779d5f08f6efb653e9c45e2",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/c2976ec6ef3c33abb779d5f08f6efb653e9c45e2",
      "created_at": "2025-04-06T11:49:58Z"
    },
    {
      "event": "referenced",
      "id": 17142998230,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9zWTW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17142998230",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "06e641dc784d9f86e819815ff460721de70bafd3",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/06e641dc784d9f86e819815ff460721de70bafd3",
      "created_at": "2025-04-06T11:53:04Z"
    },
    {
      "event": "referenced",
      "id": 17143002667,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9zXYr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17143002667",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1a1fb6cac68010a2816fe0613a0e30430468c1f8",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/1a1fb6cac68010a2816fe0613a0e30430468c1f8",
      "created_at": "2025-04-06T11:55:04Z"
    },
    {
      "event": "referenced",
      "id": 17143012920,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9zZ44",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17143012920",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c54f2afad044c7cc1bbfc93cb2118747ba4123ef",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/c54f2afad044c7cc1bbfc93cb2118747ba4123ef",
      "created_at": "2025-04-06T11:59:35Z"
    },
    {
      "event": "referenced",
      "id": 17143021214,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9zb6e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17143021214",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "54d2aff1c9e14afb854b6944498c211b0eb8b80e",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/54d2aff1c9e14afb854b6944498c211b0eb8b80e",
      "created_at": "2025-04-06T12:02:41Z"
    },
    {
      "event": "referenced",
      "id": 17143036017,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9zfhx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17143036017",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7ae6424a8bbc9c7c48c6a95988cd1b8eca961f13",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/7ae6424a8bbc9c7c48c6a95988cd1b8eca961f13",
      "created_at": "2025-04-06T12:08:27Z"
    },
    {
      "event": "referenced",
      "id": 17143110988,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP9zx1M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17143110988",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "bd1d3a49f57f9d093120efc4a371c9e754e7a1ad",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/bd1d3a49f57f9d093120efc4a371c9e754e7a1ad",
      "created_at": "2025-04-06T12:39:35Z"
    },
    {
      "event": "referenced",
      "id": 17153644819,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP-b9kT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17153644819",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d4f6e2601cc3ad9eabaa1a91b19fa901eb52c6b9",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/d4f6e2601cc3ad9eabaa1a91b19fa901eb52c6b9",
      "created_at": "2025-04-07T13:20:25Z"
    },
    {
      "event": "referenced",
      "id": 17169412011,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP_YG-r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17169412011",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "87e8fccd7fe1a81598f88ce19691bd8a50fce7b6",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/87e8fccd7fe1a81598f88ce19691bd8a50fce7b6",
      "created_at": "2025-04-08T11:39:15Z"
    },
    {
      "event": "referenced",
      "id": 17169477662,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP_YXAe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17169477662",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2decd06fc1b55e2c81917e468affa14ea06a5e2d",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/2decd06fc1b55e2c81917e468affa14ea06a5e2d",
      "created_at": "2025-04-08T11:44:08Z"
    },
    {
      "event": "referenced",
      "id": 17169527882,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP_YjRK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17169527882",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "92a9e9fac043ae101f2123822b76ff615b74cf3f",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/92a9e9fac043ae101f2123822b76ff615b74cf3f",
      "created_at": "2025-04-08T11:47:47Z"
    },
    {
      "event": "referenced",
      "id": 17169561678,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP_YrhO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17169561678",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a0c8a14a39f0fa707763d4fc9551cd2eb628abf1",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/a0c8a14a39f0fa707763d4fc9551cd2eb628abf1",
      "created_at": "2025-04-08T11:50:08Z"
    },
    {
      "event": "referenced",
      "id": 17169778319,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAP_ZgaP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17169778319",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6e78d745ffaeb860bfcff4face359c1d95550522",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/6e78d745ffaeb860bfcff4face359c1d95550522",
      "created_at": "2025-04-08T12:04:47Z"
    },
    {
      "event": "referenced",
      "id": 17188185292,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAQAfuTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17188185292",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "707e4c6b70be569826aeb046ea20566da2ad8aaa",
      "commit_url": "https://api.github.com/repos/yancyribbens/rust-bitcoin-coin-selection/commits/707e4c6b70be569826aeb046ea20566da2ad8aaa",
      "created_at": "2025-04-09T11:56:03Z"
    },
    {
      "event": "referenced",
      "id": 17205074231,
      "node_id": "REFE_lADOABII586BAJQqzwAAAAQBgJk3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17205074231",
      "actor": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "93ed143f12f1ee62adf5cdcadbacfb5d132ab463",
      "commit_url": "https://api.github.com/repos/p2pderivatives/rust-bitcoin-coin-selection/commits/93ed143f12f1ee62adf5cdcadbacfb5d132ab463",
      "created_at": "2025-04-10T12:02:12Z"
    },
    {
      "event": "commented",
      "id": 2810340079,
      "node_id": "IC_kwDOABII586ngmLv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2810340079",
      "actor": {
        "login": "monlovesmango",
        "id": 96307647,
        "node_id": "U_kgDOBb2Jvw",
        "avatar_url": "https://avatars.githubusercontent.com/u/96307647?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/monlovesmango",
        "html_url": "https://github.com/monlovesmango",
        "followers_url": "https://api.github.com/users/monlovesmango/followers",
        "following_url": "https://api.github.com/users/monlovesmango/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/monlovesmango/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/monlovesmango/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/monlovesmango/subscriptions",
        "organizations_url": "https://api.github.com/users/monlovesmango/orgs",
        "repos_url": "https://api.github.com/users/monlovesmango/repos",
        "events_url": "https://api.github.com/users/monlovesmango/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/monlovesmango/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-16T18:09:45Z",
      "updated_at": "2025-04-16T18:09:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "As discussed during Bitcoin Core Review Club, at least one test with 0 fee rate should probably be added to avoid test coverage regression.\r\n\r\nThanks for hosting Murch!",
      "user": {
        "login": "monlovesmango",
        "id": 96307647,
        "node_id": "U_kgDOBb2Jvw",
        "avatar_url": "https://avatars.githubusercontent.com/u/96307647?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/monlovesmango",
        "html_url": "https://github.com/monlovesmango",
        "followers_url": "https://api.github.com/users/monlovesmango/followers",
        "following_url": "https://api.github.com/users/monlovesmango/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/monlovesmango/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/monlovesmango/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/monlovesmango/subscriptions",
        "organizations_url": "https://api.github.com/users/monlovesmango/orgs",
        "repos_url": "https://api.github.com/users/monlovesmango/repos",
        "events_url": "https://api.github.com/users/monlovesmango/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/monlovesmango/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#issuecomment-2810340079",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29532"
    },
    {
      "event": "reviewed",
      "id": 2774220883,
      "node_id": "PRR_kwDOABII586lW0BT",
      "url": null,
      "actor": null,
      "commit_id": "1fb24c68a13de965f4f99664a5c1d1a4bb6eddc3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#pullrequestreview-2774220883",
      "submitted_at": "2025-04-17T00:46:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
    },
    {
      "event": "reviewed",
      "id": 2774237655,
      "node_id": "PRR_kwDOABII586lW4HX",
      "url": null,
      "actor": null,
      "commit_id": "1fb24c68a13de965f4f99664a5c1d1a4bb6eddc3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "nit: Perhaps the commit descriptions (\"BnB rate sensitivity tests\", \"simple BnB failure tests\", and \"BnB iteration exhaustion test\", for example) could become functions for clarity (not necessarily new test cases).",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#pullrequestreview-2774237655",
      "submitted_at": "2025-04-17T00:50:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
    },
    {
      "event": "reviewed",
      "id": 2774238544,
      "node_id": "PRR_kwDOABII586lW4VQ",
      "url": null,
      "actor": null,
      "commit_id": "1fb24c68a13de965f4f99664a5c1d1a4bb6eddc3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "nit: Some commits can be squashed to avoid warnings like \"unused function\".",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#pullrequestreview-2774238544",
      "submitted_at": "2025-04-17T00:51:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
    },
    {
      "event": "commented",
      "id": 2837277525,
      "node_id": "IC_kwDOABII586pHWtV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2837277525",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-29T02:30:06Z",
      "updated_at": "2025-04-29T02:30:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "> nit: Perhaps the commit descriptions (\"BnB rate sensitivity tests\", \"simple BnB failure tests\", and \"BnB iteration exhaustion test\", for example) could become functions for clarity (not necessarily new test cases).\r\n\r\nI’m not sure I understand what you mean. Do you mean that I introduce helper functions like \"TestBnBSuccess\" for the new tests instead of making them their own test cases?",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#issuecomment-2837277525",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29532"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17447085297,
      "node_id": "HRFPE_lADOABII586BAJQqzwAAAAQP7WTx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17447085297",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a4a42d322a4f438fe6f4e6de196f82178874dd6f",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/a4a42d322a4f438fe6f4e6de196f82178874dd6f",
      "created_at": "2025-04-29T03:53:16Z"
    },
    {
      "event": "commented",
      "id": 2837376769,
      "node_id": "IC_kwDOABII586pHu8B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2837376769",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-29T03:55:20Z",
      "updated_at": "2025-04-29T03:55:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "> nit: Some commits can be squashed to avoid warnings like \"unused function\".\r\n\r\n@w0xlt: I ran each commit, and I did not receive this warning. Could you let me know which commit resulted in that warning for you?\r\n\r\n\r\n\r\n> As discussed during Bitcoin Core Review Club, at least one test with 0 fee rate should probably be added to avoid test coverage regression.\r\n\r\n@monlovesmango: I added another commit to run the simple tests at various feerates, including the feerates 0 sat/kvB, 1 sat/kvB, and 1,500,000 sat/kvB.\r\n",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#issuecomment-2837376769",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29532"
    },
    {
      "event": "mentioned",
      "id": 17447102844,
      "node_id": "MEE_lADOABII586BAJQqzwAAAAQP7al8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17447102844",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-29T03:55:21Z"
    },
    {
      "event": "subscribed",
      "id": 17447102856,
      "node_id": "SE_lADOABII586BAJQqzwAAAAQP7amI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17447102856",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-29T03:55:21Z"
    },
    {
      "event": "mentioned",
      "id": 17447102865,
      "node_id": "MEE_lADOABII586BAJQqzwAAAAQP7amR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17447102865",
      "actor": {
        "login": "monlovesmango",
        "id": 96307647,
        "node_id": "U_kgDOBb2Jvw",
        "avatar_url": "https://avatars.githubusercontent.com/u/96307647?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/monlovesmango",
        "html_url": "https://github.com/monlovesmango",
        "followers_url": "https://api.github.com/users/monlovesmango/followers",
        "following_url": "https://api.github.com/users/monlovesmango/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/monlovesmango/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/monlovesmango/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/monlovesmango/subscriptions",
        "organizations_url": "https://api.github.com/users/monlovesmango/orgs",
        "repos_url": "https://api.github.com/users/monlovesmango/repos",
        "events_url": "https://api.github.com/users/monlovesmango/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/monlovesmango/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-29T03:55:21Z"
    },
    {
      "event": "subscribed",
      "id": 17447102872,
      "node_id": "SE_lADOABII586BAJQqzwAAAAQP7amY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17447102872",
      "actor": {
        "login": "monlovesmango",
        "id": 96307647,
        "node_id": "U_kgDOBb2Jvw",
        "avatar_url": "https://avatars.githubusercontent.com/u/96307647?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/monlovesmango",
        "html_url": "https://github.com/monlovesmango",
        "followers_url": "https://api.github.com/users/monlovesmango/followers",
        "following_url": "https://api.github.com/users/monlovesmango/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/monlovesmango/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/monlovesmango/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/monlovesmango/subscriptions",
        "organizations_url": "https://api.github.com/users/monlovesmango/orgs",
        "repos_url": "https://api.github.com/users/monlovesmango/repos",
        "events_url": "https://api.github.com/users/monlovesmango/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/monlovesmango/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-29T03:55:21Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17447180519,
      "node_id": "HRFPE_lADOABII586BAJQqzwAAAAQP7tjn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17447180519",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f2c37c26b50d3678202b01fcdc51f31810d229cc",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/f2c37c26b50d3678202b01fcdc51f31810d229cc",
      "created_at": "2025-04-29T04:02:58Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17447797822,
      "node_id": "HRFPE_lADOABII586BAJQqzwAAAAQP-EQ-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17447797822",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "768305071df4e337ac2b3e6099ab7cbecca4bb70",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/768305071df4e337ac2b3e6099ab7cbecca4bb70",
      "created_at": "2025-04-29T05:09:29Z"
    },
    {
      "event": "commented",
      "id": 2837465545,
      "node_id": "IC_kwDOABII586pIEnJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2837465545",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-29T05:10:01Z",
      "updated_at": "2025-04-29T14:20:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased due to strange CI failures\r\n\r\nEdit:\r\nIt seems to me that \r\n- the failure of `wallet_backwards_compatibility.py` got addressed via #32369\r\n- but I don’t see an issue or pull request regarding `p2p_i2p_ports.py`. Anyone have an idea?",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#issuecomment-2837465545",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29532"
    },
    {
      "event": "labeled",
      "id": 17447804037,
      "node_id": "LE_lADOABII586BAJQqzwAAAAQP-FyF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17447804037",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-29T05:10:18Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ3YmExMDdjZjNkZWYxZmQyY2Y4ZWE4MmE4ODIxOTA4MTZjMjE5OWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d7ba107cf3def1fd2cf8ea82a882190816c2199c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d7ba107cf3def1fd2cf8ea82a882190816c2199c",
      "tree": {
        "sha": "0582963adbb279deaf943ba240e8eb66c8ca47bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0582963adbb279deaf943ba240e8eb66c8ca47bc"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0582963adbb279deaf943ba240e8eb66c8ca47bc\nparent c5e44a043563dbe5439d1cd8e623467936db1187\nauthor Murch <murch@murch.one> 1709321353 -0500\ncommitter Murch <murch@murch.one> 1745936579 -0700\n\ntest: Create coinselection_tests\n\nAdds a Test Suite, default coin selection parameters as well as helper\nfunctions for creating available coins and to check results.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEENfStpiPrn+OjvH72e6A1yluQFxMFAmgQ4MMQHG11cmNoQG11\ncmNoLm9uZQAKCRB7oDXKW5AXEylCEADAGt5bv1HGu+2NgAFWJy0MlWApLpnVJyJp\nuLDgu9nNozKF+s4IfxmQLFnvj7hThn9CRRz11KheyLyxEEufHqSWDQe8vQiD083f\nU/PAT+jIpV5aPDSEFCp5RMoyz5weAqjJhr0aGva7mfS2cEmEgknde45oqwq9QWFS\nXctp4uPzUXJlccXEOF3UMlULUg3t+hNz2EKgA5/SAZB12TwP3kvSZ462tu3akBco\nbTMXDM86iBQv5cDuFXh8w/fo3JzBUNnwzSgKwpAGeBpFuUjE0G7CVA3E60uWjTzr\n2DhwObXvQqzDY50PQc03qD1BHG27akOd7vCJpNLXH+c8Nyr+gSPujCE1WBdouzsV\nVx3n/bK+9cbsHoVMcGwx6e6PJ7s1vYldibbk2s/Px1nnRPzoZa4fcZu4xvBPNYlI\nsC1xre2Q/4+LOSSlZ6NqP+uq/p2wlvKaKvLSsg1FXWuKgk+TzzAg/HrH51UKUt3d\nYs+RRjO9DhB8FGfyFPJrf1df33BEkWrSpuOCWxv6jqVRpjZd14cwwkEQfrU7clkv\naLW2ykn/IGW7ygAfTOc8M803rC+JpIqA02RwKmpnaP2JDOD5Rt1d0mn603FzJAiA\nxiPIaV8PK49/uFugPrxBLg8S2oR+v6UeXn/8pTgSCx6ObdvR2T5PKEx7jfGwQSQ5\ncVbGZ/iFaQ==\n=O2Ee\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c5e44a043563dbe5439d1cd8e623467936db1187",
          "sha": "c5e44a043563dbe5439d1cd8e623467936db1187",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c5e44a043563dbe5439d1cd8e623467936db1187"
        }
      ],
      "message": "test: Create coinselection_tests\n\nAdds a Test Suite, default coin selection parameters as well as helper\nfunctions for creating available coins and to check results.",
      "committer": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-04-29T14:22:59Z"
      },
      "author": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2024-03-01T19:29:13Z"
      },
      "sha": "d7ba107cf3def1fd2cf8ea82a882190816c2199c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDMwNDc5NDg3YzI2ZGVjNDdhYzYwOTAwOTgzOGQ4MmI1M2NjZTRhM2M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/30479487c26dec47ac609009838d82b53cce4a3c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/30479487c26dec47ac609009838d82b53cce4a3c",
      "tree": {
        "sha": "bab65bf62e521744857d9a1f3e08401d620cd87e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bab65bf62e521744857d9a1f3e08401d620cd87e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree bab65bf62e521744857d9a1f3e08401d620cd87e\nparent d7ba107cf3def1fd2cf8ea82a882190816c2199c\nauthor Murch <murch@murch.one> 1719509480 -0400\ncommitter Murch <murch@murch.one> 1745936584 -0700\n\ntest: Recreate simple BnB success tests\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJDBAABCgAuFiEENfStpiPrn+OjvH72e6A1yluQFxMFAmgQ4MgQHG11cmNoQG11\ncmNoLm9uZQAKCRB7oDXKW5AXE15yD/Y1RI//5qqOQ13GFEWQa/B+KG7LwSJEp1lM\nZeiJOjaQhEW0DFaReYTxx/snK2g/Jf3sfjU6nshj1VjBZzosXRkchKenNWv8Abej\nxgxZz0CghghAdFtD9eWphoB5w5OllxmpemGgNTYtnI6ZYToTI/UtjymDJBdpsLlE\nk3D5Yz0uDhlr8aBK0qSKWjtboyLM5yytEjbmRmc5f2rgg22mfdiBXq9yyHl/tfHY\nLkBYsskL6oJ4LJ/DqmIHnaLhMz7dV6HGtWVNp+k7hvnfvn2g3mI3yRFvBbFe+NAe\nQVKKMFhHjjV3RYf73oKDiBvWO19s+0w8/CkLaZXWdPewUxxYaihWotyzX4eJx1Bj\nB994pMrnkzXAPHC4Ep0ZNoBuRfQPjEO2neiVh+34TIhUWXVLpftRhqF5f+zlagp4\n9wJHEq7dWT9wGaaQOrGnvFA7nOTzEI0Gh1FtfCalPUA6hQv+kCGY8Ey4g2W5MSom\nHwMQoEACIaiD8FFlC0i5hgwNCINu3B24aQgef6vmoJ5PFxC7Cs6KI2ghCa3FzNyx\nxcbcg+CdPYSf86s6ig5TcjoE0EPAwBX7ypWnjlbVIlKfv8KNQVGYNw0JUMhYkiic\n2jCgoJwkzA3NXWeHbKZC2Wg9qz78lzMOMrFkO43WdZhvC/Mxvr1Cpnd1I4ywhnuI\ngaQRMraQ\n=Oic1\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d7ba107cf3def1fd2cf8ea82a882190816c2199c",
          "sha": "d7ba107cf3def1fd2cf8ea82a882190816c2199c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d7ba107cf3def1fd2cf8ea82a882190816c2199c"
        }
      ],
      "message": "test: Recreate simple BnB success tests",
      "committer": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-04-29T14:23:04Z"
      },
      "author": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2024-06-27T17:31:20Z"
      },
      "sha": "30479487c26dec47ac609009838d82b53cce4a3c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBjY2YxNDJhZDY4MzgzOWI0N2FiYzk1YTAzNmU5MTBjNDIzZmViOGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0ccf142ad683839b47abc95a036e910c423feb8c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0ccf142ad683839b47abc95a036e910c423feb8c",
      "tree": {
        "sha": "1848ce349e0e6c1cb2e93e6f2608346c508ed36b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1848ce349e0e6c1cb2e93e6f2608346c508ed36b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1848ce349e0e6c1cb2e93e6f2608346c508ed36b\nparent 30479487c26dec47ac609009838d82b53cce4a3c\nauthor Murch <murch@murch.one> 1709323610 -0500\ncommitter Murch <murch@murch.one> 1745936586 -0700\n\ntest: Move BnB feerate sensitivity tests\n\nOriginally these tests verified that at a SelectCoins level that a\nsolution with fewer inputs gets preferred at high feerates, and a\nsolution with more inputs gets preferred at low feerates. This outcome\nrelies on the behavior of BnB, so we move these tests under the umbrella\nof BnB tests.\n\nOriginally these tests relied on SFFO to work.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEENfStpiPrn+OjvH72e6A1yluQFxMFAmgQ4MoQHG11cmNoQG11\ncmNoLm9uZQAKCRB7oDXKW5AXE8xcD/9Ph9Fy4BcLKLv+fBNySzhCrmAh3d1BbVDB\nlhQsSrLliY1QZCpcl/8dbOOFGzUj+xq6yskbMS1PW/PdW7sY68mULwGW2Ub53XSG\n9KOyiprdJCTPxEU7MGXupaFn7fgHPCuTXjBaqpUDh7wipNqX+jOPsMVzeN8ez++0\neOTujZLsL03HLBOZpL1yT2a2EbT2nNNTRH8/LR/9Y7ndCi5D214UST546mzTPrH8\nP2UuX5PcYY7WbMNHMoIfM+uzmrk9jQ5GspAnP/lwX/7EWFwMVxR9LaGaH0Wvzbgf\niXOsYVekmM+QTgzrQ8nKsybB+cBiVHOL/oTaVyJT0gVURp28UB3rAR2TM1a3A88M\nanJpG8oWcgM/BRd2JoawClFnN3RFINeZp9rC6HJw5n/psBKQlcb5L3pTyTAGHUbW\na9e3KaSzzlyQLmYoFy3/KOv3x47umUTyUdN/HN16N06lAVuZN4QNZqHT6XnIGgQH\n4M4JottivRecsnoER1amYxbtoGwPxj5MINeh/TCgNehzFaqmjDm8Ho+SBmXKIeYQ\num33yCI2+h/vqTZMkml+xXeRSBstEioVNINnWi7kknxcfYhNhldIA8YkeQO4xiX8\nYw5UsYLGJKGZ6e+ai9QqzrtlHICA0zSniI0ynWgDtMepXMhuJRAkWmCU1/U1426x\nNX6GHIKB0w==\n=7av6\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/30479487c26dec47ac609009838d82b53cce4a3c",
          "sha": "30479487c26dec47ac609009838d82b53cce4a3c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/30479487c26dec47ac609009838d82b53cce4a3c"
        }
      ],
      "message": "test: Move BnB feerate sensitivity tests\n\nOriginally these tests verified that at a SelectCoins level that a\nsolution with fewer inputs gets preferred at high feerates, and a\nsolution with more inputs gets preferred at low feerates. This outcome\nrelies on the behavior of BnB, so we move these tests under the umbrella\nof BnB tests.\n\nOriginally these tests relied on SFFO to work.",
      "committer": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-04-29T14:23:06Z"
      },
      "author": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2024-03-01T20:06:50Z"
      },
      "sha": "0ccf142ad683839b47abc95a036e910c423feb8c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM5MjEwMTdmZjI2NmMxYTVkMDBkZjA3ZWZlM2QzYjAyMmM0NGI5OWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3921017ff266c1a5d00df07efe3d3b022c44b99c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3921017ff266c1a5d00df07efe3d3b022c44b99c",
      "tree": {
        "sha": "27d9caf989ce8ec91a6d8c5e17717b7063658985",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/27d9caf989ce8ec91a6d8c5e17717b7063658985"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 27d9caf989ce8ec91a6d8c5e17717b7063658985\nparent 0ccf142ad683839b47abc95a036e910c423feb8c\nauthor Murch <murch@murch.one> 1719503415 -0400\ncommitter Murch <murch@murch.one> 1745936587 -0700\n\ntest: Recreate BnB clone skipping test\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEENfStpiPrn+OjvH72e6A1yluQFxMFAmgQ4MsQHG11cmNoQG11\ncmNoLm9uZQAKCRB7oDXKW5AXE0RlD/4lr68y2Th8+tgrg/5fbWqZXdDscQevJPPN\nDDZ/xO88zgcWMH/VhHijwjBIUaEiqROu61HzqfsuL2iDuGZGDITdeE69YlOyOJY7\n2aaGg+Y4DssAKXup+++ddXBMuCn65CKN28nzh376s+2SidsStBF6VF19DanFa1ed\n3FAsQuelHKQhqpBd0ll90CfBhdXgGFCE5MTpBoyrpprNGhSXmsF7iX/vKArgCe7r\nqZyUcKJmNXHb3cQV4q+k+ErbPlO7Iz09jQ1aLGquH1mUuuXSGoBD50BlRl4DWyl3\n34clnyW/O+rjxq8JJ9ipdQf+kMDOcbvp/6lsG6Z3s7VMPn6SCiix3tVahN8uzIis\nY07IMjgYpNC0I4RydbDk/92Mw4MXMQfJq5sVfq0Nisgn1kSeq1FHCHgh6xDeR1tU\nNFc0MtPxTLXpiGdlkLOwOamM9r8DvZq9YOFTERi34hKYbcDCoKKcV9XamZeHkIcP\nMkUCZ0w+Rn/zZ0pXBj3uAphjDep70xkIVcwfdcAK5P72JQzKFHRyRvEhASs0nCrU\nsP5EY4rap3Wsge7gk85emUC7akxldS5cfuwLHnxX88MvueUugkEHYNj8it0h3M4H\nw56LNM2+xhFp0XW9O+RidkM6YobCSfryNrudbnDEGqvrr+caMumSbrvoby4+n4c9\nzrA/StMnEA==\n=n6iU\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0ccf142ad683839b47abc95a036e910c423feb8c",
          "sha": "0ccf142ad683839b47abc95a036e910c423feb8c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0ccf142ad683839b47abc95a036e910c423feb8c"
        }
      ],
      "message": "test: Recreate BnB clone skipping test",
      "committer": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-04-29T14:23:07Z"
      },
      "author": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2024-06-27T15:50:15Z"
      },
      "sha": "3921017ff266c1a5d00df07efe3d3b022c44b99c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFkMjMwZTU4YTU0MGIxMmZlMTBiZjg3NTk3Y2M5OGEyMzE3ODc2NjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad230e58a540b12fe10bf87597cc98a231787661",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ad230e58a540b12fe10bf87597cc98a231787661",
      "tree": {
        "sha": "898e2c68887ad03f5fba277f00f2d42f3ddfab77",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/898e2c68887ad03f5fba277f00f2d42f3ddfab77"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 898e2c68887ad03f5fba277f00f2d42f3ddfab77\nparent 3921017ff266c1a5d00df07efe3d3b022c44b99c\nauthor Murch <murch@murch.one> 1709325679 -0500\ncommitter Murch <murch@murch.one> 1745936589 -0700\n\ntest: Recreate simple BnB failure tests\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEENfStpiPrn+OjvH72e6A1yluQFxMFAmgQ4M0QHG11cmNoQG11\ncmNoLm9uZQAKCRB7oDXKW5AXE5mXD/9weW62C1RB35woraCBPZGXhSDaCuSEXpWx\nklkAmEubwYJvAzA/xnkeZrg5KaJzX2g005PfJHsw/i4OXSjJCsVGbJUtjDcJeSMj\nspnbnH9ug/AJZBX/nCjkF8p9vec5E+QOE2HbglAbkSRVSKSCl/Gr11MEAeQ4ThEh\nXaW5HJLEfEbNDVBlTL2hTrBB50W6uOOjAeDm0kD98YWI33Mq3zPZ1hw5h+EXUdS1\nbrsfM5TxBhWt6p4Oj7oMRL66vQFAVOMejviuwl5H6DX6MJbhp+Sf7tNGiSY5G7NZ\n0Q9lKZGq4VmDnVJ3T5/TJi7B3i89gbJlLGUqyHIwVSaaFrrA7c1GyPzMunSpJplO\n86oRUJCq8UAGPGsfjcB1Pvu9RaDCCow0c9nwMO5l2xyjX58yqOIgyp+H5c91Q24N\n8/QYHmnFWpvAQTVCrjaNkUoKv3rcVFK1Q+fIG738Gncfbsbo1oP5A9IhN1B/mwAV\nWY+HDt8Tja8GY+uTNRDFvt6WnLUPTlUd+cw9qa7aorx2dmST24vi+Klv1morEoFG\n5qZJMJJuz5UNV4Q2fpb9ApRVpabAOyOwr2rBezCThzfBBhPhfw5epgLU36aeUY9M\nTB55OE2oqBjqvr532dAGLpRZCFDnh4NZzaI5l0tY+2/MlPprEdidt/cRsUCNvMTq\nHdOxhWu7DA==\n=x/Yw\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3921017ff266c1a5d00df07efe3d3b022c44b99c",
          "sha": "3921017ff266c1a5d00df07efe3d3b022c44b99c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3921017ff266c1a5d00df07efe3d3b022c44b99c"
        }
      ],
      "message": "test: Recreate simple BnB failure tests",
      "committer": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-04-29T14:23:09Z"
      },
      "author": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2024-03-01T20:41:19Z"
      },
      "sha": "ad230e58a540b12fe10bf87597cc98a231787661"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDExZWYxMzNlYTJkODc3Y2UxOThlNTBlZTUyNDRhYzcyOGI2OGNhNDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/11ef133ea2d877ce198e50ee5244ac728b68ca49",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/11ef133ea2d877ce198e50ee5244ac728b68ca49",
      "tree": {
        "sha": "051f4518dcb7fdcc702f4a228c39bc54060899bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/051f4518dcb7fdcc702f4a228c39bc54060899bc"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 051f4518dcb7fdcc702f4a228c39bc54060899bc\nparent ad230e58a540b12fe10bf87597cc98a231787661\nauthor Murch <murch@murch.one> 1709325728 -0500\ncommitter Murch <murch@murch.one> 1745936590 -0700\n\ntest: Remove redundant repeated test\n\nWe do not need to repeat the same test multiple times because BnB is\ndeterministic and will therefore always have the same outcome.\nAdditionally, this test was redundant because it repeats the \"Smallest\ncombination too big\" test.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEENfStpiPrn+OjvH72e6A1yluQFxMFAmgQ4M4QHG11cmNoQG11\ncmNoLm9uZQAKCRB7oDXKW5AXE09vD/0TaYURwBuL7azx8ZC4H9sQ1QUDVK+DQ6Js\nxHU9G4uxE5lB1L7azRwEwl8nr5Bjx1OfI7YWyGD90z7+3XxCHEzoRKSjfuCt56N9\npAk+9+uGQrHnxGpSIhUF0s1nM4H6B2HMORCoTpA8r68Sd3VFvfWKgswvaWcgW3zD\n7wD+WqbkEmcB4WKnoWgM6ikWYjtlwYsB3s/2wPSS8MBprTUgz3N8ESRkbIzfKJYa\nY4wVh+2n1O7r/Pyb9Mq19xJtckil2SnW83LrWZjl6Ic1coK2QUx+sgJxCv0kHwYe\n8E30XsiA9SD+PZiGNzP1R3gBRSNGYEsEth/FuR9/O9rt6ukJbfQO3cOgJDmUKLff\noJ0vgZTihmsQdMFY4HwYggfvtaFFhNPCF7yzT/r2RIB+9xwn3kr6H3KB4GBwkfnC\nHpQP7sfGbJB5HqEBDr+cYLknFwewmm2rSFMbJ14FMtrvSanI80kjghSokZkTNZ/F\ncu5whh4W7la8eZE9EBmPfmOTj2IoH1346oKG6BAdBtRjFVxrz397x0VKFBprhRuz\n7+8TPFFkTuGsgORhgcEv1yHzbuqzVHs9zW6kQy7fwiecLPz2MV/omCxjxs8/ybD4\nTp9oAysvEqiVFcvvIV0on6qIfYfvyM6w3EXOHm4TkQAFYifDLsomowmb1bQfitOi\nUzY2AExkXw==\n=234t\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad230e58a540b12fe10bf87597cc98a231787661",
          "sha": "ad230e58a540b12fe10bf87597cc98a231787661",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ad230e58a540b12fe10bf87597cc98a231787661"
        }
      ],
      "message": "test: Remove redundant repeated test\n\nWe do not need to repeat the same test multiple times because BnB is\ndeterministic and will therefore always have the same outcome.\nAdditionally, this test was redundant because it repeats the \"Smallest\ncombination too big\" test.",
      "committer": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-04-29T14:23:10Z"
      },
      "author": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2024-03-01T20:42:08Z"
      },
      "sha": "11ef133ea2d877ce198e50ee5244ac728b68ca49"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFjMTA4NzEzMmViODhjMWU0ZTVhM2RlZDg5Yzg3MTJhYzhhNTQ2Mzg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1c1087132eb88c1e4e5a3ded89c8712ac8a54638",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1c1087132eb88c1e4e5a3ded89c8712ac8a54638",
      "tree": {
        "sha": "fbe48e920d180898b3651f3a0921ce41222f7fd2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fbe48e920d180898b3651f3a0921ce41222f7fd2"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree fbe48e920d180898b3651f3a0921ce41222f7fd2\nparent 11ef133ea2d877ce198e50ee5244ac728b68ca49\nauthor Murch <murch@murch.one> 1709326216 -0500\ncommitter Murch <murch@murch.one> 1745936592 -0700\n\ntest: Recreate BnB iteration exhaustion test\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEENfStpiPrn+OjvH72e6A1yluQFxMFAmgQ4NAQHG11cmNoQG11\ncmNoLm9uZQAKCRB7oDXKW5AXE2V4D/9IgJiNCBG7F8/ScO9tDleHY2sDMRPedOa5\nlMZbO7xtew8Lbb3jrcCWbZnamS9vXKaxNjs/yCB1wQF3zmbraq+biNCKcw6GJYd2\nyoIhdcS1S7tUg5fpRIjTi033WzxtGJ1ZIwy5S/EUqVgIdiwTVSY6tWeHtdL8Ka95\nkmD/FGL58FEHHxaKx2LwD0iGcLC4IyA9wiZ350y09KffE1RZdYL1599N4OB5vQ0Q\nRJFz/wryKVyJmbDQymuTuo2DhiaCwD8BGe0HgExDgLHP6klH15AnRcPyVnJVTSOp\nNXFEw7vjFn4p7l+UQEQfm13uVJh6sBeJRIew/L2ficJC3gd3ZZ3LptKWDz+kbZuM\n0ZlGggxSDpYZiwC+bEmxAZEBOlEe2mdSPcJA3n251ks5iLkL3MG3XubVaqlMTMhG\nFLNUcCL294AwScGp/x34Y/6zoQmJ/X5kQsxwlCkY/Cn5XojFfPHCYwnnrXC7HZLM\nbhAUosVQFAGvnW4nCb7ZU+gClHzPZs62g7k1iXTDHNfdTkDcn+ad2HnAZf4MvHSz\nBLcXzA7npqw63BUajX7nvCPglKnE7uI+NUVL4Cs5Tn/rerk4Fb6KKzbisqhSMmaE\nPzi4IwTIwosm82u1wu6KfT+i3zn8sBDJX9oaT7XssToQtR63n0rSkaUgTguuntLI\nAVeiDSDieQ==\n=JzGW\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/11ef133ea2d877ce198e50ee5244ac728b68ca49",
          "sha": "11ef133ea2d877ce198e50ee5244ac728b68ca49",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/11ef133ea2d877ce198e50ee5244ac728b68ca49"
        }
      ],
      "message": "test: Recreate BnB iteration exhaustion test",
      "committer": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-04-29T14:23:12Z"
      },
      "author": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2024-03-01T20:50:16Z"
      },
      "sha": "1c1087132eb88c1e4e5a3ded89c8712ac8a54638"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRiZjFmMjY2M2IxYWZiZTAzZDZiMTg1NWY4M2RiNjA0YmM3OTk3OWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "tree": {
        "sha": "57a596b9fc34d5617941753f4203b48d1e516165",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/57a596b9fc34d5617941753f4203b48d1e516165"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 57a596b9fc34d5617941753f4203b48d1e516165\nparent 1c1087132eb88c1e4e5a3ded89c8712ac8a54638\nauthor Murch <murch@murch.one> 1745897815 -0700\ncommitter Murch <murch@murch.one> 1745936593 -0700\n\ntest: Run simple tests at various feerates\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEENfStpiPrn+OjvH72e6A1yluQFxMFAmgQ4NEQHG11cmNoQG11\ncmNoLm9uZQAKCRB7oDXKW5AXE8xPEACMLaNpqSjzK2NNjXLurr6ZOgXYOzO9ZsHB\nMoKjof4R+Pjx9D/YpQznhqdXmT9dHckjaBZPVLVkokbw6bOTy0XeFW2mG9+OncQG\nb9NAlV8Q9WTEZZKzewk79ixFB4qu5cBFiM0gxuFECE4v0MDf5XDcI7/jxWl8V6gs\nXTcD2VLQETkBTVIOuZrYzXYVvslRMHP82ltUFLKquGfTp4UNaw4aWnQfBwZDS/bz\nRhmLv8T4yjHjhXRACtuBse2yHc9K7f8t/7dNgK9XrLlsayc2xUZtChf255doVqmi\nMV4S9UNZ9YqLCeG6gdODK/45XyozcV09Y5lMX4qIASkGf2t/1091vDByTcXi40cH\ngUUuogzw6eAoumFJlFwTvEu6xoGJIfIPAuFL+GwxGhQzIZ6pNSDfYKy7no1k4wxk\n+9CDprQKXXyPQVNlCKv8ON0ZHXxiHAglqKV1nEh32yNoSEWZ20cahGs2mhv2hMyj\n7j4BV7NF4V3Gm6/V8wN3sbUku7gER/IJ/oW8/xk1pyipLhVu+i/+KKknlULvT09f\nH9eM8fFkKBgDc9dV84jO55C1Zhnr4R34Dv8JdKw6zXESsydMw6d4mXSZiIqonPrR\nNcbRY5lnFDBcEjy341LtfP2/9qQdh8vyik1Z1WsqfFm84ma8HYv2QANKFUfi8qMW\nkYRWyBj69A==\n=Qfme\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1c1087132eb88c1e4e5a3ded89c8712ac8a54638",
          "sha": "1c1087132eb88c1e4e5a3ded89c8712ac8a54638",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1c1087132eb88c1e4e5a3ded89c8712ac8a54638"
        }
      ],
      "message": "test: Run simple tests at various feerates",
      "committer": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-04-29T14:23:13Z"
      },
      "author": {
        "name": "Murch",
        "email": "murch@murch.one",
        "date": "2025-04-29T03:36:55Z"
      },
      "sha": "dbf1f2663b1afbe03d6b1855f83db604bc79979e"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17456832015,
      "node_id": "HRFPE_lADOABII586BAJQqzwAAAAQQgh4P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17456832015",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "created_at": "2025-04-29T14:23:29Z"
    },
    {
      "event": "unlabeled",
      "id": 17458289196,
      "node_id": "UNLE_lADOABII586BAJQqzwAAAAQQmFos",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17458289196",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-29T15:39:23Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1578036822",
      "pull_request_review_id": 2020119624,
      "id": 1578036822,
      "node_id": "PRRC_kwDOABII585eDu5W",
      "diff_hunk": "@@ -0,0 +1,108 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <node/context.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <random.h>\n+#include <test/util/logging.h>\n+#include <test/util/setup_common.h>\n+#include <util/translation.h>\n+#include <wallet/coincontrol.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/fees.h>\n+#include <wallet/spend.h>\n+#include <wallet/test/util.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+#include <wallet/wallet.h>\n+\n+#include <algorithm>\n+#include <boost/test/unit_test.hpp>\n+#include <random>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, WalletTestingSetup)\n+\n+static int nextLockTime = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/ default_rand,\n+        /*change_output_size=*/ 31,\n+        /*change_spend_size=*/ 68,\n+        /*min_change_target=*/ 50'000,\n+        /*effective_feerate=*/ CFeeRate(5000),\n+        /*long_term_feerate=*/ CFeeRate(10'000),\n+        /*discard_feerate=*/ CFeeRate(3000),\n+        /*tx_noinputs_size=*/ 11 + 31, //static header size + output size\n+        /*avoid_partial=*/ false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/ dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/ dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size) + dcsp.m_change_fee;\n+    dcsp.min_viable_change = /*204 sats=*/ dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one coin that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static COutput MakeCoin(const CAmount& amount, bool is_eff_value = true, int nInput = 0, CFeeRate feerate = default_cs_params.m_effective_feerate, int custom_spending_vsize = 68)\n+{\n+    CMutableTransaction tx;\n+    tx.vout.resize(nInput + 1);\n+    CAmount fees = feerate.GetFee(custom_spending_vsize);\n+    tx.vout[nInput].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    return COutput{COutPoint(tx.GetHash(), nInput), tx.vout.at(nInput), /*depth=*/ 1, /*input_bytes=*/ custom_spending_vsize, /*spendable=*/ true, /*solvable=*/ true, /*safe=*/ true, /*time=*/ 0, /*from_me=*/ false, /*fees=*/ fees};\n+}\n+\n+/** Make multiple coins with given effective values */\n+static void AddCoins(std::vector<COutput>& utxo_pool, std::vector<CAmount> coins, CFeeRate feerate = default_cs_params.m_effective_feerate)\n+{\n+    for (int c : coins) {",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 69,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "3dff8f0490b4b92c4adf229a828063dfda6d3a80",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 3dff8f0490b4b92c4adf229a828063dfda6d3a80 \"[test] Create coinselection_tests\"\r\n\r\nThe elements in `coins` are `CAmount`, not `int`.",
      "created_at": "2024-04-24T14:55:46Z",
      "updated_at": "2024-04-24T16:24:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1578036822",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1578036822"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1578039066",
      "pull_request_review_id": 2020119624,
      "id": 1578039066,
      "node_id": "PRRC_kwDOABII585eDvca",
      "diff_hunk": "@@ -0,0 +1,108 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <node/context.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <random.h>\n+#include <test/util/logging.h>\n+#include <test/util/setup_common.h>\n+#include <util/translation.h>\n+#include <wallet/coincontrol.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/fees.h>\n+#include <wallet/spend.h>\n+#include <wallet/test/util.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+#include <wallet/wallet.h>\n+\n+#include <algorithm>\n+#include <boost/test/unit_test.hpp>\n+#include <random>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, WalletTestingSetup)\n+\n+static int nextLockTime = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/ default_rand,\n+        /*change_output_size=*/ 31,\n+        /*change_spend_size=*/ 68,\n+        /*min_change_target=*/ 50'000,\n+        /*effective_feerate=*/ CFeeRate(5000),\n+        /*long_term_feerate=*/ CFeeRate(10'000),\n+        /*discard_feerate=*/ CFeeRate(3000),\n+        /*tx_noinputs_size=*/ 11 + 31, //static header size + output size\n+        /*avoid_partial=*/ false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/ dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/ dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size) + dcsp.m_change_fee;\n+    dcsp.min_viable_change = /*204 sats=*/ dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one coin that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static COutput MakeCoin(const CAmount& amount, bool is_eff_value = true, int nInput = 0, CFeeRate feerate = default_cs_params.m_effective_feerate, int custom_spending_vsize = 68)\n+{\n+    CMutableTransaction tx;\n+    tx.vout.resize(nInput + 1);\n+    CAmount fees = feerate.GetFee(custom_spending_vsize);\n+    tx.vout[nInput].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    return COutput{COutPoint(tx.GetHash(), nInput), tx.vout.at(nInput), /*depth=*/ 1, /*input_bytes=*/ custom_spending_vsize, /*spendable=*/ true, /*solvable=*/ true, /*safe=*/ true, /*time=*/ 0, /*from_me=*/ false, /*fees=*/ fees};\n+}\n+\n+/** Make multiple coins with given effective values */\n+static void AddCoins(std::vector<COutput>& utxo_pool, std::vector<CAmount> coins, CFeeRate feerate = default_cs_params.m_effective_feerate)\n+{\n+    for (int c : coins) {\n+        utxo_pool.push_back(MakeCoin(c, true, 0, feerate));\n+    }\n+}\n+\n+/** Group available coins into OutputGroups */\n+inline std::vector<OutputGroup>& GroupCoins(const std::vector<COutput>& available_coins, const CoinSelectionParams& cs_params = default_cs_params, bool subtract_fee_outputs = false)\n+{\n+    static std::vector<OutputGroup> static_groups;\n+    static_groups.clear();",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 78,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "3dff8f0490b4b92c4adf229a828063dfda6d3a80",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 3dff8f0490b4b92c4adf229a828063dfda6d3a80 \"[test] Create coinselection_tests\"\r\n\r\nThere doesn't seem to be a purpose for having a static variable here. We basically treat it as temporary since it's cleared every time.",
      "created_at": "2024-04-24T14:57:10Z",
      "updated_at": "2024-04-24T16:24:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1578039066",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1578039066"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": 77,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1578041562",
      "pull_request_review_id": 2020119624,
      "id": 1578041562,
      "node_id": "PRRC_kwDOABII585eDwDa",
      "diff_hunk": "@@ -0,0 +1,108 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <node/context.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <random.h>\n+#include <test/util/logging.h>\n+#include <test/util/setup_common.h>\n+#include <util/translation.h>\n+#include <wallet/coincontrol.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/fees.h>\n+#include <wallet/spend.h>\n+#include <wallet/test/util.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+#include <wallet/wallet.h>\n+\n+#include <algorithm>\n+#include <boost/test/unit_test.hpp>\n+#include <random>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, WalletTestingSetup)\n+\n+static int nextLockTime = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/ default_rand,\n+        /*change_output_size=*/ 31,\n+        /*change_spend_size=*/ 68,\n+        /*min_change_target=*/ 50'000,\n+        /*effective_feerate=*/ CFeeRate(5000),\n+        /*long_term_feerate=*/ CFeeRate(10'000),\n+        /*discard_feerate=*/ CFeeRate(3000),\n+        /*tx_noinputs_size=*/ 11 + 31, //static header size + output size\n+        /*avoid_partial=*/ false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/ dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/ dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size) + dcsp.m_change_fee;\n+    dcsp.min_viable_change = /*204 sats=*/ dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one coin that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static COutput MakeCoin(const CAmount& amount, bool is_eff_value = true, int nInput = 0, CFeeRate feerate = default_cs_params.m_effective_feerate, int custom_spending_vsize = 68)\n+{\n+    CMutableTransaction tx;\n+    tx.vout.resize(nInput + 1);\n+    CAmount fees = feerate.GetFee(custom_spending_vsize);\n+    tx.vout[nInput].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    return COutput{COutPoint(tx.GetHash(), nInput), tx.vout.at(nInput), /*depth=*/ 1, /*input_bytes=*/ custom_spending_vsize, /*spendable=*/ true, /*solvable=*/ true, /*safe=*/ true, /*time=*/ 0, /*from_me=*/ false, /*fees=*/ fees};\n+}\n+\n+/** Make multiple coins with given effective values */\n+static void AddCoins(std::vector<COutput>& utxo_pool, std::vector<CAmount> coins, CFeeRate feerate = default_cs_params.m_effective_feerate)\n+{\n+    for (int c : coins) {\n+        utxo_pool.push_back(MakeCoin(c, true, 0, feerate));\n+    }\n+}\n+\n+/** Group available coins into OutputGroups */\n+inline std::vector<OutputGroup>& GroupCoins(const std::vector<COutput>& available_coins, const CoinSelectionParams& cs_params = default_cs_params, bool subtract_fee_outputs = false)",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 75,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "3dff8f0490b4b92c4adf229a828063dfda6d3a80",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 3dff8f0490b4b92c4adf229a828063dfda6d3a80 \"[test] Create coinselection_tests\"\r\n\r\nSince the expected pattern is to always `GroupCoins(utxo_pool)`, it might make sense to make `utxo_pool` a `std::vector<OutputGroup>` and combine this function with `AddCoins`.",
      "created_at": "2024-04-24T14:58:43Z",
      "updated_at": "2024-04-24T16:24:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1578041562",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1578041562"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1578043081",
      "pull_request_review_id": 2020119624,
      "id": 1578043081,
      "node_id": "PRRC_kwDOABII585eDwbJ",
      "diff_hunk": "@@ -104,5 +104,40 @@ static bool EquivalentResult(const SelectionResult& a, const SelectionResult& b)\n     return ret.first == a_amts.end() && ret.second == b_amts.end();\n }\n \n+static void TestBnBSuccess(std::string test_title, std::vector<COutput>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CFeeRate& feerate = default_cs_params.m_effective_feerate)\n+{\n+    SelectionResult expected_result(CAmount(0), SelectionAlgorithm::BNB);\n+    CAmount expected_amount = 0;\n+    for (int input_amount : expected_input_amounts) {",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "e286c6470bbaa1358fecb7c5a7e109583d158780",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In e286c6470bbaa1358fecb7c5a7e109583d158780 \"[test] Recreate simple BnB success tests\"\r\n\r\nThe elements of `expected_input_amounts` are `CAmount` not `int`.",
      "created_at": "2024-04-24T14:59:42Z",
      "updated_at": "2024-04-24T16:24:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1578043081",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1578043081"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 111,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1578048284",
      "pull_request_review_id": 2020119624,
      "id": 1578048284,
      "node_id": "PRRC_kwDOABII585eDxsc",
      "diff_hunk": "@@ -104,5 +104,40 @@ static bool EquivalentResult(const SelectionResult& a, const SelectionResult& b)\n     return ret.first == a_amts.end() && ret.second == b_amts.end();\n }\n \n+static void TestBnBSuccess(std::string test_title, std::vector<COutput>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CFeeRate& feerate = default_cs_params.m_effective_feerate)\n+{\n+    SelectionResult expected_result(CAmount(0), SelectionAlgorithm::BNB);\n+    CAmount expected_amount = 0;\n+    for (int input_amount : expected_input_amounts) {\n+        OutputGroup group;\n+        COutput coin = MakeCoin(input_amount, true, 0, feerate);\n+        expected_amount += coin.txout.nValue;\n+        group.Insert(std::make_shared<COutput>(coin), /*ancestors=*/ 0, /*descendants=*/ 0);\n+        expected_result.AddInput(group);\n+    }\n+\n+    const auto result = SelectCoinsBnB(GroupCoins(utxo_pool), selection_target, /*cost_of_change=*/ default_cs_params.m_cost_of_change, /*max_weight=*/MAX_STANDARD_TX_WEIGHT);\n+    BOOST_CHECK_MESSAGE(result, \"BnB-Success: \" + test_title);",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "e286c6470bbaa1358fecb7c5a7e109583d158780",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In e286c6470bbaa1358fecb7c5a7e109583d158780 \"[test] Recreate simple BnB success tests\"\r\n\r\nThe `*_MESSAGE` functions print out the message on failure, not on success. So the message should be something that better indicates what the failure was, not something that might suggest something was successful.",
      "created_at": "2024-04-24T15:02:16Z",
      "updated_at": "2024-04-24T16:24:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1578048284",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1578048284"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586712079",
      "pull_request_review_id": 2034299860,
      "id": 1586712079,
      "node_id": "PRRC_kwDOABII585ek04P",
      "diff_hunk": "@@ -0,0 +1,108 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <node/context.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <random.h>\n+#include <test/util/logging.h>\n+#include <test/util/setup_common.h>\n+#include <util/translation.h>\n+#include <wallet/coincontrol.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/fees.h>\n+#include <wallet/spend.h>\n+#include <wallet/test/util.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+#include <wallet/wallet.h>\n+\n+#include <algorithm>\n+#include <boost/test/unit_test.hpp>\n+#include <random>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, WalletTestingSetup)\n+\n+static int nextLockTime = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/ default_rand,\n+        /*change_output_size=*/ 31,\n+        /*change_spend_size=*/ 68,\n+        /*min_change_target=*/ 50'000,\n+        /*effective_feerate=*/ CFeeRate(5000),\n+        /*long_term_feerate=*/ CFeeRate(10'000),\n+        /*discard_feerate=*/ CFeeRate(3000),\n+        /*tx_noinputs_size=*/ 11 + 31, //static header size + output size\n+        /*avoid_partial=*/ false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/ dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/ dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size) + dcsp.m_change_fee;\n+    dcsp.min_viable_change = /*204 sats=*/ dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one coin that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static COutput MakeCoin(const CAmount& amount, bool is_eff_value = true, int nInput = 0, CFeeRate feerate = default_cs_params.m_effective_feerate, int custom_spending_vsize = 68)",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "3dff8f0490b4b92c4adf229a828063dfda6d3a80",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 3dff8f0490:\r\nAs far as I can see, the `nInput` arg is always 0 in this PR and also in #28985. Can we remove it?",
      "created_at": "2024-05-01T19:23:28Z",
      "updated_at": "2024-05-03T15:08:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1586712079",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586712079"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586720038",
      "pull_request_review_id": 2034299860,
      "id": 1586720038,
      "node_id": "PRRC_kwDOABII585ek20m",
      "diff_hunk": "@@ -0,0 +1,108 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <node/context.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <random.h>\n+#include <test/util/logging.h>\n+#include <test/util/setup_common.h>\n+#include <util/translation.h>\n+#include <wallet/coincontrol.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/fees.h>\n+#include <wallet/spend.h>\n+#include <wallet/test/util.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+#include <wallet/wallet.h>\n+\n+#include <algorithm>\n+#include <boost/test/unit_test.hpp>\n+#include <random>",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "3dff8f0490b4b92c4adf229a828063dfda6d3a80",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In https://github.com/bitcoin/bitcoin/commit/3dff8f0490b4b92c4adf229a828063dfda6d3a80:\r\n\r\nI don't think we need all this includes. For instance, no wallet is used and `<wallet/wallet.h>` is included, no fee function is used and `wallet/fees.h` is included,  `<random.h>` and `<random>` are included. \r\n\r\nMaybe run IOWY to clean this up.",
      "created_at": "2024-05-01T19:28:34Z",
      "updated_at": "2024-05-03T15:08:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1586720038",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1586720038"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": 9,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1589243941",
      "pull_request_review_id": 2034299860,
      "id": 1589243941,
      "node_id": "PRRC_kwDOABII585eufAl",
      "diff_hunk": "@@ -104,5 +104,40 @@ static bool EquivalentResult(const SelectionResult& a, const SelectionResult& b)\n     return ret.first == a_amts.end() && ret.second == b_amts.end();\n }\n \n+static void TestBnBSuccess(std::string test_title, std::vector<COutput>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CFeeRate& feerate = default_cs_params.m_effective_feerate)\n+{\n+    SelectionResult expected_result(CAmount(0), SelectionAlgorithm::BNB);\n+    CAmount expected_amount = 0;\n+    for (int input_amount : expected_input_amounts) {\n+        OutputGroup group;\n+        COutput coin = MakeCoin(input_amount, true, 0, feerate);\n+        expected_amount += coin.txout.nValue;\n+        group.Insert(std::make_shared<COutput>(coin), /*ancestors=*/ 0, /*descendants=*/ 0);\n+        expected_result.AddInput(group);\n+    }\n+\n+    const auto result = SelectCoinsBnB(GroupCoins(utxo_pool), selection_target, /*cost_of_change=*/ default_cs_params.m_cost_of_change, /*max_weight=*/MAX_STANDARD_TX_WEIGHT);\n+    BOOST_CHECK_MESSAGE(result, \"BnB-Success: \" + test_title);\n+    BOOST_CHECK(EquivalentResult(expected_result, *result));\n+    BOOST_CHECK_EQUAL(result->GetSelectedValue(), expected_amount);\n+    expected_result.Clear();",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "e286c6470bbaa1358fecb7c5a7e109583d158780",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In e286c6470b:\r\n\r\nNo need to clear `expected_result`. It's created within this function.",
      "created_at": "2024-05-03T13:59:45Z",
      "updated_at": "2024-05-03T15:08:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1589243941",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1589243941"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 123,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1622850394",
      "pull_request_review_id": 2091545414,
      "id": 1622850394,
      "node_id": "PRRC_kwDOABII585gurta",
      "diff_hunk": "@@ -0,0 +1,108 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <node/context.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <random.h>\n+#include <test/util/logging.h>\n+#include <test/util/setup_common.h>\n+#include <util/translation.h>\n+#include <wallet/coincontrol.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/fees.h>\n+#include <wallet/spend.h>\n+#include <wallet/test/util.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+#include <wallet/wallet.h>\n+\n+#include <algorithm>\n+#include <boost/test/unit_test.hpp>\n+#include <random>",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "3dff8f0490b4b92c4adf229a828063dfda6d3a80",
      "in_reply_to_id": 1586720038,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I was able to remove all except for\r\n\r\n```cpp\r\n#include <consensus/amount.h>\r\n#include <wallet/coinselection.h>\r\n#include <wallet/test/wallet_test_fixture.h>\r\n\r\n#include <boost/test/unit_test.hpp>\r\n```\r\n\r\nI’m not familiar with IOWY and could not turn up anything with a websearch, what is that?",
      "created_at": "2024-05-31T19:05:24Z",
      "updated_at": "2024-06-27T15:57:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1622850394",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1622850394"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": 9,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1622850804",
      "pull_request_review_id": 2091545414,
      "id": 1622850804,
      "node_id": "PRRC_kwDOABII585gurz0",
      "diff_hunk": "@@ -0,0 +1,108 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <node/context.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <random.h>\n+#include <test/util/logging.h>\n+#include <test/util/setup_common.h>\n+#include <util/translation.h>\n+#include <wallet/coincontrol.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/fees.h>\n+#include <wallet/spend.h>\n+#include <wallet/test/util.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+#include <wallet/wallet.h>\n+\n+#include <algorithm>\n+#include <boost/test/unit_test.hpp>\n+#include <random>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, WalletTestingSetup)\n+\n+static int nextLockTime = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/ default_rand,\n+        /*change_output_size=*/ 31,\n+        /*change_spend_size=*/ 68,\n+        /*min_change_target=*/ 50'000,\n+        /*effective_feerate=*/ CFeeRate(5000),\n+        /*long_term_feerate=*/ CFeeRate(10'000),\n+        /*discard_feerate=*/ CFeeRate(3000),\n+        /*tx_noinputs_size=*/ 11 + 31, //static header size + output size\n+        /*avoid_partial=*/ false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/ dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/ dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size) + dcsp.m_change_fee;\n+    dcsp.min_viable_change = /*204 sats=*/ dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one coin that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static COutput MakeCoin(const CAmount& amount, bool is_eff_value = true, int nInput = 0, CFeeRate feerate = default_cs_params.m_effective_feerate, int custom_spending_vsize = 68)",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "3dff8f0490b4b92c4adf229a828063dfda6d3a80",
      "in_reply_to_id": 1586712079,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I have removed `nInput` from the function parameters of `MakeCoin(…)`.",
      "created_at": "2024-05-31T19:05:53Z",
      "updated_at": "2024-06-27T15:57:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1622850804",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1622850804"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1622850893",
      "pull_request_review_id": 2091545414,
      "id": 1622850893,
      "node_id": "PRRC_kwDOABII585gur1N",
      "diff_hunk": "@@ -0,0 +1,108 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <node/context.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <random.h>\n+#include <test/util/logging.h>\n+#include <test/util/setup_common.h>\n+#include <util/translation.h>\n+#include <wallet/coincontrol.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/fees.h>\n+#include <wallet/spend.h>\n+#include <wallet/test/util.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+#include <wallet/wallet.h>\n+\n+#include <algorithm>\n+#include <boost/test/unit_test.hpp>\n+#include <random>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, WalletTestingSetup)\n+\n+static int nextLockTime = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/ default_rand,\n+        /*change_output_size=*/ 31,\n+        /*change_spend_size=*/ 68,\n+        /*min_change_target=*/ 50'000,\n+        /*effective_feerate=*/ CFeeRate(5000),\n+        /*long_term_feerate=*/ CFeeRate(10'000),\n+        /*discard_feerate=*/ CFeeRate(3000),\n+        /*tx_noinputs_size=*/ 11 + 31, //static header size + output size\n+        /*avoid_partial=*/ false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/ dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/ dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size) + dcsp.m_change_fee;\n+    dcsp.min_viable_change = /*204 sats=*/ dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one coin that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static COutput MakeCoin(const CAmount& amount, bool is_eff_value = true, int nInput = 0, CFeeRate feerate = default_cs_params.m_effective_feerate, int custom_spending_vsize = 68)\n+{\n+    CMutableTransaction tx;\n+    tx.vout.resize(nInput + 1);\n+    CAmount fees = feerate.GetFee(custom_spending_vsize);\n+    tx.vout[nInput].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    return COutput{COutPoint(tx.GetHash(), nInput), tx.vout.at(nInput), /*depth=*/ 1, /*input_bytes=*/ custom_spending_vsize, /*spendable=*/ true, /*solvable=*/ true, /*safe=*/ true, /*time=*/ 0, /*from_me=*/ false, /*fees=*/ fees};\n+}\n+\n+/** Make multiple coins with given effective values */\n+static void AddCoins(std::vector<COutput>& utxo_pool, std::vector<CAmount> coins, CFeeRate feerate = default_cs_params.m_effective_feerate)\n+{\n+    for (int c : coins) {",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 69,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "3dff8f0490b4b92c4adf229a828063dfda6d3a80",
      "in_reply_to_id": 1578036822,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, fixed",
      "created_at": "2024-05-31T19:06:00Z",
      "updated_at": "2024-06-27T15:57:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1622850893",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1622850893"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1622920206",
      "pull_request_review_id": 2091545414,
      "id": 1622920206,
      "node_id": "PRRC_kwDOABII585gu8wO",
      "diff_hunk": "@@ -104,5 +104,40 @@ static bool EquivalentResult(const SelectionResult& a, const SelectionResult& b)\n     return ret.first == a_amts.end() && ret.second == b_amts.end();\n }\n \n+static void TestBnBSuccess(std::string test_title, std::vector<COutput>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CFeeRate& feerate = default_cs_params.m_effective_feerate)\n+{\n+    SelectionResult expected_result(CAmount(0), SelectionAlgorithm::BNB);\n+    CAmount expected_amount = 0;\n+    for (int input_amount : expected_input_amounts) {",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "e286c6470bbaa1358fecb7c5a7e109583d158780",
      "in_reply_to_id": 1578043081,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, fixed",
      "created_at": "2024-05-31T20:24:29Z",
      "updated_at": "2024-06-27T15:57:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1622920206",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1622920206"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 111,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1622920679",
      "pull_request_review_id": 2091545414,
      "id": 1622920679,
      "node_id": "PRRC_kwDOABII585gu83n",
      "diff_hunk": "@@ -104,5 +104,40 @@ static bool EquivalentResult(const SelectionResult& a, const SelectionResult& b)\n     return ret.first == a_amts.end() && ret.second == b_amts.end();\n }\n \n+static void TestBnBSuccess(std::string test_title, std::vector<COutput>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CFeeRate& feerate = default_cs_params.m_effective_feerate)\n+{\n+    SelectionResult expected_result(CAmount(0), SelectionAlgorithm::BNB);\n+    CAmount expected_amount = 0;\n+    for (int input_amount : expected_input_amounts) {\n+        OutputGroup group;\n+        COutput coin = MakeCoin(input_amount, true, 0, feerate);\n+        expected_amount += coin.txout.nValue;\n+        group.Insert(std::make_shared<COutput>(coin), /*ancestors=*/ 0, /*descendants=*/ 0);\n+        expected_result.AddInput(group);\n+    }\n+\n+    const auto result = SelectCoinsBnB(GroupCoins(utxo_pool), selection_target, /*cost_of_change=*/ default_cs_params.m_cost_of_change, /*max_weight=*/MAX_STANDARD_TX_WEIGHT);\n+    BOOST_CHECK_MESSAGE(result, \"BnB-Success: \" + test_title);\n+    BOOST_CHECK(EquivalentResult(expected_result, *result));\n+    BOOST_CHECK_EQUAL(result->GetSelectedValue(), expected_amount);\n+    expected_result.Clear();",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "e286c6470bbaa1358fecb7c5a7e109583d158780",
      "in_reply_to_id": 1589243941,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, fixed",
      "created_at": "2024-05-31T20:25:05Z",
      "updated_at": "2024-06-27T15:57:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1622920679",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1622920679"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 123,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1629892844",
      "pull_request_review_id": 2091545414,
      "id": 1629892844,
      "node_id": "PRRC_kwDOABII585hJjDs",
      "diff_hunk": "@@ -0,0 +1,108 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <node/context.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <random.h>\n+#include <test/util/logging.h>\n+#include <test/util/setup_common.h>\n+#include <util/translation.h>\n+#include <wallet/coincontrol.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/fees.h>\n+#include <wallet/spend.h>\n+#include <wallet/test/util.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+#include <wallet/wallet.h>\n+\n+#include <algorithm>\n+#include <boost/test/unit_test.hpp>\n+#include <random>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, WalletTestingSetup)\n+\n+static int nextLockTime = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/ default_rand,\n+        /*change_output_size=*/ 31,\n+        /*change_spend_size=*/ 68,\n+        /*min_change_target=*/ 50'000,\n+        /*effective_feerate=*/ CFeeRate(5000),\n+        /*long_term_feerate=*/ CFeeRate(10'000),\n+        /*discard_feerate=*/ CFeeRate(3000),\n+        /*tx_noinputs_size=*/ 11 + 31, //static header size + output size\n+        /*avoid_partial=*/ false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/ dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/ dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size) + dcsp.m_change_fee;\n+    dcsp.min_viable_change = /*204 sats=*/ dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one coin that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static COutput MakeCoin(const CAmount& amount, bool is_eff_value = true, int nInput = 0, CFeeRate feerate = default_cs_params.m_effective_feerate, int custom_spending_vsize = 68)\n+{\n+    CMutableTransaction tx;\n+    tx.vout.resize(nInput + 1);\n+    CAmount fees = feerate.GetFee(custom_spending_vsize);\n+    tx.vout[nInput].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    return COutput{COutPoint(tx.GetHash(), nInput), tx.vout.at(nInput), /*depth=*/ 1, /*input_bytes=*/ custom_spending_vsize, /*spendable=*/ true, /*solvable=*/ true, /*safe=*/ true, /*time=*/ 0, /*from_me=*/ false, /*fees=*/ fees};\n+}\n+\n+/** Make multiple coins with given effective values */\n+static void AddCoins(std::vector<COutput>& utxo_pool, std::vector<CAmount> coins, CFeeRate feerate = default_cs_params.m_effective_feerate)\n+{\n+    for (int c : coins) {\n+        utxo_pool.push_back(MakeCoin(c, true, 0, feerate));\n+    }\n+}\n+\n+/** Group available coins into OutputGroups */\n+inline std::vector<OutputGroup>& GroupCoins(const std::vector<COutput>& available_coins, const CoinSelectionParams& cs_params = default_cs_params, bool subtract_fee_outputs = false)\n+{\n+    static std::vector<OutputGroup> static_groups;\n+    static_groups.clear();",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 78,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "3dff8f0490b4b92c4adf229a828063dfda6d3a80",
      "in_reply_to_id": 1578039066,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed the static keyword and the clear as suggested.",
      "created_at": "2024-06-06T17:01:54Z",
      "updated_at": "2024-06-27T15:57:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1629892844",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1629892844"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": 77,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657289988",
      "pull_request_review_id": 2091545414,
      "id": 1657289988,
      "node_id": "PRRC_kwDOABII585iyD0E",
      "diff_hunk": "@@ -104,5 +104,40 @@ static bool EquivalentResult(const SelectionResult& a, const SelectionResult& b)\n     return ret.first == a_amts.end() && ret.second == b_amts.end();\n }\n \n+static void TestBnBSuccess(std::string test_title, std::vector<COutput>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CFeeRate& feerate = default_cs_params.m_effective_feerate)\n+{\n+    SelectionResult expected_result(CAmount(0), SelectionAlgorithm::BNB);\n+    CAmount expected_amount = 0;\n+    for (int input_amount : expected_input_amounts) {\n+        OutputGroup group;\n+        COutput coin = MakeCoin(input_amount, true, 0, feerate);\n+        expected_amount += coin.txout.nValue;\n+        group.Insert(std::make_shared<COutput>(coin), /*ancestors=*/ 0, /*descendants=*/ 0);\n+        expected_result.AddInput(group);\n+    }\n+\n+    const auto result = SelectCoinsBnB(GroupCoins(utxo_pool), selection_target, /*cost_of_change=*/ default_cs_params.m_cost_of_change, /*max_weight=*/MAX_STANDARD_TX_WEIGHT);\n+    BOOST_CHECK_MESSAGE(result, \"BnB-Success: \" + test_title);",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "e286c6470bbaa1358fecb7c5a7e109583d158780",
      "in_reply_to_id": 1578048284,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Made all tests output messages indicate what went wrong in the success case.",
      "created_at": "2024-06-27T14:52:34Z",
      "updated_at": "2024-06-27T17:46:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1657289988",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657289988"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657397165",
      "pull_request_review_id": 2091545414,
      "id": 1657397165,
      "node_id": "PRRC_kwDOABII585iyd-t",
      "diff_hunk": "@@ -0,0 +1,108 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <node/context.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <random.h>\n+#include <test/util/logging.h>\n+#include <test/util/setup_common.h>\n+#include <util/translation.h>\n+#include <wallet/coincontrol.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/fees.h>\n+#include <wallet/spend.h>\n+#include <wallet/test/util.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+#include <wallet/wallet.h>\n+\n+#include <algorithm>\n+#include <boost/test/unit_test.hpp>\n+#include <random>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, WalletTestingSetup)\n+\n+static int nextLockTime = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/ default_rand,\n+        /*change_output_size=*/ 31,\n+        /*change_spend_size=*/ 68,\n+        /*min_change_target=*/ 50'000,\n+        /*effective_feerate=*/ CFeeRate(5000),\n+        /*long_term_feerate=*/ CFeeRate(10'000),\n+        /*discard_feerate=*/ CFeeRate(3000),\n+        /*tx_noinputs_size=*/ 11 + 31, //static header size + output size\n+        /*avoid_partial=*/ false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/ dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/ dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size) + dcsp.m_change_fee;\n+    dcsp.min_viable_change = /*204 sats=*/ dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one coin that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static COutput MakeCoin(const CAmount& amount, bool is_eff_value = true, int nInput = 0, CFeeRate feerate = default_cs_params.m_effective_feerate, int custom_spending_vsize = 68)\n+{\n+    CMutableTransaction tx;\n+    tx.vout.resize(nInput + 1);\n+    CAmount fees = feerate.GetFee(custom_spending_vsize);\n+    tx.vout[nInput].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    return COutput{COutPoint(tx.GetHash(), nInput), tx.vout.at(nInput), /*depth=*/ 1, /*input_bytes=*/ custom_spending_vsize, /*spendable=*/ true, /*solvable=*/ true, /*safe=*/ true, /*time=*/ 0, /*from_me=*/ false, /*fees=*/ fees};\n+}\n+\n+/** Make multiple coins with given effective values */\n+static void AddCoins(std::vector<COutput>& utxo_pool, std::vector<CAmount> coins, CFeeRate feerate = default_cs_params.m_effective_feerate)\n+{\n+    for (int c : coins) {\n+        utxo_pool.push_back(MakeCoin(c, true, 0, feerate));\n+    }\n+}\n+\n+/** Group available coins into OutputGroups */\n+inline std::vector<OutputGroup>& GroupCoins(const std::vector<COutput>& available_coins, const CoinSelectionParams& cs_params = default_cs_params, bool subtract_fee_outputs = false)",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 75,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "3dff8f0490b4b92c4adf229a828063dfda6d3a80",
      "in_reply_to_id": 1578041562,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Amended all the functions to directly create OutputGroups instead.",
      "created_at": "2024-06-27T15:57:27Z",
      "updated_at": "2024-06-27T15:57:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1657397165",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657397165"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657406844",
      "pull_request_review_id": 2145862711,
      "id": 1657406844,
      "node_id": "PRRC_kwDOABII585iygV8",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, WalletTestingSetup)\n+\n+static int nextLockTime = 0;",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "71606e7bd13cb0cee60c0d83ab1f2651329b0521",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Should be snake_case.",
      "created_at": "2024-06-27T16:03:36Z",
      "updated_at": "2024-06-27T17:06:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1657406844",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657406844"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657408296",
      "pull_request_review_id": 2145862711,
      "id": 1657408296,
      "node_id": "PRRC_kwDOABII585iygso",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, WalletTestingSetup)\n+\n+static int nextLockTime = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/ default_rand,\n+        /*change_output_size=*/ 31,\n+        /*change_spend_size=*/ 68,\n+        /*min_change_target=*/ 50'000,\n+        /*effective_feerate=*/ CFeeRate(5000),\n+        /*long_term_feerate=*/ CFeeRate(10'000),\n+        /*discard_feerate=*/ CFeeRate(3000),\n+        /*tx_noinputs_size=*/ 11 + 31, //static header size + output size\n+        /*avoid_partial=*/ false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/ dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/ dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size) + dcsp.m_change_fee;\n+    dcsp.min_viable_change = /*204 sats=*/ dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one coin that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static OutputGroup MakeCoin(const CAmount& amount, bool is_eff_value = true, CoinSelectionParams cs_params = default_cs_params, int custom_spending_vsize = 68)\n+{\n+    // Always assume that we only have one input\n+    const int nInput = 0;",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "71606e7bd13cb0cee60c0d83ab1f2651329b0521",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`nInput` is unused, let’s remove it.",
      "created_at": "2024-06-27T16:04:23Z",
      "updated_at": "2024-06-27T17:06:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1657408296",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657408296"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657411032",
      "pull_request_review_id": 2145862711,
      "id": 1657411032,
      "node_id": "PRRC_kwDOABII585iyhXY",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, WalletTestingSetup)\n+\n+static int nextLockTime = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/ default_rand,\n+        /*change_output_size=*/ 31,\n+        /*change_spend_size=*/ 68,\n+        /*min_change_target=*/ 50'000,\n+        /*effective_feerate=*/ CFeeRate(5000),\n+        /*long_term_feerate=*/ CFeeRate(10'000),\n+        /*discard_feerate=*/ CFeeRate(3000),\n+        /*tx_noinputs_size=*/ 11 + 31, //static header size + output size\n+        /*avoid_partial=*/ false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/ dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/ dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size) + dcsp.m_change_fee;\n+    dcsp.min_viable_change = /*204 sats=*/ dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one coin that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static OutputGroup MakeCoin(const CAmount& amount, bool is_eff_value = true, CoinSelectionParams cs_params = default_cs_params, int custom_spending_vsize = 68)\n+{\n+    // Always assume that we only have one input\n+    const int nInput = 0;\n+    CMutableTransaction tx;\n+    tx.vout.resize(nInput + 1);\n+    CAmount fees = cs_params.m_effective_feerate.GetFee(custom_spending_vsize);\n+    tx.vout[nInput].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    OutputGroup group(cs_params);\n+    group.Insert(std::make_shared<COutput>(COutPoint(tx.GetHash(), nInput), tx.vout.at(nInput), /*depth=*/ 1, /*input_bytes=*/ custom_spending_vsize, /*spendable=*/ true, /*solvable=*/ true, /*safe=*/ true, /*time=*/ 0, /*from_me=*/ false, /*fees=*/ fees), /*ancestors=*/0, /*descendants=*/0);",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 52,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "71606e7bd13cb0cee60c0d83ab1f2651329b0521",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Remove spaces after comments describing params.",
      "created_at": "2024-06-27T16:05:52Z",
      "updated_at": "2024-06-27T17:06:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1657411032",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657411032"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657411595",
      "pull_request_review_id": 2145862711,
      "id": 1657411595,
      "node_id": "PRRC_kwDOABII585iyhgL",
      "diff_hunk": "@@ -0,0 +1,84 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, WalletTestingSetup)\n+\n+static int nextLockTime = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/ default_rand,\n+        /*change_output_size=*/ 31,\n+        /*change_spend_size=*/ 68,\n+        /*min_change_target=*/ 50'000,\n+        /*effective_feerate=*/ CFeeRate(5000),\n+        /*long_term_feerate=*/ CFeeRate(10'000),\n+        /*discard_feerate=*/ CFeeRate(3000),\n+        /*tx_noinputs_size=*/ 11 + 31, //static header size + output size\n+        /*avoid_partial=*/ false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/ dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/ dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size) + dcsp.m_change_fee;\n+    dcsp.min_viable_change = /*204 sats=*/ dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one coin that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static OutputGroup MakeCoin(const CAmount& amount, bool is_eff_value = true, CoinSelectionParams cs_params = default_cs_params, int custom_spending_vsize = 68)\n+{\n+    // Always assume that we only have one input\n+    const int nInput = 0;\n+    CMutableTransaction tx;\n+    tx.vout.resize(nInput + 1);\n+    CAmount fees = cs_params.m_effective_feerate.GetFee(custom_spending_vsize);\n+    tx.vout[nInput].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n+    OutputGroup group(cs_params);\n+    group.Insert(std::make_shared<COutput>(COutPoint(tx.GetHash(), nInput), tx.vout.at(nInput), /*depth=*/ 1, /*input_bytes=*/ custom_spending_vsize, /*spendable=*/ true, /*solvable=*/ true, /*safe=*/ true, /*time=*/ 0, /*from_me=*/ false, /*fees=*/ fees), /*ancestors=*/0, /*descendants=*/0);\n+    return group;\n+}\n+\n+/** Make multiple coins with given effective values */",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "71606e7bd13cb0cee60c0d83ab1f2651329b0521",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Outdated comment, it’s an OutputGroup not coin now.",
      "created_at": "2024-06-27T16:06:11Z",
      "updated_at": "2024-06-27T17:06:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1657411595",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657411595"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657413647",
      "pull_request_review_id": 2145862711,
      "id": 1657413647,
      "node_id": "PRRC_kwDOABII585iyiAP",
      "diff_hunk": "@@ -80,5 +81,37 @@ static bool EquivalentResult(const SelectionResult& a, const SelectionResult& b)\n     return ret.first == a_amts.end() && ret.second == b_amts.end();\n }\n \n+static void TestBnBSuccess(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CoinSelectionParams cs_params = default_cs_params)",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "e62bf2d346913f49f4f4f5b53ee7740ac6df0d22",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Should be a reference.\r\n\r\n```suggestion\r\nstatic void TestBnBSuccess(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CoinSelectionParams& cs_params = default_cs_params)\r\n```",
      "created_at": "2024-06-27T16:07:19Z",
      "updated_at": "2024-06-27T17:06:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1657413647",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657413647"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657415795",
      "pull_request_review_id": 2145862711,
      "id": 1657415795,
      "node_id": "PRRC_kwDOABII585iyihz",
      "diff_hunk": "@@ -80,5 +81,37 @@ static bool EquivalentResult(const SelectionResult& a, const SelectionResult& b)\n     return ret.first == a_amts.end() && ret.second == b_amts.end();\n }\n \n+static void TestBnBSuccess(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CoinSelectionParams cs_params = default_cs_params)\n+{\n+    SelectionResult expected_result(CAmount(0), SelectionAlgorithm::BNB);\n+    CAmount expected_amount = 0;\n+    for (CAmount input_amount : expected_input_amounts) {\n+        OutputGroup group = MakeCoin(input_amount, true, cs_params);\n+        expected_amount += group.m_value;\n+        expected_result.AddInput(group);\n+    }\n+\n+    const auto result = SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/ default_cs_params.m_cost_of_change, /*max_weight=*/MAX_STANDARD_TX_WEIGHT);",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "e62bf2d346913f49f4f4f5b53ee7740ac6df0d22",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n    const auto result = SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/default_cs_params.m_cost_of_change, /*max_weight=*/MAX_STANDARD_TX_WEIGHT);\r\n```",
      "created_at": "2024-06-27T16:08:28Z",
      "updated_at": "2024-06-27T17:06:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1657415795",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657415795"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 94,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657416339",
      "pull_request_review_id": 2145862711,
      "id": 1657416339,
      "node_id": "PRRC_kwDOABII585iyiqT",
      "diff_hunk": "@@ -80,5 +81,37 @@ static bool EquivalentResult(const SelectionResult& a, const SelectionResult& b)\n     return ret.first == a_amts.end() && ret.second == b_amts.end();\n }\n \n+static void TestBnBSuccess(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CoinSelectionParams cs_params = default_cs_params)\n+{\n+    SelectionResult expected_result(CAmount(0), SelectionAlgorithm::BNB);\n+    CAmount expected_amount = 0;\n+    for (CAmount input_amount : expected_input_amounts) {\n+        OutputGroup group = MakeCoin(input_amount, true, cs_params);\n+        expected_amount += group.m_value;\n+        expected_result.AddInput(group);\n+    }\n+\n+    const auto result = SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/ default_cs_params.m_cost_of_change, /*max_weight=*/MAX_STANDARD_TX_WEIGHT);\n+    BOOST_CHECK_MESSAGE(result, \"Falsy result in BnB-Success: \" + test_title);\n+    BOOST_CHECK_MESSAGE(EquivalentResult(expected_result, *result), \"Result mismatch in BnB-Success: \" + test_title);\n+    BOOST_CHECK_MESSAGE(result->GetSelectedValue() == expected_amount, \"Selected amount mismatch in BnB-Success: \" + test_title);\n+}\n+\n+BOOST_AUTO_TEST_CASE(bnb_test)\n+{\n+    std::vector<OutputGroup> utxo_pool;\n+    AddCoins(utxo_pool, {1 * CENT, 3 * CENT, 5 * CENT});\n+\n+    // Simple success cases\n+    TestBnBSuccess(\"Select smallest UTXO\", utxo_pool, /*selection_target=*/ 1 * CENT, /*expected_input_amounts=*/ {1 * CENT});",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "e62bf2d346913f49f4f4f5b53ee7740ac6df0d22",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Remove spaces after param comments",
      "created_at": "2024-06-27T16:08:48Z",
      "updated_at": "2024-06-27T17:06:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1657416339",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657416339"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657418770",
      "pull_request_review_id": 2145862711,
      "id": 1657418770,
      "node_id": "PRRC_kwDOABII585iyjQS",
      "diff_hunk": "@@ -80,5 +81,37 @@ static bool EquivalentResult(const SelectionResult& a, const SelectionResult& b)\n     return ret.first == a_amts.end() && ret.second == b_amts.end();\n }\n \n+static void TestBnBSuccess(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CoinSelectionParams cs_params = default_cs_params)\n+{\n+    SelectionResult expected_result(CAmount(0), SelectionAlgorithm::BNB);\n+    CAmount expected_amount = 0;\n+    for (CAmount input_amount : expected_input_amounts) {\n+        OutputGroup group = MakeCoin(input_amount, true, cs_params);\n+        expected_amount += group.m_value;\n+        expected_result.AddInput(group);\n+    }\n+\n+    const auto result = SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/ default_cs_params.m_cost_of_change, /*max_weight=*/MAX_STANDARD_TX_WEIGHT);\n+    BOOST_CHECK_MESSAGE(result, \"Falsy result in BnB-Success: \" + test_title);\n+    BOOST_CHECK_MESSAGE(EquivalentResult(expected_result, *result), \"Result mismatch in BnB-Success: \" + test_title);\n+    BOOST_CHECK_MESSAGE(result->GetSelectedValue() == expected_amount, \"Selected amount mismatch in BnB-Success: \" + test_title);\n+}\n+\n+BOOST_AUTO_TEST_CASE(bnb_test)\n+{\n+    std::vector<OutputGroup> utxo_pool;\n+    AddCoins(utxo_pool, {1 * CENT, 3 * CENT, 5 * CENT});\n+\n+    // Simple success cases\n+    TestBnBSuccess(\"Select smallest UTXO\", utxo_pool, /*selection_target=*/ 1 * CENT, /*expected_input_amounts=*/ {1 * CENT});\n+    TestBnBSuccess(\"Select middle UTXO\", utxo_pool, /*selection_target=*/ 3 * CENT, /*expected_input_amounts=*/ {3 * CENT});\n+    TestBnBSuccess(\"Select biggest UTXO\", utxo_pool, /*selection_target=*/ 5 * CENT, /*expected_input_amounts=*/ {5 * CENT});\n+    TestBnBSuccess(\"Select two UTXOs\", utxo_pool, /*selection_target=*/ 4 * CENT, /*expected_input_amounts=*/ {1 * CENT, 3 * CENT});\n+    TestBnBSuccess(\"Select all UTXOs\", utxo_pool, /*selection_target=*/ 9 * CENT, /*expected_input_amounts=*/ {1 * CENT, 3 * CENT, 5 * CENT});\n+\n+    // BnB finds changeless solution while overshooting by up to cost_of_change\n+    TestBnBSuccess(\"Select upper bound\", utxo_pool, /*selection_target=*/ 9 * CENT - default_cs_params.m_cost_of_change, /*expected_input_amounts=*/ {1 * CENT, 3 * CENT, 5 * CENT});",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 41,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "e62bf2d346913f49f4f4f5b53ee7740ac6df0d22",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Should not overselect, so we could do this with 4×CENT\r\n```suggestion\r\n    TestBnBSuccess(\"Select upper bound\", utxo_pool, /*selection_target=*/ 4 * CENT - default_cs_params.m_cost_of_change, /*expected_input_amounts=*/ {1 * CENT, 3 * CENT});\r\n```",
      "created_at": "2024-06-27T16:10:07Z",
      "updated_at": "2024-06-27T17:06:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1657418770",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657418770"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657420121",
      "pull_request_review_id": 2145876893,
      "id": 1657420121,
      "node_id": "PRRC_kwDOABII585iyjlZ",
      "diff_hunk": "@@ -0,0 +1,108 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <node/context.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <random.h>\n+#include <test/util/logging.h>\n+#include <test/util/setup_common.h>\n+#include <util/translation.h>\n+#include <wallet/coincontrol.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/fees.h>\n+#include <wallet/spend.h>\n+#include <wallet/test/util.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+#include <wallet/wallet.h>\n+\n+#include <algorithm>\n+#include <boost/test/unit_test.hpp>\n+#include <random>",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "3dff8f0490b4b92c4adf229a828063dfda6d3a80",
      "in_reply_to_id": 1586720038,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I’m not familiar with IOWY and could not turn up anything with a websearch, what is that?\r\n\r\nUpps, the acronym is IWYU from include-what-you-use. I wrote it fast as IOWY \"include only what you use\".\r\nShould stop using acronyms..",
      "created_at": "2024-06-27T16:10:48Z",
      "updated_at": "2024-06-27T16:10:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1657420121",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657420121"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": 9,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657423140",
      "pull_request_review_id": 2145862711,
      "id": 1657423140,
      "node_id": "PRRC_kwDOABII585iykUk",
      "diff_hunk": "@@ -113,5 +113,19 @@ BOOST_AUTO_TEST_CASE(bnb_test)\n     TestBnBSuccess(\"Select upper bound\", utxo_pool, /*selection_target=*/ 9 * CENT - default_cs_params.m_cost_of_change, /*expected_input_amounts=*/ {1 * CENT, 3 * CENT, 5 * CENT});\n }\n \n+BOOST_AUTO_TEST_CASE(bnb_feerate_sensitivity_test)\n+{\n+    // Create sets of UTXOs with the same effective amounts at different feerates (but different absolute amounts)\n+    std::vector<OutputGroup> low_feerate_pool; // 5 sat/vB (lower than long_term_feerate of 10 sat/vB)\n+    AddCoins(low_feerate_pool, {2 * CENT, 3 * CENT, 5 * CENT, 10 * CENT});\n+    TestBnBSuccess(\"Select many inputs at low feerates\", low_feerate_pool, /*selection_target=*/ 10 * CENT, /*expected_input_amounts=*/ {2 * CENT, 3 * CENT, 5 * CENT});\n+\n+    std::vector<OutputGroup> high_feerate_pool; // 25 sat/vB (greater than long_term_feerate of 10 sat/vB)\n+    CoinSelectionParams high_feerate_params = init_default_params();\n+    high_feerate_params.m_effective_feerate = CFeeRate{25'000};",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "dc14005ef1cc9405d34b1960ceadd5f9d61b3be5",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n    CoinSelectionParams high_feerate_params = init_default_params();\r\n    high_feerate_params.m_effective_feerate = CFeeRate{25'000};\r\n    std::vector<OutputGroup> high_feerate_pool; // 25 sat/vB (greater than long_term_feerate of 10 sat/vB)\r\n```",
      "created_at": "2024-06-27T16:11:55Z",
      "updated_at": "2024-06-27T17:06:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1657423140",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657423140"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": 123,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 206,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657425209",
      "pull_request_review_id": 2145862711,
      "id": 1657425209,
      "node_id": "PRRC_kwDOABII585iyk05",
      "diff_hunk": "@@ -104,9 +104,18 @@ static void TestBnBSuccess(std::string test_title, std::vector<OutputGroup>& utx\n     BOOST_CHECK_MESSAGE(result->GetSelectedValue() == expected_amount, \"Selected amount mismatch in BnB-Success: \" + test_title);\n }\n \n+static void TestBnBFail(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target)\n+{\n+    BOOST_CHECK_MESSAGE(!SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/ default_cs_params.m_cost_of_change, /*max_weight=*/MAX_STANDARD_TX_WEIGHT), \"BnB-Fail: \" + test_title);",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "77e445976a28ba92360944f6576681f0f8fb3889",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "remove spaces",
      "created_at": "2024-06-27T16:12:52Z",
      "updated_at": "2024-06-27T17:06:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1657425209",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657425209"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657427370",
      "pull_request_review_id": 2145862711,
      "id": 1657427370,
      "node_id": "PRRC_kwDOABII585iylWq",
      "diff_hunk": "@@ -119,6 +128,14 @@ BOOST_AUTO_TEST_CASE(bnb_test)\n     // BnB finds changeless solution while overshooting by up to cost_of_change\n     TestBnBSuccess(\"Select upper bound\", utxo_pool, /*selection_target=*/ 9 * CENT - default_cs_params.m_cost_of_change, /*expected_input_amounts=*/ {1 * CENT, 3 * CENT, 5 * CENT});\n \n+    // BnB fails to find changeless solution when overshooting by cost_of_change + 1 sat\n+    TestBnBFail(\"Overshoot upper bound\", utxo_pool, /*selection_target=*/ 9 * CENT - default_cs_params.m_cost_of_change - 1);",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "77e445976a28ba92360944f6576681f0f8fb3889",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n    TestBnBFail(\"Overshoot upper bound\", utxo_pool, /*selection_target=*/4 * CENT - default_cs_params.m_cost_of_change - 1);\r\n```",
      "created_at": "2024-06-27T16:14:05Z",
      "updated_at": "2024-06-27T17:06:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1657427370",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657427370"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 132,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657487890",
      "pull_request_review_id": 2145862711,
      "id": 1657487890,
      "node_id": "PRRC_kwDOABII585iy0IS",
      "diff_hunk": "@@ -104,9 +104,18 @@ static void TestBnBSuccess(std::string test_title, std::vector<OutputGroup>& utx\n     BOOST_CHECK_MESSAGE(result->GetSelectedValue() == expected_amount, \"Selected amount mismatch in BnB-Success: \" + test_title);\n }\n \n+static void TestBnBFail(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target)\n+{\n+    BOOST_CHECK_MESSAGE(!SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/ default_cs_params.m_cost_of_change, /*max_weight=*/MAX_STANDARD_TX_WEIGHT), \"BnB-Fail: \" + test_title);\n+}\n+\n BOOST_AUTO_TEST_CASE(bnb_test)\n {\n     std::vector<OutputGroup> utxo_pool;\n+\n+    // Fail for empty UTXO pool\n+    TestBnBFail(\"Empty UTXO pool\", utxo_pool, /*selection_target=*/ 1 * CENT);",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "77e445976a28ba92360944f6576681f0f8fb3889",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Space",
      "created_at": "2024-06-27T17:04:56Z",
      "updated_at": "2024-06-27T17:06:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1657487890",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657487890"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 117,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657552675",
      "pull_request_review_id": 2146096837,
      "id": 1657552675,
      "node_id": "PRRC_kwDOABII585izD8j",
      "diff_hunk": "@@ -0,0 +1,108 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <node/context.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <random.h>\n+#include <test/util/logging.h>\n+#include <test/util/setup_common.h>\n+#include <util/translation.h>\n+#include <wallet/coincontrol.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/fees.h>\n+#include <wallet/spend.h>\n+#include <wallet/test/util.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+#include <wallet/wallet.h>\n+\n+#include <algorithm>\n+#include <boost/test/unit_test.hpp>\n+#include <random>",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "3dff8f0490b4b92c4adf229a828063dfda6d3a80",
      "in_reply_to_id": 1586720038,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I see, thanks for clarifying. I think I cleared out everything that I don’t use.",
      "created_at": "2024-06-27T17:45:03Z",
      "updated_at": "2024-06-27T17:45:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1657552675",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657552675"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": 9,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657553731",
      "pull_request_review_id": 2146098444,
      "id": 1657553731,
      "node_id": "PRRC_kwDOABII585izEND",
      "diff_hunk": "@@ -0,0 +1,108 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <node/context.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <random.h>\n+#include <test/util/logging.h>\n+#include <test/util/setup_common.h>\n+#include <util/translation.h>\n+#include <wallet/coincontrol.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/fees.h>\n+#include <wallet/spend.h>\n+#include <wallet/test/util.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+#include <wallet/wallet.h>\n+\n+#include <algorithm>\n+#include <boost/test/unit_test.hpp>\n+#include <random>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, WalletTestingSetup)\n+\n+static int nextLockTime = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/ default_rand,\n+        /*change_output_size=*/ 31,\n+        /*change_spend_size=*/ 68,\n+        /*min_change_target=*/ 50'000,\n+        /*effective_feerate=*/ CFeeRate(5000),\n+        /*long_term_feerate=*/ CFeeRate(10'000),\n+        /*discard_feerate=*/ CFeeRate(3000),\n+        /*tx_noinputs_size=*/ 11 + 31, //static header size + output size\n+        /*avoid_partial=*/ false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/ dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/ dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size) + dcsp.m_change_fee;\n+    dcsp.min_viable_change = /*204 sats=*/ dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one coin that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static COutput MakeCoin(const CAmount& amount, bool is_eff_value = true, int nInput = 0, CFeeRate feerate = default_cs_params.m_effective_feerate, int custom_spending_vsize = 68)",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "3dff8f0490b4b92c4adf229a828063dfda6d3a80",
      "in_reply_to_id": 1586712079,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "And then actually also removed it as a variable in the function by assuming that there generally is only one output.",
      "created_at": "2024-06-27T17:45:58Z",
      "updated_at": "2024-06-27T17:45:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1657553731",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657553731"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1770575892",
      "pull_request_review_id": 2320873807,
      "id": 1770575892,
      "node_id": "PRRC_kwDOABII585piNgU",
      "diff_hunk": "@@ -0,0 +1,83 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, WalletTestingSetup)",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "3522569d61095166e781105c7e6df534de60b476",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: As far as I can see, no test case in this file uses the `WalletTestingSetup` wallet. So we could save some initialization time on each test case by changing it to `TestingSetup`. And if any future test requires a wallet, it could be specified in-place.",
      "created_at": "2024-09-22T15:11:43Z",
      "updated_at": "2024-09-22T15:13:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1770575892",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1770575892"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815773346",
      "pull_request_review_id": 2393821836,
      "id": 1815773346,
      "node_id": "PRRC_kwDOABII585sOoCi",
      "diff_hunk": "@@ -0,0 +1,182 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <policy/policy.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, WalletTestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,\n+        /*change_spend_size=*/68,\n+        /*min_change_target=*/50'000,\n+        /*effective_feerate=*/CFeeRate(5000),\n+        /*long_term_feerate=*/CFeeRate(10'000),\n+        /*discard_feerate=*/CFeeRate(3000),\n+        /*tx_noinputs_size=*/11 + 31, //static header size + output size\n+        /*avoid_partial=*/false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size) + dcsp.m_change_fee;\n+    dcsp.min_viable_change = /*204 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one OutputGroup with a single UTXO that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static OutputGroup MakeCoin(const CAmount& amount, bool is_eff_value = true, CoinSelectionParams cs_params = default_cs_params, int custom_spending_vsize = 68)\n+{\n+    // Always assume that we only have one input\n+    CMutableTransaction tx;\n+    tx.vout.resize(1);\n+    CAmount fees = cs_params.m_effective_feerate.GetFee(custom_spending_vsize);\n+    tx.vout[0].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = next_lock_time++;        // so all transactions get different hashes\n+    OutputGroup group(cs_params);\n+    group.Insert(std::make_shared<COutput>(COutPoint(tx.GetHash(), 0), tx.vout.at(0), /*depth=*/1, /*input_bytes=*/custom_spending_vsize, /*spendable=*/true, /*solvable=*/true, /*safe=*/true, /*time=*/0, /*from_me=*/false, /*fees=*/fees), /*ancestors=*/0, /*descendants=*/0);\n+    return group;\n+}\n+\n+/** Make multiple OutpuGroups with the given values as their effective value */\n+static void AddCoins(std::vector<OutputGroup>& utxo_pool, std::vector<CAmount> coins, CoinSelectionParams cs_params = default_cs_params)\n+{\n+    for (CAmount c : coins) {\n+        utxo_pool.push_back(MakeCoin(c, true, cs_params));\n+    }\n+}\n+\n+/** Make multiple coins that share the same effective value */\n+static void AddDuplicateCoins(std::vector<OutputGroup>& utxo_pool, int count, int amount) {\n+    for (int i = 0 ; i < count; ++i) {\n+        utxo_pool.push_back(MakeCoin(amount));\n+    }\n+}\n+\n+/** Check if SelectionResult a is equivalent to SelectionResult b.\n+ * Equivalent means same input values, but maybe different inputs (i.e. same value, different prevout) */\n+static bool EquivalentResult(const SelectionResult& a, const SelectionResult& b)\n+{\n+    std::vector<CAmount> a_amts;\n+    std::vector<CAmount> b_amts;\n+    for (const auto& coin : a.GetInputSet()) {\n+        a_amts.push_back(coin->txout.nValue);\n+    }\n+    for (const auto& coin : b.GetInputSet()) {\n+        b_amts.push_back(coin->txout.nValue);\n+    }\n+    std::sort(a_amts.begin(), a_amts.end());\n+    std::sort(b_amts.begin(), b_amts.end());\n+\n+    std::pair<std::vector<CAmount>::iterator, std::vector<CAmount>::iterator> ret = std::mismatch(a_amts.begin(), a_amts.end(), b_amts.begin());\n+    return ret.first == a_amts.end() && ret.second == b_amts.end();\n+}\n+\n+static void TestBnBSuccess(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CoinSelectionParams& cs_params = default_cs_params)\n+{\n+    SelectionResult expected_result(CAmount(0), SelectionAlgorithm::BNB);\n+    CAmount expected_amount = 0;\n+    for (CAmount input_amount : expected_input_amounts) {\n+        OutputGroup group = MakeCoin(input_amount, true, cs_params);\n+        expected_amount += group.m_value;\n+        expected_result.AddInput(group);\n+    }\n+\n+    const auto result = SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/default_cs_params.m_cost_of_change, /*max_selection_weight=*/MAX_STANDARD_TX_WEIGHT);\n+    BOOST_CHECK_MESSAGE(result, \"Falsy result in BnB-Success: \" + test_title);\n+    BOOST_CHECK_MESSAGE(EquivalentResult(expected_result, *result), \"Result mismatch in BnB-Success: \" + test_title);\n+    BOOST_CHECK_MESSAGE(result->GetSelectedValue() == expected_amount, \"Selected amount mismatch in BnB-Success: \" + test_title);\n+}\n+\n+static void TestBnBFail(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target)\n+{\n+    BOOST_CHECK_MESSAGE(!SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/default_cs_params.m_cost_of_change, /*max_selection_weight=*/MAX_STANDARD_TX_WEIGHT), \"BnB-Fail: \" + test_title);\n+}\n+\n+BOOST_AUTO_TEST_CASE(bnb_test)\n+{\n+    std::vector<OutputGroup> utxo_pool;\n+\n+    // Fail for empty UTXO pool\n+    TestBnBFail(\"Empty UTXO pool\", utxo_pool, /*selection_target=*/1 * CENT);\n+\n+    AddCoins(utxo_pool, {1 * CENT, 3 * CENT, 5 * CENT});\n+\n+    // Simple success cases\n+    TestBnBSuccess(\"Select smallest UTXO\", utxo_pool, /*selection_target=*/1 * CENT, /*expected_input_amounts=*/{1 * CENT});\n+    TestBnBSuccess(\"Select middle UTXO\", utxo_pool, /*selection_target=*/3 * CENT, /*expected_input_amounts=*/{3 * CENT});\n+    TestBnBSuccess(\"Select biggest UTXO\", utxo_pool, /*selection_target=*/5 * CENT, /*expected_input_amounts=*/{5 * CENT});\n+    TestBnBSuccess(\"Select two UTXOs\", utxo_pool, /*selection_target=*/4 * CENT, /*expected_input_amounts=*/{1 * CENT, 3 * CENT});\n+    TestBnBSuccess(\"Select all UTXOs\", utxo_pool, /*selection_target=*/9 * CENT, /*expected_input_amounts=*/{1 * CENT, 3 * CENT, 5 * CENT});\n+\n+    // BnB finds changeless solution while overshooting by up to cost_of_change\n+    TestBnBSuccess(\"Select upper bound\", utxo_pool, /*selection_target=*/4 * CENT - default_cs_params.m_cost_of_change, /*expected_input_amounts=*/{1 * CENT, 3 * CENT});\n+\n+    // BnB fails to find changeless solution when overshooting by cost_of_change + 1 sat\n+    TestBnBFail(\"Overshoot upper bound\", utxo_pool, /*selection_target=*/4 * CENT - default_cs_params.m_cost_of_change - 1);\n+\n+    // Simple cases without BnB solution\n+    TestBnBFail(\"Smallest combination too big\", utxo_pool, /*selection_target=*/0.5 * CENT);\n+    TestBnBFail(\"No UTXO combination in target window\", utxo_pool, /*selection_target=*/7 * CENT);\n+    TestBnBFail(\"Select more than available\", utxo_pool, /*selection_target=*/10 * CENT);\n+\n+    // Test skipping of equivalent input sets\n+    std::vector<OutputGroup> clone_pool;\n+    AddCoins(clone_pool, {2 * CENT, 7 * CENT, 7 * CENT});\n+    AddDuplicateCoins(clone_pool, 50'000, 5 * CENT);\n+    TestBnBSuccess(\"Skip equivalent input sets\", clone_pool, /*selection_target=*/16 * CENT, /*expected_input_amounts=*/{2 * CENT, 7 * CENT, 7 * CENT});\n+\n+    // Test BnB attempt limit\n+    std::vector<OutputGroup> doppelganger_pool;\n+    std::vector<CAmount> doppelgangers;\n+    std::vector<CAmount> expected_inputs;\n+    for (int i = 0; i < 17; ++i) {\n+        if (i < 8) {\n+            // 8 smallest UTXOs can be combined to create expected_result\n+            doppelgangers.push_back(1 * CENT + i);\n+            expected_inputs.push_back(doppelgangers[i]);\n+        } else {\n+            // Any 8 UTXOs including at least one UTXO with the added cost_of_change will exceed target window\n+            doppelgangers.push_back(1 * CENT + default_cs_params.m_cost_of_change + i);\n+        }\n+    }\n+    AddCoins(doppelganger_pool, doppelgangers);\n+    // Among up to 17 unique UTXOs of similar effective value we will find a solution composed of the eight smallest\n+    TestBnBSuccess(\"Combine smallest 8 of 17 unique UTXOs\", doppelganger_pool, /*selection_target=*/8 * CENT, /*expected_input_amounts=*/expected_inputs);\n+\n+    // Starting with 18 unique UTXOs of similar effective value we will not find the solution\n+    AddCoins(doppelganger_pool, {1 * CENT + default_cs_params.m_cost_of_change + 17});\n+    TestBnBFail(\"Exhaust looking for smallest 8 of 18 unique UTXOs\", doppelganger_pool, /*selection_target=*/8 * CENT);\n+}",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 165,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "639a0dd520d747a189a9d874d2a2888fb8b553f2",
      "in_reply_to_id": null,
      "user": {
        "login": "jasonribble",
        "id": 80722374,
        "node_id": "MDQ6VXNlcjgwNzIyMzc0",
        "avatar_url": "https://avatars.githubusercontent.com/u/80722374?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonribble",
        "html_url": "https://github.com/jasonribble",
        "followers_url": "https://api.github.com/users/jasonribble/followers",
        "following_url": "https://api.github.com/users/jasonribble/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonribble/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonribble/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonribble/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonribble/orgs",
        "repos_url": "https://api.github.com/users/jasonribble/repos",
        "events_url": "https://api.github.com/users/jasonribble/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonribble/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: perhaps the comment on line 144 can be more descriptive for this part. (or the comments in general can be improved). It's the strangest test in the group. ",
      "created_at": "2024-10-24T22:28:50Z",
      "updated_at": "2024-10-24T22:28:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1815773346",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815773346"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": 144,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817901340",
      "pull_request_review_id": 2397316071,
      "id": 1817901340,
      "node_id": "PRRC_kwDOABII585sWvkc",
      "diff_hunk": "@@ -0,0 +1,182 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <policy/policy.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, WalletTestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,\n+        /*change_spend_size=*/68,\n+        /*min_change_target=*/50'000,\n+        /*effective_feerate=*/CFeeRate(5000),\n+        /*long_term_feerate=*/CFeeRate(10'000),\n+        /*discard_feerate=*/CFeeRate(3000),\n+        /*tx_noinputs_size=*/11 + 31, //static header size + output size\n+        /*avoid_partial=*/false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size) + dcsp.m_change_fee;\n+    dcsp.min_viable_change = /*204 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one OutputGroup with a single UTXO that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static OutputGroup MakeCoin(const CAmount& amount, bool is_eff_value = true, CoinSelectionParams cs_params = default_cs_params, int custom_spending_vsize = 68)\n+{\n+    // Always assume that we only have one input\n+    CMutableTransaction tx;\n+    tx.vout.resize(1);\n+    CAmount fees = cs_params.m_effective_feerate.GetFee(custom_spending_vsize);\n+    tx.vout[0].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = next_lock_time++;        // so all transactions get different hashes\n+    OutputGroup group(cs_params);\n+    group.Insert(std::make_shared<COutput>(COutPoint(tx.GetHash(), 0), tx.vout.at(0), /*depth=*/1, /*input_bytes=*/custom_spending_vsize, /*spendable=*/true, /*solvable=*/true, /*safe=*/true, /*time=*/0, /*from_me=*/false, /*fees=*/fees), /*ancestors=*/0, /*descendants=*/0);\n+    return group;\n+}\n+\n+/** Make multiple OutpuGroups with the given values as their effective value */\n+static void AddCoins(std::vector<OutputGroup>& utxo_pool, std::vector<CAmount> coins, CoinSelectionParams cs_params = default_cs_params)\n+{\n+    for (CAmount c : coins) {\n+        utxo_pool.push_back(MakeCoin(c, true, cs_params));\n+    }\n+}\n+\n+/** Make multiple coins that share the same effective value */\n+static void AddDuplicateCoins(std::vector<OutputGroup>& utxo_pool, int count, int amount) {\n+    for (int i = 0 ; i < count; ++i) {\n+        utxo_pool.push_back(MakeCoin(amount));\n+    }\n+}\n+\n+/** Check if SelectionResult a is equivalent to SelectionResult b.\n+ * Equivalent means same input values, but maybe different inputs (i.e. same value, different prevout) */\n+static bool EquivalentResult(const SelectionResult& a, const SelectionResult& b)\n+{\n+    std::vector<CAmount> a_amts;\n+    std::vector<CAmount> b_amts;\n+    for (const auto& coin : a.GetInputSet()) {\n+        a_amts.push_back(coin->txout.nValue);\n+    }\n+    for (const auto& coin : b.GetInputSet()) {\n+        b_amts.push_back(coin->txout.nValue);\n+    }\n+    std::sort(a_amts.begin(), a_amts.end());\n+    std::sort(b_amts.begin(), b_amts.end());\n+\n+    std::pair<std::vector<CAmount>::iterator, std::vector<CAmount>::iterator> ret = std::mismatch(a_amts.begin(), a_amts.end(), b_amts.begin());\n+    return ret.first == a_amts.end() && ret.second == b_amts.end();\n+}\n+\n+static void TestBnBSuccess(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CoinSelectionParams& cs_params = default_cs_params)\n+{\n+    SelectionResult expected_result(CAmount(0), SelectionAlgorithm::BNB);\n+    CAmount expected_amount = 0;\n+    for (CAmount input_amount : expected_input_amounts) {\n+        OutputGroup group = MakeCoin(input_amount, true, cs_params);\n+        expected_amount += group.m_value;\n+        expected_result.AddInput(group);\n+    }\n+\n+    const auto result = SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/default_cs_params.m_cost_of_change, /*max_selection_weight=*/MAX_STANDARD_TX_WEIGHT);\n+    BOOST_CHECK_MESSAGE(result, \"Falsy result in BnB-Success: \" + test_title);\n+    BOOST_CHECK_MESSAGE(EquivalentResult(expected_result, *result), \"Result mismatch in BnB-Success: \" + test_title);\n+    BOOST_CHECK_MESSAGE(result->GetSelectedValue() == expected_amount, \"Selected amount mismatch in BnB-Success: \" + test_title);\n+}\n+\n+static void TestBnBFail(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target)\n+{\n+    BOOST_CHECK_MESSAGE(!SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/default_cs_params.m_cost_of_change, /*max_selection_weight=*/MAX_STANDARD_TX_WEIGHT), \"BnB-Fail: \" + test_title);\n+}\n+\n+BOOST_AUTO_TEST_CASE(bnb_test)\n+{\n+    std::vector<OutputGroup> utxo_pool;\n+\n+    // Fail for empty UTXO pool\n+    TestBnBFail(\"Empty UTXO pool\", utxo_pool, /*selection_target=*/1 * CENT);\n+\n+    AddCoins(utxo_pool, {1 * CENT, 3 * CENT, 5 * CENT});\n+\n+    // Simple success cases\n+    TestBnBSuccess(\"Select smallest UTXO\", utxo_pool, /*selection_target=*/1 * CENT, /*expected_input_amounts=*/{1 * CENT});\n+    TestBnBSuccess(\"Select middle UTXO\", utxo_pool, /*selection_target=*/3 * CENT, /*expected_input_amounts=*/{3 * CENT});\n+    TestBnBSuccess(\"Select biggest UTXO\", utxo_pool, /*selection_target=*/5 * CENT, /*expected_input_amounts=*/{5 * CENT});\n+    TestBnBSuccess(\"Select two UTXOs\", utxo_pool, /*selection_target=*/4 * CENT, /*expected_input_amounts=*/{1 * CENT, 3 * CENT});\n+    TestBnBSuccess(\"Select all UTXOs\", utxo_pool, /*selection_target=*/9 * CENT, /*expected_input_amounts=*/{1 * CENT, 3 * CENT, 5 * CENT});\n+\n+    // BnB finds changeless solution while overshooting by up to cost_of_change\n+    TestBnBSuccess(\"Select upper bound\", utxo_pool, /*selection_target=*/4 * CENT - default_cs_params.m_cost_of_change, /*expected_input_amounts=*/{1 * CENT, 3 * CENT});\n+\n+    // BnB fails to find changeless solution when overshooting by cost_of_change + 1 sat\n+    TestBnBFail(\"Overshoot upper bound\", utxo_pool, /*selection_target=*/4 * CENT - default_cs_params.m_cost_of_change - 1);\n+\n+    // Simple cases without BnB solution\n+    TestBnBFail(\"Smallest combination too big\", utxo_pool, /*selection_target=*/0.5 * CENT);\n+    TestBnBFail(\"No UTXO combination in target window\", utxo_pool, /*selection_target=*/7 * CENT);\n+    TestBnBFail(\"Select more than available\", utxo_pool, /*selection_target=*/10 * CENT);\n+\n+    // Test skipping of equivalent input sets\n+    std::vector<OutputGroup> clone_pool;\n+    AddCoins(clone_pool, {2 * CENT, 7 * CENT, 7 * CENT});\n+    AddDuplicateCoins(clone_pool, 50'000, 5 * CENT);\n+    TestBnBSuccess(\"Skip equivalent input sets\", clone_pool, /*selection_target=*/16 * CENT, /*expected_input_amounts=*/{2 * CENT, 7 * CENT, 7 * CENT});\n+\n+    // Test BnB attempt limit\n+    std::vector<OutputGroup> doppelganger_pool;\n+    std::vector<CAmount> doppelgangers;\n+    std::vector<CAmount> expected_inputs;\n+    for (int i = 0; i < 17; ++i) {\n+        if (i < 8) {\n+            // 8 smallest UTXOs can be combined to create expected_result\n+            doppelgangers.push_back(1 * CENT + i);\n+            expected_inputs.push_back(doppelgangers[i]);\n+        } else {\n+            // Any 8 UTXOs including at least one UTXO with the added cost_of_change will exceed target window\n+            doppelgangers.push_back(1 * CENT + default_cs_params.m_cost_of_change + i);\n+        }\n+    }\n+    AddCoins(doppelganger_pool, doppelgangers);\n+    // Among up to 17 unique UTXOs of similar effective value we will find a solution composed of the eight smallest\n+    TestBnBSuccess(\"Combine smallest 8 of 17 unique UTXOs\", doppelganger_pool, /*selection_target=*/8 * CENT, /*expected_input_amounts=*/expected_inputs);\n+\n+    // Starting with 18 unique UTXOs of similar effective value we will not find the solution\n+    AddCoins(doppelganger_pool, {1 * CENT + default_cs_params.m_cost_of_change + 17});\n+    TestBnBFail(\"Exhaust looking for smallest 8 of 18 unique UTXOs\", doppelganger_pool, /*selection_target=*/8 * CENT);\n+}",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 165,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "639a0dd520d747a189a9d874d2a2888fb8b553f2",
      "in_reply_to_id": 1815773346,
      "user": {
        "login": "jasonribble",
        "id": 80722374,
        "node_id": "MDQ6VXNlcjgwNzIyMzc0",
        "avatar_url": "https://avatars.githubusercontent.com/u/80722374?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonribble",
        "html_url": "https://github.com/jasonribble",
        "followers_url": "https://api.github.com/users/jasonribble/followers",
        "following_url": "https://api.github.com/users/jasonribble/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonribble/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonribble/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonribble/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonribble/orgs",
        "repos_url": "https://api.github.com/users/jasonribble/repos",
        "events_url": "https://api.github.com/users/jasonribble/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonribble/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "maybe you can rename the \"18\" value as a BnB threshold ",
      "created_at": "2024-10-26T18:19:30Z",
      "updated_at": "2024-10-26T18:19:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1817901340",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817901340"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": 144,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1819473572",
      "pull_request_review_id": 2399754338,
      "id": 1819473572,
      "node_id": "PRRC_kwDOABII585scvak",
      "diff_hunk": "@@ -0,0 +1,182 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <policy/policy.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, WalletTestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,\n+        /*change_spend_size=*/68,\n+        /*min_change_target=*/50'000,\n+        /*effective_feerate=*/CFeeRate(5000),\n+        /*long_term_feerate=*/CFeeRate(10'000),\n+        /*discard_feerate=*/CFeeRate(3000),\n+        /*tx_noinputs_size=*/11 + 31, //static header size + output size\n+        /*avoid_partial=*/false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size) + dcsp.m_change_fee;\n+    dcsp.min_viable_change = /*204 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one OutputGroup with a single UTXO that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static OutputGroup MakeCoin(const CAmount& amount, bool is_eff_value = true, CoinSelectionParams cs_params = default_cs_params, int custom_spending_vsize = 68)\n+{\n+    // Always assume that we only have one input\n+    CMutableTransaction tx;\n+    tx.vout.resize(1);\n+    CAmount fees = cs_params.m_effective_feerate.GetFee(custom_spending_vsize);\n+    tx.vout[0].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = next_lock_time++;        // so all transactions get different hashes\n+    OutputGroup group(cs_params);\n+    group.Insert(std::make_shared<COutput>(COutPoint(tx.GetHash(), 0), tx.vout.at(0), /*depth=*/1, /*input_bytes=*/custom_spending_vsize, /*spendable=*/true, /*solvable=*/true, /*safe=*/true, /*time=*/0, /*from_me=*/false, /*fees=*/fees), /*ancestors=*/0, /*descendants=*/0);\n+    return group;\n+}\n+\n+/** Make multiple OutpuGroups with the given values as their effective value */",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "639a0dd520d747a189a9d874d2a2888fb8b553f2",
      "in_reply_to_id": null,
      "user": {
        "login": "vicariousdrama",
        "id": 88121568,
        "node_id": "MDQ6VXNlcjg4MTIxNTY4",
        "avatar_url": "https://avatars.githubusercontent.com/u/88121568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vicariousdrama",
        "html_url": "https://github.com/vicariousdrama",
        "followers_url": "https://api.github.com/users/vicariousdrama/followers",
        "following_url": "https://api.github.com/users/vicariousdrama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vicariousdrama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vicariousdrama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vicariousdrama/subscriptions",
        "organizations_url": "https://api.github.com/users/vicariousdrama/orgs",
        "repos_url": "https://api.github.com/users/vicariousdrama/repos",
        "events_url": "https://api.github.com/users/vicariousdrama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vicariousdrama/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "minor spelling: OutputGroups",
      "created_at": "2024-10-28T17:31:49Z",
      "updated_at": "2024-10-28T18:59:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1819473572",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1819473572"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1819476976",
      "pull_request_review_id": 2399754338,
      "id": 1819476976,
      "node_id": "PRRC_kwDOABII585scwPw",
      "diff_hunk": "@@ -0,0 +1,182 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <policy/policy.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, WalletTestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,\n+        /*change_spend_size=*/68,\n+        /*min_change_target=*/50'000,\n+        /*effective_feerate=*/CFeeRate(5000),\n+        /*long_term_feerate=*/CFeeRate(10'000),\n+        /*discard_feerate=*/CFeeRate(3000),\n+        /*tx_noinputs_size=*/11 + 31, //static header size + output size\n+        /*avoid_partial=*/false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size) + dcsp.m_change_fee;\n+    dcsp.min_viable_change = /*204 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": 35,
      "original_position": 35,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "639a0dd520d747a189a9d874d2a2888fb8b553f2",
      "in_reply_to_id": null,
      "user": {
        "login": "vicariousdrama",
        "id": 88121568,
        "node_id": "MDQ6VXNlcjg4MTIxNTY4",
        "avatar_url": "https://avatars.githubusercontent.com/u/88121568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vicariousdrama",
        "html_url": "https://github.com/vicariousdrama",
        "followers_url": "https://api.github.com/users/vicariousdrama/followers",
        "following_url": "https://api.github.com/users/vicariousdrama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vicariousdrama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vicariousdrama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vicariousdrama/subscriptions",
        "organizations_url": "https://api.github.com/users/vicariousdrama/orgs",
        "repos_url": "https://api.github.com/users/vicariousdrama/repos",
        "events_url": "https://api.github.com/users/vicariousdrama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vicariousdrama/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Can we eliminate a call to GetFee via reordering assignment?\r\n```\r\n    dcsp.m_change_fee = /*155 sats=*/dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\r\n    dcsp.min_viable_change = /*204 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\r\n    dcsp.m_cost_of_change = /*204 + 155 sats=*/dcsp.min_viable_change + dcsp.m_change_fee;\r\n```",
      "created_at": "2024-10-28T17:33:58Z",
      "updated_at": "2024-10-28T18:59:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1819476976",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1819476976"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 35,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1819508593",
      "pull_request_review_id": 2399754338,
      "id": 1819508593,
      "node_id": "PRRC_kwDOABII585sc39x",
      "diff_hunk": "@@ -9,6 +9,7 @@ target_sources(test_bitcoin\n     init_test_fixture.cpp\n     wallet_test_fixture.cpp\n     coinselector_tests.cpp\n+    coinselection_tests.cpp",
      "path": "src/wallet/test/CMakeLists.txt",
      "position": 4,
      "original_position": 4,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "639a0dd520d747a189a9d874d2a2888fb8b553f2",
      "in_reply_to_id": null,
      "user": {
        "login": "vicariousdrama",
        "id": 88121568,
        "node_id": "MDQ6VXNlcjg4MTIxNTY4",
        "avatar_url": "https://avatars.githubusercontent.com/u/88121568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vicariousdrama",
        "html_url": "https://github.com/vicariousdrama",
        "followers_url": "https://api.github.com/users/vicariousdrama/followers",
        "following_url": "https://api.github.com/users/vicariousdrama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vicariousdrama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vicariousdrama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vicariousdrama/subscriptions",
        "organizations_url": "https://api.github.com/users/vicariousdrama/orgs",
        "repos_url": "https://api.github.com/users/vicariousdrama/repos",
        "events_url": "https://api.github.com/users/vicariousdrama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vicariousdrama/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is this name going to set this portion of tests apart enough to be meaningful? It seems only some of the BnB tests that were present in coinselector_tests have been refactored",
      "created_at": "2024-10-28T17:56:41Z",
      "updated_at": "2024-10-28T18:59:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1819508593",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1819508593"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 13,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1819541160",
      "pull_request_review_id": 2399754338,
      "id": 1819541160,
      "node_id": "PRRC_kwDOABII585sc_6o",
      "diff_hunk": "@@ -0,0 +1,182 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <policy/policy.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, WalletTestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,\n+        /*change_spend_size=*/68,\n+        /*min_change_target=*/50'000,\n+        /*effective_feerate=*/CFeeRate(5000),\n+        /*long_term_feerate=*/CFeeRate(10'000),\n+        /*discard_feerate=*/CFeeRate(3000),\n+        /*tx_noinputs_size=*/11 + 31, //static header size + output size\n+        /*avoid_partial=*/false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size) + dcsp.m_change_fee;\n+    dcsp.min_viable_change = /*204 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one OutputGroup with a single UTXO that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static OutputGroup MakeCoin(const CAmount& amount, bool is_eff_value = true, CoinSelectionParams cs_params = default_cs_params, int custom_spending_vsize = 68)\n+{\n+    // Always assume that we only have one input\n+    CMutableTransaction tx;\n+    tx.vout.resize(1);\n+    CAmount fees = cs_params.m_effective_feerate.GetFee(custom_spending_vsize);\n+    tx.vout[0].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = next_lock_time++;        // so all transactions get different hashes\n+    OutputGroup group(cs_params);\n+    group.Insert(std::make_shared<COutput>(COutPoint(tx.GetHash(), 0), tx.vout.at(0), /*depth=*/1, /*input_bytes=*/custom_spending_vsize, /*spendable=*/true, /*solvable=*/true, /*safe=*/true, /*time=*/0, /*from_me=*/false, /*fees=*/fees), /*ancestors=*/0, /*descendants=*/0);\n+    return group;\n+}\n+\n+/** Make multiple OutpuGroups with the given values as their effective value */\n+static void AddCoins(std::vector<OutputGroup>& utxo_pool, std::vector<CAmount> coins, CoinSelectionParams cs_params = default_cs_params)\n+{\n+    for (CAmount c : coins) {\n+        utxo_pool.push_back(MakeCoin(c, true, cs_params));\n+    }\n+}\n+\n+/** Make multiple coins that share the same effective value */\n+static void AddDuplicateCoins(std::vector<OutputGroup>& utxo_pool, int count, int amount) {\n+    for (int i = 0 ; i < count; ++i) {\n+        utxo_pool.push_back(MakeCoin(amount));\n+    }\n+}\n+\n+/** Check if SelectionResult a is equivalent to SelectionResult b.\n+ * Equivalent means same input values, but maybe different inputs (i.e. same value, different prevout) */\n+static bool EquivalentResult(const SelectionResult& a, const SelectionResult& b)\n+{\n+    std::vector<CAmount> a_amts;\n+    std::vector<CAmount> b_amts;\n+    for (const auto& coin : a.GetInputSet()) {\n+        a_amts.push_back(coin->txout.nValue);\n+    }\n+    for (const auto& coin : b.GetInputSet()) {\n+        b_amts.push_back(coin->txout.nValue);\n+    }\n+    std::sort(a_amts.begin(), a_amts.end());\n+    std::sort(b_amts.begin(), b_amts.end());\n+\n+    std::pair<std::vector<CAmount>::iterator, std::vector<CAmount>::iterator> ret = std::mismatch(a_amts.begin(), a_amts.end(), b_amts.begin());\n+    return ret.first == a_amts.end() && ret.second == b_amts.end();\n+}\n+\n+static void TestBnBSuccess(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CoinSelectionParams& cs_params = default_cs_params)\n+{\n+    SelectionResult expected_result(CAmount(0), SelectionAlgorithm::BNB);\n+    CAmount expected_amount = 0;\n+    for (CAmount input_amount : expected_input_amounts) {\n+        OutputGroup group = MakeCoin(input_amount, true, cs_params);\n+        expected_amount += group.m_value;\n+        expected_result.AddInput(group);\n+    }\n+\n+    const auto result = SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/default_cs_params.m_cost_of_change, /*max_selection_weight=*/MAX_STANDARD_TX_WEIGHT);\n+    BOOST_CHECK_MESSAGE(result, \"Falsy result in BnB-Success: \" + test_title);\n+    BOOST_CHECK_MESSAGE(EquivalentResult(expected_result, *result), \"Result mismatch in BnB-Success: \" + test_title);\n+    BOOST_CHECK_MESSAGE(result->GetSelectedValue() == expected_amount, \"Selected amount mismatch in BnB-Success: \" + test_title);\n+}\n+\n+static void TestBnBFail(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target)\n+{\n+    BOOST_CHECK_MESSAGE(!SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/default_cs_params.m_cost_of_change, /*max_selection_weight=*/MAX_STANDARD_TX_WEIGHT), \"BnB-Fail: \" + test_title);\n+}\n+\n+BOOST_AUTO_TEST_CASE(bnb_test)\n+{\n+    std::vector<OutputGroup> utxo_pool;\n+\n+    // Fail for empty UTXO pool\n+    TestBnBFail(\"Empty UTXO pool\", utxo_pool, /*selection_target=*/1 * CENT);\n+\n+    AddCoins(utxo_pool, {1 * CENT, 3 * CENT, 5 * CENT});\n+\n+    // Simple success cases\n+    TestBnBSuccess(\"Select smallest UTXO\", utxo_pool, /*selection_target=*/1 * CENT, /*expected_input_amounts=*/{1 * CENT});\n+    TestBnBSuccess(\"Select middle UTXO\", utxo_pool, /*selection_target=*/3 * CENT, /*expected_input_amounts=*/{3 * CENT});\n+    TestBnBSuccess(\"Select biggest UTXO\", utxo_pool, /*selection_target=*/5 * CENT, /*expected_input_amounts=*/{5 * CENT});\n+    TestBnBSuccess(\"Select two UTXOs\", utxo_pool, /*selection_target=*/4 * CENT, /*expected_input_amounts=*/{1 * CENT, 3 * CENT});\n+    TestBnBSuccess(\"Select all UTXOs\", utxo_pool, /*selection_target=*/9 * CENT, /*expected_input_amounts=*/{1 * CENT, 3 * CENT, 5 * CENT});\n+\n+    // BnB finds changeless solution while overshooting by up to cost_of_change\n+    TestBnBSuccess(\"Select upper bound\", utxo_pool, /*selection_target=*/4 * CENT - default_cs_params.m_cost_of_change, /*expected_input_amounts=*/{1 * CENT, 3 * CENT});\n+\n+    // BnB fails to find changeless solution when overshooting by cost_of_change + 1 sat\n+    TestBnBFail(\"Overshoot upper bound\", utxo_pool, /*selection_target=*/4 * CENT - default_cs_params.m_cost_of_change - 1);\n+\n+    // Simple cases without BnB solution\n+    TestBnBFail(\"Smallest combination too big\", utxo_pool, /*selection_target=*/0.5 * CENT);\n+    TestBnBFail(\"No UTXO combination in target window\", utxo_pool, /*selection_target=*/7 * CENT);\n+    TestBnBFail(\"Select more than available\", utxo_pool, /*selection_target=*/10 * CENT);\n+\n+    // Test skipping of equivalent input sets\n+    std::vector<OutputGroup> clone_pool;\n+    AddCoins(clone_pool, {2 * CENT, 7 * CENT, 7 * CENT});\n+    AddDuplicateCoins(clone_pool, 50'000, 5 * CENT);\n+    TestBnBSuccess(\"Skip equivalent input sets\", clone_pool, /*selection_target=*/16 * CENT, /*expected_input_amounts=*/{2 * CENT, 7 * CENT, 7 * CENT});\n+\n+    // Test BnB attempt limit\n+    std::vector<OutputGroup> doppelganger_pool;\n+    std::vector<CAmount> doppelgangers;\n+    std::vector<CAmount> expected_inputs;\n+    for (int i = 0; i < 17; ++i) {\n+        if (i < 8) {\n+            // 8 smallest UTXOs can be combined to create expected_result\n+            doppelgangers.push_back(1 * CENT + i);\n+            expected_inputs.push_back(doppelgangers[i]);\n+        } else {\n+            // Any 8 UTXOs including at least one UTXO with the added cost_of_change will exceed target window\n+            doppelgangers.push_back(1 * CENT + default_cs_params.m_cost_of_change + i);\n+        }\n+    }\n+    AddCoins(doppelganger_pool, doppelgangers);\n+    // Among up to 17 unique UTXOs of similar effective value we will find a solution composed of the eight smallest\n+    TestBnBSuccess(\"Combine smallest 8 of 17 unique UTXOs\", doppelganger_pool, /*selection_target=*/8 * CENT, /*expected_input_amounts=*/expected_inputs);\n+\n+    // Starting with 18 unique UTXOs of similar effective value we will not find the solution\n+    AddCoins(doppelganger_pool, {1 * CENT + default_cs_params.m_cost_of_change + 17});\n+    TestBnBFail(\"Exhaust looking for smallest 8 of 18 unique UTXOs\", doppelganger_pool, /*selection_target=*/8 * CENT);",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 164,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "639a0dd520d747a189a9d874d2a2888fb8b553f2",
      "in_reply_to_id": null,
      "user": {
        "login": "vicariousdrama",
        "id": 88121568,
        "node_id": "MDQ6VXNlcjg4MTIxNTY4",
        "avatar_url": "https://avatars.githubusercontent.com/u/88121568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vicariousdrama",
        "html_url": "https://github.com/vicariousdrama",
        "followers_url": "https://api.github.com/users/vicariousdrama/followers",
        "following_url": "https://api.github.com/users/vicariousdrama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vicariousdrama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vicariousdrama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vicariousdrama/subscriptions",
        "organizations_url": "https://api.github.com/users/vicariousdrama/orgs",
        "repos_url": "https://api.github.com/users/vicariousdrama/repos",
        "events_url": "https://api.github.com/users/vicariousdrama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vicariousdrama/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This segment of code appears to me to be intended to refactor the make_hard_case exhaustion tests, but with differing amounts (17,18 vs. 14,17) and construction (amount = iterative CENT + i vs. bitshifting?). Isn't there double the coins being created in the make_hard_case? I appreciate that this format is more readable, though it's unclear to me why one should exhaust based on the given coin sizes and quantity.  Is this related to src/wallet/coinselection.cpp setting TOTAL_TRIES to 100,000 constraining the useful effective traversal depth?",
      "created_at": "2024-10-28T18:22:49Z",
      "updated_at": "2024-10-28T18:59:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1819541160",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1819541160"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": 144,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1819544428",
      "pull_request_review_id": 2399754338,
      "id": 1819544428,
      "node_id": "PRRC_kwDOABII585sdAts",
      "diff_hunk": "@@ -133,18 +124,6 @@ static bool EqualResult(const SelectionResult& a, const SelectionResult& b)\n     return ret.first == a.GetInputSet().end() && ret.second == b.GetInputSet().end();\n }\n \n-static CAmount make_hard_case(int utxos, std::vector<COutput>& utxo_pool)\n-{\n-    utxo_pool.clear();\n-    CAmount target = 0;\n-    for (int i = 0; i < utxos; ++i) {\n-        target += CAmount{1} << (utxos+i);\n-        add_coin(CAmount{1} << (utxos+i), 2*i, utxo_pool);\n-        add_coin((CAmount{1} << (utxos+i)) + (CAmount{1} << (utxos-1-i)), 2*i + 1, utxo_pool);\n-    }\n-    return target;\n-}\n-",
      "path": "src/wallet/test/coinselector_tests.cpp",
      "position": 31,
      "original_position": 31,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "639a0dd520d747a189a9d874d2a2888fb8b553f2",
      "in_reply_to_id": null,
      "user": {
        "login": "vicariousdrama",
        "id": 88121568,
        "node_id": "MDQ6VXNlcjg4MTIxNTY4",
        "avatar_url": "https://avatars.githubusercontent.com/u/88121568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vicariousdrama",
        "html_url": "https://github.com/vicariousdrama",
        "followers_url": "https://api.github.com/users/vicariousdrama/followers",
        "following_url": "https://api.github.com/users/vicariousdrama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vicariousdrama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vicariousdrama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vicariousdrama/subscriptions",
        "organizations_url": "https://api.github.com/users/vicariousdrama/orgs",
        "repos_url": "https://api.github.com/users/vicariousdrama/repos",
        "events_url": "https://api.github.com/users/vicariousdrama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vicariousdrama/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Worth noting that src/bench/coin_selection.cpp makes a copy of the make_hard_case function (commenting as such), so removal here may lead to confusion unless that benchmark is also updated.",
      "created_at": "2024-10-28T18:24:26Z",
      "updated_at": "2024-10-28T18:59:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1819544428",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1819544428"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": 136,
      "original_start_line": 136,
      "start_side": "LEFT",
      "line": 147,
      "original_line": 147,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1819601522",
      "pull_request_review_id": 2399967572,
      "id": 1819601522,
      "node_id": "PRRC_kwDOABII585sdOpy",
      "diff_hunk": "@@ -9,6 +9,7 @@ target_sources(test_bitcoin\n     init_test_fixture.cpp\n     wallet_test_fixture.cpp\n     coinselector_tests.cpp\n+    coinselection_tests.cpp",
      "path": "src/wallet/test/CMakeLists.txt",
      "position": 4,
      "original_position": 4,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "639a0dd520d747a189a9d874d2a2888fb8b553f2",
      "in_reply_to_id": 1819508593,
      "user": {
        "login": "vicariousdrama",
        "id": 88121568,
        "node_id": "MDQ6VXNlcjg4MTIxNTY4",
        "avatar_url": "https://avatars.githubusercontent.com/u/88121568?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vicariousdrama",
        "html_url": "https://github.com/vicariousdrama",
        "followers_url": "https://api.github.com/users/vicariousdrama/followers",
        "following_url": "https://api.github.com/users/vicariousdrama/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vicariousdrama/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vicariousdrama/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vicariousdrama/subscriptions",
        "organizations_url": "https://api.github.com/users/vicariousdrama/orgs",
        "repos_url": "https://api.github.com/users/vicariousdrama/repos",
        "events_url": "https://api.github.com/users/vicariousdrama/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vicariousdrama/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "disregard this comment. I skipped your intent in the description",
      "created_at": "2024-10-28T19:02:11Z",
      "updated_at": "2024-10-28T19:02:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1819601522",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1819601522"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 13,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824996009",
      "pull_request_review_id": 2408805041,
      "id": 1824996009,
      "node_id": "PRRC_kwDOABII585sxzqp",
      "diff_hunk": "@@ -0,0 +1,83 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, WalletTestingSetup)",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "3522569d61095166e781105c7e6df534de60b476",
      "in_reply_to_id": 1770575892,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, great, taken!",
      "created_at": "2024-10-31T18:26:31Z",
      "updated_at": "2024-10-31T19:11:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1824996009",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824996009"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": 11,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824996376",
      "pull_request_review_id": 2408805041,
      "id": 1824996376,
      "node_id": "PRRC_kwDOABII585sxzwY",
      "diff_hunk": "@@ -0,0 +1,182 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <policy/policy.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, WalletTestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,\n+        /*change_spend_size=*/68,\n+        /*min_change_target=*/50'000,\n+        /*effective_feerate=*/CFeeRate(5000),\n+        /*long_term_feerate=*/CFeeRate(10'000),\n+        /*discard_feerate=*/CFeeRate(3000),\n+        /*tx_noinputs_size=*/11 + 31, //static header size + output size\n+        /*avoid_partial=*/false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size) + dcsp.m_change_fee;\n+    dcsp.min_viable_change = /*204 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": 35,
      "original_position": 35,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "639a0dd520d747a189a9d874d2a2888fb8b553f2",
      "in_reply_to_id": 1819476976,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, great suggestion. I’ve adopted that change.",
      "created_at": "2024-10-31T18:26:51Z",
      "updated_at": "2024-10-31T19:11:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1824996376",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824996376"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 35,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825000480",
      "pull_request_review_id": 2408805041,
      "id": 1825000480,
      "node_id": "PRRC_kwDOABII585sx0wg",
      "diff_hunk": "@@ -9,6 +9,7 @@ target_sources(test_bitcoin\n     init_test_fixture.cpp\n     wallet_test_fixture.cpp\n     coinselector_tests.cpp\n+    coinselection_tests.cpp",
      "path": "src/wallet/test/CMakeLists.txt",
      "position": 4,
      "original_position": 4,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "639a0dd520d747a189a9d874d2a2888fb8b553f2",
      "in_reply_to_id": 1819508593,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah, as explained, the intention is to rewrite all coinselection tests with transactions that could be encountered in the wild rather than the artificial zero-fee transactions the old tests are using.",
      "created_at": "2024-10-31T18:29:28Z",
      "updated_at": "2024-10-31T19:11:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1825000480",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825000480"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 13,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825015274",
      "pull_request_review_id": 2408805041,
      "id": 1825015274,
      "node_id": "PRRC_kwDOABII585sx4Xq",
      "diff_hunk": "@@ -0,0 +1,182 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <policy/policy.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, WalletTestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,\n+        /*change_spend_size=*/68,\n+        /*min_change_target=*/50'000,\n+        /*effective_feerate=*/CFeeRate(5000),\n+        /*long_term_feerate=*/CFeeRate(10'000),\n+        /*discard_feerate=*/CFeeRate(3000),\n+        /*tx_noinputs_size=*/11 + 31, //static header size + output size\n+        /*avoid_partial=*/false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size) + dcsp.m_change_fee;\n+    dcsp.min_viable_change = /*204 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one OutputGroup with a single UTXO that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static OutputGroup MakeCoin(const CAmount& amount, bool is_eff_value = true, CoinSelectionParams cs_params = default_cs_params, int custom_spending_vsize = 68)\n+{\n+    // Always assume that we only have one input\n+    CMutableTransaction tx;\n+    tx.vout.resize(1);\n+    CAmount fees = cs_params.m_effective_feerate.GetFee(custom_spending_vsize);\n+    tx.vout[0].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = next_lock_time++;        // so all transactions get different hashes\n+    OutputGroup group(cs_params);\n+    group.Insert(std::make_shared<COutput>(COutPoint(tx.GetHash(), 0), tx.vout.at(0), /*depth=*/1, /*input_bytes=*/custom_spending_vsize, /*spendable=*/true, /*solvable=*/true, /*safe=*/true, /*time=*/0, /*from_me=*/false, /*fees=*/fees), /*ancestors=*/0, /*descendants=*/0);\n+    return group;\n+}\n+\n+/** Make multiple OutpuGroups with the given values as their effective value */\n+static void AddCoins(std::vector<OutputGroup>& utxo_pool, std::vector<CAmount> coins, CoinSelectionParams cs_params = default_cs_params)\n+{\n+    for (CAmount c : coins) {\n+        utxo_pool.push_back(MakeCoin(c, true, cs_params));\n+    }\n+}\n+\n+/** Make multiple coins that share the same effective value */\n+static void AddDuplicateCoins(std::vector<OutputGroup>& utxo_pool, int count, int amount) {\n+    for (int i = 0 ; i < count; ++i) {\n+        utxo_pool.push_back(MakeCoin(amount));\n+    }\n+}\n+\n+/** Check if SelectionResult a is equivalent to SelectionResult b.\n+ * Equivalent means same input values, but maybe different inputs (i.e. same value, different prevout) */\n+static bool EquivalentResult(const SelectionResult& a, const SelectionResult& b)\n+{\n+    std::vector<CAmount> a_amts;\n+    std::vector<CAmount> b_amts;\n+    for (const auto& coin : a.GetInputSet()) {\n+        a_amts.push_back(coin->txout.nValue);\n+    }\n+    for (const auto& coin : b.GetInputSet()) {\n+        b_amts.push_back(coin->txout.nValue);\n+    }\n+    std::sort(a_amts.begin(), a_amts.end());\n+    std::sort(b_amts.begin(), b_amts.end());\n+\n+    std::pair<std::vector<CAmount>::iterator, std::vector<CAmount>::iterator> ret = std::mismatch(a_amts.begin(), a_amts.end(), b_amts.begin());\n+    return ret.first == a_amts.end() && ret.second == b_amts.end();\n+}\n+\n+static void TestBnBSuccess(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CoinSelectionParams& cs_params = default_cs_params)\n+{\n+    SelectionResult expected_result(CAmount(0), SelectionAlgorithm::BNB);\n+    CAmount expected_amount = 0;\n+    for (CAmount input_amount : expected_input_amounts) {\n+        OutputGroup group = MakeCoin(input_amount, true, cs_params);\n+        expected_amount += group.m_value;\n+        expected_result.AddInput(group);\n+    }\n+\n+    const auto result = SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/default_cs_params.m_cost_of_change, /*max_selection_weight=*/MAX_STANDARD_TX_WEIGHT);\n+    BOOST_CHECK_MESSAGE(result, \"Falsy result in BnB-Success: \" + test_title);\n+    BOOST_CHECK_MESSAGE(EquivalentResult(expected_result, *result), \"Result mismatch in BnB-Success: \" + test_title);\n+    BOOST_CHECK_MESSAGE(result->GetSelectedValue() == expected_amount, \"Selected amount mismatch in BnB-Success: \" + test_title);\n+}\n+\n+static void TestBnBFail(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target)\n+{\n+    BOOST_CHECK_MESSAGE(!SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/default_cs_params.m_cost_of_change, /*max_selection_weight=*/MAX_STANDARD_TX_WEIGHT), \"BnB-Fail: \" + test_title);\n+}\n+\n+BOOST_AUTO_TEST_CASE(bnb_test)\n+{\n+    std::vector<OutputGroup> utxo_pool;\n+\n+    // Fail for empty UTXO pool\n+    TestBnBFail(\"Empty UTXO pool\", utxo_pool, /*selection_target=*/1 * CENT);\n+\n+    AddCoins(utxo_pool, {1 * CENT, 3 * CENT, 5 * CENT});\n+\n+    // Simple success cases\n+    TestBnBSuccess(\"Select smallest UTXO\", utxo_pool, /*selection_target=*/1 * CENT, /*expected_input_amounts=*/{1 * CENT});\n+    TestBnBSuccess(\"Select middle UTXO\", utxo_pool, /*selection_target=*/3 * CENT, /*expected_input_amounts=*/{3 * CENT});\n+    TestBnBSuccess(\"Select biggest UTXO\", utxo_pool, /*selection_target=*/5 * CENT, /*expected_input_amounts=*/{5 * CENT});\n+    TestBnBSuccess(\"Select two UTXOs\", utxo_pool, /*selection_target=*/4 * CENT, /*expected_input_amounts=*/{1 * CENT, 3 * CENT});\n+    TestBnBSuccess(\"Select all UTXOs\", utxo_pool, /*selection_target=*/9 * CENT, /*expected_input_amounts=*/{1 * CENT, 3 * CENT, 5 * CENT});\n+\n+    // BnB finds changeless solution while overshooting by up to cost_of_change\n+    TestBnBSuccess(\"Select upper bound\", utxo_pool, /*selection_target=*/4 * CENT - default_cs_params.m_cost_of_change, /*expected_input_amounts=*/{1 * CENT, 3 * CENT});\n+\n+    // BnB fails to find changeless solution when overshooting by cost_of_change + 1 sat\n+    TestBnBFail(\"Overshoot upper bound\", utxo_pool, /*selection_target=*/4 * CENT - default_cs_params.m_cost_of_change - 1);\n+\n+    // Simple cases without BnB solution\n+    TestBnBFail(\"Smallest combination too big\", utxo_pool, /*selection_target=*/0.5 * CENT);\n+    TestBnBFail(\"No UTXO combination in target window\", utxo_pool, /*selection_target=*/7 * CENT);\n+    TestBnBFail(\"Select more than available\", utxo_pool, /*selection_target=*/10 * CENT);\n+\n+    // Test skipping of equivalent input sets\n+    std::vector<OutputGroup> clone_pool;\n+    AddCoins(clone_pool, {2 * CENT, 7 * CENT, 7 * CENT});\n+    AddDuplicateCoins(clone_pool, 50'000, 5 * CENT);\n+    TestBnBSuccess(\"Skip equivalent input sets\", clone_pool, /*selection_target=*/16 * CENT, /*expected_input_amounts=*/{2 * CENT, 7 * CENT, 7 * CENT});\n+\n+    // Test BnB attempt limit\n+    std::vector<OutputGroup> doppelganger_pool;\n+    std::vector<CAmount> doppelgangers;\n+    std::vector<CAmount> expected_inputs;\n+    for (int i = 0; i < 17; ++i) {\n+        if (i < 8) {\n+            // 8 smallest UTXOs can be combined to create expected_result\n+            doppelgangers.push_back(1 * CENT + i);\n+            expected_inputs.push_back(doppelgangers[i]);\n+        } else {\n+            // Any 8 UTXOs including at least one UTXO with the added cost_of_change will exceed target window\n+            doppelgangers.push_back(1 * CENT + default_cs_params.m_cost_of_change + i);\n+        }\n+    }\n+    AddCoins(doppelganger_pool, doppelgangers);\n+    // Among up to 17 unique UTXOs of similar effective value we will find a solution composed of the eight smallest\n+    TestBnBSuccess(\"Combine smallest 8 of 17 unique UTXOs\", doppelganger_pool, /*selection_target=*/8 * CENT, /*expected_input_amounts=*/expected_inputs);\n+\n+    // Starting with 18 unique UTXOs of similar effective value we will not find the solution\n+    AddCoins(doppelganger_pool, {1 * CENT + default_cs_params.m_cost_of_change + 17});\n+    TestBnBFail(\"Exhaust looking for smallest 8 of 18 unique UTXOs\", doppelganger_pool, /*selection_target=*/8 * CENT);",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 164,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "639a0dd520d747a189a9d874d2a2888fb8b553f2",
      "in_reply_to_id": 1819541160,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, this tests that BnB will fail to find the best solution when the attempts exceed the `TOTAL_TRIES` limit of 100,000. This test follows the same approach but is slightly different than the one in the original tests. I wanted to replace the old test because I found it too difficult to parse, but I came up with my own way of testing it. I have expanded the explanation of what is going on here, and how I created this artificial example that manages to exhaust the limit with only 18 UTXOs.—To be clear, usually we would be able to handle much bigger UTXO pools and still find solutions, this UTXO pool is specifically crafted to cause all possible combinations to be explored.",
      "created_at": "2024-10-31T18:40:31Z",
      "updated_at": "2024-10-31T19:11:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1825015274",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825015274"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": 144,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825044678",
      "pull_request_review_id": 2408805041,
      "id": 1825044678,
      "node_id": "PRRC_kwDOABII585sx_jG",
      "diff_hunk": "@@ -0,0 +1,182 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <policy/policy.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, WalletTestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,\n+        /*change_spend_size=*/68,\n+        /*min_change_target=*/50'000,\n+        /*effective_feerate=*/CFeeRate(5000),\n+        /*long_term_feerate=*/CFeeRate(10'000),\n+        /*discard_feerate=*/CFeeRate(3000),\n+        /*tx_noinputs_size=*/11 + 31, //static header size + output size\n+        /*avoid_partial=*/false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size) + dcsp.m_change_fee;\n+    dcsp.min_viable_change = /*204 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one OutputGroup with a single UTXO that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static OutputGroup MakeCoin(const CAmount& amount, bool is_eff_value = true, CoinSelectionParams cs_params = default_cs_params, int custom_spending_vsize = 68)\n+{\n+    // Always assume that we only have one input\n+    CMutableTransaction tx;\n+    tx.vout.resize(1);\n+    CAmount fees = cs_params.m_effective_feerate.GetFee(custom_spending_vsize);\n+    tx.vout[0].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = next_lock_time++;        // so all transactions get different hashes\n+    OutputGroup group(cs_params);\n+    group.Insert(std::make_shared<COutput>(COutPoint(tx.GetHash(), 0), tx.vout.at(0), /*depth=*/1, /*input_bytes=*/custom_spending_vsize, /*spendable=*/true, /*solvable=*/true, /*safe=*/true, /*time=*/0, /*from_me=*/false, /*fees=*/fees), /*ancestors=*/0, /*descendants=*/0);\n+    return group;\n+}\n+\n+/** Make multiple OutpuGroups with the given values as their effective value */\n+static void AddCoins(std::vector<OutputGroup>& utxo_pool, std::vector<CAmount> coins, CoinSelectionParams cs_params = default_cs_params)\n+{\n+    for (CAmount c : coins) {\n+        utxo_pool.push_back(MakeCoin(c, true, cs_params));\n+    }\n+}\n+\n+/** Make multiple coins that share the same effective value */\n+static void AddDuplicateCoins(std::vector<OutputGroup>& utxo_pool, int count, int amount) {\n+    for (int i = 0 ; i < count; ++i) {\n+        utxo_pool.push_back(MakeCoin(amount));\n+    }\n+}\n+\n+/** Check if SelectionResult a is equivalent to SelectionResult b.\n+ * Equivalent means same input values, but maybe different inputs (i.e. same value, different prevout) */\n+static bool EquivalentResult(const SelectionResult& a, const SelectionResult& b)\n+{\n+    std::vector<CAmount> a_amts;\n+    std::vector<CAmount> b_amts;\n+    for (const auto& coin : a.GetInputSet()) {\n+        a_amts.push_back(coin->txout.nValue);\n+    }\n+    for (const auto& coin : b.GetInputSet()) {\n+        b_amts.push_back(coin->txout.nValue);\n+    }\n+    std::sort(a_amts.begin(), a_amts.end());\n+    std::sort(b_amts.begin(), b_amts.end());\n+\n+    std::pair<std::vector<CAmount>::iterator, std::vector<CAmount>::iterator> ret = std::mismatch(a_amts.begin(), a_amts.end(), b_amts.begin());\n+    return ret.first == a_amts.end() && ret.second == b_amts.end();\n+}\n+\n+static void TestBnBSuccess(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CoinSelectionParams& cs_params = default_cs_params)\n+{\n+    SelectionResult expected_result(CAmount(0), SelectionAlgorithm::BNB);\n+    CAmount expected_amount = 0;\n+    for (CAmount input_amount : expected_input_amounts) {\n+        OutputGroup group = MakeCoin(input_amount, true, cs_params);\n+        expected_amount += group.m_value;\n+        expected_result.AddInput(group);\n+    }\n+\n+    const auto result = SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/default_cs_params.m_cost_of_change, /*max_selection_weight=*/MAX_STANDARD_TX_WEIGHT);\n+    BOOST_CHECK_MESSAGE(result, \"Falsy result in BnB-Success: \" + test_title);\n+    BOOST_CHECK_MESSAGE(EquivalentResult(expected_result, *result), \"Result mismatch in BnB-Success: \" + test_title);\n+    BOOST_CHECK_MESSAGE(result->GetSelectedValue() == expected_amount, \"Selected amount mismatch in BnB-Success: \" + test_title);\n+}\n+\n+static void TestBnBFail(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target)\n+{\n+    BOOST_CHECK_MESSAGE(!SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/default_cs_params.m_cost_of_change, /*max_selection_weight=*/MAX_STANDARD_TX_WEIGHT), \"BnB-Fail: \" + test_title);\n+}\n+\n+BOOST_AUTO_TEST_CASE(bnb_test)\n+{\n+    std::vector<OutputGroup> utxo_pool;\n+\n+    // Fail for empty UTXO pool\n+    TestBnBFail(\"Empty UTXO pool\", utxo_pool, /*selection_target=*/1 * CENT);\n+\n+    AddCoins(utxo_pool, {1 * CENT, 3 * CENT, 5 * CENT});\n+\n+    // Simple success cases\n+    TestBnBSuccess(\"Select smallest UTXO\", utxo_pool, /*selection_target=*/1 * CENT, /*expected_input_amounts=*/{1 * CENT});\n+    TestBnBSuccess(\"Select middle UTXO\", utxo_pool, /*selection_target=*/3 * CENT, /*expected_input_amounts=*/{3 * CENT});\n+    TestBnBSuccess(\"Select biggest UTXO\", utxo_pool, /*selection_target=*/5 * CENT, /*expected_input_amounts=*/{5 * CENT});\n+    TestBnBSuccess(\"Select two UTXOs\", utxo_pool, /*selection_target=*/4 * CENT, /*expected_input_amounts=*/{1 * CENT, 3 * CENT});\n+    TestBnBSuccess(\"Select all UTXOs\", utxo_pool, /*selection_target=*/9 * CENT, /*expected_input_amounts=*/{1 * CENT, 3 * CENT, 5 * CENT});\n+\n+    // BnB finds changeless solution while overshooting by up to cost_of_change\n+    TestBnBSuccess(\"Select upper bound\", utxo_pool, /*selection_target=*/4 * CENT - default_cs_params.m_cost_of_change, /*expected_input_amounts=*/{1 * CENT, 3 * CENT});\n+\n+    // BnB fails to find changeless solution when overshooting by cost_of_change + 1 sat\n+    TestBnBFail(\"Overshoot upper bound\", utxo_pool, /*selection_target=*/4 * CENT - default_cs_params.m_cost_of_change - 1);\n+\n+    // Simple cases without BnB solution\n+    TestBnBFail(\"Smallest combination too big\", utxo_pool, /*selection_target=*/0.5 * CENT);\n+    TestBnBFail(\"No UTXO combination in target window\", utxo_pool, /*selection_target=*/7 * CENT);\n+    TestBnBFail(\"Select more than available\", utxo_pool, /*selection_target=*/10 * CENT);\n+\n+    // Test skipping of equivalent input sets\n+    std::vector<OutputGroup> clone_pool;\n+    AddCoins(clone_pool, {2 * CENT, 7 * CENT, 7 * CENT});\n+    AddDuplicateCoins(clone_pool, 50'000, 5 * CENT);\n+    TestBnBSuccess(\"Skip equivalent input sets\", clone_pool, /*selection_target=*/16 * CENT, /*expected_input_amounts=*/{2 * CENT, 7 * CENT, 7 * CENT});\n+\n+    // Test BnB attempt limit\n+    std::vector<OutputGroup> doppelganger_pool;\n+    std::vector<CAmount> doppelgangers;\n+    std::vector<CAmount> expected_inputs;\n+    for (int i = 0; i < 17; ++i) {\n+        if (i < 8) {\n+            // 8 smallest UTXOs can be combined to create expected_result\n+            doppelgangers.push_back(1 * CENT + i);\n+            expected_inputs.push_back(doppelgangers[i]);\n+        } else {\n+            // Any 8 UTXOs including at least one UTXO with the added cost_of_change will exceed target window\n+            doppelgangers.push_back(1 * CENT + default_cs_params.m_cost_of_change + i);\n+        }\n+    }\n+    AddCoins(doppelganger_pool, doppelgangers);\n+    // Among up to 17 unique UTXOs of similar effective value we will find a solution composed of the eight smallest\n+    TestBnBSuccess(\"Combine smallest 8 of 17 unique UTXOs\", doppelganger_pool, /*selection_target=*/8 * CENT, /*expected_input_amounts=*/expected_inputs);\n+\n+    // Starting with 18 unique UTXOs of similar effective value we will not find the solution\n+    AddCoins(doppelganger_pool, {1 * CENT + default_cs_params.m_cost_of_change + 17});\n+    TestBnBFail(\"Exhaust looking for smallest 8 of 18 unique UTXOs\", doppelganger_pool, /*selection_target=*/8 * CENT);\n+}",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 165,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "639a0dd520d747a189a9d874d2a2888fb8b553f2",
      "in_reply_to_id": 1815773346,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I added a longer explanation to this test. Luckily 18 is not generally the limit, it’s just the limit in this artificially crafted case where all of our UTXOs have very similar amounts and we have to pick eight of them to meet the target. Please let me know if the test makes sense now! :)",
      "created_at": "2024-10-31T19:07:49Z",
      "updated_at": "2024-10-31T19:17:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1825044678",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825044678"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": 144,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825047813",
      "pull_request_review_id": 2408805041,
      "id": 1825047813,
      "node_id": "PRRC_kwDOABII585syAUF",
      "diff_hunk": "@@ -133,18 +124,6 @@ static bool EqualResult(const SelectionResult& a, const SelectionResult& b)\n     return ret.first == a.GetInputSet().end() && ret.second == b.GetInputSet().end();\n }\n \n-static CAmount make_hard_case(int utxos, std::vector<COutput>& utxo_pool)\n-{\n-    utxo_pool.clear();\n-    CAmount target = 0;\n-    for (int i = 0; i < utxos; ++i) {\n-        target += CAmount{1} << (utxos+i);\n-        add_coin(CAmount{1} << (utxos+i), 2*i, utxo_pool);\n-        add_coin((CAmount{1} << (utxos+i)) + (CAmount{1} << (utxos-1-i)), 2*i + 1, utxo_pool);\n-    }\n-    return target;\n-}\n-",
      "path": "src/wallet/test/coinselector_tests.cpp",
      "position": 31,
      "original_position": 31,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "639a0dd520d747a189a9d874d2a2888fb8b553f2",
      "in_reply_to_id": 1819544428,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, I’ll make a note to update the benchmark as well.",
      "created_at": "2024-10-31T19:10:24Z",
      "updated_at": "2024-10-31T19:11:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1825047813",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825047813"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": 136,
      "original_start_line": 136,
      "start_side": "LEFT",
      "line": 147,
      "original_line": 147,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1835111673",
      "pull_request_review_id": 2425008964,
      "id": 1835111673,
      "node_id": "PRRC_kwDOABII585tYZT5",
      "diff_hunk": "@@ -79,5 +80,37 @@ static bool EquivalentResult(const SelectionResult& a, const SelectionResult& b)\n     return ret.first == a_amts.end() && ret.second == b_amts.end();\n }\n \n+static void TestBnBSuccess(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CoinSelectionParams& cs_params = default_cs_params)\n+{\n+    SelectionResult expected_result(CAmount(0), SelectionAlgorithm::BNB);\n+    CAmount expected_amount = 0;\n+    for (CAmount input_amount : expected_input_amounts) {\n+        OutputGroup group = MakeCoin(input_amount, true, cs_params);\n+        expected_amount += group.m_value;\n+        expected_result.AddInput(group);\n+    }\n+\n+    const auto result = SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/default_cs_params.m_cost_of_change, /*max_selection_weight=*/MAX_STANDARD_TX_WEIGHT);\n+    BOOST_CHECK_MESSAGE(result, \"Falsy result in BnB-Success: \" + test_title);\n+    BOOST_CHECK_MESSAGE(EquivalentResult(expected_result, *result), \"Result mismatch in BnB-Success: \" + test_title);\n+    BOOST_CHECK_MESSAGE(result->GetSelectedValue() == expected_amount, \"Selected amount mismatch in BnB-Success: \" + test_title);\n+}\n+\n+BOOST_AUTO_TEST_CASE(bnb_test)\n+{\n+    std::vector<OutputGroup> utxo_pool;\n+    AddCoins(utxo_pool, {1 * CENT, 3 * CENT, 5 * CENT});",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "f3b0593b8bd67bc919b21cd636a01813fc5538c8",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In f3b0593b8:\r\nCan you explain why did you remove the other coins (2 and 4) that were here before? Guess they will be selected and break something if we re-add them because of the algo predilection for unifying utxos?",
      "created_at": "2024-11-08T22:18:58Z",
      "updated_at": "2024-11-08T22:21:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1835111673",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1835111673"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": 99,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1835113240",
      "pull_request_review_id": 2425008964,
      "id": 1835113240,
      "node_id": "PRRC_kwDOABII585tYZsY",
      "diff_hunk": "@@ -79,5 +80,37 @@ static bool EquivalentResult(const SelectionResult& a, const SelectionResult& b)\n     return ret.first == a_amts.end() && ret.second == b_amts.end();\n }\n \n+static void TestBnBSuccess(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CoinSelectionParams& cs_params = default_cs_params)\n+{\n+    SelectionResult expected_result(CAmount(0), SelectionAlgorithm::BNB);\n+    CAmount expected_amount = 0;\n+    for (CAmount input_amount : expected_input_amounts) {\n+        OutputGroup group = MakeCoin(input_amount, true, cs_params);\n+        expected_amount += group.m_value;\n+        expected_result.AddInput(group);\n+    }\n+\n+    const auto result = SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/default_cs_params.m_cost_of_change, /*max_selection_weight=*/MAX_STANDARD_TX_WEIGHT);\n+    BOOST_CHECK_MESSAGE(result, \"Falsy result in BnB-Success: \" + test_title);\n+    BOOST_CHECK_MESSAGE(EquivalentResult(expected_result, *result), \"Result mismatch in BnB-Success: \" + test_title);\n+    BOOST_CHECK_MESSAGE(result->GetSelectedValue() == expected_amount, \"Selected amount mismatch in BnB-Success: \" + test_title);",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "f3b0593b8bd67bc919b21cd636a01813fc5538c8",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In https://github.com/bitcoin/bitcoin/commit/f3b0593b8bd67bc919b21cd636a01813fc5538c8:\r\n\r\nThis could output a bit more detailed error message:\r\n```c++\r\nBOOST_CHECK_MESSAGE(EquivalentResult(expected_result, *result), strprintf(\"Result mismatch in BnB-Success: %s. Expected %s vs %s\", test_title, InputsToString(expected_result), InputsToString(*result)));\r\nBOOST_CHECK_MESSAGE(result->GetSelectedValue() == expected_amount, strprintf(\"Selected amount mismatch in BnB-Success: %s. Expected %d vs %d\", test_title, expected_amount, result->GetSelectedValue()));\r\n```\r\n\r\nBut you would need something like this too:\r\n```c++\r\nstatic std::string InputsToString(const SelectionResult& selection)\r\n{\r\n    std::string res = \"[\";\r\n    for (const auto& input : selection.GetInputSet()) {\r\n        res += util::ToString(input->txout.nValue);\r\n    }\r\n    return res + \"]\";\r\n}\r\n```",
      "created_at": "2024-11-08T22:21:41Z",
      "updated_at": "2024-11-08T22:21:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1835113240",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1835113240"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": 95,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1838729200",
      "pull_request_review_id": 2430626593,
      "id": 1838729200,
      "node_id": "PRRC_kwDOABII585tmMfw",
      "diff_hunk": "@@ -0,0 +1,83 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, TestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": 25,
      "original_position": 23,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "a8bf940ae20ed5a03a1cc328212fcac3c3462b43",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In a8bf940ae20ed5a03a1cc328212fcac3c3462b43\r\nA comment explaining why you selected these magic numbers would be helpful.\r\nsimilar to `tx_noinputs_size` or an indication if they are just random.\r\n\r\ni.e values when initializing default CSP, and some defaults in `MakeCoin`",
      "created_at": "2024-11-12T20:26:40Z",
      "updated_at": "2024-11-12T21:16:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1838729200",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1838729200"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 25,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1838735560",
      "pull_request_review_id": 2430626593,
      "id": 1838735560,
      "node_id": "PRRC_kwDOABII585tmODI",
      "diff_hunk": "@@ -0,0 +1,83 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, TestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,\n+        /*change_spend_size=*/68,",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": 26,
      "original_position": 24,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "a8bf940ae20ed5a03a1cc328212fcac3c3462b43",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "After this PR, we will have two coin selection test files. Is there a reason why?\r\n Wouldn't it be better to add a commit that renames `coinselector_tests` to `coinselection_tests` and modify the test name to `coinselection_tests`?",
      "created_at": "2024-11-12T20:32:37Z",
      "updated_at": "2024-11-12T21:15:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1838735560",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1838735560"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 26,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1838770918",
      "pull_request_review_id": 2430626593,
      "id": 1838770918,
      "node_id": "PRRC_kwDOABII585tmWrm",
      "diff_hunk": "@@ -0,0 +1,83 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, TestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,\n+        /*change_spend_size=*/68,\n+        /*min_change_target=*/50'000,\n+        /*effective_feerate=*/CFeeRate(5000),\n+        /*long_term_feerate=*/CFeeRate(10'000),\n+        /*discard_feerate=*/CFeeRate(3000),\n+        /*tx_noinputs_size=*/11 + 31, //static header size + output size\n+        /*avoid_partial=*/false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.min_viable_change = /*204 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/dcsp.min_viable_change + dcsp.m_change_fee;\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one OutputGroup with a single UTXO that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static OutputGroup MakeCoin(const CAmount& amount, bool is_eff_value = true, CoinSelectionParams cs_params = default_cs_params, int custom_spending_vsize = 68)\n+{\n+    // Always assume that we only have one input\n+    CMutableTransaction tx;\n+    tx.vout.resize(1);\n+    CAmount fees = cs_params.m_effective_feerate.GetFee(custom_spending_vsize);\n+    tx.vout[0].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = next_lock_time++;        // so all transactions get different hashes\n+    OutputGroup group(cs_params);\n+    group.Insert(std::make_shared<COutput>(COutPoint(tx.GetHash(), 0), tx.vout.at(0), /*depth=*/1, /*input_bytes=*/custom_spending_vsize, /*spendable=*/true, /*solvable=*/true, /*safe=*/true, /*time=*/0, /*from_me=*/false, /*fees=*/fees), /*ancestors=*/0, /*descendants=*/0);\n+    return group;\n+}\n+\n+/** Make multiple OutputGroups with the given values as their effective value */\n+static void AddCoins(std::vector<OutputGroup>& utxo_pool, std::vector<CAmount> coins, CoinSelectionParams cs_params = default_cs_params)\n+{\n+    for (CAmount c : coins) {\n+        utxo_pool.push_back(MakeCoin(c, true, cs_params));\n+    }\n+}\n+\n+/** Check if SelectionResult a is equivalent to SelectionResult b.\n+ * Equivalent means same input values, but maybe different inputs (i.e. same value, different prevout) */\n+static bool EquivalentResult(const SelectionResult& a, const SelectionResult& b)",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 65,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "a8bf940ae20ed5a03a1cc328212fcac3c3462b43",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Since we are checking for Value equivalence, this can just be \r\n`CheckValueEquivalence` for clarity",
      "created_at": "2024-11-12T21:06:15Z",
      "updated_at": "2024-11-12T21:15:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1838770918",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1838770918"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1838771982",
      "pull_request_review_id": 2430626593,
      "id": 1838771982,
      "node_id": "PRRC_kwDOABII585tmW8O",
      "diff_hunk": "@@ -0,0 +1,83 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, TestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,\n+        /*change_spend_size=*/68,\n+        /*min_change_target=*/50'000,\n+        /*effective_feerate=*/CFeeRate(5000),\n+        /*long_term_feerate=*/CFeeRate(10'000),\n+        /*discard_feerate=*/CFeeRate(3000),\n+        /*tx_noinputs_size=*/11 + 31, //static header size + output size\n+        /*avoid_partial=*/false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.min_viable_change = /*204 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/dcsp.min_viable_change + dcsp.m_change_fee;\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one OutputGroup with a single UTXO that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static OutputGroup MakeCoin(const CAmount& amount, bool is_eff_value = true, CoinSelectionParams cs_params = default_cs_params, int custom_spending_vsize = 68)\n+{\n+    // Always assume that we only have one input\n+    CMutableTransaction tx;\n+    tx.vout.resize(1);\n+    CAmount fees = cs_params.m_effective_feerate.GetFee(custom_spending_vsize);\n+    tx.vout[0].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = next_lock_time++;        // so all transactions get different hashes\n+    OutputGroup group(cs_params);\n+    group.Insert(std::make_shared<COutput>(COutPoint(tx.GetHash(), 0), tx.vout.at(0), /*depth=*/1, /*input_bytes=*/custom_spending_vsize, /*spendable=*/true, /*solvable=*/true, /*safe=*/true, /*time=*/0, /*from_me=*/false, /*fees=*/fees), /*ancestors=*/0, /*descendants=*/0);\n+    return group;\n+}\n+\n+/** Make multiple OutputGroups with the given values as their effective value */\n+static void AddCoins(std::vector<OutputGroup>& utxo_pool, std::vector<CAmount> coins, CoinSelectionParams cs_params = default_cs_params)\n+{\n+    for (CAmount c : coins) {\n+        utxo_pool.push_back(MakeCoin(c, true, cs_params));\n+    }\n+}\n+\n+/** Check if SelectionResult a is equivalent to SelectionResult b.\n+ * Equivalent means same input values, but maybe different inputs (i.e. same value, different prevout) */\n+static bool EquivalentResult(const SelectionResult& a, const SelectionResult& b)\n+{\n+    std::vector<CAmount> a_amts;\n+    std::vector<CAmount> b_amts;\n+    for (const auto& coin : a.GetInputSet()) {\n+        a_amts.push_back(coin->txout.nValue);\n+    }\n+    for (const auto& coin : b.GetInputSet()) {\n+        b_amts.push_back(coin->txout.nValue);\n+    }\n+    std::sort(a_amts.begin(), a_amts.end());\n+    std::sort(b_amts.begin(), b_amts.end());\n+\n+    std::pair<std::vector<CAmount>::iterator, std::vector<CAmount>::iterator> ret = std::mismatch(a_amts.begin(), a_amts.end(), b_amts.begin());",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 78,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "a8bf940ae20ed5a03a1cc328212fcac3c3462b43",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n    auto ret = std::mismatch(a_amts.begin(), a_amts.end(), b_amts.begin());\r\n```",
      "created_at": "2024-11-12T21:07:20Z",
      "updated_at": "2024-11-12T21:15:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1838771982",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1838771982"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1841254171",
      "pull_request_review_id": 2434583320,
      "id": 1841254171,
      "node_id": "PRRC_kwDOABII585tv08b",
      "diff_hunk": "@@ -79,5 +80,37 @@ static bool EquivalentResult(const SelectionResult& a, const SelectionResult& b)\n     return ret.first == a_amts.end() && ret.second == b_amts.end();\n }\n \n+static void TestBnBSuccess(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CoinSelectionParams& cs_params = default_cs_params)\n+{\n+    SelectionResult expected_result(CAmount(0), SelectionAlgorithm::BNB);\n+    CAmount expected_amount = 0;\n+    for (CAmount input_amount : expected_input_amounts) {\n+        OutputGroup group = MakeCoin(input_amount, true, cs_params);\n+        expected_amount += group.m_value;\n+        expected_result.AddInput(group);\n+    }\n+\n+    const auto result = SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/default_cs_params.m_cost_of_change, /*max_selection_weight=*/MAX_STANDARD_TX_WEIGHT);\n+    BOOST_CHECK_MESSAGE(result, \"Falsy result in BnB-Success: \" + test_title);\n+    BOOST_CHECK_MESSAGE(EquivalentResult(expected_result, *result), \"Result mismatch in BnB-Success: \" + test_title);\n+    BOOST_CHECK_MESSAGE(result->GetSelectedValue() == expected_amount, \"Selected amount mismatch in BnB-Success: \" + test_title);\n+}\n+\n+BOOST_AUTO_TEST_CASE(bnb_test)\n+{\n+    std::vector<OutputGroup> utxo_pool;\n+    AddCoins(utxo_pool, {1 * CENT, 3 * CENT, 5 * CENT});",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "f3b0593b8bd67bc919b21cd636a01813fc5538c8",
      "in_reply_to_id": 1835111673,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I just felt that it wasn’t necessary to have four UTXOs to replicate the same coverage. Rather I wanted to be explicit about the cases that are being tested and show that they all work, but I felt that three UTXOs were sufficient to achieve that.",
      "created_at": "2024-11-13T22:11:39Z",
      "updated_at": "2025-02-27T14:52:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1841254171",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1841254171"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": 99,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1841260812",
      "pull_request_review_id": 2434583320,
      "id": 1841260812,
      "node_id": "PRRC_kwDOABII585tv2kM",
      "diff_hunk": "@@ -0,0 +1,83 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, TestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": 25,
      "original_position": 23,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "a8bf940ae20ed5a03a1cc328212fcac3c3462b43",
      "in_reply_to_id": 1838729200,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I wanted to use representative values, but also avoid using values whose multiples overlap. So, I used the vsize of P2WPKH inputs and outputs.",
      "created_at": "2024-11-13T22:19:03Z",
      "updated_at": "2025-02-27T14:52:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1841260812",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1841260812"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 25,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1841263796",
      "pull_request_review_id": 2434583320,
      "id": 1841263796,
      "node_id": "PRRC_kwDOABII585tv3S0",
      "diff_hunk": "@@ -0,0 +1,83 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, TestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,\n+        /*change_spend_size=*/68,",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": 26,
      "original_position": 24,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "a8bf940ae20ed5a03a1cc328212fcac3c3462b43",
      "in_reply_to_id": 1838735560,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "As mentioned in the [opening comment](https://github.com/bitcoin/bitcoin/pull/29532#issue-2164298794), I’m looking to completely change the approach. Instead of using absolute values and feerates of zero, transactions in the new tests use real feerates, and spend UTXOs whose effective values are round amounts. Since there are a ton of tests, I expected that it would be too much to get reviewed in a single PR, and migrating from the old test suite to the new test suite would make it obvious which ones had been updated already.\r\n\r\nIt could have also been done by renaming first and then updating in place, but this seemed easier to understand, especially because it was going to use a different framework in parallel. Having even more \"MakeCoin\" and \"AddCoin\" etc. functions in the same test suite would have been pretty confusing.",
      "created_at": "2024-11-13T22:22:39Z",
      "updated_at": "2025-02-27T14:52:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1841263796",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1841263796"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 26,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1973873512",
      "pull_request_review_id": 2648268435,
      "id": 1973873512,
      "node_id": "PRRC_kwDOABII5851puto",
      "diff_hunk": "@@ -0,0 +1,83 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, TestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,\n+        /*change_spend_size=*/68,\n+        /*min_change_target=*/50'000,\n+        /*effective_feerate=*/CFeeRate(5000),\n+        /*long_term_feerate=*/CFeeRate(10'000),\n+        /*discard_feerate=*/CFeeRate(3000),\n+        /*tx_noinputs_size=*/11 + 31, //static header size + output size\n+        /*avoid_partial=*/false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.min_viable_change = /*204 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/dcsp.min_viable_change + dcsp.m_change_fee;\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one OutputGroup with a single UTXO that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static OutputGroup MakeCoin(const CAmount& amount, bool is_eff_value = true, CoinSelectionParams cs_params = default_cs_params, int custom_spending_vsize = 68)\n+{\n+    // Always assume that we only have one input\n+    CMutableTransaction tx;\n+    tx.vout.resize(1);\n+    CAmount fees = cs_params.m_effective_feerate.GetFee(custom_spending_vsize);\n+    tx.vout[0].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = next_lock_time++;        // so all transactions get different hashes\n+    OutputGroup group(cs_params);\n+    group.Insert(std::make_shared<COutput>(COutPoint(tx.GetHash(), 0), tx.vout.at(0), /*depth=*/1, /*input_bytes=*/custom_spending_vsize, /*spendable=*/true, /*solvable=*/true, /*safe=*/true, /*time=*/0, /*from_me=*/false, /*fees=*/fees), /*ancestors=*/0, /*descendants=*/0);\n+    return group;\n+}\n+\n+/** Make multiple OutputGroups with the given values as their effective value */\n+static void AddCoins(std::vector<OutputGroup>& utxo_pool, std::vector<CAmount> coins, CoinSelectionParams cs_params = default_cs_params)\n+{\n+    for (CAmount c : coins) {\n+        utxo_pool.push_back(MakeCoin(c, true, cs_params));\n+    }\n+}\n+\n+/** Check if SelectionResult a is equivalent to SelectionResult b.\n+ * Equivalent means same input values, but maybe different inputs (i.e. same value, different prevout) */\n+static bool EquivalentResult(const SelectionResult& a, const SelectionResult& b)",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 65,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "a8bf940ae20ed5a03a1cc328212fcac3c3462b43",
      "in_reply_to_id": 1838770918,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Okay, I renamed it to \"HaveEquivalentValues\"",
      "created_at": "2025-02-27T15:51:58Z",
      "updated_at": "2025-02-27T16:28:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1973873512",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1973873512"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1973895223",
      "pull_request_review_id": 2648268435,
      "id": 1973895223,
      "node_id": "PRRC_kwDOABII5851p0A3",
      "diff_hunk": "@@ -79,5 +80,37 @@ static bool EquivalentResult(const SelectionResult& a, const SelectionResult& b)\n     return ret.first == a_amts.end() && ret.second == b_amts.end();\n }\n \n+static void TestBnBSuccess(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CoinSelectionParams& cs_params = default_cs_params)\n+{\n+    SelectionResult expected_result(CAmount(0), SelectionAlgorithm::BNB);\n+    CAmount expected_amount = 0;\n+    for (CAmount input_amount : expected_input_amounts) {\n+        OutputGroup group = MakeCoin(input_amount, true, cs_params);\n+        expected_amount += group.m_value;\n+        expected_result.AddInput(group);\n+    }\n+\n+    const auto result = SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/default_cs_params.m_cost_of_change, /*max_selection_weight=*/MAX_STANDARD_TX_WEIGHT);\n+    BOOST_CHECK_MESSAGE(result, \"Falsy result in BnB-Success: \" + test_title);\n+    BOOST_CHECK_MESSAGE(EquivalentResult(expected_result, *result), \"Result mismatch in BnB-Success: \" + test_title);\n+    BOOST_CHECK_MESSAGE(result->GetSelectedValue() == expected_amount, \"Selected amount mismatch in BnB-Success: \" + test_title);",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "f3b0593b8bd67bc919b21cd636a01813fc5538c8",
      "in_reply_to_id": 1835113240,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, great suggestion.",
      "created_at": "2025-02-27T16:04:29Z",
      "updated_at": "2025-02-27T16:28:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1973895223",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1973895223"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": 95,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1987847360",
      "pull_request_review_id": 2671917036,
      "id": 1987847360,
      "node_id": "PRRC_kwDOABII5852fCTA",
      "diff_hunk": "@@ -0,0 +1,205 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <policy/policy.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, TestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,\n+        /*change_spend_size=*/68,\n+        /*min_change_target=*/50'000,\n+        /*effective_feerate=*/CFeeRate(5000),\n+        /*long_term_feerate=*/CFeeRate(10'000),\n+        /*discard_feerate=*/CFeeRate(3000),\n+        /*tx_noinputs_size=*/11 + 31, //static header size + output size\n+        /*avoid_partial=*/false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.min_viable_change = /*204 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/dcsp.min_viable_change + dcsp.m_change_fee;\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one OutputGroup with a single UTXO that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static OutputGroup MakeCoin(const CAmount& amount, bool is_eff_value = true, CoinSelectionParams cs_params = default_cs_params, int custom_spending_vsize = 68)\n+{\n+    // Always assume that we only have one input\n+    CMutableTransaction tx;\n+    tx.vout.resize(1);\n+    CAmount fees = cs_params.m_effective_feerate.GetFee(custom_spending_vsize);\n+    tx.vout[0].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = next_lock_time++;        // so all transactions get different hashes\n+    OutputGroup group(cs_params);\n+    group.Insert(std::make_shared<COutput>(COutPoint(tx.GetHash(), 0), tx.vout.at(0), /*depth=*/1, /*input_bytes=*/custom_spending_vsize, /*spendable=*/true, /*solvable=*/true, /*safe=*/true, /*time=*/0, /*from_me=*/false, /*fees=*/fees), /*ancestors=*/0, /*descendants=*/0);\n+    return group;\n+}\n+\n+/** Make multiple OutputGroups with the given values as their effective value */\n+static void AddCoins(std::vector<OutputGroup>& utxo_pool, std::vector<CAmount> coins, CoinSelectionParams cs_params = default_cs_params)\n+{\n+    for (CAmount c : coins) {\n+        utxo_pool.push_back(MakeCoin(c, true, cs_params));\n+    }\n+}\n+\n+/** Make multiple coins that share the same effective value */\n+static void AddDuplicateCoins(std::vector<OutputGroup>& utxo_pool, int count, int amount) {\n+    for (int i = 0 ; i < count; ++i) {\n+        utxo_pool.push_back(MakeCoin(amount));\n+    }\n+}\n+\n+/** Check if SelectionResult a is equivalent to SelectionResult b.\n+ * Two results are equivalent if they are composed of the same input values, even if they have different inputs (i.e., same value, different prevout) */\n+static bool HaveEquivalentValues(const SelectionResult& a, const SelectionResult& b)\n+{\n+    std::vector<CAmount> a_amts;\n+    std::vector<CAmount> b_amts;\n+    for (const auto& coin : a.GetInputSet()) {\n+        a_amts.push_back(coin->txout.nValue);\n+    }\n+    for (const auto& coin : b.GetInputSet()) {\n+        b_amts.push_back(coin->txout.nValue);\n+    }\n+    std::sort(a_amts.begin(), a_amts.end());\n+    std::sort(b_amts.begin(), b_amts.end());\n+\n+    auto ret = std::mismatch(a_amts.begin(), a_amts.end(), b_amts.begin());\n+    return ret.first == a_amts.end() && ret.second == b_amts.end();\n+}\n+\n+static std::string InputsToString(const SelectionResult& selection)\n+{\n+    std::string res = \"[ \";\n+    for (const auto& input : selection.GetInputSet()) {\n+        res += util::ToString(input->txout.nValue);\n+        res += \" \";\n+    }\n+    return res + \"]\";\n+}\n+\n+static void TestBnBSuccess(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CoinSelectionParams& cs_params = default_cs_params)\n+{\n+    SelectionResult expected_result(CAmount(0), SelectionAlgorithm::BNB);\n+    CAmount expected_amount = 0;\n+    for (CAmount input_amount : expected_input_amounts) {\n+        OutputGroup group = MakeCoin(input_amount, true, cs_params);\n+        expected_amount += group.m_value;\n+        expected_result.AddInput(group);\n+    }\n+\n+    const auto result = SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/default_cs_params.m_cost_of_change, /*max_selection_weight=*/MAX_STANDARD_TX_WEIGHT);\n+    BOOST_CHECK_MESSAGE(result, \"Falsy result in BnB-Success: \" + test_title);\n+    BOOST_CHECK_MESSAGE(HaveEquivalentValues(expected_result, *result), strprintf(\"Result mismatch in BnB-Success: %s. Expected %s, but got %s\", test_title, InputsToString(expected_result), InputsToString(*result)));\n+BOOST_CHECK_MESSAGE(result->GetSelectedValue() == expected_amount, strprintf(\"Selected amount mismatch in BnB-Success: %s. Expected %d, but got %d\", test_title, expected_amount, result->GetSelectedValue()));",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 113,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "2787a4fe98783af58b51903a0e908dfef3e6aefb",
      "in_reply_to_id": null,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit - this should be indented.  Right now it's mis-aligned.",
      "created_at": "2025-03-10T18:51:25Z",
      "updated_at": "2025-03-10T18:51:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1987847360",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1987847360"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1988151641",
      "pull_request_review_id": 2672397133,
      "id": 1988151641,
      "node_id": "PRRC_kwDOABII5852gMlZ",
      "diff_hunk": "@@ -0,0 +1,205 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <policy/policy.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, TestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,\n+        /*change_spend_size=*/68,\n+        /*min_change_target=*/50'000,\n+        /*effective_feerate=*/CFeeRate(5000),\n+        /*long_term_feerate=*/CFeeRate(10'000),\n+        /*discard_feerate=*/CFeeRate(3000),\n+        /*tx_noinputs_size=*/11 + 31, //static header size + output size\n+        /*avoid_partial=*/false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.min_viable_change = /*204 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/dcsp.min_viable_change + dcsp.m_change_fee;\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one OutputGroup with a single UTXO that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static OutputGroup MakeCoin(const CAmount& amount, bool is_eff_value = true, CoinSelectionParams cs_params = default_cs_params, int custom_spending_vsize = 68)\n+{\n+    // Always assume that we only have one input\n+    CMutableTransaction tx;\n+    tx.vout.resize(1);\n+    CAmount fees = cs_params.m_effective_feerate.GetFee(custom_spending_vsize);\n+    tx.vout[0].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = next_lock_time++;        // so all transactions get different hashes\n+    OutputGroup group(cs_params);\n+    group.Insert(std::make_shared<COutput>(COutPoint(tx.GetHash(), 0), tx.vout.at(0), /*depth=*/1, /*input_bytes=*/custom_spending_vsize, /*spendable=*/true, /*solvable=*/true, /*safe=*/true, /*time=*/0, /*from_me=*/false, /*fees=*/fees), /*ancestors=*/0, /*descendants=*/0);\n+    return group;\n+}\n+\n+/** Make multiple OutputGroups with the given values as their effective value */\n+static void AddCoins(std::vector<OutputGroup>& utxo_pool, std::vector<CAmount> coins, CoinSelectionParams cs_params = default_cs_params)\n+{\n+    for (CAmount c : coins) {\n+        utxo_pool.push_back(MakeCoin(c, true, cs_params));\n+    }\n+}\n+\n+/** Make multiple coins that share the same effective value */\n+static void AddDuplicateCoins(std::vector<OutputGroup>& utxo_pool, int count, int amount) {\n+    for (int i = 0 ; i < count; ++i) {\n+        utxo_pool.push_back(MakeCoin(amount));\n+    }\n+}\n+\n+/** Check if SelectionResult a is equivalent to SelectionResult b.\n+ * Two results are equivalent if they are composed of the same input values, even if they have different inputs (i.e., same value, different prevout) */\n+static bool HaveEquivalentValues(const SelectionResult& a, const SelectionResult& b)\n+{\n+    std::vector<CAmount> a_amts;\n+    std::vector<CAmount> b_amts;\n+    for (const auto& coin : a.GetInputSet()) {\n+        a_amts.push_back(coin->txout.nValue);\n+    }\n+    for (const auto& coin : b.GetInputSet()) {\n+        b_amts.push_back(coin->txout.nValue);\n+    }\n+    std::sort(a_amts.begin(), a_amts.end());\n+    std::sort(b_amts.begin(), b_amts.end());\n+\n+    auto ret = std::mismatch(a_amts.begin(), a_amts.end(), b_amts.begin());\n+    return ret.first == a_amts.end() && ret.second == b_amts.end();\n+}\n+\n+static std::string InputsToString(const SelectionResult& selection)\n+{\n+    std::string res = \"[ \";\n+    for (const auto& input : selection.GetInputSet()) {\n+        res += util::ToString(input->txout.nValue);\n+        res += \" \";\n+    }\n+    return res + \"]\";\n+}\n+\n+static void TestBnBSuccess(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CoinSelectionParams& cs_params = default_cs_params)\n+{\n+    SelectionResult expected_result(CAmount(0), SelectionAlgorithm::BNB);\n+    CAmount expected_amount = 0;\n+    for (CAmount input_amount : expected_input_amounts) {\n+        OutputGroup group = MakeCoin(input_amount, true, cs_params);",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 105,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "2787a4fe98783af58b51903a0e908dfef3e6aefb",
      "in_reply_to_id": null,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit - you can simplify this line slightly by using the default arguments instead of passing them explicitly.\r\n",
      "created_at": "2025-03-10T23:30:26Z",
      "updated_at": "2025-03-10T23:30:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1988151641",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1988151641"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1988151782",
      "pull_request_review_id": 2672397367,
      "id": 1988151782,
      "node_id": "PRRC_kwDOABII5852gMnm",
      "diff_hunk": "@@ -0,0 +1,205 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <policy/policy.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, TestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,\n+        /*change_spend_size=*/68,\n+        /*min_change_target=*/50'000,\n+        /*effective_feerate=*/CFeeRate(5000),\n+        /*long_term_feerate=*/CFeeRate(10'000),\n+        /*discard_feerate=*/CFeeRate(3000),\n+        /*tx_noinputs_size=*/11 + 31, //static header size + output size\n+        /*avoid_partial=*/false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.min_viable_change = /*204 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/dcsp.min_viable_change + dcsp.m_change_fee;\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one OutputGroup with a single UTXO that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static OutputGroup MakeCoin(const CAmount& amount, bool is_eff_value = true, CoinSelectionParams cs_params = default_cs_params, int custom_spending_vsize = 68)\n+{\n+    // Always assume that we only have one input\n+    CMutableTransaction tx;\n+    tx.vout.resize(1);\n+    CAmount fees = cs_params.m_effective_feerate.GetFee(custom_spending_vsize);\n+    tx.vout[0].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = next_lock_time++;        // so all transactions get different hashes\n+    OutputGroup group(cs_params);\n+    group.Insert(std::make_shared<COutput>(COutPoint(tx.GetHash(), 0), tx.vout.at(0), /*depth=*/1, /*input_bytes=*/custom_spending_vsize, /*spendable=*/true, /*solvable=*/true, /*safe=*/true, /*time=*/0, /*from_me=*/false, /*fees=*/fees), /*ancestors=*/0, /*descendants=*/0);\n+    return group;\n+}\n+\n+/** Make multiple OutputGroups with the given values as their effective value */\n+static void AddCoins(std::vector<OutputGroup>& utxo_pool, std::vector<CAmount> coins, CoinSelectionParams cs_params = default_cs_params)\n+{\n+    for (CAmount c : coins) {\n+        utxo_pool.push_back(MakeCoin(c, true, cs_params));\n+    }\n+}\n+\n+/** Make multiple coins that share the same effective value */\n+static void AddDuplicateCoins(std::vector<OutputGroup>& utxo_pool, int count, int amount) {\n+    for (int i = 0 ; i < count; ++i) {\n+        utxo_pool.push_back(MakeCoin(amount));\n+    }\n+}\n+\n+/** Check if SelectionResult a is equivalent to SelectionResult b.\n+ * Two results are equivalent if they are composed of the same input values, even if they have different inputs (i.e., same value, different prevout) */\n+static bool HaveEquivalentValues(const SelectionResult& a, const SelectionResult& b)\n+{\n+    std::vector<CAmount> a_amts;\n+    std::vector<CAmount> b_amts;\n+    for (const auto& coin : a.GetInputSet()) {\n+        a_amts.push_back(coin->txout.nValue);\n+    }\n+    for (const auto& coin : b.GetInputSet()) {\n+        b_amts.push_back(coin->txout.nValue);\n+    }\n+    std::sort(a_amts.begin(), a_amts.end());\n+    std::sort(b_amts.begin(), b_amts.end());\n+\n+    auto ret = std::mismatch(a_amts.begin(), a_amts.end(), b_amts.begin());\n+    return ret.first == a_amts.end() && ret.second == b_amts.end();\n+}\n+\n+static std::string InputsToString(const SelectionResult& selection)\n+{\n+    std::string res = \"[ \";\n+    for (const auto& input : selection.GetInputSet()) {\n+        res += util::ToString(input->txout.nValue);\n+        res += \" \";\n+    }\n+    return res + \"]\";\n+}\n+\n+static void TestBnBSuccess(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CoinSelectionParams& cs_params = default_cs_params)\n+{\n+    SelectionResult expected_result(CAmount(0), SelectionAlgorithm::BNB);\n+    CAmount expected_amount = 0;\n+    for (CAmount input_amount : expected_input_amounts) {\n+        OutputGroup group = MakeCoin(input_amount, true, cs_params);",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 105,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "2787a4fe98783af58b51903a0e908dfef3e6aefb",
      "in_reply_to_id": null,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n        OutputGroup group = MakeCoin(input_amount);\r\n```",
      "created_at": "2025-03-10T23:30:40Z",
      "updated_at": "2025-03-10T23:30:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1988151782",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1988151782"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1988165735",
      "pull_request_review_id": 2672416387,
      "id": 1988165735,
      "node_id": "PRRC_kwDOABII5852gQBn",
      "diff_hunk": "@@ -133,18 +124,6 @@ static bool EqualResult(const SelectionResult& a, const SelectionResult& b)\n     return ret.first == a.GetInputSet().end() && ret.second == b.GetInputSet().end();\n }\n \n-static CAmount make_hard_case(int utxos, std::vector<COutput>& utxo_pool)\n-{\n-    utxo_pool.clear();\n-    CAmount target = 0;\n-    for (int i = 0; i < utxos; ++i) {\n-        target += CAmount{1} << (utxos+i);\n-        add_coin(CAmount{1} << (utxos+i), 2*i, utxo_pool);\n-        add_coin((CAmount{1} << (utxos+i)) + (CAmount{1} << (utxos-1-i)), 2*i + 1, utxo_pool);\n-    }\n-    return target;\n-}\n-",
      "path": "src/wallet/test/coinselector_tests.cpp",
      "position": 31,
      "original_position": 31,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "639a0dd520d747a189a9d874d2a2888fb8b553f2",
      "in_reply_to_id": 1819544428,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I spent a lot of time figuring out how `make_hard` works.  Thanks for replacing it with a version that _actually_ explains itself instead of making it a mensa test.",
      "created_at": "2025-03-10T23:51:34Z",
      "updated_at": "2025-03-10T23:51:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1988165735",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1988165735"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": 136,
      "original_start_line": 136,
      "start_side": "LEFT",
      "line": 147,
      "original_line": 147,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1996324766",
      "pull_request_review_id": 2686906009,
      "id": 1996324766,
      "node_id": "PRRC_kwDOABII5852_X-e",
      "diff_hunk": "@@ -0,0 +1,205 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <policy/policy.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, TestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,\n+        /*change_spend_size=*/68,\n+        /*min_change_target=*/50'000,\n+        /*effective_feerate=*/CFeeRate(5000),\n+        /*long_term_feerate=*/CFeeRate(10'000),\n+        /*discard_feerate=*/CFeeRate(3000),\n+        /*tx_noinputs_size=*/11 + 31, //static header size + output size\n+        /*avoid_partial=*/false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.min_viable_change = /*204 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/dcsp.min_viable_change + dcsp.m_change_fee;\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one OutputGroup with a single UTXO that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static OutputGroup MakeCoin(const CAmount& amount, bool is_eff_value = true, CoinSelectionParams cs_params = default_cs_params, int custom_spending_vsize = 68)\n+{\n+    // Always assume that we only have one input\n+    CMutableTransaction tx;\n+    tx.vout.resize(1);\n+    CAmount fees = cs_params.m_effective_feerate.GetFee(custom_spending_vsize);\n+    tx.vout[0].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = next_lock_time++;        // so all transactions get different hashes\n+    OutputGroup group(cs_params);\n+    group.Insert(std::make_shared<COutput>(COutPoint(tx.GetHash(), 0), tx.vout.at(0), /*depth=*/1, /*input_bytes=*/custom_spending_vsize, /*spendable=*/true, /*solvable=*/true, /*safe=*/true, /*time=*/0, /*from_me=*/false, /*fees=*/fees), /*ancestors=*/0, /*descendants=*/0);\n+    return group;\n+}\n+\n+/** Make multiple OutputGroups with the given values as their effective value */\n+static void AddCoins(std::vector<OutputGroup>& utxo_pool, std::vector<CAmount> coins, CoinSelectionParams cs_params = default_cs_params)\n+{\n+    for (CAmount c : coins) {\n+        utxo_pool.push_back(MakeCoin(c, true, cs_params));\n+    }\n+}\n+\n+/** Make multiple coins that share the same effective value */\n+static void AddDuplicateCoins(std::vector<OutputGroup>& utxo_pool, int count, int amount) {\n+    for (int i = 0 ; i < count; ++i) {\n+        utxo_pool.push_back(MakeCoin(amount));\n+    }\n+}\n+\n+/** Check if SelectionResult a is equivalent to SelectionResult b.\n+ * Two results are equivalent if they are composed of the same input values, even if they have different inputs (i.e., same value, different prevout) */\n+static bool HaveEquivalentValues(const SelectionResult& a, const SelectionResult& b)\n+{\n+    std::vector<CAmount> a_amts;\n+    std::vector<CAmount> b_amts;\n+    for (const auto& coin : a.GetInputSet()) {\n+        a_amts.push_back(coin->txout.nValue);\n+    }\n+    for (const auto& coin : b.GetInputSet()) {\n+        b_amts.push_back(coin->txout.nValue);\n+    }\n+    std::sort(a_amts.begin(), a_amts.end());\n+    std::sort(b_amts.begin(), b_amts.end());\n+\n+    auto ret = std::mismatch(a_amts.begin(), a_amts.end(), b_amts.begin());\n+    return ret.first == a_amts.end() && ret.second == b_amts.end();\n+}\n+\n+static std::string InputsToString(const SelectionResult& selection)\n+{\n+    std::string res = \"[ \";\n+    for (const auto& input : selection.GetInputSet()) {\n+        res += util::ToString(input->txout.nValue);\n+        res += \" \";\n+    }\n+    return res + \"]\";\n+}\n+\n+static void TestBnBSuccess(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CoinSelectionParams& cs_params = default_cs_params)\n+{\n+    SelectionResult expected_result(CAmount(0), SelectionAlgorithm::BNB);\n+    CAmount expected_amount = 0;\n+    for (CAmount input_amount : expected_input_amounts) {\n+        OutputGroup group = MakeCoin(input_amount, true, cs_params);",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 105,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "2787a4fe98783af58b51903a0e908dfef3e6aefb",
      "in_reply_to_id": 1988151782,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> nit - you can simplify this line slightly by using the default arguments instead of passing them explicitly.\r\n\r\nNo, the way this method is written, it is possible to pass in a custom CoinSelectionParams object and it will be passed through to MakeCoin. If I adopted the change you propose, the MakeCoin call here would be limited to the default parameters.",
      "created_at": "2025-03-14T21:45:26Z",
      "updated_at": "2025-03-14T22:18:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1996324766",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1996324766"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1996329365",
      "pull_request_review_id": 2686906009,
      "id": 1996329365,
      "node_id": "PRRC_kwDOABII5852_ZGV",
      "diff_hunk": "@@ -0,0 +1,83 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, TestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": 25,
      "original_position": 23,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "a8bf940ae20ed5a03a1cc328212fcac3c3462b43",
      "in_reply_to_id": 1838729200,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I added to the description that the change weights are taken from the P2WPKH output type.",
      "created_at": "2025-03-14T21:51:12Z",
      "updated_at": "2025-03-14T22:18:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1996329365",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1996329365"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 25,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1996418239",
      "pull_request_review_id": 2687054394,
      "id": 1996418239,
      "node_id": "PRRC_kwDOABII5852_uy_",
      "diff_hunk": "@@ -0,0 +1,205 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <policy/policy.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, TestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,\n+        /*change_spend_size=*/68,\n+        /*min_change_target=*/50'000,\n+        /*effective_feerate=*/CFeeRate(5000),\n+        /*long_term_feerate=*/CFeeRate(10'000),\n+        /*discard_feerate=*/CFeeRate(3000),\n+        /*tx_noinputs_size=*/11 + 31, //static header size + output size\n+        /*avoid_partial=*/false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.min_viable_change = /*204 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/dcsp.min_viable_change + dcsp.m_change_fee;\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one OutputGroup with a single UTXO that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static OutputGroup MakeCoin(const CAmount& amount, bool is_eff_value = true, CoinSelectionParams cs_params = default_cs_params, int custom_spending_vsize = 68)\n+{\n+    // Always assume that we only have one input\n+    CMutableTransaction tx;\n+    tx.vout.resize(1);\n+    CAmount fees = cs_params.m_effective_feerate.GetFee(custom_spending_vsize);\n+    tx.vout[0].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = next_lock_time++;        // so all transactions get different hashes\n+    OutputGroup group(cs_params);\n+    group.Insert(std::make_shared<COutput>(COutPoint(tx.GetHash(), 0), tx.vout.at(0), /*depth=*/1, /*input_bytes=*/custom_spending_vsize, /*spendable=*/true, /*solvable=*/true, /*safe=*/true, /*time=*/0, /*from_me=*/false, /*fees=*/fees), /*ancestors=*/0, /*descendants=*/0);\n+    return group;\n+}\n+\n+/** Make multiple OutputGroups with the given values as their effective value */\n+static void AddCoins(std::vector<OutputGroup>& utxo_pool, std::vector<CAmount> coins, CoinSelectionParams cs_params = default_cs_params)\n+{\n+    for (CAmount c : coins) {\n+        utxo_pool.push_back(MakeCoin(c, true, cs_params));\n+    }\n+}\n+\n+/** Make multiple coins that share the same effective value */\n+static void AddDuplicateCoins(std::vector<OutputGroup>& utxo_pool, int count, int amount) {\n+    for (int i = 0 ; i < count; ++i) {\n+        utxo_pool.push_back(MakeCoin(amount));\n+    }\n+}\n+\n+/** Check if SelectionResult a is equivalent to SelectionResult b.\n+ * Two results are equivalent if they are composed of the same input values, even if they have different inputs (i.e., same value, different prevout) */\n+static bool HaveEquivalentValues(const SelectionResult& a, const SelectionResult& b)\n+{\n+    std::vector<CAmount> a_amts;\n+    std::vector<CAmount> b_amts;\n+    for (const auto& coin : a.GetInputSet()) {\n+        a_amts.push_back(coin->txout.nValue);\n+    }\n+    for (const auto& coin : b.GetInputSet()) {\n+        b_amts.push_back(coin->txout.nValue);\n+    }\n+    std::sort(a_amts.begin(), a_amts.end());\n+    std::sort(b_amts.begin(), b_amts.end());\n+\n+    auto ret = std::mismatch(a_amts.begin(), a_amts.end(), b_amts.begin());\n+    return ret.first == a_amts.end() && ret.second == b_amts.end();\n+}\n+\n+static std::string InputsToString(const SelectionResult& selection)\n+{\n+    std::string res = \"[ \";\n+    for (const auto& input : selection.GetInputSet()) {\n+        res += util::ToString(input->txout.nValue);\n+        res += \" \";\n+    }\n+    return res + \"]\";\n+}\n+\n+static void TestBnBSuccess(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CoinSelectionParams& cs_params = default_cs_params)\n+{\n+    SelectionResult expected_result(CAmount(0), SelectionAlgorithm::BNB);\n+    CAmount expected_amount = 0;\n+    for (CAmount input_amount : expected_input_amounts) {\n+        OutputGroup group = MakeCoin(input_amount, true, cs_params);",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 105,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "2787a4fe98783af58b51903a0e908dfef3e6aefb",
      "in_reply_to_id": 1988151782,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah I see, even though that wouldn't cause any test failures, that would limit the functions behavior in the future.  My mistake.",
      "created_at": "2025-03-14T23:20:30Z",
      "updated_at": "2025-03-14T23:20:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1996418239",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1996418239"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1996429149",
      "pull_request_review_id": 2687072947,
      "id": 1996429149,
      "node_id": "PRRC_kwDOABII5852_xdd",
      "diff_hunk": "@@ -121,6 +128,12 @@ BOOST_AUTO_TEST_CASE(bnb_test)\n \n     // BnB finds changeless solution while overshooting by up to cost_of_change\n     TestBnBSuccess(\"Select upper bound\", utxo_pool, /*selection_target=*/4 * CENT - default_cs_params.m_cost_of_change, /*expected_input_amounts=*/{1 * CENT, 3 * CENT});\n+\n+    // Test skipping of equivalent input sets\n+    std::vector<OutputGroup> clone_pool;\n+    AddCoins(clone_pool, {2 * CENT, 7 * CENT, 7 * CENT});",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "29b5efd2a4d132ebadf4ad6ccd3fd82fe779df61",
      "in_reply_to_id": null,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good idea to simplify this by reducing the size of the set.  Two sevens here with a reduced target amount serves the same purpose as five sevens.",
      "created_at": "2025-03-14T23:33:38Z",
      "updated_at": "2025-03-14T23:34:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1996429149",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1996429149"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 151,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1996431719",
      "pull_request_review_id": 2687076706,
      "id": 1996431719,
      "node_id": "PRRC_kwDOABII5852_yFn",
      "diff_hunk": "@@ -114,9 +114,18 @@ static void TestBnBSuccess(std::string test_title, std::vector<OutputGroup>& utx\n     BOOST_CHECK_MESSAGE(result->GetSelectedValue() == expected_amount, strprintf(\"Selected amount mismatch in BnB-Success: %s. Expected %d, but got %d\", test_title, expected_amount, result->GetSelectedValue()));\n }\n \n+static void TestBnBFail(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target)\n+{\n+    BOOST_CHECK_MESSAGE(!SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/default_cs_params.m_cost_of_change, /*max_selection_weight=*/MAX_STANDARD_TX_WEIGHT), \"BnB-Fail: \" + test_title);\n+}\n+\n BOOST_AUTO_TEST_CASE(bnb_test)\n {\n     std::vector<OutputGroup> utxo_pool;\n+\n+    // Fail for empty UTXO pool\n+    TestBnBFail(\"Empty UTXO pool\", utxo_pool, /*selection_target=*/1 * CENT);",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "327a989b1c22e1a1fc26cba47c64512e1aa3fb32",
      "in_reply_to_id": null,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is really minor nit, although I find the `/*selection_target=*` comments to be more distracting than helpful personally.",
      "created_at": "2025-03-14T23:38:58Z",
      "updated_at": "2025-03-14T23:38:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1996431719",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1996431719"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1996437543",
      "pull_request_review_id": 2687083518,
      "id": 1996437543,
      "node_id": "PRRC_kwDOABII5852_zgn",
      "diff_hunk": "@@ -151,6 +151,41 @@ BOOST_AUTO_TEST_CASE(bnb_test)\n     AddCoins(clone_pool, {2 * CENT, 7 * CENT, 7 * CENT});\n     AddDuplicateCoins(clone_pool, 50'000, 5 * CENT);\n     TestBnBSuccess(\"Skip equivalent input sets\", clone_pool, /*selection_target=*/16 * CENT, /*expected_input_amounts=*/{2 * CENT, 7 * CENT, 7 * CENT});\n+\n+    /* Test BnB attempt limit (`TOTAL_TRIES`)",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "644335ac3d5b8ca4a55bd83e9a5bd3154c186639",
      "in_reply_to_id": null,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It would be nice if BnB returned the `total_tries`, like coin_grinder.  I recently added that to the rust implementation since I think it's useful for regression testing.  If BnB was ever refactored or had changes it would come in handy imo.",
      "created_at": "2025-03-14T23:48:44Z",
      "updated_at": "2025-03-14T23:48:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1996437543",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1996437543"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1997238955",
      "pull_request_review_id": 2688243947,
      "id": 1997238955,
      "node_id": "PRRC_kwDOABII5853C3Kr",
      "diff_hunk": "@@ -0,0 +1,83 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, TestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": 25,
      "original_position": 23,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "a8bf940ae20ed5a03a1cc328212fcac3c3462b43",
      "in_reply_to_id": 1838729200,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "could also use a const for these magic numbers.\r\n\r\n```\r\nP2WPKH_VB_SIZE = 31\r\n```",
      "created_at": "2025-03-15T19:07:19Z",
      "updated_at": "2025-03-15T19:07:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r1997238955",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1997238955"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 25,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2010820383",
      "pull_request_review_id": 2711509540,
      "id": 2010820383,
      "node_id": "PRRC_kwDOABII58532q8f",
      "diff_hunk": "@@ -0,0 +1,206 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <policy/policy.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, TestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test.\n+ * We use P2WPKH input and output weights for the change weights. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,\n+        /*change_spend_size=*/68,\n+        /*min_change_target=*/50'000,\n+        /*effective_feerate=*/CFeeRate(5000),\n+        /*long_term_feerate=*/CFeeRate(10'000),\n+        /*discard_feerate=*/CFeeRate(3000),\n+        /*tx_noinputs_size=*/11 + 31, //static header size + output size\n+        /*avoid_partial=*/false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.min_viable_change = /*204 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/dcsp.min_viable_change + dcsp.m_change_fee;\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one OutputGroup with a single UTXO that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static OutputGroup MakeCoin(const CAmount& amount, bool is_eff_value = true, CoinSelectionParams cs_params = default_cs_params, int custom_spending_vsize = 68)\n+{\n+    // Always assume that we only have one input\n+    CMutableTransaction tx;\n+    tx.vout.resize(1);\n+    CAmount fees = cs_params.m_effective_feerate.GetFee(custom_spending_vsize);\n+    tx.vout[0].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = next_lock_time++;        // so all transactions get different hashes\n+    OutputGroup group(cs_params);\n+    group.Insert(std::make_shared<COutput>(COutPoint(tx.GetHash(), 0), tx.vout.at(0), /*depth=*/1, /*input_bytes=*/custom_spending_vsize, /*spendable=*/true, /*solvable=*/true, /*safe=*/true, /*time=*/0, /*from_me=*/false, /*fees=*/fees), /*ancestors=*/0, /*descendants=*/0);\n+    return group;\n+}\n+\n+/** Make multiple OutputGroups with the given values as their effective value */\n+static void AddCoins(std::vector<OutputGroup>& utxo_pool, std::vector<CAmount> coins, CoinSelectionParams cs_params = default_cs_params)\n+{\n+    for (CAmount c : coins) {\n+        utxo_pool.push_back(MakeCoin(c, true, cs_params));\n+    }\n+}\n+\n+/** Make multiple coins that share the same effective value */\n+static void AddDuplicateCoins(std::vector<OutputGroup>& utxo_pool, int count, int amount) {\n+    for (int i = 0 ; i < count; ++i) {\n+        utxo_pool.push_back(MakeCoin(amount));\n+    }\n+}\n+\n+/** Check if SelectionResult a is equivalent to SelectionResult b.\n+ * Two results are equivalent if they are composed of the same input values, even if they have different inputs (i.e., same value, different prevout) */\n+static bool HaveEquivalentValues(const SelectionResult& a, const SelectionResult& b)\n+{\n+    std::vector<CAmount> a_amts;\n+    std::vector<CAmount> b_amts;\n+    for (const auto& coin : a.GetInputSet()) {\n+        a_amts.push_back(coin->txout.nValue);\n+    }\n+    for (const auto& coin : b.GetInputSet()) {\n+        b_amts.push_back(coin->txout.nValue);\n+    }\n+    std::sort(a_amts.begin(), a_amts.end());\n+    std::sort(b_amts.begin(), b_amts.end());\n+\n+    auto ret = std::mismatch(a_amts.begin(), a_amts.end(), b_amts.begin());\n+    return ret.first == a_amts.end() && ret.second == b_amts.end();\n+}\n+\n+static std::string InputsToString(const SelectionResult& selection)\n+{\n+    std::string res = \"[ \";\n+    for (const auto& input : selection.GetInputSet()) {\n+        res += util::ToString(input->txout.nValue);\n+        res += \" \";\n+    }\n+    return res + \"]\";\n+}\n+\n+static void TestBnBSuccess(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CoinSelectionParams& cs_params = default_cs_params)\n+{\n+    SelectionResult expected_result(CAmount(0), SelectionAlgorithm::BNB);\n+    CAmount expected_amount = 0;\n+    for (CAmount input_amount : expected_input_amounts) {\n+        OutputGroup group = MakeCoin(input_amount, true, cs_params);\n+        expected_amount += group.m_value;\n+        expected_result.AddInput(group);\n+    }\n+\n+    const auto result = SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/default_cs_params.m_cost_of_change, /*max_selection_weight=*/MAX_STANDARD_TX_WEIGHT);\n+    BOOST_CHECK_MESSAGE(result, \"Falsy result in BnB-Success: \" + test_title);\n+    BOOST_CHECK_MESSAGE(HaveEquivalentValues(expected_result, *result), strprintf(\"Result mismatch in BnB-Success: %s. Expected %s, but got %s\", test_title, InputsToString(expected_result), InputsToString(*result)));\n+    BOOST_CHECK_MESSAGE(result->GetSelectedValue() == expected_amount, strprintf(\"Selected amount mismatch in BnB-Success: %s. Expected %d, but got %d\", test_title, expected_amount, result->GetSelectedValue()));\n+}\n+\n+static void TestBnBFail(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target)\n+{\n+    BOOST_CHECK_MESSAGE(!SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/default_cs_params.m_cost_of_change, /*max_selection_weight=*/MAX_STANDARD_TX_WEIGHT), \"BnB-Fail: \" + test_title);\n+}\n+\n+BOOST_AUTO_TEST_CASE(bnb_test)\n+{\n+    std::vector<OutputGroup> utxo_pool;\n+\n+    // Fail for empty UTXO pool\n+    TestBnBFail(\"Empty UTXO pool\", utxo_pool, /*selection_target=*/1 * CENT);\n+\n+    AddCoins(utxo_pool, {1 * CENT, 3 * CENT, 5 * CENT});\n+\n+    // Simple success cases\n+    TestBnBSuccess(\"Select smallest UTXO\", utxo_pool, /*selection_target=*/1 * CENT, /*expected_input_amounts=*/{1 * CENT});\n+    TestBnBSuccess(\"Select middle UTXO\", utxo_pool, /*selection_target=*/3 * CENT, /*expected_input_amounts=*/{3 * CENT});\n+    TestBnBSuccess(\"Select biggest UTXO\", utxo_pool, /*selection_target=*/5 * CENT, /*expected_input_amounts=*/{5 * CENT});\n+    TestBnBSuccess(\"Select two UTXOs\", utxo_pool, /*selection_target=*/4 * CENT, /*expected_input_amounts=*/{1 * CENT, 3 * CENT});\n+    TestBnBSuccess(\"Select all UTXOs\", utxo_pool, /*selection_target=*/9 * CENT, /*expected_input_amounts=*/{1 * CENT, 3 * CENT, 5 * CENT});\n+\n+    // BnB finds changeless solution while overshooting by up to cost_of_change\n+    TestBnBSuccess(\"Select upper bound\", utxo_pool, /*selection_target=*/4 * CENT - default_cs_params.m_cost_of_change, /*expected_input_amounts=*/{1 * CENT, 3 * CENT});\n+\n+    // BnB fails to find changeless solution when overshooting by cost_of_change + 1 sat\n+    TestBnBFail(\"Overshoot upper bound\", utxo_pool, /*selection_target=*/4 * CENT - default_cs_params.m_cost_of_change - 1);\n+\n+    // Simple cases without BnB solution\n+    TestBnBFail(\"Smallest combination too big\", utxo_pool, /*selection_target=*/0.5 * CENT);\n+    TestBnBFail(\"No UTXO combination in target window\", utxo_pool, /*selection_target=*/7 * CENT);\n+    TestBnBFail(\"Select more than available\", utxo_pool, /*selection_target=*/10 * CENT);\n+\n+    // Test skipping of equivalent input sets\n+    std::vector<OutputGroup> clone_pool;\n+    AddCoins(clone_pool, {2 * CENT, 7 * CENT, 7 * CENT});\n+    AddDuplicateCoins(clone_pool, 50'000, 5 * CENT);\n+    TestBnBSuccess(\"Skip equivalent input sets\", clone_pool, /*selection_target=*/16 * CENT, /*expected_input_amounts=*/{2 * CENT, 7 * CENT, 7 * CENT});\n+\n+    /* Test BnB attempt limit (`TOTAL_TRIES`)\n+     *\n+     * Generally, on a diverse UTXO pool BnB will quickly pass over UTXOs bigger than the target and then start\n+     * combining small counts of UTXOs that in sum remain under the selection_target+cost_of_change. When there are\n+     * multiple UTXOs that have matching amount and cost, combinations with equivalent input sets are skipped. The UTXO\n+     * pool for this test is specifically crafted to create as much branching as possible. The selection target is\n+     * 8 CENT while all UTXOs are slightly bigger than 1 CENT. The smallest eight are 100,000…100,007 sats, while the larger\n+     * ten are 100,009,…,100,018 sats plus cost_of_change.\n+     *\n+     * Because BnB will only select input sets that fall between selection_target and selection_target + cost_of_change,\n+     * and the search traverses the UTXO pool from large amount to small amount, the search will traverse every single\n+     * combination of eight inputs, but all except the last will overshoot by more than cost_of_change on the eighth\n+     * input. Only the very last combination with the eight smallest UTXOs falls into the target window.\n+     */\n+    std::vector<OutputGroup> doppelganger_pool;\n+    std::vector<CAmount> doppelgangers;\n+    std::vector<CAmount> expected_inputs;\n+    for (int i = 0; i < 17; ++i) {\n+        if (i < 8) {\n+            // The eight smallest UTXOs can be combined to create expected_result\n+            doppelgangers.push_back(1 * CENT + i);\n+            expected_inputs.push_back(doppelgangers[i]);\n+        } else {\n+            // Any eight UTXOs including at least one UTXO with the added cost_of_change will exceed target window\n+            doppelgangers.push_back(1 * CENT + default_cs_params.m_cost_of_change + i);\n+        }\n+    }\n+    AddCoins(doppelganger_pool, doppelgangers);\n+    // Among up to 17 unique UTXOs of similar effective value we will find a solution composed of the eight smallest UTXOs\n+    TestBnBSuccess(\"Combine smallest 8 of 17 unique UTXOs\", doppelganger_pool, /*selection_target=*/8 * CENT, /*expected_input_amounts=*/expected_inputs);\n+\n+    // Starting with 18 unique UTXOs of similar effective value we will not find the solution due to exceeding the attempt limit\n+    AddCoins(doppelganger_pool, {1 * CENT + default_cs_params.m_cost_of_change + 17});\n+    TestBnBFail(\"Exhaust looking for smallest 8 of 18 unique UTXOs\", doppelganger_pool, /*selection_target=*/8 * CENT);\n+}\n+\n+BOOST_AUTO_TEST_CASE(bnb_feerate_sensitivity_test)\n+{\n+    // Create sets of UTXOs with the same effective amounts at different feerates (but different absolute amounts)\n+    std::vector<OutputGroup> low_feerate_pool; // 5 sat/vB (default, and lower than long_term_feerate of 10 sat/vB)",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": 201,
      "original_position": 194,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "644335ac3d5b8ca4a55bd83e9a5bd3154c186639",
      "in_reply_to_id": null,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This file has some strange formatting that does not show up in Github.  My editor (Vim) just shows a character that seems like a translation error.\r\n\r\n> 5 sat\r\n\r\nI opened the file with `xxd` and the translation is `35e2 80af 7361 742f`.  `35` is the hex for `5` in ascii, and `73` is the hex for `s`.  It looks like `80` is extended hex for the euro sign and `e2` and `af` also have extended hex meanings.  There are more of these weird encodings thought the file.",
      "created_at": "2025-03-24T19:40:50Z",
      "updated_at": "2025-03-24T19:40:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r2010820383",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2010820383"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 201,
      "original_line": 201,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2010835264",
      "pull_request_review_id": 2711532785,
      "id": 2010835264,
      "node_id": "PRRC_kwDOABII58532ulA",
      "diff_hunk": "@@ -151,6 +151,41 @@ BOOST_AUTO_TEST_CASE(bnb_test)\n     AddCoins(clone_pool, {2 * CENT, 7 * CENT, 7 * CENT});\n     AddDuplicateCoins(clone_pool, 50'000, 5 * CENT);\n     TestBnBSuccess(\"Skip equivalent input sets\", clone_pool, /*selection_target=*/16 * CENT, /*expected_input_amounts=*/{2 * CENT, 7 * CENT, 7 * CENT});\n+\n+    /* Test BnB attempt limit (`TOTAL_TRIES`)",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "644335ac3d5b8ca4a55bd83e9a5bd3154c186639",
      "in_reply_to_id": 1996437543,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That seems like a good idea, but that’s out of scope for this PR. I have had a refactor of BnB on my todo list for a long time, and it would be part of that, probably.",
      "created_at": "2025-03-24T19:52:18Z",
      "updated_at": "2025-03-24T19:52:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r2010835264",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2010835264"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2012925701",
      "pull_request_review_id": 2715175222,
      "id": 2012925701,
      "node_id": "PRRC_kwDOABII5853-s8F",
      "diff_hunk": "@@ -0,0 +1,206 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <policy/policy.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, TestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test.\n+ * We use P2WPKH input and output weights for the change weights. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,\n+        /*change_spend_size=*/68,\n+        /*min_change_target=*/50'000,\n+        /*effective_feerate=*/CFeeRate(5000),\n+        /*long_term_feerate=*/CFeeRate(10'000),\n+        /*discard_feerate=*/CFeeRate(3000),\n+        /*tx_noinputs_size=*/11 + 31, //static header size + output size\n+        /*avoid_partial=*/false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.min_viable_change = /*204 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/dcsp.min_viable_change + dcsp.m_change_fee;\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one OutputGroup with a single UTXO that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static OutputGroup MakeCoin(const CAmount& amount, bool is_eff_value = true, CoinSelectionParams cs_params = default_cs_params, int custom_spending_vsize = 68)\n+{\n+    // Always assume that we only have one input\n+    CMutableTransaction tx;\n+    tx.vout.resize(1);\n+    CAmount fees = cs_params.m_effective_feerate.GetFee(custom_spending_vsize);\n+    tx.vout[0].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = next_lock_time++;        // so all transactions get different hashes\n+    OutputGroup group(cs_params);\n+    group.Insert(std::make_shared<COutput>(COutPoint(tx.GetHash(), 0), tx.vout.at(0), /*depth=*/1, /*input_bytes=*/custom_spending_vsize, /*spendable=*/true, /*solvable=*/true, /*safe=*/true, /*time=*/0, /*from_me=*/false, /*fees=*/fees), /*ancestors=*/0, /*descendants=*/0);\n+    return group;\n+}\n+\n+/** Make multiple OutputGroups with the given values as their effective value */\n+static void AddCoins(std::vector<OutputGroup>& utxo_pool, std::vector<CAmount> coins, CoinSelectionParams cs_params = default_cs_params)\n+{\n+    for (CAmount c : coins) {\n+        utxo_pool.push_back(MakeCoin(c, true, cs_params));\n+    }\n+}\n+\n+/** Make multiple coins that share the same effective value */\n+static void AddDuplicateCoins(std::vector<OutputGroup>& utxo_pool, int count, int amount) {\n+    for (int i = 0 ; i < count; ++i) {\n+        utxo_pool.push_back(MakeCoin(amount));\n+    }\n+}\n+\n+/** Check if SelectionResult a is equivalent to SelectionResult b.\n+ * Two results are equivalent if they are composed of the same input values, even if they have different inputs (i.e., same value, different prevout) */\n+static bool HaveEquivalentValues(const SelectionResult& a, const SelectionResult& b)\n+{\n+    std::vector<CAmount> a_amts;\n+    std::vector<CAmount> b_amts;\n+    for (const auto& coin : a.GetInputSet()) {\n+        a_amts.push_back(coin->txout.nValue);\n+    }\n+    for (const auto& coin : b.GetInputSet()) {\n+        b_amts.push_back(coin->txout.nValue);\n+    }\n+    std::sort(a_amts.begin(), a_amts.end());\n+    std::sort(b_amts.begin(), b_amts.end());\n+\n+    auto ret = std::mismatch(a_amts.begin(), a_amts.end(), b_amts.begin());\n+    return ret.first == a_amts.end() && ret.second == b_amts.end();\n+}\n+\n+static std::string InputsToString(const SelectionResult& selection)\n+{\n+    std::string res = \"[ \";\n+    for (const auto& input : selection.GetInputSet()) {\n+        res += util::ToString(input->txout.nValue);\n+        res += \" \";\n+    }\n+    return res + \"]\";\n+}\n+\n+static void TestBnBSuccess(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CoinSelectionParams& cs_params = default_cs_params)\n+{\n+    SelectionResult expected_result(CAmount(0), SelectionAlgorithm::BNB);\n+    CAmount expected_amount = 0;\n+    for (CAmount input_amount : expected_input_amounts) {\n+        OutputGroup group = MakeCoin(input_amount, true, cs_params);\n+        expected_amount += group.m_value;\n+        expected_result.AddInput(group);\n+    }\n+\n+    const auto result = SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/default_cs_params.m_cost_of_change, /*max_selection_weight=*/MAX_STANDARD_TX_WEIGHT);\n+    BOOST_CHECK_MESSAGE(result, \"Falsy result in BnB-Success: \" + test_title);\n+    BOOST_CHECK_MESSAGE(HaveEquivalentValues(expected_result, *result), strprintf(\"Result mismatch in BnB-Success: %s. Expected %s, but got %s\", test_title, InputsToString(expected_result), InputsToString(*result)));\n+    BOOST_CHECK_MESSAGE(result->GetSelectedValue() == expected_amount, strprintf(\"Selected amount mismatch in BnB-Success: %s. Expected %d, but got %d\", test_title, expected_amount, result->GetSelectedValue()));\n+}\n+\n+static void TestBnBFail(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target)\n+{\n+    BOOST_CHECK_MESSAGE(!SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/default_cs_params.m_cost_of_change, /*max_selection_weight=*/MAX_STANDARD_TX_WEIGHT), \"BnB-Fail: \" + test_title);\n+}\n+\n+BOOST_AUTO_TEST_CASE(bnb_test)\n+{\n+    std::vector<OutputGroup> utxo_pool;\n+\n+    // Fail for empty UTXO pool\n+    TestBnBFail(\"Empty UTXO pool\", utxo_pool, /*selection_target=*/1 * CENT);\n+\n+    AddCoins(utxo_pool, {1 * CENT, 3 * CENT, 5 * CENT});\n+\n+    // Simple success cases\n+    TestBnBSuccess(\"Select smallest UTXO\", utxo_pool, /*selection_target=*/1 * CENT, /*expected_input_amounts=*/{1 * CENT});\n+    TestBnBSuccess(\"Select middle UTXO\", utxo_pool, /*selection_target=*/3 * CENT, /*expected_input_amounts=*/{3 * CENT});\n+    TestBnBSuccess(\"Select biggest UTXO\", utxo_pool, /*selection_target=*/5 * CENT, /*expected_input_amounts=*/{5 * CENT});\n+    TestBnBSuccess(\"Select two UTXOs\", utxo_pool, /*selection_target=*/4 * CENT, /*expected_input_amounts=*/{1 * CENT, 3 * CENT});\n+    TestBnBSuccess(\"Select all UTXOs\", utxo_pool, /*selection_target=*/9 * CENT, /*expected_input_amounts=*/{1 * CENT, 3 * CENT, 5 * CENT});\n+\n+    // BnB finds changeless solution while overshooting by up to cost_of_change\n+    TestBnBSuccess(\"Select upper bound\", utxo_pool, /*selection_target=*/4 * CENT - default_cs_params.m_cost_of_change, /*expected_input_amounts=*/{1 * CENT, 3 * CENT});\n+\n+    // BnB fails to find changeless solution when overshooting by cost_of_change + 1 sat\n+    TestBnBFail(\"Overshoot upper bound\", utxo_pool, /*selection_target=*/4 * CENT - default_cs_params.m_cost_of_change - 1);\n+\n+    // Simple cases without BnB solution\n+    TestBnBFail(\"Smallest combination too big\", utxo_pool, /*selection_target=*/0.5 * CENT);\n+    TestBnBFail(\"No UTXO combination in target window\", utxo_pool, /*selection_target=*/7 * CENT);\n+    TestBnBFail(\"Select more than available\", utxo_pool, /*selection_target=*/10 * CENT);\n+\n+    // Test skipping of equivalent input sets\n+    std::vector<OutputGroup> clone_pool;\n+    AddCoins(clone_pool, {2 * CENT, 7 * CENT, 7 * CENT});\n+    AddDuplicateCoins(clone_pool, 50'000, 5 * CENT);\n+    TestBnBSuccess(\"Skip equivalent input sets\", clone_pool, /*selection_target=*/16 * CENT, /*expected_input_amounts=*/{2 * CENT, 7 * CENT, 7 * CENT});\n+\n+    /* Test BnB attempt limit (`TOTAL_TRIES`)\n+     *\n+     * Generally, on a diverse UTXO pool BnB will quickly pass over UTXOs bigger than the target and then start\n+     * combining small counts of UTXOs that in sum remain under the selection_target+cost_of_change. When there are\n+     * multiple UTXOs that have matching amount and cost, combinations with equivalent input sets are skipped. The UTXO\n+     * pool for this test is specifically crafted to create as much branching as possible. The selection target is\n+     * 8 CENT while all UTXOs are slightly bigger than 1 CENT. The smallest eight are 100,000…100,007 sats, while the larger\n+     * ten are 100,009,…,100,018 sats plus cost_of_change.\n+     *\n+     * Because BnB will only select input sets that fall between selection_target and selection_target + cost_of_change,\n+     * and the search traverses the UTXO pool from large amount to small amount, the search will traverse every single\n+     * combination of eight inputs, but all except the last will overshoot by more than cost_of_change on the eighth\n+     * input. Only the very last combination with the eight smallest UTXOs falls into the target window.\n+     */\n+    std::vector<OutputGroup> doppelganger_pool;\n+    std::vector<CAmount> doppelgangers;\n+    std::vector<CAmount> expected_inputs;\n+    for (int i = 0; i < 17; ++i) {\n+        if (i < 8) {\n+            // The eight smallest UTXOs can be combined to create expected_result\n+            doppelgangers.push_back(1 * CENT + i);\n+            expected_inputs.push_back(doppelgangers[i]);\n+        } else {\n+            // Any eight UTXOs including at least one UTXO with the added cost_of_change will exceed target window\n+            doppelgangers.push_back(1 * CENT + default_cs_params.m_cost_of_change + i);\n+        }\n+    }\n+    AddCoins(doppelganger_pool, doppelgangers);\n+    // Among up to 17 unique UTXOs of similar effective value we will find a solution composed of the eight smallest UTXOs\n+    TestBnBSuccess(\"Combine smallest 8 of 17 unique UTXOs\", doppelganger_pool, /*selection_target=*/8 * CENT, /*expected_input_amounts=*/expected_inputs);\n+\n+    // Starting with 18 unique UTXOs of similar effective value we will not find the solution due to exceeding the attempt limit\n+    AddCoins(doppelganger_pool, {1 * CENT + default_cs_params.m_cost_of_change + 17});\n+    TestBnBFail(\"Exhaust looking for smallest 8 of 18 unique UTXOs\", doppelganger_pool, /*selection_target=*/8 * CENT);\n+}\n+\n+BOOST_AUTO_TEST_CASE(bnb_feerate_sensitivity_test)\n+{\n+    // Create sets of UTXOs with the same effective amounts at different feerates (but different absolute amounts)\n+    std::vector<OutputGroup> low_feerate_pool; // 5 sat/vB (default, and lower than long_term_feerate of 10 sat/vB)",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": 201,
      "original_position": 194,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "644335ac3d5b8ca4a55bd83e9a5bd3154c186639",
      "in_reply_to_id": 2010820383,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`0xe280af` is the UTF-8 encoding for a narrow no-break space: https://www.fileformat.info/info/unicode/char/202f/index.htm",
      "created_at": "2025-03-25T20:55:14Z",
      "updated_at": "2025-03-25T20:55:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r2012925701",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2012925701"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 201,
      "original_line": 201,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2014404157",
      "pull_request_review_id": 2717631583,
      "id": 2014404157,
      "node_id": "PRRC_kwDOABII5854EV49",
      "diff_hunk": "@@ -0,0 +1,206 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <policy/policy.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, TestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test.\n+ * We use P2WPKH input and output weights for the change weights. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,\n+        /*change_spend_size=*/68,\n+        /*min_change_target=*/50'000,\n+        /*effective_feerate=*/CFeeRate(5000),\n+        /*long_term_feerate=*/CFeeRate(10'000),\n+        /*discard_feerate=*/CFeeRate(3000),\n+        /*tx_noinputs_size=*/11 + 31, //static header size + output size\n+        /*avoid_partial=*/false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.min_viable_change = /*204 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/dcsp.min_viable_change + dcsp.m_change_fee;\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one OutputGroup with a single UTXO that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static OutputGroup MakeCoin(const CAmount& amount, bool is_eff_value = true, CoinSelectionParams cs_params = default_cs_params, int custom_spending_vsize = 68)\n+{\n+    // Always assume that we only have one input\n+    CMutableTransaction tx;\n+    tx.vout.resize(1);\n+    CAmount fees = cs_params.m_effective_feerate.GetFee(custom_spending_vsize);\n+    tx.vout[0].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = next_lock_time++;        // so all transactions get different hashes\n+    OutputGroup group(cs_params);\n+    group.Insert(std::make_shared<COutput>(COutPoint(tx.GetHash(), 0), tx.vout.at(0), /*depth=*/1, /*input_bytes=*/custom_spending_vsize, /*spendable=*/true, /*solvable=*/true, /*safe=*/true, /*time=*/0, /*from_me=*/false, /*fees=*/fees), /*ancestors=*/0, /*descendants=*/0);\n+    return group;\n+}\n+\n+/** Make multiple OutputGroups with the given values as their effective value */\n+static void AddCoins(std::vector<OutputGroup>& utxo_pool, std::vector<CAmount> coins, CoinSelectionParams cs_params = default_cs_params)\n+{\n+    for (CAmount c : coins) {\n+        utxo_pool.push_back(MakeCoin(c, true, cs_params));\n+    }\n+}\n+\n+/** Make multiple coins that share the same effective value */\n+static void AddDuplicateCoins(std::vector<OutputGroup>& utxo_pool, int count, int amount) {\n+    for (int i = 0 ; i < count; ++i) {\n+        utxo_pool.push_back(MakeCoin(amount));\n+    }\n+}\n+\n+/** Check if SelectionResult a is equivalent to SelectionResult b.\n+ * Two results are equivalent if they are composed of the same input values, even if they have different inputs (i.e., same value, different prevout) */\n+static bool HaveEquivalentValues(const SelectionResult& a, const SelectionResult& b)\n+{\n+    std::vector<CAmount> a_amts;\n+    std::vector<CAmount> b_amts;\n+    for (const auto& coin : a.GetInputSet()) {\n+        a_amts.push_back(coin->txout.nValue);\n+    }\n+    for (const auto& coin : b.GetInputSet()) {\n+        b_amts.push_back(coin->txout.nValue);\n+    }\n+    std::sort(a_amts.begin(), a_amts.end());\n+    std::sort(b_amts.begin(), b_amts.end());\n+\n+    auto ret = std::mismatch(a_amts.begin(), a_amts.end(), b_amts.begin());\n+    return ret.first == a_amts.end() && ret.second == b_amts.end();\n+}\n+\n+static std::string InputsToString(const SelectionResult& selection)\n+{\n+    std::string res = \"[ \";\n+    for (const auto& input : selection.GetInputSet()) {\n+        res += util::ToString(input->txout.nValue);\n+        res += \" \";\n+    }\n+    return res + \"]\";\n+}\n+\n+static void TestBnBSuccess(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CoinSelectionParams& cs_params = default_cs_params)\n+{\n+    SelectionResult expected_result(CAmount(0), SelectionAlgorithm::BNB);\n+    CAmount expected_amount = 0;\n+    for (CAmount input_amount : expected_input_amounts) {\n+        OutputGroup group = MakeCoin(input_amount, true, cs_params);\n+        expected_amount += group.m_value;\n+        expected_result.AddInput(group);\n+    }\n+\n+    const auto result = SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/default_cs_params.m_cost_of_change, /*max_selection_weight=*/MAX_STANDARD_TX_WEIGHT);\n+    BOOST_CHECK_MESSAGE(result, \"Falsy result in BnB-Success: \" + test_title);\n+    BOOST_CHECK_MESSAGE(HaveEquivalentValues(expected_result, *result), strprintf(\"Result mismatch in BnB-Success: %s. Expected %s, but got %s\", test_title, InputsToString(expected_result), InputsToString(*result)));\n+    BOOST_CHECK_MESSAGE(result->GetSelectedValue() == expected_amount, strprintf(\"Selected amount mismatch in BnB-Success: %s. Expected %d, but got %d\", test_title, expected_amount, result->GetSelectedValue()));\n+}\n+\n+static void TestBnBFail(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target)\n+{\n+    BOOST_CHECK_MESSAGE(!SelectCoinsBnB(utxo_pool, selection_target, /*cost_of_change=*/default_cs_params.m_cost_of_change, /*max_selection_weight=*/MAX_STANDARD_TX_WEIGHT), \"BnB-Fail: \" + test_title);\n+}\n+\n+BOOST_AUTO_TEST_CASE(bnb_test)\n+{\n+    std::vector<OutputGroup> utxo_pool;\n+\n+    // Fail for empty UTXO pool\n+    TestBnBFail(\"Empty UTXO pool\", utxo_pool, /*selection_target=*/1 * CENT);\n+\n+    AddCoins(utxo_pool, {1 * CENT, 3 * CENT, 5 * CENT});\n+\n+    // Simple success cases\n+    TestBnBSuccess(\"Select smallest UTXO\", utxo_pool, /*selection_target=*/1 * CENT, /*expected_input_amounts=*/{1 * CENT});\n+    TestBnBSuccess(\"Select middle UTXO\", utxo_pool, /*selection_target=*/3 * CENT, /*expected_input_amounts=*/{3 * CENT});\n+    TestBnBSuccess(\"Select biggest UTXO\", utxo_pool, /*selection_target=*/5 * CENT, /*expected_input_amounts=*/{5 * CENT});\n+    TestBnBSuccess(\"Select two UTXOs\", utxo_pool, /*selection_target=*/4 * CENT, /*expected_input_amounts=*/{1 * CENT, 3 * CENT});\n+    TestBnBSuccess(\"Select all UTXOs\", utxo_pool, /*selection_target=*/9 * CENT, /*expected_input_amounts=*/{1 * CENT, 3 * CENT, 5 * CENT});\n+\n+    // BnB finds changeless solution while overshooting by up to cost_of_change\n+    TestBnBSuccess(\"Select upper bound\", utxo_pool, /*selection_target=*/4 * CENT - default_cs_params.m_cost_of_change, /*expected_input_amounts=*/{1 * CENT, 3 * CENT});\n+\n+    // BnB fails to find changeless solution when overshooting by cost_of_change + 1 sat\n+    TestBnBFail(\"Overshoot upper bound\", utxo_pool, /*selection_target=*/4 * CENT - default_cs_params.m_cost_of_change - 1);\n+\n+    // Simple cases without BnB solution\n+    TestBnBFail(\"Smallest combination too big\", utxo_pool, /*selection_target=*/0.5 * CENT);\n+    TestBnBFail(\"No UTXO combination in target window\", utxo_pool, /*selection_target=*/7 * CENT);\n+    TestBnBFail(\"Select more than available\", utxo_pool, /*selection_target=*/10 * CENT);\n+\n+    // Test skipping of equivalent input sets\n+    std::vector<OutputGroup> clone_pool;\n+    AddCoins(clone_pool, {2 * CENT, 7 * CENT, 7 * CENT});\n+    AddDuplicateCoins(clone_pool, 50'000, 5 * CENT);\n+    TestBnBSuccess(\"Skip equivalent input sets\", clone_pool, /*selection_target=*/16 * CENT, /*expected_input_amounts=*/{2 * CENT, 7 * CENT, 7 * CENT});\n+\n+    /* Test BnB attempt limit (`TOTAL_TRIES`)\n+     *\n+     * Generally, on a diverse UTXO pool BnB will quickly pass over UTXOs bigger than the target and then start\n+     * combining small counts of UTXOs that in sum remain under the selection_target+cost_of_change. When there are\n+     * multiple UTXOs that have matching amount and cost, combinations with equivalent input sets are skipped. The UTXO\n+     * pool for this test is specifically crafted to create as much branching as possible. The selection target is\n+     * 8 CENT while all UTXOs are slightly bigger than 1 CENT. The smallest eight are 100,000…100,007 sats, while the larger\n+     * ten are 100,009,…,100,018 sats plus cost_of_change.\n+     *\n+     * Because BnB will only select input sets that fall between selection_target and selection_target + cost_of_change,\n+     * and the search traverses the UTXO pool from large amount to small amount, the search will traverse every single\n+     * combination of eight inputs, but all except the last will overshoot by more than cost_of_change on the eighth\n+     * input. Only the very last combination with the eight smallest UTXOs falls into the target window.\n+     */\n+    std::vector<OutputGroup> doppelganger_pool;\n+    std::vector<CAmount> doppelgangers;\n+    std::vector<CAmount> expected_inputs;\n+    for (int i = 0; i < 17; ++i) {\n+        if (i < 8) {\n+            // The eight smallest UTXOs can be combined to create expected_result\n+            doppelgangers.push_back(1 * CENT + i);\n+            expected_inputs.push_back(doppelgangers[i]);\n+        } else {\n+            // Any eight UTXOs including at least one UTXO with the added cost_of_change will exceed target window\n+            doppelgangers.push_back(1 * CENT + default_cs_params.m_cost_of_change + i);\n+        }\n+    }\n+    AddCoins(doppelganger_pool, doppelgangers);\n+    // Among up to 17 unique UTXOs of similar effective value we will find a solution composed of the eight smallest UTXOs\n+    TestBnBSuccess(\"Combine smallest 8 of 17 unique UTXOs\", doppelganger_pool, /*selection_target=*/8 * CENT, /*expected_input_amounts=*/expected_inputs);\n+\n+    // Starting with 18 unique UTXOs of similar effective value we will not find the solution due to exceeding the attempt limit\n+    AddCoins(doppelganger_pool, {1 * CENT + default_cs_params.m_cost_of_change + 17});\n+    TestBnBFail(\"Exhaust looking for smallest 8 of 18 unique UTXOs\", doppelganger_pool, /*selection_target=*/8 * CENT);\n+}\n+\n+BOOST_AUTO_TEST_CASE(bnb_feerate_sensitivity_test)\n+{\n+    // Create sets of UTXOs with the same effective amounts at different feerates (but different absolute amounts)\n+    std::vector<OutputGroup> low_feerate_pool; // 5 sat/vB (default, and lower than long_term_feerate of 10 sat/vB)",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": 201,
      "original_position": 194,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "644335ac3d5b8ca4a55bd83e9a5bd3154c186639",
      "in_reply_to_id": 2010820383,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks.  It's sort of interesting that this sort of thing doesn't even appear in the Github review.  This implies that if one only reviews by Github diff, there is hidden characters that can go in un-noticed.  Presumably in this case, there is some editors that can translated this UTF-8 encoding.",
      "created_at": "2025-03-26T15:13:23Z",
      "updated_at": "2025-03-26T15:13:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r2014404157",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2014404157"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 201,
      "original_line": 201,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019470411",
      "pull_request_review_id": 2726918837,
      "id": 2019470411,
      "node_id": "PRRC_kwDOABII5854XqxL",
      "diff_hunk": "@@ -151,6 +151,41 @@ BOOST_AUTO_TEST_CASE(bnb_test)\n     AddCoins(clone_pool, {2 * CENT, 7 * CENT, 7 * CENT});\n     AddDuplicateCoins(clone_pool, 50'000, 5 * CENT);\n     TestBnBSuccess(\"Skip equivalent input sets\", clone_pool, /*selection_target=*/16 * CENT, /*expected_input_amounts=*/{2 * CENT, 7 * CENT, 7 * CENT});\n+\n+    /* Test BnB attempt limit (`TOTAL_TRIES`)",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "644335ac3d5b8ca4a55bd83e9a5bd3154c186639",
      "in_reply_to_id": 1996437543,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done here: https://github.com/bitcoin/bitcoin/pull/32150/commits/e2a4d86131e8f1661eb450c50b8072147965b111",
      "created_at": "2025-03-28T21:58:55Z",
      "updated_at": "2025-03-28T21:58:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r2019470411",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019470411"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021710235",
      "pull_request_review_id": 2730416367,
      "id": 2021710235,
      "node_id": "PRRC_kwDOABII5854gNmb",
      "diff_hunk": "@@ -151,6 +151,41 @@ BOOST_AUTO_TEST_CASE(bnb_test)\n     AddCoins(clone_pool, {2 * CENT, 7 * CENT, 7 * CENT});\n     AddDuplicateCoins(clone_pool, 50'000, 5 * CENT);\n     TestBnBSuccess(\"Skip equivalent input sets\", clone_pool, /*selection_target=*/16 * CENT, /*expected_input_amounts=*/{2 * CENT, 7 * CENT, 7 * CENT});\n+\n+    /* Test BnB attempt limit (`TOTAL_TRIES`)\n+     *\n+     * Generally, on a diverse UTXO pool BnB will quickly pass over UTXOs bigger than the target and then start\n+     * combining small counts of UTXOs that in sum remain under the selection_target+cost_of_change. When there are\n+     * multiple UTXOs that have matching amount and cost, combinations with equivalent input sets are skipped. The UTXO\n+     * pool for this test is specifically crafted to create as much branching as possible. The selection target is\n+     * 8 CENT while all UTXOs are slightly bigger than 1 CENT. The smallest eight are 100,000…100,007 sats, while the larger\n+     * ten are 100,009,…,100,018 sats plus cost_of_change.",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "0f39b6b919b7d731f6a372708b9539271aab805e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n     * nine are 100,008,…,100,016 sats plus cost_of_change.\r\n```",
      "created_at": "2025-03-31T20:18:20Z",
      "updated_at": "2025-03-31T20:19:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r2021710235",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021710235"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 162,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2047995904",
      "pull_request_review_id": 2774220883,
      "id": 2047995904,
      "node_id": "PRRC_kwDOABII5856EfAA",
      "diff_hunk": "@@ -10,6 +10,7 @@ target_sources(test_bitcoin\n     wallet_test_fixture.cpp\n     db_tests.cpp\n     coinselector_tests.cpp\n+    coinselection_tests.cpp",
      "path": "src/wallet/test/CMakeLists.txt",
      "position": 4,
      "original_position": 4,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "1fb24c68a13de965f4f99664a5c1d1a4bb6eddc3",
      "in_reply_to_id": null,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Since `coinselection_tests.cpp` is introduced in the first commit, this change may be there as well.",
      "created_at": "2025-04-17T00:39:22Z",
      "updated_at": "2025-04-17T00:46:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r2047995904",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2047995904"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 13,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2048001478",
      "pull_request_review_id": 2774220883,
      "id": 2048001478,
      "node_id": "PRRC_kwDOABII5856EgXG",
      "diff_hunk": "@@ -0,0 +1,215 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <policy/policy.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, TestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test.\n+ * We use P2WPKH input and output weights for the change weights. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,\n+        /*change_spend_size=*/68,\n+        /*min_change_target=*/50'000,\n+        /*effective_feerate=*/CFeeRate(5000),\n+        /*long_term_feerate=*/CFeeRate(10'000),\n+        /*discard_feerate=*/CFeeRate(3000),\n+        /*tx_noinputs_size=*/11 + 31, //static header size + output size\n+        /*avoid_partial=*/false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.min_viable_change = /*204 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/dcsp.min_viable_change + dcsp.m_change_fee;\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one OutputGroup with a single UTXO that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static OutputGroup MakeCoin(const CAmount& amount, bool is_eff_value = true, CoinSelectionParams cs_params = default_cs_params, int custom_spending_vsize = 68)\n+{\n+    // Always assume that we only have one input\n+    CMutableTransaction tx;\n+    tx.vout.resize(1);\n+    CAmount fees = cs_params.m_effective_feerate.GetFee(custom_spending_vsize);\n+    tx.vout[0].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = next_lock_time++;        // so all transactions get different hashes\n+    OutputGroup group(cs_params);\n+    group.Insert(std::make_shared<COutput>(COutPoint(tx.GetHash(), 0), tx.vout.at(0), /*depth=*/1, /*input_bytes=*/custom_spending_vsize, /*spendable=*/true, /*solvable=*/true, /*safe=*/true, /*time=*/0, /*from_me=*/false, /*fees=*/fees), /*ancestors=*/0, /*descendants=*/0);\n+    return group;\n+}\n+\n+/** Make multiple OutputGroups with the given values as their effective value */\n+static void AddCoins(std::vector<OutputGroup>& utxo_pool, std::vector<CAmount> coins, CoinSelectionParams cs_params = default_cs_params)\n+{\n+    for (CAmount c : coins) {\n+        utxo_pool.push_back(MakeCoin(c, true, cs_params));\n+    }\n+}\n+\n+/** Make multiple coins that share the same effective value */\n+static void AddDuplicateCoins(std::vector<OutputGroup>& utxo_pool, int count, int amount) {\n+    for (int i = 0 ; i < count; ++i) {\n+        utxo_pool.push_back(MakeCoin(amount));\n+    }\n+}\n+\n+/** Check if SelectionResult a is equivalent to SelectionResult b.\n+ * Two results are equivalent if they are composed of the same input values, even if they have different inputs (i.e., same value, different prevout) */\n+static bool HaveEquivalentValues(const SelectionResult& a, const SelectionResult& b)\n+{\n+    std::vector<CAmount> a_amts;\n+    std::vector<CAmount> b_amts;\n+    for (const auto& coin : a.GetInputSet()) {\n+        a_amts.push_back(coin->txout.nValue);\n+    }\n+    for (const auto& coin : b.GetInputSet()) {\n+        b_amts.push_back(coin->txout.nValue);\n+    }\n+    std::sort(a_amts.begin(), a_amts.end());\n+    std::sort(b_amts.begin(), b_amts.end());\n+\n+    auto ret = std::mismatch(a_amts.begin(), a_amts.end(), b_amts.begin());\n+    return ret.first == a_amts.end() && ret.second == b_amts.end();\n+}\n+\n+static std::string InputsToString(const SelectionResult& selection)",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 91,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "1fb24c68a13de965f4f99664a5c1d1a4bb6eddc3",
      "in_reply_to_id": null,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Just for clarity\r\n```suggestion\r\nstatic std::string InputAmountsToString(const SelectionResult& selection)\r\n```",
      "created_at": "2025-04-17T00:42:48Z",
      "updated_at": "2025-04-17T00:46:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r2048001478",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2048001478"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2048003665",
      "pull_request_review_id": 2774220883,
      "id": 2048003665,
      "node_id": "PRRC_kwDOABII5856Eg5R",
      "diff_hunk": "@@ -0,0 +1,215 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <policy/policy.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, TestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test.\n+ * We use P2WPKH input and output weights for the change weights. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,\n+        /*change_spend_size=*/68,\n+        /*min_change_target=*/50'000,\n+        /*effective_feerate=*/CFeeRate(5000),\n+        /*long_term_feerate=*/CFeeRate(10'000),\n+        /*discard_feerate=*/CFeeRate(3000),\n+        /*tx_noinputs_size=*/11 + 31, //static header size + output size\n+        /*avoid_partial=*/false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.min_viable_change = /*204 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/dcsp.min_viable_change + dcsp.m_change_fee;\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one OutputGroup with a single UTXO that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static OutputGroup MakeCoin(const CAmount& amount, bool is_eff_value = true, CoinSelectionParams cs_params = default_cs_params, int custom_spending_vsize = 68)\n+{\n+    // Always assume that we only have one input\n+    CMutableTransaction tx;\n+    tx.vout.resize(1);\n+    CAmount fees = cs_params.m_effective_feerate.GetFee(custom_spending_vsize);\n+    tx.vout[0].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = next_lock_time++;        // so all transactions get different hashes\n+    OutputGroup group(cs_params);\n+    group.Insert(std::make_shared<COutput>(COutPoint(tx.GetHash(), 0), tx.vout.at(0), /*depth=*/1, /*input_bytes=*/custom_spending_vsize, /*spendable=*/true, /*solvable=*/true, /*safe=*/true, /*time=*/0, /*from_me=*/false, /*fees=*/fees), /*ancestors=*/0, /*descendants=*/0);\n+    return group;\n+}\n+\n+/** Make multiple OutputGroups with the given values as their effective value */\n+static void AddCoins(std::vector<OutputGroup>& utxo_pool, std::vector<CAmount> coins, CoinSelectionParams cs_params = default_cs_params)\n+{\n+    for (CAmount c : coins) {\n+        utxo_pool.push_back(MakeCoin(c, true, cs_params));\n+    }\n+}\n+\n+/** Make multiple coins that share the same effective value */\n+static void AddDuplicateCoins(std::vector<OutputGroup>& utxo_pool, int count, int amount) {\n+    for (int i = 0 ; i < count; ++i) {\n+        utxo_pool.push_back(MakeCoin(amount));\n+    }\n+}\n+\n+/** Check if SelectionResult a is equivalent to SelectionResult b.\n+ * Two results are equivalent if they are composed of the same input values, even if they have different inputs (i.e., same value, different prevout) */\n+static bool HaveEquivalentValues(const SelectionResult& a, const SelectionResult& b)\n+{\n+    std::vector<CAmount> a_amts;\n+    std::vector<CAmount> b_amts;\n+    for (const auto& coin : a.GetInputSet()) {\n+        a_amts.push_back(coin->txout.nValue);\n+    }\n+    for (const auto& coin : b.GetInputSet()) {\n+        b_amts.push_back(coin->txout.nValue);\n+    }\n+    std::sort(a_amts.begin(), a_amts.end());\n+    std::sort(b_amts.begin(), b_amts.end());\n+\n+    auto ret = std::mismatch(a_amts.begin(), a_amts.end(), b_amts.begin());\n+    return ret.first == a_amts.end() && ret.second == b_amts.end();\n+}\n+\n+static std::string InputsToString(const SelectionResult& selection)\n+{\n+    std::string res = \"[ \";\n+    for (const auto& input : selection.GetInputSet()) {\n+        res += util::ToString(input->txout.nValue);\n+        res += \" \";\n+    }\n+    return res + \"]\";\n+}\n+\n+static void TestBnBSuccess(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CoinSelectionParams& cs_params = default_cs_params, int custom_spending_vsize = 68)",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": 101,
      "original_position": 101,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "1fb24c68a13de965f4f99664a5c1d1a4bb6eddc3",
      "in_reply_to_id": null,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: This function is added in the commit https://github.com/bitcoin/bitcoin/pull/29532/commits/66200b3ffa21605fc3234ccbda7b424381f3319a and then modified in the commit https://github.com/bitcoin/bitcoin/pull/29532/commits/afd4b807ff1300e4f74ceab6a683f3ff1376369d.\r\nIt can be added directly as it is in the latest commit.",
      "created_at": "2025-04-17T00:46:00Z",
      "updated_at": "2025-04-17T00:46:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r2048003665",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2048003665"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 101,
      "original_line": 101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2065255362",
      "pull_request_review_id": 2801648769,
      "id": 2065255362,
      "node_id": "PRRC_kwDOABII5857GUvC",
      "diff_hunk": "@@ -10,6 +10,7 @@ target_sources(test_bitcoin\n     wallet_test_fixture.cpp\n     db_tests.cpp\n     coinselector_tests.cpp\n+    coinselection_tests.cpp",
      "path": "src/wallet/test/CMakeLists.txt",
      "position": 4,
      "original_position": 4,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "1fb24c68a13de965f4f99664a5c1d1a4bb6eddc3",
      "in_reply_to_id": 2047995904,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I had forgotten why I did it that way, but when I tried that, testing the first commit results in warnings that the helper functions are unused.",
      "created_at": "2025-04-29T02:20:45Z",
      "updated_at": "2025-04-29T02:20:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r2065255362",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2065255362"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 13,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2065270057",
      "pull_request_review_id": 2801667163,
      "id": 2065270057,
      "node_id": "PRRC_kwDOABII5857GYUp",
      "diff_hunk": "@@ -0,0 +1,215 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <policy/policy.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, TestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test.\n+ * We use P2WPKH input and output weights for the change weights. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,\n+        /*change_spend_size=*/68,\n+        /*min_change_target=*/50'000,\n+        /*effective_feerate=*/CFeeRate(5000),\n+        /*long_term_feerate=*/CFeeRate(10'000),\n+        /*discard_feerate=*/CFeeRate(3000),\n+        /*tx_noinputs_size=*/11 + 31, //static header size + output size\n+        /*avoid_partial=*/false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.min_viable_change = /*204 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/dcsp.min_viable_change + dcsp.m_change_fee;\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one OutputGroup with a single UTXO that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static OutputGroup MakeCoin(const CAmount& amount, bool is_eff_value = true, CoinSelectionParams cs_params = default_cs_params, int custom_spending_vsize = 68)\n+{\n+    // Always assume that we only have one input\n+    CMutableTransaction tx;\n+    tx.vout.resize(1);\n+    CAmount fees = cs_params.m_effective_feerate.GetFee(custom_spending_vsize);\n+    tx.vout[0].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = next_lock_time++;        // so all transactions get different hashes\n+    OutputGroup group(cs_params);\n+    group.Insert(std::make_shared<COutput>(COutPoint(tx.GetHash(), 0), tx.vout.at(0), /*depth=*/1, /*input_bytes=*/custom_spending_vsize, /*spendable=*/true, /*solvable=*/true, /*safe=*/true, /*time=*/0, /*from_me=*/false, /*fees=*/fees), /*ancestors=*/0, /*descendants=*/0);\n+    return group;\n+}\n+\n+/** Make multiple OutputGroups with the given values as their effective value */\n+static void AddCoins(std::vector<OutputGroup>& utxo_pool, std::vector<CAmount> coins, CoinSelectionParams cs_params = default_cs_params)\n+{\n+    for (CAmount c : coins) {\n+        utxo_pool.push_back(MakeCoin(c, true, cs_params));\n+    }\n+}\n+\n+/** Make multiple coins that share the same effective value */\n+static void AddDuplicateCoins(std::vector<OutputGroup>& utxo_pool, int count, int amount) {\n+    for (int i = 0 ; i < count; ++i) {\n+        utxo_pool.push_back(MakeCoin(amount));\n+    }\n+}\n+\n+/** Check if SelectionResult a is equivalent to SelectionResult b.\n+ * Two results are equivalent if they are composed of the same input values, even if they have different inputs (i.e., same value, different prevout) */\n+static bool HaveEquivalentValues(const SelectionResult& a, const SelectionResult& b)\n+{\n+    std::vector<CAmount> a_amts;\n+    std::vector<CAmount> b_amts;\n+    for (const auto& coin : a.GetInputSet()) {\n+        a_amts.push_back(coin->txout.nValue);\n+    }\n+    for (const auto& coin : b.GetInputSet()) {\n+        b_amts.push_back(coin->txout.nValue);\n+    }\n+    std::sort(a_amts.begin(), a_amts.end());\n+    std::sort(b_amts.begin(), b_amts.end());\n+\n+    auto ret = std::mismatch(a_amts.begin(), a_amts.end(), b_amts.begin());\n+    return ret.first == a_amts.end() && ret.second == b_amts.end();\n+}\n+\n+static std::string InputsToString(const SelectionResult& selection)",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": null,
      "original_position": 91,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "1fb24c68a13de965f4f99664a5c1d1a4bb6eddc3",
      "in_reply_to_id": 2048001478,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Taken, thanks",
      "created_at": "2025-04-29T02:26:07Z",
      "updated_at": "2025-04-29T02:26:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r2065270057",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2065270057"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2065274288",
      "pull_request_review_id": 2801673386,
      "id": 2065274288,
      "node_id": "PRRC_kwDOABII5857GZWw",
      "diff_hunk": "@@ -0,0 +1,215 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <consensus/amount.h>\n+#include <policy/policy.h>\n+#include <wallet/coinselection.h>\n+#include <wallet/test/wallet_test_fixture.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(coinselection_tests, TestingSetup)\n+\n+static int next_lock_time = 0;\n+static FastRandomContext default_rand;\n+\n+/** Default coin selection parameters (dcsp) allow us to only explicitly set\n+ * parameters when a diverging value is relevant in the context of a test.\n+ * We use P2WPKH input and output weights for the change weights. */\n+static CoinSelectionParams init_default_params()\n+{\n+    CoinSelectionParams dcsp{\n+        /*rng_fast*/default_rand,\n+        /*change_output_size=*/31,\n+        /*change_spend_size=*/68,\n+        /*min_change_target=*/50'000,\n+        /*effective_feerate=*/CFeeRate(5000),\n+        /*long_term_feerate=*/CFeeRate(10'000),\n+        /*discard_feerate=*/CFeeRate(3000),\n+        /*tx_noinputs_size=*/11 + 31, //static header size + output size\n+        /*avoid_partial=*/false,\n+    };\n+    dcsp.m_change_fee = /*155 sats=*/dcsp.m_effective_feerate.GetFee(dcsp.change_output_size);\n+    dcsp.min_viable_change = /*204 sats=*/dcsp.m_discard_feerate.GetFee(dcsp.change_spend_size);\n+    dcsp.m_cost_of_change = /*204 + 155 sats=*/dcsp.min_viable_change + dcsp.m_change_fee;\n+    dcsp.m_subtract_fee_outputs = false;\n+    return dcsp;\n+}\n+\n+static const CoinSelectionParams default_cs_params = init_default_params();\n+\n+/** Make one OutputGroup with a single UTXO that either has a given effective value (default) or a given amount (`is_eff_value = false`). */\n+static OutputGroup MakeCoin(const CAmount& amount, bool is_eff_value = true, CoinSelectionParams cs_params = default_cs_params, int custom_spending_vsize = 68)\n+{\n+    // Always assume that we only have one input\n+    CMutableTransaction tx;\n+    tx.vout.resize(1);\n+    CAmount fees = cs_params.m_effective_feerate.GetFee(custom_spending_vsize);\n+    tx.vout[0].nValue = amount + int(is_eff_value) * fees;\n+    tx.nLockTime = next_lock_time++;        // so all transactions get different hashes\n+    OutputGroup group(cs_params);\n+    group.Insert(std::make_shared<COutput>(COutPoint(tx.GetHash(), 0), tx.vout.at(0), /*depth=*/1, /*input_bytes=*/custom_spending_vsize, /*spendable=*/true, /*solvable=*/true, /*safe=*/true, /*time=*/0, /*from_me=*/false, /*fees=*/fees), /*ancestors=*/0, /*descendants=*/0);\n+    return group;\n+}\n+\n+/** Make multiple OutputGroups with the given values as their effective value */\n+static void AddCoins(std::vector<OutputGroup>& utxo_pool, std::vector<CAmount> coins, CoinSelectionParams cs_params = default_cs_params)\n+{\n+    for (CAmount c : coins) {\n+        utxo_pool.push_back(MakeCoin(c, true, cs_params));\n+    }\n+}\n+\n+/** Make multiple coins that share the same effective value */\n+static void AddDuplicateCoins(std::vector<OutputGroup>& utxo_pool, int count, int amount) {\n+    for (int i = 0 ; i < count; ++i) {\n+        utxo_pool.push_back(MakeCoin(amount));\n+    }\n+}\n+\n+/** Check if SelectionResult a is equivalent to SelectionResult b.\n+ * Two results are equivalent if they are composed of the same input values, even if they have different inputs (i.e., same value, different prevout) */\n+static bool HaveEquivalentValues(const SelectionResult& a, const SelectionResult& b)\n+{\n+    std::vector<CAmount> a_amts;\n+    std::vector<CAmount> b_amts;\n+    for (const auto& coin : a.GetInputSet()) {\n+        a_amts.push_back(coin->txout.nValue);\n+    }\n+    for (const auto& coin : b.GetInputSet()) {\n+        b_amts.push_back(coin->txout.nValue);\n+    }\n+    std::sort(a_amts.begin(), a_amts.end());\n+    std::sort(b_amts.begin(), b_amts.end());\n+\n+    auto ret = std::mismatch(a_amts.begin(), a_amts.end(), b_amts.begin());\n+    return ret.first == a_amts.end() && ret.second == b_amts.end();\n+}\n+\n+static std::string InputsToString(const SelectionResult& selection)\n+{\n+    std::string res = \"[ \";\n+    for (const auto& input : selection.GetInputSet()) {\n+        res += util::ToString(input->txout.nValue);\n+        res += \" \";\n+    }\n+    return res + \"]\";\n+}\n+\n+static void TestBnBSuccess(std::string test_title, std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, const std::vector<CAmount>& expected_input_amounts, const CoinSelectionParams& cs_params = default_cs_params, int custom_spending_vsize = 68)",
      "path": "src/wallet/test/coinselection_tests.cpp",
      "position": 101,
      "original_position": 101,
      "commit_id": "dbf1f2663b1afbe03d6b1855f83db604bc79979e",
      "original_commit_id": "1fb24c68a13de965f4f99664a5c1d1a4bb6eddc3",
      "in_reply_to_id": 2048003665,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I did that on purpose to illustrate that the function now needs the custom weight for the new test",
      "created_at": "2025-04-29T02:27:30Z",
      "updated_at": "2025-04-29T02:27:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29532#discussion_r2065274288",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2065274288"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 101,
      "original_line": 101,
      "side": "RIGHT"
    }
  ]
}