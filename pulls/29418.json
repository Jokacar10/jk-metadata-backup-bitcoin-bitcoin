{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29418",
    "id": 1720888287,
    "node_id": "PR_kwDOABII585mkqvf",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/29418",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/29418.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/29418.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29418",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29418/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29418/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29418/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/db442f3d6e08d89031f1913695a6cc563f29c2c4",
    "number": 29418,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "rpc: provide per message stats for global traffic via new RPC 'getnetmsgstats'",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Introduce a new RPC, `getnetmsgstats` to retrieve traffic bytes and count of messages possibly broken down by:\r\n* direction (sent or received)\r\n* network (ipv4, tor, etc)\r\n* connection type (outbound-full-relay, block-relay-only, etc)\r\n* message type (verack, ping, etc)\r\n\r\nImplements: https://github.com/bitcoin/bitcoin/issues/26337 Add per message stats to getnettotals rpc\r\n\r\n---\r\n\r\nExamples:\r\n\r\n<details>\r\n<summary>bitcoin-cli getnetmsgstats '[\"direction\", \"network\", \"connection_type\", \"message_type\"]'</summary>\r\n\r\n```\r\n{\r\n  \"bytes\": 5392756,\r\n  \"count\": 32683\r\n}\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>bitcoin-cli getnetmsgstats '[\"direction\", \"network\", \"connection_type\"]'</summary>\r\n\r\n```\r\n{\r\n  \"sendcmpct\": {\r\n    \"bytes\": 975,\r\n    \"count\": 31\r\n  },\r\n  \"sendaddrv2\": {\r\n    \"bytes\": 816,\r\n    \"count\": 28\r\n  },\r\n  \"headers\": {\r\n    \"bytes\": 1786,\r\n    \"count\": 28\r\n  },\r\n  \"feefilter\": {\r\n    \"bytes\": 816,\r\n    \"count\": 27\r\n  },\r\n  \"version\": {\r\n    \"bytes\": 4843,\r\n    \"count\": 37\r\n  },\r\n  \"ping\": {\r\n    \"bytes\": 1104,\r\n    \"count\": 36\r\n  },\r\n  \"getaddr\": {\r\n    \"bytes\": 384,\r\n    \"count\": 13\r\n  },\r\n  \"block\": {\r\n    \"bytes\": 5128467,\r\n    \"count\": 20365\r\n  },\r\n  \"getheaders\": {\r\n    \"bytes\": 29436,\r\n    \"count\": 28\r\n  },\r\n  \"pong\": {\r\n    \"bytes\": 1040,\r\n    \"count\": 34\r\n  },\r\n  \"getdata\": {\r\n    \"bytes\": 1218925,\r\n    \"count\": 20008\r\n  },\r\n  \"sendheaders\": {\r\n    \"bytes\": 447,\r\n    \"count\": 16\r\n  },\r\n  \"wtxidrelay\": {\r\n    \"bytes\": 816,\r\n    \"count\": 28\r\n  },\r\n  \"addrv2\": {\r\n    \"bytes\": 301161,\r\n    \"count\": 25\r\n  },\r\n  \"verack\": {\r\n    \"bytes\": 816,\r\n    \"count\": 28\r\n  }\r\n}\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>bitcoin-cli getnetmsgstats '[\"direction\", \"connection_type\", \"message_type\"]'</summary>\r\n\r\n```\r\n{\r\n  \"i2p\": {\r\n    \"bytes\": 1311861,\r\n    \"count\": 8226\r\n  },\r\n  \"onion\": {\r\n    \"bytes\": 3932760,\r\n    \"count\": 24272\r\n  },\r\n  \"ipv6\": {\r\n    \"bytes\": 631265,\r\n    \"count\": 3362\r\n  },\r\n  \"ipv4\": {\r\n    \"bytes\": 1300106,\r\n    \"count\": 7773\r\n  }\r\n}\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>bitcoin-cli getnetmsgstats</summary>\r\n\r\n```\r\n{\r\n  \"recv\": {\r\n    \"i2p\": {\r\n      \"manual\": {\r\n        \"sendcmpct\": {\r\n          \"bytes\": 90,\r\n          \"count\": 3\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"bytes\": 99,\r\n          \"count\": 3\r\n        },\r\n        \"headers\": {\r\n          \"bytes\": 309,\r\n          \"count\": 3\r\n        },\r\n        \"feefilter\": {\r\n          \"bytes\": 87,\r\n          \"count\": 3\r\n        },\r\n        \"version\": {\r\n          \"bytes\": 408,\r\n          \"count\": 3\r\n        },\r\n        \"ping\": {\r\n          \"bytes\": 87,\r\n          \"count\": 3\r\n        },\r\n        \"block\": {\r\n          \"bytes\": 432950,\r\n          \"count\": 1794\r\n        },\r\n        \"getheaders\": {\r\n          \"bytes\": 3150,\r\n          \"count\": 3\r\n        },\r\n        \"pong\": {\r\n          \"bytes\": 87,\r\n          \"count\": 3\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"bytes\": 99,\r\n          \"count\": 3\r\n        },\r\n        \"addrv2\": {\r\n          \"bytes\": 68508,\r\n          \"count\": 3\r\n        },\r\n        \"verack\": {\r\n          \"bytes\": 99,\r\n          \"count\": 3\r\n        }\r\n      }\r\n    },\r\n    \"onion\": {\r\n      \"block-relay-only\": {\r\n        \"sendcmpct\": {\r\n          \"bytes\": 66,\r\n          \"count\": 2\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"headers\": {\r\n          \"bytes\": 106,\r\n          \"count\": 1\r\n        },\r\n        \"feefilter\": {\r\n          \"bytes\": 32,\r\n          \"count\": 1\r\n        },\r\n        \"version\": {\r\n          \"bytes\": 126,\r\n          \"count\": 1\r\n        },\r\n        \"ping\": {\r\n          \"bytes\": 64,\r\n          \"count\": 2\r\n        },\r\n        \"block\": {\r\n          \"bytes\": 478479,\r\n          \"count\": 1896\r\n        },\r\n        \"getheaders\": {\r\n          \"bytes\": 1053,\r\n          \"count\": 1\r\n        },\r\n        \"pong\": {\r\n          \"bytes\": 64,\r\n          \"count\": 2\r\n        },\r\n        \"sendheaders\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"verack\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        }\r\n      },\r\n      \"outbound-full-relay\": {\r\n        \"sendcmpct\": {\r\n          \"bytes\": 195,\r\n          \"count\": 6\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"bytes\": 129,\r\n          \"count\": 5\r\n        },\r\n        \"headers\": {\r\n          \"bytes\": 527,\r\n          \"count\": 5\r\n        },\r\n        \"feefilter\": {\r\n          \"bytes\": 157,\r\n          \"count\": 5\r\n        },\r\n        \"version\": {\r\n          \"bytes\": 639,\r\n          \"count\": 5\r\n        },\r\n        \"ping\": {\r\n          \"bytes\": 189,\r\n          \"count\": 6\r\n        },\r\n        \"block\": {\r\n          \"bytes\": 1465688,\r\n          \"count\": 5957\r\n        },\r\n        \"getheaders\": {\r\n          \"bytes\": 5262,\r\n          \"count\": 5\r\n        },\r\n        \"pong\": {\r\n          \"bytes\": 189,\r\n          \"count\": 6\r\n        },\r\n        \"sendheaders\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"bytes\": 129,\r\n          \"count\": 5\r\n        },\r\n        \"addrv2\": {\r\n          \"bytes\": 120693,\r\n          \"count\": 9\r\n        },\r\n        \"verack\": {\r\n          \"bytes\": 129,\r\n          \"count\": 5\r\n        }\r\n      }\r\n    },\r\n    \"ipv6\": {\r\n      \"manual\": {\r\n        \"sendcmpct\": {\r\n          \"bytes\": 120,\r\n          \"count\": 4\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"bytes\": 132,\r\n          \"count\": 4\r\n        },\r\n        \"headers\": {\r\n          \"bytes\": 412,\r\n          \"count\": 4\r\n        },\r\n        \"feefilter\": {\r\n          \"bytes\": 116,\r\n          \"count\": 4\r\n        },\r\n        \"version\": {\r\n          \"bytes\": 544,\r\n          \"count\": 4\r\n        },\r\n        \"ping\": {\r\n          \"bytes\": 116,\r\n          \"count\": 4\r\n        },\r\n        \"block\": {\r\n          \"bytes\": 138074,\r\n          \"count\": 583\r\n        },\r\n        \"getheaders\": {\r\n          \"bytes\": 4200,\r\n          \"count\": 4\r\n        },\r\n        \"pong\": {\r\n          \"bytes\": 116,\r\n          \"count\": 4\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"bytes\": 132,\r\n          \"count\": 4\r\n        },\r\n        \"addrv2\": {\r\n          \"bytes\": 93436,\r\n          \"count\": 4\r\n        },\r\n        \"verack\": {\r\n          \"bytes\": 132,\r\n          \"count\": 4\r\n        }\r\n      },\r\n      \"outbound-full-relay\": {\r\n        \"version\": {\r\n          \"bytes\": 126,\r\n          \"count\": 1\r\n        }\r\n      }\r\n    },\r\n    \"ipv4\": {\r\n      \"outbound-full-relay\": {\r\n        \"sendcmpct\": {\r\n          \"bytes\": 66,\r\n          \"count\": 2\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"headers\": {\r\n          \"bytes\": 106,\r\n          \"count\": 1\r\n        },\r\n        \"feefilter\": {\r\n          \"bytes\": 32,\r\n          \"count\": 1\r\n        },\r\n        \"version\": {\r\n          \"bytes\": 252,\r\n          \"count\": 2\r\n        },\r\n        \"ping\": {\r\n          \"bytes\": 32,\r\n          \"count\": 1\r\n        },\r\n        \"block\": {\r\n          \"bytes\": 313988,\r\n          \"count\": 1255\r\n        },\r\n        \"getheaders\": {\r\n          \"bytes\": 1053,\r\n          \"count\": 1\r\n        },\r\n        \"pong\": {\r\n          \"bytes\": 32,\r\n          \"count\": 1\r\n        },\r\n        \"sendheaders\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"addrv2\": {\r\n          \"bytes\": 40,\r\n          \"count\": 1\r\n        },\r\n        \"verack\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"sent\": {\r\n    \"i2p\": {\r\n      \"manual\": {\r\n        \"sendcmpct\": {\r\n          \"bytes\": 90,\r\n          \"count\": 3\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"bytes\": 99,\r\n          \"count\": 3\r\n        },\r\n        \"headers\": {\r\n          \"bytes\": 66,\r\n          \"count\": 3\r\n        },\r\n        \"feefilter\": {\r\n          \"bytes\": 87,\r\n          \"count\": 3\r\n        },\r\n        \"version\": {\r\n          \"bytes\": 544,\r\n          \"count\": 4\r\n        },\r\n        \"ping\": {\r\n          \"bytes\": 87,\r\n          \"count\": 3\r\n        },\r\n        \"getaddr\": {\r\n          \"bytes\": 99,\r\n          \"count\": 3\r\n        },\r\n        \"getheaders\": {\r\n          \"bytes\": 3150,\r\n          \"count\": 3\r\n        },\r\n        \"pong\": {\r\n          \"bytes\": 87,\r\n          \"count\": 3\r\n        },\r\n        \"getdata\": {\r\n          \"bytes\": 105382,\r\n          \"count\": 1789\r\n        },\r\n        \"sendheaders\": {\r\n          \"bytes\": 99,\r\n          \"count\": 3\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"bytes\": 99,\r\n          \"count\": 3\r\n        },\r\n        \"verack\": {\r\n          \"bytes\": 99,\r\n          \"count\": 3\r\n        }\r\n      }\r\n    },\r\n    \"onion\": {\r\n      \"block-relay-only\": {\r\n        \"sendcmpct\": {\r\n          \"bytes\": 33,\r\n          \"count\": 1\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"headers\": {\r\n          \"bytes\": 25,\r\n          \"count\": 1\r\n        },\r\n        \"version\": {\r\n          \"bytes\": 127,\r\n          \"count\": 1\r\n        },\r\n        \"ping\": {\r\n          \"bytes\": 64,\r\n          \"count\": 2\r\n        },\r\n        \"getheaders\": {\r\n          \"bytes\": 1053,\r\n          \"count\": 1\r\n        },\r\n        \"pong\": {\r\n          \"bytes\": 64,\r\n          \"count\": 2\r\n        },\r\n        \"getdata\": {\r\n          \"bytes\": 115932,\r\n          \"count\": 1884\r\n        },\r\n        \"sendheaders\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"verack\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        }\r\n      },\r\n      \"outbound-full-relay\": {\r\n        \"sendcmpct\": {\r\n          \"bytes\": 162,\r\n          \"count\": 5\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"bytes\": 129,\r\n          \"count\": 5\r\n        },\r\n        \"headers\": {\r\n          \"bytes\": 122,\r\n          \"count\": 5\r\n        },\r\n        \"feefilter\": {\r\n          \"bytes\": 157,\r\n          \"count\": 5\r\n        },\r\n        \"version\": {\r\n          \"bytes\": 771,\r\n          \"count\": 6\r\n        },\r\n        \"ping\": {\r\n          \"bytes\": 221,\r\n          \"count\": 7\r\n        },\r\n        \"getaddr\": {\r\n          \"bytes\": 129,\r\n          \"count\": 5\r\n        },\r\n        \"getheaders\": {\r\n          \"bytes\": 5262,\r\n          \"count\": 5\r\n        },\r\n        \"pong\": {\r\n          \"bytes\": 189,\r\n          \"count\": 6\r\n        },\r\n        \"getdata\": {\r\n          \"bytes\": 363478,\r\n          \"count\": 5932\r\n        },\r\n        \"sendheaders\": {\r\n          \"bytes\": 129,\r\n          \"count\": 5\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"bytes\": 129,\r\n          \"count\": 5\r\n        },\r\n        \"addrv2\": {\r\n          \"bytes\": 231,\r\n          \"count\": 4\r\n        },\r\n        \"verack\": {\r\n          \"bytes\": 129,\r\n          \"count\": 5\r\n        }\r\n      }\r\n    },\r\n    \"ipv6\": {\r\n      \"manual\": {\r\n        \"sendcmpct\": {\r\n          \"bytes\": 120,\r\n          \"count\": 4\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"bytes\": 132,\r\n          \"count\": 4\r\n        },\r\n        \"headers\": {\r\n          \"bytes\": 88,\r\n          \"count\": 4\r\n        },\r\n        \"feefilter\": {\r\n          \"bytes\": 116,\r\n          \"count\": 4\r\n        },\r\n        \"version\": {\r\n          \"bytes\": 544,\r\n          \"count\": 4\r\n        },\r\n        \"ping\": {\r\n          \"bytes\": 116,\r\n          \"count\": 4\r\n        },\r\n        \"getaddr\": {\r\n          \"bytes\": 132,\r\n          \"count\": 4\r\n        },\r\n        \"getheaders\": {\r\n          \"bytes\": 4200,\r\n          \"count\": 4\r\n        },\r\n        \"pong\": {\r\n          \"bytes\": 116,\r\n          \"count\": 4\r\n        },\r\n        \"getdata\": {\r\n          \"bytes\": 35492,\r\n          \"count\": 584\r\n        },\r\n        \"sendheaders\": {\r\n          \"bytes\": 99,\r\n          \"count\": 3\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"bytes\": 132,\r\n          \"count\": 4\r\n        },\r\n        \"verack\": {\r\n          \"bytes\": 132,\r\n          \"count\": 4\r\n        }\r\n      },\r\n      \"outbound-full-relay\": {\r\n        \"version\": {\r\n          \"bytes\": 254,\r\n          \"count\": 2\r\n        }\r\n      }\r\n    },\r\n    \"ipv4\": {\r\n      \"outbound-full-relay\": {\r\n        \"sendcmpct\": {\r\n          \"bytes\": 33,\r\n          \"count\": 1\r\n        },\r\n        \"sendaddrv2\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"headers\": {\r\n          \"bytes\": 25,\r\n          \"count\": 1\r\n        },\r\n        \"feefilter\": {\r\n          \"bytes\": 32,\r\n          \"count\": 1\r\n        },\r\n        \"version\": {\r\n          \"bytes\": 508,\r\n          \"count\": 4\r\n        },\r\n        \"ping\": {\r\n          \"bytes\": 32,\r\n          \"count\": 1\r\n        },\r\n        \"getaddr\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"getheaders\": {\r\n          \"bytes\": 1053,\r\n          \"count\": 1\r\n        },\r\n        \"pong\": {\r\n          \"bytes\": 32,\r\n          \"count\": 1\r\n        },\r\n        \"getdata\": {\r\n          \"bytes\": 76531,\r\n          \"count\": 1231\r\n        },\r\n        \"sendheaders\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"wtxidrelay\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        },\r\n        \"verack\": {\r\n          \"bytes\": 24,\r\n          \"count\": 1\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n</details>\r\n\r\n---\r\n\r\nPrevious incarnations of this:\r\nhttps://github.com/bitcoin/bitcoin/pull/27534 rpc: add 'getnetmsgstats', new rpc to view network message statistics (Thank you, @satsie!)\r\nhttps://github.com/bitcoin/bitcoin/pull/28926 rpc: add 'getnetmsgstats' RPC (Thank you, @willcl-ark!)",
    "labels": [
      {
        "id": 98279177,
        "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 955867938,
        "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
        "name": "Needs rebase",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2024-02-11T09:32:51Z",
    "updated_at": "2025-03-20T08:03:24Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merged": false,
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "vasild:getnetmsgstats",
      "ref": "getnetmsgstats",
      "sha": "db442f3d6e08d89031f1913695a6cc563f29c2c4",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 120608826,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMjA2MDg4MjY=",
        "name": "bitcoin",
        "full_name": "vasild/bitcoin",
        "owner": {
          "login": "vasild",
          "id": 266751,
          "node_id": "MDQ6VXNlcjI2Njc1MQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/vasild",
          "html_url": "https://github.com/vasild",
          "followers_url": "https://api.github.com/users/vasild/followers",
          "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
          "organizations_url": "https://api.github.com/users/vasild/orgs",
          "repos_url": "https://api.github.com/users/vasild/repos",
          "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/vasild/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/vasild/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/vasild/bitcoin",
        "archive_url": "https://api.github.com/repos/vasild/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/vasild/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/vasild/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/vasild/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/vasild/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/vasild/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/vasild/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/vasild/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/vasild/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/vasild/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/vasild/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/vasild/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/vasild/bitcoin/events",
        "forks_url": "https://api.github.com/repos/vasild/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/vasild/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/vasild/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/vasild/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/vasild/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/vasild/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/vasild/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/vasild/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/vasild/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/vasild/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/vasild/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/vasild/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/vasild/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/vasild/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/vasild/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/vasild/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:vasild/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/vasild/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/vasild/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/vasild/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/vasild/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/vasild/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/vasild/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/vasild/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/vasild/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/vasild/bitcoin/hooks",
        "svn_url": "https://github.com/vasild/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 7,
        "watchers_count": 7,
        "size": 254027,
        "default_branch": "master",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-03-20T05:41:59Z",
        "created_at": "2018-02-07T11:52:47Z",
        "updated_at": "2025-03-20T05:42:06Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "2d07384243c9552aa8e95c80d7a279e2d224a753",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36946,
        "stargazers_count": 82552,
        "watchers_count": 82552,
        "size": 278646,
        "default_branch": "master",
        "open_issues_count": 684,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-03-20T05:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-03-20T06:41:16Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29418"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 620,
    "deletions": 14,
    "changed_files": 10,
    "commits": 4,
    "review_comments": 20,
    "comments": 16
  },
  "events": [
    {
      "event": "mentioned",
      "id": 11766612855,
      "node_id": "MEE_lADOABII585-5KMwzwAAAAK9WEN3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11766612855",
      "actor": {
        "login": "satsie",
        "id": 1823216,
        "node_id": "MDQ6VXNlcjE4MjMyMTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1823216?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/satsie",
        "html_url": "https://github.com/satsie",
        "followers_url": "https://api.github.com/users/satsie/followers",
        "following_url": "https://api.github.com/users/satsie/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/satsie/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/satsie/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/satsie/subscriptions",
        "organizations_url": "https://api.github.com/users/satsie/orgs",
        "repos_url": "https://api.github.com/users/satsie/repos",
        "events_url": "https://api.github.com/users/satsie/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/satsie/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T09:32:51Z"
    },
    {
      "event": "subscribed",
      "id": 11766612858,
      "node_id": "SE_lADOABII585-5KMwzwAAAAK9WEN6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11766612858",
      "actor": {
        "login": "satsie",
        "id": 1823216,
        "node_id": "MDQ6VXNlcjE4MjMyMTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1823216?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/satsie",
        "html_url": "https://github.com/satsie",
        "followers_url": "https://api.github.com/users/satsie/followers",
        "following_url": "https://api.github.com/users/satsie/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/satsie/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/satsie/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/satsie/subscriptions",
        "organizations_url": "https://api.github.com/users/satsie/orgs",
        "repos_url": "https://api.github.com/users/satsie/repos",
        "events_url": "https://api.github.com/users/satsie/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/satsie/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T09:32:51Z"
    },
    {
      "event": "mentioned",
      "id": 11766612860,
      "node_id": "MEE_lADOABII585-5KMwzwAAAAK9WEN8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11766612860",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T09:32:51Z"
    },
    {
      "event": "subscribed",
      "id": 11766612863,
      "node_id": "SE_lADOABII585-5KMwzwAAAAK9WEN_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11766612863",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T09:32:51Z"
    },
    {
      "event": "commented",
      "id": 1937491808,
      "node_id": "IC_kwDOABII585ze8dg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937491808",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T09:32:54Z",
      "updated_at": "2025-03-14T23:14:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/29418.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [epiccurious](https://github.com/bitcoin/bitcoin/pull/29418#issuecomment-1937894386) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#32061](https://github.com/bitcoin/bitcoin/pull/32061) ([draft] Replace libevent with our own HTTP and socket-handling implementation by pinheadmz)\n* [#31868](https://github.com/bitcoin/bitcoin/pull/31868) ([IBD] specialize block serialization by l0rinc)\n* [#31519](https://github.com/bitcoin/bitcoin/pull/31519) (refactor: Use std::span over Span by maflcko)\n* [#30988](https://github.com/bitcoin/bitcoin/pull/30988) (Split CConnman by vasild)\n* [#30951](https://github.com/bitcoin/bitcoin/pull/30951) (net: option to disallow v1 connection on ipv4 and ipv6 peers by stratospher)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#issuecomment-1937491808",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29418"
    },
    {
      "event": "labeled",
      "id": 11766612996,
      "node_id": "LE_lADOABII585-5KMwzwAAAAK9WEQE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11766612996",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T09:32:56Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "labeled",
      "id": 11766739836,
      "node_id": "LE_lADOABII585-5KMwzwAAAAK9WjN8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11766739836",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T10:51:03Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1937560129,
      "node_id": "IC_kwDOABII585zfNJB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937560129",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T10:51:04Z",
      "updated_at": "2024-02-11T10:51:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/21448984768</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#issuecomment-1937560129",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29418"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11766921232,
      "node_id": "HRFPE_lADOABII585-5KMwzwAAAAK9XPgQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11766921232",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "91c90d759503aa3fa15b330bba2148698cdc271d",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/91c90d759503aa3fa15b330bba2148698cdc271d",
      "created_at": "2024-02-11T12:45:15Z"
    },
    {
      "event": "unlabeled",
      "id": 11767067109,
      "node_id": "UNLE_lADOABII585-5KMwzwAAAAK9XzHl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11767067109",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T13:50:39Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1937894386,
      "node_id": "IC_kwDOABII585zgevy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937894386",
      "actor": {
        "login": "epiccurious",
        "id": 109078515,
        "node_id": "U_kgDOBoBn8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/109078515?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/epiccurious",
        "html_url": "https://github.com/epiccurious",
        "followers_url": "https://api.github.com/users/epiccurious/followers",
        "following_url": "https://api.github.com/users/epiccurious/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/epiccurious/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/epiccurious/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/epiccurious/subscriptions",
        "organizations_url": "https://api.github.com/users/epiccurious/orgs",
        "repos_url": "https://api.github.com/users/epiccurious/repos",
        "events_url": "https://api.github.com/users/epiccurious/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/epiccurious/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T22:26:43Z",
      "updated_at": "2024-02-11T22:26:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK 91c90d759503aa3fa15b330bba2148698cdc271d.",
      "user": {
        "login": "epiccurious",
        "id": 109078515,
        "node_id": "U_kgDOBoBn8w",
        "avatar_url": "https://avatars.githubusercontent.com/u/109078515?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/epiccurious",
        "html_url": "https://github.com/epiccurious",
        "followers_url": "https://api.github.com/users/epiccurious/followers",
        "following_url": "https://api.github.com/users/epiccurious/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/epiccurious/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/epiccurious/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/epiccurious/subscriptions",
        "organizations_url": "https://api.github.com/users/epiccurious/orgs",
        "repos_url": "https://api.github.com/users/epiccurious/repos",
        "events_url": "https://api.github.com/users/epiccurious/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/epiccurious/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#issuecomment-1937894386",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29418"
    },
    {
      "event": "labeled",
      "id": 12083675874,
      "node_id": "LE_lADOABII585-5KMwzwAAAALQPkLi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12083675874",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-12T06:18:50Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2037361057,
      "node_id": "IC_kwDOABII5855b6mh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2037361057",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-04T14:24:37Z",
      "updated_at": "2024-04-04T14:24:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "Needs rebase if still relevant",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#issuecomment-2037361057",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29418"
    },
    {
      "event": "review_requested",
      "id": 12409243249,
      "node_id": "RRE_lADOABII585-5KMwzwAAAALjpgZx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12409243249",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-09T15:52:03Z",
      "requested_reviewer": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 2045595297,
      "node_id": "IC_kwDOABII58557U6h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2045595297",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-09T16:20:24Z",
      "updated_at": "2024-04-09T16:23:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "just fyi as this came up: You could count up message stats with the inbound and outbound message tracepoints. However, this does only gives you stats from the points on where you start hooking into the tracepoints, might not be as user friendly (RPC is easier to use than the tracepoints), and the tracepoints currently only work on Linux.\r\n\r\nWhile I personally don't need it, I see why some node operators need traffic statistics. E.g. How much of my (limited monthly) traffic is used up by inbound connections?",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#issuecomment-2045595297",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29418"
    },
    {
      "event": "convert_to_draft",
      "id": 12569940907,
      "node_id": "CTDE_lADOABII585-5KMwzwAAAALtOhOr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12569940907",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-23T06:28:19Z"
    },
    {
      "event": "commented",
      "id": 2071502636,
      "node_id": "IC_kwDOABII5857eJ8s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2071502636",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-23T06:28:45Z",
      "updated_at": "2024-04-23T06:28:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "Converted to draft due to failing CI and inactivity ",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#issuecomment-2071502636",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29418"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12757421106,
      "node_id": "HRFPE_lADOABII585-5KMwzwAAAAL4Zswy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12757421106",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6bfda84b921dd21e45441e9fb817ebeb4ee9bbe1",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/6bfda84b921dd21e45441e9fb817ebeb4ee9bbe1",
      "created_at": "2024-05-09T13:40:05Z"
    },
    {
      "event": "commented",
      "id": 2102685727,
      "node_id": "IC_kwDOABII5859VHAf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2102685727",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-09T13:40:37Z",
      "updated_at": "2024-05-09T13:40:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "`91c90d7595...6bfda84b92`: rebase, pick changes from https://github.com/bitcoin/bitcoin/pull/29421 and adjust the newly added test.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#issuecomment-2102685727",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29418"
    },
    {
      "event": "unlabeled",
      "id": 12758197019,
      "node_id": "UNLE_lADOABII585-5KMwzwAAAAL4cqMb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12758197019",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-09T14:42:44Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 12883624455,
      "node_id": "REFE_lADOABII585-5KMwzwAAAAL_7IIH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12883624455",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6c13b1375f8fd810f46f5650e01a464ee63cfa46",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c13b1375f8fd810f46f5650e01a464ee63cfa46",
      "created_at": "2024-05-21T17:59:47Z"
    },
    {
      "event": "labeled",
      "id": 12884611786,
      "node_id": "LE_lADOABII585-5KMwzwAAAAL_-5LK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12884611786",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-21T19:34:47Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12906710732,
      "node_id": "HRFPE_lADOABII585-5KMwzwAAAAMBTMbM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12906710732",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b5189f543cd5fedc38395a85930c609c09fd34c7",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/b5189f543cd5fedc38395a85930c609c09fd34c7",
      "created_at": "2024-05-23T09:50:42Z"
    },
    {
      "event": "commented",
      "id": 2126693545,
      "node_id": "IC_kwDOABII585-wsSp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2126693545",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-23T09:51:33Z",
      "updated_at": "2024-05-23T09:51:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "`6bfda84b92...b5189f543c`: rebase due to conflicts (part of this PR was merged via https://github.com/bitcoin/bitcoin/pull/29421)",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#issuecomment-2126693545",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29418"
    },
    {
      "event": "ready_for_review",
      "id": 12906721687,
      "node_id": "RFRE_lADOABII585-5KMwzwAAAAMBTPGX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12906721687",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-23T09:51:36Z"
    },
    {
      "event": "unlabeled",
      "id": 12906963183,
      "node_id": "UNLE_lADOABII585-5KMwzwAAAAMBUKDv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12906963183",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-23T10:11:03Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12908845171,
      "node_id": "HRFPE_lADOABII585-5KMwzwAAAAMBbVhz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12908845171",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "68dfd4270c5cdbc5009791c8a22aeac6c0d84ffa",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/68dfd4270c5cdbc5009791c8a22aeac6c0d84ffa",
      "created_at": "2024-05-23T12:38:48Z"
    },
    {
      "event": "labeled",
      "id": 12908846262,
      "node_id": "LE_lADOABII585-5KMwzwAAAAMBbVy2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12908846262",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-23T12:38:52Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 12914633214,
      "node_id": "UNLE_lADOABII585-5KMwzwAAAAMBxan-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12914633214",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-23T20:03:13Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 13860740072,
      "node_id": "LE_lADOABII585-5KMwzwAAAAM6Khvo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13860740072",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-13T09:45:08Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14112966678,
      "node_id": "HRFPE_lADOABII585-5KMwzwAAAANJMsgW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14112966678",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f85814052de368bcbb1176d87c8c4a7cb9cd2b1d",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/f85814052de368bcbb1176d87c8c4a7cb9cd2b1d",
      "created_at": "2024-09-03T10:30:05Z"
    },
    {
      "event": "commented",
      "id": 2326170413,
      "node_id": "IC_kwDOABII586Kpost",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2326170413",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-03T10:30:30Z",
      "updated_at": "2024-09-03T10:30:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "`68dfd4270c...f85814052d`: rebase due to conflicts and to pick CMake",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#issuecomment-2326170413",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29418"
    },
    {
      "event": "unlabeled",
      "id": 14113494499,
      "node_id": "UNLE_lADOABII585-5KMwzwAAAANJOtXj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14113494499",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-03T11:13:06Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 14323263871,
      "node_id": "LE_lADOABII585-5KMwzwAAAANVu6l_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14323263871",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-19T12:24:09Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14453978884,
      "node_id": "HRFPE_lADOABII585-5KMwzwAAAANdhjcE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14453978884",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a8e531f92fd2347584d95bbcb9353597d2241fd1",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/a8e531f92fd2347584d95bbcb9353597d2241fd1",
      "created_at": "2024-09-30T10:59:15Z"
    },
    {
      "event": "commented",
      "id": 2382864737,
      "node_id": "IC_kwDOABII586OB6Fh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2382864737",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-30T10:59:33Z",
      "updated_at": "2024-09-30T10:59:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "`f85814052d...a8e531f92f`: rebase due to conflicts",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#issuecomment-2382864737",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29418"
    },
    {
      "event": "unlabeled",
      "id": 14455148367,
      "node_id": "UNLE_lADOABII585-5KMwzwAAAANdmA9P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14455148367",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-30T12:22:32Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2361526335,
      "node_id": "PRR_kwDOABII586Mwgg_",
      "url": null,
      "actor": null,
      "commit_id": "a8e531f92fd2347584d95bbcb9353597d2241fd1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Lightly tested, a few initial questions/comments. (Edit: I wonder if the code can be a bit less; it seems quite verbose.)",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#pullrequestreview-2361526335",
      "submitted_at": "2024-10-11T13:54:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29418"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14955843360,
      "node_id": "HRFPE_lADOABII585-5KMwzwAAAAN7cA8g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14955843360",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f42561e66750d95f0d21bca1930aa7c7f9279f38",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/f42561e66750d95f0d21bca1930aa7c7f9279f38",
      "created_at": "2024-10-28T11:05:56Z"
    },
    {
      "event": "commented",
      "id": 2441276551,
      "node_id": "IC_kwDOABII586RguyH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2441276551",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-28T11:06:19Z",
      "updated_at": "2024-10-28T11:06:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "`a8e531f92f...f42561e667`: rebase and address suggestions",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#issuecomment-2441276551",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29418"
    },
    {
      "event": "labeled",
      "id": 15611433183,
      "node_id": "LE_lADOABII585-5KMwzwAAAAOig5Df",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15611433183",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-11T04:57:05Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhjYmUwMmIzYWU0YWM0YWIzMDJlNTk4ZGRkOTk3NmFkMWRlNjYzNDE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8cbe02b3ae4ac4ab302e598ddd9976ad1de66341",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8cbe02b3ae4ac4ab302e598ddd9976ad1de66341",
      "tree": {
        "sha": "a511f5494a407ee6988fdcae24493c65edfb3e4e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a511f5494a407ee6988fdcae24493c65edfb3e4e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a511f5494a407ee6988fdcae24493c65edfb3e4e\nparent 449a25b9582e9daf694d2976cbdd5ed980435502\nauthor Vasil Dimov <vd@FreeBSD.org> 1700661829 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1737628377 +0100\n\nnet: count traffic bytes and number of messages globally\n\nBefore this change only per-peer stats were gathered. They\nare lost when the peer disconnects.\n\nSo, collect the traffic stats globally in `CConnman`, broken down by\n* direction (sent or received, (2))\n* network of the peer (IPv4, IPv6, Tor, I2P, CJDNS (5))\n* connection type (inbound, full outbound, feeler, etc, (6))\n* message type (verack, ping, etc, (36))\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmeSGtsACgkQVN8G9ktV\ny7/E8h//Xx5ZQ4EGx8U7E2V9Um6WeOv4PLUO+z3UjlIUEJnRMHNsN6XYE86YFCp/\ngTVW4+bzXPKIsGfdDXtn7RhbQrWZ9KwQjfZ7R+EgHHVPmVCe4LCNN+WEyZU0VZtg\nDzYJxpQYCQ+uiU4APd33v9suJA/jgfCDJ77Hfh83hhfZNv2Vp5QUV4tDAVpolfaX\n/QB/VpDAiwClV6FdV6i/aKOlULvyjOz91/9OaLM+Lg9mN2kNJ1mDEdgIa1/RkfDw\nHiahB+mRg3B4u38bmUKaSdL4g6/9U7v+yOpfXbMo/BceMqP+sa1SAw1hxn7fAZIS\nIKmPPyUeCnqQqp+C1uuHLY04rW/a36pBIMoxVyPSx6B6r2E72FLsY7PL/neEtVbN\noBYuTICehQYFBeum0UC5/y+0rTa/RyBML17SYTWzTTRjKWYGiB1PB+lzu12TqzsI\nMJ1caZ0dAieB7TKtRQ2F+zyHgRE9XUtbYmu3VZb4G8sIFAUQ04MJYMVXbvMtE/f+\n2KKVoQzSwbAzUROfZ9ZSabOOijRI7CWB9m49uTd+YAxBFrJZVxBJkOiNzsK0Aeqe\noVwPSERB9gczuOmaoNwj501cuLmUtRDU8gMKRsPHJBAXL+PjukaWZRmthjwnwGSJ\nBYbq+E5iW8j12dNDn6aYM8oeYHbiHode/gqqL35qhMkW9PoL8sVLvnD780cv3TeK\nX7lqQHEJe6cyNJXtfY4tXpp75G5y8UA/8EqSsifYGKxMNafPEhbenOIOXwM3UFgj\nwo3dsuTZq1horW9Gl+hzF2rhqvNzI7NHE/R1yOWoG2bBkavnQvV0flveR1O9Ducw\nvMHHPf4njmshWfPTLXkTdGVdoyjahr8AJ4Wukrqg7oxBeo56uugDEzGjwGgP9Q8J\nVMSC525fd20wCyBz4Q17hzqmUnk/UwuT5puMGDEg1GSJOsOHzZNPJPKeyS/fFXSo\nPJHj7CBrrd3hGjtRgdalbGC8JRhZu2BoWMGbzDlSWrlVhiUtygWIkcKuGYHBr0mZ\nVvRaLQZalZb0717kwwZumCLGjYWD6tAkHiMYtv/o+GftSalc6FMrEDUA9igLPIYM\nen3FVot4UdzFpuM551V+P5gBYz/fsXHFvJe/9YaqAEX3z+eBY8L1M4ryWx6c4R+g\ns/HDwtDT5ll9TZWPW/QKLjuANOzVC/wh4Ohe2jPGZHnCf68NEEwkh8cq3/IPwatt\n62MoHxbeyxyHwGE0Jg9TiLTMU/y2xA6lcx1IVcbnIS5+geDraYKdP8r+XITJDiJN\nfoggCFM8LsDjOEXpeawzrugUyTwPIzr5pz8mggbf5AkYbhpuMR8gF5xwd6oz1smJ\n3QGt2E6Jume6ZGJ74o73MWGgNvpGMA==\n=e1oC\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/449a25b9582e9daf694d2976cbdd5ed980435502",
          "sha": "449a25b9582e9daf694d2976cbdd5ed980435502",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/449a25b9582e9daf694d2976cbdd5ed980435502"
        }
      ],
      "message": "net: count traffic bytes and number of messages globally\n\nBefore this change only per-peer stats were gathered. They\nare lost when the peer disconnects.\n\nSo, collect the traffic stats globally in `CConnman`, broken down by\n* direction (sent or received, (2))\n* network of the peer (IPv4, IPv6, Tor, I2P, CJDNS (5))\n* connection type (inbound, full outbound, feeler, etc, (6))\n* message type (verack, ping, etc, (36))",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2025-01-23T10:32:57Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-11-22T14:03:49Z"
      },
      "sha": "8cbe02b3ae4ac4ab302e598ddd9976ad1de66341"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16041920812,
      "node_id": "HRFPE_lADOABII585-5KMwzwAAAAO8LEks",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16041920812",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "58538c0847c35459305a303869d9eed5d18bc550",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/58538c0847c35459305a303869d9eed5d18bc550",
      "created_at": "2025-01-23T10:46:34Z"
    },
    {
      "event": "commented",
      "id": 2609478851,
      "node_id": "IC_kwDOABII586biXzD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2609478851",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-23T10:46:49Z",
      "updated_at": "2025-01-23T10:46:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "`f42561e667...58538c0847`: rebase due to conflicts",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#issuecomment-2609478851",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29418"
    },
    {
      "event": "unlabeled",
      "id": 16042835387,
      "node_id": "UNLE_lADOABII585-5KMwzwAAAAO8Oj27",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16042835387",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-23T12:00:57Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 16043065860,
      "node_id": "LE_lADOABII585-5KMwzwAAAAO8PcIE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16043065860",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-23T12:20:15Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2609669679,
      "node_id": "IC_kwDOABII586bjGYv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2609669679",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-23T12:20:16Z",
      "updated_at": "2025-01-23T12:20:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/36052867071</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#issuecomment-2609669679",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29418"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16043328795,
      "node_id": "HRFPE_lADOABII585-5KMwzwAAAAO8QcUb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16043328795",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a46cbdd4780ca4d53ae6cba53b0168a9f330f926",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/a46cbdd4780ca4d53ae6cba53b0168a9f330f926",
      "created_at": "2025-01-23T12:42:22Z"
    },
    {
      "event": "commented",
      "id": 2609715643,
      "node_id": "IC_kwDOABII586bjRm7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2609715643",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-23T12:43:13Z",
      "updated_at": "2025-01-23T12:43:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "`58538c0847...a46cbdd478`: pet the py linter",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#issuecomment-2609715643",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29418"
    },
    {
      "event": "reviewed",
      "id": 2569857889,
      "node_id": "PRR_kwDOABII586ZLOth",
      "url": null,
      "actor": null,
      "commit_id": "a46cbdd4780ca4d53ae6cba53b0168a9f330f926",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#pullrequestreview-2569857889",
      "submitted_at": "2025-01-23T13:24:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29418"
    },
    {
      "event": "unlabeled",
      "id": 16045063811,
      "node_id": "UNLE_lADOABII585-5KMwzwAAAAO8XD6D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16045063811",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-23T14:47:47Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAzM2FhMTJhNzFhNTg3ZWRjZjBkZWM4YjFlZmUxYTMxNTkwNDBkOGI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/033aa12a71a587edcf0dec8b1efe1a3159040d8b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/033aa12a71a587edcf0dec8b1efe1a3159040d8b",
      "tree": {
        "sha": "a6a538d64834f5c9bd6addb4b8fb1f3ed2ac1707",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a6a538d64834f5c9bd6addb4b8fb1f3ed2ac1707"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a6a538d64834f5c9bd6addb4b8fb1f3ed2ac1707\nparent 8cbe02b3ae4ac4ab302e598ddd9976ad1de66341\nauthor Stacie <staciewaleyko@gmail.com> 1677764538 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1737729405 +0100\n\nrpc: visualize global CConnman stats in a new RPC getnetmsgstats\n\nIntroduce a new RPC `getnetmsgstats` that renders the global traffic\nstats from `CConnman`.\n\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmeTpX8ACgkQVN8G9ktV\ny79mgR//Qpgh5+jowcQDlQPXnm8+1DGPf4k/05gMK56D4FRD/j8l8XTvSd3e1/hE\nab7vaqpYJwAonDPcpqbJewQQ6pohbisEv//OcfjU21ICcVoPEjaSbGD4bxj3nszH\n2WEg9lz23eY1E0JQFue5jqa8e+DmzfD24JaQJLiPcjom3eqt35S8/l2mSQR+QWwI\nSyPve+AlV2FZB5uqmeIDPHFu8gNPfqJa3xZIGsWEjS0blVGkur2xguJ3w3/gO0AJ\n03kblTmbGtxhULHdNlHBQneOU7k4ZFaXg8R0OrxSDx4X6xirEymZ4B9w+4YgF5Gf\nFHaYWWMNFcupb/13dPPQmJ1OAPcqcF4iolPMzpl4ktPqwi38W+yZjWXagfeb2SEl\nsaDiEbjr0yYJzvvEItXn4LWaIWqcVTe0u7VtRbM0k742msdafsJtaaUFES/LEQmO\nINvcI51DI8hmb4jqP/1A58bVVFygpWMhrmUNBOwlgvoQxeq1fUySykp6rO+MHcWJ\nSymae6wkBu2tK96PsdnX3lXZDxGpQVb+e5Iu7hYFVwhxHgchNiqr/N4CY1tU3zD5\nqJc/zkSwT62cL5VtcCi+vUEMm/ZfJ2xvN4VRcTk3MpAJJgrN0dfh61YgDOsid4lg\nAL/qm65Ydg8G73d+TFwi93HMwoP32j/oYGoB+OjH5vmIrkyDeq7qxIuzgR5EwX5x\nUWqVSP2IrhQfD2Okd85e/2Q8y6pb7opoZ5OiX82gh+xaATieBlfE6fCnMgJaPy5e\nPu9+WuTlYcVt/Yy2u1BZkoTpq7esGwQKeTjwHePBv7FZVCGUawKxF+kXPNMHcITH\ntltzN41UjHDGHXPn4srB4IMara1XG4faM1AzsTyu1y1q3o6jzfahDypi6x+DZ0oJ\nG8peLrPusWYuJvgJDfvnNKSdEDlQn7nWE+TUyxNf57grJar70Rcuyur32YqfiOiX\nmALqe1+MwgLeeq3FsIFOGAioIX2rczjUI+qkx8Dd/0oyVZ/0yWYAcVqXTd5+0aXZ\ny9O7SYhaiwjVZVusewWJRix8yYCPpDi7M0O7fRGxXQ+3PhiQ6oTKe0iaEWZ+qP9o\nG00VLSVDHzuW6MQbU9yu58SvwTfmBeseqFQoQAq+NuBNOGHtclfEdDQbMonBqzSK\nDdw2UAxFBjONRouTRBhHK3IZccGivUo3fz5UFTv8gJCxiKG329wkor15Sgglw3As\nTA5SeDExX1jOTJkNsR91KmbKCa/ASp2djvQfgXQHgeq+tU96q7mym4YbIqsKLNIz\neg+El8dNt7comFT8vIJle8+Rlf6zi+R7paEUTW4yVGDJSpqwvnlTbOxiOHMqv7LV\nD9TerEUUXj8U6Fxnmj0XxGIdPvIg/w==\n=CgOU\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8cbe02b3ae4ac4ab302e598ddd9976ad1de66341",
          "sha": "8cbe02b3ae4ac4ab302e598ddd9976ad1de66341",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8cbe02b3ae4ac4ab302e598ddd9976ad1de66341"
        }
      ],
      "message": "rpc: visualize global CConnman stats in a new RPC getnetmsgstats\n\nIntroduce a new RPC `getnetmsgstats` that renders the global traffic\nstats from `CConnman`.\n\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2025-01-24T14:36:45Z"
      },
      "author": {
        "name": "Stacie",
        "email": "staciewaleyko@gmail.com",
        "date": "2023-03-02T13:42:18Z"
      },
      "sha": "033aa12a71a587edcf0dec8b1efe1a3159040d8b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA5NzhkN2QwNTA5MTNiNDQ0YmI1MzhjM2U0ZjYyYjc5MTlmM2U5NDc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0978d7d050913b444bb538c3e4f62b7919f3e947",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0978d7d050913b444bb538c3e4f62b7919f3e947",
      "tree": {
        "sha": "40b698ebff5dbc98aecfe0e6391e27ca82c10440",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/40b698ebff5dbc98aecfe0e6391e27ca82c10440"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 40b698ebff5dbc98aecfe0e6391e27ca82c10440\nparent 033aa12a71a587edcf0dec8b1efe1a3159040d8b\nauthor Vasil Dimov <vd@FreeBSD.org> 1701867306 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1737729645 +0100\n\nrpc: make it possible to aggregate the result in getnetmsgstats\n\nAggregation can be by either one of direction, network, connection type\nor message type. For example if the following\n\n```\n{\n    \"ipv4\": { \"ping\": 3 },\n    \"ipv6\": { \"ping\": 4 }\n}\n```\n\nis aggregated by network, then the result will be\n\n```\n{\n    \"ping\": 7\n}\n```\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmeTpm8ACgkQVN8G9ktV\ny7+5Kh/9FVzC68O25x47R1+yE26Upp1ICvxiSKxY8t7EaeWKrHAbI+8+IfAQDRGs\nE3sZsugvnOp9Ir8CFQO9v0xfRn4eL2kWuul6ra7sKq0PWLil5ZUD3cOk7y0ALE4a\nauFfM5dkmQTprC/ehyriS6oQshTcj+bHXONVvYdgCEXxTmZq9r+NROeNriZRatw6\ny9IFXlor275WtRwtSYFVbxTas3KgsjUcnPjCi9YZYWRjQvdcWMfkn1NJ8hePPk6c\nu3oIp19Ax/O5H6zlpASSzu4gbplohGrnPaS0idbNXWmqOk2Nq3G0J5473B9PYrbz\nkP5y5hlwjjpvIA04BwHOyecTsll0M/73YELmTZZ75bf0Q3SI7FfvOo8z5BTkmzMK\nkFkqAlEj6qK6lyx+aL53dVE85pweAelSz6JtyZDSWyQYvpKCS5GVYJIFvYGCPo6N\nT4kaxxAibQ5rd4/kdZcMUBU4FTBis8VNd4LpygEloLPHQ2umNBpD6Fr6MpbqtCiJ\n5wuakrN4pSKwVycVOB32+OU3rTZRKTRPBOHh7/Y5tyTprt4IPqkbeavyIK+8UMWO\nfG2ITyMOEuyh1eOP/AA5L2sUcg9TQuLqyMhChyOrYOad1IIu7qT2k+xWjb8HT/KO\nCJe9rM6xW1mXNtEweAbMzfmsAGhjXwnGpQkEMtLObCjEAdp1j+MpQ3Cmg71Ub5ew\nDxosfz1W1Id5icLAglOI3uKsDBsM/l229q3a3je0L1fNthWDnRpCRGTdQ4kSapnC\nDQWaJaLqn3Kk9HNYM2g/B0pCrAmmck6K3Pcg6MkQy6Bu///xG8/obIXdpMaZGHmM\nH0PFvynbhF0o6CuH769buwA7Cqip50JX+gx0P97oAMPy5ZhJOCT53dS7b7mFI/gj\nppAosS3XcY3cZNd7oxLyxzIH6wXJkkC/PwoC613ckFtcLImy+Bqnpk3eC+oI7lEt\n9150R2DfiHHHC5a2LcW4CfzI8SymadBaZGlxJGjmR7/q7bdOjmXX9FpHt4m5DKxA\nD6LpBOa5L9wx2FmR7YnQkW3pg9OX4paGL1OX2D6MGdJh0lDoI4uEQ6sEI7fFA4BB\nyzxy8mk7DI39r8jEnKWpJTP5v7WDb7lsr9KfU0nDIf08W9h+Ah1ZxIvlyowqSocz\n6Sc4QPTzt0wnMmycs0ltAF6YXmzlHcUdx/0BjZkWDVYjCNMDvNmM/eGVncsbpT7L\nA3NRSWZXC1C/RiPxCZZGrt9kRS/QGD2L+k7gwlvZY2YZoS3YB6foV2u6IuRIg3ZA\neA8ZCbulRyrePNz/er2MhM6SJgrq/xGQSTTKjwoGe8b05+KpLkht9fXL/TzHKBBO\nTqvgPmuEkkcNFJ8j8whsM/lX1NtRUg==\n=6dyx\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/033aa12a71a587edcf0dec8b1efe1a3159040d8b",
          "sha": "033aa12a71a587edcf0dec8b1efe1a3159040d8b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/033aa12a71a587edcf0dec8b1efe1a3159040d8b"
        }
      ],
      "message": "rpc: make it possible to aggregate the result in getnetmsgstats\n\nAggregation can be by either one of direction, network, connection type\nor message type. For example if the following\n\n```\n{\n    \"ipv4\": { \"ping\": 3 },\n    \"ipv6\": { \"ping\": 4 }\n}\n```\n\nis aggregated by network, then the result will be\n\n```\n{\n    \"ping\": 7\n}\n```",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2025-01-24T14:40:45Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-12-06T12:55:06Z"
      },
      "sha": "0978d7d050913b444bb538c3e4f62b7919f3e947"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRiNDQyZjNkNmUwOGQ4OTAzMWYxOTEzNjk1YTZjYzU2M2YyOWMyYzQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/db442f3d6e08d89031f1913695a6cc563f29c2c4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/db442f3d6e08d89031f1913695a6cc563f29c2c4",
      "tree": {
        "sha": "a52733634d9a6898b6b9cc391e77baef84cb8b00",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a52733634d9a6898b6b9cc391e77baef84cb8b00"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a52733634d9a6898b6b9cc391e77baef84cb8b00\nparent 0978d7d050913b444bb538c3e4f62b7919f3e947\nauthor Stacie <staciewaleyko@gmail.com> 1677768442 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1737729647 +0100\n\ntest: add functional tests for the new getnetmsgstats RPC\n\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmeTpm8ACgkQVN8G9ktV\ny78aOCAApreWJJqEFxkWcYxrUzL/xVTLiQJb76aqDymjVqxbFcx6lifocYHvEV09\nyc+IW+okKah+1acY6BA0qXVrY0PmyLqbnFT0nUgiBS8cwquPUibdgJgxb89dVuok\nlSj9jkpla+xgrjyuhG4dihC8cKvZjZLIc/7m0ntbewWw4FCk0jkx3mj+YDRzQOr3\nzhvXRT88CpmctT+9q5XIlOU7X1pGmiwv4310VyI0stvhXMvX8j7VBklilNuxnm33\nwxxJakD/xWRJWTkgfeFjFJGnAMEKB7U6jq3n3Ww3h41RkB+/dslpUZirNGFRwyQg\nUjH++ZYL3W7ydsa67j6Sx7kDkciC7Ux1/qhCe2PKmhSAOjq6GjzhxoEy7/uywK8e\nIhBOlx4Ox41qMR1BGuaenQNHBnrmjX6E7ce3SEAcEvlUtcd6pVSqNlz0TotfMgVg\n78PtylKTuU3+5lAiJe1nFQGi6A51JIsmQzUFTG6RTHx3qECIcbisEjFhtmFGiH9K\nMnZOn1o4WjBgqsLw8nxAlPD1jkNxPWvlH1lrWnglVLlawKhymCuquQcc1Vkr1yBg\nX/FM5cLVtX+NkJ/Vp+4Mld+X1HVh/gcI3MPw6Vsiv+BFxf3nBc48PLNyL0Pz08ov\njuuR5oK/N7Mw75mW1E7oIdYaRYWp36uqqNazdDZOia0IOtqbMIwqT2+FdQw4kITg\n7cFQgyhTz4AE1bbE6BnIUmL0S7PH9iaYQ3t3z8HQKI9rHPCoJD43AuzbGmggisfB\nhWoBIUdMKdETkCV6lqOOhO3UnUUxs6X1Tbdo96nCmOpnHKQJ2+wns/psRdq0a6aD\n2i+qMr/8LoZyR051xoembsHhN4vS0BdxsfBV4vR0+cjHwPbQ6H45O7eN+Wl+WUXS\n2jR0/I0uzyilXlhU2p+mk+IIJyMqmGqnWkT5jQbZpGs8o9ovLrf3O2MRYE9o94M6\nRads4wxRKX6F+ugAFd5mecwZuOyHgjHNWJksOx9OjZUr8JrN+b3E5lJGj+tu1Ah+\nXniciiENx3Aayo+nXaDvyN5PyG7+yabWeBQN9Wjfq+qWVylfWRLvzszwSm4Tay2i\nRJYgc7K0G5yMbS/kYFl9V+Vvd1NsDNZPROV6BE94/CmY24WWQHq7Prvor45MaGrW\nsS/oaBZs1bZ5ozm5nSB4HvXy0FumgwogLaVXMnyA8SfShmjih6T9BAfM2X+kTpWJ\nWhz13jg58iQWE34A/2aLE/+iKTgiXc//oPKZvBypJ+A0HBj23upJdW4osFdNVbTk\nUmPTjZKucaD1iZO5ewpPzCK3/B1hpHIQgFflXihRnIdXx/V7WcslJlUN4hrHMq9p\nIQh6rW7MyKsqkOs21jBoVweSDFr+3w==\n=eOnF\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0978d7d050913b444bb538c3e4f62b7919f3e947",
          "sha": "0978d7d050913b444bb538c3e4f62b7919f3e947",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0978d7d050913b444bb538c3e4f62b7919f3e947"
        }
      ],
      "message": "test: add functional tests for the new getnetmsgstats RPC\n\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2025-01-24T14:40:47Z"
      },
      "author": {
        "name": "Stacie",
        "email": "staciewaleyko@gmail.com",
        "date": "2023-03-02T14:47:22Z"
      },
      "sha": "db442f3d6e08d89031f1913695a6cc563f29c2c4"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16060894858,
      "node_id": "HRFPE_lADOABII585-5KMwzwAAAAO9Tc6K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16060894858",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "db442f3d6e08d89031f1913695a6cc563f29c2c4",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/db442f3d6e08d89031f1913695a6cc563f29c2c4",
      "created_at": "2025-01-24T16:15:54Z"
    },
    {
      "event": "commented",
      "id": 2612903105,
      "node_id": "IC_kwDOABII586bvbzB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2612903105",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-24T16:16:28Z",
      "updated_at": "2025-01-24T16:16:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "`a46cbdd478...db442f3d6e`: do https://github.com/bitcoin/bitcoin/pull/29418#discussion_r1926973656",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#issuecomment-2612903105",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29418"
    },
    {
      "event": "labeled",
      "id": 16894609985,
      "node_id": "LE_lADOABII585-5KMwzwAAAAPu_0pB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16894609985",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-20T08:03:22Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2739508352,
      "node_id": "IC_kwDOABII586jSZSA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2739508352",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-20T08:03:23Z",
      "updated_at": "2025-03-20T08:03:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#issuecomment-2739508352",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29418"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1796165328",
      "pull_request_review_id": 2361526335,
      "id": 1796165328,
      "node_id": "PRRC_kwDOABII585rD07Q",
      "diff_hunk": "@@ -546,6 +546,200 @@ static RPCHelpMan getaddednodeinfo()\n     };\n }\n \n+namespace net_stats {\n+\n+namespace aggregate_dimensions {\n+static std::string DIRECTION{\"direction\"};\n+static std::string NETWORK{\"network\"};\n+static std::string CONNECTION_TYPE{\"connection_type\"};\n+static std::string MESSAGE_TYPE{\"message_type\"};\n+};\n+\n+UniValue CreateJSON(const RPCHelpMan&, const JSONRPCRequest& request)\n+{\n+    const NodeContext& node = EnsureAnyNodeContext(request.context);\n+    const CConnman& connman = EnsureConnman(node);\n+\n+    // Used for a quick check if a string is in request.params[0] which is\n+    // supposed to be a JSON array, e.g. [\"direction\", \"network\"].\n+    std::unordered_set<std::string> aggregate_by;\n+    if (request.params[0].isArray()) {\n+        const UniValue& arr{request.params[0].get_array()};\n+        for (size_t i = 0; i < arr.size(); ++i) {\n+            const auto& agg{arr[i].get_str()};\n+            if (agg != aggregate_dimensions::DIRECTION &&\n+                agg != aggregate_dimensions::NETWORK &&\n+                agg != aggregate_dimensions::CONNECTION_TYPE &&\n+                agg != aggregate_dimensions::MESSAGE_TYPE) {\n+                throw JSONRPCError(\n+                    RPC_INVALID_PARAMS,\n+                    strprintf(\n+                        R\"(Unrecognized aggregation parameter: \"%s\". The array should consist of zero or more of \"%s\", \"%s\", \"%s\", \"%s\".)\",\n+                        agg,\n+                        aggregate_dimensions::DIRECTION,\n+                        aggregate_dimensions::NETWORK,\n+                        aggregate_dimensions::CONNECTION_TYPE,\n+                        aggregate_dimensions::MESSAGE_TYPE));\n+            }\n+            aggregate_by.insert(agg);\n+        }\n+    }\n+\n+    // The keys might as well be an empty string (if aggregating by that dimension).\n+    std::unordered_map<\n+        std::string, // \"sent\" or \"recv\"\n+        std::unordered_map<std::string, // \"ipv4\", \"tor\", ...\n+                           std::unordered_map<std::string, // \"outbound-full-relay\", \"feeler\", ...\n+                                              std::unordered_map<std::string, // \"verack\", \"ping\", ...\n+                                                                 NetStats::BytesAndCount>>>>\n+        result_map;\n+\n+    connman.GetNetStats().ForEach([&aggregate_by, &result_map](NetStats::Direction dir,\n+                                                               Network net,\n+                                                               ConnectionType con,\n+                                                               const std::string& msg,\n+                                                               const NetStats::BytesAndCount& data) {\n+        const std::string dir_str{aggregate_by.contains(aggregate_dimensions::DIRECTION) ? \"\" : dir == NetStats::SENT ? \"sent\" : \"recv\"};\n+        const std::string net_str{aggregate_by.contains(aggregate_dimensions::NETWORK) ? \"\" : GetNetworkName(net)};\n+        const std::string con_str{aggregate_by.contains(aggregate_dimensions::CONNECTION_TYPE) ? \"\" : ConnectionTypeAsString(con)};\n+        const std::string msg_str{aggregate_by.contains(aggregate_dimensions::MESSAGE_TYPE) ? \"\" : msg};\n+\n+        result_map[dir_str][net_str][con_str][msg_str] += data;\n+    });\n+\n+    auto Add = [](UniValue& target, const std::string& key, const UniValue& val) {\n+        if (val.empty()) {\n+            return;\n+        }\n+        if (key == \"\") {",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 69,
      "commit_id": "db442f3d6e08d89031f1913695a6cc563f29c2c4",
      "original_commit_id": "a8e531f92fd2347584d95bbcb9353597d2241fd1",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n        if (key.empty()) {\r\n```",
      "created_at": "2024-10-10T22:27:20Z",
      "updated_at": "2024-10-11T13:54:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#discussion_r1796165328",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1796165328"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29418"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 614,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1796173208",
      "pull_request_review_id": 2361526335,
      "id": 1796173208,
      "node_id": "PRRC_kwDOABII585rD22Y",
      "diff_hunk": "@@ -199,6 +201,134 @@ def test_getnettotals(self):\n             self.wait_until(lambda: peer_after()['bytesrecv_per_msg'].get('pong', 0) >= peer_before['bytesrecv_per_msg'].get('pong', 0) + ping_size, timeout=1)\n             self.wait_until(lambda: peer_after()['bytessent_per_msg'].get('ping', 0) >= peer_before['bytessent_per_msg'].get('ping', 0) + ping_size, timeout=1)\n \n+    def test_getnetmsgstats(self):\n+        self.log.info(\"Test getnetmsgstats\")\n+\n+        self.restart_node(0)\n+        node0 = self.nodes[0]\n+        self.connect_nodes(0, 1) # Generate some traffic.\n+        # Wait for the initial messages to be sent/received (don't disconnect too early). \"sendheaders\" is the last one.\n+        self.wait_until(lambda: \"sendheaders\" in node0.getnetmsgstats()[\"recv\"][\"not_publicly_routable\"][\"manual\"])\n+        self.wait_until(lambda: \"sendheaders\" in node0.getnetmsgstats()[\"sent\"][\"not_publicly_routable\"][\"manual\"])\n+        self.disconnect_nodes(0, 1) # Avoid random/unpredictable packets (e.g. ping) messing with the tests below.\n+        assert_equal(len(node0.getpeerinfo()), 0)\n+\n+        # In v2 getnettotals counts also bytes that are not accounted at any message (the v2 handshake).\n+        # Also the v2 handshake's size could vary.\n+        if not self.options.v2transport:\n+            self.log.info(\"Compare byte count getnetmsgstats vs getnettotals\")",
      "path": "test/functional/rpc_net.py",
      "position": null,
      "original_position": 35,
      "commit_id": "db442f3d6e08d89031f1913695a6cc563f29c2c4",
      "original_commit_id": "a8e531f92fd2347584d95bbcb9353597d2241fd1",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Suggest making all the added test logging after \"Test getnetmsgstats\" `debug` level rather than `info`.\r\n```suggestion\r\n            self.log.debug(\"Compare byte count getnetmsgstats vs getnettotals\")\r\n```",
      "created_at": "2024-10-10T22:38:32Z",
      "updated_at": "2024-10-11T13:54:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#discussion_r1796173208",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1796173208"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29418"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 219,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1796174636",
      "pull_request_review_id": 2361526335,
      "id": 1796174636,
      "node_id": "PRRC_kwDOABII585rD3Ms",
      "diff_hunk": "@@ -546,6 +546,200 @@ static RPCHelpMan getaddednodeinfo()\n     };\n }\n \n+namespace net_stats {\n+\n+namespace aggregate_dimensions {\n+static std::string DIRECTION{\"direction\"};\n+static std::string NETWORK{\"network\"};\n+static std::string CONNECTION_TYPE{\"connection_type\"};\n+static std::string MESSAGE_TYPE{\"message_type\"};\n+};\n+\n+UniValue CreateJSON(const RPCHelpMan&, const JSONRPCRequest& request)\n+{\n+    const NodeContext& node = EnsureAnyNodeContext(request.context);\n+    const CConnman& connman = EnsureConnman(node);\n+\n+    // Used for a quick check if a string is in request.params[0] which is\n+    // supposed to be a JSON array, e.g. [\"direction\", \"network\"].\n+    std::unordered_set<std::string> aggregate_by;\n+    if (request.params[0].isArray()) {\n+        const UniValue& arr{request.params[0].get_array()};\n+        for (size_t i = 0; i < arr.size(); ++i) {\n+            const auto& agg{arr[i].get_str()};\n+            if (agg != aggregate_dimensions::DIRECTION &&\n+                agg != aggregate_dimensions::NETWORK &&\n+                agg != aggregate_dimensions::CONNECTION_TYPE &&\n+                agg != aggregate_dimensions::MESSAGE_TYPE) {\n+                throw JSONRPCError(\n+                    RPC_INVALID_PARAMS,\n+                    strprintf(\n+                        R\"(Unrecognized aggregation parameter: \"%s\". The array should consist of zero or more of \"%s\", \"%s\", \"%s\", \"%s\".)\",\n+                        agg,\n+                        aggregate_dimensions::DIRECTION,\n+                        aggregate_dimensions::NETWORK,\n+                        aggregate_dimensions::CONNECTION_TYPE,\n+                        aggregate_dimensions::MESSAGE_TYPE));\n+            }\n+            aggregate_by.insert(agg);\n+        }\n+    }\n+\n+    // The keys might as well be an empty string (if aggregating by that dimension).\n+    std::unordered_map<\n+        std::string, // \"sent\" or \"recv\"\n+        std::unordered_map<std::string, // \"ipv4\", \"tor\", ...\n+                           std::unordered_map<std::string, // \"outbound-full-relay\", \"feeler\", ...\n+                                              std::unordered_map<std::string, // \"verack\", \"ping\", ...\n+                                                                 NetStats::BytesAndCount>>>>\n+        result_map;\n+\n+    connman.GetNetStats().ForEach([&aggregate_by, &result_map](NetStats::Direction dir,\n+                                                               Network net,\n+                                                               ConnectionType con,\n+                                                               const std::string& msg,\n+                                                               const NetStats::BytesAndCount& data) {\n+        const std::string dir_str{aggregate_by.contains(aggregate_dimensions::DIRECTION) ? \"\" : dir == NetStats::SENT ? \"sent\" : \"recv\"};\n+        const std::string net_str{aggregate_by.contains(aggregate_dimensions::NETWORK) ? \"\" : GetNetworkName(net)};\n+        const std::string con_str{aggregate_by.contains(aggregate_dimensions::CONNECTION_TYPE) ? \"\" : ConnectionTypeAsString(con)};\n+        const std::string msg_str{aggregate_by.contains(aggregate_dimensions::MESSAGE_TYPE) ? \"\" : msg};\n+\n+        result_map[dir_str][net_str][con_str][msg_str] += data;\n+    });\n+\n+    auto Add = [](UniValue& target, const std::string& key, const UniValue& val) {\n+        if (val.empty()) {\n+            return;\n+        }\n+        if (key == \"\") {\n+            target = val;\n+            return;\n+        }\n+        target.pushKV(key, val);\n+    };\n+\n+    UniValue dir_json{UniValue::VOBJ};\n+    for (const auto& [dir_key, dir_val] : result_map) {\n+        UniValue net_json{UniValue::VOBJ};\n+        for (const auto& [net_key, net_val] : dir_val) {\n+            UniValue con_json{UniValue::VOBJ};\n+            for (const auto& [con_key, con_val] : net_val) {\n+                UniValue msg_json{UniValue::VOBJ};\n+                for (const auto& [msg_key, stats] : con_val) {\n+                    const auto bytes = stats.bytes.load();\n+                    const auto count = stats.count.load();\n+                    if (bytes == 0 || count == 0) {\n+                        continue;\n+                    }\n+                    UniValue bytes_and_count_json{UniValue::VOBJ};\n+                    bytes_and_count_json.pushKV(\"bytes\", bytes);\n+                    bytes_and_count_json.pushKV(\"count\", count);\n+\n+                    Add(msg_json, msg_key, bytes_and_count_json);\n+                }\n+                Add(con_json, con_key, msg_json);\n+            }\n+            Add(net_json, net_key, con_json);\n+        }\n+        Add(dir_json, dir_key, net_json);\n+    }\n+\n+    return dir_json;\n+}\n+}; // namespace net_stats\n+\n+static RPCHelpMan getnetmsgstats()\n+{\n+    return RPCHelpMan{\n+        /*name=*/\"getnetmsgstats\",\n+        /*description=*/\n+        \"\\nReturns the messages count and total number of bytes for network traffic.\\n\"\n+        \"Results may optionally be aggregated.\\n\",\n+        /*args=*/\n+        {RPCArg{\n+            /*name=*/\"aggregate_by\",\n+            /*type=*/RPCArg::Type::ARR,\n+            /*fallback=*/RPCArg::DefaultHint{\"empty (no aggregation)\"},",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 117,
      "commit_id": "db442f3d6e08d89031f1913695a6cc563f29c2c4",
      "original_commit_id": "a8e531f92fd2347584d95bbcb9353597d2241fd1",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit, this prints as:\r\n\r\n`(json array, optional, default=empty (no aggregation)) An array of keywords for aggregating the results.`\r\n\r\nPerhaps avoid the double braces with\r\n\r\n`(json array, optional, default=empty, no aggregation) An array of keywords for aggregating the results.`\r\n\r\n```suggestion\r\n            /*fallback=*/RPCArg::DefaultHint{\"empty, no aggregation\"},\r\n```",
      "created_at": "2024-10-10T22:40:31Z",
      "updated_at": "2024-10-11T13:54:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#discussion_r1796174636",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1796174636"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29418"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 662,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1796982625",
      "pull_request_review_id": 2361526335,
      "id": 1796982625,
      "node_id": "PRRC_kwDOABII585rG8dh",
      "diff_hunk": "@@ -199,6 +201,134 @@ def test_getnettotals(self):\n             self.wait_until(lambda: peer_after()['bytesrecv_per_msg'].get('pong', 0) >= peer_before['bytesrecv_per_msg'].get('pong', 0) + ping_size, timeout=1)\n             self.wait_until(lambda: peer_after()['bytessent_per_msg'].get('ping', 0) >= peer_before['bytessent_per_msg'].get('ping', 0) + ping_size, timeout=1)\n \n+    def test_getnetmsgstats(self):\n+        self.log.info(\"Test getnetmsgstats\")\n+\n+        self.restart_node(0)\n+        node0 = self.nodes[0]\n+        self.connect_nodes(0, 1) # Generate some traffic.\n+        # Wait for the initial messages to be sent/received (don't disconnect too early). \"sendheaders\" is the last one.\n+        self.wait_until(lambda: \"sendheaders\" in node0.getnetmsgstats()[\"recv\"][\"not_publicly_routable\"][\"manual\"])\n+        self.wait_until(lambda: \"sendheaders\" in node0.getnetmsgstats()[\"sent\"][\"not_publicly_routable\"][\"manual\"])\n+        self.disconnect_nodes(0, 1) # Avoid random/unpredictable packets (e.g. ping) messing with the tests below.\n+        assert_equal(len(node0.getpeerinfo()), 0)\n+\n+        # In v2 getnettotals counts also bytes that are not accounted at any message (the v2 handshake).\n+        # Also the v2 handshake's size could vary.\n+        if not self.options.v2transport:\n+            self.log.info(\"Compare byte count getnetmsgstats vs getnettotals\")\n+            nettotals = self.nodes[0].getnettotals()\n+            stats_net_con_msg = self.nodes[0].getnetmsgstats(aggregate_by=[\"network\", \"connection_type\", \"message_type\"])\n+            assert_equal(nettotals[\"totalbytessent\"], stats_net_con_msg[\"sent\"][\"bytes\"])\n+            assert_equal(nettotals[\"totalbytesrecv\"], stats_net_con_msg[\"recv\"][\"bytes\"])\n+\n+        self.log.info(f\"Test full (un-aggregated) output is as expected\")\n+        stats_full = node0.getnetmsgstats()\n+        assert_equal(\n+            stats_full,\n+            {\n+                \"recv\": {\n+                    \"not_publicly_routable\": {\n+                        \"manual\": {\n+                            \"addrv2\": {\"bytes\": 63 if self.options.v2transport else 66, \"count\": 1},\n+                            \"feefilter\": {\"bytes\": 29 if self.options.v2transport else 32, \"count\": 1},\n+                            \"getheaders\": {\"bytes\": 666 if self.options.v2transport else 669, \"count\": 1},\n+                            \"headers\": {\"bytes\": 103 if self.options.v2transport else 106, \"count\": 1},\n+                            \"ping\": {\"bytes\": 29 if self.options.v2transport else 32, \"count\": 1},\n+                            \"pong\": {\"bytes\": 29 if self.options.v2transport else 32, \"count\": 1},\n+                            \"sendaddrv2\": {\"bytes\": 33 if self.options.v2transport else 24, \"count\": 1},\n+                            \"sendcmpct\": {\"bytes\": 30 if self.options.v2transport else 33, \"count\": 1},\n+                            \"sendheaders\": {\"bytes\": 33 if self.options.v2transport else 24, \"count\": 1},\n+                            \"verack\": {\"bytes\": 33 if self.options.v2transport else 24, \"count\": 1},\n+                            \"version\": {\"bytes\": 147 if self.options.v2transport else 138, \"count\": 1},\n+                            \"wtxidrelay\": {\"bytes\": 33 if self.options.v2transport else 24, \"count\": 1},\n+                        }\n+                    }\n+                },\n+                \"sent\": {\n+                    \"not_publicly_routable\": {\n+                        \"manual\": {\n+                            \"feefilter\": {\"bytes\": 29 if self.options.v2transport else 32, \"count\": 1},\n+                            \"getaddr\": {\"bytes\": 33 if self.options.v2transport else 24, \"count\": 1},\n+                            \"getheaders\": {\"bytes\": 666 if self.options.v2transport else 669, \"count\": 1},\n+                            \"headers\": {\"bytes\": 103 if self.options.v2transport else 106, \"count\": 1},\n+                            \"ping\": {\"bytes\": 29 if self.options.v2transport else 32, \"count\": 1},\n+                            \"pong\": {\"bytes\": 29 if self.options.v2transport else 32, \"count\": 1},\n+                            \"sendaddrv2\": {\"bytes\": 33 if self.options.v2transport else 24, \"count\": 1},\n+                            \"sendcmpct\": {\"bytes\": 30 if self.options.v2transport else 33, \"count\": 1},\n+                            \"sendheaders\": {\"bytes\": 33 if self.options.v2transport else 24, \"count\": 1},\n+                            \"verack\": {\"bytes\": 33 if self.options.v2transport else 24, \"count\": 1},\n+                            \"version\": {\"bytes\": 147 if self.options.v2transport else 138, \"count\": 1},\n+                            \"wtxidrelay\": {\"bytes\": 33 if self.options.v2transport else 24, \"count\": 1},",
      "path": "test/functional/rpc_net.py",
      "position": null,
      "original_position": 78,
      "commit_id": "db442f3d6e08d89031f1913695a6cc563f29c2c4",
      "original_commit_id": "a8e531f92fd2347584d95bbcb9353597d2241fd1",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "for lines 233-262, it might be more efficient to replace all of these `if self.options.v2transport` conditionals with just one (and if v1 is ever removed, doing so would be a cleaner diff)",
      "created_at": "2024-10-11T13:45:13Z",
      "updated_at": "2024-10-11T13:54:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#discussion_r1796982625",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1796982625"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29418"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 262,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1796983203",
      "pull_request_review_id": 2361526335,
      "id": 1796983203,
      "node_id": "PRRC_kwDOABII585rG8mj",
      "diff_hunk": "@@ -656,6 +656,84 @@ class V2Transport final : public Transport\n     Info GetInfo() const noexcept override EXCLUSIVE_LOCKS_REQUIRED(!m_recv_mutex);\n };\n \n+/**\n+ * Network traffic (bytes and number of messages). Split by direction, network, connection type and message type.\n+ */\n+class NetStats\n+{\n+public:\n+    /// Used to designate the direction of the recorded traffic.\n+    enum Direction { SENT, RECV };\n+\n+    /// Number of elements in `Direction`.\n+    static constexpr size_t NUM_DIRECTIONS{2};\n+\n+    struct BytesAndCount {\n+        std::atomic_uint64_t bytes{0}; //!< Number of bytes transferred.\n+        std::atomic_uint64_t count{0}; //!< Number of messages transferred.\n+\n+        BytesAndCount& operator+=(const BytesAndCount& toadd)\n+        {\n+            bytes += toadd.bytes;\n+            count += toadd.count;\n+            return *this;\n+        }\n+    };\n+\n+    NetStats();\n+\n+    /**\n+     * Increment the number of messages transferred by `num_messages` and the number of bytes by `num_bytes`.\n+     */\n+    void Record(Direction direction,\n+                Network net,\n+                ConnectionType conn_type,\n+                const std::string& msg_type,\n+                size_t num_messages,\n+                size_t num_bytes);\n+\n+    /**\n+     * Call the provided function for each stat.\n+     */\n+    void ForEach(std::function<void(NetStats::Direction dir,\n+                                    Network net,\n+                                    ConnectionType con,\n+                                    const std::string& msg,\n+                                    const BytesAndCount& data)> func) const;\n+\n+private:\n+    // The ...FromIndex() and ...ToIndex() methods below convert from/to\n+    // indexes of `m_data[]` to the actual values they represent. For example,\n+    // assuming MessageTypeToIndex(\"ping\") == 15, then everything stored in\n+    // m_data[i][j][k][15] is traffic from \"ping\" messages (for any i, j, k).\n+\n+    static constexpr size_t DirectionToIndex(Direction direction);\n+    static constexpr Direction DirectionFromIndex(size_t index);\n+\n+    static constexpr size_t NetworkToIndex(Network net);\n+    static constexpr Network NetworkFromIndex(size_t index);\n+\n+    static constexpr size_t ConnectionTypeToIndex(ConnectionType conn_type);\n+    static constexpr ConnectionType ConnectionTypeFromIndex(size_t index);\n+\n+    size_t MessageTypeToIndex(const std::string& msg_type) const;\n+    static std::string MessageTypeFromIndex(size_t index);\n+\n+    // Access like m_data[direction index][net index][conn type index][msg type index].bytes = 123;\n+    // Arrays are used so that this can be accessed from multiple threads without a mutex protection.\n+    std::array<std::array<std::array<std::array<BytesAndCount, ALL_NET_MESSAGE_TYPES.size() + 1>,\n+                                     NUM_CONNECTION_TYPES>,\n+                          NET_MAX>,\n+               NUM_DIRECTIONS>\n+        m_data;",
      "path": "src/net.h",
      "position": 73,
      "original_position": 73,
      "commit_id": "db442f3d6e08d89031f1913695a6cc563f29c2c4",
      "original_commit_id": "a8e531f92fd2347584d95bbcb9353597d2241fd1",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm confused by the formatting here.",
      "created_at": "2024-10-11T13:45:42Z",
      "updated_at": "2024-10-11T13:54:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#discussion_r1796983203",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1796983203"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29418"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 731,
      "original_line": 731,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1796987675",
      "pull_request_review_id": 2361526335,
      "id": 1796987675,
      "node_id": "PRRC_kwDOABII585rG9sb",
      "diff_hunk": "@@ -656,6 +656,84 @@ class V2Transport final : public Transport\n     Info GetInfo() const noexcept override EXCLUSIVE_LOCKS_REQUIRED(!m_recv_mutex);\n };\n \n+/**\n+ * Network traffic (bytes and number of messages). Split by direction, network, connection type and message type.\n+ */\n+class NetStats",
      "path": "src/net.h",
      "position": 7,
      "original_position": 7,
      "commit_id": "db442f3d6e08d89031f1913695a6cc563f29c2c4",
      "original_commit_id": "a8e531f92fd2347584d95bbcb9353597d2241fd1",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would there be any benefit to moving this class outside of `net.{h,cpp}`? It's quite a lot of code.\r\n\r\n(Though, much of its verbosity is the formatting style used that often reads top-to-bottom rather than left-to-right. I prefer the latter.)",
      "created_at": "2024-10-11T13:49:07Z",
      "updated_at": "2024-10-11T13:54:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#discussion_r1796987675",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1796987675"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29418"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 665,
      "original_line": 665,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1796992532",
      "pull_request_review_id": 2361526335,
      "id": 1796992532,
      "node_id": "PRRC_kwDOABII585rG-4U",
      "diff_hunk": "@@ -3667,6 +3692,150 @@ void CConnman::RecordBytesSent(uint64_t bytes)\n     nMaxOutboundTotalBytesSentInCycle += bytes;\n }\n \n+NetStats::NetStats()\n+    : m_msg_type_to_index{[]() {\n+          MsgTypeToIndex m;\n+          size_t i{0};\n+          for (const auto& msg_type : ALL_NET_MESSAGE_TYPES) {\n+              m[msg_type] = i++;\n+          }\n+          return m;\n+      }()}\n+{\n+}\n+\n+void NetStats::Record(Direction direction,\n+                      Network net,\n+                      ConnectionType conn_type,\n+                      const std::string& msg_type,\n+                      size_t num_messages,\n+                      size_t num_bytes)\n+{\n+    auto& d = m_data.at(DirectionToIndex(direction))\n+                  .at(NetworkToIndex(net))\n+                  .at(ConnectionTypeToIndex(conn_type))\n+                  .at(MessageTypeToIndex(msg_type));\n+    d.count += num_messages;\n+    d.bytes += num_bytes;\n+}\n+\n+void NetStats::ForEach(std::function<void(NetStats::Direction dir,\n+                                          Network net,\n+                                          ConnectionType con,\n+                                          const std::string& msg,\n+                                          const BytesAndCount& data)> func) const\n+{\n+    for (size_t dir_i = 0; dir_i < m_data.size(); ++dir_i) {\n+        for (size_t net_i = 0; net_i < m_data[dir_i].size(); ++net_i) {\n+            for (size_t con_i = 0; con_i < m_data[dir_i][net_i].size(); ++con_i) {\n+                for (size_t msg_i = 0; msg_i < m_data[dir_i][net_i][con_i].size(); ++msg_i) {\n+                    func(DirectionFromIndex(dir_i),\n+                         NetworkFromIndex(net_i),\n+                         ConnectionTypeFromIndex(con_i),\n+                         MessageTypeFromIndex(msg_i),\n+                         m_data[dir_i][net_i][con_i][msg_i]);\n+                }\n+            }\n+        }\n+    }\n+}\n+\n+constexpr size_t NetStats::DirectionToIndex(Direction direction)\n+{\n+    switch (direction) {\n+    case SENT: return 0;\n+    case RECV: return 1;\n+    }\n+    assert(false);\n+}\n+\n+constexpr NetStats::Direction NetStats::DirectionFromIndex(size_t index)\n+{\n+    switch (index) {\n+    case 0: return SENT;\n+    case 1: return RECV;\n+    }\n+    assert(false);\n+}\n+\n+constexpr size_t NetStats::NetworkToIndex(Network net)\n+{\n+    switch (net) {\n+    case NET_UNROUTABLE: return 0;\n+    case NET_IPV4: return 1;\n+    case NET_IPV6: return 2;\n+    case NET_ONION: return 3;\n+    case NET_I2P: return 4;\n+    case NET_CJDNS: return 5;\n+    case NET_INTERNAL: return 6;\n+    case NET_MAX: assert(false);\n+    }\n+    assert(false);\n+}\n+\n+constexpr Network NetStats::NetworkFromIndex(size_t index)\n+{\n+    switch (index) {\n+    case 0: return NET_UNROUTABLE;\n+    case 1: return NET_IPV4;\n+    case 2: return NET_IPV6;\n+    case 3: return NET_ONION;\n+    case 4: return NET_I2P;\n+    case 5: return NET_CJDNS;\n+    case 6: return NET_INTERNAL;\n+    }\n+    assert(false);\n+}\n+\n+constexpr size_t NetStats::ConnectionTypeToIndex(ConnectionType conn_type)\n+{\n+    switch (conn_type) {\n+    case ConnectionType::INBOUND: return 0;\n+    case ConnectionType::OUTBOUND_FULL_RELAY: return 1;\n+    case ConnectionType::MANUAL: return 2;\n+    case ConnectionType::FEELER: return 3;\n+    case ConnectionType::BLOCK_RELAY: return 4;\n+    case ConnectionType::ADDR_FETCH: return 5;\n+    }\n+    assert(false);\n+}\n+\n+constexpr ConnectionType NetStats::ConnectionTypeFromIndex(size_t index)\n+{\n+    switch (index) {\n+    case 0: return ConnectionType::INBOUND;\n+    case 1: return ConnectionType::OUTBOUND_FULL_RELAY;\n+    case 2: return ConnectionType::MANUAL;\n+    case 3: return ConnectionType::FEELER;\n+    case 4: return ConnectionType::BLOCK_RELAY;\n+    case 5: return ConnectionType::ADDR_FETCH;\n+    }\n+    assert(false);\n+}",
      "path": "src/net.cpp",
      "position": 206,
      "original_position": 206,
      "commit_id": "db442f3d6e08d89031f1913695a6cc563f29c2c4",
      "original_commit_id": "a8e531f92fd2347584d95bbcb9353597d2241fd1",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would it make sense to put these 2 `ConnectionType` utility methods in `node/connection_types.{h,cpp}` where they could be more widely used?",
      "created_at": "2024-10-11T13:52:29Z",
      "updated_at": "2024-10-11T13:54:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#discussion_r1796992532",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1796992532"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29418"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3816,
      "original_line": 3816,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1796995737",
      "pull_request_review_id": 2361526335,
      "id": 1796995737,
      "node_id": "PRRC_kwDOABII585rG_qZ",
      "diff_hunk": "@@ -3667,6 +3692,150 @@ void CConnman::RecordBytesSent(uint64_t bytes)\n     nMaxOutboundTotalBytesSentInCycle += bytes;\n }\n \n+NetStats::NetStats()\n+    : m_msg_type_to_index{[]() {\n+          MsgTypeToIndex m;\n+          size_t i{0};\n+          for (const auto& msg_type : ALL_NET_MESSAGE_TYPES) {\n+              m[msg_type] = i++;\n+          }\n+          return m;\n+      }()}\n+{\n+}\n+\n+void NetStats::Record(Direction direction,\n+                      Network net,\n+                      ConnectionType conn_type,\n+                      const std::string& msg_type,\n+                      size_t num_messages,\n+                      size_t num_bytes)\n+{\n+    auto& d = m_data.at(DirectionToIndex(direction))\n+                  .at(NetworkToIndex(net))\n+                  .at(ConnectionTypeToIndex(conn_type))\n+                  .at(MessageTypeToIndex(msg_type));\n+    d.count += num_messages;\n+    d.bytes += num_bytes;\n+}\n+\n+void NetStats::ForEach(std::function<void(NetStats::Direction dir,\n+                                          Network net,\n+                                          ConnectionType con,\n+                                          const std::string& msg,\n+                                          const BytesAndCount& data)> func) const\n+{\n+    for (size_t dir_i = 0; dir_i < m_data.size(); ++dir_i) {\n+        for (size_t net_i = 0; net_i < m_data[dir_i].size(); ++net_i) {\n+            for (size_t con_i = 0; con_i < m_data[dir_i][net_i].size(); ++con_i) {\n+                for (size_t msg_i = 0; msg_i < m_data[dir_i][net_i][con_i].size(); ++msg_i) {\n+                    func(DirectionFromIndex(dir_i),\n+                         NetworkFromIndex(net_i),\n+                         ConnectionTypeFromIndex(con_i),\n+                         MessageTypeFromIndex(msg_i),\n+                         m_data[dir_i][net_i][con_i][msg_i]);\n+                }\n+            }\n+        }\n+    }\n+}\n+\n+constexpr size_t NetStats::DirectionToIndex(Direction direction)\n+{\n+    switch (direction) {\n+    case SENT: return 0;\n+    case RECV: return 1;\n+    }\n+    assert(false);\n+}\n+\n+constexpr NetStats::Direction NetStats::DirectionFromIndex(size_t index)\n+{\n+    switch (index) {\n+    case 0: return SENT;\n+    case 1: return RECV;\n+    }\n+    assert(false);\n+}\n+\n+constexpr size_t NetStats::NetworkToIndex(Network net)\n+{\n+    switch (net) {\n+    case NET_UNROUTABLE: return 0;\n+    case NET_IPV4: return 1;\n+    case NET_IPV6: return 2;\n+    case NET_ONION: return 3;\n+    case NET_I2P: return 4;\n+    case NET_CJDNS: return 5;\n+    case NET_INTERNAL: return 6;\n+    case NET_MAX: assert(false);\n+    }\n+    assert(false);\n+}\n+\n+constexpr Network NetStats::NetworkFromIndex(size_t index)\n+{\n+    switch (index) {\n+    case 0: return NET_UNROUTABLE;\n+    case 1: return NET_IPV4;\n+    case 2: return NET_IPV6;\n+    case 3: return NET_ONION;\n+    case 4: return NET_I2P;\n+    case 5: return NET_CJDNS;\n+    case 6: return NET_INTERNAL;\n+    }\n+    assert(false);\n+}",
      "path": "src/net.cpp",
      "position": 180,
      "original_position": 180,
      "commit_id": "db442f3d6e08d89031f1913695a6cc563f29c2c4",
      "original_commit_id": "a8e531f92fd2347584d95bbcb9353597d2241fd1",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Note to self, these 2 `Network` methods might be candidates for extraction in https://github.com/bitcoin/bitcoin/pull/27385.",
      "created_at": "2024-10-11T13:54:24Z",
      "updated_at": "2024-10-11T13:54:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#discussion_r1796995737",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1796995737"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29418"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3790,
      "original_line": 3790,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1797311701",
      "pull_request_review_id": 2363386269,
      "id": 1797311701,
      "node_id": "PRRC_kwDOABII585rIMzV",
      "diff_hunk": "@@ -656,6 +656,84 @@ class V2Transport final : public Transport\n     Info GetInfo() const noexcept override EXCLUSIVE_LOCKS_REQUIRED(!m_recv_mutex);\n };\n \n+/**\n+ * Network traffic (bytes and number of messages). Split by direction, network, connection type and message type.\n+ */\n+class NetStats\n+{\n+public:\n+    /// Used to designate the direction of the recorded traffic.\n+    enum Direction { SENT, RECV };\n+\n+    /// Number of elements in `Direction`.\n+    static constexpr size_t NUM_DIRECTIONS{2};\n+\n+    struct BytesAndCount {\n+        std::atomic_uint64_t bytes{0}; //!< Number of bytes transferred.\n+        std::atomic_uint64_t count{0}; //!< Number of messages transferred.\n+\n+        BytesAndCount& operator+=(const BytesAndCount& toadd)\n+        {\n+            bytes += toadd.bytes;\n+            count += toadd.count;\n+            return *this;\n+        }\n+    };\n+\n+    NetStats();\n+\n+    /**\n+     * Increment the number of messages transferred by `num_messages` and the number of bytes by `num_bytes`.\n+     */\n+    void Record(Direction direction,\n+                Network net,\n+                ConnectionType conn_type,\n+                const std::string& msg_type,\n+                size_t num_messages,\n+                size_t num_bytes);\n+\n+    /**\n+     * Call the provided function for each stat.\n+     */\n+    void ForEach(std::function<void(NetStats::Direction dir,\n+                                    Network net,\n+                                    ConnectionType con,\n+                                    const std::string& msg,\n+                                    const BytesAndCount& data)> func) const;\n+\n+private:\n+    // The ...FromIndex() and ...ToIndex() methods below convert from/to\n+    // indexes of `m_data[]` to the actual values they represent. For example,\n+    // assuming MessageTypeToIndex(\"ping\") == 15, then everything stored in\n+    // m_data[i][j][k][15] is traffic from \"ping\" messages (for any i, j, k).\n+\n+    static constexpr size_t DirectionToIndex(Direction direction);\n+    static constexpr Direction DirectionFromIndex(size_t index);\n+\n+    static constexpr size_t NetworkToIndex(Network net);\n+    static constexpr Network NetworkFromIndex(size_t index);\n+\n+    static constexpr size_t ConnectionTypeToIndex(ConnectionType conn_type);\n+    static constexpr ConnectionType ConnectionTypeFromIndex(size_t index);\n+\n+    size_t MessageTypeToIndex(const std::string& msg_type) const;\n+    static std::string MessageTypeFromIndex(size_t index);\n+\n+    // Access like m_data[direction index][net index][conn type index][msg type index].bytes = 123;\n+    // Arrays are used so that this can be accessed from multiple threads without a mutex protection.\n+    std::array<std::array<std::array<std::array<BytesAndCount, ALL_NET_MESSAGE_TYPES.size() + 1>,\n+                                     NUM_CONNECTION_TYPES>,\n+                          NET_MAX>,\n+               NUM_DIRECTIONS>\n+        m_data;",
      "path": "src/net.h",
      "position": 73,
      "original_position": 73,
      "commit_id": "db442f3d6e08d89031f1913695a6cc563f29c2c4",
      "original_commit_id": "a8e531f92fd2347584d95bbcb9353597d2241fd1",
      "in_reply_to_id": 1796983203,
      "user": {
        "login": "satsie",
        "id": 1823216,
        "node_id": "MDQ6VXNlcjE4MjMyMTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1823216?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/satsie",
        "html_url": "https://github.com/satsie",
        "followers_url": "https://api.github.com/users/satsie/followers",
        "following_url": "https://api.github.com/users/satsie/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/satsie/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/satsie/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/satsie/subscriptions",
        "organizations_url": "https://api.github.com/users/satsie/orgs",
        "repos_url": "https://api.github.com/users/satsie/repos",
        "events_url": "https://api.github.com/users/satsie/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/satsie/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The thinking behind this is because it is a 4D array, all the nesting required to create it can be a headache to look at. Lines 725 - 727 are the array sizes, the second arguments needed for `std::array` creation. Each one of these lines up with the `std::array` they are part of.\r\n\r\nFor example, `NUM_DIRECTIONS` finishes the declaration off the parent level `std::array` that all the others are nested in. For that reason, `NUM_DIRECTIONS` lines up with the space after that array's opening `<`.\r\n\r\nHope that made some sense! Open to hearing any suggestions on how to make this easier to read.",
      "created_at": "2024-10-11T18:42:43Z",
      "updated_at": "2024-10-11T18:42:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#discussion_r1797311701",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1797311701"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29418"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 731,
      "original_line": 731,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818880473",
      "pull_request_review_id": 2398777481,
      "id": 1818880473,
      "node_id": "PRRC_kwDOABII585saenZ",
      "diff_hunk": "@@ -3667,6 +3692,150 @@ void CConnman::RecordBytesSent(uint64_t bytes)\n     nMaxOutboundTotalBytesSentInCycle += bytes;\n }\n \n+NetStats::NetStats()\n+    : m_msg_type_to_index{[]() {\n+          MsgTypeToIndex m;\n+          size_t i{0};\n+          for (const auto& msg_type : ALL_NET_MESSAGE_TYPES) {\n+              m[msg_type] = i++;\n+          }\n+          return m;\n+      }()}\n+{\n+}\n+\n+void NetStats::Record(Direction direction,\n+                      Network net,\n+                      ConnectionType conn_type,\n+                      const std::string& msg_type,\n+                      size_t num_messages,\n+                      size_t num_bytes)\n+{\n+    auto& d = m_data.at(DirectionToIndex(direction))\n+                  .at(NetworkToIndex(net))\n+                  .at(ConnectionTypeToIndex(conn_type))\n+                  .at(MessageTypeToIndex(msg_type));\n+    d.count += num_messages;\n+    d.bytes += num_bytes;\n+}\n+\n+void NetStats::ForEach(std::function<void(NetStats::Direction dir,\n+                                          Network net,\n+                                          ConnectionType con,\n+                                          const std::string& msg,\n+                                          const BytesAndCount& data)> func) const\n+{\n+    for (size_t dir_i = 0; dir_i < m_data.size(); ++dir_i) {\n+        for (size_t net_i = 0; net_i < m_data[dir_i].size(); ++net_i) {\n+            for (size_t con_i = 0; con_i < m_data[dir_i][net_i].size(); ++con_i) {\n+                for (size_t msg_i = 0; msg_i < m_data[dir_i][net_i][con_i].size(); ++msg_i) {\n+                    func(DirectionFromIndex(dir_i),\n+                         NetworkFromIndex(net_i),\n+                         ConnectionTypeFromIndex(con_i),\n+                         MessageTypeFromIndex(msg_i),\n+                         m_data[dir_i][net_i][con_i][msg_i]);\n+                }\n+            }\n+        }\n+    }\n+}\n+\n+constexpr size_t NetStats::DirectionToIndex(Direction direction)\n+{\n+    switch (direction) {\n+    case SENT: return 0;\n+    case RECV: return 1;\n+    }\n+    assert(false);\n+}\n+\n+constexpr NetStats::Direction NetStats::DirectionFromIndex(size_t index)\n+{\n+    switch (index) {\n+    case 0: return SENT;\n+    case 1: return RECV;\n+    }\n+    assert(false);\n+}\n+\n+constexpr size_t NetStats::NetworkToIndex(Network net)\n+{\n+    switch (net) {\n+    case NET_UNROUTABLE: return 0;\n+    case NET_IPV4: return 1;\n+    case NET_IPV6: return 2;\n+    case NET_ONION: return 3;\n+    case NET_I2P: return 4;\n+    case NET_CJDNS: return 5;\n+    case NET_INTERNAL: return 6;\n+    case NET_MAX: assert(false);\n+    }\n+    assert(false);\n+}\n+\n+constexpr Network NetStats::NetworkFromIndex(size_t index)\n+{\n+    switch (index) {\n+    case 0: return NET_UNROUTABLE;\n+    case 1: return NET_IPV4;\n+    case 2: return NET_IPV6;\n+    case 3: return NET_ONION;\n+    case 4: return NET_I2P;\n+    case 5: return NET_CJDNS;\n+    case 6: return NET_INTERNAL;\n+    }\n+    assert(false);\n+}",
      "path": "src/net.cpp",
      "position": 180,
      "original_position": 180,
      "commit_id": "db442f3d6e08d89031f1913695a6cc563f29c2c4",
      "original_commit_id": "a8e531f92fd2347584d95bbcb9353597d2241fd1",
      "in_reply_to_id": 1796995737,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "See https://github.com/bitcoin/bitcoin/pull/29418#discussion_r1796992532\r\n\r\n",
      "created_at": "2024-10-28T11:16:02Z",
      "updated_at": "2024-10-28T11:17:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#discussion_r1818880473",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818880473"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29418"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3790,
      "original_line": 3790,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818882402",
      "pull_request_review_id": 2398780517,
      "id": 1818882402,
      "node_id": "PRRC_kwDOABII585safFi",
      "diff_hunk": "@@ -3667,6 +3692,150 @@ void CConnman::RecordBytesSent(uint64_t bytes)\n     nMaxOutboundTotalBytesSentInCycle += bytes;\n }\n \n+NetStats::NetStats()\n+    : m_msg_type_to_index{[]() {\n+          MsgTypeToIndex m;\n+          size_t i{0};\n+          for (const auto& msg_type : ALL_NET_MESSAGE_TYPES) {\n+              m[msg_type] = i++;\n+          }\n+          return m;\n+      }()}\n+{\n+}\n+\n+void NetStats::Record(Direction direction,\n+                      Network net,\n+                      ConnectionType conn_type,\n+                      const std::string& msg_type,\n+                      size_t num_messages,\n+                      size_t num_bytes)\n+{\n+    auto& d = m_data.at(DirectionToIndex(direction))\n+                  .at(NetworkToIndex(net))\n+                  .at(ConnectionTypeToIndex(conn_type))\n+                  .at(MessageTypeToIndex(msg_type));\n+    d.count += num_messages;\n+    d.bytes += num_bytes;\n+}\n+\n+void NetStats::ForEach(std::function<void(NetStats::Direction dir,\n+                                          Network net,\n+                                          ConnectionType con,\n+                                          const std::string& msg,\n+                                          const BytesAndCount& data)> func) const\n+{\n+    for (size_t dir_i = 0; dir_i < m_data.size(); ++dir_i) {\n+        for (size_t net_i = 0; net_i < m_data[dir_i].size(); ++net_i) {\n+            for (size_t con_i = 0; con_i < m_data[dir_i][net_i].size(); ++con_i) {\n+                for (size_t msg_i = 0; msg_i < m_data[dir_i][net_i][con_i].size(); ++msg_i) {\n+                    func(DirectionFromIndex(dir_i),\n+                         NetworkFromIndex(net_i),\n+                         ConnectionTypeFromIndex(con_i),\n+                         MessageTypeFromIndex(msg_i),\n+                         m_data[dir_i][net_i][con_i][msg_i]);\n+                }\n+            }\n+        }\n+    }\n+}\n+\n+constexpr size_t NetStats::DirectionToIndex(Direction direction)\n+{\n+    switch (direction) {\n+    case SENT: return 0;\n+    case RECV: return 1;\n+    }\n+    assert(false);\n+}\n+\n+constexpr NetStats::Direction NetStats::DirectionFromIndex(size_t index)\n+{\n+    switch (index) {\n+    case 0: return SENT;\n+    case 1: return RECV;\n+    }\n+    assert(false);\n+}\n+\n+constexpr size_t NetStats::NetworkToIndex(Network net)\n+{\n+    switch (net) {\n+    case NET_UNROUTABLE: return 0;\n+    case NET_IPV4: return 1;\n+    case NET_IPV6: return 2;\n+    case NET_ONION: return 3;\n+    case NET_I2P: return 4;\n+    case NET_CJDNS: return 5;\n+    case NET_INTERNAL: return 6;\n+    case NET_MAX: assert(false);\n+    }\n+    assert(false);\n+}\n+\n+constexpr Network NetStats::NetworkFromIndex(size_t index)\n+{\n+    switch (index) {\n+    case 0: return NET_UNROUTABLE;\n+    case 1: return NET_IPV4;\n+    case 2: return NET_IPV6;\n+    case 3: return NET_ONION;\n+    case 4: return NET_I2P;\n+    case 5: return NET_CJDNS;\n+    case 6: return NET_INTERNAL;\n+    }\n+    assert(false);\n+}\n+\n+constexpr size_t NetStats::ConnectionTypeToIndex(ConnectionType conn_type)\n+{\n+    switch (conn_type) {\n+    case ConnectionType::INBOUND: return 0;\n+    case ConnectionType::OUTBOUND_FULL_RELAY: return 1;\n+    case ConnectionType::MANUAL: return 2;\n+    case ConnectionType::FEELER: return 3;\n+    case ConnectionType::BLOCK_RELAY: return 4;\n+    case ConnectionType::ADDR_FETCH: return 5;\n+    }\n+    assert(false);\n+}\n+\n+constexpr ConnectionType NetStats::ConnectionTypeFromIndex(size_t index)\n+{\n+    switch (index) {\n+    case 0: return ConnectionType::INBOUND;\n+    case 1: return ConnectionType::OUTBOUND_FULL_RELAY;\n+    case 2: return ConnectionType::MANUAL;\n+    case 3: return ConnectionType::FEELER;\n+    case 4: return ConnectionType::BLOCK_RELAY;\n+    case 5: return ConnectionType::ADDR_FETCH;\n+    }\n+    assert(false);\n+}",
      "path": "src/net.cpp",
      "position": 206,
      "original_position": 206,
      "commit_id": "db442f3d6e08d89031f1913695a6cc563f29c2c4",
      "original_commit_id": "a8e531f92fd2347584d95bbcb9353597d2241fd1",
      "in_reply_to_id": 1796992532,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "These are to/from \"index\". By \"index\" here I mean the index in some array that is private in `NetStats`. They are private methods in `NetStats`.\r\n\r\nNot sure exposing those to the outside would be useful. Unless to imply a broader meaning in \"index\", something like: \"a zero based number without gaps\". E.g. if there are 3 enums, then each one of them uniquely maps to one of the numbers 0, 1, 2. Would that be useful to some other code, outside of `NetStats`?",
      "created_at": "2024-10-28T11:17:37Z",
      "updated_at": "2024-10-28T11:20:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#discussion_r1818882402",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818882402"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29418"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3816,
      "original_line": 3816,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818884742",
      "pull_request_review_id": 2398780517,
      "id": 1818884742,
      "node_id": "PRRC_kwDOABII585safqG",
      "diff_hunk": "@@ -656,6 +656,84 @@ class V2Transport final : public Transport\n     Info GetInfo() const noexcept override EXCLUSIVE_LOCKS_REQUIRED(!m_recv_mutex);\n };\n \n+/**\n+ * Network traffic (bytes and number of messages). Split by direction, network, connection type and message type.\n+ */\n+class NetStats",
      "path": "src/net.h",
      "position": 7,
      "original_position": 7,
      "commit_id": "db442f3d6e08d89031f1913695a6cc563f29c2c4",
      "original_commit_id": "a8e531f92fd2347584d95bbcb9353597d2241fd1",
      "in_reply_to_id": 1796987675,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "No opinion.",
      "created_at": "2024-10-28T11:19:19Z",
      "updated_at": "2024-10-28T11:20:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#discussion_r1818884742",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818884742"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29418"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 665,
      "original_line": 665,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818886697",
      "pull_request_review_id": 2398787055,
      "id": 1818886697,
      "node_id": "PRRC_kwDOABII585sagIp",
      "diff_hunk": "@@ -199,6 +201,134 @@ def test_getnettotals(self):\n             self.wait_until(lambda: peer_after()['bytesrecv_per_msg'].get('pong', 0) >= peer_before['bytesrecv_per_msg'].get('pong', 0) + ping_size, timeout=1)\n             self.wait_until(lambda: peer_after()['bytessent_per_msg'].get('ping', 0) >= peer_before['bytessent_per_msg'].get('ping', 0) + ping_size, timeout=1)\n \n+    def test_getnetmsgstats(self):\n+        self.log.info(\"Test getnetmsgstats\")\n+\n+        self.restart_node(0)\n+        node0 = self.nodes[0]\n+        self.connect_nodes(0, 1) # Generate some traffic.\n+        # Wait for the initial messages to be sent/received (don't disconnect too early). \"sendheaders\" is the last one.\n+        self.wait_until(lambda: \"sendheaders\" in node0.getnetmsgstats()[\"recv\"][\"not_publicly_routable\"][\"manual\"])\n+        self.wait_until(lambda: \"sendheaders\" in node0.getnetmsgstats()[\"sent\"][\"not_publicly_routable\"][\"manual\"])\n+        self.disconnect_nodes(0, 1) # Avoid random/unpredictable packets (e.g. ping) messing with the tests below.\n+        assert_equal(len(node0.getpeerinfo()), 0)\n+\n+        # In v2 getnettotals counts also bytes that are not accounted at any message (the v2 handshake).\n+        # Also the v2 handshake's size could vary.\n+        if not self.options.v2transport:\n+            self.log.info(\"Compare byte count getnetmsgstats vs getnettotals\")\n+            nettotals = self.nodes[0].getnettotals()\n+            stats_net_con_msg = self.nodes[0].getnetmsgstats(aggregate_by=[\"network\", \"connection_type\", \"message_type\"])\n+            assert_equal(nettotals[\"totalbytessent\"], stats_net_con_msg[\"sent\"][\"bytes\"])\n+            assert_equal(nettotals[\"totalbytesrecv\"], stats_net_con_msg[\"recv\"][\"bytes\"])\n+\n+        self.log.info(f\"Test full (un-aggregated) output is as expected\")\n+        stats_full = node0.getnetmsgstats()\n+        assert_equal(\n+            stats_full,\n+            {\n+                \"recv\": {\n+                    \"not_publicly_routable\": {\n+                        \"manual\": {\n+                            \"addrv2\": {\"bytes\": 63 if self.options.v2transport else 66, \"count\": 1},\n+                            \"feefilter\": {\"bytes\": 29 if self.options.v2transport else 32, \"count\": 1},\n+                            \"getheaders\": {\"bytes\": 666 if self.options.v2transport else 669, \"count\": 1},\n+                            \"headers\": {\"bytes\": 103 if self.options.v2transport else 106, \"count\": 1},\n+                            \"ping\": {\"bytes\": 29 if self.options.v2transport else 32, \"count\": 1},\n+                            \"pong\": {\"bytes\": 29 if self.options.v2transport else 32, \"count\": 1},\n+                            \"sendaddrv2\": {\"bytes\": 33 if self.options.v2transport else 24, \"count\": 1},\n+                            \"sendcmpct\": {\"bytes\": 30 if self.options.v2transport else 33, \"count\": 1},\n+                            \"sendheaders\": {\"bytes\": 33 if self.options.v2transport else 24, \"count\": 1},\n+                            \"verack\": {\"bytes\": 33 if self.options.v2transport else 24, \"count\": 1},\n+                            \"version\": {\"bytes\": 147 if self.options.v2transport else 138, \"count\": 1},\n+                            \"wtxidrelay\": {\"bytes\": 33 if self.options.v2transport else 24, \"count\": 1},\n+                        }\n+                    }\n+                },\n+                \"sent\": {\n+                    \"not_publicly_routable\": {\n+                        \"manual\": {\n+                            \"feefilter\": {\"bytes\": 29 if self.options.v2transport else 32, \"count\": 1},\n+                            \"getaddr\": {\"bytes\": 33 if self.options.v2transport else 24, \"count\": 1},\n+                            \"getheaders\": {\"bytes\": 666 if self.options.v2transport else 669, \"count\": 1},\n+                            \"headers\": {\"bytes\": 103 if self.options.v2transport else 106, \"count\": 1},\n+                            \"ping\": {\"bytes\": 29 if self.options.v2transport else 32, \"count\": 1},\n+                            \"pong\": {\"bytes\": 29 if self.options.v2transport else 32, \"count\": 1},\n+                            \"sendaddrv2\": {\"bytes\": 33 if self.options.v2transport else 24, \"count\": 1},\n+                            \"sendcmpct\": {\"bytes\": 30 if self.options.v2transport else 33, \"count\": 1},\n+                            \"sendheaders\": {\"bytes\": 33 if self.options.v2transport else 24, \"count\": 1},\n+                            \"verack\": {\"bytes\": 33 if self.options.v2transport else 24, \"count\": 1},\n+                            \"version\": {\"bytes\": 147 if self.options.v2transport else 138, \"count\": 1},\n+                            \"wtxidrelay\": {\"bytes\": 33 if self.options.v2transport else 24, \"count\": 1},",
      "path": "test/functional/rpc_net.py",
      "position": null,
      "original_position": 78,
      "commit_id": "db442f3d6e08d89031f1913695a6cc563f29c2c4",
      "original_commit_id": "a8e531f92fd2347584d95bbcb9353597d2241fd1",
      "in_reply_to_id": 1796982625,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-10-28T11:20:59Z",
      "updated_at": "2024-10-28T11:20:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#discussion_r1818886697",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818886697"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29418"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 262,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818886871",
      "pull_request_review_id": 2398787387,
      "id": 1818886871,
      "node_id": "PRRC_kwDOABII585sagLX",
      "diff_hunk": "@@ -546,6 +546,200 @@ static RPCHelpMan getaddednodeinfo()\n     };\n }\n \n+namespace net_stats {\n+\n+namespace aggregate_dimensions {\n+static std::string DIRECTION{\"direction\"};\n+static std::string NETWORK{\"network\"};\n+static std::string CONNECTION_TYPE{\"connection_type\"};\n+static std::string MESSAGE_TYPE{\"message_type\"};\n+};\n+\n+UniValue CreateJSON(const RPCHelpMan&, const JSONRPCRequest& request)\n+{\n+    const NodeContext& node = EnsureAnyNodeContext(request.context);\n+    const CConnman& connman = EnsureConnman(node);\n+\n+    // Used for a quick check if a string is in request.params[0] which is\n+    // supposed to be a JSON array, e.g. [\"direction\", \"network\"].\n+    std::unordered_set<std::string> aggregate_by;\n+    if (request.params[0].isArray()) {\n+        const UniValue& arr{request.params[0].get_array()};\n+        for (size_t i = 0; i < arr.size(); ++i) {\n+            const auto& agg{arr[i].get_str()};\n+            if (agg != aggregate_dimensions::DIRECTION &&\n+                agg != aggregate_dimensions::NETWORK &&\n+                agg != aggregate_dimensions::CONNECTION_TYPE &&\n+                agg != aggregate_dimensions::MESSAGE_TYPE) {\n+                throw JSONRPCError(\n+                    RPC_INVALID_PARAMS,\n+                    strprintf(\n+                        R\"(Unrecognized aggregation parameter: \"%s\". The array should consist of zero or more of \"%s\", \"%s\", \"%s\", \"%s\".)\",\n+                        agg,\n+                        aggregate_dimensions::DIRECTION,\n+                        aggregate_dimensions::NETWORK,\n+                        aggregate_dimensions::CONNECTION_TYPE,\n+                        aggregate_dimensions::MESSAGE_TYPE));\n+            }\n+            aggregate_by.insert(agg);\n+        }\n+    }\n+\n+    // The keys might as well be an empty string (if aggregating by that dimension).\n+    std::unordered_map<\n+        std::string, // \"sent\" or \"recv\"\n+        std::unordered_map<std::string, // \"ipv4\", \"tor\", ...\n+                           std::unordered_map<std::string, // \"outbound-full-relay\", \"feeler\", ...\n+                                              std::unordered_map<std::string, // \"verack\", \"ping\", ...\n+                                                                 NetStats::BytesAndCount>>>>\n+        result_map;\n+\n+    connman.GetNetStats().ForEach([&aggregate_by, &result_map](NetStats::Direction dir,\n+                                                               Network net,\n+                                                               ConnectionType con,\n+                                                               const std::string& msg,\n+                                                               const NetStats::BytesAndCount& data) {\n+        const std::string dir_str{aggregate_by.contains(aggregate_dimensions::DIRECTION) ? \"\" : dir == NetStats::SENT ? \"sent\" : \"recv\"};\n+        const std::string net_str{aggregate_by.contains(aggregate_dimensions::NETWORK) ? \"\" : GetNetworkName(net)};\n+        const std::string con_str{aggregate_by.contains(aggregate_dimensions::CONNECTION_TYPE) ? \"\" : ConnectionTypeAsString(con)};\n+        const std::string msg_str{aggregate_by.contains(aggregate_dimensions::MESSAGE_TYPE) ? \"\" : msg};\n+\n+        result_map[dir_str][net_str][con_str][msg_str] += data;\n+    });\n+\n+    auto Add = [](UniValue& target, const std::string& key, const UniValue& val) {\n+        if (val.empty()) {\n+            return;\n+        }\n+        if (key == \"\") {\n+            target = val;\n+            return;\n+        }\n+        target.pushKV(key, val);\n+    };\n+\n+    UniValue dir_json{UniValue::VOBJ};\n+    for (const auto& [dir_key, dir_val] : result_map) {\n+        UniValue net_json{UniValue::VOBJ};\n+        for (const auto& [net_key, net_val] : dir_val) {\n+            UniValue con_json{UniValue::VOBJ};\n+            for (const auto& [con_key, con_val] : net_val) {\n+                UniValue msg_json{UniValue::VOBJ};\n+                for (const auto& [msg_key, stats] : con_val) {\n+                    const auto bytes = stats.bytes.load();\n+                    const auto count = stats.count.load();\n+                    if (bytes == 0 || count == 0) {\n+                        continue;\n+                    }\n+                    UniValue bytes_and_count_json{UniValue::VOBJ};\n+                    bytes_and_count_json.pushKV(\"bytes\", bytes);\n+                    bytes_and_count_json.pushKV(\"count\", count);\n+\n+                    Add(msg_json, msg_key, bytes_and_count_json);\n+                }\n+                Add(con_json, con_key, msg_json);\n+            }\n+            Add(net_json, net_key, con_json);\n+        }\n+        Add(dir_json, dir_key, net_json);\n+    }\n+\n+    return dir_json;\n+}\n+}; // namespace net_stats\n+\n+static RPCHelpMan getnetmsgstats()\n+{\n+    return RPCHelpMan{\n+        /*name=*/\"getnetmsgstats\",\n+        /*description=*/\n+        \"\\nReturns the messages count and total number of bytes for network traffic.\\n\"\n+        \"Results may optionally be aggregated.\\n\",\n+        /*args=*/\n+        {RPCArg{\n+            /*name=*/\"aggregate_by\",\n+            /*type=*/RPCArg::Type::ARR,\n+            /*fallback=*/RPCArg::DefaultHint{\"empty (no aggregation)\"},",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 117,
      "commit_id": "db442f3d6e08d89031f1913695a6cc563f29c2c4",
      "original_commit_id": "a8e531f92fd2347584d95bbcb9353597d2241fd1",
      "in_reply_to_id": 1796174636,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-10-28T11:21:09Z",
      "updated_at": "2024-10-28T11:21:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#discussion_r1818886871",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818886871"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29418"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 662,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818887066",
      "pull_request_review_id": 2398787713,
      "id": 1818887066,
      "node_id": "PRRC_kwDOABII585sagOa",
      "diff_hunk": "@@ -199,6 +201,134 @@ def test_getnettotals(self):\n             self.wait_until(lambda: peer_after()['bytesrecv_per_msg'].get('pong', 0) >= peer_before['bytesrecv_per_msg'].get('pong', 0) + ping_size, timeout=1)\n             self.wait_until(lambda: peer_after()['bytessent_per_msg'].get('ping', 0) >= peer_before['bytessent_per_msg'].get('ping', 0) + ping_size, timeout=1)\n \n+    def test_getnetmsgstats(self):\n+        self.log.info(\"Test getnetmsgstats\")\n+\n+        self.restart_node(0)\n+        node0 = self.nodes[0]\n+        self.connect_nodes(0, 1) # Generate some traffic.\n+        # Wait for the initial messages to be sent/received (don't disconnect too early). \"sendheaders\" is the last one.\n+        self.wait_until(lambda: \"sendheaders\" in node0.getnetmsgstats()[\"recv\"][\"not_publicly_routable\"][\"manual\"])\n+        self.wait_until(lambda: \"sendheaders\" in node0.getnetmsgstats()[\"sent\"][\"not_publicly_routable\"][\"manual\"])\n+        self.disconnect_nodes(0, 1) # Avoid random/unpredictable packets (e.g. ping) messing with the tests below.\n+        assert_equal(len(node0.getpeerinfo()), 0)\n+\n+        # In v2 getnettotals counts also bytes that are not accounted at any message (the v2 handshake).\n+        # Also the v2 handshake's size could vary.\n+        if not self.options.v2transport:\n+            self.log.info(\"Compare byte count getnetmsgstats vs getnettotals\")",
      "path": "test/functional/rpc_net.py",
      "position": null,
      "original_position": 35,
      "commit_id": "db442f3d6e08d89031f1913695a6cc563f29c2c4",
      "original_commit_id": "a8e531f92fd2347584d95bbcb9353597d2241fd1",
      "in_reply_to_id": 1796173208,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-10-28T11:21:19Z",
      "updated_at": "2024-10-28T11:21:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#discussion_r1818887066",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818887066"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29418"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 219,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818887249",
      "pull_request_review_id": 2398788074,
      "id": 1818887249,
      "node_id": "PRRC_kwDOABII585sagRR",
      "diff_hunk": "@@ -546,6 +546,200 @@ static RPCHelpMan getaddednodeinfo()\n     };\n }\n \n+namespace net_stats {\n+\n+namespace aggregate_dimensions {\n+static std::string DIRECTION{\"direction\"};\n+static std::string NETWORK{\"network\"};\n+static std::string CONNECTION_TYPE{\"connection_type\"};\n+static std::string MESSAGE_TYPE{\"message_type\"};\n+};\n+\n+UniValue CreateJSON(const RPCHelpMan&, const JSONRPCRequest& request)\n+{\n+    const NodeContext& node = EnsureAnyNodeContext(request.context);\n+    const CConnman& connman = EnsureConnman(node);\n+\n+    // Used for a quick check if a string is in request.params[0] which is\n+    // supposed to be a JSON array, e.g. [\"direction\", \"network\"].\n+    std::unordered_set<std::string> aggregate_by;\n+    if (request.params[0].isArray()) {\n+        const UniValue& arr{request.params[0].get_array()};\n+        for (size_t i = 0; i < arr.size(); ++i) {\n+            const auto& agg{arr[i].get_str()};\n+            if (agg != aggregate_dimensions::DIRECTION &&\n+                agg != aggregate_dimensions::NETWORK &&\n+                agg != aggregate_dimensions::CONNECTION_TYPE &&\n+                agg != aggregate_dimensions::MESSAGE_TYPE) {\n+                throw JSONRPCError(\n+                    RPC_INVALID_PARAMS,\n+                    strprintf(\n+                        R\"(Unrecognized aggregation parameter: \"%s\". The array should consist of zero or more of \"%s\", \"%s\", \"%s\", \"%s\".)\",\n+                        agg,\n+                        aggregate_dimensions::DIRECTION,\n+                        aggregate_dimensions::NETWORK,\n+                        aggregate_dimensions::CONNECTION_TYPE,\n+                        aggregate_dimensions::MESSAGE_TYPE));\n+            }\n+            aggregate_by.insert(agg);\n+        }\n+    }\n+\n+    // The keys might as well be an empty string (if aggregating by that dimension).\n+    std::unordered_map<\n+        std::string, // \"sent\" or \"recv\"\n+        std::unordered_map<std::string, // \"ipv4\", \"tor\", ...\n+                           std::unordered_map<std::string, // \"outbound-full-relay\", \"feeler\", ...\n+                                              std::unordered_map<std::string, // \"verack\", \"ping\", ...\n+                                                                 NetStats::BytesAndCount>>>>\n+        result_map;\n+\n+    connman.GetNetStats().ForEach([&aggregate_by, &result_map](NetStats::Direction dir,\n+                                                               Network net,\n+                                                               ConnectionType con,\n+                                                               const std::string& msg,\n+                                                               const NetStats::BytesAndCount& data) {\n+        const std::string dir_str{aggregate_by.contains(aggregate_dimensions::DIRECTION) ? \"\" : dir == NetStats::SENT ? \"sent\" : \"recv\"};\n+        const std::string net_str{aggregate_by.contains(aggregate_dimensions::NETWORK) ? \"\" : GetNetworkName(net)};\n+        const std::string con_str{aggregate_by.contains(aggregate_dimensions::CONNECTION_TYPE) ? \"\" : ConnectionTypeAsString(con)};\n+        const std::string msg_str{aggregate_by.contains(aggregate_dimensions::MESSAGE_TYPE) ? \"\" : msg};\n+\n+        result_map[dir_str][net_str][con_str][msg_str] += data;\n+    });\n+\n+    auto Add = [](UniValue& target, const std::string& key, const UniValue& val) {\n+        if (val.empty()) {\n+            return;\n+        }\n+        if (key == \"\") {",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 69,
      "commit_id": "db442f3d6e08d89031f1913695a6cc563f29c2c4",
      "original_commit_id": "a8e531f92fd2347584d95bbcb9353597d2241fd1",
      "in_reply_to_id": 1796165328,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-10-28T11:21:29Z",
      "updated_at": "2024-10-28T11:21:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#discussion_r1818887249",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818887249"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29418"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 614,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1926973656",
      "pull_request_review_id": 2569857889,
      "id": 1926973656,
      "node_id": "PRRC_kwDOABII585y20jY",
      "diff_hunk": "@@ -546,6 +546,200 @@ static RPCHelpMan getaddednodeinfo()\n     };\n }\n \n+namespace net_stats {\n+\n+namespace aggregate_dimensions {\n+static std::string DIRECTION{\"direction\"};\n+static std::string NETWORK{\"network\"};\n+static std::string CONNECTION_TYPE{\"connection_type\"};\n+static std::string MESSAGE_TYPE{\"message_type\"};\n+};\n+\n+UniValue CreateJSON(const RPCHelpMan&, const JSONRPCRequest& request)\n+{\n+    const NodeContext& node = EnsureAnyNodeContext(request.context);\n+    const CConnman& connman = EnsureConnman(node);\n+\n+    // Used for a quick check if a string is in request.params[0] which is\n+    // supposed to be a JSON array, e.g. [\"direction\", \"network\"].\n+    std::unordered_set<std::string> aggregate_by;\n+    if (request.params[0].isArray()) {\n+        const UniValue& arr{request.params[0].get_array()};\n+        for (size_t i = 0; i < arr.size(); ++i) {\n+            const auto& agg{arr[i].get_str()};\n+            if (agg != aggregate_dimensions::DIRECTION &&\n+                agg != aggregate_dimensions::NETWORK &&\n+                agg != aggregate_dimensions::CONNECTION_TYPE &&\n+                agg != aggregate_dimensions::MESSAGE_TYPE) {\n+                throw JSONRPCError(\n+                    RPC_INVALID_PARAMS,\n+                    strprintf(\n+                        R\"(Unrecognized aggregation parameter: \"%s\". The array should consist of zero or more of \"%s\", \"%s\", \"%s\", \"%s\".)\",\n+                        agg,\n+                        aggregate_dimensions::DIRECTION,\n+                        aggregate_dimensions::NETWORK,\n+                        aggregate_dimensions::CONNECTION_TYPE,\n+                        aggregate_dimensions::MESSAGE_TYPE));\n+            }\n+            aggregate_by.insert(agg);\n+        }\n+    }\n+\n+    // The keys might as well be an empty string (if aggregating by that dimension).\n+    std::unordered_map<\n+        std::string, // \"sent\" or \"recv\"\n+        std::unordered_map<std::string, // \"ipv4\", \"tor\", ...\n+                           std::unordered_map<std::string, // \"outbound-full-relay\", \"feeler\", ...\n+                                              std::unordered_map<std::string, // \"verack\", \"ping\", ...\n+                                                                 NetStats::BytesAndCount>>>>\n+        result_map;\n+\n+    connman.GetNetStats().ForEach([&aggregate_by, &result_map](NetStats::Direction dir,\n+                                                               Network net,\n+                                                               ConnectionType con,\n+                                                               const std::string& msg,\n+                                                               const NetStats::BytesAndCount& data) {\n+        const std::string dir_str{aggregate_by.contains(aggregate_dimensions::DIRECTION) ? \"\" : dir == NetStats::SENT ? \"sent\" : \"recv\"};\n+        const std::string net_str{aggregate_by.contains(aggregate_dimensions::NETWORK) ? \"\" : GetNetworkName(net)};\n+        const std::string con_str{aggregate_by.contains(aggregate_dimensions::CONNECTION_TYPE) ? \"\" : ConnectionTypeAsString(con)};\n+        const std::string msg_str{aggregate_by.contains(aggregate_dimensions::MESSAGE_TYPE) ? \"\" : msg};\n+\n+        result_map[dir_str][net_str][con_str][msg_str] += data;\n+    });\n+\n+    auto Add = [](UniValue& target, const std::string& key, const UniValue& val) {\n+        if (val.empty()) {\n+            return;\n+        }\n+        if (key.empty()) {\n+            target = val;\n+            return;\n+        }\n+        target.pushKV(key, val);\n+    };\n+\n+    UniValue dir_json{UniValue::VOBJ};\n+    for (const auto& [dir_key, dir_val] : result_map) {\n+        UniValue net_json{UniValue::VOBJ};\n+        for (const auto& [net_key, net_val] : dir_val) {\n+            UniValue con_json{UniValue::VOBJ};\n+            for (const auto& [con_key, con_val] : net_val) {\n+                UniValue msg_json{UniValue::VOBJ};\n+                for (const auto& [msg_key, stats] : con_val) {\n+                    const auto bytes = stats.bytes.load();\n+                    const auto count = stats.count.load();\n+                    if (bytes == 0 || count == 0) {\n+                        continue;\n+                    }\n+                    UniValue bytes_and_count_json{UniValue::VOBJ};\n+                    bytes_and_count_json.pushKV(\"bytes\", bytes);\n+                    bytes_and_count_json.pushKV(\"count\", count);\n+\n+                    Add(msg_json, msg_key, bytes_and_count_json);\n+                }\n+                Add(con_json, con_key, msg_json);\n+            }\n+            Add(net_json, net_key, con_json);\n+        }\n+        Add(dir_json, dir_key, net_json);\n+    }\n+\n+    return dir_json;\n+}\n+}; // namespace net_stats\n+\n+static RPCHelpMan getnetmsgstats()\n+{\n+    return RPCHelpMan{\n+        /*name=*/\"getnetmsgstats\",\n+        /*description=*/\n+        \"\\nReturns the messages count and total number of bytes for network traffic.\\n\"\n+        \"Results may optionally be aggregated.\\n\",\n+        /*args=*/\n+        {RPCArg{\n+            /*name=*/\"aggregate_by\",\n+            /*type=*/RPCArg::Type::ARR,\n+            /*fallback=*/RPCArg::DefaultHint{\"empty, no aggregation\"},\n+            /*description=*/\"An array of keywords for aggregating the results.\",\n+            /*inner=*/\n+            {RPCArg{/*name=*/\"direction\",\n+                    /*type=*/RPCArg::Type::STR,\n+                    /*fallback=*/RPCArg::Optional::OMITTED,\n+                    /*description=*/\n+                    \"Aggregate by direction and don't show direction in the result.\"},\n+             RPCArg{/*name=*/\"network\",\n+                    /*type=*/RPCArg::Type::STR,\n+                    /*fallback=*/RPCArg::Optional::OMITTED,\n+                    /*description=*/\n+                    \"Aggregate by network and don't show network in the result.\"},\n+             RPCArg{/*name=*/\"connection_type\",\n+                    /*type=*/RPCArg::Type::STR,\n+                    /*fallback=*/RPCArg::Optional::OMITTED,\n+                    /*description=*/\n+                    \"Aggregate by connection type and don't show connection type in the result.\"},",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 134,
      "commit_id": "db442f3d6e08d89031f1913695a6cc563f29c2c4",
      "original_commit_id": "a46cbdd4780ca4d53ae6cba53b0168a9f330f926",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "no opinion on the changes, but this is a bit verbose and unclear why. clang-tidy named args can be helpful when there is a risk of mixing args, but for example putting `RPCArg::Type` anywhere else will already fail to compile before clang-tidy gets a chance to look at it. Similar reasoning for the string, etc...",
      "created_at": "2025-01-23T13:24:14Z",
      "updated_at": "2025-01-23T13:24:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#discussion_r1926973656",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1926973656"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29418"
        }
      },
      "start_line": null,
      "original_start_line": 675,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 673,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928322552",
      "pull_request_review_id": 2572022861,
      "id": 1928322552,
      "node_id": "PRRC_kwDOABII585y7934",
      "diff_hunk": "@@ -546,6 +546,200 @@ static RPCHelpMan getaddednodeinfo()\n     };\n }\n \n+namespace net_stats {\n+\n+namespace aggregate_dimensions {\n+static std::string DIRECTION{\"direction\"};\n+static std::string NETWORK{\"network\"};\n+static std::string CONNECTION_TYPE{\"connection_type\"};\n+static std::string MESSAGE_TYPE{\"message_type\"};\n+};\n+\n+UniValue CreateJSON(const RPCHelpMan&, const JSONRPCRequest& request)\n+{\n+    const NodeContext& node = EnsureAnyNodeContext(request.context);\n+    const CConnman& connman = EnsureConnman(node);\n+\n+    // Used for a quick check if a string is in request.params[0] which is\n+    // supposed to be a JSON array, e.g. [\"direction\", \"network\"].\n+    std::unordered_set<std::string> aggregate_by;\n+    if (request.params[0].isArray()) {\n+        const UniValue& arr{request.params[0].get_array()};\n+        for (size_t i = 0; i < arr.size(); ++i) {\n+            const auto& agg{arr[i].get_str()};\n+            if (agg != aggregate_dimensions::DIRECTION &&\n+                agg != aggregate_dimensions::NETWORK &&\n+                agg != aggregate_dimensions::CONNECTION_TYPE &&\n+                agg != aggregate_dimensions::MESSAGE_TYPE) {\n+                throw JSONRPCError(\n+                    RPC_INVALID_PARAMS,\n+                    strprintf(\n+                        R\"(Unrecognized aggregation parameter: \"%s\". The array should consist of zero or more of \"%s\", \"%s\", \"%s\", \"%s\".)\",\n+                        agg,\n+                        aggregate_dimensions::DIRECTION,\n+                        aggregate_dimensions::NETWORK,\n+                        aggregate_dimensions::CONNECTION_TYPE,\n+                        aggregate_dimensions::MESSAGE_TYPE));\n+            }\n+            aggregate_by.insert(agg);\n+        }\n+    }\n+\n+    // The keys might as well be an empty string (if aggregating by that dimension).\n+    std::unordered_map<\n+        std::string, // \"sent\" or \"recv\"\n+        std::unordered_map<std::string, // \"ipv4\", \"tor\", ...\n+                           std::unordered_map<std::string, // \"outbound-full-relay\", \"feeler\", ...\n+                                              std::unordered_map<std::string, // \"verack\", \"ping\", ...\n+                                                                 NetStats::BytesAndCount>>>>\n+        result_map;\n+\n+    connman.GetNetStats().ForEach([&aggregate_by, &result_map](NetStats::Direction dir,\n+                                                               Network net,\n+                                                               ConnectionType con,\n+                                                               const std::string& msg,\n+                                                               const NetStats::BytesAndCount& data) {\n+        const std::string dir_str{aggregate_by.contains(aggregate_dimensions::DIRECTION) ? \"\" : dir == NetStats::SENT ? \"sent\" : \"recv\"};\n+        const std::string net_str{aggregate_by.contains(aggregate_dimensions::NETWORK) ? \"\" : GetNetworkName(net)};\n+        const std::string con_str{aggregate_by.contains(aggregate_dimensions::CONNECTION_TYPE) ? \"\" : ConnectionTypeAsString(con)};\n+        const std::string msg_str{aggregate_by.contains(aggregate_dimensions::MESSAGE_TYPE) ? \"\" : msg};\n+\n+        result_map[dir_str][net_str][con_str][msg_str] += data;\n+    });\n+\n+    auto Add = [](UniValue& target, const std::string& key, const UniValue& val) {\n+        if (val.empty()) {\n+            return;\n+        }\n+        if (key.empty()) {\n+            target = val;\n+            return;\n+        }\n+        target.pushKV(key, val);\n+    };\n+\n+    UniValue dir_json{UniValue::VOBJ};\n+    for (const auto& [dir_key, dir_val] : result_map) {\n+        UniValue net_json{UniValue::VOBJ};\n+        for (const auto& [net_key, net_val] : dir_val) {\n+            UniValue con_json{UniValue::VOBJ};\n+            for (const auto& [con_key, con_val] : net_val) {\n+                UniValue msg_json{UniValue::VOBJ};\n+                for (const auto& [msg_key, stats] : con_val) {\n+                    const auto bytes = stats.bytes.load();\n+                    const auto count = stats.count.load();\n+                    if (bytes == 0 || count == 0) {\n+                        continue;\n+                    }\n+                    UniValue bytes_and_count_json{UniValue::VOBJ};\n+                    bytes_and_count_json.pushKV(\"bytes\", bytes);\n+                    bytes_and_count_json.pushKV(\"count\", count);\n+\n+                    Add(msg_json, msg_key, bytes_and_count_json);\n+                }\n+                Add(con_json, con_key, msg_json);\n+            }\n+            Add(net_json, net_key, con_json);\n+        }\n+        Add(dir_json, dir_key, net_json);\n+    }\n+\n+    return dir_json;\n+}\n+}; // namespace net_stats\n+\n+static RPCHelpMan getnetmsgstats()\n+{\n+    return RPCHelpMan{\n+        /*name=*/\"getnetmsgstats\",\n+        /*description=*/\n+        \"\\nReturns the messages count and total number of bytes for network traffic.\\n\"\n+        \"Results may optionally be aggregated.\\n\",\n+        /*args=*/\n+        {RPCArg{\n+            /*name=*/\"aggregate_by\",\n+            /*type=*/RPCArg::Type::ARR,\n+            /*fallback=*/RPCArg::DefaultHint{\"empty, no aggregation\"},\n+            /*description=*/\"An array of keywords for aggregating the results.\",\n+            /*inner=*/\n+            {RPCArg{/*name=*/\"direction\",\n+                    /*type=*/RPCArg::Type::STR,\n+                    /*fallback=*/RPCArg::Optional::OMITTED,\n+                    /*description=*/\n+                    \"Aggregate by direction and don't show direction in the result.\"},\n+             RPCArg{/*name=*/\"network\",\n+                    /*type=*/RPCArg::Type::STR,\n+                    /*fallback=*/RPCArg::Optional::OMITTED,\n+                    /*description=*/\n+                    \"Aggregate by network and don't show network in the result.\"},\n+             RPCArg{/*name=*/\"connection_type\",\n+                    /*type=*/RPCArg::Type::STR,\n+                    /*fallback=*/RPCArg::Optional::OMITTED,\n+                    /*description=*/\n+                    \"Aggregate by connection type and don't show connection type in the result.\"},",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 134,
      "commit_id": "db442f3d6e08d89031f1913695a6cc563f29c2c4",
      "original_commit_id": "a46cbdd4780ca4d53ae6cba53b0168a9f330f926",
      "in_reply_to_id": 1926973656,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I am fine with anything. Do you suggest to drop `/*name=*/`, `/*type=*/`, `/*fallback=*/` and `/*description=*/`? If you make a suggestion in a form of a diff or new code, how you think it would be better, I will apply it right away.",
      "created_at": "2025-01-24T08:35:06Z",
      "updated_at": "2025-01-24T08:35:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#discussion_r1928322552",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928322552"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29418"
        }
      },
      "start_line": null,
      "original_start_line": 675,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 673,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928339832",
      "pull_request_review_id": 2572051136,
      "id": 1928339832,
      "node_id": "PRRC_kwDOABII585y8CF4",
      "diff_hunk": "@@ -546,6 +546,200 @@ static RPCHelpMan getaddednodeinfo()\n     };\n }\n \n+namespace net_stats {\n+\n+namespace aggregate_dimensions {\n+static std::string DIRECTION{\"direction\"};\n+static std::string NETWORK{\"network\"};\n+static std::string CONNECTION_TYPE{\"connection_type\"};\n+static std::string MESSAGE_TYPE{\"message_type\"};\n+};\n+\n+UniValue CreateJSON(const RPCHelpMan&, const JSONRPCRequest& request)\n+{\n+    const NodeContext& node = EnsureAnyNodeContext(request.context);\n+    const CConnman& connman = EnsureConnman(node);\n+\n+    // Used for a quick check if a string is in request.params[0] which is\n+    // supposed to be a JSON array, e.g. [\"direction\", \"network\"].\n+    std::unordered_set<std::string> aggregate_by;\n+    if (request.params[0].isArray()) {\n+        const UniValue& arr{request.params[0].get_array()};\n+        for (size_t i = 0; i < arr.size(); ++i) {\n+            const auto& agg{arr[i].get_str()};\n+            if (agg != aggregate_dimensions::DIRECTION &&\n+                agg != aggregate_dimensions::NETWORK &&\n+                agg != aggregate_dimensions::CONNECTION_TYPE &&\n+                agg != aggregate_dimensions::MESSAGE_TYPE) {\n+                throw JSONRPCError(\n+                    RPC_INVALID_PARAMS,\n+                    strprintf(\n+                        R\"(Unrecognized aggregation parameter: \"%s\". The array should consist of zero or more of \"%s\", \"%s\", \"%s\", \"%s\".)\",\n+                        agg,\n+                        aggregate_dimensions::DIRECTION,\n+                        aggregate_dimensions::NETWORK,\n+                        aggregate_dimensions::CONNECTION_TYPE,\n+                        aggregate_dimensions::MESSAGE_TYPE));\n+            }\n+            aggregate_by.insert(agg);\n+        }\n+    }\n+\n+    // The keys might as well be an empty string (if aggregating by that dimension).\n+    std::unordered_map<\n+        std::string, // \"sent\" or \"recv\"\n+        std::unordered_map<std::string, // \"ipv4\", \"tor\", ...\n+                           std::unordered_map<std::string, // \"outbound-full-relay\", \"feeler\", ...\n+                                              std::unordered_map<std::string, // \"verack\", \"ping\", ...\n+                                                                 NetStats::BytesAndCount>>>>\n+        result_map;\n+\n+    connman.GetNetStats().ForEach([&aggregate_by, &result_map](NetStats::Direction dir,\n+                                                               Network net,\n+                                                               ConnectionType con,\n+                                                               const std::string& msg,\n+                                                               const NetStats::BytesAndCount& data) {\n+        const std::string dir_str{aggregate_by.contains(aggregate_dimensions::DIRECTION) ? \"\" : dir == NetStats::SENT ? \"sent\" : \"recv\"};\n+        const std::string net_str{aggregate_by.contains(aggregate_dimensions::NETWORK) ? \"\" : GetNetworkName(net)};\n+        const std::string con_str{aggregate_by.contains(aggregate_dimensions::CONNECTION_TYPE) ? \"\" : ConnectionTypeAsString(con)};\n+        const std::string msg_str{aggregate_by.contains(aggregate_dimensions::MESSAGE_TYPE) ? \"\" : msg};\n+\n+        result_map[dir_str][net_str][con_str][msg_str] += data;\n+    });\n+\n+    auto Add = [](UniValue& target, const std::string& key, const UniValue& val) {\n+        if (val.empty()) {\n+            return;\n+        }\n+        if (key.empty()) {\n+            target = val;\n+            return;\n+        }\n+        target.pushKV(key, val);\n+    };\n+\n+    UniValue dir_json{UniValue::VOBJ};\n+    for (const auto& [dir_key, dir_val] : result_map) {\n+        UniValue net_json{UniValue::VOBJ};\n+        for (const auto& [net_key, net_val] : dir_val) {\n+            UniValue con_json{UniValue::VOBJ};\n+            for (const auto& [con_key, con_val] : net_val) {\n+                UniValue msg_json{UniValue::VOBJ};\n+                for (const auto& [msg_key, stats] : con_val) {\n+                    const auto bytes = stats.bytes.load();\n+                    const auto count = stats.count.load();\n+                    if (bytes == 0 || count == 0) {\n+                        continue;\n+                    }\n+                    UniValue bytes_and_count_json{UniValue::VOBJ};\n+                    bytes_and_count_json.pushKV(\"bytes\", bytes);\n+                    bytes_and_count_json.pushKV(\"count\", count);\n+\n+                    Add(msg_json, msg_key, bytes_and_count_json);\n+                }\n+                Add(con_json, con_key, msg_json);\n+            }\n+            Add(net_json, net_key, con_json);\n+        }\n+        Add(dir_json, dir_key, net_json);\n+    }\n+\n+    return dir_json;\n+}\n+}; // namespace net_stats\n+\n+static RPCHelpMan getnetmsgstats()\n+{\n+    return RPCHelpMan{\n+        /*name=*/\"getnetmsgstats\",\n+        /*description=*/\n+        \"\\nReturns the messages count and total number of bytes for network traffic.\\n\"\n+        \"Results may optionally be aggregated.\\n\",\n+        /*args=*/\n+        {RPCArg{\n+            /*name=*/\"aggregate_by\",\n+            /*type=*/RPCArg::Type::ARR,\n+            /*fallback=*/RPCArg::DefaultHint{\"empty, no aggregation\"},\n+            /*description=*/\"An array of keywords for aggregating the results.\",\n+            /*inner=*/\n+            {RPCArg{/*name=*/\"direction\",\n+                    /*type=*/RPCArg::Type::STR,\n+                    /*fallback=*/RPCArg::Optional::OMITTED,\n+                    /*description=*/\n+                    \"Aggregate by direction and don't show direction in the result.\"},\n+             RPCArg{/*name=*/\"network\",\n+                    /*type=*/RPCArg::Type::STR,\n+                    /*fallback=*/RPCArg::Optional::OMITTED,\n+                    /*description=*/\n+                    \"Aggregate by network and don't show network in the result.\"},\n+             RPCArg{/*name=*/\"connection_type\",\n+                    /*type=*/RPCArg::Type::STR,\n+                    /*fallback=*/RPCArg::Optional::OMITTED,\n+                    /*description=*/\n+                    \"Aggregate by connection type and don't show connection type in the result.\"},",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 134,
      "commit_id": "db442f3d6e08d89031f1913695a6cc563f29c2c4",
      "original_commit_id": "a46cbdd4780ca4d53ae6cba53b0168a9f330f926",
      "in_reply_to_id": 1926973656,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Do you suggest to drop `/*name=*/`, `/*type=*/`, `/*fallback=*/` and `/*description=*/`?\r\n\r\nYes, I think it would be better to drop them in this case, because:\r\n\r\n* This would be the first and only RPC to do this, so it is inconsistent.\r\n* There isn't any benefit to do it here in this context (as explained above).\r\n* It is overly verbose.\r\n* It will break scripted-diffs in the future that assume a halfway uniform format.\r\n* If there was a benefit or reason to do it, it may be better to do it for all RPCs in a scripted-diff.\r\n\r\nBut no strong opinion. It is just a drive-by style-nit, so feel free to ignore.",
      "created_at": "2025-01-24T08:49:50Z",
      "updated_at": "2025-01-24T08:49:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#discussion_r1928339832",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928339832"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29418"
        }
      },
      "start_line": null,
      "original_start_line": 675,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 673,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928930970",
      "pull_request_review_id": 2573069185,
      "id": 1928930970,
      "node_id": "PRRC_kwDOABII585y-Saa",
      "diff_hunk": "@@ -546,6 +546,200 @@ static RPCHelpMan getaddednodeinfo()\n     };\n }\n \n+namespace net_stats {\n+\n+namespace aggregate_dimensions {\n+static std::string DIRECTION{\"direction\"};\n+static std::string NETWORK{\"network\"};\n+static std::string CONNECTION_TYPE{\"connection_type\"};\n+static std::string MESSAGE_TYPE{\"message_type\"};\n+};\n+\n+UniValue CreateJSON(const RPCHelpMan&, const JSONRPCRequest& request)\n+{\n+    const NodeContext& node = EnsureAnyNodeContext(request.context);\n+    const CConnman& connman = EnsureConnman(node);\n+\n+    // Used for a quick check if a string is in request.params[0] which is\n+    // supposed to be a JSON array, e.g. [\"direction\", \"network\"].\n+    std::unordered_set<std::string> aggregate_by;\n+    if (request.params[0].isArray()) {\n+        const UniValue& arr{request.params[0].get_array()};\n+        for (size_t i = 0; i < arr.size(); ++i) {\n+            const auto& agg{arr[i].get_str()};\n+            if (agg != aggregate_dimensions::DIRECTION &&\n+                agg != aggregate_dimensions::NETWORK &&\n+                agg != aggregate_dimensions::CONNECTION_TYPE &&\n+                agg != aggregate_dimensions::MESSAGE_TYPE) {\n+                throw JSONRPCError(\n+                    RPC_INVALID_PARAMS,\n+                    strprintf(\n+                        R\"(Unrecognized aggregation parameter: \"%s\". The array should consist of zero or more of \"%s\", \"%s\", \"%s\", \"%s\".)\",\n+                        agg,\n+                        aggregate_dimensions::DIRECTION,\n+                        aggregate_dimensions::NETWORK,\n+                        aggregate_dimensions::CONNECTION_TYPE,\n+                        aggregate_dimensions::MESSAGE_TYPE));\n+            }\n+            aggregate_by.insert(agg);\n+        }\n+    }\n+\n+    // The keys might as well be an empty string (if aggregating by that dimension).\n+    std::unordered_map<\n+        std::string, // \"sent\" or \"recv\"\n+        std::unordered_map<std::string, // \"ipv4\", \"tor\", ...\n+                           std::unordered_map<std::string, // \"outbound-full-relay\", \"feeler\", ...\n+                                              std::unordered_map<std::string, // \"verack\", \"ping\", ...\n+                                                                 NetStats::BytesAndCount>>>>\n+        result_map;\n+\n+    connman.GetNetStats().ForEach([&aggregate_by, &result_map](NetStats::Direction dir,\n+                                                               Network net,\n+                                                               ConnectionType con,\n+                                                               const std::string& msg,\n+                                                               const NetStats::BytesAndCount& data) {\n+        const std::string dir_str{aggregate_by.contains(aggregate_dimensions::DIRECTION) ? \"\" : dir == NetStats::SENT ? \"sent\" : \"recv\"};\n+        const std::string net_str{aggregate_by.contains(aggregate_dimensions::NETWORK) ? \"\" : GetNetworkName(net)};\n+        const std::string con_str{aggregate_by.contains(aggregate_dimensions::CONNECTION_TYPE) ? \"\" : ConnectionTypeAsString(con)};\n+        const std::string msg_str{aggregate_by.contains(aggregate_dimensions::MESSAGE_TYPE) ? \"\" : msg};\n+\n+        result_map[dir_str][net_str][con_str][msg_str] += data;\n+    });\n+\n+    auto Add = [](UniValue& target, const std::string& key, const UniValue& val) {\n+        if (val.empty()) {\n+            return;\n+        }\n+        if (key.empty()) {\n+            target = val;\n+            return;\n+        }\n+        target.pushKV(key, val);\n+    };\n+\n+    UniValue dir_json{UniValue::VOBJ};\n+    for (const auto& [dir_key, dir_val] : result_map) {\n+        UniValue net_json{UniValue::VOBJ};\n+        for (const auto& [net_key, net_val] : dir_val) {\n+            UniValue con_json{UniValue::VOBJ};\n+            for (const auto& [con_key, con_val] : net_val) {\n+                UniValue msg_json{UniValue::VOBJ};\n+                for (const auto& [msg_key, stats] : con_val) {\n+                    const auto bytes = stats.bytes.load();\n+                    const auto count = stats.count.load();\n+                    if (bytes == 0 || count == 0) {\n+                        continue;\n+                    }\n+                    UniValue bytes_and_count_json{UniValue::VOBJ};\n+                    bytes_and_count_json.pushKV(\"bytes\", bytes);\n+                    bytes_and_count_json.pushKV(\"count\", count);\n+\n+                    Add(msg_json, msg_key, bytes_and_count_json);\n+                }\n+                Add(con_json, con_key, msg_json);\n+            }\n+            Add(net_json, net_key, con_json);\n+        }\n+        Add(dir_json, dir_key, net_json);\n+    }\n+\n+    return dir_json;\n+}\n+}; // namespace net_stats\n+\n+static RPCHelpMan getnetmsgstats()\n+{\n+    return RPCHelpMan{\n+        /*name=*/\"getnetmsgstats\",\n+        /*description=*/\n+        \"\\nReturns the messages count and total number of bytes for network traffic.\\n\"\n+        \"Results may optionally be aggregated.\\n\",\n+        /*args=*/\n+        {RPCArg{\n+            /*name=*/\"aggregate_by\",\n+            /*type=*/RPCArg::Type::ARR,\n+            /*fallback=*/RPCArg::DefaultHint{\"empty, no aggregation\"},\n+            /*description=*/\"An array of keywords for aggregating the results.\",\n+            /*inner=*/\n+            {RPCArg{/*name=*/\"direction\",\n+                    /*type=*/RPCArg::Type::STR,\n+                    /*fallback=*/RPCArg::Optional::OMITTED,\n+                    /*description=*/\n+                    \"Aggregate by direction and don't show direction in the result.\"},\n+             RPCArg{/*name=*/\"network\",\n+                    /*type=*/RPCArg::Type::STR,\n+                    /*fallback=*/RPCArg::Optional::OMITTED,\n+                    /*description=*/\n+                    \"Aggregate by network and don't show network in the result.\"},\n+             RPCArg{/*name=*/\"connection_type\",\n+                    /*type=*/RPCArg::Type::STR,\n+                    /*fallback=*/RPCArg::Optional::OMITTED,\n+                    /*description=*/\n+                    \"Aggregate by connection type and don't show connection type in the result.\"},",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 134,
      "commit_id": "db442f3d6e08d89031f1913695a6cc563f29c2c4",
      "original_commit_id": "a46cbdd4780ca4d53ae6cba53b0168a9f330f926",
      "in_reply_to_id": 1926973656,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Agree. Removed.",
      "created_at": "2025-01-24T16:16:08Z",
      "updated_at": "2025-01-24T16:16:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29418#discussion_r1928930970",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928930970"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29418"
        }
      },
      "start_line": null,
      "original_start_line": 675,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 673,
      "side": "RIGHT"
    }
  ]
}