{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926",
    "id": 1612729574,
    "node_id": "PR_kwDOABII585gIEzm",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28926",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28926.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28926.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28926",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28926/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/33b44f2693cd8beefdb424dd73cc47250d8b4852",
    "number": 28926,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "rpc: add 'getnetmsgstats' RPC",
    "user": {
      "login": "willcl-ark",
      "id": 6606587,
      "node_id": "MDQ6VXNlcjY2MDY1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/willcl-ark",
      "html_url": "https://github.com/willcl-ark",
      "followers_url": "https://api.github.com/users/willcl-ark/followers",
      "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
      "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
      "repos_url": "https://api.github.com/users/willcl-ark/repos",
      "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This picks up #27534 with a rebase and a few fixups, now squashed. See #27534 for more background information.\r\n\r\nConsiderations from the previous draft:\r\n\r\n> Should we allow dimensions to be rearraged?\r\n> \r\n> When it comes time to gather up the RPC results, @vasild has provided an [alternate implementation](https://github.com/vasild/bitcoin/commits/getnetmsgstats) that uses an array instead of the MultiMap structure. This results in two changes:\r\n> \r\n>> using the stack over the heap (yay!)\r\n>> enforcing a strict ordering of dimensions (direction, network, connection type, message type)\r\n> \r\n> Aside from being good for memory, the reasoning here is allowing users to rearrange dimensions may be too confusing. I personally really like the ability to rearrange dimensions, which is why I have not integrated that solution into this PR, but am open to whatever the larger community prefers :) [Link](https://github.com/bitcoin/bitcoin/pull/27534#issue-1685662150)\r\n\r\n^ I have looked at the alternative implementation (thanks @vasild!), but prefer the current version myself so long as the performance is not an issue. I've left this as-is for now. If folks here think that it might be an issue then I can investigate the alternative further. See the next consideration for additional reasoning on sticking with the current approach.\r\n\r\n> Now that an effort has been made to remove the friendship between CConnman and CNode (see this PR: https://github.com/bitcoin/bitcoin/pull/27257) I'm unsure if this (recording network stats on a CConnman object) belongs here. [Link](https://github.com/bitcoin/bitcoin/pull/27534#discussion_r1179508199)\r\n\r\n^ These changes make @valid's alternative approach a bit harder to rebase and AB test with the current approach, as it relied on access to the `CNode` msg queue, and #27257 included the change: \"CNode's message processing queue is made private in the process and its mutex is turned into a non-recursive mutex.\" It can be worked around, but I'm not convinced it will be worth it.\r\n\r\n> this function should handle if index > NUM_NET_MESSAGE_TYPES [Link](https://github.com/bitcoin/bitcoin/pull/27534#discussion_r1191793368)\r\n\r\n^ I took this suggestion as part in 800ec2ac762cb48ac667cdf04de263634404569e\r\n\r\n> https://github.com/bitcoin/bitcoin/pull/27534#discussion_r1191798171\r\n\r\n^ I refactored this array in c909dc5704465aa96ce4496ed14452719e0b7860 to make it more comprehensible in the source code.\r\n\r\nAdditional considerations from OP:\r\n\r\n* The code organisation was mainly taken care of by @satsie, with _src/netstats.{h\\|cpp}_ now code from the netstats namespace instead of being contained within _net.cpp_\r\n",
    "labels": [
      {
        "id": 98279177,
        "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2023-11-22T12:37:19Z",
    "updated_at": "2025-02-11T07:31:11Z",
    "closed_at": "2024-02-12T08:26:28Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "964ef9f0dae06c410417487f54ea4070cc68528d",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "willcl-ark:2023-07-getnetmsgstats",
      "ref": "2023-07-getnetmsgstats",
      "sha": "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 164122552,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjQxMjI1NTI=",
        "name": "bitcoin",
        "full_name": "willcl-ark/bitcoin",
        "owner": {
          "login": "willcl-ark",
          "id": 6606587,
          "node_id": "MDQ6VXNlcjY2MDY1ODc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/willcl-ark",
          "html_url": "https://github.com/willcl-ark",
          "followers_url": "https://api.github.com/users/willcl-ark/followers",
          "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
          "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
          "repos_url": "https://api.github.com/users/willcl-ark/repos",
          "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/willcl-ark/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/willcl-ark/bitcoin",
        "archive_url": "https://api.github.com/repos/willcl-ark/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/willcl-ark/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/willcl-ark/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/willcl-ark/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/willcl-ark/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/willcl-ark/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/willcl-ark/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/willcl-ark/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/willcl-ark/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/willcl-ark/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/willcl-ark/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/willcl-ark/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/willcl-ark/bitcoin/events",
        "forks_url": "https://api.github.com/repos/willcl-ark/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/willcl-ark/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/willcl-ark/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/willcl-ark/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/willcl-ark/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/willcl-ark/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/willcl-ark/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/willcl-ark/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/willcl-ark/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/willcl-ark/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/willcl-ark/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/willcl-ark/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/willcl-ark/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/willcl-ark/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/willcl-ark/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/willcl-ark/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:willcl-ark/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/willcl-ark/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/willcl-ark/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/willcl-ark/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/willcl-ark/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/willcl-ark/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/willcl-ark/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/willcl-ark/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/willcl-ark/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/willcl-ark/bitcoin/hooks",
        "svn_url": "https://github.com/willcl-ark/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 272418,
        "default_branch": "master",
        "open_issues_count": 11,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-02-07T16:30:43Z",
        "created_at": "2019-01-04T15:17:29Z",
        "updated_at": "2025-02-07T16:30:53Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "ddc4b9850af363fbd446ca0540497c69cd91abe5",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36705,
        "stargazers_count": 81936,
        "watchers_count": 81936,
        "size": 275369,
        "default_branch": "master",
        "open_issues_count": 698,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-02-11T00:05:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-02-11T07:50:42Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 728,
    "deletions": 13,
    "changed_files": 13,
    "commits": 9,
    "review_comments": 16,
    "comments": 20
  },
  "events": [
    {
      "event": "mentioned",
      "id": 11035989352,
      "node_id": "MEE_lADOABII5853lPwVzwAAAAKRy9Vo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11035989352",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-22T12:37:20Z"
    },
    {
      "event": "subscribed",
      "id": 11035989368,
      "node_id": "SE_lADOABII5853lPwVzwAAAAKRy9V4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11035989368",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-22T12:37:20Z"
    },
    {
      "event": "mentioned",
      "id": 11035989398,
      "node_id": "MEE_lADOABII5853lPwVzwAAAAKRy9WW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11035989398",
      "actor": {
        "login": "Valid",
        "id": 261192,
        "node_id": "MDQ6VXNlcjI2MTE5Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/261192?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Valid",
        "html_url": "https://github.com/Valid",
        "followers_url": "https://api.github.com/users/Valid/followers",
        "following_url": "https://api.github.com/users/Valid/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Valid/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Valid/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Valid/subscriptions",
        "organizations_url": "https://api.github.com/users/Valid/orgs",
        "repos_url": "https://api.github.com/users/Valid/repos",
        "events_url": "https://api.github.com/users/Valid/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Valid/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-22T12:37:20Z"
    },
    {
      "event": "subscribed",
      "id": 11035989415,
      "node_id": "SE_lADOABII5853lPwVzwAAAAKRy9Wn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11035989415",
      "actor": {
        "login": "Valid",
        "id": 261192,
        "node_id": "MDQ6VXNlcjI2MTE5Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/261192?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Valid",
        "html_url": "https://github.com/Valid",
        "followers_url": "https://api.github.com/users/Valid/followers",
        "following_url": "https://api.github.com/users/Valid/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Valid/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Valid/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Valid/subscriptions",
        "organizations_url": "https://api.github.com/users/Valid/orgs",
        "repos_url": "https://api.github.com/users/Valid/repos",
        "events_url": "https://api.github.com/users/Valid/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Valid/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-22T12:37:20Z"
    },
    {
      "event": "mentioned",
      "id": 11035989428,
      "node_id": "MEE_lADOABII5853lPwVzwAAAAKRy9W0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11035989428",
      "actor": {
        "login": "satsie",
        "id": 1823216,
        "node_id": "MDQ6VXNlcjE4MjMyMTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1823216?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/satsie",
        "html_url": "https://github.com/satsie",
        "followers_url": "https://api.github.com/users/satsie/followers",
        "following_url": "https://api.github.com/users/satsie/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/satsie/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/satsie/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/satsie/subscriptions",
        "organizations_url": "https://api.github.com/users/satsie/orgs",
        "repos_url": "https://api.github.com/users/satsie/repos",
        "events_url": "https://api.github.com/users/satsie/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/satsie/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-22T12:37:20Z"
    },
    {
      "event": "subscribed",
      "id": 11035989444,
      "node_id": "SE_lADOABII5853lPwVzwAAAAKRy9XE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11035989444",
      "actor": {
        "login": "satsie",
        "id": 1823216,
        "node_id": "MDQ6VXNlcjE4MjMyMTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1823216?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/satsie",
        "html_url": "https://github.com/satsie",
        "followers_url": "https://api.github.com/users/satsie/followers",
        "following_url": "https://api.github.com/users/satsie/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/satsie/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/satsie/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/satsie/subscriptions",
        "organizations_url": "https://api.github.com/users/satsie/orgs",
        "repos_url": "https://api.github.com/users/satsie/repos",
        "events_url": "https://api.github.com/users/satsie/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/satsie/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-22T12:37:20Z"
    },
    {
      "event": "commented",
      "id": 1822694513,
      "node_id": "IC_kwDOABII585spBxx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1822694513",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-22T12:37:23Z",
      "updated_at": "2024-02-12T01:25:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28926).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [brunoerg](https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1823155627), [amitiuttarwar](https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1823616924), [Sjors](https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1824139761), [vasild](https://github.com/bitcoin/bitcoin/pull/28926#pullrequestreview-1765066743), [mzumsande](https://github.com/bitcoin/bitcoin/pull/28926#pullrequestreview-1807023183), [kristapsk](https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1879765838) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29421](https://github.com/bitcoin/bitcoin/pull/29421) (net: make the list of known message types a compile time constant by vasild)\n* [#29418](https://github.com/bitcoin/bitcoin/pull/29418) (rpc: provide per message stats for global traffic via new RPC 'getnetmsgstats' by vasild)\n* [#27770](https://github.com/bitcoin/bitcoin/pull/27770) (Introduce 'getblockfileinfo' RPC command by furszy)\n* [#27114](https://github.com/bitcoin/bitcoin/pull/27114) (p2p: Allow whitelisting manual connections by brunoerg)\n* [#19463](https://github.com/bitcoin/bitcoin/pull/19463) (Prune locks by luke-jr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1822694513",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28926"
    },
    {
      "event": "labeled",
      "id": 11035990279,
      "node_id": "LE_lADOABII5853lPwVzwAAAAKRy9kH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11035990279",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-22T12:37:25Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "reviewed",
      "id": 1744577141,
      "node_id": "PRR_kwDOABII585n_CJ1",
      "url": null,
      "actor": null,
      "commit_id": "0341129ed1023576f04786d863a74682b187fc06",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nI was looking at this recently, and got some ideas how to simplify and better organize this, will share here. Thanks for taking charge!",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#pullrequestreview-1744577141",
      "submitted_at": "2023-11-22T14:45:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926"
    },
    {
      "event": "labeled",
      "id": 11037774128,
      "node_id": "LE_lADOABII5853lPwVzwAAAAKR5xEw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11037774128",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-22T15:09:16Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1823090489,
      "node_id": "IC_kwDOABII585sqic5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1823090489",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-22T16:26:24Z",
      "updated_at": "2023-11-22T16:26:24Z",
      "author_association": "MEMBER",
      "body": "```bash\r\nclang-tidy-17 -p=/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu -quiet -load=/tidy-build/libbitcoin-tidy.so /ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/rpc/net.cpp\r\nrpc/net.cpp:726:30: error: use emplace_back instead of push_back [modernize-use-emplace,-warnings-as-errors]\r\n  726 |                         path.push_back(\"totals\");\r\n      |                              ^~~~~~~~~~\r\n      |                              emplace_back(\r\n```",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1823090489",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28926"
    },
    {
      "event": "commented",
      "id": 1823155627,
      "node_id": "IC_kwDOABII585sqyWr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1823155627",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-22T17:02:54Z",
      "updated_at": "2023-11-22T17:02:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1823155627",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28926"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQzYjM0YjgyYWYzMzkwOWVhZWZmZThkNTk2YTZjNzA5NTFkYzg0NGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d3b34b82af33909eaeffe8d596a6c70951dc844c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d3b34b82af33909eaeffe8d596a6c70951dc844c",
      "tree": {
        "sha": "5f1520e20cb88ee58f5cd37bb35b38874e2ef826",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5f1520e20cb88ee58f5cd37bb35b38874e2ef826"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 5f1520e20cb88ee58f5cd37bb35b38874e2ef826\nparent a238356823bd261c4bbada9d9b8f9c850b6ba79e\nauthor Stacie <staciewaleyko@gmail.com> 1681414478 -0400\ncommitter willcl-ark <will@256k1.dev> 1700681401 +0000\n\nnet: move NET_MESSAGE_TYPE_OTHER\n\nMove NET_MESSAGE_TYPE_OTHER to protocol.h/cpp, where the rest of the\nmessage types live.\n\nCo-authored-by: Will Clark <will@256k1.dev>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEoAg2YPI1onAAzTyBzm7EmUXBfqYFAmVeVroACgkQzm7EmUXB\nfqZuOxAAjDA6eINm8rIv5JtX6u+S/Zl7Z0PpX55OgrhGP2tmx1DFusK4L9YN4yM3\nSiVuIjNV4kj+SHi4i7Dcxcg/h1dq4J9N+0/alXRkJJ1Ceb27bMhFKrULqK5vnzJa\no3UBf0vRlZ+BVR0guRB/nUv8qMmMDLGbURVIYmhhngFfsPY6K85kKS8MBJT9gt3A\nTQiDxj3cz7mwIJFAC44HA+ygCYgnedKTgrV1qCfJ6ztlowOX22TX7X0fPLc4lmHz\nhSVPkwRqiHxVEMJlX7DRnPP7QHccaHK7rtvZN97WSe/pzH0QDMHx4pilMYDgd7Xk\n9tX8QSnwY3HcKOYGsq9hl8meZmJ99+T4SLAyOwzMqwUiIZrgmGR30FXXD7KUgc8p\nKZKePaSZW97/F1Kn4yQOD0KDejd3A8IHsYxBI517YcArj1vjWk2IfOWmmknaTfqd\n1KFkreIt8MIWAg4zVinvCmbaSQU4yEyAC+7boK2LFBgB5QRHXKLp+X1tAfi0rPtK\nZZ2HjFqunr3k64c6rXCxw943k5k9nZI3OA6lzQfSNiLDPO5PGggVwBzUO07H3l6I\n+mTr3GSsAlx7MVkDMsFgIw2XJbsdvIGZYv9ZThUcErQ8mIxhS3oRlz22/t/i9Isg\neKCMW0CNKWqmxGjyqtmwfT/FpU4GG47s/uaF7SxFDeihKabOXwk=\n=LJt5\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a238356823bd261c4bbada9d9b8f9c850b6ba79e",
          "sha": "a238356823bd261c4bbada9d9b8f9c850b6ba79e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a238356823bd261c4bbada9d9b8f9c850b6ba79e"
        }
      ],
      "message": "net: move NET_MESSAGE_TYPE_OTHER\n\nMove NET_MESSAGE_TYPE_OTHER to protocol.h/cpp, where the rest of the\nmessage types live.\n\nCo-authored-by: Will Clark <will@256k1.dev>",
      "committer": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2023-11-22T19:30:01Z"
      },
      "author": {
        "name": "Stacie",
        "email": "staciewaleyko@gmail.com",
        "date": "2023-04-13T19:34:38Z"
      },
      "sha": "d3b34b82af33909eaeffe8d596a6c70951dc844c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQxNjUwNjM5ZGUyYTZmM2JkMGI5YmU4YzM0MWU3NDk3Y2I3ZTAyNWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d1650639de2a6f3bd0b9be8c341e7497cb7e025b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d1650639de2a6f3bd0b9be8c341e7497cb7e025b",
      "tree": {
        "sha": "df018e9dbb524d2cef650f96b1143978a7c0c84b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/df018e9dbb524d2cef650f96b1143978a7c0c84b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree df018e9dbb524d2cef650f96b1143978a7c0c84b\nparent d3b34b82af33909eaeffe8d596a6c70951dc844c\nauthor Stacie <staciewaleyko@gmail.com> 1681415001 -0400\ncommitter willcl-ark <will@256k1.dev> 1700681404 +0000\n\nnet: make constants for total conn and msg types\n\nAdd consts to keep track of the number of connection and message types.\nThe number of message types should match the number of elements in the\nallNetMessageTypes array.\n\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEoAg2YPI1onAAzTyBzm7EmUXBfqYFAmVeVrwACgkQzm7EmUXB\nfqbmXA/6A9yN+Oqx5ARR+HihT/cbMSOhyAeOEUTZNcXoWx54q2TZEJlz3Ki7Zlu9\nI8lrrsh1dvFfboFDa+N7Uwm15Zq+XlIGWfru3b5MtNHBTqcJ7FeV90cJEdkM0QBs\naqwo1BhDLHq+z6O0aRm0y9bmyl1BhV4r22AdEbbGY9FrPSDAiy2SH1Ra3IjM7cba\ns4hWMKmO2jBEfbW/3lOIHkWYOHUtOiNxzBqwTmP4RXP5iXMrXZpD9IOnX9KzDi8b\nANJCpF5DPgb8B71Tc4se7XeknPCoEPU4OJ+YTngKUFSrTxOQhp7VLso+lqhOZQ/i\nF5sH/e74TYuRcH5U3IJHi8bGt3olVu9hxva40WgNZevh/42dICPBpxyMDet9uA96\nwRMO3F5velCtrpWDZWp6WUcX+nUTKSgqpArjEwWS/XgaxFiJONk7rFu4awMGtY/o\nDya1xxVGA2/7gPHXHhMIHGVnEYBQ1HW0fDj7usVkX60teUMwAHR/jv7tSzshmYRm\n8djgZdHs9jSxjSfw+dJJZjrG77GIEyBNqLVKVI5rlF+H+aI4ORiAkU9iGav+WWw4\njjysIvH+eHb9J7UX3sndMG8KKx8jPbjPtNxakkSOUED1crdU46gd4BhLuJf24N4d\n1mvXvLPJPVYoGmYIdr16cJXNy4ZdoICsfRc6rH7p1jfmU09O75s=\n=Oads\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d3b34b82af33909eaeffe8d596a6c70951dc844c",
          "sha": "d3b34b82af33909eaeffe8d596a6c70951dc844c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d3b34b82af33909eaeffe8d596a6c70951dc844c"
        }
      ],
      "message": "net: make constants for total conn and msg types\n\nAdd consts to keep track of the number of connection and message types.\nThe number of message types should match the number of elements in the\nallNetMessageTypes array.\n\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>",
      "committer": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2023-11-22T19:30:04Z"
      },
      "author": {
        "name": "Stacie",
        "email": "staciewaleyko@gmail.com",
        "date": "2023-04-13T19:43:21Z"
      },
      "sha": "d1650639de2a6f3bd0b9be8c341e7497cb7e025b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDkzODNhY2IyZDVjN2IxYjI2N2IzOTNhMzNiM2U4ZTEyZmNlZDRjNGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9383acb2d5c7b1b267b393a33b3e8e12fced4c4e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9383acb2d5c7b1b267b393a33b3e8e12fced4c4e",
      "tree": {
        "sha": "5bab73f1d9e1d6cb09c2397203b93b83640a0e2f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5bab73f1d9e1d6cb09c2397203b93b83640a0e2f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 5bab73f1d9e1d6cb09c2397203b93b83640a0e2f\nparent d1650639de2a6f3bd0b9be8c341e7497cb7e025b\nauthor Stacie <staciewaleyko@gmail.com> 1681415324 -0400\ncommitter willcl-ark <will@256k1.dev> 1700681602 +0000\n\nnet: add methods to convert a message type to/from an index\n\nCo-authored-by: Will Clark <will@256k1.dev>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEoAg2YPI1onAAzTyBzm7EmUXBfqYFAmVeV4IACgkQzm7EmUXB\nfqbmuw//SSHw8dNIkoAtT+6ZeM701m2CwNGD3Dc63Mino46WeUcXfaVCUMYtxmS7\njZXh6NtAtbii0rJW8U+7k9aMjPI+UjF0nr4U+WjYjBim8v9J7b4FzYUEH6k70kET\nAka55Hz61ONOq+HkeOKWfbscgclxbcG1BWbqSiaZFNwRBNJy7n1fMr3PGjAK/A42\nFPuVtPQ3GxDjkzggbCWz5X/K78VHDCf0NfDZXO7sL83sr6qhfjVrTcEIw2lRQMwW\njOZj4xYiggK+s9dLkPeHcdXhW/p6mxjE31v8DQFcNjirVVcdzm7eEGaq+Bney3W4\n/7Ca2XNncRXYYkHXzxkLulefe4NWerdsu3eywScwr3EcmaQBqsSgHmyz++Zod4cf\n5bJgUXViJRYwwy52jilp9mgUJQxuUQNqvORCh7f7mlSwm6W6UooT4ChqquUUm5IV\nFqASVMTFdS4bLBHaV0zdhCdjqMzQjQQFA4MYS931lyRq0WD6tszxfXrYc80jjHtI\nVFJJLNGMeDcQlAip1Qj0chZNPXOf3sjWjIvWBS1cx/Pvz/r+5/DvV3sxlbVSOoEl\n3JQ2/KzMB4DHRBFUo2GgDt1hYGcRZnJzTHnErfPSlmg3Ml9X0R/05HpZDTEiOr8S\n+vjsh2E2LNpAu+GrVuHQQe/DYjE7F6lccR63ctKZ7xr7+4WPL6A=\n=Scn9\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d1650639de2a6f3bd0b9be8c341e7497cb7e025b",
          "sha": "d1650639de2a6f3bd0b9be8c341e7497cb7e025b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d1650639de2a6f3bd0b9be8c341e7497cb7e025b"
        }
      ],
      "message": "net: add methods to convert a message type to/from an index\n\nCo-authored-by: Will Clark <will@256k1.dev>",
      "committer": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2023-11-22T19:33:22Z"
      },
      "author": {
        "name": "Stacie",
        "email": "staciewaleyko@gmail.com",
        "date": "2023-04-13T19:48:44Z"
      },
      "sha": "9383acb2d5c7b1b267b393a33b3e8e12fced4c4e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU0OGExNGM0NTVlNWZiNDFjOTE0OTQwZmNhOGFhODljMTgyZjdhYzk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/548a14c455e5fb41c914940fca8aa89c182f7ac9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/548a14c455e5fb41c914940fca8aa89c182f7ac9",
      "tree": {
        "sha": "0d4b8f6305277a1ab1bdaa0a4eb8f65ef772654d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0d4b8f6305277a1ab1bdaa0a4eb8f65ef772654d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0d4b8f6305277a1ab1bdaa0a4eb8f65ef772654d\nparent 9383acb2d5c7b1b267b393a33b3e8e12fced4c4e\nauthor Stacie <staciewaleyko@gmail.com> 1681493945 -0400\ncommitter willcl-ark <will@256k1.dev> 1700681864 +0000\n\nnet: create a data structure for network message stats\n\nNew data structure to hold the atomic message and byte counts of each\nnetwork message statistic at the most granular level. Uses a 4D array\nthat indexes by direction, network type, connection type, and message\ntype.\n\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>\nCo-authored-by: Will Clark <will@256k1.dev>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEoAg2YPI1onAAzTyBzm7EmUXBfqYFAmVeWIgACgkQzm7EmUXB\nfqbtWQ//T7cR9Rktd5knaJ/dU5XaXYAYqPRE3YSkkiueDf+I0uV3WCmHf8E92oER\n9a9F7Ut9PTCo9AFQUSEhcN93t87Ie8tP7/iyO0NlYfV6joU+p1strKGYq5K4R8PZ\nOHAvCyos0KgBkDlZnITuATIqL22YyMunR4rDwkfGZEMUpEBm3II6i03Fwk6We0pV\nu/qinzH60hPujGG84gctKQTj+s9E0Avs5TQlfY2+EEDKfieqY85N7bgJN+0VGmuL\nFF3LCtu+mCvtnJq5pyr/tKWLRp+LV2Ba+f9tWynwArPVeXayRJhqfR+dFthrINN5\nDvV1YlURxzJvuzwFoqtQMDrYe2lJbKU0sV8SkCOdznAFwicYILPUFeUNEdmTIhjO\nk40TsChE+pz9BY31/oWHRbp4weq27sBF+3Xr3AWouRpI2TSV2sFHm8ibln7NdKnL\naJS0rwCvekh51/A8D+1BIf8FEqaLMecXmAmRD68Q5z9tY7yk1QEh6zaFtr69q8IA\niPn2uAfZQY60c7F4S4GTDDALnWvQN5oM3lcRpPMpcPiPV0RRF/UijMbKE8+73MlZ\n7ZKnlGAZKgzfpUg1PSFcTaTyxH4m5Ovgc6FdKsv5BGAWDLWleHGn0YFODRooBxOk\n16frgWQoyRg6kGnI1/SAkWeDUcgEn9rWr73c4L2nGX+xWYwbLFw=\n=wY3l\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9383acb2d5c7b1b267b393a33b3e8e12fced4c4e",
          "sha": "9383acb2d5c7b1b267b393a33b3e8e12fced4c4e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9383acb2d5c7b1b267b393a33b3e8e12fced4c4e"
        }
      ],
      "message": "net: create a data structure for network message stats\n\nNew data structure to hold the atomic message and byte counts of each\nnetwork message statistic at the most granular level. Uses a 4D array\nthat indexes by direction, network type, connection type, and message\ntype.\n\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>\nCo-authored-by: Will Clark <will@256k1.dev>",
      "committer": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2023-11-22T19:37:44Z"
      },
      "author": {
        "name": "Stacie",
        "email": "staciewaleyko@gmail.com",
        "date": "2023-04-14T17:39:05Z"
      },
      "sha": "548a14c455e5fb41c914940fca8aa89c182f7ac9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUzNzE4NDVlN2I1YjU4NTIxYjdjM2IxMTYyOWZmYWI1NjdlMzkyZDM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5371845e7b5b58521b7c3b11629ffab567e392d3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5371845e7b5b58521b7c3b11629ffab567e392d3",
      "tree": {
        "sha": "41905d0c18a85191466c8c256ae060721cdac0fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/41905d0c18a85191466c8c256ae060721cdac0fc"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 41905d0c18a85191466c8c256ae060721cdac0fc\nparent 548a14c455e5fb41c914940fca8aa89c182f7ac9\nauthor Stacie <staciewaleyko@gmail.com> 1681494163 -0400\ncommitter willcl-ark <will@256k1.dev> 1700681866 +0000\n\nnet: add to/fromIndex() methods to NetStats\n\nAdd to/fromIndex() methods to safely map enums to indexes.\n\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>\nCo-authored-by: Will Clark <will@256k1.dev>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEoAg2YPI1onAAzTyBzm7EmUXBfqYFAmVeWIoACgkQzm7EmUXB\nfqaIgBAAuhxgKXcx0faf06fSti0b9XnW2pDktR1TbudxALcFJCqLIEDdinftGkYq\ndUCT2huEofB7fq5DjyLF6ArKDHMWAfKhfT5+z3l1OYK1caZsTfqV9WTMJMfuC1sC\nRfK5o77GPLK8TyGnPewUDp8AmYpRWGuXsfh7c4ysLV+JursEXye7OGI8bvAuaExe\nXkc/i+ysw3X8CJ6NFP6NZdqWC50MxFDJIkGdm4Ngs2uLdRiSx3c6L38kV72eTevx\nwmGaJyqj7RYiCg4y5+yx27oCHs9tNeA3bna3Ux3vp2y0+CQRYgAMUJqyxDO3hkaU\ntOyzM4Us15rIT+U6EvzT1xp6LzsXf9YTGd1jgmNFixTH2djoHW0iZuSczwo0OXzf\nEVjE7Q3gXsIBxzgB1G5o0siGOo1GZ5maguQ4NvXn7L1W19XGcZYqrK3/jzv5VjJL\nW4nmp7Y3Kg6LyWOc7SXY28AP+AimQ1OuBbPzSI5Ngo5jWC3CGzfx0Htdz3wAyzRn\nDP90W7VhbZDRMppfOfTQJk4223hdVvkW88SwFeAf5dYDI7L9b2uhi1ZTNeNR3M7c\nWUMlm+2u6YW1Uulf4OrtT0686OH8FH0xf4kLlNT0BoKL0OyyYRrAFnEZnYPzMe+J\nUl5B/C8NFpeiHhKhNFzBWD14nBkRyjMFYJukc9fbOyxNLoQn4ko=\n=dCsN\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/548a14c455e5fb41c914940fca8aa89c182f7ac9",
          "sha": "548a14c455e5fb41c914940fca8aa89c182f7ac9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/548a14c455e5fb41c914940fca8aa89c182f7ac9"
        }
      ],
      "message": "net: add to/fromIndex() methods to NetStats\n\nAdd to/fromIndex() methods to safely map enums to indexes.\n\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>\nCo-authored-by: Will Clark <will@256k1.dev>",
      "committer": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2023-11-22T19:37:46Z"
      },
      "author": {
        "name": "Stacie",
        "email": "staciewaleyko@gmail.com",
        "date": "2023-04-14T17:42:43Z"
      },
      "sha": "5371845e7b5b58521b7c3b11629ffab567e392d3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVkN2ZhZmFmMDA2NDhkOWIzYWU5ZTE4ZTEwYmVkYjRkMDZmNTgzM2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed7fafaf00648d9b3ae9e18e10bedb4d06f5833e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ed7fafaf00648d9b3ae9e18e10bedb4d06f5833e",
      "tree": {
        "sha": "272014a5ccf02286834a15042f3d30417470799c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/272014a5ccf02286834a15042f3d30417470799c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 272014a5ccf02286834a15042f3d30417470799c\nparent 5371845e7b5b58521b7c3b11629ffab567e392d3\nauthor Stacie <staciewaleyko@gmail.com> 1681494286 -0400\ncommitter willcl-ark <will@256k1.dev> 1700681867 +0000\n\nnet: count transferred bytes & messages globally\n\nIn addition to per-peer stats, start recording stats (the number of\nmessages and bytes) globally in `CConnman`. This happens every time\nmessages are sent or received. The per-peer stats are lost when a peer\ndisconnects.\n\nAlso expose this object with a getter.\n\nCo-authored-by: Will Clark <will@256k1.dev>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEoAg2YPI1onAAzTyBzm7EmUXBfqYFAmVeWIsACgkQzm7EmUXB\nfqacJRAAkyAcOYnGsbkvzABGLDGs5M0n0t90POvOYUMgR8NjcdN+I8sDV8S4Gm3n\n+mzUal/IvEIm6xq0JX7ACKn8AEwfDNgjZdElwdzt4Bv7aU2dPpJ7vl/y5CXX5xqn\n8U656PyGBWEmnkKxGtRMU3LErhw8Ed4sE8rytORcFyeBxdFuBdw/74S77J8kc3jm\n4oPVlK93fIF5kaiasnv2HxnOM1+RQjVN/a9vsjtdW9m4GDNFh/hPMuHLspivIStB\nNYP/+OfdXHvYP6tC8kfBU+jaiHjwYTdu+dFO17fsKoWdkefL6fR7OyB0XBlOPpYz\ns8ldjvh3bOYxSVNqLMNtaxjQVZB/p3/BJPZoDpnWnDhE9F0AL04Tjq1+Lw81XhgZ\n5OPT+9o2qldAgWM6ww5FFekjo2HIe8guRKhV+psiomqH2BDranfvvCVf2uIO4vP9\nhFpoHY8zEitb3cbGnfJenyRYMMxf4TVqD8DhOapivveDZIyigE8gvbih5XJF3s3D\ndN/E/U2pihjzDR0bK09mUK++l0/i3ZhsqtKMmGx/3ZdMyEmtJc7Wdk5icXW6F6V1\nYbl8pETa2+eAhopVfjQQBFUXV/YP4UFgu+MxLGAdCEvSZwdVdvAtl3SXd18+wyCw\n8GW1bAO4q8xm5Ww4gMAudDMV0VCtj7ACZNZDVbzgEahZKn938s0=\n=FQ+q\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5371845e7b5b58521b7c3b11629ffab567e392d3",
          "sha": "5371845e7b5b58521b7c3b11629ffab567e392d3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5371845e7b5b58521b7c3b11629ffab567e392d3"
        }
      ],
      "message": "net: count transferred bytes & messages globally\n\nIn addition to per-peer stats, start recording stats (the number of\nmessages and bytes) globally in `CConnman`. This happens every time\nmessages are sent or received. The per-peer stats are lost when a peer\ndisconnects.\n\nAlso expose this object with a getter.\n\nCo-authored-by: Will Clark <will@256k1.dev>",
      "committer": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2023-11-22T19:37:47Z"
      },
      "author": {
        "name": "Stacie",
        "email": "staciewaleyko@gmail.com",
        "date": "2023-04-14T17:44:46Z"
      },
      "sha": "ed7fafaf00648d9b3ae9e18e10bedb4d06f5833e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIyNTA2OTk0ZTAxODIwYTJjNjM0NjRkNTFmNGQ5NDA0MTMxZGMxMWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/22506994e01820a2c63464d51f4d9404131dc11e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/22506994e01820a2c63464d51f4d9404131dc11e",
      "tree": {
        "sha": "190b4cc7f5c1b3d34344b11627af2cd1004ceb97",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/190b4cc7f5c1b3d34344b11627af2cd1004ceb97"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 190b4cc7f5c1b3d34344b11627af2cd1004ceb97\nparent ed7fafaf00648d9b3ae9e18e10bedb4d06f5833e\nauthor Stacie <staciewaleyko@gmail.com> 1681495460 -0400\ncommitter willcl-ark <will@256k1.dev> 1700681869 +0000\n\nrpc: aggregate network message stats\n\nAggregate stats to show zero or more of the following dimensions:\ndirection, network, connection, message type\n\nThe depth of the return object depends the number of dimensions\nspecified to be shown. MultiLevelStatsMap makes this possible, and\nconverts the object to a UniValue.\n\nCo-authored-by: Anthony Towns <aj@erisian.com.au>\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEoAg2YPI1onAAzTyBzm7EmUXBfqYFAmVeWI0ACgkQzm7EmUXB\nfqbnvg//Y/D64Oe5H//2E/IWdNCp3jgIpR3zz2bKMfaUtzgVZwhEjbsd+doXw9IR\nyx4/Mew8tf/BOCcrEOvUm37LR07F/sqtHW0DIZYEgjiJBck7cXwaxAjXcsti22fl\np4XLcTFNZfQCk65dlfl66F4Ld75TWELNHuRy8Fc8tSUQE/YhTyCtSGZELki73kXl\nqHs/v1Pav+A0A51SiLV0EQrG2SfgdP8FGRWw/Mhq/8qH2+Q6Y4b/wnqbiE0pMwQk\nFBqQhD+wtXebBB3VzeOQ9DXQuY//7SZEJoyt34mF4Agw7SpqnvwHxvyeVGnkECxy\nM8pVwHTSaqJSRMcGrSaJ8zlwn9svtUOHyKvmXLr/WJjNnbP1HjkJMwJ6E2LUpFC5\n/F23lU6W9e/cs5JPdMB6wG8/o76AUR4FcIM4b64oukpD7+MFR2l9qU6FSWWU+/QU\nM1fxjiG4Gp/1MAQ961GMxfE5djHtheFaAuRje0kiIa9SrB1I/9AwEQySqUV42gwg\n713Ew2OBtsrN/En7CxJtEWDIGXqzxYbLYrfL37kef1i8an57DU8Z8E6mvTDyTc0s\nwg22fKykFqhbQOBFzD/ZRMag8A3OasEbTbhT6cstwmvy7C2XUBsxi0vgkYHDuOxl\nEu6WOrMr5oGK+DjrOjaAyWHVIa/ZDLlIftGzcUa/Fa07Dw4o1jw=\n=hNqA\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed7fafaf00648d9b3ae9e18e10bedb4d06f5833e",
          "sha": "ed7fafaf00648d9b3ae9e18e10bedb4d06f5833e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ed7fafaf00648d9b3ae9e18e10bedb4d06f5833e"
        }
      ],
      "message": "rpc: aggregate network message stats\n\nAggregate stats to show zero or more of the following dimensions:\ndirection, network, connection, message type\n\nThe depth of the return object depends the number of dimensions\nspecified to be shown. MultiLevelStatsMap makes this possible, and\nconverts the object to a UniValue.\n\nCo-authored-by: Anthony Towns <aj@erisian.com.au>\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>",
      "committer": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2023-11-22T19:37:49Z"
      },
      "author": {
        "name": "Stacie",
        "email": "staciewaleyko@gmail.com",
        "date": "2023-04-14T18:04:20Z"
      },
      "sha": "22506994e01820a2c63464d51f4d9404131dc11e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGIzNTI4NTNiNzhlZWQyNDY5MmQxNDRjZWFiMjkzZjI4NDBlYjJhZGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b352853b78eed24692d144ceab293f2840eb2ade",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b352853b78eed24692d144ceab293f2840eb2ade",
      "tree": {
        "sha": "eb553595ebfce4ed680e36027c23c929086b67fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eb553595ebfce4ed680e36027c23c929086b67fe"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree eb553595ebfce4ed680e36027c23c929086b67fe\nparent 22506994e01820a2c63464d51f4d9404131dc11e\nauthor Stacie <staciewaleyko@gmail.com> 1681496454 -0400\ncommitter willcl-ark <will@256k1.dev> 1700681870 +0000\n\nrpc: create a new getnetmsgstats rpc\n\nIntroduce a new getnetmsgstats rpc that is able to return network\nmessage statistics arranged in a number of different ways (direction,\nnetwork, connection, message type). If no dimension types are\nspecified to be shown, return the totals.\n\nIncludes helper code to convert a string to a DimensionType enum.\n\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>\nCo-authored-by: Will Clark <will@256k1.dev>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEoAg2YPI1onAAzTyBzm7EmUXBfqYFAmVeWI4ACgkQzm7EmUXB\nfqbb9BAAvYtergsZCRkisjF2AvoEqe+wTAIG3rQCX9+a6kR8Yz2OTlcf98F6NuEX\n9jfDfaSG4LgKNhqE1SGKJHWFdgnlf6HnfUcZv/9mGPu0j5mxSJXY+sIogYP/fXv/\nn+0HoRMBitx9BauOpUmWadOD+Vzvc1isxVjt8IuzHpdZdyn7+q5JabQ3moreke/k\ncTaAzYQWz0MvKIHGapMTkVsPBQGXCoA4MjqfSXVYEjzd3d6sstRlBtNk5wks3MYx\n2guW4NF1eiEnL3Bna36KPJwEob0b9n6eN8yGTFbdrMtQoroe3FaBFRi5FXiPkEfz\n/pVKn6Tf2wFTzjVt3AshGUNyzm0iO4mnp6rtmCdOryVMOEXWo8rSTXjnPtsO0Hve\nnEKHMAp/LTu+V2bmSblqVKaUG5BBnXs2Gvgt3/TGf6o9/vkkQQBIov8VVVr6VrGE\nXv0TCbRna95x7U3T1/Frm38zuWMyJWTaDZVlMWARNucT6EfEhHPV2DNxYm/00LED\na+1At07xPHwZfFwdTdWUe4AtMVJeH9rWd0JAeMbUWIv4edkGie7pYPlSwTUim7og\n2y+cDEHhFkj2+gmhsF7k8QBscSlPOVtNThDk23q9D9gI8XBLMQhY8wcY0sIeWGHp\nzR8iyfgbJARPcwGR/4/M7guQ2SMhfNVSSBRgglh8BFWtu98cvXg=\n=wA1/\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/22506994e01820a2c63464d51f4d9404131dc11e",
          "sha": "22506994e01820a2c63464d51f4d9404131dc11e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/22506994e01820a2c63464d51f4d9404131dc11e"
        }
      ],
      "message": "rpc: create a new getnetmsgstats rpc\n\nIntroduce a new getnetmsgstats rpc that is able to return network\nmessage statistics arranged in a number of different ways (direction,\nnetwork, connection, message type). If no dimension types are\nspecified to be shown, return the totals.\n\nIncludes helper code to convert a string to a DimensionType enum.\n\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>\nCo-authored-by: Will Clark <will@256k1.dev>",
      "committer": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2023-11-22T19:37:50Z"
      },
      "author": {
        "name": "Stacie",
        "email": "staciewaleyko@gmail.com",
        "date": "2023-04-14T18:20:54Z"
      },
      "sha": "b352853b78eed24692d144ceab293f2840eb2ade"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDMzYjQ0ZjI2OTNjZDhiZWVmZGI0MjRkZDczY2M0NzI1MGQ4YjQ4NTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "tree": {
        "sha": "0e9e26da9b44830c94f8a4231e5debff52faa0c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0e9e26da9b44830c94f8a4231e5debff52faa0c8"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0e9e26da9b44830c94f8a4231e5debff52faa0c8\nparent b352853b78eed24692d144ceab293f2840eb2ade\nauthor Stacie <staciewaleyko@gmail.com> 1681496865 -0400\ncommitter willcl-ark <will@256k1.dev> 1700681871 +0000\n\ntest: add functional tests for getnetmsgstats rpc\n\nCo-authored-by: Will Clark <will@256k1.dev>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEoAg2YPI1onAAzTyBzm7EmUXBfqYFAmVeWI8ACgkQzm7EmUXB\nfqYRoQ/+PHpUfv0KPWL1UUoB4Ut5r7HcQ50DZBopfDs2IwC8kxz1117sbGJCgTHu\nCbwB9x1dzaEwxkdEP+chGr5BfuKqJxRszEPxLNriTMI8g0yyaU/f+jHJZComH1YD\nVFmNlGzC8NHG0647wW/ngmF0YiaAogYdupytKEdNDWRIkwz8Lq0j4zD/EjKJKYm4\nEtXVptaEvKQPIS1QO8EsWMkO4zD2TtBZbpgcVwwo+PS+ThImxm95ltsptlTipylR\nox/TbeLEydWcN6Gabegkyhk5LjKUoBR0wXRppesLZ89ntI+U8nWK5PM1sZnHEJcP\nnSpLy6gVg5a7t0jm6XS58fe7llbP4xoP7Fmlu0AwL8SgakSRHJMUEcdtrVuzLwoN\nKihccUaoJo0Q0LtV7EuGr73ZzqaE7S7XZVsqq+tx7uBN+/EunY0tQ53oKSfBAka4\nymrvCL3cGUX1Q72APvJNKGaRV6+lKTESm2pHuN6/6M8MJqhsxIEH0QXbXQoEJ2JW\ndhoNHjhj9hWCB3oXegHobv0mNF+x4ltTBnW6kh25ojsuj1Fa4FZQQ6zDDi3DMWJ2\nrylsuCUSaV9SZlZYVLTDFHBjtLOUgHCh3FTclzLRuwg70ecEdBTq+cGU8qrFqgQZ\nGGAZXs59eYkA3hcvBMkgzzS0LPMNVwU6vqeBu66rl9FomgjVyLE=\n=wQbm\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b352853b78eed24692d144ceab293f2840eb2ade",
          "sha": "b352853b78eed24692d144ceab293f2840eb2ade",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b352853b78eed24692d144ceab293f2840eb2ade"
        }
      ],
      "message": "test: add functional tests for getnetmsgstats rpc\n\nCo-authored-by: Will Clark <will@256k1.dev>",
      "committer": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2023-11-22T19:37:51Z"
      },
      "author": {
        "name": "Stacie",
        "email": "staciewaleyko@gmail.com",
        "date": "2023-04-14T18:27:45Z"
      },
      "sha": "33b44f2693cd8beefdb424dd73cc47250d8b4852"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11041749329,
      "node_id": "HRFPE_lADOABII5853lPwVzwAAAAKSI7lR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11041749329",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "commit_url": "https://api.github.com/repos/willcl-ark/bitcoin/commits/33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "created_at": "2023-11-22T22:30:20Z"
    },
    {
      "event": "commented",
      "id": 1823616924,
      "node_id": "IC_kwDOABII585ssi-c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1823616924",
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-22T23:16:25Z",
      "updated_at": "2023-11-22T23:16:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "yay!! thanks for picking this up. approach ACK ",
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1823616924",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28926"
    },
    {
      "event": "unlabeled",
      "id": 11041964823,
      "node_id": "UNLE_lADOABII5853lPwVzwAAAAKSJwMX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11041964823",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-22T23:20:37Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1824139761,
      "node_id": "IC_kwDOABII585suinx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1824139761",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-23T10:26:07Z",
      "updated_at": "2023-11-23T10:26:07Z",
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nThe RPC help is a bit abstract at the moment, e.g. \"Results may optionally be grouped so only certain dimensions are shown.\"\r\n\r\nIt might be enough to only show 1 `Result:` section in the help, e.g. just with two dimensions.\r\n\r\nIn the example section (and in the PR description), you could add a description, e.g.:\r\n\r\n* Get the total number of messages and bytes sent/received:  `bitcoin-cli getnetmsgstats`\r\n* Show number of messages and bytes per message type: `bitcoin-cli getnetmsgstats '[\"message_type\"]'`\r\n* Group statistics first by message type, then by connection type: `bitcoin-cli getnetmsgstats '[\"message_type\", \"connection_type\"]'`\r\n\r\nIt might be better to add a `totals` field to all groups, in every dimension. In that case I would also have the default `getnetmsgstats` return something a bit more interesting, e.g. the equivalent of `getnetmsgstats '[\"message_type\"]`.\r\n",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1824139761",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28926"
    },
    {
      "event": "commented",
      "id": 1825696764,
      "node_id": "IC_kwDOABII585s0ev8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1825696764",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-24T13:43:32Z",
      "updated_at": "2023-11-24T13:43:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "> It might be better to add a `totals` field to all groups, in every dimension. In that case I would also have the default `getnetmsgstats` return something a bit more interesting, e.g. the equivalent of `getnetmsgstats '[\"message_type\"]`.\r\n\r\nThat would be interesting. However it would further complicate this PR. The grouping/aggregating part I think is already a bit convoluted. Maybe it would make sense to drop it and print the full output without any grouping in this PR and do the grouping in another PR.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1825696764",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28926"
    },
    {
      "event": "commented",
      "id": 1829888361,
      "node_id": "IC_kwDOABII585tEeFp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1829888361",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-28T13:51:35Z",
      "updated_at": "2023-11-28T13:51:35Z",
      "author_association": "MEMBER",
      "body": "> drop it\r\n\r\nDo you mean dropping the default `total` field that this PR already has? That sounds good to me.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1829888361",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28926"
    },
    {
      "event": "commented",
      "id": 1831994509,
      "node_id": "IC_kwDOABII585tMgSN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1831994509",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-29T14:24:05Z",
      "updated_at": "2023-11-29T14:24:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "No, I meant to drop the possibility to aggregate or nest the result, i.e. remove the arguments of the RPC and always return the full JSON. I did not see (yet) that `total` field. I guess it would be cleaner without it.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1831994509",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28926"
    },
    {
      "event": "commented",
      "id": 1832324046,
      "node_id": "IC_kwDOABII585tNwvO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1832324046",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-29T16:50:51Z",
      "updated_at": "2023-11-29T16:50:51Z",
      "author_association": "MEMBER",
      "body": "> No, I meant to drop the possibility to aggregate or nest the result, i.e. remove the arguments of the RPC and always return the full JSON. I did not see (yet) that `total` field. I guess it would be cleaner without it.\r\n\r\nI think dropping the totals would probably make sense, as these can be totaled up using `jq` or similar tools pretty easily.\r\n\r\nThe only issue I see with not performing (optional) aggregation on the CLI, is that a node active on all networks could return a json object with a maximum of 2*4*6*35 = 1680 fields, making further processing a hard requirement for human consuption. Arguably this approach fits the unix philosophy better.\r\n\r\nI personally think it's a nice for human to be able to aggregate on the RPC in case tools like `jq` or `fx` aren't available or something, but as mentioned removing this ability would simplify one of the commits here.",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1832324046",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28926"
    },
    {
      "event": "commented",
      "id": 1832409258,
      "node_id": "IC_kwDOABII585tOFiq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1832409258",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-29T17:42:41Z",
      "updated_at": "2023-11-29T17:42:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I personally think it's a nice for human to be able to aggregate on the RPC in case tools like jq or fx aren't available\r\n\r\nI agree. Would be nice to have that finally eventually. I meant that if it is too complex for review or causes controversy then to get the simpler one first merged (without aggregation) and then in another PR do the aggregation. Maybe that would not be necessary. I am updating the WIP from https://github.com/bitcoin/bitcoin/compare/master...vasild:bitcoin:getnetmsgstats and will compare with this...",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1832409258",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28926"
    },
    {
      "event": "labeled",
      "id": 11128476688,
      "node_id": "LE_lADOABII5853lPwVzwAAAAKXTxQQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11128476688",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-02T08:02:55Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1765066743,
      "node_id": "PRR_kwDOABII585pNMf3",
      "url": null,
      "actor": null,
      "commit_id": "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nI have applied the suggestions below in [`vasild/getnetmsgstats`](https://github.com/vasild/bitcoin/commits/getnetmsgstats) plus some other simplifications. Feel free to pick them.\r\n\r\nThanks!",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#pullrequestreview-1765066743",
      "submitted_at": "2023-12-06T13:28:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926"
    },
    {
      "event": "reviewed",
      "id": 1807023183,
      "node_id": "PRR_kwDOABII585rtPxP",
      "url": null,
      "actor": null,
      "commit_id": "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK. We are using this (in an adjusted form with another dimension for txrelay) for analysing the traffic implications of  #28463, and it works great so far. ",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#pullrequestreview-1807023183",
      "submitted_at": "2024-01-05T23:12:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926"
    },
    {
      "event": "commented",
      "id": 1879740549,
      "node_id": "IC_kwDOABII585wCpCF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1879740549",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-06T16:07:56Z",
      "updated_at": "2024-01-06T16:07:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I have applied the suggestions below in [`vasild/getnetmsgstats`](https://github.com/vasild/bitcoin/commits/getnetmsgstats) plus some other simplifications. Feel free to pick them.\r\n\r\nShould I PR the above branch?",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1879740549",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28926"
    },
    {
      "event": "commented",
      "id": 1879765838,
      "node_id": "IC_kwDOABII585wCvNO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1879765838",
      "actor": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-06T17:45:34Z",
      "updated_at": "2024-01-06T17:45:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1879765838",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28926"
    },
    {
      "event": "commented",
      "id": 1908444454,
      "node_id": "IC_kwDOABII585xwI0m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1908444454",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T16:08:42Z",
      "updated_at": "2024-01-24T16:08:42Z",
      "author_association": "MEMBER",
      "body": "> > I have applied the suggestions below in [`vasild/getnetmsgstats`](https://github.com/vasild/bitcoin/commits/getnetmsgstats) plus some other simplifications. Feel free to pick them.\r\n> \r\n> Should I PR the above branch?\r\n\r\nHey Vasil, I think this makes most sense, especially seeing as you've co-authored/written most of the changes here, and your improvements on the new branch! \r\n\r\nI've been testing your branch out today and am a fan of the simplicity vs this changeset. I did kind of prefer the \"aggregation\" RPC behaviour in this branch, even though it doesn't really aggregate, more accurately it \"groups by\".\r\n\r\nIn any case, your new branch does actually aggregate results, and the same effect can be easily achieved. e.g. to produce output like:\r\n\r\n```\r\n{\r\n  \"wtxidrelay\": {\r\n    \"bytes\": 1146,\r\n    \"count\": 47\r\n  },\r\n  \"headers\": {\r\n    \"bytes\": 10846,\r\n    \"count\": 55\r\n  },\r\n  \"tx\": {\r\n    \"bytes\": 511341,\r\n    \"count\": 801\r\n  },\r\n  \"ping\": {\r\n    \"bytes\": 1786,\r\n    \"count\": 56\r\n  }\r\n}\r\n```\r\n\r\nIn this branch we would do: `.src/bitcoin-cli getnetmsgstats '[\"message_type\"]'`, whereas on your new fork (with actual aggregation) this requires the \"inverse\": `./src/bitcoin-cli getnetmsgstats '[\"direction\", \"network\", \"connection_type\"]'`.\r\n\r\nYour comments [here](https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1415682660) did get me thinking whether we could use `mapRecvBytesPerMsgType` to return the netmsgstats, or conversely use data from `net_stats` to return stats to the `getpeerinfo` RPC and avoid counting the same message twice everywhere. But I'm not convinced that the changes that would be needed to do that would be worth it.",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1908444454",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28926"
    },
    {
      "event": "commented",
      "id": 1937043749,
      "node_id": "IC_kwDOABII585zdPEl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937043749",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-10T15:27:15Z",
      "updated_at": "2024-02-10T15:27:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "> > Should I PR the above branch?\r\n\r\n> Hey Vasil, I think this makes most sense ...\r\n\r\nI am on it!\r\n\r\n> Your comments https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1415682660 did get me thinking whether we could use mapRecvBytesPerMsgType to return the netmsgstats, or conversely use data from net_stats to return stats to the getpeerinfo RPC and avoid counting the same message twice everywhere. But I'm not convinced that the changes that would be needed to do that would be worth it.\r\n\r\nHmm,\r\n* If we use `CNode::mapRecvBytesPerMsgType` to create the global netmsgstats report, then we still need to store the data somewhere when the `CNode` disconnects. So we need another storage anyway.\r\n* If we use the new global `net_stats` to create the per-peer report, then we have to add another dimension to it - \"peer id\". Then query only for a given peer for `getpeerinfo` and always aggregate by \"peer id\" (hide it) from the new totals report from `getnetmsgstats`. That seems like it may be a good idea? But what when a peer disconnects? We don't want to bloat `net_stats` with individual info for disconnected peers. So then we would have to have one dummy \"peer id\", e.g. -1 and sum disconnected peers' stats into that one. That way `net_stats` cannot be an array anymore because the size of the \"peer id\" dimension is not known at compile time. What do others think about this?",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1937043749",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28926"
    },
    {
      "event": "commented",
      "id": 1937045521,
      "node_id": "IC_kwDOABII585zdPgR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937045521",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-10T15:35:55Z",
      "updated_at": "2024-02-10T15:35:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "> ... this requires the \"inverse\" ...\r\n\r\nHa, I did not realize this before! I am fine either way. Also I am not sure what would be the best name of the RPC parameter, e.g. `bitcoin-cli -named getnetmsgstats whatname='[...]'`. Lets do a poll below (use :+1:).",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1937045521",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28926"
    },
    {
      "event": "commented",
      "id": 1937045585,
      "node_id": "IC_kwDOABII585zdPhR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937045585",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-10T15:36:15Z",
      "updated_at": "2024-02-10T15:36:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "To produce the output in https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1908444454 it is better to use `bitcoin-cli getnetmsgstats '[\"message_type\"]'`. How to name the RPC parameter?\r\n",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1937045585",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28926"
    },
    {
      "event": "commented",
      "id": 1937045606,
      "node_id": "IC_kwDOABII585zdPhm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937045606",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-10T15:36:24Z",
      "updated_at": "2024-02-10T15:36:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "To produce the output in https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1908444454 it is better to use `bitcoin-cli getnetmsgstats '[\"direction\", \"network\", \"connection_type\"]'`. How to name the RPC parameter?\r\n",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1937045606",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28926"
    },
    {
      "event": "commented",
      "id": 1937492567,
      "node_id": "IC_kwDOABII585ze8pX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937492567",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T09:35:04Z",
      "updated_at": "2024-02-11T09:35:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Should I PR the above branch?\r\n\r\nOpened https://github.com/bitcoin/bitcoin/pull/29418",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1937492567",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28926"
    },
    {
      "event": "commented",
      "id": 1937844734,
      "node_id": "IC_kwDOABII585zgSn-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937844734",
      "actor": {
        "login": "satsie",
        "id": 1823216,
        "node_id": "MDQ6VXNlcjE4MjMyMTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1823216?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/satsie",
        "html_url": "https://github.com/satsie",
        "followers_url": "https://api.github.com/users/satsie/followers",
        "following_url": "https://api.github.com/users/satsie/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/satsie/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/satsie/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/satsie/subscriptions",
        "organizations_url": "https://api.github.com/users/satsie/orgs",
        "repos_url": "https://api.github.com/users/satsie/repos",
        "events_url": "https://api.github.com/users/satsie/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/satsie/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T19:22:25Z",
      "updated_at": "2024-02-11T19:22:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "RE:\r\n\r\n>>  ... this requires the \"inverse\" ...\r\n> \r\n> Ha, I did not realize this before! I am fine either way. \r\n\r\nI voted for `bitcoin-cli getnetmsgstats '[\"message_type\"]'` because as a node operator it's simpler to remember the dimensions I want (i.e. message) instead of knowing the RPC well enough to list every dimension I don't want (i.e. direction, network, connection type). But of course anyone using an RPC should read the docs :smile: ",
      "user": {
        "login": "satsie",
        "id": 1823216,
        "node_id": "MDQ6VXNlcjE4MjMyMTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1823216?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/satsie",
        "html_url": "https://github.com/satsie",
        "followers_url": "https://api.github.com/users/satsie/followers",
        "following_url": "https://api.github.com/users/satsie/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/satsie/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/satsie/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/satsie/subscriptions",
        "organizations_url": "https://api.github.com/users/satsie/orgs",
        "repos_url": "https://api.github.com/users/satsie/repos",
        "events_url": "https://api.github.com/users/satsie/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/satsie/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1937844734",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28926"
    },
    {
      "event": "closed",
      "id": 11771305215,
      "node_id": "CE_lADOABII5853lPwVzwAAAAK9n9z_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11771305215",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-12T08:26:29Z"
    },
    {
      "event": "commented",
      "id": 1938228531,
      "node_id": "IC_kwDOABII585zhwUz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1938228531",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-12T08:30:17Z",
      "updated_at": "2024-02-12T08:30:17Z",
      "author_association": "MEMBER",
      "body": "> * But what when a peer disconnects? We don't want to bloat `net_stats` with individual info for disconnected peers.\r\n\r\nYes, and in fact if a peer repeatedly connected and disconnected we would end up with unbounded growth of net_stats size, which would not be good... Let's shelve this thought for now.\r\n\r\n> To produce the output in https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1908444454 it is better to use bitcoin-cli getnetmsgstats '[\"message_type\"]'. How to name the RPC parameter?\r\n\r\nIn a previous revision, I had renamed the RPC parameter `group_by` to address this, as I felt it made sense.\r\n\r\nClosed in favour of #29418 ",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1938228531",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28926"
    },
    {
      "event": "locked",
      "id": 16259631826,
      "node_id": "LOE_lADOABII5853lPwVzwAAAAPJJkrS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16259631826",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-11T07:31:11Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402168125",
      "pull_request_review_id": 1744577141,
      "id": 1402168125,
      "node_id": "PRRC_kwDOABII585Tk2M9",
      "diff_hunk": "@@ -90,6 +92,10 @@ const static std::vector<std::string> g_all_net_message_types{\n     NetMsgType::SENDTXRCNCL,\n };\n \n+static_assert(NUM_NET_MESSAGE_TYPES == sizeof(allNetMessageTypes) / sizeof(allNetMessageTypes[0]), \"Please update NUM_NET_MESSAGE_TYPES\");\n+\n+const static std::vector<std::string> allNetMessageTypesVec(std::begin(allNetMessageTypes), std::end(allNetMessageTypes));",
      "path": "src/protocol.cpp",
      "position": 20,
      "original_position": 20,
      "commit_id": "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "original_commit_id": "0341129ed1023576f04786d863a74682b187fc06",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "All these plus the `NUM_NET_MESSAGE_TYPES` constant can be avoided if the list of all message types is turned into a `std::array`. Consider this:\r\n\r\n<details>\r\n<summary>[patch] make the list of known message types a compile time constant</summary>\r\n\r\n```diff\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex a2f80cbcf7..133abae117 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -3670,13 +3670,13 @@ CNode::CNode(NodeId idIn,\r\n       nLocalHostNonce{nLocalHostNonceIn},\r\n       m_recv_flood_size{node_opts.recv_flood_size},\r\n       m_i2p_sam_session{std::move(node_opts.i2p_sam_session)}\r\n {\r\n     if (inbound_onion) assert(conn_type_in == ConnectionType::INBOUND);\r\n \r\n-    for (const std::string &msg : getAllNetMessageTypes())\r\n+    for (const auto& msg : g_all_net_message_types)\r\n         mapRecvBytesPerMsgType[msg] = 0;\r\n     mapRecvBytesPerMsgType[NET_MESSAGE_TYPE_OTHER] = 0;\r\n \r\n     if (fLogIPs) {\r\n         LogPrint(BCLog::NET, \"Added connection to %s peer=%d\\n\", m_addr_name, id);\r\n     } else {\r\ndiff --git a/src/protocol.cpp b/src/protocol.cpp\r\nindex 27a0a2ffc1..0b22cc47aa 100644\r\n--- a/src/protocol.cpp\r\n+++ b/src/protocol.cpp\r\n@@ -46,53 +46,12 @@ const char* CFHEADERS = \"cfheaders\";\r\n const char* GETCFCHECKPT = \"getcfcheckpt\";\r\n const char* CFCHECKPT = \"cfcheckpt\";\r\n const char* WTXIDRELAY = \"wtxidrelay\";\r\n const char* SENDTXRCNCL = \"sendtxrcncl\";\r\n } // namespace NetMsgType\r\n \r\n-/** All known message types. Keep this in the same order as the list of\r\n- * messages above and in protocol.h.\r\n- */\r\n-const static std::vector<std::string> g_all_net_message_types{\r\n-    NetMsgType::VERSION,\r\n-    NetMsgType::VERACK,\r\n-    NetMsgType::ADDR,\r\n-    NetMsgType::ADDRV2,\r\n-    NetMsgType::SENDADDRV2,\r\n-    NetMsgType::INV,\r\n-    NetMsgType::GETDATA,\r\n-    NetMsgType::MERKLEBLOCK,\r\n-    NetMsgType::GETBLOCKS,\r\n-    NetMsgType::GETHEADERS,\r\n-    NetMsgType::TX,\r\n-    NetMsgType::HEADERS,\r\n-    NetMsgType::BLOCK,\r\n-    NetMsgType::GETADDR,\r\n-    NetMsgType::MEMPOOL,\r\n-    NetMsgType::PING,\r\n-    NetMsgType::PONG,\r\n-    NetMsgType::NOTFOUND,\r\n-    NetMsgType::FILTERLOAD,\r\n-    NetMsgType::FILTERADD,\r\n-    NetMsgType::FILTERCLEAR,\r\n-    NetMsgType::SENDHEADERS,\r\n-    NetMsgType::FEEFILTER,\r\n-    NetMsgType::SENDCMPCT,\r\n-    NetMsgType::CMPCTBLOCK,\r\n-    NetMsgType::GETBLOCKTXN,\r\n-    NetMsgType::BLOCKTXN,\r\n-    NetMsgType::GETCFILTERS,\r\n-    NetMsgType::CFILTER,\r\n-    NetMsgType::GETCFHEADERS,\r\n-    NetMsgType::CFHEADERS,\r\n-    NetMsgType::GETCFCHECKPT,\r\n-    NetMsgType::CFCHECKPT,\r\n-    NetMsgType::WTXIDRELAY,\r\n-    NetMsgType::SENDTXRCNCL,\r\n-};\r\n-\r\n CMessageHeader::CMessageHeader(const MessageStartChars& pchMessageStartIn, const char* pszCommand, unsigned int nMessageSizeIn)\r\n     : pchMessageStart{pchMessageStartIn}\r\n {\r\n     // Copy the command name\r\n     size_t i = 0;\r\n     for (; i < COMMAND_SIZE && pszCommand[i] != 0; ++i) pchCommand[i] = pszCommand[i];\r\n@@ -175,17 +134,12 @@ std::string CInv::ToString() const\r\n         return strprintf(\"%s %s\", GetCommand(), hash.ToString());\r\n     } catch(const std::out_of_range &) {\r\n         return strprintf(\"0x%08x %s\", type, hash.ToString());\r\n     }\r\n }\r\n \r\n-const std::vector<std::string> &getAllNetMessageTypes()\r\n-{\r\n-    return g_all_net_message_types;\r\n-}\r\n-\r\n /**\r\n  * Convert a service flag (NODE_*) to a human readable string.\r\n  * It supports unknown service flags which will be returned as \"UNKNOWN[...]\".\r\n  * @param[in] bit the service flag is calculated as (1 << bit)\r\n  */\r\n static std::string serviceFlagToStr(size_t bit)\r\ndiff --git a/src/protocol.h b/src/protocol.h\r\nindex e405253632..2a6b85dea5 100644\r\n--- a/src/protocol.h\r\n+++ b/src/protocol.h\r\n@@ -264,14 +264,50 @@ extern const char* WTXIDRELAY;\r\n  * The salt is used to compute short txids needed for efficient\r\n  * txreconciliation, as described by BIP 330.\r\n  */\r\n extern const char* SENDTXRCNCL;\r\n }; // namespace NetMsgType\r\n \r\n-/* Get a vector of all valid message types (see above) */\r\n-const std::vector<std::string>& getAllNetMessageTypes();\r\n+/** All known message types (see above). Keep this in the same order as the list of messages above. */\r\n+static const std::array g_all_net_message_types{\r\n+    NetMsgType::VERSION,\r\n+    NetMsgType::VERACK,\r\n+    NetMsgType::ADDR,\r\n+    NetMsgType::ADDRV2,\r\n+    NetMsgType::SENDADDRV2,\r\n+    NetMsgType::INV,\r\n+    NetMsgType::GETDATA,\r\n+    NetMsgType::MERKLEBLOCK,\r\n+    NetMsgType::GETBLOCKS,\r\n+    NetMsgType::GETHEADERS,\r\n+    NetMsgType::TX,\r\n+    NetMsgType::HEADERS,\r\n+    NetMsgType::BLOCK,\r\n+    NetMsgType::GETADDR,\r\n+    NetMsgType::MEMPOOL,\r\n+    NetMsgType::PING,\r\n+    NetMsgType::PONG,\r\n+    NetMsgType::NOTFOUND,\r\n+    NetMsgType::FILTERLOAD,\r\n+    NetMsgType::FILTERADD,\r\n+    NetMsgType::FILTERCLEAR,\r\n+    NetMsgType::SENDHEADERS,\r\n+    NetMsgType::FEEFILTER,\r\n+    NetMsgType::SENDCMPCT,\r\n+    NetMsgType::CMPCTBLOCK,\r\n+    NetMsgType::GETBLOCKTXN,\r\n+    NetMsgType::BLOCKTXN,\r\n+    NetMsgType::GETCFILTERS,\r\n+    NetMsgType::CFILTER,\r\n+    NetMsgType::GETCFHEADERS,\r\n+    NetMsgType::CFHEADERS,\r\n+    NetMsgType::GETCFCHECKPT,\r\n+    NetMsgType::CFCHECKPT,\r\n+    NetMsgType::WTXIDRELAY,\r\n+    NetMsgType::SENDTXRCNCL,\r\n+};\r\n \r\n /** nServices flags */\r\n enum ServiceFlags : uint64_t {\r\n     // NOTE: When adding here, be sure to update serviceFlagToStr too\r\n     // Nothing\r\n     NODE_NONE = 0,\r\ndiff --git a/src/test/fuzz/p2p_transport_serialization.cpp b/src/test/fuzz/p2p_transport_serialization.cpp\r\nindex 21d8dab536..853661b4d4 100644\r\n--- a/src/test/fuzz/p2p_transport_serialization.cpp\r\n+++ b/src/test/fuzz/p2p_transport_serialization.cpp\r\n@@ -18,19 +18,18 @@\r\n #include <limits>\r\n #include <optional>\r\n #include <vector>\r\n \r\n namespace {\r\n \r\n-std::vector<std::string> g_all_messages;\r\n+auto g_all_messages = g_all_net_message_types;\r\n \r\n void initialize_p2p_transport_serialization()\r\n {\r\n     ECC_Start();\r\n     SelectParams(ChainType::REGTEST);\r\n-    g_all_messages = getAllNetMessageTypes();\r\n     std::sort(g_all_messages.begin(), g_all_messages.end());\r\n }\r\n \r\n } // namespace\r\n \r\n FUZZ_TARGET(p2p_transport_serialization, .init = initialize_p2p_transport_serialization)\r\n@@ -147,13 +146,13 @@ void SimulationTest(Transport& initiator, Transport& responder, R& rng, FuzzedDa\r\n                 if (c < ' ' || c > 0x7E) break;\r\n                 ret += c;\r\n             }\r\n             return ret;\r\n         } else {\r\n             // Otherwise, use it as index into the list of known messages.\r\n-            return g_all_messages[v % g_all_messages.size()];\r\n+            return std::string{g_all_messages[v % g_all_messages.size()]};\r\n         }\r\n     };\r\n \r\n     // Function to construct a CSerializedNetMsg to send.\r\n     auto make_msg_fn = [&](bool first) {\r\n         CSerializedNetMsg msg;\r\ndiff --git a/src/test/fuzz/process_message.cpp b/src/test/fuzz/process_message.cpp\r\nindex d38d1bb40e..24c711f421 100644\r\n--- a/src/test/fuzz/process_message.cpp\r\n+++ b/src/test/fuzz/process_message.cpp\r\n@@ -42,13 +42,13 @@ std::string_view LIMIT_TO_MESSAGE_TYPE{};\r\n } // namespace\r\n \r\n void initialize_process_message()\r\n {\r\n     if (const auto val{std::getenv(\"LIMIT_TO_MESSAGE_TYPE\")}) {\r\n         LIMIT_TO_MESSAGE_TYPE = val;\r\n-        Assert(std::count(getAllNetMessageTypes().begin(), getAllNetMessageTypes().end(), LIMIT_TO_MESSAGE_TYPE)); // Unknown message type passed\r\n+        Assert(std::count(g_all_net_message_types.begin(), g_all_net_message_types.end(), LIMIT_TO_MESSAGE_TYPE)); // Unknown message type passed\r\n     }\r\n \r\n     static const auto testing_setup = MakeNoLogFileContext<const TestingSetup>(\r\n             /*chain_type=*/ChainType::REGTEST,\r\n             /*extra_args=*/{\"-txreconciliation\"});\r\n     g_setup = testing_setup.get();\r\n```\r\n</details>",
      "created_at": "2023-11-22T14:40:22Z",
      "updated_at": "2023-11-22T14:45:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1402168125",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402168125"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926"
        }
      },
      "start_line": 95,
      "original_start_line": 95,
      "start_side": "RIGHT",
      "line": 97,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402731108",
      "pull_request_review_id": 1745412247,
      "id": 1402731108,
      "node_id": "PRRC_kwDOABII585Tm_pk",
      "diff_hunk": "@@ -90,6 +92,10 @@ const static std::vector<std::string> g_all_net_message_types{\n     NetMsgType::SENDTXRCNCL,\n };\n \n+static_assert(NUM_NET_MESSAGE_TYPES == sizeof(allNetMessageTypes) / sizeof(allNetMessageTypes[0]), \"Please update NUM_NET_MESSAGE_TYPES\");\n+\n+const static std::vector<std::string> allNetMessageTypesVec(std::begin(allNetMessageTypes), std::end(allNetMessageTypes));",
      "path": "src/protocol.cpp",
      "position": 20,
      "original_position": 20,
      "commit_id": "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "original_commit_id": "0341129ed1023576f04786d863a74682b187fc06",
      "in_reply_to_id": 1402168125,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks for the idea Vasil.\r\n\r\nI implemented it in this [tag](https://github.com/bitcoin/bitcoin/compare/master...willcl-ark:bitcoin:netmsgstats-vd-array) to see what it would look like.\r\n\r\nOverall, I prefer the design, but in writing the commit message for the change I began to feel unsure that it _actually_ results in `g_all_net_message_types` being a compile-time constant.  IIUC the array will reference a `const char*`. The pointer addresses can only be allocated at runtime and in turn `g_all_net_message_types` will be static at runtime but not at compile time?\r\n\r\nI'm not sure I see an easy way to have this be a compile time constant, if my understanding above is correct.",
      "created_at": "2023-11-22T21:30:30Z",
      "updated_at": "2023-11-22T21:30:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1402731108",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402731108"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926"
        }
      },
      "start_line": 95,
      "original_start_line": 95,
      "start_side": "RIGHT",
      "line": 97,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402733334",
      "pull_request_review_id": 1745415800,
      "id": 1402733334,
      "node_id": "PRRC_kwDOABII585TnAMW",
      "diff_hunk": "@@ -90,6 +92,10 @@ const static std::vector<std::string> g_all_net_message_types{\n     NetMsgType::SENDTXRCNCL,\n };\n \n+static_assert(NUM_NET_MESSAGE_TYPES == sizeof(allNetMessageTypes) / sizeof(allNetMessageTypes[0]), \"Please update NUM_NET_MESSAGE_TYPES\");\n+\n+const static std::vector<std::string> allNetMessageTypesVec(std::begin(allNetMessageTypes), std::end(allNetMessageTypes));",
      "path": "src/protocol.cpp",
      "position": 20,
      "original_position": 20,
      "commit_id": "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "original_commit_id": "0341129ed1023576f04786d863a74682b187fc06",
      "in_reply_to_id": 1402168125,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Make it `constexpr` instead of `const`. That'll force the compiler to evaluate the array at compile-time (or give an error if that's not possible).",
      "created_at": "2023-11-22T21:33:44Z",
      "updated_at": "2023-11-22T21:33:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1402733334",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402733334"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926"
        }
      },
      "start_line": 95,
      "original_start_line": 95,
      "start_side": "RIGHT",
      "line": 97,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402735834",
      "pull_request_review_id": 1745419345,
      "id": 1402735834,
      "node_id": "PRRC_kwDOABII585TnAza",
      "diff_hunk": "@@ -90,6 +92,10 @@ const static std::vector<std::string> g_all_net_message_types{\n     NetMsgType::SENDTXRCNCL,\n };\n \n+static_assert(NUM_NET_MESSAGE_TYPES == sizeof(allNetMessageTypes) / sizeof(allNetMessageTypes[0]), \"Please update NUM_NET_MESSAGE_TYPES\");\n+\n+const static std::vector<std::string> allNetMessageTypesVec(std::begin(allNetMessageTypes), std::end(allNetMessageTypes));",
      "path": "src/protocol.cpp",
      "position": 20,
      "original_position": 20,
      "commit_id": "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "original_commit_id": "0341129ed1023576f04786d863a74682b187fc06",
      "in_reply_to_id": 1402168125,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, I forgot to mention I had tried that. It results in something like this:\r\n\r\n```log\r\n$ bear -- make\r\nMaking all in src\r\nmake[1]: Entering directory '/home/will/src/bitcoin/src'\r\nmake[2]: Entering directory '/home/will/src/bitcoin/src'\r\nmake[3]: Entering directory '/home/will/src/bitcoin'\r\nmake[3]: Leaving directory '/home/will/src/bitcoin'\r\n  CXX      bitcoind-bitcoind.o\r\nIn file included from ./netstats.h:10,\r\n                 from ./net.h:22,\r\n                 from ./interfaces/node.h:10,\r\n                 from ./interfaces/init.h:10,\r\n                 from bitcoind.cpp:19:\r\n./protocol.h:276:65: error: the type ‘const std::array<std::__cxx11::basic_string<char>, 35>’ of ‘constexpr’ variable ‘g_all_net_message_types’ is not literal\r\n  276 | static constexpr std::array<std::string, NUM_NET_MESSAGE_TYPES> g_all_net_message_types{\r\n      |                                                                 ^~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from ./uint256.h:13,\r\n                 from ./consensus/params.h:9,\r\n                 from ./kernel/chainparams.h:9,\r\n                 from ./chainparams.h:9,\r\n                 from bitcoind.cpp:10:\r\n/usr/include/c++/12/array:99:12: note: ‘std::array<std::__cxx11::basic_string<char>, 35>’ is not literal because:\r\n   99 |     struct array\r\n      |            ^~~~~\r\n/usr/include/c++/12/array:99:12: note:   ‘std::array<std::__cxx11::basic_string<char>, 35>’ has a non-trivial destructor\r\nmake[2]: *** [Makefile:16350: bitcoind-bitcoind.o] Error 1\r\nmake[2]: Leaving directory '/home/will/src/bitcoin/src'\r\nmake[1]: *** [Makefile:20245: all-recursive] Error 1\r\nmake[1]: Leaving directory '/home/will/src/bitcoin/src'\r\nmake: *** [Makefile:813: all-recursive] Error 1\r\n```",
      "created_at": "2023-11-22T21:37:36Z",
      "updated_at": "2023-11-22T21:37:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1402735834",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402735834"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926"
        }
      },
      "start_line": 95,
      "original_start_line": 95,
      "start_side": "RIGHT",
      "line": 97,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402736925",
      "pull_request_review_id": 1745420825,
      "id": 1402736925,
      "node_id": "PRRC_kwDOABII585TnBEd",
      "diff_hunk": "@@ -90,6 +92,10 @@ const static std::vector<std::string> g_all_net_message_types{\n     NetMsgType::SENDTXRCNCL,\n };\n \n+static_assert(NUM_NET_MESSAGE_TYPES == sizeof(allNetMessageTypes) / sizeof(allNetMessageTypes[0]), \"Please update NUM_NET_MESSAGE_TYPES\");\n+\n+const static std::vector<std::string> allNetMessageTypesVec(std::begin(allNetMessageTypes), std::end(allNetMessageTypes));",
      "path": "src/protocol.cpp",
      "position": 20,
      "original_position": 20,
      "commit_id": "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "original_commit_id": "0341129ed1023576f04786d863a74682b187fc06",
      "in_reply_to_id": 1402168125,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Oh, yes, you cannot have `constexpr` std::string until C++20.",
      "created_at": "2023-11-22T21:39:21Z",
      "updated_at": "2023-11-22T21:39:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1402736925",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402736925"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926"
        }
      },
      "start_line": 95,
      "original_start_line": 95,
      "start_side": "RIGHT",
      "line": 97,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1404355662",
      "pull_request_review_id": 1747954108,
      "id": 1404355662,
      "node_id": "PRRC_kwDOABII585TtMRO",
      "diff_hunk": "@@ -90,6 +92,10 @@ const static std::vector<std::string> g_all_net_message_types{\n     NetMsgType::SENDTXRCNCL,\n };\n \n+static_assert(NUM_NET_MESSAGE_TYPES == sizeof(allNetMessageTypes) / sizeof(allNetMessageTypes[0]), \"Please update NUM_NET_MESSAGE_TYPES\");\n+\n+const static std::vector<std::string> allNetMessageTypesVec(std::begin(allNetMessageTypes), std::end(allNetMessageTypes));",
      "path": "src/protocol.cpp",
      "position": 20,
      "original_position": 20,
      "commit_id": "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "original_commit_id": "0341129ed1023576f04786d863a74682b187fc06",
      "in_reply_to_id": 1402168125,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`const std::array a{x, y, z};` - at compile time the compiler knows the size of the array. `a.size()` can be used to define the size of other arrays, e.g. `std::array<int, a.size()> anoher;`. This is what matters. Whether the contents of the array is a compile time constant (the pointers), I am not sure.",
      "created_at": "2023-11-24T13:28:35Z",
      "updated_at": "2023-11-24T13:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1404355662",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1404355662"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926"
        }
      },
      "start_line": 95,
      "original_start_line": 95,
      "start_side": "RIGHT",
      "line": 97,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415601693",
      "pull_request_review_id": 1765066743,
      "id": 1415601693,
      "node_id": "PRRC_kwDOABII585UYF4d",
      "diff_hunk": "@@ -267,9 +267,20 @@ extern const char* WTXIDRELAY;\n extern const char* SENDTXRCNCL;\n }; // namespace NetMsgType\n \n+extern const std::string NET_MESSAGE_TYPE_OTHER;",
      "path": "src/protocol.h",
      "position": 4,
      "original_position": 4,
      "commit_id": "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "original_commit_id": "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Commit d3b34b82af33909eaeffe8d596a6c70951dc844c `net: move NET_MESSAGE_TYPE_OTHER` is not needed and can be dropped if `messageTypeFromIndex()` and `messageTypeToIndex()` standalone functions are made private methods in the `NetStats` class and their usage limited to within the class. That is desirable anyway because they are only relevant for an index in an array that is defined in a particular way and is (should be) private within `NetStats`.",
      "created_at": "2023-12-05T13:21:49Z",
      "updated_at": "2023-12-06T13:28:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1415601693",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415601693"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 270,
      "original_line": 270,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415625631",
      "pull_request_review_id": 1765066743,
      "id": 1415625631,
      "node_id": "PRRC_kwDOABII585UYLuf",
      "diff_hunk": "@@ -0,0 +1,102 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_NETSTATS_H\n+#define BITCOIN_NETSTATS_H\n+\n+#include <node/connection_types.h>\n+#include <protocol.h>\n+\n+#include <array>\n+#include <atomic>\n+#include <cstddef>\n+\n+/**\n+ * Placeholder for total network traffic. Split by direction, network, connection\n+ * type and message type (byte and message counts).\n+ */\n+class NetStats\n+{\n+public:\n+    struct MsgStat {\n+        std::atomic_uint64_t byte_count; //!< Number of bytes transferred.\n+        std::atomic_uint64_t msg_count;  //!< Number of messages transferred.\n+\n+        MsgStat() = default;\n+\n+        MsgStat(const MsgStat& x) : byte_count{x.byte_count.load()}, msg_count{x.msg_count.load()} {}\n+\n+        MsgStat(std::atomic_uint64_t x, std::atomic_uint64_t y) : byte_count{x.load()}, msg_count{y.load()} {}\n+    };\n+\n+    enum class Direction { SENT,\n+                           RECV };\n+\n+    /// Number of elements in `Direction`.\n+    static constexpr size_t NUM_DIRECTIONS{2};\n+\n+    // Innermost array\n+    using MsgStatArray = std::array<MsgStat, NUM_NET_MESSAGE_TYPES + 1>; // Add 1 for \"Other\" message type\n+\n+    // Second innermost array\n+    using ConnectionTypeArray = std::array<MsgStatArray, NUM_CONNECTION_TYPES>;\n+\n+    // Third innermost array\n+    using NetMaxArray = std::array<ConnectionTypeArray, NET_MAX>;\n+\n+    // Outer array\n+    using MultiDimensionalStats = std::array<NetMaxArray, NUM_DIRECTIONS>;\n+\n+    MultiDimensionalStats m_data;\n+\n+    void Init()\n+    {\n+        for (std::size_t direction_index = 0; direction_index < NUM_DIRECTIONS; direction_index++) {\n+            for (int network_index = 0; network_index < NET_MAX; network_index++) {\n+                for (std::size_t connection_index = 0; connection_index < NUM_CONNECTION_TYPES; connection_index++) {\n+                    for (std::size_t message_index = 0; message_index < NUM_NET_MESSAGE_TYPES + 1; message_index++) {\n+                        // +1 for the \"other\" message type\n+                        auto& stat = m_data\n+                            .at(direction_index)\n+                            .at(network_index)\n+                            .at(connection_index)\n+                            .at(message_index);\n+\n+                        stat.msg_count = 0;\n+                        stat.byte_count = 0;\n+                    }\n+                }\n+            }\n+        }\n+    }",
      "path": "src/netstats.h",
      "position": 73,
      "original_position": 73,
      "commit_id": "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "original_commit_id": "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This method is not needed. It is simpler and suffices to explicitly initialize the members of `MsgStat` to zero:\r\n\r\n```cpp\r\n        std::atomic_uint64_t byte_count{0}; //!< Number of bytes transferred.\r\n        std::atomic_uint64_t msg_count{0};  //!< Number of messages transferred.\r\n```",
      "created_at": "2023-12-05T13:36:48Z",
      "updated_at": "2023-12-06T13:28:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1415625631",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415625631"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926"
        }
      },
      "start_line": 54,
      "original_start_line": 54,
      "start_side": "RIGHT",
      "line": 73,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415634706",
      "pull_request_review_id": 1765066743,
      "id": 1415634706,
      "node_id": "PRRC_kwDOABII585UYN8S",
      "diff_hunk": "@@ -0,0 +1,102 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_NETSTATS_H\n+#define BITCOIN_NETSTATS_H\n+\n+#include <node/connection_types.h>\n+#include <protocol.h>\n+\n+#include <array>\n+#include <atomic>\n+#include <cstddef>\n+\n+/**\n+ * Placeholder for total network traffic. Split by direction, network, connection\n+ * type and message type (byte and message counts).\n+ */\n+class NetStats\n+{\n+public:\n+    struct MsgStat {\n+        std::atomic_uint64_t byte_count; //!< Number of bytes transferred.\n+        std::atomic_uint64_t msg_count;  //!< Number of messages transferred.\n+\n+        MsgStat() = default;\n+\n+        MsgStat(const MsgStat& x) : byte_count{x.byte_count.load()}, msg_count{x.msg_count.load()} {}\n+\n+        MsgStat(std::atomic_uint64_t x, std::atomic_uint64_t y) : byte_count{x.load()}, msg_count{y.load()} {}\n+    };\n+\n+    enum class Direction { SENT,\n+                           RECV };\n+\n+    /// Number of elements in `Direction`.\n+    static constexpr size_t NUM_DIRECTIONS{2};\n+\n+    // Innermost array\n+    using MsgStatArray = std::array<MsgStat, NUM_NET_MESSAGE_TYPES + 1>; // Add 1 for \"Other\" message type\n+\n+    // Second innermost array\n+    using ConnectionTypeArray = std::array<MsgStatArray, NUM_CONNECTION_TYPES>;\n+\n+    // Third innermost array\n+    using NetMaxArray = std::array<ConnectionTypeArray, NET_MAX>;\n+\n+    // Outer array\n+    using MultiDimensionalStats = std::array<NetMaxArray, NUM_DIRECTIONS>;\n+\n+    MultiDimensionalStats m_data;\n+\n+    void Init()\n+    {\n+        for (std::size_t direction_index = 0; direction_index < NUM_DIRECTIONS; direction_index++) {\n+            for (int network_index = 0; network_index < NET_MAX; network_index++) {\n+                for (std::size_t connection_index = 0; connection_index < NUM_CONNECTION_TYPES; connection_index++) {\n+                    for (std::size_t message_index = 0; message_index < NUM_NET_MESSAGE_TYPES + 1; message_index++) {\n+                        // +1 for the \"other\" message type\n+                        auto& stat = m_data\n+                            .at(direction_index)\n+                            .at(network_index)\n+                            .at(connection_index)\n+                            .at(message_index);\n+\n+                        stat.msg_count = 0;\n+                        stat.byte_count = 0;\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Increment the amount of bytes transferred by `bytes` and the amount of messages by 1.\n+     */\n+    void Record(Direction direction,\n+                Network net,\n+                ConnectionType conn_type,\n+                const std::string& msg_type,\n+                size_t byte_count);\n+\n+    // The ...FromIndex() and ...ToIndex() methods below convert from/to\n+    // indexes of `m_data[]` to the actual values they represent. For example,\n+    // assuming MessageTypeToIndex(\"ping\") == 15, then everything stored in\n+    // m_data[x][y][z][15] is traffic from \"ping\" messages (for any x, y or z).\n+\n+    [[nodiscard]] static Direction DirectionFromIndex(size_t index);\n+    [[nodiscard]] static Network NetworkFromIndex(size_t index);\n+    [[nodiscard]] static ConnectionType ConnectionTypeFromIndex(size_t index);",
      "path": "src/netstats.h",
      "position": 91,
      "original_position": 91,
      "commit_id": "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "original_commit_id": "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "These might as well be private. It would be good to completely hide this to/from index from the outside world because it can be misused in a dangerous way. Then provide a way to call a provided function for each element:\r\n\r\n```cpp\r\nvoid TrafficStats::ForEach(std::function<void(TrafficStats::Direction dir,\r\n                                              Network net,\r\n                                              ConnectionType con,\r\n                                              const std::string& msg,\r\n                                              const BytesAndCount& data)> func) const\r\n{\r\n    for (size_t dir_i = 0; dir_i < m_data.size(); ++dir_i) {\r\n        for (size_t net_i = 0; net_i < m_data[dir_i].size(); ++net_i) {\r\n            for (size_t con_i = 0; con_i < m_data[dir_i][net_i].size(); ++con_i) {\r\n                for (size_t msg_i = 0; msg_i < m_data[dir_i][net_i][con_i].size(); ++msg_i) {\r\n                    func(DirectionFromIndex(dir_i),\r\n                         NetworkFromIndex(net_i),\r\n                         ConnectionTypeFromIndex(con_i),\r\n                         MessageTypeFromIndex(msg_i),\r\n                         m_data[dir_i][net_i][con_i][msg_i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```",
      "created_at": "2023-12-05T13:43:04Z",
      "updated_at": "2023-12-06T13:28:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1415634706",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415634706"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926"
        }
      },
      "start_line": 89,
      "original_start_line": 89,
      "start_side": "RIGHT",
      "line": 91,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415682660",
      "pull_request_review_id": 1765066743,
      "id": 1415682660,
      "node_id": "PRRC_kwDOABII585UYZpk",
      "diff_hunk": "@@ -3715,6 +3718,12 @@ void CNode::MarkReceivedMsgsForProcessing()\n         // vRecvMsg contains only completed CNetMessage\n         // the single possible partially deserialized message are held by TransportDeserializer\n         nSizeAdded += msg.m_raw_message_size;\n+\n+        net_stats.Record(NetStats::Direction::RECV,",
      "path": "src/net.cpp",
      "position": 44,
      "original_position": 44,
      "commit_id": "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "original_commit_id": "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The code already collects the traffic data for the per peer stats. To avoid confusion and ease maintenance it would be nice if the per peer and global traffic data is collected at the same place. This is where the data is collected in `master` for the per peer stats:\r\n\r\nReceived:\r\nhttps://github.com/bitcoin/bitcoin/blob/6d5790956f45e3de5c6c4ee6fda21878b0d1287b/src/net.cpp#L663\r\nhttps://github.com/bitcoin/bitcoin/blob/6d5790956f45e3de5c6c4ee6fda21878b0d1287b/src/net.cpp#L669-L674\r\n\r\nSent:\r\nhttps://github.com/bitcoin/bitcoin/blob/6d5790956f45e3de5c6c4ee6fda21878b0d1287b/src/net.cpp#L1620",
      "created_at": "2023-12-05T14:14:43Z",
      "updated_at": "2023-12-06T13:28:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1415682660",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415682660"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3722,
      "original_line": 3722,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1417282448",
      "pull_request_review_id": 1765066743,
      "id": 1417282448,
      "node_id": "PRRC_kwDOABII585UegOQ",
      "diff_hunk": "@@ -538,6 +540,327 @@ static RPCHelpMan getaddednodeinfo()\n     };\n }\n \n+namespace net_stats {\n+\n+enum class DimensionType {\n+    CONNECTION_TYPE,\n+    DIRECTION,\n+    MESSAGE_TYPE,\n+    NETWORK_TYPE,\n+    NONE,\n+};\n+\n+DimensionType StringToDimensionType(std::string dimension)\n+{\n+    if (dimension == \"message_type\") {\n+        return DimensionType::MESSAGE_TYPE;\n+    } else if (dimension == \"connection_type\") {\n+        return DimensionType::CONNECTION_TYPE;\n+    } else if (dimension == \"network\") {\n+        return DimensionType::NETWORK_TYPE;\n+    } else if (dimension == \"direction\") {\n+        return DimensionType::DIRECTION;\n+    }\n+\n+    return DimensionType::NONE;\n+}\n+\n+class MultiLevelStatsMap\n+{\n+private:\n+    size_t m_levels = 0;\n+    std::variant<\n+        std::map<std::string, NetStats::MsgStat>,\n+        std::map<std::string, MultiLevelStatsMap>>\n+        m_varmap;\n+\n+public:\n+    explicit MultiLevelStatsMap(size_t levels) : m_levels{levels}\n+    {\n+        if (levels > 1) {\n+            m_varmap.emplace<1>();\n+        } else {\n+            m_varmap.emplace<0>();\n+        }\n+    }\n+\n+    NetStats::MsgStat* get_value(const Span<std::string>& steps)\n+    {\n+        if (steps.size() == 0) return nullptr;\n+        return std::visit(util::Overloaded{\n+                              [&](std::map<std::string, NetStats::MsgStat>& m) {\n+                                  return &m[steps.front()]; // create if not present\n+                              },\n+                              [&](std::map<std::string, MultiLevelStatsMap>& m) {\n+                                  size_t sublevel = m_levels > 0 ? m_levels - 1 : 0;\n+                                  auto [it, inserted] = m.try_emplace(steps.front(), sublevel);\n+                                  return it->second.get_value(steps.subspan(1));\n+                              }},\n+                          m_varmap);\n+    }\n+\n+    UniValue to_univalue() const\n+    {\n+        UniValue result(UniValue::VOBJ);\n+        std::visit(util::Overloaded{\n+                       [&](const std::map<std::string, NetStats::MsgStat>& m) {\n+                           for (auto& [k, v] : m) {\n+                               if (v.msg_count > 0) {\n+                                   UniValue msg_stats(UniValue::VOBJ);\n+                                   msg_stats.pushKV(\"message_count\", v.msg_count.load());\n+                                   msg_stats.pushKV(\"byte_count\", v.byte_count.load());\n+                                   result.pushKV(k, msg_stats);\n+                               }\n+                           }\n+                       },\n+                       [&](const std::map<std::string, MultiLevelStatsMap>& m) {\n+                           for (auto& [k, v] : m) {\n+                               UniValue v_univalue = v.to_univalue();\n+                               if (v_univalue.size() > 0) {\n+                                   result.pushKV(k, v_univalue);\n+                               }\n+                           }\n+                       }},\n+                   m_varmap);\n+        return result;\n+    }\n+};\n+\n+/**\n+ * Arrange the stats in `stats.m_data` according to the `dimension_types`. Sum all the\n+ * data for dimensions that are not listed.\n+ * @code\n+ * sent                      recv                      (direction)\n+ * ||___________             ||___________\n+ * |            |            |            |\n+ * tor          ipv4         tor          ipv4         (network)\n+ * ||_____      ||_____      ||_____      ||_____\n+ * |      |     |      |     |      |     |      |\n+ * verack ping  verack ping  verack ping  verack ping  (message type)\n+ * |      |     |      |     |      |     |      |\n+ * a      b     c      d     e      f     g      h\n+ * @endcode\n+ *\n+ * If the direction and network dimensions are requested, the stats for message type are\n+ * summarized and the above would become:\n+ * @code\n+ * sent                      recv                      (direction)\n+ * ||___________             ||___________\n+ * |            |            |            |\n+ * tor          ipv4         tor          ipv4         (network)\n+ * |            |            |            |\n+ * *            *            *            *\n+ * |            |            |            |\n+ * a+b          c+d          e+f          g+h          (message type)\n+ * @endcode\n+ *\n+ * This method can also rearrange results by dimension, allowing the requester to specify\n+ * the order. If the message type and network dimensions are requested, the response\n+ * would be:\n+ * @code\n+ * verack                    ping                      (message type)\n+ * ||___________             ||___________\n+ * |            |            |            |\n+ * tor          ipv4         tor          ipv4         (network)\n+ * |            |            |            |\n+ * *            *            *            *\n+ * |            |            |            |\n+ * a+e          c+g          b+f          d+h          (direction)\n+ * @endcode\n+ *\n+ */\n+UniValue Aggregate(const std::vector<DimensionType>& dimensions, const NetStats::MultiDimensionalStats& raw_stats)",
      "path": "src/rpc/net.cpp",
      "position": 149,
      "original_position": 149,
      "commit_id": "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "original_commit_id": "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I realized that this can be done in a simpler way - if the stats are put in a map and `\"\"` used for the aggregated dimensions. See commit b7c56affe9 `rpc: make it possible to aggregate the result in getnetmsgstats` from [`vasild/getnetmsgstats`](https://github.com/vasild/bitcoin/commits/getnetmsgstats).",
      "created_at": "2023-12-06T13:15:49Z",
      "updated_at": "2023-12-06T13:28:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1417282448",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1417282448"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 672,
      "original_line": 672,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1417286331",
      "pull_request_review_id": 1765066743,
      "id": 1417286331,
      "node_id": "PRRC_kwDOABII585UehK7",
      "diff_hunk": "@@ -174,12 +178,111 @@ def test_getnettotals(self):\n             self.wait_until(lambda: peer_after()['bytesrecv_per_msg'].get('pong', 0) >= peer_before['bytesrecv_per_msg'].get('pong', 0) + 32, timeout=1)\n             self.wait_until(lambda: peer_after()['bytessent_per_msg'].get('ping', 0) >= peer_before['bytessent_per_msg'].get('ping', 0) + 32, timeout=1)\n \n+    def test_getnetmsgstats(self):\n+        self.log.info(\"Test getnetmsgstats\")\n+\n+        # Remove all P2P connections to avoid random/unpredictable packets (e.g. ping)\n+        # messing with the tests below.\n+        self.disconnect_nodes(0, 1)\n+        node0 = self.nodes[0]\n+        assert_equal(len(node0.getpeerinfo()), 0)\n+\n+        # Compare byte count with what getnettotals returns\n+        getnettotals_response = self.nodes[0].getnettotals()\n+        getnetmsgstats_response = self.nodes[0].getnetmsgstats()\n+\n+        assert_equal(getnettotals_response['totalbytessent'] + getnettotals_response['totalbytesrecv'],\n+                     getnetmsgstats_response['totals']['byte_count'])\n+\n+        # Test aggregation of results by trying out a few different combinations\n+        getnetmsgstats_msgtype = self.nodes[0].getnetmsgstats(group_by=[\"direction\", \"message_type\"])\n+        assert_array_result([getnetmsgstats_msgtype['sent']['ping']], {'message_count': 4}, {'byte_count': 128})\n+        assert_array_result([getnetmsgstats_msgtype['received']['pong']], {'message_count': 4}, {'byte_count': 128})\n+\n+        getnetmsgstats_conntype_msgtype = self.nodes[0].getnetmsgstats(group_by=[\"direction\", \"connection_type\", \"message_type\"])\n+        assert_array_result([getnetmsgstats_conntype_msgtype['received']['manual']['pong']], {'message_count': 2}, {'byte_count': 64})\n+\n+        getnetmsgstats_conntype_msgtype_network = self.nodes[0].getnetmsgstats(group_by=[\"direction\", \"connection_type\",\n+                                                                                             \"message_type\", \"network\"])\n+        manualconn_sendaddrv2_stats = [{'message_count': 1}, {'byte_count': 24}]\n+        assert_array_result([getnetmsgstats_conntype_msgtype_network['sent']['manual']['sendaddrv2']['not_publicly_routable']],\n+            manualconn_sendaddrv2_stats[0], manualconn_sendaddrv2_stats[1])\n+\n+        # stats should be the same as the previous test, even with the dimension types reordered\n+        getnetmsgstats_network_conntype_msgtype = self.nodes[0].getnetmsgstats(group_by=[\"direction\", \"network\",\n+                                                                                             \"connection_type\", \"message_type\"])\n+        assert_array_result([getnetmsgstats_network_conntype_msgtype['sent']['not_publicly_routable']['manual']['sendaddrv2']],\n+            manualconn_sendaddrv2_stats[0], manualconn_sendaddrv2_stats[1])\n+\n+        # check that the breakdown of sent ping messages matches the results that only show message type\n+        getnetmsgstats_msgtype_conntype = self.nodes[0].getnetmsgstats(group_by=[\"direction\", \"message_type\", \"connection_type\"])\n+        sent_ping_inbound = getnetmsgstats_msgtype_conntype['sent']['ping']['inbound']\n+        sent_ping_manual = getnetmsgstats_msgtype_conntype['sent']['ping']['manual']\n+        assert_equal(sent_ping_inbound['message_count'] + sent_ping_manual['message_count'],\n+            getnetmsgstats_msgtype['sent']['ping']['message_count'])\n+        assert_equal(sent_ping_inbound['byte_count'] + sent_ping_manual['byte_count'],\n+            getnetmsgstats_msgtype['sent']['ping']['byte_count'])\n+\n+        # Test that message and byte counts increment when a ping message is sent\n+        total_sent_ping_stats = getnetmsgstats_msgtype['sent']['ping']\n+        total_received_pong_stats = getnetmsgstats_msgtype['received']['pong']\n+\n+        # Reconnect to peers 0 and 1\n+        self.connect_nodes(0, 1)\n+        self.connect_nodes(1, 0)\n+        assert_equal(len(node0.getpeerinfo()), 2)\n+\n+        # ping() sends a ping to all other nodes, so message count increases by at least two pings.\n+        # One for peer0 and one for peer1\n+        self.nodes[0].ping()\n+        self.wait_until(lambda: (self.nodes[0].getnetmsgstats(group_by=[\"direction\", \"message_type\"])\n+                                 ['sent']['ping']['message_count'] >= total_sent_ping_stats['message_count'] + 1), timeout=1)\n+        self.wait_until(lambda: (self.nodes[0].getnetmsgstats(group_by=[\"direction\", \"message_type\"])\n+                                 ['received']['pong']['message_count'] >= total_received_pong_stats['message_count'] + 1), timeout=1)\n+\n+        getnetmsgstats_sent_ping = self.nodes[0].getnetmsgstats(group_by=[\"direction\", \"message_type\"])['sent']['ping']\n+        assert_greater_than_or_equal(getnetmsgstats_sent_ping['byte_count'], total_sent_ping_stats['byte_count'] + 2 * 32)\n+\n+        getnetmsgstats_received_pong = self.nodes[0].getnetmsgstats(group_by=[\"direction\", \"message_type\"])['received']['pong']\n+        assert_greater_than_or_equal(getnetmsgstats_received_pong['byte_count'], total_received_pong_stats['byte_count'] + 2 * 32)\n+\n+        # Test that when a message is broken in two, the stats only update once the full message has been received\n+        # Create valid message for another node to send to me\n+        conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n+        ping_msg = conn.build_message(test_framework.messages.msg_ping(nonce=12345))\n+        cut_pos = 12  # Chosen at an arbitrary position within the header\n+        # Send message in two pieces\n+        getnettotals_before_partial_ping = self.nodes[0].getnettotals()['totalbytesrecv']\n+        netmsgstats_before_partial_ping = self.nodes[0].getnetmsgstats(group_by=[\"direction\", \"message_type\"])['received']['ping']\n+\n+        conn.send_raw_message(ping_msg[:cut_pos])\n+        # getnettotals gets updated even for partial messages\n+        self.wait_until(lambda: self.nodes[0].getnettotals()['totalbytesrecv'] > getnettotals_before_partial_ping)\n+        getnettotals_partial_ping = self.nodes[0].getnettotals()['totalbytesrecv']\n+        # If this assert fails, we've hit an unlikely race\n+        # where the test framework sent a message in between the two halves\n+        assert_equal(getnettotals_partial_ping, getnettotals_before_partial_ping + cut_pos)\n+\n+        # check that getnetmsgstats did not update\n+        getnetmsgstats_after_partial_ping = self.nodes[0].getnetmsgstats(group_by=[\"direction\", \"message_type\"])['received']['ping']\n+        assert_equal(getnetmsgstats_after_partial_ping['message_count'], netmsgstats_before_partial_ping['message_count'])\n+        assert_equal(getnetmsgstats_after_partial_ping['byte_count'], netmsgstats_before_partial_ping['byte_count'])\n+\n+        # send the rest of the ping\n+        conn.send_raw_message(ping_msg[cut_pos:])\n+        self.wait_until(lambda: self.nodes[0].getnettotals()['totalbytesrecv'] > getnettotals_partial_ping)\n+        getnetmsgstats_finished_ping = self.nodes[0].getnetmsgstats(group_by=[\"direction\", \"message_type\"])['received']['ping']\n+        assert_equal(getnetmsgstats_finished_ping['message_count'], netmsgstats_before_partial_ping['message_count'] + 1)\n+        assert_equal(getnetmsgstats_finished_ping['byte_count'], netmsgstats_before_partial_ping['byte_count'] + 32)\n+\n+        conn.sync_with_ping(timeout=1)\n+\n     def test_getnetworkinfo(self):\n         self.log.info(\"Test getnetworkinfo\")\n         info = self.nodes[0].getnetworkinfo()\n         assert_equal(info['networkactive'], True)\n-        assert_equal(info['connections'], 2)\n-        assert_equal(info['connections_in'], 1)\n+        assert_equal(info['connections'], 3)\n+        assert_equal(info['connections_in'], 2)",
      "path": "test/functional/rpc_net.py",
      "position": 136,
      "original_position": 136,
      "commit_id": "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "original_commit_id": "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This shouldn't be necessary. It means that the previous test did not leave the environment as it was when it started. That is the newly added `test_getnetmsgstats`. It is good to be able to run the tests in isolation and that they do not rely on the leftovers from previous tests. For example if:\r\n\r\n```\r\n         self.test_connection_count()\r\n         self.test_getpeerinfo() \r\n         self.test_getnettotals()\r\n         self.test_getnetmsgstats()\r\n         self.test_getnetworkinfo()\r\n         self.test_addnode_getaddednodeinfo()\r\n         self.test_service_flags()\r\n```\r\n\r\nis changed to:\r\n\r\n```\r\n         #self.test_connection_count()\r\n         #self.test_getpeerinfo() \r\n         #self.test_getnettotals()\r\n         #self.test_getnetmsgstats()\r\n         self.test_getnetworkinfo()\r\n         #self.test_addnode_getaddednodeinfo()\r\n         #self.test_service_flags()\r\n```\r\n\r\nwould be good to have `rpc_net.py` still pass.",
      "created_at": "2023-12-06T13:18:43Z",
      "updated_at": "2023-12-06T13:28:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1417286331",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1417286331"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926"
        }
      },
      "start_line": 181,
      "original_start_line": 181,
      "start_side": "LEFT",
      "line": 285,
      "original_line": 285,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420642801",
      "pull_request_review_id": 1772617958,
      "id": 1420642801,
      "node_id": "PRRC_kwDOABII585UrUnx",
      "diff_hunk": "@@ -90,6 +92,10 @@ const static std::vector<std::string> g_all_net_message_types{\n     NetMsgType::SENDTXRCNCL,\n };\n \n+static_assert(NUM_NET_MESSAGE_TYPES == sizeof(allNetMessageTypes) / sizeof(allNetMessageTypes[0]), \"Please update NUM_NET_MESSAGE_TYPES\");\n+\n+const static std::vector<std::string> allNetMessageTypesVec(std::begin(allNetMessageTypes), std::end(allNetMessageTypes));",
      "path": "src/protocol.cpp",
      "position": 20,
      "original_position": 20,
      "commit_id": "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "original_commit_id": "0341129ed1023576f04786d863a74682b187fc06",
      "in_reply_to_id": 1402168125,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "C++20 is available to use now ",
      "created_at": "2023-12-08T15:23:00Z",
      "updated_at": "2023-12-08T15:23:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1420642801",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420642801"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926"
        }
      },
      "start_line": 95,
      "original_start_line": 95,
      "start_side": "RIGHT",
      "line": 97,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443485004",
      "pull_request_review_id": 1807023183,
      "id": 1443485004,
      "node_id": "PRRC_kwDOABII585WCdVM",
      "diff_hunk": "@@ -267,9 +267,20 @@ extern const char* WTXIDRELAY;\n extern const char* SENDTXRCNCL;\n }; // namespace NetMsgType\n \n+extern const std::string NET_MESSAGE_TYPE_OTHER;",
      "path": "src/protocol.h",
      "position": 4,
      "original_position": 4,
      "commit_id": "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "original_commit_id": "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "in_reply_to_id": 1415601693,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I agree: Code and constants that are only used in RPCs are not part of the protocol and therefore don't belong in `protocol.h` / `protocol.cpp`. ",
      "created_at": "2024-01-05T22:34:06Z",
      "updated_at": "2024-01-05T23:12:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1443485004",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443485004"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 270,
      "original_line": 270,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443492341",
      "pull_request_review_id": 1807023183,
      "id": 1443492341,
      "node_id": "PRRC_kwDOABII585WCfH1",
      "diff_hunk": "@@ -275,6 +275,12 @@ static constexpr size_t NUM_NET_MESSAGE_TYPES{35};\n /* Get a vector of all valid message types (see above) */\n const std::vector<std::string>& getAllNetMessageTypes();\n \n+/* Get the index of a message type from the vector of all message types */\n+int messageTypeToIndex(const std::string& msg_type);",
      "path": "src/protocol.h",
      "position": 13,
      "original_position": 5,
      "commit_id": "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "original_commit_id": "9383acb2d5c7b1b267b393a33b3e8e12fced4c4e",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: capital M, here and in `messageTypeFromIndex` to make it similar to the related functions for other dimensions.",
      "created_at": "2024-01-05T22:36:52Z",
      "updated_at": "2024-01-05T23:15:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1443492341",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443492341"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 279,
      "original_line": 279,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443508738",
      "pull_request_review_id": 1807023183,
      "id": 1443508738,
      "node_id": "PRRC_kwDOABII585WCjIC",
      "diff_hunk": "@@ -746,8 +746,121 @@ UniValue Aggregate(const std::vector<DimensionType>& dimensions, const NetStats:\n     return result.to_univalue();\n }\n \n+static std::vector<RPCResult> NetMsgStat()\n+{\n+    return {\n+        {RPCResult::Type::NUM, \"message_count\", \"Total number of messages sent\"},\n+        {RPCResult::Type::NUM, \"byte_count\", \"Total number of bytes sent\"}};\n+}\n }; // namespace net_stats\n \n+static RPCHelpMan getnetmsgstats()\n+{\n+    return RPCHelpMan{\n+        \"getnetmsgstats\",\n+        \"\\nReturns the message count and total number of bytes for network traffic.\\n\"\n+        \"Results may optionally be grouped so only certain dimensions are shown.\"\n+        \"\\nWhen a message, connection, network type, or direction is not listed\\n\"\n+        \"in the result the statistics for that type are 0. Only known message,\\n\"\n+        \"connection, and network types can appear as keys in the object.\",\n+        {{\"group_by\",\n+          RPCArg::Type::ARR,\n+          RPCArg::Optional::OMITTED,\n+          \"An array of dimensions to arrange results by.\",\n+          {{\"dimension_type\",\n+            RPCArg::Type::STR,\n+            RPCArg::Optional::OMITTED,\n+            \"Dimension type to arrange results by.\\n\"\n+            \"Valid options are: direction, network, connection_type, and message_type\"}}}},\n+        {\n+            // A return object with one level of data: either when totals are returned (no dimensions),\n+            // or one dimension has been specified\n+            RPCResult{\n+                RPCResult::Type::OBJ_DYN,\n+                \"\",\n+                \"\",\n+                {{RPCResult::Type::OBJ,\n+                  \"totals\",\n+                  true,\n+                  \"Network traffic statistics.\\n\",\n+                  net_stats::NetMsgStat()},\n+                 {RPCResult::Type::OBJ_DYN,\n+                  \"keys for the dimension type\",\n+                  true,\n+                  \"Network traffic statistics.\\n\",\n+                  net_stats::NetMsgStat()}}},\n+            // A return object with two levels of data: two dimensions\n+            RPCResult{\n+                RPCResult::Type::OBJ_DYN,\n+                \"\",\n+                \"\",\n+                {{RPCResult::Type::OBJ_DYN,\n+                  \"keys for the first dimension type\",\n+                  \"Network traffic statistics.\\n\",\n+                  {{RPCResult::Type::OBJ_DYN,\n+                    \"keys for the second dimension type\",\n+                    \"\",\n+                    net_stats::NetMsgStat()}}}}},\n+            // A return object with three levels of data: three dimensions\n+            RPCResult{\n+                RPCResult::Type::OBJ_DYN,\n+                \"\",\n+                \"\",\n+                {{RPCResult::Type::OBJ_DYN,\n+                  \"keys for the first dimension type\",\n+                  \"Network traffic statistics.\\n\",\n+                  {{RPCResult::Type::OBJ_DYN,\n+                    \"keys for the second dimension type\",\n+                    \"\",\n+                    {{RPCResult::Type::OBJ_DYN,\n+                      \"keys for the third dimension type\",\n+                      \"\",\n+                      net_stats::NetMsgStat()}}}}}}},\n+            // A return object with four levels of data: four dimensions\n+            RPCResult{\n+                RPCResult::Type::OBJ_DYN,\n+                \"\",\n+                \"\",\n+                {{RPCResult::Type::OBJ_DYN,\n+                  \"keys for the first dimension type\",\n+                  \"Network traffic statistics.\\n\",\n+                  {{RPCResult::Type::OBJ_DYN,\n+                    \"keys for the second dimension type\",\n+                    \"\",\n+                    {{RPCResult::Type::OBJ_DYN,\n+                      \"keys for the third dimension type\",\n+                      \"\",\n+                      {{RPCResult::Type::OBJ_DYN,\n+                        \"keys for the fourth dimension type\",\n+                        \"\",\n+                        net_stats::NetMsgStat()}}}}}}}}}},\n+\n+        RPCExamples{\n+            HelpExampleCli(\"getnetmsgstats\", \"\") +\n+            HelpExampleCli(\"getnetmsgstats\", R\"('[\"connection_type\",\"message_type\"]')\") +\n+            HelpExampleRpc(\"getnetmsgstats\", \"\") +\n+            HelpExampleRpc(\"getnetmsgstats\", R\"([\"message_type\",\"network\"])\")},\n+        /*fun=*/[&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            NodeContext& node = EnsureAnyNodeContext(request.context);\n+            const CConnman& connman = EnsureConnman(node);\n+            std::vector<net_stats::DimensionType> dimensions;\n+\n+            // Aggregate the messages to show only requested dimensions\n+            if (request.params[0].isArray()) {\n+                const UniValue raw_dimensions = request.params[0].get_array();",
      "path": "src/rpc/net.cpp",
      "position": 327,
      "original_position": 105,
      "commit_id": "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "original_commit_id": "b352853b78eed24692d144ceab293f2840eb2ade",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would be nice to have some validation of user input here - `getnetmsgstats '[\"foo\",\"bar\"]'` could return an error message, listing the supported dimensions.",
      "created_at": "2024-01-05T23:08:42Z",
      "updated_at": "2024-01-05T23:12:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1443508738",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443508738"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 850,
      "original_line": 850,
      "side": "RIGHT"
    }
  ]
}