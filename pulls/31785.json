{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785",
    "id": 2312950132,
    "node_id": "PR_kwDOABII586J3NF0",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31785",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31785.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31785.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/cc1001f3bf17b31512c05fb359e09483a07fb2a3",
    "number": 31785,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Have createNewBlock() wait for tip, make rpc handle shutdown during long poll and wait methods",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This PR prevents Mining interface methods from sometimes crashing when called during startup before a tip is connected. It also makes other improvements like making more RPC methods usable from the GUI. Specifically this PR:\r\n\r\n- Adds an `Assume` check to disallow passing negative timeout values to `Mining::waitTipChanged`\r\n- Makes `waitfornewblock`, `waitforblock` and `waitforblockheight` RPC methods usable from the GUI when `-server=1` is not set.\r\n- Changes `Mining::waitTipChanged` to return `optional<BlockRef>` instead of `BlockRef` and return `nullopt` instead of crashing if there is a timeout or if the node is shut down before a tip is connected.\r\n- Changes `Mining::waitTipChanged` to not time out before a tip is connected, so it is convenient and safe to call during startup, and only returns `nullopt` on early shutdowns.\r\n- Changes `Mining::createNewBlock` to block and wait for a tip to be connected if it is called on startup instead of crashing. Also documents that it will return null on early shutdowns.\r\n\r\nThis allows `waitNext()` (added in https://github.com/bitcoin/bitcoin/pull/31283) to safely assume `TipBlock()` isn't `null`, not even during a scenario of early shutdown.\r\n\r\nFinally this PR clarifies long poll behaviour, mostly by adding code comments, but also through an early `break`.",
    "labels": [],
    "created_at": "2025-02-03T14:56:59Z",
    "updated_at": "2025-03-13T11:18:54Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "352fb749b0e8e638fb24f0b0a9558fa3b95d00ac",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "Sjors:2025/02/create_new_block",
      "ref": "2025/02/create_new_block",
      "sha": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 92390696,
        "node_id": "MDEwOlJlcG9zaXRvcnk5MjM5MDY5Ng==",
        "name": "bitcoin",
        "full_name": "Sjors/bitcoin",
        "owner": {
          "login": "Sjors",
          "id": 10217,
          "node_id": "MDQ6VXNlcjEwMjE3",
          "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Sjors",
          "html_url": "https://github.com/Sjors",
          "followers_url": "https://api.github.com/users/Sjors/followers",
          "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
          "organizations_url": "https://api.github.com/users/Sjors/orgs",
          "repos_url": "https://api.github.com/users/Sjors/repos",
          "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/Sjors/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/Sjors/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/Sjors/bitcoin",
        "archive_url": "https://api.github.com/repos/Sjors/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/Sjors/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/Sjors/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/Sjors/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/Sjors/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/Sjors/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/Sjors/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/Sjors/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/Sjors/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/Sjors/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/Sjors/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/Sjors/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/Sjors/bitcoin/events",
        "forks_url": "https://api.github.com/repos/Sjors/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/Sjors/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/Sjors/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/Sjors/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/Sjors/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/Sjors/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/Sjors/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/Sjors/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/Sjors/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/Sjors/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/Sjors/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/Sjors/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/Sjors/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/Sjors/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/Sjors/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/Sjors/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:Sjors/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/Sjors/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/Sjors/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/Sjors/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/Sjors/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/Sjors/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/Sjors/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/Sjors/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/Sjors/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/Sjors/bitcoin/hooks",
        "svn_url": "https://github.com/Sjors/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 10,
        "stargazers_count": 13,
        "watchers_count": 13,
        "size": 259380,
        "default_branch": "sv2",
        "open_issues_count": 14,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": false,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-03-13T11:50:53Z",
        "created_at": "2017-05-25T10:05:54Z",
        "updated_at": "2025-03-06T21:23:50Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "c20a5ce106be716a503bcf615a1900ba8c635430",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36922,
        "stargazers_count": 82449,
        "watchers_count": 82449,
        "size": 277920,
        "default_branch": "master",
        "open_issues_count": 685,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-03-13T11:38:15Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-03-13T11:58:14Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 102,
    "deletions": 40,
    "changed_files": 4,
    "commits": 5,
    "review_comments": 68,
    "comments": 26
  },
  "events": [
    {
      "event": "commented",
      "id": 2631235680,
      "node_id": "IC_kwDOABII586c1Xhg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2631235680",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-03T14:57:04Z",
      "updated_at": "2025-03-13T11:16:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/31785.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Stale ACK | [vasild](https://github.com/bitcoin/bitcoin/pull/31785#pullrequestreview-2629174152), [ryanofsky](https://github.com/bitcoin/bitcoin/pull/31785#pullrequestreview-2629683943) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#31117](https://github.com/bitcoin/bitcoin/pull/31117) (miner: Reorg Testnet4 minimum difficulty blocks by fjahr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#issuecomment-2631235680",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785"
    },
    {
      "event": "reviewed",
      "id": 2590179163,
      "node_id": "PRR_kwDOABII586aYv9b",
      "url": null,
      "actor": null,
      "commit_id": "af85987a169787205eeac6854f09cbe66713f1c9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#pullrequestreview-2590179163",
      "submitted_at": "2025-02-03T15:03:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
    },
    {
      "event": "commented",
      "id": 2631258942,
      "node_id": "IC_kwDOABII586c1dM-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2631258942",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-03T15:05:20Z",
      "updated_at": "2025-02-03T15:19:36Z",
      "author_association": "MEMBER",
      "body": "The Stratum v2 Template Provider that I implemented first calls `mining.waitTipChanged(uint256::ZERO)` before calling `mining.createNewBlock()`. This ensures that no matter how we order the node & IPC startup sequence, it won't prematurely try to make a block.\r\n\r\nSee https://github.com/Sjors/bitcoin/pull/49 (`src/sv2/template_provider.cpp` in `Sv2TemplateProvider::ThreadSv2Handler()`).\r\n\r\nBut other implementers may not realise this, so having `createNewBlock()` return nothing when called too early seems like a good precaution.\r\n\r\nSee this comment for more details on the init sequence:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/1172bc4157eefe80d1aaf0b56459857ec651e535/src/init.cpp#L1817-L1833\r\n\r\nAlso note that currently the IPC server starts listening in `AppInitMain` _before_ the above `wait` so the race condition is possible.\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/1172bc4157eefe80d1aaf0b56459857ec651e535/src/init.cpp#L1358-L1367\r\n\r\nA good client application might wait for `-startupnotify` before trying to connect via IPC. `StartupNotify()` is called at the end `AppInitMain`. But we shouldn't assume all clients do.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#issuecomment-2631258942",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785"
    },
    {
      "event": "reviewed",
      "id": 2590249166,
      "node_id": "PRR_kwDOABII586aZBDO",
      "url": null,
      "actor": null,
      "commit_id": "af85987a169787205eeac6854f09cbe66713f1c9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#pullrequestreview-2590249166",
      "submitted_at": "2025-02-03T15:21:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16165812226,
      "node_id": "HRFPE_lADOABII586ojB_JzwAAAAPDjrgC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16165812226",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "96ce223b874c84d334c8e7f3cdc9e9777202c924",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/96ce223b874c84d334c8e7f3cdc9e9777202c924",
      "created_at": "2025-02-03T17:13:31Z"
    },
    {
      "event": "commented",
      "id": 2631596373,
      "node_id": "IC_kwDOABII586c2vlV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2631596373",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-03T17:13:34Z",
      "updated_at": "2025-02-03T17:13:34Z",
      "author_association": "MEMBER",
      "body": "There were slightly more worms in this can.\r\n\r\nInstead I've now changed `createNewBlock()` to first call `waitTipChanged()` and the latter to return null during a shutdown. This shifts some work to the RPC, but I think makes the overall behaviour easier to understand.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#issuecomment-2631596373",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785"
    },
    {
      "event": "renamed",
      "id": 16165830194,
      "node_id": "RTE_lADOABII586ojB_JzwAAAAPDjv4y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16165830194",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-03T17:15:01Z",
      "rename": {
        "from": "Have createNewBlock() ensure m_tip_block is set",
        "to": "Have createNewBlock() wait for tip, make rpc handle shutdown during long poll and wait methods"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16166050220,
      "node_id": "HRFPE_lADOABII586ojB_JzwAAAAPDklms",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16166050220",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "created_at": "2025-02-03T17:32:52Z"
    },
    {
      "event": "reviewed",
      "id": 2611342025,
      "node_id": "PRR_kwDOABII586bperJ",
      "url": null,
      "actor": null,
      "commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK be15f2e769987b1df2cf1c8f327c5aafe064dbb3\r\n\r\n",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#pullrequestreview-2611342025",
      "submitted_at": "2025-02-12T10:56:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
    },
    {
      "event": "commented",
      "id": 2653871612,
      "node_id": "IC_kwDOABII586eLt38",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2653871612",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-12T14:27:57Z",
      "updated_at": "2025-02-12T14:27:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Previously it would return the last known tip during shutdown, but this creates an ambiguous circumstance in the scenario where the node is started and quickly shutdown, before notifications().TipBlock() is set.\r\n\r\nNew behavior seems good, but I am confused by this description. It looks to me like previous behavior was to segfault in this case, because it would return`Tip()->GetBlockHash()` and `Tip()` would be null? It would be helpful if description said more specifically what previous behavior was.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#issuecomment-2653871612",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785"
    },
    {
      "event": "reviewed",
      "id": 2612158513,
      "node_id": "PRR_kwDOABII586bsmAx",
      "url": null,
      "actor": null,
      "commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review be15f2e769987b1df2cf1c8f327c5aafe064dbb3. Mostly looks good but I think vasild's suggestion https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1952318566 should be used so waitTipChanged can't return an inconsistent hash and height\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#pullrequestreview-2612158513",
      "submitted_at": "2025-02-12T14:48:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16294872989,
      "node_id": "HRFPE_lADOABII586ojB_JzwAAAAPLQAed",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16294872989",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6321d59d0dd1c3e55e13b912188c051bff18d837",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/6321d59d0dd1c3e55e13b912188c051bff18d837",
      "created_at": "2025-02-13T11:15:07Z"
    },
    {
      "event": "commented",
      "id": 2656278649,
      "node_id": "IC_kwDOABII586eU5h5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2656278649",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-13T11:15:10Z",
      "updated_at": "2025-02-13T11:58:04Z",
      "author_association": "MEMBER",
      "body": "I changed `waitTipChanged()` to only return `nullopt` during shutdown. This is achieved by extending the `timeout` in the unlikely event that node initialization takes longer.\r\n\r\nI introduced a new `RPC_SHUTDOWN_ERROR` code and use it in case `waitfornewblock` and friends are called really early and the node shuts down (probably very hard to reach in practice). See https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1952373326\r\n\r\n> It would be helpful if description said more specifically what previous behavior was.\r\n\r\nUpdated the description.\r\n\r\nOn question about long polling I still need to investigate: https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1952403604\r\n\r\n",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#issuecomment-2656278649",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16295486463,
      "node_id": "HRFPE_lADOABII586ojB_JzwAAAAPLSWP_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16295486463",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fd9c8b67294ab425a0364d7fcd1d9519552cd8c0",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/fd9c8b67294ab425a0364d7fcd1d9519552cd8c0",
      "created_at": "2025-02-13T12:04:33Z"
    },
    {
      "event": "labeled",
      "id": 16295487843,
      "node_id": "LE_lADOABII586ojB_JzwAAAAPLSWlj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16295487843",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-13T12:04:38Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2656394679,
      "node_id": "IC_kwDOABII586eVV23",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2656394679",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-13T12:04:39Z",
      "updated_at": "2025-02-13T12:04:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/37158437645</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#issuecomment-2656394679",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16296044475,
      "node_id": "HRFPE_lADOABII586ojB_JzwAAAAPLUee7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16296044475",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "af5f0ccc7d141f209c976d7f4b61951524d2f736",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/af5f0ccc7d141f209c976d7f4b61951524d2f736",
      "created_at": "2025-02-13T12:47:56Z"
    },
    {
      "event": "commented",
      "id": 2656504648,
      "node_id": "IC_kwDOABII586eVwtI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2656504648",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-13T12:50:04Z",
      "updated_at": "2025-02-13T12:50:04Z",
      "author_association": "MEMBER",
      "body": "I pushed a commit to clarify long poll behavior.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#issuecomment-2656504648",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785"
    },
    {
      "event": "reviewed",
      "id": 2614945255,
      "node_id": "PRR_kwDOABII586b3OXn",
      "url": null,
      "actor": null,
      "commit_id": "af5f0ccc7d141f209c976d7f4b61951524d2f736",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#pullrequestreview-2614945255",
      "submitted_at": "2025-02-13T14:12:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16297717265,
      "node_id": "HRFPE_lADOABII586ojB_JzwAAAAPLa24R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16297717265",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a2d91b5f08c2bc58ca2ffc56eae2dbe4f1aa78b5",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/a2d91b5f08c2bc58ca2ffc56eae2dbe4f1aa78b5",
      "created_at": "2025-02-13T14:42:35Z"
    },
    {
      "event": "commented",
      "id": 2656828338,
      "node_id": "IC_kwDOABII586eW_uy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2656828338",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-13T14:47:56Z",
      "updated_at": "2025-02-13T14:47:56Z",
      "author_association": "MEMBER",
      "body": "I mixed up the commits in my last push, will fix...",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#issuecomment-2656828338",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16297835355,
      "node_id": "HRFPE_lADOABII586ojB_JzwAAAAPLbTtb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16297835355",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b13da956053d268583cbf97d235ef820a35a6d08",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/b13da956053d268583cbf97d235ef820a35a6d08",
      "created_at": "2025-02-13T14:49:33Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16297872606,
      "node_id": "HRFPE_lADOABII586ojB_JzwAAAAPLbcze",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16297872606",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "80e6e421c119add0cded0add337e32734907febe",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/80e6e421c119add0cded0add337e32734907febe",
      "created_at": "2025-02-13T14:51:41Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16298041013,
      "node_id": "HRFPE_lADOABII586ojB_JzwAAAAPLcF61",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16298041013",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b4d98b89bfb397b3b9478b2131392470c397aa25",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/b4d98b89bfb397b3b9478b2131392470c397aa25",
      "created_at": "2025-02-13T15:01:41Z"
    },
    {
      "event": "reviewed",
      "id": 2615645250,
      "node_id": "PRR_kwDOABII586b55RC",
      "url": null,
      "actor": null,
      "commit_id": "b4d98b89bfb397b3b9478b2131392470c397aa25",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#pullrequestreview-2615645250",
      "submitted_at": "2025-02-13T16:47:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
    },
    {
      "event": "unlabeled",
      "id": 16300185180,
      "node_id": "UNLE_lADOABII586ojB_JzwAAAAPLkRZc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16300185180",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-13T17:21:22Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16301807696,
      "node_id": "HRFPE_lADOABII586ojB_JzwAAAAPLqdhQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16301807696",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2042ed105578a71234295b01be39ad8607722abe",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/2042ed105578a71234295b01be39ad8607722abe",
      "created_at": "2025-02-13T19:40:53Z"
    },
    {
      "event": "reviewed",
      "id": 2623295004,
      "node_id": "PRR_kwDOABII586cXE4c",
      "url": null,
      "actor": null,
      "commit_id": "2042ed105578a71234295b01be39ad8607722abe",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK 2042ed105578a71234295b01be39ad8607722abe",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#pullrequestreview-2623295004",
      "submitted_at": "2025-02-18T12:15:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16349632802,
      "node_id": "HRFPE_lADOABII586ojB_JzwAAAAPOg5ki",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16349632802",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6806651d2f64d51094178cbfb23ef2f4a956aa4d",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/6806651d2f64d51094178cbfb23ef2f4a956aa4d",
      "created_at": "2025-02-18T14:44:23Z"
    },
    {
      "event": "commented",
      "id": 2665925797,
      "node_id": "IC_kwDOABII586e5syl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2665925797",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-18T14:45:16Z",
      "updated_at": "2025-02-18T14:45:16Z",
      "author_association": "MEMBER",
      "body": "Addressed @vasild's feedback (and rebased).",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#issuecomment-2665925797",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785"
    },
    {
      "event": "mentioned",
      "id": 16349647381,
      "node_id": "MEE_lADOABII586ojB_JzwAAAAPOg9IV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16349647381",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-18T14:45:18Z"
    },
    {
      "event": "subscribed",
      "id": 16349647416,
      "node_id": "SE_lADOABII586ojB_JzwAAAAPOg9I4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16349647416",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-18T14:45:18Z"
    },
    {
      "event": "reviewed",
      "id": 2624284851,
      "node_id": "PRR_kwDOABII586ca2iz",
      "url": null,
      "actor": null,
      "commit_id": "6806651d2f64d51094178cbfb23ef2f4a956aa4d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 6806651d2f64d51094178cbfb23ef2f4a956aa4d\r\n\r\nAs mentioned in a comment below, I don't really like how this PR is changing startup behavior of the RPC methods without documenting it, and when it seem like it expands the scope of this PR and makes it harder to understand. Would prefer doing that in #30635 so this PR could be more focused. But current approach does seem ok too.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#pullrequestreview-2624284851",
      "submitted_at": "2025-02-18T18:19:07Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
    },
    {
      "event": "review_requested",
      "id": 16353236279,
      "node_id": "RRE_lADOABII586ojB_JzwAAAAPOupU3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16353236279",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-18T18:19:12Z",
      "requested_reviewer": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 2667879598,
      "node_id": "IC_kwDOABII586fBJyu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2667879598",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-19T08:20:30Z",
      "updated_at": "2025-02-19T08:20:30Z",
      "author_association": "MEMBER",
      "body": "> I think a dedicated PR like https://github.com/bitcoin/bitcoin/pull/30635 would be a better place to update the RPC interface, if that is what we want to do.\r\n\r\nI'll rebase the latter PR on top of this, and then reduce the scope here.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#issuecomment-2667879598",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785"
    },
    {
      "event": "reviewed",
      "id": 2626051280,
      "node_id": "PRR_kwDOABII586chlzQ",
      "url": null,
      "actor": null,
      "commit_id": "6806651d2f64d51094178cbfb23ef2f4a956aa4d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 6806651d2f64d51094178cbfb23ef2f4a956aa4d\r\n\r\nWould be happy to re-review if suggestions from @ryanofsky are applied, especially https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1960150037\r\n\r\nNote wrt RPC changing of the behavior when waiting at startup for the tip to be set -- the current code first sets the tip and then starts the RPC, so this is mostly theoretical or about future changes that might swap the startup order. Thus, IMO, no need for release notes. _Edit:_ I forgot that there is also a change that the RPC will now throw during shutdown. Maybe deserves a release note.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#pullrequestreview-2626051280",
      "submitted_at": "2025-02-19T08:48:45Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16364378617,
      "node_id": "HRFPE_lADOABII586ojB_JzwAAAAPPZJn5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16364378617",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3a9ab8fc2e93292374433198988f75e390fd41bd",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/3a9ab8fc2e93292374433198988f75e390fd41bd",
      "created_at": "2025-02-19T11:56:00Z"
    },
    {
      "event": "commented",
      "id": 2668432011,
      "node_id": "IC_kwDOABII586fDQqL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2668432011",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-19T11:56:29Z",
      "updated_at": "2025-02-19T11:56:29Z",
      "author_association": "MEMBER",
      "body": "> the current code first sets the tip and then starts the RPC, so this is mostly theoretical or about future changes that might swap the startup order.\r\n\r\nIndeed, that's what it's supposed to do.\r\n\r\nI ended up simplifying things a bit. The original `CHECK_NONFATAL(miner.getTip()` has been replaced with `JSONRPCError(RPC_IN_WARMUP`. So in the unlikely event there's no tip, the user gets a clear error. I also added an `Assume`, so we can fix things if it turns out `SetRPCWarmupFinished` was called too early by our init code.\r\n\r\nI restored the original behavior of returning the last tip for both timeout and shutdown. This is possible now because we throw during startup if there's no tip.\r\n\r\nI dropped the use of `RPC_SHUTDOWN_ERROR` in `rpc/mining.cpp` (and the new code along with it).\r\n\r\nI added a separate commit to drop the `IsRPCRunning` checks. Since these methods are undocumented and hidden, I don't think it needs a release note. That can wait for #30635.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#issuecomment-2668432011",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16364650228,
      "node_id": "HRFPE_lADOABII586ojB_JzwAAAAPPaL70",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16364650228",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0a8a9e8a901f9b5f9e718a69216fd42390ae4fba",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/0a8a9e8a901f9b5f9e718a69216fd42390ae4fba",
      "created_at": "2025-02-19T12:15:25Z"
    },
    {
      "event": "commented",
      "id": 2668483777,
      "node_id": "IC_kwDOABII586fDdTB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2668483777",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-19T12:15:29Z",
      "updated_at": "2025-02-19T12:15:29Z",
      "author_association": "MEMBER",
      "body": "I forgot that you can't use `Assume` in RPC code. Using `NONFATAL_UNREACHABLE` instead, though that's not as clear to the user.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#issuecomment-2668483777",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785"
    },
    {
      "event": "commented",
      "id": 2668484061,
      "node_id": "IC_kwDOABII586fDdXd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2668484061",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-19T12:15:36Z",
      "updated_at": "2025-02-19T12:15:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/37463939357</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#issuecomment-2668484061",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785"
    },
    {
      "event": "labeled",
      "id": 16364652619,
      "node_id": "LE_lADOABII586ojB_JzwAAAAPPaMhL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16364652619",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-19T12:15:36Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2668567278,
      "node_id": "IC_kwDOABII586fDxru",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2668567278",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-19T12:51:59Z",
      "updated_at": "2025-02-19T13:06:05Z",
      "author_association": "MEMBER",
      "body": "Four CI machines consistently failing `rpc_blockchain.py` (either `--v1transport` or `--v2transport`)  at:\r\n\r\n```py\r\ndef assert_waitforheight(height, timeout=2):\r\n   assert_equal(\r\n      node.waitforblockheight(height=height, timeout=timeout)['height'],\r\n      current_height)\r\n```\r\n\r\nWith \"Remote end closed connection without response\", but not much useful info otherwise. Can't reproduce locally yet.\r\n\r\nE.g. https://cirrus-ci.com/task/5674616741429248?logs=ci#L2902\r\n\r\n----\r\n\r\nOh there is a hint:\r\n\r\n```\r\n[07:26:06.749] \r\n[07:26:06.749] \r\n node0 stderr Error: Invalid height value (bip34@-2) for -testactivationheight=name@height. \r\n[07:26:06.749] \r\n node0 stderr Error: Invalid format () for -testactivationheight=name@height. \r\n[07:26:06.749] \r\n node0 stderr /usr/include/c++/14/optional:475: constexpr _Tp& std::_Optional_base_impl<_Tp, _Dp>::_M_get() [with _Tp = interfaces::BlockRef; _Dp = std::_Optional_base<interfaces::BlockRef, true, true>]: Assertion 'this->_M_is_engaged()' failed. \r\n[07:26:06.749] \r\n node0 stderr Error: Invalid name (name@2) for -testactivationheight=name@height. \r\n[07:26:06.749] \r\n node0 stderr : The block database contains a block which appears to be from the future. This may be due to your computer's date and time being set incorrectly. Only rebuild the block database if you are sure that your computer's date and time are correct.\r\n[07:26:06.749] Please restart with -reindex or -reindex-chainstate to recover. \r\n```\r\n\r\nOr maybe not, since these are just things that are being tested.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#issuecomment-2668567278",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785"
    },
    {
      "event": "reviewed",
      "id": 2626699620,
      "node_id": "PRR_kwDOABII586ckEFk",
      "url": null,
      "actor": null,
      "commit_id": "0a8a9e8a901f9b5f9e718a69216fd42390ae4fba",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#pullrequestreview-2626699620",
      "submitted_at": "2025-02-19T12:52:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16365374497,
      "node_id": "HRFPE_lADOABII586ojB_JzwAAAAPPc8wh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16365374497",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "51aa29ede7bd9a1897f3cf240e70ef180849591d",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/51aa29ede7bd9a1897f3cf240e70ef180849591d",
      "created_at": "2025-02-19T13:07:53Z"
    },
    {
      "event": "commented",
      "id": 2668606129,
      "node_id": "IC_kwDOABII586fD7Kx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2668606129",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-19T13:07:56Z",
      "updated_at": "2025-02-19T13:07:56Z",
      "author_association": "MEMBER",
      "body": "Replaced `NONFATAL_UNREACHABLE` with `CHECK_NONFATAL` again by avoiding the intermediate `std::optional`, see https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1961627062\r\n\r\nRebased and pushed again, though I haven't figured out the CI issue.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#issuecomment-2668606129",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785"
    },
    {
      "event": "commented",
      "id": 2668649415,
      "node_id": "IC_kwDOABII586fEFvH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2668649415",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-19T13:25:11Z",
      "updated_at": "2025-02-19T13:25:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Remote end closed connection without response\r\n\r\nThat probably means `bitcoind` crashed.\r\n\r\n>  node0 stderr ... optional ... Assertion 'this->_M_is_engaged()' failed. ",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#issuecomment-2668649415",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785"
    },
    {
      "event": "commented",
      "id": 2668707017,
      "node_id": "IC_kwDOABII586fETzJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2668707017",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-19T13:47:09Z",
      "updated_at": "2025-02-19T13:49:30Z",
      "author_association": "MEMBER",
      "body": "M_engaged seems to be gcc specific for `std::optional`: https://github.com/gcc-mirror/gcc/blob/master/libstdc%2B%2B-v3/include/std/optional#L291\r\n\r\nIt presumably happens when you dereference it in a bad way, but then why doesn't it crash when compiled with clang (as on my macOS machine)?\r\n\r\nLlvm uses the term \"engaged\" too, but maybe it has slightly different checks? https://github.com/llvm/llvm-project/blob/main/libcxx/include/optional",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#issuecomment-2668707017",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16366188548,
      "node_id": "HRFPE_lADOABII586ojB_JzwAAAAPPgDgE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16366188548",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3b877e6718a916402adf8dcb141da01064289a6b",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/3b877e6718a916402adf8dcb141da01064289a6b",
      "created_at": "2025-02-19T14:01:07Z"
    },
    {
      "event": "commented",
      "id": 2668744831,
      "node_id": "IC_kwDOABII586fEdB_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2668744831",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-19T14:01:12Z",
      "updated_at": "2025-02-19T14:01:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "I would guess the optional is dereferenced when it is nullopt and this is not compiler related. Maybe it only happens on CI due to some timing specifics? CI failures that don't repro locally are the most tedious to nail down. Try adding a lot of `LogError(\"reached line 123, relevant values %d %s %whatever\", ...)` and then inspect the CI log for those.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#issuecomment-2668744831",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785"
    },
    {
      "event": "commented",
      "id": 2668747128,
      "node_id": "IC_kwDOABII586fEdl4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2668747128",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-19T14:02:03Z",
      "updated_at": "2025-02-19T14:06:53Z",
      "author_association": "MEMBER",
      "body": "Trying `.value()` instead of `*`... \r\n\r\nhttps://github.com/bitcoin/bitcoin/compare/51aa29ede7bd9a1897f3cf240e70ef180849591d..3b877e6718a916402adf8dcb141da01064289a6b\r\n\r\nI think that's the only place where something relevant changed since the last successful CI run, see:\r\n\r\n```\r\ngit diff  3a9ab8f  51aa29e src/rpc/blockchain.cpp\r\n```\r\n\r\nhttps://gist.github.com/Sjors/60c05fb3e9c47ed6d41b78fa66e76ef5\r\n\r\nIf that works, there's probably an issue with how `CHECK_NONFATAL` works.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#issuecomment-2668747128",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785"
    },
    {
      "event": "commented",
      "id": 2668757560,
      "node_id": "IC_kwDOABII586fEgI4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2668757560",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-19T14:05:44Z",
      "updated_at": "2025-02-19T14:05:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "This failure is strange. I tried to reproduce the failure from https://cirrus-ci.com/task/6207546920271872?logs=ci#L2923:\r\n\r\n```c++\r\n node0 stderr /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/optional:479: _Tp &std::_Optional_base_impl<interfaces::BlockRef, std::_Optional_base<interfaces::BlockRef>>::_M_get() [_Tp = interfaces::BlockRef, _Dp = std::_Optional_base<interfaces::BlockRef>]: Assertion 'this->_M_is_engaged()' failed. \r\n```\r\n\r\nusing gcc 13.3.0, checking out commit that failed 3872aed9d3cc0c8046272eb5d488ff5ddbe78647 and running the test that failed `test/functional/rpc_blockchain.py --v1transport` but it seemed to pass. I also didn't see any places an optional BlockRef is being referenced in the code reviewing 51aa29ede7bd9a1897f3cf240e70ef180849591d.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#issuecomment-2668757560",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785"
    },
    {
      "event": "commented",
      "id": 2668799834,
      "node_id": "IC_kwDOABII586fEqda",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2668799834",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-19T14:21:22Z",
      "updated_at": "2025-02-19T14:21:22Z",
      "author_association": "MEMBER",
      "body": "> CI failures that don't repro locally are the most tedious to nail down.\r\n\r\nIt is not possible to reliably reproduce undefined behavior, because it is undefined. My recommendation would be to just run in valgrind to spot any memory errors (and get a stacktrace). Alternatively, you can re-compile with hardened library flags, but that requires a recompilation with different flags and doesn't give a backtrace either.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#issuecomment-2668799834",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785"
    },
    {
      "event": "commented",
      "id": 2668821917,
      "node_id": "IC_kwDOABII586fEv2d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2668821917",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-19T14:29:27Z",
      "updated_at": "2025-02-19T14:29:27Z",
      "author_association": "MEMBER",
      "body": "It's unlikely to be related to starting up the node, because this happens only on the fourth `waitforblockheight` call in the test, where it's waiting for `current_height + 1`. That's the only time when it actually has to wait. It should hit the timeout after 2 milliseconds.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#issuecomment-2668821917",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785"
    },
    {
      "event": "reviewed",
      "id": 2627007370,
      "node_id": "PRR_kwDOABII586clPOK",
      "url": null,
      "actor": null,
      "commit_id": "1e078f4e02e3548bbae4bf98e9bf8104e3fc78ff",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#pullrequestreview-2627007370",
      "submitted_at": "2025-02-19T14:32:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16367261846,
      "node_id": "HRFPE_lADOABII586ojB_JzwAAAAPPkJiW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16367261846",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9aaecd2b47badc5abdd0cb433f8b612b5379675f",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/9aaecd2b47badc5abdd0cb433f8b612b5379675f",
      "created_at": "2025-02-19T15:06:59Z"
    },
    {
      "event": "commented",
      "id": 2668927555,
      "node_id": "IC_kwDOABII586fFJpD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2668927555",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-19T15:07:09Z",
      "updated_at": "2025-02-19T15:18:28Z",
      "author_association": "MEMBER",
      "body": "Perhaps on a slow machine the timeout could go negative here:\r\n\r\n```cpp\r\nauto now{std::chrono::steady_clock::now()};\r\nif (now >= deadline) break;\r\nconst MillisecondsDouble remaining{deadline - now};\r\nblock = miner.waitTipChanged(current_block.hash, remaining);\r\n```\r\n\r\nThough that seems unlikely, and I wouldn't expect it to happen consistently. In any case I added better handling for negative timeout.\r\n\r\n--- \r\n\r\nUpdate: no, deadline couldn't have gone negative",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#issuecomment-2668927555",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785"
    },
    {
      "event": "reviewed",
      "id": 2627135786,
      "node_id": "PRR_kwDOABII586clukq",
      "url": null,
      "actor": null,
      "commit_id": "505cb484ebfefbda539ac7e5e75549f8bec28026",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#pullrequestreview-2627135786",
      "submitted_at": "2025-02-19T15:12:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16367531230,
      "node_id": "HRFPE_lADOABII586ojB_JzwAAAAPPlLTe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16367531230",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9467e393281d6319b54780f5c10f93f5852c4a59",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/9467e393281d6319b54780f5c10f93f5852c4a59",
      "created_at": "2025-02-19T15:23:48Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16367578849,
      "node_id": "HRFPE_lADOABII586ojB_JzwAAAAPPlW7h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16367578849",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b74b6c95eeba57ee6f627ceae0deeb6b14eadc0c",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/b74b6c95eeba57ee6f627ceae0deeb6b14eadc0c",
      "created_at": "2025-02-19T15:26:58Z"
    },
    {
      "event": "reviewed",
      "id": 2627395741,
      "node_id": "PRR_kwDOABII586cmuCd",
      "url": null,
      "actor": null,
      "commit_id": "b74b6c95eeba57ee6f627ceae0deeb6b14eadc0c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK b74b6c95eeba57ee6f627ceae0deeb6b14eadc0c\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#pullrequestreview-2627395741",
      "submitted_at": "2025-02-19T17:10:56Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
    },
    {
      "event": "review_requested",
      "id": 16369132772,
      "node_id": "RRE_lADOABII586ojB_JzwAAAAPPrSTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16369132772",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-19T17:11:01Z",
      "requested_reviewer": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 2669343213,
      "node_id": "IC_kwDOABII586fGvHt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2669343213",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-19T17:44:04Z",
      "updated_at": "2025-02-19T17:46:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "From the PR description:\r\n\r\n> The first commit allows these three methods to be used in the GUI, by removing the `IsRPCRunning()`. This simplifies the other changes.\r\n\r\nThis currently happens in the second commit, not the first commit.\r\n\r\nI think in general PR description is a little hard to follow though. Here is how I would describe this PR:\r\n\r\n- This PR prevents `Mining` interface methods from sometimes crashing when called during startup before a tip is connected. It also makes other improvements like making more RPC methods usable from the GUI. Specifically this PR:\r\n  - Adds an `Assume` check to disallow passing negative timeout values to `Mining::waitTipChanged`\r\n  - Makes `waitfornewblock` `waitforblock` and `waitforblockheight` RPC methods usable from the GUI when `-server=1` is not set.\r\n  - Changes `Mining::waitTipChanged` to return `optional<BlockRef>` instead of `BlockRef` and return `nullopt` instead of crashing if there is a timeout or if the node is shut down before a tip is connected.\r\n  - Changes `Mining::waitTipChanged` to not time out before a tip is connected, so it is convenient and safe to call during startup, and only returns `nullopt` on early shutdowns.\r\n  - Changes `Mining::createNewBlock` to block and wait for a tip to be connected if it is called on startup instead of crashing. Also documents that it will return null on early shutdowns.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#issuecomment-2669343213",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785"
    },
    {
      "event": "unlabeled",
      "id": 16369762990,
      "node_id": "UNLE_lADOABII586ojB_JzwAAAAPPtsKu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16369762990",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-19T18:00:30Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2669414096,
      "node_id": "IC_kwDOABII586fHAbQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2669414096",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-19T18:13:17Z",
      "updated_at": "2025-02-19T18:13:17Z",
      "author_association": "MEMBER",
      "body": "Addressed feedback and updated the PR description.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#issuecomment-2669414096",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16369920648,
      "node_id": "HRFPE_lADOABII586ojB_JzwAAAAPPuSqI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16369920648",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9725cd6a5c20302da3dcae8fc1156458537ce1df",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/9725cd6a5c20302da3dcae8fc1156458537ce1df",
      "created_at": "2025-02-19T18:13:17Z"
    },
    {
      "event": "reviewed",
      "id": 2629174152,
      "node_id": "PRR_kwDOABII586ctgOI",
      "url": null,
      "actor": null,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 9725cd6a5c20302da3dcae8fc1156458537ce1df",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#pullrequestreview-2629174152",
      "submitted_at": "2025-02-20T09:13:54Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
    },
    {
      "event": "review_requested",
      "id": 16378649760,
      "node_id": "RRE_lADOABII586ojB_JzwAAAAPQPlyg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16378649760",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-20T09:13:59Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2629683943,
      "node_id": "PRR_kwDOABII586cvcrn",
      "url": null,
      "actor": null,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 9725cd6a5c20302da3dcae8fc1156458537ce1df. Just minor suggestions implemented since last review: changing comments and swapping current_block / block in waitfornewblock.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#pullrequestreview-2629683943",
      "submitted_at": "2025-02-20T12:20:20Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY5Y2Y4YmQwYWI3N2NkZjEyNWQ3ODM4NDE5N2E1YzQ2NjU3N2ZkOGY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f9cf8bd0ab77cdf125d78384197a5c466577fd8f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f9cf8bd0ab77cdf125d78384197a5c466577fd8f",
      "tree": {
        "sha": "410f2113847a98fdf3e4d58bea6b23ff5e0c2a6b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/410f2113847a98fdf3e4d58bea6b23ff5e0c2a6b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 410f2113847a98fdf3e4d58bea6b23ff5e0c2a6b\nparent c20a5ce106be716a503bcf615a1900ba8c635430\nauthor Sjors Provoost <sjors@sprovoost.nl> 1739976875 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1741864337 +0100\n\nHandle negative timeout for waitTipChanged()\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmfSvZEACgkQV/+b28ww\nEAkzNw/9HLkyNrxMmaicTlGmPYYZTE8Lz74Lluk3oicjDNfssOJVxg3X9DYpjsn3\nq9u1v7BoNdSHBYFf+ZA/SlpfOzcge9JC06RNDBvgYhY5lHXv/uvvN7jwysqsRG1b\nNkQGmQEegKlUL/PI/slzXoLhFi5L+KZvUEricNvKdhqXZr0uvyiMg562frxiv/E3\n2cX3oNW16oVYGUvQdsaOgY4yDMACvLW7IywDHqG8jY/LXvEjijgsQJpbQPDl1e1a\ng12ODsYuP5MJpGbo3NMviFmi0IqeRWhz5ySY7PakGxT0vJXi3zFYeT7TYX1HUz0p\njEDPWBPUrh39ks8SrF7uiPBm4O/lNcZnjhGNTSCKkOgqwwmKtu7qj7rf50rZtQ2i\nGp8hcZxgxaNKnddReV+UD2mrbawN1RL4v54wrfk0OQOFro+wuWoO+mV8oamA9a+a\n5eybm9CmfqwmeeM5r/9Z9Tc121NC6doo1XAtt8PjdhDw9RwQpXa8jbMdUQ8EnEm3\nwZxwP2AsD7kl+sagczfbD5l3t3KW3LYNlAmXRkub5ND3wejZKloVEf35rn1tMcOV\nhBlQdsZLHXrjWmNo63H/0jb9GzTtmfwqLcZVAkGOykbzWDtE5EL+wfuF5zJvRRZi\npf7fvOBf3r5OL4kahhNlq9LEX+B9DGNYLXvVXufpR51atZMB9h4=\n=CqKW\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c20a5ce106be716a503bcf615a1900ba8c635430",
          "sha": "c20a5ce106be716a503bcf615a1900ba8c635430",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c20a5ce106be716a503bcf615a1900ba8c635430"
        }
      ],
      "message": "Handle negative timeout for waitTipChanged()",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2025-03-13T11:12:17Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2025-02-19T14:54:35Z"
      },
      "sha": "f9cf8bd0ab77cdf125d78384197a5c466577fd8f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGEzYmY0MzM0M2YwZDg4ZWM5ZmY4NDdhNTVmZDQ4NzQ1YWVlYmI0Mjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a3bf43343f0d88ec9ff847a55fd48745aeebb429",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a3bf43343f0d88ec9ff847a55fd48745aeebb429",
      "tree": {
        "sha": "1afc8565edc3646ff1cc69ff9ed6cfce95be3140",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1afc8565edc3646ff1cc69ff9ed6cfce95be3140"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1afc8565edc3646ff1cc69ff9ed6cfce95be3140\nparent f9cf8bd0ab77cdf125d78384197a5c466577fd8f\nauthor Sjors Provoost <sjors@sprovoost.nl> 1739965443 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1741864337 +0100\n\nrpc: drop unneeded IsRPCRunning() guards\n\nThis was preventing the (hidden) waitfornewblock, waitforblock and\nwaitforblockheight methods from being used in the GUI.\n\nThe check was added in d6a5dc4a2eaa0d7348804254ca09e75fc3a858ab\nwhen these RPC methods were first introduced.\n\nThey could have been dropped when dca923150e3ac10a57c23a7e29e76516d32ec10d\nrefactored these methods to use waitTipChanged(), which already\nchecks for shutdown.\n\nMaking this change now simplifies the next commit.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmfSvZEACgkQV/+b28ww\nEAndZxAAvuWfxxFlZwAMOhQsozy12TLx6O081yiqlQnYiRZxe45wtaao9MqiVyCL\nNWvRRYqL+KDpYTD4UnEMo7PTiR6O8n+zi3RUmA53O5c79t9A6K+hzGlae7a4oVkx\nNFEXdBcGrKjr/WvEWkQNNCGaKRsqpPhYXn6SQ1QX9KA9H2ozT/UjLvWouSyADmm2\ntxBiTcn1eQBOc80JZVez/9FoaOsinaCSyz2oAjLmPXSER6JQwKNtLP0EVzjVW6L6\nbc8ICdMZHxeV8s0HYJC6YMSELRt3zV6tEr8mABqQnUEnkQPV6vVPpWzZx1LCo+4Q\n5DZyBQGx04FVQtl1E65txL2I9Xc0Fndf4LU6i+33oOG3ZvANbfmugUuIF7SiXW7q\n5tA4eyXEjJGdVPhE9WwwK3W5nrMCnMfHvZe/eD6wURo80L0rZ4YJIYF3OkgYy2+C\n9BxHDD55JLK7MjGTWLZJH30AkVArAksrrUyPdeMxNx/iaIRj1rPvexjglxnD1qia\n5HNImxwNTKBBGuExWF9duNljUSgBQ913JbS8KascD7YVYR4nOOXBXUrKlTjiv1we\nvujphtsZIgn6NlLLta2cDymXLuGDnUXHXgoEkuy8aSoMRm0z8mPj0RIKDvg0DMNM\nEFyRQM+n+Iky4susgKCsr9Wcud0JsLj/ChYDrzsL0+h9uNB/Bgo=\n=dnc4\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f9cf8bd0ab77cdf125d78384197a5c466577fd8f",
          "sha": "f9cf8bd0ab77cdf125d78384197a5c466577fd8f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f9cf8bd0ab77cdf125d78384197a5c466577fd8f"
        }
      ],
      "message": "rpc: drop unneeded IsRPCRunning() guards\n\nThis was preventing the (hidden) waitfornewblock, waitforblock and\nwaitforblockheight methods from being used in the GUI.\n\nThe check was added in d6a5dc4a2eaa0d7348804254ca09e75fc3a858ab\nwhen these RPC methods were first introduced.\n\nThey could have been dropped when dca923150e3ac10a57c23a7e29e76516d32ec10d\nrefactored these methods to use waitTipChanged(), which already\nchecks for shutdown.\n\nMaking this change now simplifies the next commit.",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2025-03-13T11:12:17Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2025-02-19T11:44:03Z"
      },
      "sha": "a3bf43343f0d88ec9ff847a55fd48745aeebb429"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY0YTI3OTVmZDRmZTIyM2E1NTU2NGMzMWU5ZmEzNjI2NGU3OWFjMjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/64a2795fd4fe223a55564c31e9fa36264e79ac22",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/64a2795fd4fe223a55564c31e9fa36264e79ac22",
      "tree": {
        "sha": "7286b9d62e13245c0c48f186bbcad24be49934b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7286b9d62e13245c0c48f186bbcad24be49934b1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7286b9d62e13245c0c48f186bbcad24be49934b1\nparent a3bf43343f0d88ec9ff847a55fd48745aeebb429\nauthor Sjors Provoost <sjors@sprovoost.nl> 1739957323 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1741864337 +0100\n\nrpc: handle shutdown during long poll and wait methods\n\nThe waitTipChanged() now returns nullopt if the node is shutting down.\n\nPreviously it would return the last known tip during shutdown, but\nthis creates an ambiguous circumstance in the scenario where the\nnode is started and quickly shutdown, before notifications().TipBlock()\nis set.\n\nThe getblocktemplate, waitfornewblock and waitforblockheight RPC\nare updated to handle this. Existing behavior is preserved.\n\nCo-authored-by: Ryan Ofsky <ryan@ofsky.org>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmfSvZEACgkQV/+b28ww\nEAloCRAArNBTpcsFvULe+ces1nn0KfAa66VL4BQvJ/580GPB1qQcT0lMs8U/vGrw\n90UAUkd+bGVm9xi56zN5dK833l/hBATaKMW7BU9f8omqTnVo+s5h0wp9/prmei4V\nIc2lHIUpajVMAOxAN51w+42lpDax+BiTz7X4H3JDV86RbHqmTtM0Rxnn0oFRPa5n\nyt9r/QAQwm5u13xNL2Wd0TAQEfevtuMv/c0wFfmptWxGDDlCEfSJTSzRYYeHL5Hn\nDMgPp2W5wRZWNwXzICnA3St3V2Kf6NjWg3nJ1z3yvRQeIxtcuwFk/EW2VGYOq+0P\nlwW9yE1FGR7cMgUi6yRAnVCb2EEhzOgW374XiKs6yECy+CsuTd3QTqAuPYrywMC1\nTguUzJtzTMzd/JEfqJBkT4tFO7LS/nUBeTbd5SfhCrE4ov/ywj5KZPLOFGNqfIBu\nBPbYB1kt7dNJKM333zQ1a0tSUeGfB/Jh/aiYrYCCV96f8XW5EJSq6+dnAXkjZD3g\nUxHBPGv66lakavqiHOUh8alvVKhYF7elq67Tynxc+dyT0P/cyZhLHfPlHWD3iqOf\n4Ro10VckKF69GwUsnec1r0KB5blgUc8EZ+Cj5gDmKtF2AvF855ru0P/DK0jl+mv6\nuSbQ0i3R8VU3/n//II3z85O1Ep+dvdJvFqNJf2QO2hbTn2IUfQ0=\n=nwQt\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a3bf43343f0d88ec9ff847a55fd48745aeebb429",
          "sha": "a3bf43343f0d88ec9ff847a55fd48745aeebb429",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a3bf43343f0d88ec9ff847a55fd48745aeebb429"
        }
      ],
      "message": "rpc: handle shutdown during long poll and wait methods\n\nThe waitTipChanged() now returns nullopt if the node is shutting down.\n\nPreviously it would return the last known tip during shutdown, but\nthis creates an ambiguous circumstance in the scenario where the\nnode is started and quickly shutdown, before notifications().TipBlock()\nis set.\n\nThe getblocktemplate, waitfornewblock and waitforblockheight RPC\nare updated to handle this. Existing behavior is preserved.\n\nCo-authored-by: Ryan Ofsky <ryan@ofsky.org>",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2025-03-13T11:12:17Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2025-02-19T09:28:43Z"
      },
      "sha": "64a2795fd4fe223a55564c31e9fa36264e79ac22"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRiMTRjYTM1NTZjYTc5MjU0NmJmNDM0M2ZlYjczMzI3MTMzMzY5MGY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/db14ca3556ca792546bf4343feb733271333690f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/db14ca3556ca792546bf4343feb733271333690f",
      "tree": {
        "sha": "6f5b57278e58355737fc2e2b13f551fdd485ff46",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6f5b57278e58355737fc2e2b13f551fdd485ff46"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 6f5b57278e58355737fc2e2b13f551fdd485ff46\nparent 64a2795fd4fe223a55564c31e9fa36264e79ac22\nauthor Sjors Provoost <sjors@sprovoost.nl> 1738602660 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1741864337 +0100\n\nHave createNewBlock() wait for a tip\n\nAdditionally it returns null if the node started to shutdown before TipBlock() was set.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmfSvZEACgkQV/+b28ww\nEAkUjA/+Mk2PG2exi3cktK7r9lETYm+VCJbMIBnsFk/bA12su3vNitgdKdQi3frH\n3GL7+Hc9A0YkKSPOwS/H+cb4YwI+4iavE/u5W/GGs04euPe9O1DUNMniGmGZipv1\nBAcH0IjYPWiLu7xyoqfi45hRY+K5Qjdvqm1VQcQxmXy51FCJELYG6LQ16tfhGDYp\nbkJBVsLjGGykRPfLv7o18S1q9pJ7YWZ62+5iYCsRIuRFIeLBJx9ke3+jlRX/fEwU\nUgnmFSQ31JBy4W3fCespo8j+vuhC5LNBSccqx3Ct1J4qvrlJKaIwUhVLbs0P8InE\n44m5uVgokPNgtmCILCuF1yxl0mT27msN3hmSpPMlghoywT6irSWILqDKr4ul8RLs\nDy8L7nHXHzWw6omXAXJsDSfhGjreuTorlOk/sA9zdV0m2aoRqQrsxjkWy/9cAk0x\nvayQ86fP/C64Rv3Te84Uk9xuLoGt2IUYI83kyN5EnbuS8BsIvB456zdWu4SDAfcK\nxKWsLTkGW0roGycg8b+rAfMqF5EgS0ox7l6GC24izgjtf6NohDiL7Xo6l4ve6ylD\nTi9W/mfotvJNWBOo0AkyRy+qNw8d0jq1CJbgGMdXy9va5KnqMQdupJZW2XrcfbKA\nHLqQuW6eXQNArkUAeZK2+mAfIAvKeUanX3k6af+XlFv4HlDnsHU=\n=b9e/\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/64a2795fd4fe223a55564c31e9fa36264e79ac22",
          "sha": "64a2795fd4fe223a55564c31e9fa36264e79ac22",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/64a2795fd4fe223a55564c31e9fa36264e79ac22"
        }
      ],
      "message": "Have createNewBlock() wait for a tip\n\nAdditionally it returns null if the node started to shutdown before TipBlock() was set.",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2025-03-13T11:12:17Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2025-02-03T17:11:00Z"
      },
      "sha": "db14ca3556ca792546bf4343feb733271333690f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNjMTAwMWYzYmYxN2IzMTUxMmMwNWZiMzU5ZTA5NDgzYTA3ZmIyYTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "tree": {
        "sha": "bc904c25b1fc5b7e1137b56091cf62c7c90122c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bc904c25b1fc5b7e1137b56091cf62c7c90122c4"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree bc904c25b1fc5b7e1137b56091cf62c7c90122c4\nparent db14ca3556ca792546bf4343feb733271333690f\nauthor Sjors Provoost <sjors@sprovoost.nl> 1739958715 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1741864337 +0100\n\nrpc: clarify longpoll behavior\n\nMove the comparison to hashWatchedChain inside the while loop.\n\nAlthough this early return prevents the GetTransactionsUpdated()\ncall in cases where the tip updates, it's only done to improve\nreadability. The check itself is very cheap (although a more\nuseful check might not be).\n\nAlso add code comments.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmfSvZEACgkQV/+b28ww\nEAnSYBAApFZ4xqdSg/u0O8dxGQ5lB5k84bsX02IBA76kssqaUwyisqU4Ooqrys7R\nKC2hsyOAeeLKEv5L+Y0BLnN5NkgRJwEgmEZkJsEoI/oOZZmW/jn5h2lFexLzOyVf\nhuXSPndQ65mKi2UtwTSmgV9cwLDpNmBjFsK8/42KERSG2jj6KzLJ76RCmk++3r2x\n47CL3iZaPWfMFIK6XnBg0FQe2u1FqafK53TPvLltc0Faq3FmIx856Gtv8g42xSTB\n10eeAYGw9Ozaec6EhYuZkMiOwvcf1a4ODvNasKps846q6hpRa3cvCWzpP915W8tg\neKjtxV58qiGaOSYPf/uO3etXEhYc9z2FWha4DdVyRWVfWtslZ5wKx1PeknOAFa99\nxutujqxRxhDsiaqSSReNjsD6ag7Lmf1bOEEAxTBkDJSxHtcKigExJpCaJJh/OEZ5\nv1IgdcohanqLwR3TI0Ss3N89hIpUMCNu/2z9p6xtwMSz5uLsIK6Siw6Y2NWn0YQr\naONgq1gq3o6a7vCda7zYrYWOB5iHzrrZ6MXI+lemiYFJPZRYJ7RJuaP1e2IuY+vx\nhRH8qMi0jUvDRuVUR3qfq4Fr25eB0frY7VWeuEDf2YT5sT1f/pjyl2eiUFM5sB0y\n3U8610VkRglvK02mdlTwaIzk1gqslrjYBE4QvCY/nYqSRE0JKSk=\n=SG+a\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/db14ca3556ca792546bf4343feb733271333690f",
          "sha": "db14ca3556ca792546bf4343feb733271333690f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/db14ca3556ca792546bf4343feb733271333690f"
        }
      ],
      "message": "rpc: clarify longpoll behavior\n\nMove the comparison to hashWatchedChain inside the while loop.\n\nAlthough this early return prevents the GetTransactionsUpdated()\ncall in cases where the tip updates, it's only done to improve\nreadability. The check itself is very cheap (although a more\nuseful check might not be).\n\nAlso add code comments.",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2025-03-13T11:12:17Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2025-02-19T09:51:55Z"
      },
      "sha": "cc1001f3bf17b31512c05fb359e09483a07fb2a3"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16733960077,
      "node_id": "HRFPE_lADOABII586ojB_JzwAAAAPla_eN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16733960077",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "commit_url": "https://api.github.com/repos/Sjors/bitcoin/commits/cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "created_at": "2025-03-13T11:16:44Z"
    },
    {
      "event": "commented",
      "id": 2720894982,
      "node_id": "IC_kwDOABII586iLZAG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2720894982",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T11:16:49Z",
      "updated_at": "2025-03-13T11:16:49Z",
      "author_association": "MEMBER",
      "body": "Rebased after #31283. There was no conflict, but the PR description makes reference to `waitNext()` so this should make it easier to (re-)review with that context in mind.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#issuecomment-2720894982",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31785"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1939533024",
      "pull_request_review_id": 2590179163,
      "id": 1939533024,
      "node_id": "PRRC_kwDOABII585zmuzg",
      "diff_hunk": "@@ -989,6 +989,12 @@ class MinerImpl : public Mining\n \n     std::unique_ptr<BlockTemplate> createNewBlock(const BlockCreateOptions& options) override\n     {\n+        {\n+            // Ensure m_tip_block is set so consumers of BlockTemplate can rely on that.\n+            WAIT_LOCK(notifications().m_tip_block_mutex, lock);\n+            if (!notifications().TipBlock()) return nullptr;",
      "path": "src/node/interfaces.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "af85987a169787205eeac6854f09cbe66713f1c9",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If it's not too difficult, can we reproduce this with a test?",
      "created_at": "2025-02-03T15:03:32Z",
      "updated_at": "2025-02-03T15:03:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1939533024",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1939533024"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 995,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1939540523",
      "pull_request_review_id": 2590193691,
      "id": 1939540523,
      "node_id": "PRRC_kwDOABII585zmwor",
      "diff_hunk": "@@ -989,6 +989,12 @@ class MinerImpl : public Mining\n \n     std::unique_ptr<BlockTemplate> createNewBlock(const BlockCreateOptions& options) override\n     {\n+        {\n+            // Ensure m_tip_block is set so consumers of BlockTemplate can rely on that.\n+            WAIT_LOCK(notifications().m_tip_block_mutex, lock);\n+            if (!notifications().TipBlock()) return nullptr;",
      "path": "src/node/interfaces.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "af85987a169787205eeac6854f09cbe66713f1c9",
      "in_reply_to_id": 1939533024,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This depends on the node initialization (and shutdown) sequence. I'm not sure how to reproduce that in a test. And we might change that sequence in a way that this never happens in the first place.",
      "created_at": "2025-02-03T15:06:16Z",
      "updated_at": "2025-02-03T15:06:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1939540523",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1939540523"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 995,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1939572655",
      "pull_request_review_id": 2590249166,
      "id": 1939572655,
      "node_id": "PRRC_kwDOABII585zm4ev",
      "diff_hunk": "@@ -989,6 +989,12 @@ class MinerImpl : public Mining\n \n     std::unique_ptr<BlockTemplate> createNewBlock(const BlockCreateOptions& options) override",
      "path": "src/node/interfaces.cpp",
      "position": 42,
      "original_position": 2,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "af85987a169787205eeac6854f09cbe66713f1c9",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would be good to update the docs, because `CreateNewBlock` never returns null and always returns a block.",
      "created_at": "2025-02-03T15:21:24Z",
      "updated_at": "2025-02-03T15:21:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1939572655",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1939572655"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1103,
      "original_line": 1103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1939755012",
      "pull_request_review_id": 2590556365,
      "id": 1939755012,
      "node_id": "PRRC_kwDOABII585znlAE",
      "diff_hunk": "@@ -989,6 +989,12 @@ class MinerImpl : public Mining\n \n     std::unique_ptr<BlockTemplate> createNewBlock(const BlockCreateOptions& options) override",
      "path": "src/node/interfaces.cpp",
      "position": 42,
      "original_position": 2,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "af85987a169787205eeac6854f09cbe66713f1c9",
      "in_reply_to_id": 1939572655,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The latest push has `waitTipChanged` and `createNewBlock` return null if the node shuts down, and documentation is updated to reflect that.",
      "created_at": "2025-02-03T17:17:52Z",
      "updated_at": "2025-02-03T17:17:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1939755012",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1939755012"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1103,
      "original_line": 1103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952303154",
      "pull_request_review_id": 2611342025,
      "id": 1952303154,
      "node_id": "PRRC_kwDOABII5850Xcgy",
      "diff_hunk": "@@ -81,15 +81,21 @@ class Mining\n      * @param[in] current_tip block hash of the current chain tip. Function waits\n      *                        for the chain tip to differ from this.\n      * @param[in] timeout     how long to wait for a new tip\n-     * @returns               Hash and height of the current chain tip after this call.\n+     *\n+     * @retval BlockRef hash and height of the current chain tip after this call.\n+     * @retval empty if node is shutting down",
      "path": "src/interfaces/mining.h",
      "position": null,
      "original_position": 7,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n     * @retval std::nullopt if the given `timeout` passes or the node is shut down before the tip is connected (there is no tip during startup).\r\n```",
      "created_at": "2025-02-12T09:41:00Z",
      "updated_at": "2025-02-12T10:56:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1952303154",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952303154"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952318566",
      "pull_request_review_id": 2611342025,
      "id": 1952318566,
      "node_id": "PRRC_kwDOABII5850XgRm",
      "diff_hunk": "@@ -971,24 +971,32 @@ class MinerImpl : public Mining\n         return BlockRef{tip->GetBlockHash(), tip->nHeight};\n     }\n \n-    BlockRef waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n+    std::optional<BlockRef> waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n     {\n         if (timeout > std::chrono::years{100}) timeout = std::chrono::years{100}; // Upper bound to avoid UB in std::chrono\n+        std::optional<uint256> tip_hash;\n         {\n             WAIT_LOCK(notifications().m_tip_block_mutex, lock);\n             notifications().m_tip_block_cv.wait_for(lock, timeout, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\n                 // We need to wait for m_tip_block to be set AND for the value\n                 // to differ from the current_tip value.\n-                return (notifications().TipBlock() && notifications().TipBlock() != current_tip) || chainman().m_interrupt;\n+                tip_hash = notifications().TipBlock();\n+                return (tip_hash && tip_hash != current_tip) || chainman().m_interrupt;\n             });\n         }\n+\n+        if (!tip_hash || chainman().m_interrupt) return {};\n+\n         // Must release m_tip_block_mutex before locking cs_main, to avoid deadlocks.\n         LOCK(::cs_main);\n-        return BlockRef{chainman().ActiveChain().Tip()->GetBlockHash(), chainman().ActiveChain().Tip()->nHeight};\n+        return BlockRef{*Assume(tip_hash), Assume(chainman().ActiveChain().Tip())->nHeight};",
      "path": "src/node/interfaces.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Just before the lock and return there was a period when both `m_tip_block_mutex` and `cs_main` were unlocked, so `tip_hash` may be stale here. So this could return an inconsistent hash+height - the hash of one block and the height of another. The previous code was ok because it retrieved both the hash and the height from `chainman().ActiveChain().Tip()` under `cs_main`. I think this will fix it:\r\n\r\n```diff\r\n-        LOCK(::cs_main);\r\n-        return BlockRef{*Assume(tip_hash), Assume(chainman().ActiveChain().Tip())->nHeight};\r\n+        return getTip();\r\n```",
      "created_at": "2025-02-12T09:50:25Z",
      "updated_at": "2025-02-12T10:56:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1952318566",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952318566"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 987,
      "start_side": "LEFT",
      "line": null,
      "original_line": 992,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952373326",
      "pull_request_review_id": 2611342025,
      "id": 1952373326,
      "node_id": "PRRC_kwDOABII5850XtpO",
      "diff_hunk": "@@ -286,9 +287,13 @@ static RPCHelpMan waitfornewblock()\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     Mining& miner = EnsureMining(node);\n \n-    auto block{CHECK_NONFATAL(miner.getTip()).value()};\n+    BlockRef block{CHECK_NONFATAL(miner.getTip()).value()};\n     if (IsRPCRunning()) {\n-        block = timeout ? miner.waitTipChanged(block.hash, std::chrono::milliseconds(timeout)) : miner.waitTipChanged(block.hash);\n+        std::optional<BlockRef> maybe_block{timeout ? miner.waitTipChanged(block.hash, std::chrono::milliseconds(timeout)) : miner.waitTipChanged(block.hash)};\n+        // Return new block unless the node is shutting down\n+        if (maybe_block) {\n+            block = *CHECK_NONFATAL(maybe_block);\n+        }\n     }",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Given that \"no tip\" is expected here (unlikely but is not a \"programming logic error\"), maybe avoid `CHECK_NONFATAL()` and use `JSONRPCError`:\r\n\r\n```cpp\r\nstd::optional<BlockRef> old_block{miner.getTip()};\r\nstd::optional<BlockRef> new_block;\r\nif (IsRPCRunning()) {\r\n    const uint256 h{old_block.has_value() ? old_block->hash : uint256::ZERO};\r\n    new_block = timeout > 0 ? miner.waitTipChanged(h, std::chrono::milliseconds(timeout)) : miner.waitTipChanged(h);\r\n}\r\n\r\nif (!new_block.has_value()) {\r\n    throw JSONRPCError(RPC_CLIENT_NOT_CONNECTED, \"No tip within timeout or shutting down\");\r\n}\r\n```",
      "created_at": "2025-02-12T10:23:31Z",
      "updated_at": "2025-02-12T10:56:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1952373326",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952373326"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 289,
      "start_side": "LEFT",
      "line": null,
      "original_line": 301,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952397601",
      "pull_request_review_id": 2611342025,
      "id": 1952397601,
      "node_id": "PRRC_kwDOABII5850Xzkh",
      "diff_hunk": "@@ -335,13 +340,18 @@ static RPCHelpMan waitforblock()\n     auto block{CHECK_NONFATAL(miner.getTip()).value()};\n     const auto deadline{std::chrono::steady_clock::now() + 1ms * timeout};\n     while (IsRPCRunning() && block.hash != hash) {\n+        std::optional<BlockRef> maybe_block;\n         if (timeout) {\n             auto now{std::chrono::steady_clock::now()};\n             if (now >= deadline) break;\n             const MillisecondsDouble remaining{deadline - now};\n-            block = miner.waitTipChanged(block.hash, remaining);\n+            maybe_block = miner.waitTipChanged(block.hash, remaining);\n         } else {\n-            block = miner.waitTipChanged(block.hash);\n+            maybe_block = miner.waitTipChanged(block.hash);\n+        }\n+        // Return new block unless the node is shutting down\n+        if (maybe_block) {\n+            block = *CHECK_NONFATAL(maybe_block);\n         }\n     }",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Similar here:\r\n\r\n```cpp\r\nstd::optional<BlockRef> block{miner.getTip()};\r\nconst auto deadline{std::chrono::steady_clock::now() + 1ms * timeout};\r\nwhile (IsRPCRunning() && (!block.has_value() || block->hash != hash)) {\r\n    const uint256 h{block.has_value() ? block->hash : uint256::ZERO};\r\n    if (timeout) {\r\n        const auto now{std::chrono::steady_clock::now()};\r\n        if (now >= deadline) break;\r\n        const MillisecondsDouble remaining{deadline - now};\r\n        block = miner.waitTipChanged(h, remaining);\r\n    } else {\r\n        block = miner.waitTipChanged(h);\r\n    }\r\n}\r\n\r\nif (!block.has_value()) {\r\n    JSONRPCError(RPC_CLIENT_NOT_CONNECTED, \"No tip within timeout or shutting down\");\r\n}\r\n```",
      "created_at": "2025-02-12T10:39:12Z",
      "updated_at": "2025-02-12T10:56:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1952397601",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952397601"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 340,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 356,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952403604",
      "pull_request_review_id": 2611342025,
      "id": 1952403604,
      "node_id": "PRRC_kwDOABII5850X1CU",
      "diff_hunk": "@@ -801,7 +802,11 @@ static RPCHelpMan getblocktemplate()\n         {\n             MillisecondsDouble checktxtime{std::chrono::minutes(1)};\n             while (tip == hashWatchedChain && IsRPCRunning()) {\n-                tip = miner.waitTipChanged(hashWatchedChain, checktxtime).hash;\n+                std::optional<BlockRef> maybe_tip{miner.waitTipChanged(hashWatchedChain, checktxtime)};\n+                if (!maybe_tip) {\n+                    throw JSONRPCError(RPC_CLIENT_NOT_CONNECTED, \"Shutting down\");\n+                };\n+                tip = CHECK_NONFATAL(maybe_tip)->hash;\n                 // Timeout: Check transactions for update",
      "path": "src/rpc/mining.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Why is comment saying \"Timeout: ...\" when we could be here if the tip changed (no timeout)? Is the comment wrong?",
      "created_at": "2025-02-12T10:43:12Z",
      "updated_at": "2025-02-12T10:56:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1952403604",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952403604"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 810,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952406392",
      "pull_request_review_id": 2611342025,
      "id": 1952406392,
      "node_id": "PRRC_kwDOABII5850X1t4",
      "diff_hunk": "@@ -801,7 +802,11 @@ static RPCHelpMan getblocktemplate()\n         {\n             MillisecondsDouble checktxtime{std::chrono::minutes(1)};\n             while (tip == hashWatchedChain && IsRPCRunning()) {\n-                tip = miner.waitTipChanged(hashWatchedChain, checktxtime).hash;\n+                std::optional<BlockRef> maybe_tip{miner.waitTipChanged(hashWatchedChain, checktxtime)};\n+                if (!maybe_tip) {\n+                    throw JSONRPCError(RPC_CLIENT_NOT_CONNECTED, \"Shutting down\");",
      "path": "src/rpc/mining.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe elaborate the message that we could be here if no tip was connected within the timeout: \"No tip within timeout or shutting down\".",
      "created_at": "2025-02-12T10:45:13Z",
      "updated_at": "2025-02-12T10:56:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1952406392",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952406392"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 807,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952410800",
      "pull_request_review_id": 2611342025,
      "id": 1952410800,
      "node_id": "PRRC_kwDOABII5850X2yw",
      "diff_hunk": "@@ -801,7 +802,11 @@ static RPCHelpMan getblocktemplate()\n         {\n             MillisecondsDouble checktxtime{std::chrono::minutes(1)};\n             while (tip == hashWatchedChain && IsRPCRunning()) {\n-                tip = miner.waitTipChanged(hashWatchedChain, checktxtime).hash;\n+                std::optional<BlockRef> maybe_tip{miner.waitTipChanged(hashWatchedChain, checktxtime)};\n+                if (!maybe_tip) {\n+                    throw JSONRPCError(RPC_CLIENT_NOT_CONNECTED, \"Shutting down\");\n+                };\n+                tip = CHECK_NONFATAL(maybe_tip)->hash;",
      "path": "src/rpc/mining.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: I think it is redundant to check that `maybe_tip` has value with `CHECK_NONFATAL()` just after `if (!maybe_tip)`. That's like:\r\n\r\n```\r\nif (A) {\r\n     throw ...\r\n}\r\nassert(!A);\r\n```\r\n\r\n`tip = maybe_tip->hash;` seems fine as well.",
      "created_at": "2025-02-12T10:48:10Z",
      "updated_at": "2025-02-12T10:56:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1952410800",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952410800"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 806,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 826,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952414685",
      "pull_request_review_id": 2611342025,
      "id": 1952414685,
      "node_id": "PRRC_kwDOABII5850X3vd",
      "diff_hunk": "@@ -971,24 +971,32 @@ class MinerImpl : public Mining\n         return BlockRef{tip->GetBlockHash(), tip->nHeight};\n     }\n \n-    BlockRef waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n+    std::optional<BlockRef> waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n     {\n         if (timeout > std::chrono::years{100}) timeout = std::chrono::years{100}; // Upper bound to avoid UB in std::chrono\n+        std::optional<uint256> tip_hash;\n         {\n             WAIT_LOCK(notifications().m_tip_block_mutex, lock);\n             notifications().m_tip_block_cv.wait_for(lock, timeout, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\n                 // We need to wait for m_tip_block to be set AND for the value\n                 // to differ from the current_tip value.\n-                return (notifications().TipBlock() && notifications().TipBlock() != current_tip) || chainman().m_interrupt;\n+                tip_hash = notifications().TipBlock();\n+                return (tip_hash && tip_hash != current_tip) || chainman().m_interrupt;\n             });\n         }\n+\n+        if (!tip_hash || chainman().m_interrupt) return {};\n+\n         // Must release m_tip_block_mutex before locking cs_main, to avoid deadlocks.\n         LOCK(::cs_main);\n-        return BlockRef{chainman().ActiveChain().Tip()->GetBlockHash(), chainman().ActiveChain().Tip()->nHeight};\n+        return BlockRef{*Assume(tip_hash), Assume(chainman().ActiveChain().Tip())->nHeight};\n     }\n \n     std::unique_ptr<BlockTemplate> createNewBlock(const BlockCreateOptions& options) override\n     {\n+        // Ensure m_tip_block is set so consumers of BlockTemplate can rely on that.\n+        if (!waitTipChanged(uint256::ZERO, MillisecondsDouble::max())) return {};",
      "path": "src/node/interfaces.cpp",
      "position": 45,
      "original_position": 31,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The default for the timeout argument is `MillisecondsDouble::max()`, so:\r\n\r\n```suggestion\r\n        if (!waitTipChanged(uint256::ZERO)) return {};\r\n```",
      "created_at": "2025-02-12T10:50:52Z",
      "updated_at": "2025-02-12T10:56:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1952414685",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952414685"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1106,
      "original_line": 1106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952422440",
      "pull_request_review_id": 2611342025,
      "id": 1952422440,
      "node_id": "PRRC_kwDOABII5850X5oo",
      "diff_hunk": "@@ -971,24 +971,32 @@ class MinerImpl : public Mining\n         return BlockRef{tip->GetBlockHash(), tip->nHeight};\n     }",
      "path": "src/node/interfaces.cpp",
      "position": 2,
      "original_position": 2,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The message of the first commit has a line that is 211 chars. Would be nice to use the [50/72 rule](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html) in commit messages.\r\n",
      "created_at": "2025-02-12T10:54:58Z",
      "updated_at": "2025-02-12T10:56:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1952422440",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952422440"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1071,
      "original_line": 1071,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952424790",
      "pull_request_review_id": 2611342025,
      "id": 1952424790,
      "node_id": "PRRC_kwDOABII5850X6NW",
      "diff_hunk": "@@ -971,24 +971,32 @@ class MinerImpl : public Mining\n         return BlockRef{tip->GetBlockHash(), tip->nHeight};",
      "path": "src/node/interfaces.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit message of ad3af401c19b8d05ce69011a359db3090b7018e1 `rpc: handle shutdown during long poll and wait methods`:\r\n\r\n```diff\r\n- getblocktemplate,  waitfornewblock\r\n+ getblocktemplate, waitfornewblock\r\n```",
      "created_at": "2025-02-12T10:56:29Z",
      "updated_at": "2025-02-12T10:56:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1952424790",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952424790"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1070,
      "original_line": 1070,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952737128",
      "pull_request_review_id": 2612074044,
      "id": 1952737128,
      "node_id": "PRRC_kwDOABII5850ZGdo",
      "diff_hunk": "@@ -971,24 +971,32 @@ class MinerImpl : public Mining\n         return BlockRef{tip->GetBlockHash(), tip->nHeight};\n     }\n \n-    BlockRef waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n+    std::optional<BlockRef> waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n     {\n         if (timeout > std::chrono::years{100}) timeout = std::chrono::years{100}; // Upper bound to avoid UB in std::chrono\n+        std::optional<uint256> tip_hash;\n         {\n             WAIT_LOCK(notifications().m_tip_block_mutex, lock);\n             notifications().m_tip_block_cv.wait_for(lock, timeout, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\n                 // We need to wait for m_tip_block to be set AND for the value\n                 // to differ from the current_tip value.\n-                return (notifications().TipBlock() && notifications().TipBlock() != current_tip) || chainman().m_interrupt;\n+                tip_hash = notifications().TipBlock();\n+                return (tip_hash && tip_hash != current_tip) || chainman().m_interrupt;\n             });\n         }\n+\n+        if (!tip_hash || chainman().m_interrupt) return {};\n+\n         // Must release m_tip_block_mutex before locking cs_main, to avoid deadlocks.\n         LOCK(::cs_main);\n-        return BlockRef{chainman().ActiveChain().Tip()->GetBlockHash(), chainman().ActiveChain().Tip()->nHeight};\n+        return BlockRef{*Assume(tip_hash), Assume(chainman().ActiveChain().Tip())->nHeight};",
      "path": "src/node/interfaces.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": 1952318566,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That seems simpler anyway.",
      "created_at": "2025-02-12T14:16:04Z",
      "updated_at": "2025-02-12T14:16:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1952737128",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952737128"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 987,
      "start_side": "LEFT",
      "line": null,
      "original_line": 992,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952751154",
      "pull_request_review_id": 2612094034,
      "id": 1952751154,
      "node_id": "PRRC_kwDOABII5850ZJ4y",
      "diff_hunk": "@@ -286,9 +287,13 @@ static RPCHelpMan waitfornewblock()\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     Mining& miner = EnsureMining(node);\n \n-    auto block{CHECK_NONFATAL(miner.getTip()).value()};\n+    BlockRef block{CHECK_NONFATAL(miner.getTip()).value()};\n     if (IsRPCRunning()) {\n-        block = timeout ? miner.waitTipChanged(block.hash, std::chrono::milliseconds(timeout)) : miner.waitTipChanged(block.hash);\n+        std::optional<BlockRef> maybe_block{timeout ? miner.waitTipChanged(block.hash, std::chrono::milliseconds(timeout)) : miner.waitTipChanged(block.hash)};\n+        // Return new block unless the node is shutting down\n+        if (maybe_block) {\n+            block = *CHECK_NONFATAL(maybe_block);\n+        }\n     }",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": 1952373326,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Oh, you mean `old_block` could be `nullopt` (assuming the RPC is loaded at this point).\r\n\r\nBut the suggested error here would change the current behavior - if there's a timeout we return the old block. I could do an early error return though if the first `getTip()` doesn't give us a tip.",
      "created_at": "2025-02-12T14:21:50Z",
      "updated_at": "2025-02-12T14:21:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1952751154",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952751154"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 289,
      "start_side": "LEFT",
      "line": null,
      "original_line": 301,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952788322",
      "pull_request_review_id": 2612158513,
      "id": 1952788322,
      "node_id": "PRRC_kwDOABII5850ZS9i",
      "diff_hunk": "@@ -971,24 +971,32 @@ class MinerImpl : public Mining\n         return BlockRef{tip->GetBlockHash(), tip->nHeight};\n     }\n \n-    BlockRef waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n+    std::optional<BlockRef> waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n     {\n         if (timeout > std::chrono::years{100}) timeout = std::chrono::years{100}; // Upper bound to avoid UB in std::chrono\n+        std::optional<uint256> tip_hash;\n         {\n             WAIT_LOCK(notifications().m_tip_block_mutex, lock);\n             notifications().m_tip_block_cv.wait_for(lock, timeout, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\n                 // We need to wait for m_tip_block to be set AND for the value\n                 // to differ from the current_tip value.\n-                return (notifications().TipBlock() && notifications().TipBlock() != current_tip) || chainman().m_interrupt;\n+                tip_hash = notifications().TipBlock();\n+                return (tip_hash && tip_hash != current_tip) || chainman().m_interrupt;\n             });\n         }\n+\n+        if (!tip_hash || chainman().m_interrupt) return {};\n+\n         // Must release m_tip_block_mutex before locking cs_main, to avoid deadlocks.\n         LOCK(::cs_main);\n-        return BlockRef{chainman().ActiveChain().Tip()->GetBlockHash(), chainman().ActiveChain().Tip()->nHeight};\n+        return BlockRef{*Assume(tip_hash), Assume(chainman().ActiveChain().Tip())->nHeight};",
      "path": "src/node/interfaces.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": 1952318566,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"rpc: handle shutdown during long poll and wait methods\" (ad3af401c19b8d05ce69011a359db3090b7018e1)\r\n\r\nNice suggestion. If this suggestion is applied should also simplify the code above\r\n\r\n```diff\r\n-        if (!tip_hash || chainman().m_interrupt) return {};\r\n+        if (chainman().m_interrupt) return {};\r\n```\r\n\r\nsince `tip_hash` is no longer relevant. Can also reduce the scope of the `tip_hash` variable.\r\n\r\n",
      "created_at": "2025-02-12T14:41:21Z",
      "updated_at": "2025-02-12T14:49:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1952788322",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952788322"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 987,
      "start_side": "LEFT",
      "line": null,
      "original_line": 992,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952794396",
      "pull_request_review_id": 2612158513,
      "id": 1952794396,
      "node_id": "PRRC_kwDOABII5850ZUcc",
      "diff_hunk": "@@ -81,15 +81,21 @@ class Mining\n      * @param[in] current_tip block hash of the current chain tip. Function waits\n      *                        for the chain tip to differ from this.\n      * @param[in] timeout     how long to wait for a new tip\n-     * @returns               Hash and height of the current chain tip after this call.\n+     *\n+     * @retval BlockRef hash and height of the current chain tip after this call.\n+     * @retval empty if node is shutting down",
      "path": "src/interfaces/mining.h",
      "position": null,
      "original_position": 7,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": 1952303154,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1952303154\r\n\r\nI don't think suggested text is accurate because if timeout is exceeded while waiting for a new tip, this returns information about the current tip. I don't think that behavior should be changed.\r\n\r\nReturning null **only** when node is shutting down should be the simplest and best behavior.",
      "created_at": "2025-02-12T14:44:26Z",
      "updated_at": "2025-02-12T14:48:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1952794396",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1952794396"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1953840453",
      "pull_request_review_id": 2613892324,
      "id": 1953840453,
      "node_id": "PRRC_kwDOABII5850dT1F",
      "diff_hunk": "@@ -81,15 +81,21 @@ class Mining\n      * @param[in] current_tip block hash of the current chain tip. Function waits\n      *                        for the chain tip to differ from this.\n      * @param[in] timeout     how long to wait for a new tip\n-     * @returns               Hash and height of the current chain tip after this call.\n+     *\n+     * @retval BlockRef hash and height of the current chain tip after this call.\n+     * @retval empty if node is shutting down",
      "path": "src/interfaces/mining.h",
      "position": null,
      "original_position": 7,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": 1952303154,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> if timeout is exceeded while waiting for a new tip, this returns information about the current tip\r\n\r\nTrue. What I meant was that if there is no tip within the timeout. The function does `wait_for(... tip_hash && tip_hash != current_tip ...)` - `tip_hash` to be set and to be different than the current. I meant that it could remain unset while the timeout passes. I see how the comment I suggested is misleading. What about:\r\n\r\n```cpp\r\n@retval std::nullopt if the given `timeout` passes before the tip is\r\nconnected (there is no tip during startup) or the node is shut down.\r\n```\r\n?",
      "created_at": "2025-02-13T05:35:13Z",
      "updated_at": "2025-02-13T05:35:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1953840453",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1953840453"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1953850030",
      "pull_request_review_id": 2613907573,
      "id": 1953850030,
      "node_id": "PRRC_kwDOABII5850dWKu",
      "diff_hunk": "@@ -286,9 +287,13 @@ static RPCHelpMan waitfornewblock()\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     Mining& miner = EnsureMining(node);\n \n-    auto block{CHECK_NONFATAL(miner.getTip()).value()};\n+    BlockRef block{CHECK_NONFATAL(miner.getTip()).value()};\n     if (IsRPCRunning()) {\n-        block = timeout ? miner.waitTipChanged(block.hash, std::chrono::milliseconds(timeout)) : miner.waitTipChanged(block.hash);\n+        std::optional<BlockRef> maybe_block{timeout ? miner.waitTipChanged(block.hash, std::chrono::milliseconds(timeout)) : miner.waitTipChanged(block.hash)};\n+        // Return new block unless the node is shutting down\n+        if (maybe_block) {\n+            block = *CHECK_NONFATAL(maybe_block);\n+        }\n     }",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": 1952373326,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I mean to avoid `CHECK_NONFATAL()` if the tip is null and use `JSONRPCError` instead.\r\n\r\nIf the tip is null at the start, then wait for it to be set, if not set within the timeout, then `JSONRPCError`.",
      "created_at": "2025-02-13T05:48:15Z",
      "updated_at": "2025-02-13T05:48:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1953850030",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1953850030"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 289,
      "start_side": "LEFT",
      "line": null,
      "original_line": 301,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954226223",
      "pull_request_review_id": 2614530537,
      "id": 1954226223,
      "node_id": "PRRC_kwDOABII5850eyAv",
      "diff_hunk": "@@ -81,15 +81,21 @@ class Mining\n      * @param[in] current_tip block hash of the current chain tip. Function waits\n      *                        for the chain tip to differ from this.\n      * @param[in] timeout     how long to wait for a new tip\n-     * @returns               Hash and height of the current chain tip after this call.\n+     *\n+     * @retval BlockRef hash and height of the current chain tip after this call.\n+     * @retval empty if node is shutting down",
      "path": "src/interfaces/mining.h",
      "position": null,
      "original_position": 7,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": 1952303154,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah, I think I see the problem. There's a potential scenario where node startup is unusually slow, longer than timeout.\r\n\r\nI think it's better in that case to ignore the timeout and instead keep waiting for the node to set a tip.",
      "created_at": "2025-02-13T10:20:48Z",
      "updated_at": "2025-02-13T10:21:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1954226223",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954226223"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954288305",
      "pull_request_review_id": 2614634497,
      "id": 1954288305,
      "node_id": "PRRC_kwDOABII5850fBKx",
      "diff_hunk": "@@ -801,7 +802,11 @@ static RPCHelpMan getblocktemplate()\n         {\n             MillisecondsDouble checktxtime{std::chrono::minutes(1)};\n             while (tip == hashWatchedChain && IsRPCRunning()) {\n-                tip = miner.waitTipChanged(hashWatchedChain, checktxtime).hash;\n+                std::optional<BlockRef> maybe_tip{miner.waitTipChanged(hashWatchedChain, checktxtime)};\n+                if (!maybe_tip) {\n+                    throw JSONRPCError(RPC_CLIENT_NOT_CONNECTED, \"Shutting down\");",
      "path": "src/rpc/mining.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": 1952406392,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm introducing a new `RPC_SHUTDOWN_ERROR` which makes sense here. I don't think the message itself matters, since the user knows they shut down the node - and the exact details of where and why the RPC call fails aren't important.  ",
      "created_at": "2025-02-13T11:01:23Z",
      "updated_at": "2025-02-13T11:01:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1954288305",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954288305"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 807,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954295417",
      "pull_request_review_id": 2614644291,
      "id": 1954295417,
      "node_id": "PRRC_kwDOABII5850fC55",
      "diff_hunk": "@@ -801,7 +802,11 @@ static RPCHelpMan getblocktemplate()\n         {\n             MillisecondsDouble checktxtime{std::chrono::minutes(1)};\n             while (tip == hashWatchedChain && IsRPCRunning()) {\n-                tip = miner.waitTipChanged(hashWatchedChain, checktxtime).hash;\n+                std::optional<BlockRef> maybe_tip{miner.waitTipChanged(hashWatchedChain, checktxtime)};\n+                if (!maybe_tip) {\n+                    throw JSONRPCError(RPC_CLIENT_NOT_CONNECTED, \"Shutting down\");\n+                };\n+                tip = CHECK_NONFATAL(maybe_tip)->hash;",
      "path": "src/rpc/mining.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": 1952410800,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Indeed, but on the other hand code changes over time, stuff appears between the if statement and the usage of `tip`, then someone changes the if statement, and now we have a crash...",
      "created_at": "2025-02-13T11:04:25Z",
      "updated_at": "2025-02-13T11:04:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1954295417",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954295417"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 806,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 826,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954297095",
      "pull_request_review_id": 2614646888,
      "id": 1954297095,
      "node_id": "PRRC_kwDOABII5850fDUH",
      "diff_hunk": "@@ -81,15 +81,21 @@ class Mining\n      * @param[in] current_tip block hash of the current chain tip. Function waits\n      *                        for the chain tip to differ from this.\n      * @param[in] timeout     how long to wait for a new tip\n-     * @returns               Hash and height of the current chain tip after this call.\n+     *\n+     * @retval BlockRef hash and height of the current chain tip after this call.\n+     * @retval empty if node is shutting down",
      "path": "src/interfaces/mining.h",
      "position": null,
      "original_position": 7,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": 1952303154,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, this scenario I had in mind.\r\n\r\n> in that case to ignore the timeout and instead keep waiting for the node to set a tip\r\n\r\nHmm. What if the tip is not being connected for whatever reason? Wait forever? The current behavior of respecting the timeout looks safer. Would be an odd user experience to provide a timeout and the program to decide to wait longer for whatever reason.",
      "created_at": "2025-02-13T11:05:35Z",
      "updated_at": "2025-02-13T11:05:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1954297095",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954297095"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954298757",
      "pull_request_review_id": 2614649825,
      "id": 1954298757,
      "node_id": "PRRC_kwDOABII5850fDuF",
      "diff_hunk": "@@ -971,24 +971,32 @@ class MinerImpl : public Mining\n         return BlockRef{tip->GetBlockHash(), tip->nHeight};\n     }\n \n-    BlockRef waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n+    std::optional<BlockRef> waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n     {\n         if (timeout > std::chrono::years{100}) timeout = std::chrono::years{100}; // Upper bound to avoid UB in std::chrono\n+        std::optional<uint256> tip_hash;\n         {\n             WAIT_LOCK(notifications().m_tip_block_mutex, lock);\n             notifications().m_tip_block_cv.wait_for(lock, timeout, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\n                 // We need to wait for m_tip_block to be set AND for the value\n                 // to differ from the current_tip value.\n-                return (notifications().TipBlock() && notifications().TipBlock() != current_tip) || chainman().m_interrupt;\n+                tip_hash = notifications().TipBlock();\n+                return (tip_hash && tip_hash != current_tip) || chainman().m_interrupt;\n             });\n         }\n+\n+        if (!tip_hash || chainman().m_interrupt) return {};\n+\n         // Must release m_tip_block_mutex before locking cs_main, to avoid deadlocks.\n         LOCK(::cs_main);\n-        return BlockRef{chainman().ActiveChain().Tip()->GetBlockHash(), chainman().ActiveChain().Tip()->nHeight};\n+        return BlockRef{*Assume(tip_hash), Assume(chainman().ActiveChain().Tip())->nHeight};\n     }\n \n     std::unique_ptr<BlockTemplate> createNewBlock(const BlockCreateOptions& options) override\n     {\n+        // Ensure m_tip_block is set so consumers of BlockTemplate can rely on that.\n+        if (!waitTipChanged(uint256::ZERO, MillisecondsDouble::max())) return {};",
      "path": "src/node/interfaces.cpp",
      "position": 45,
      "original_position": 31,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": 1952414685,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It seems the compiler doesn't know about this default inside the implementation file.",
      "created_at": "2025-02-13T11:06:55Z",
      "updated_at": "2025-02-13T11:06:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1954298757",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954298757"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1106,
      "original_line": 1106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954300543",
      "pull_request_review_id": 2614652724,
      "id": 1954300543,
      "node_id": "PRRC_kwDOABII5850fEJ_",
      "diff_hunk": "@@ -801,7 +802,11 @@ static RPCHelpMan getblocktemplate()\n         {\n             MillisecondsDouble checktxtime{std::chrono::minutes(1)};\n             while (tip == hashWatchedChain && IsRPCRunning()) {\n-                tip = miner.waitTipChanged(hashWatchedChain, checktxtime).hash;\n+                std::optional<BlockRef> maybe_tip{miner.waitTipChanged(hashWatchedChain, checktxtime)};\n+                if (!maybe_tip) {\n+                    throw JSONRPCError(RPC_CLIENT_NOT_CONNECTED, \"Shutting down\");\n+                };\n+                tip = CHECK_NONFATAL(maybe_tip)->hash;",
      "path": "src/rpc/mining.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": 1952410800,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ok",
      "created_at": "2025-02-13T11:08:13Z",
      "updated_at": "2025-02-13T11:08:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1954300543",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954300543"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 806,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 826,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954310804",
      "pull_request_review_id": 2614668433,
      "id": 1954310804,
      "node_id": "PRRC_kwDOABII5850fGqU",
      "diff_hunk": "@@ -286,9 +287,13 @@ static RPCHelpMan waitfornewblock()\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     Mining& miner = EnsureMining(node);\n \n-    auto block{CHECK_NONFATAL(miner.getTip()).value()};\n+    BlockRef block{CHECK_NONFATAL(miner.getTip()).value()};\n     if (IsRPCRunning()) {\n-        block = timeout ? miner.waitTipChanged(block.hash, std::chrono::milliseconds(timeout)) : miner.waitTipChanged(block.hash);\n+        std::optional<BlockRef> maybe_block{timeout ? miner.waitTipChanged(block.hash, std::chrono::milliseconds(timeout)) : miner.waitTipChanged(block.hash)};\n+        // Return new block unless the node is shutting down\n+        if (maybe_block) {\n+            block = *CHECK_NONFATAL(maybe_block);\n+        }\n     }",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": 1952373326,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I ended up with something similar...",
      "created_at": "2025-02-13T11:15:22Z",
      "updated_at": "2025-02-13T11:15:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1954310804",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954310804"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 289,
      "start_side": "LEFT",
      "line": null,
      "original_line": 301,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954339722",
      "pull_request_review_id": 2614715950,
      "id": 1954339722,
      "node_id": "PRRC_kwDOABII5850fNuK",
      "diff_hunk": "@@ -971,24 +971,32 @@ class MinerImpl : public Mining\n         return BlockRef{tip->GetBlockHash(), tip->nHeight};\n     }\n \n-    BlockRef waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n+    std::optional<BlockRef> waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n     {\n         if (timeout > std::chrono::years{100}) timeout = std::chrono::years{100}; // Upper bound to avoid UB in std::chrono\n+        std::optional<uint256> tip_hash;\n         {\n             WAIT_LOCK(notifications().m_tip_block_mutex, lock);\n             notifications().m_tip_block_cv.wait_for(lock, timeout, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\n                 // We need to wait for m_tip_block to be set AND for the value\n                 // to differ from the current_tip value.\n-                return (notifications().TipBlock() && notifications().TipBlock() != current_tip) || chainman().m_interrupt;\n+                tip_hash = notifications().TipBlock();\n+                return (tip_hash && tip_hash != current_tip) || chainman().m_interrupt;\n             });\n         }\n+\n+        if (!tip_hash || chainman().m_interrupt) return {};\n+\n         // Must release m_tip_block_mutex before locking cs_main, to avoid deadlocks.\n         LOCK(::cs_main);\n-        return BlockRef{chainman().ActiveChain().Tip()->GetBlockHash(), chainman().ActiveChain().Tip()->nHeight};\n+        return BlockRef{*Assume(tip_hash), Assume(chainman().ActiveChain().Tip())->nHeight};\n     }\n \n     std::unique_ptr<BlockTemplate> createNewBlock(const BlockCreateOptions& options) override\n     {\n+        // Ensure m_tip_block is set so consumers of BlockTemplate can rely on that.\n+        if (!waitTipChanged(uint256::ZERO, MillisecondsDouble::max())) return {};",
      "path": "src/node/interfaces.cpp",
      "position": 45,
      "original_position": 31,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": 1952414685,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "TIL https://flylib.com/books/en/2.887.1.53/1/\r\n\r\nPossible solutions I see:\r\n* drop the default altogether and have all callers use 2 arguments\r\n* use the \"non-virtual interface idiom\" as described in the chapter above (it is from the book \"Effective C++\" by Scott Meyers)\r\n* use overload instead of default arguments. Have two methods `waitTipChanged(hash)` and `waitTipChanged(hash, timeout)` (the first could call the second internally).",
      "created_at": "2025-02-13T11:36:58Z",
      "updated_at": "2025-02-13T11:36:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1954339722",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954339722"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1106,
      "original_line": 1106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954433827",
      "pull_request_review_id": 2614877828,
      "id": 1954433827,
      "node_id": "PRRC_kwDOABII5850fksj",
      "diff_hunk": "@@ -801,7 +802,11 @@ static RPCHelpMan getblocktemplate()\n         {\n             MillisecondsDouble checktxtime{std::chrono::minutes(1)};\n             while (tip == hashWatchedChain && IsRPCRunning()) {\n-                tip = miner.waitTipChanged(hashWatchedChain, checktxtime).hash;\n+                std::optional<BlockRef> maybe_tip{miner.waitTipChanged(hashWatchedChain, checktxtime)};\n+                if (!maybe_tip) {\n+                    throw JSONRPCError(RPC_CLIENT_NOT_CONNECTED, \"Shutting down\");\n+                };\n+                tip = CHECK_NONFATAL(maybe_tip)->hash;\n                 // Timeout: Check transactions for update",
      "path": "src/rpc/mining.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": 1952403604,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I pushed a commit to explain the long poll behaviour. Also added an early return above this point, just for clarity.",
      "created_at": "2025-02-13T12:46:46Z",
      "updated_at": "2025-02-13T12:46:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1954433827",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954433827"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 810,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954473077",
      "pull_request_review_id": 2614945255,
      "id": 1954473077,
      "node_id": "PRRC_kwDOABII5850fuR1",
      "diff_hunk": "@@ -49,6 +49,7 @@ enum RPCErrorCode\n     RPC_VERIFY_ALREADY_IN_UTXO_SET  = -27, //!< Transaction already in utxo set\n     RPC_IN_WARMUP                   = -28, //!< Client still warming up\n     RPC_METHOD_DEPRECATED           = -32, //!< RPC method is deprecated\n+    RPC_SHUTDOWN_ERROR              = -37, //!< Node is shutting down",
      "path": "src/rpc/protocol.h",
      "position": null,
      "original_position": 4,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "e6760e7f0f04c076c3eb8fa61cb54adf12fed36b",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"rpc: introduce RPC_SHUTDOWN_ERROR\" (e6760e7f0f04c076c3eb8fa61cb54adf12fed36b)\r\n\r\nOut of curiosity, where did 37 come from?",
      "created_at": "2025-02-13T13:13:55Z",
      "updated_at": "2025-02-13T14:12:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1954473077",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954473077"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954529064",
      "pull_request_review_id": 2615041149,
      "id": 1954529064,
      "node_id": "PRRC_kwDOABII5850f78o",
      "diff_hunk": "@@ -971,24 +971,32 @@ class MinerImpl : public Mining\n         return BlockRef{tip->GetBlockHash(), tip->nHeight};\n     }\n \n-    BlockRef waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n+    std::optional<BlockRef> waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n     {\n         if (timeout > std::chrono::years{100}) timeout = std::chrono::years{100}; // Upper bound to avoid UB in std::chrono\n+        std::optional<uint256> tip_hash;\n         {\n             WAIT_LOCK(notifications().m_tip_block_mutex, lock);\n             notifications().m_tip_block_cv.wait_for(lock, timeout, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\n                 // We need to wait for m_tip_block to be set AND for the value\n                 // to differ from the current_tip value.\n-                return (notifications().TipBlock() && notifications().TipBlock() != current_tip) || chainman().m_interrupt;\n+                tip_hash = notifications().TipBlock();\n+                return (tip_hash && tip_hash != current_tip) || chainman().m_interrupt;\n             });\n         }\n+\n+        if (!tip_hash || chainman().m_interrupt) return {};\n+\n         // Must release m_tip_block_mutex before locking cs_main, to avoid deadlocks.\n         LOCK(::cs_main);\n-        return BlockRef{chainman().ActiveChain().Tip()->GetBlockHash(), chainman().ActiveChain().Tip()->nHeight};\n+        return BlockRef{*Assume(tip_hash), Assume(chainman().ActiveChain().Tip())->nHeight};\n     }\n \n     std::unique_ptr<BlockTemplate> createNewBlock(const BlockCreateOptions& options) override\n     {\n+        // Ensure m_tip_block is set so consumers of BlockTemplate can rely on that.\n+        if (!waitTipChanged(uint256::ZERO, MillisecondsDouble::max())) return {};",
      "path": "src/node/interfaces.cpp",
      "position": 45,
      "original_position": 31,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": 1952414685,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't think we should drop the default, because `MillisecondsDouble::max()` is tedious. It seems fine that the interface does it internally, which is simpler than the other two solutions.\r\n\r\nKeep in mind that the interface has a much broader target audience (IPC users), so it should be as simple as possible. I'm less worried about other Bitcoin Core devs that need to change something inside `node/interfaces.cpp`",
      "created_at": "2025-02-13T13:45:28Z",
      "updated_at": "2025-02-13T13:47:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1954529064",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954529064"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1106,
      "original_line": 1106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954537951",
      "pull_request_review_id": 2615056394,
      "id": 1954537951,
      "node_id": "PRRC_kwDOABII5850f-Hf",
      "diff_hunk": "@@ -971,24 +971,32 @@ class MinerImpl : public Mining\n         return BlockRef{tip->GetBlockHash(), tip->nHeight};\n     }\n \n-    BlockRef waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n+    std::optional<BlockRef> waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n     {\n         if (timeout > std::chrono::years{100}) timeout = std::chrono::years{100}; // Upper bound to avoid UB in std::chrono\n+        std::optional<uint256> tip_hash;\n         {\n             WAIT_LOCK(notifications().m_tip_block_mutex, lock);\n             notifications().m_tip_block_cv.wait_for(lock, timeout, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\n                 // We need to wait for m_tip_block to be set AND for the value\n                 // to differ from the current_tip value.\n-                return (notifications().TipBlock() && notifications().TipBlock() != current_tip) || chainman().m_interrupt;\n+                tip_hash = notifications().TipBlock();\n+                return (tip_hash && tip_hash != current_tip) || chainman().m_interrupt;\n             });\n         }\n+\n+        if (!tip_hash || chainman().m_interrupt) return {};\n+\n         // Must release m_tip_block_mutex before locking cs_main, to avoid deadlocks.\n         LOCK(::cs_main);\n-        return BlockRef{chainman().ActiveChain().Tip()->GetBlockHash(), chainman().ActiveChain().Tip()->nHeight};\n+        return BlockRef{*Assume(tip_hash), Assume(chainman().ActiveChain().Tip())->nHeight};\n     }\n \n     std::unique_ptr<BlockTemplate> createNewBlock(const BlockCreateOptions& options) override\n     {\n+        // Ensure m_tip_block is set so consumers of BlockTemplate can rely on that.\n+        if (!waitTipChanged(uint256::ZERO, MillisecondsDouble::max())) return {};",
      "path": "src/node/interfaces.cpp",
      "position": 45,
      "original_position": 31,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": 1952414685,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I could also do this:\r\n\r\n```diff\r\ndiff --git a/src/node/interfaces.cpp b/src/node/interfaces.cpp\r\nindex 66ce64b1c3..b0735d497c 100644\r\n--- a/src/node/interfaces.cpp\r\n+++ b/src/node/interfaces.cpp\r\n@@ -971,7 +971,7 @@ public:\r\n         return BlockRef{tip->GetBlockHash(), tip->nHeight};\r\n     }\r\n \r\n-    std::optional<BlockRef> waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\r\n+    std::optional<BlockRef> waitTipChanged(uint256 current_tip, MillisecondsDouble timeout = MillisecondsDouble::max()) override\r\n     {\r\n         if (timeout > std::chrono::years{100}) timeout = std::chrono::years{100}; // Upper bound to avoid UB in std::chrono\r\n         std::optional<uint256> tip_hash;\r\n@@ -1005,7 +1005,7 @@ public:\r\n     std::unique_ptr<BlockTemplate> createNewBlock(const BlockCreateOptions& options) override\r\n     {\r\n         // Ensure m_tip_block is set so consumers of BlockTemplate can rely on that.\r\n-        if (!waitTipChanged(uint256::ZERO, MillisecondsDouble::max())) return {};\r\n+        if (!waitTipChanged(uint256::ZERO)) return {};\r\n \r\n         BlockAssembler::Options assemble_options{options};\r\n         ApplyArgsManOptions(*Assert(m_node.args), assemble_options);\r\n```\r\n\r\nBut that doesn't seem nicer. Also the compiler doesn't warn if the default in the `override` is different, so this seems unsafe.",
      "created_at": "2025-02-13T13:51:01Z",
      "updated_at": "2025-02-13T13:52:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1954537951",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954537951"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1106,
      "original_line": 1106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954576364",
      "pull_request_review_id": 2614945255,
      "id": 1954576364,
      "node_id": "PRRC_kwDOABII5850gHfs",
      "diff_hunk": "@@ -971,20 +971,35 @@ class MinerImpl : public Mining\n         return BlockRef{tip->GetBlockHash(), tip->nHeight};\n     }\n \n-    BlockRef waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n+    std::optional<BlockRef> waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n     {\n         if (timeout > std::chrono::years{100}) timeout = std::chrono::years{100}; // Upper bound to avoid UB in std::chrono\n+        std::optional<uint256> tip_hash;\n         {\n             WAIT_LOCK(notifications().m_tip_block_mutex, lock);\n-            notifications().m_tip_block_cv.wait_for(lock, timeout, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\n-                // We need to wait for m_tip_block to be set AND for the value\n-                // to differ from the current_tip value.\n-                return (notifications().TipBlock() && notifications().TipBlock() != current_tip) || chainman().m_interrupt;\n-            });\n+            do {\n+                notifications().m_tip_block_cv.wait_for(lock, timeout, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\n+                    // We need to wait for m_tip_block to be set AND for the value\n+                    // to differ from the current_tip value.\n+                    tip_hash = notifications().TipBlock();\n+                    return (tip_hash && tip_hash != current_tip) || chainman().m_interrupt;\n+                });\n+\n+                // In the unlikely event m_tip_block is not set after the timeout,\n+                // wait a little longer.\n+                timeout = 100ms;\n+            } while (!tip_hash && !chainman().m_interrupt);\n         }\n-        // Must release m_tip_block_mutex before locking cs_main, to avoid deadlocks.\n-        LOCK(::cs_main);\n-        return BlockRef{chainman().ActiveChain().Tip()->GetBlockHash(), chainman().ActiveChain().Tip()->nHeight};\n+\n+        if (chainman().m_interrupt) return {};\n+\n+        // Although we won't use it, since the tip may have changed again\n+        // before we know its height, tip_hash should have been set.\n+        Assume(tip_hash);\n+\n+        // Must release m_tip_block_mutex before getTip() locks cs_main, to\n+        // avoid deadlocks.\n+        return getTip();\n     }",
      "path": "src/node/interfaces.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "fa99eddd926e0d49604d9ca8f21fac85d63652f4",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"rpc: handle shutdown during long poll and wait methods\" (fa99eddd926e0d49604d9ca8f21fac85d63652f4)\r\n\r\nI think this new behavior of only using `timeout` as time limit for tip changing, not as a time limit for the tip to be set on startup makes a lot of sense and should be much more convenient for callers than previous behavior.\r\n\r\n(Previous version in ad3af401c19b8d05ce69011a359db3090b7018e1 would return ambiguous null values on startup that could mean either the node was shutting down or the timeout was reached, and would force callers to immediately make another waitTipChanged call without even giving them any new information in the meantime.)\r\n\r\nOnly downside of this behavior is that mining API no longer includes a function that can wait with a limited timeout for the tip to be non-null on startup. But if anybody wants this we could add a timeout option to `getTip()` or a new separate `waitForStartup()` method accepting a timeout. Or we could not provide anything, since it is pretty easy for callers to implemented their own timeouts if they are using the capnproto client API.\r\n\r\nHowever, the current implementation of this behavior in fa99eddd926e0d49604d9ca8f21fac85d63652f4 looks a bit janky to me, with double nested wait loop, unnecessary 100ms polling, unnecessary tip_hash variable, and an Assume() check out of place and delayed for no reason. Following is untested, but I think would a simpler implementation that cleans all these issues up:\r\n\r\n```c++\r\n    std::optional<BlockRef> waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\r\n    {\r\n        if (timeout > std::chrono::years{100}) timeout = std::chrono::years{100}; // Upper bound to avoid UB in std::chrono\r\n        auto deadline{std::chrono::steady_clock::now() + timeout};\r\n        {\r\n            WAIT_LOCK(notifications().m_tip_block_mutex, lock);\r\n            // For callers convenience, wait longer than the provided timeout\r\n            // during startup for the tip to be non-null. That way this function\r\n            // always returns valid tip information when possible and only\r\n            // returns null when shutting down, not when timing out.\r\n            notifications().m_tip_block_cv.wait(lock, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\r\n                return notifications().TipBlock() || chainman().m_interrupt;\r\n            });\r\n            // At this point TipBlock is set, so continue to wait until it is\r\n            // different then `current_tip` provided by caller.\r\n            notifications().m_tip_block_cv.wait_until(lock, deadline, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\r\n                return Assume(notifications().TipBlock()) != current_tip || chainman().m_interrupt;\r\n            });\r\n         }\r\n\r\n        if (chainman().m_interrupt) return {};\r\n\r\n        // Must release m_tip_block_mutex before getTip() locks cs_main, to\r\n        // avoid deadlocks.\r\n        return getTip();\r\n    }\r\n```",
      "created_at": "2025-02-13T14:12:24Z",
      "updated_at": "2025-02-13T14:12:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1954576364",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954576364"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 974,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954607452",
      "pull_request_review_id": 2615175218,
      "id": 1954607452,
      "node_id": "PRRC_kwDOABII5850gPFc",
      "diff_hunk": "@@ -971,24 +971,32 @@ class MinerImpl : public Mining\n         return BlockRef{tip->GetBlockHash(), tip->nHeight};\n     }\n \n-    BlockRef waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n+    std::optional<BlockRef> waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n     {\n         if (timeout > std::chrono::years{100}) timeout = std::chrono::years{100}; // Upper bound to avoid UB in std::chrono\n+        std::optional<uint256> tip_hash;\n         {\n             WAIT_LOCK(notifications().m_tip_block_mutex, lock);\n             notifications().m_tip_block_cv.wait_for(lock, timeout, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\n                 // We need to wait for m_tip_block to be set AND for the value\n                 // to differ from the current_tip value.\n-                return (notifications().TipBlock() && notifications().TipBlock() != current_tip) || chainman().m_interrupt;\n+                tip_hash = notifications().TipBlock();\n+                return (tip_hash && tip_hash != current_tip) || chainman().m_interrupt;\n             });\n         }\n+\n+        if (!tip_hash || chainman().m_interrupt) return {};\n+\n         // Must release m_tip_block_mutex before locking cs_main, to avoid deadlocks.\n         LOCK(::cs_main);\n-        return BlockRef{chainman().ActiveChain().Tip()->GetBlockHash(), chainman().ActiveChain().Tip()->nHeight};\n+        return BlockRef{*Assume(tip_hash), Assume(chainman().ActiveChain().Tip())->nHeight};\n     }\n \n     std::unique_ptr<BlockTemplate> createNewBlock(const BlockCreateOptions& options) override\n     {\n+        // Ensure m_tip_block is set so consumers of BlockTemplate can rely on that.\n+        if (!waitTipChanged(uint256::ZERO, MillisecondsDouble::max())) return {};",
      "path": "src/node/interfaces.cpp",
      "position": 45,
      "original_position": 31,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": 1952414685,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "My takeaway from the article is that having a default for the base class is fine, and that it's better to not use a default for the inherited classes (but it could get ignored).\r\n\r\nThe patch in my previous comment would be bad. But the current code that calls `waitTipChanged(uint256::ZERO, MillisecondsDouble::max())` should be fine.",
      "created_at": "2025-02-13T14:29:27Z",
      "updated_at": "2025-02-13T14:29:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1954607452",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954607452"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1106,
      "original_line": 1106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954608225",
      "pull_request_review_id": 2615176447,
      "id": 1954608225,
      "node_id": "PRRC_kwDOABII5850gPRh",
      "diff_hunk": "@@ -49,6 +49,7 @@ enum RPCErrorCode\n     RPC_VERIFY_ALREADY_IN_UTXO_SET  = -27, //!< Transaction already in utxo set\n     RPC_IN_WARMUP                   = -28, //!< Client still warming up\n     RPC_METHOD_DEPRECATED           = -32, //!< RPC method is deprecated\n+    RPC_SHUTDOWN_ERROR              = -37, //!< Node is shutting down",
      "path": "src/rpc/protocol.h",
      "position": null,
      "original_position": 4,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "e6760e7f0f04c076c3eb8fa61cb54adf12fed36b",
      "in_reply_to_id": 1954473077,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "First available number.",
      "created_at": "2025-02-13T14:29:53Z",
      "updated_at": "2025-02-13T14:29:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1954608225",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954608225"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954615547",
      "pull_request_review_id": 2615188969,
      "id": 1954615547,
      "node_id": "PRRC_kwDOABII5850gRD7",
      "diff_hunk": "@@ -81,15 +81,21 @@ class Mining\n      * @param[in] current_tip block hash of the current chain tip. Function waits\n      *                        for the chain tip to differ from this.\n      * @param[in] timeout     how long to wait for a new tip\n-     * @returns               Hash and height of the current chain tip after this call.\n+     *\n+     * @retval BlockRef hash and height of the current chain tip after this call.\n+     * @retval empty if node is shutting down",
      "path": "src/interfaces/mining.h",
      "position": null,
      "original_position": 7,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": 1952303154,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Let's continue here: https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1954576364",
      "created_at": "2025-02-13T14:34:07Z",
      "updated_at": "2025-02-13T14:34:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1954615547",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954615547"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954626155",
      "pull_request_review_id": 2615206753,
      "id": 1954626155,
      "node_id": "PRRC_kwDOABII5850gTpr",
      "diff_hunk": "@@ -971,20 +971,35 @@ class MinerImpl : public Mining\n         return BlockRef{tip->GetBlockHash(), tip->nHeight};\n     }\n \n-    BlockRef waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n+    std::optional<BlockRef> waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n     {\n         if (timeout > std::chrono::years{100}) timeout = std::chrono::years{100}; // Upper bound to avoid UB in std::chrono\n+        std::optional<uint256> tip_hash;\n         {\n             WAIT_LOCK(notifications().m_tip_block_mutex, lock);\n-            notifications().m_tip_block_cv.wait_for(lock, timeout, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\n-                // We need to wait for m_tip_block to be set AND for the value\n-                // to differ from the current_tip value.\n-                return (notifications().TipBlock() && notifications().TipBlock() != current_tip) || chainman().m_interrupt;\n-            });\n+            do {\n+                notifications().m_tip_block_cv.wait_for(lock, timeout, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\n+                    // We need to wait for m_tip_block to be set AND for the value\n+                    // to differ from the current_tip value.\n+                    tip_hash = notifications().TipBlock();\n+                    return (tip_hash && tip_hash != current_tip) || chainman().m_interrupt;\n+                });\n+\n+                // In the unlikely event m_tip_block is not set after the timeout,\n+                // wait a little longer.\n+                timeout = 100ms;\n+            } while (!tip_hash && !chainman().m_interrupt);\n         }\n-        // Must release m_tip_block_mutex before locking cs_main, to avoid deadlocks.\n-        LOCK(::cs_main);\n-        return BlockRef{chainman().ActiveChain().Tip()->GetBlockHash(), chainman().ActiveChain().Tip()->nHeight};\n+\n+        if (chainman().m_interrupt) return {};\n+\n+        // Although we won't use it, since the tip may have changed again\n+        // before we know its height, tip_hash should have been set.\n+        Assume(tip_hash);\n+\n+        // Must release m_tip_block_mutex before getTip() locks cs_main, to\n+        // avoid deadlocks.\n+        return getTip();\n     }",
      "path": "src/node/interfaces.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "fa99eddd926e0d49604d9ca8f21fac85d63652f4",
      "in_reply_to_id": 1954576364,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, that indeed looks simpler. Done in 0c06c8108fb43be317d86199750ecd3b7db9a5d2.\r\n\r\nI also think clients should handle timeouts themselves. For `bitcoin-cli` we have `-rpcclienttimeout=0`, other RPC clients presumably have their own timeout mechanisms, and IPC clients can do the same.",
      "created_at": "2025-02-13T14:39:59Z",
      "updated_at": "2025-02-13T14:52:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1954626155",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954626155"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 974,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954769058",
      "pull_request_review_id": 2615479252,
      "id": 1954769058,
      "node_id": "PRRC_kwDOABII5850g2ii",
      "diff_hunk": "@@ -49,6 +49,7 @@ enum RPCErrorCode\n     RPC_VERIFY_ALREADY_IN_UTXO_SET  = -27, //!< Transaction already in utxo set\n     RPC_IN_WARMUP                   = -28, //!< Client still warming up\n     RPC_METHOD_DEPRECATED           = -32, //!< RPC method is deprecated\n+    RPC_SHUTDOWN_ERROR              = -37, //!< Node is shutting down",
      "path": "src/rpc/protocol.h",
      "position": null,
      "original_position": 4,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "e6760e7f0f04c076c3eb8fa61cb54adf12fed36b",
      "in_reply_to_id": 1954473077,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> First available number.\r\n\r\nOh, thanks. Didn't notice the numbers were out of order and later ones were used below.",
      "created_at": "2025-02-13T15:48:58Z",
      "updated_at": "2025-02-13T15:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1954769058",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954769058"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954836649",
      "pull_request_review_id": 2615601682,
      "id": 1954836649,
      "node_id": "PRRC_kwDOABII5850hHCp",
      "diff_hunk": "@@ -971,24 +971,32 @@ class MinerImpl : public Mining\n         return BlockRef{tip->GetBlockHash(), tip->nHeight};\n     }\n \n-    BlockRef waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n+    std::optional<BlockRef> waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n     {\n         if (timeout > std::chrono::years{100}) timeout = std::chrono::years{100}; // Upper bound to avoid UB in std::chrono\n+        std::optional<uint256> tip_hash;\n         {\n             WAIT_LOCK(notifications().m_tip_block_mutex, lock);\n             notifications().m_tip_block_cv.wait_for(lock, timeout, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\n                 // We need to wait for m_tip_block to be set AND for the value\n                 // to differ from the current_tip value.\n-                return (notifications().TipBlock() && notifications().TipBlock() != current_tip) || chainman().m_interrupt;\n+                tip_hash = notifications().TipBlock();\n+                return (tip_hash && tip_hash != current_tip) || chainman().m_interrupt;\n             });\n         }\n+\n+        if (!tip_hash || chainman().m_interrupt) return {};\n+\n         // Must release m_tip_block_mutex before locking cs_main, to avoid deadlocks.\n         LOCK(::cs_main);\n-        return BlockRef{chainman().ActiveChain().Tip()->GetBlockHash(), chainman().ActiveChain().Tip()->nHeight};\n+        return BlockRef{*Assume(tip_hash), Assume(chainman().ActiveChain().Tip())->nHeight};\n     }\n \n     std::unique_ptr<BlockTemplate> createNewBlock(const BlockCreateOptions& options) override\n     {\n+        // Ensure m_tip_block is set so consumers of BlockTemplate can rely on that.\n+        if (!waitTipChanged(uint256::ZERO, MillisecondsDouble::max())) return {};",
      "path": "src/node/interfaces.cpp",
      "position": 45,
      "original_position": 31,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "be15f2e769987b1df2cf1c8f327c5aafe064dbb3",
      "in_reply_to_id": 1952414685,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"Have createNewBlock() wait for a tip\" (854766b886b6c2ee564b867db64bdbce80064b3b)\r\n\r\nAnother alternative but probably not better is:\r\n\r\n```diff\r\n-        if (!waitTipChanged(uint256::ZERO, MillisecondsDouble::max())) return {};\r\n+        if (!static_cast<Mining*>(this)->waitTipChanged(uint256::ZERO)) return {};\r\n```\r\n\r\nI think in longer term after we add an initial waitNext() method and make improvements to it, it will be natural to move more functionality out of Mining class methods into node/miner.cpp or somewhere like that and these methods will get simpler. The node/interfaces.cpp file is mostly meant to contain glue code and wrap other functions, not implement real functionality itself. Since a lot of code needs to wait, I imagine there will be some new waiting utility function this could call instead of waitTipChanged, but using waitTipChanged for now here should be fine.",
      "created_at": "2025-02-13T16:28:44Z",
      "updated_at": "2025-02-13T16:28:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1954836649",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954836649"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1106,
      "original_line": 1106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954865233",
      "pull_request_review_id": 2615645250,
      "id": 1954865233,
      "node_id": "PRRC_kwDOABII5850hOBR",
      "diff_hunk": "@@ -286,9 +287,17 @@ static RPCHelpMan waitfornewblock()\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     Mining& miner = EnsureMining(node);\n \n-    auto block{CHECK_NONFATAL(miner.getTip()).value()};\n+    std::optional<BlockRef> old_block{miner.getTip()};\n+    if (!old_block) throw JSONRPCError(RPC_SHUTDOWN_ERROR, \"Node is shutting down\");\n+    BlockRef block{*CHECK_NONFATAL(old_block)};\n+\n+    std::optional<BlockRef> new_block;\n     if (IsRPCRunning()) {\n-        block = timeout ? miner.waitTipChanged(block.hash, std::chrono::milliseconds(timeout)) : miner.waitTipChanged(block.hash);\n+        new_block = timeout ? miner.waitTipChanged(block.hash, std::chrono::milliseconds(timeout)) : miner.waitTipChanged(block.hash);\n+        // Return new block unless the node is shutting down\n+        if (new_block) {\n+            block = *CHECK_NONFATAL(new_block);\n+        }",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "0c06c8108fb43be317d86199750ecd3b7db9a5d2",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"rpc: handle shutdown during long poll and wait methods\" (0c06c8108fb43be317d86199750ecd3b7db9a5d2)\r\n\r\nI think this code is not quite right because it is assuming that if `getTip()` returns null it means the node is shutting down, when in reality it is starting up. Also the IsRPCRunning() call unnecessarily complicates things and is incorrect as we found previously in #30635. Would also be nice to reduce number of variables used in this code and remove CHECK_NONFATAL calls that can't trigger because they immediately follow null checks. Would suggest:\r\n\r\n```diff\r\n--- a/src/rpc/blockchain.cpp\r\n+++ b/src/rpc/blockchain.cpp\r\n@@ -287,18 +287,12 @@ static RPCHelpMan waitfornewblock()\r\n     NodeContext& node = EnsureAnyNodeContext(request.context);\r\n     Mining& miner = EnsureMining(node);\r\n \r\n-    std::optional<BlockRef> old_block{miner.getTip()};\r\n-    if (!old_block) throw JSONRPCError(RPC_SHUTDOWN_ERROR, \"Node is shutting down\");\r\n-    BlockRef block{*CHECK_NONFATAL(old_block)};\r\n-\r\n-    std::optional<BlockRef> new_block;\r\n-    if (IsRPCRunning()) {\r\n-        new_block = timeout ? miner.waitTipChanged(block.hash, std::chrono::milliseconds(timeout)) : miner.waitTipChanged(block.hash);\r\n-        // Return new block unless the node is shutting down\r\n-        if (new_block) {\r\n-            block = *CHECK_NONFATAL(new_block);\r\n-        }\r\n-    }\r\n+    std::optional<BlockRef> tip{miner.getTip()};\r\n+    if (!tip) throw JSONRPCError(RPC_IN_WARMUP, \"Node is starting up\");\r\n+    BlockRef block{*tip};\r\n+    tip = timeout > 0 ? miner.waitTipChanged(block.hash, std::chrono::milliseconds(timeout)) : miner.waitTipChanged(block.hash);\r\n+    if (!tip) throw JSONRPCError(RPC_SHUTDOWN_ERROR, \"Node is shutting down\");\r\n+    block = *tip;\r\n \r\n     UniValue ret(UniValue::VOBJ);\r\n     ret.pushKV(\"hash\", block.hash.GetHex());\r\n```\r\n\r\nProbably similar simplifications can apply in other methods below.",
      "created_at": "2025-02-13T16:46:29Z",
      "updated_at": "2025-02-13T16:47:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1954865233",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1954865233"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 289,
      "start_side": "LEFT",
      "line": null,
      "original_line": 300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1955067561",
      "pull_request_review_id": 2615974945,
      "id": 1955067561,
      "node_id": "PRRC_kwDOABII5850h_ap",
      "diff_hunk": "@@ -286,9 +287,17 @@ static RPCHelpMan waitfornewblock()\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     Mining& miner = EnsureMining(node);\n \n-    auto block{CHECK_NONFATAL(miner.getTip()).value()};\n+    std::optional<BlockRef> old_block{miner.getTip()};\n+    if (!old_block) throw JSONRPCError(RPC_SHUTDOWN_ERROR, \"Node is shutting down\");\n+    BlockRef block{*CHECK_NONFATAL(old_block)};\n+\n+    std::optional<BlockRef> new_block;\n     if (IsRPCRunning()) {\n-        block = timeout ? miner.waitTipChanged(block.hash, std::chrono::milliseconds(timeout)) : miner.waitTipChanged(block.hash);\n+        new_block = timeout ? miner.waitTipChanged(block.hash, std::chrono::milliseconds(timeout)) : miner.waitTipChanged(block.hash);\n+        // Return new block unless the node is shutting down\n+        if (new_block) {\n+            block = *CHECK_NONFATAL(new_block);\n+        }",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "0c06c8108fb43be317d86199750ecd3b7db9a5d2",
      "in_reply_to_id": 1954865233,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point, `getTip()` doesn't wait.",
      "created_at": "2025-02-13T19:01:46Z",
      "updated_at": "2025-02-13T19:01:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1955067561",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1955067561"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 289,
      "start_side": "LEFT",
      "line": null,
      "original_line": 300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1955115023",
      "pull_request_review_id": 2616055185,
      "id": 1955115023,
      "node_id": "PRRC_kwDOABII5850iLAP",
      "diff_hunk": "@@ -286,9 +287,17 @@ static RPCHelpMan waitfornewblock()\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     Mining& miner = EnsureMining(node);\n \n-    auto block{CHECK_NONFATAL(miner.getTip()).value()};\n+    std::optional<BlockRef> old_block{miner.getTip()};\n+    if (!old_block) throw JSONRPCError(RPC_SHUTDOWN_ERROR, \"Node is shutting down\");\n+    BlockRef block{*CHECK_NONFATAL(old_block)};\n+\n+    std::optional<BlockRef> new_block;\n     if (IsRPCRunning()) {\n-        block = timeout ? miner.waitTipChanged(block.hash, std::chrono::milliseconds(timeout)) : miner.waitTipChanged(block.hash);\n+        new_block = timeout ? miner.waitTipChanged(block.hash, std::chrono::milliseconds(timeout)) : miner.waitTipChanged(block.hash);\n+        // Return new block unless the node is shutting down\n+        if (new_block) {\n+            block = *CHECK_NONFATAL(new_block);\n+        }",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "0c06c8108fb43be317d86199750ecd3b7db9a5d2",
      "in_reply_to_id": 1954865233,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I made a variant of this that's a bit more in line with #30635; during startup we'll wait by using the 0 hash.",
      "created_at": "2025-02-13T19:41:42Z",
      "updated_at": "2025-02-13T19:41:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1955115023",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1955115023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 289,
      "start_side": "LEFT",
      "line": null,
      "original_line": 300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1959586025",
      "pull_request_review_id": 2623295004,
      "id": 1959586025,
      "node_id": "PRRC_kwDOABII5850zOjp",
      "diff_hunk": "@@ -971,24 +971,38 @@ class MinerImpl : public Mining\n         return BlockRef{tip->GetBlockHash(), tip->nHeight};\n     }\n \n-    BlockRef waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n+    std::optional<BlockRef> waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n     {\n         if (timeout > std::chrono::years{100}) timeout = std::chrono::years{100}; // Upper bound to avoid UB in std::chrono\n+        auto deadline{std::chrono::steady_clock::now() + timeout};\n         {\n             WAIT_LOCK(notifications().m_tip_block_mutex, lock);\n-            notifications().m_tip_block_cv.wait_for(lock, timeout, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\n-                // We need to wait for m_tip_block to be set AND for the value\n-                // to differ from the current_tip value.\n-                return (notifications().TipBlock() && notifications().TipBlock() != current_tip) || chainman().m_interrupt;\n+            // For callers convenience, wait longer than the provided timeout\n+            // during startup for the tip to be non-null. That way this function\n+            // always returns valid tip information when possible and only\n+            // returns null when shutting down, not when timing out.\n+            notifications().m_tip_block_cv.wait(lock, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\n+                return notifications().TipBlock() || chainman().m_interrupt;\n+            });\n+            // At this point TipBlock is set, so continue to wait until it is\n+            // different then `current_tip` provided by caller.\n+            notifications().m_tip_block_cv.wait_until(lock, deadline, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\n+                return Assume(notifications().TipBlock()) != current_tip || chainman().m_interrupt;\n             });",
      "path": "src/node/interfaces.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "2042ed105578a71234295b01be39ad8607722abe",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The `Assume()` can be triggered during normal circumstances: if the first wait quits with `TipBlock()` null and `chainman().m_interrupt` being `true`. The easiest way to work around this would be to swap the order in the second condition:\r\n\r\n```diff\r\n- Assume(notifications().TipBlock()) != current_tip || chainman().m_interrupt\r\n+ chainman().m_interrupt || Assume(notifications().TipBlock()) != current_tip\r\n```\r\nthat might be a bit fragile though, wrt future changes.",
      "created_at": "2025-02-18T11:50:15Z",
      "updated_at": "2025-02-18T12:15:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1959586025",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1959586025"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 984,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1093,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1959604318",
      "pull_request_review_id": 2623295004,
      "id": 1959604318,
      "node_id": "PRRC_kwDOABII5850zTBe",
      "diff_hunk": "@@ -332,22 +337,28 @@ static RPCHelpMan waitforblock()\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     Mining& miner = EnsureMining(node);\n \n-    auto block{CHECK_NONFATAL(miner.getTip()).value()};\n+    std::optional<BlockRef> block{miner.getTip()};\n+    // If getTip() returns null, which can happen during startup, pass 0 to\n+    // waitTipChanged() so it will wait for any tip hash to be set.\n+    uint256 tip_hash{block ? block->hash : uint256{}};\n+\n     const auto deadline{std::chrono::steady_clock::now() + 1ms * timeout};\n-    while (IsRPCRunning() && block.hash != hash) {\n+    while (tip_hash != hash) {\n         if (timeout) {\n             auto now{std::chrono::steady_clock::now()};\n             if (now >= deadline) break;\n             const MillisecondsDouble remaining{deadline - now};\n-            block = miner.waitTipChanged(block.hash, remaining);\n+            block = miner.waitTipChanged(tip_hash, remaining);\n         } else {\n-            block = miner.waitTipChanged(block.hash);\n+            block = miner.waitTipChanged(tip_hash);\n         }\n+        if (!block) throw JSONRPCError(RPC_SHUTDOWN_ERROR, \"Node is shutting down\");\n+        tip_hash = block->hash;\n     }\n \n     UniValue ret(UniValue::VOBJ);\n-    ret.pushKV(\"hash\", block.hash.GetHex());\n-    ret.pushKV(\"height\", block.height);\n+    ret.pushKV(\"hash\", block->hash.GetHex());\n+    ret.pushKV(\"height\", block->height);",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 64,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "2042ed105578a71234295b01be39ad8607722abe",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This could crash in the following (stupid) scenario:\r\n* the user provides `0` as desired block hash to the `waitforblock`\r\n* `getTip()` returns `nullopt`, which is assigned to `block`\r\n* the `while` loop is never entered, not even once so `block` remains `nullopt`\r\n* at the end we try to dereference the `nullopt` `block` :rescue_worker_helmet: \r\n\r\nWe shouldn't crash even on such \"idiotic\" input. Maybe change the `while` condition:\r\n\r\n```diff\r\n- while (tip_hash != hash) {\r\n+ while (tip_hash != hash || !block.has_value()) {\r\n```",
      "created_at": "2025-02-18T12:01:24Z",
      "updated_at": "2025-02-18T12:15:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1959604318",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1959604318"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 340,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 361,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1959608374",
      "pull_request_review_id": 2623295004,
      "id": 1959608374,
      "node_id": "PRRC_kwDOABII5850zUA2",
      "diff_hunk": "@@ -387,23 +398,31 @@ static RPCHelpMan waitforblockheight()\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     Mining& miner = EnsureMining(node);\n \n-    auto block{CHECK_NONFATAL(miner.getTip()).value()};\n     const auto deadline{std::chrono::steady_clock::now() + 1ms * timeout};\n \n-    while (IsRPCRunning() && block.height < height) {\n+    std::optional<BlockRef> block{miner.getTip()};\n+    // If getTip() returns null, which can happen during startup, pass 0 to\n+    // waitTipChanged() so it will wait for any tip hash to be set.\n+    uint256 tip_hash{block ? block->hash : uint256{}};\n+    int block_height{block ? block->height : 0};\n+\n+    while (block_height < height) {",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 82,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "2042ed105578a71234295b01be39ad8607722abe",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Same here, if the user provides `height=0`, and `getTip()` returns `nullopt`, then this will be `while (0 < 0)`, will never enter and `block` will remain `nullopt` and be dereferenced at the end.",
      "created_at": "2025-02-18T12:04:31Z",
      "updated_at": "2025-02-18T12:15:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1959608374",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1959608374"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 409,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1959617648",
      "pull_request_review_id": 2623295004,
      "id": 1959617648,
      "node_id": "PRRC_kwDOABII5850zWRw",
      "diff_hunk": "@@ -286,14 +287,18 @@ static RPCHelpMan waitfornewblock()\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     Mining& miner = EnsureMining(node);\n \n-    auto block{CHECK_NONFATAL(miner.getTip()).value()};\n-    if (IsRPCRunning()) {\n-        block = timeout ? miner.waitTipChanged(block.hash, std::chrono::milliseconds(timeout)) : miner.waitTipChanged(block.hash);\n-    }\n+    std::optional<BlockRef> block{miner.getTip()};\n+    // If getTip() returns null, which can happen during startup, pass 0 to\n+    // waitTipChanged() so it will wait for any tip hash to be set.\n+    uint256 tip_hash{block ? block->hash : uint256{}};",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "2042ed105578a71234295b01be39ad8607722abe",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: maybe use `uint256::ZERO`, also used in commit b954af72e4d6a83b3ba701b7ee52d97f2af3254b `Have createNewBlock() wait for a tip`:\r\n\r\n```suggestion\r\n    uint256 tip_hash{block ? block->hash : uint256::ZERO};\r\n```",
      "created_at": "2025-02-18T12:09:49Z",
      "updated_at": "2025-02-18T12:15:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1959617648",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1959617648"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 293,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1959857461",
      "pull_request_review_id": 2623759932,
      "id": 1959857461,
      "node_id": "PRRC_kwDOABII58500Q01",
      "diff_hunk": "@@ -332,22 +337,28 @@ static RPCHelpMan waitforblock()\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     Mining& miner = EnsureMining(node);\n \n-    auto block{CHECK_NONFATAL(miner.getTip()).value()};\n+    std::optional<BlockRef> block{miner.getTip()};\n+    // If getTip() returns null, which can happen during startup, pass 0 to\n+    // waitTipChanged() so it will wait for any tip hash to be set.\n+    uint256 tip_hash{block ? block->hash : uint256{}};\n+\n     const auto deadline{std::chrono::steady_clock::now() + 1ms * timeout};\n-    while (IsRPCRunning() && block.hash != hash) {\n+    while (tip_hash != hash) {\n         if (timeout) {\n             auto now{std::chrono::steady_clock::now()};\n             if (now >= deadline) break;\n             const MillisecondsDouble remaining{deadline - now};\n-            block = miner.waitTipChanged(block.hash, remaining);\n+            block = miner.waitTipChanged(tip_hash, remaining);\n         } else {\n-            block = miner.waitTipChanged(block.hash);\n+            block = miner.waitTipChanged(tip_hash);\n         }\n+        if (!block) throw JSONRPCError(RPC_SHUTDOWN_ERROR, \"Node is shutting down\");\n+        tip_hash = block->hash;\n     }\n \n     UniValue ret(UniValue::VOBJ);\n-    ret.pushKV(\"hash\", block.hash.GetHex());\n-    ret.pushKV(\"height\", block.height);\n+    ret.pushKV(\"hash\", block->hash.GetHex());\n+    ret.pushKV(\"height\", block->height);",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 64,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "2042ed105578a71234295b01be39ad8607722abe",
      "in_reply_to_id": 1959604318,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I guess it could also crash on a non-existing block hash? That's not unlikely to happen.",
      "created_at": "2025-02-18T14:25:38Z",
      "updated_at": "2025-02-18T14:25:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1959857461",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1959857461"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 340,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 361,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1959897031",
      "pull_request_review_id": 2623826745,
      "id": 1959897031,
      "node_id": "PRRC_kwDOABII58500afH",
      "diff_hunk": "@@ -332,22 +337,28 @@ static RPCHelpMan waitforblock()\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     Mining& miner = EnsureMining(node);\n \n-    auto block{CHECK_NONFATAL(miner.getTip()).value()};\n+    std::optional<BlockRef> block{miner.getTip()};\n+    // If getTip() returns null, which can happen during startup, pass 0 to\n+    // waitTipChanged() so it will wait for any tip hash to be set.\n+    uint256 tip_hash{block ? block->hash : uint256{}};\n+\n     const auto deadline{std::chrono::steady_clock::now() + 1ms * timeout};\n-    while (IsRPCRunning() && block.hash != hash) {\n+    while (tip_hash != hash) {\n         if (timeout) {\n             auto now{std::chrono::steady_clock::now()};\n             if (now >= deadline) break;\n             const MillisecondsDouble remaining{deadline - now};\n-            block = miner.waitTipChanged(block.hash, remaining);\n+            block = miner.waitTipChanged(tip_hash, remaining);\n         } else {\n-            block = miner.waitTipChanged(block.hash);\n+            block = miner.waitTipChanged(tip_hash);\n         }\n+        if (!block) throw JSONRPCError(RPC_SHUTDOWN_ERROR, \"Node is shutting down\");\n+        tip_hash = block->hash;\n     }\n \n     UniValue ret(UniValue::VOBJ);\n-    ret.pushKV(\"hash\", block.hash.GetHex());\n-    ret.pushKV(\"height\", block.height);\n+    ret.pushKV(\"hash\", block->hash.GetHex());\n+    ret.pushKV(\"height\", block->height);",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 64,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "2042ed105578a71234295b01be39ad8607722abe",
      "in_reply_to_id": 1959604318,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added",
      "created_at": "2025-02-18T14:44:34Z",
      "updated_at": "2025-02-18T14:44:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1959897031",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1959897031"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 340,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 361,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1959897532",
      "pull_request_review_id": 2623827571,
      "id": 1959897532,
      "node_id": "PRRC_kwDOABII58500am8",
      "diff_hunk": "@@ -971,24 +971,38 @@ class MinerImpl : public Mining\n         return BlockRef{tip->GetBlockHash(), tip->nHeight};\n     }\n \n-    BlockRef waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n+    std::optional<BlockRef> waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n     {\n         if (timeout > std::chrono::years{100}) timeout = std::chrono::years{100}; // Upper bound to avoid UB in std::chrono\n+        auto deadline{std::chrono::steady_clock::now() + timeout};\n         {\n             WAIT_LOCK(notifications().m_tip_block_mutex, lock);\n-            notifications().m_tip_block_cv.wait_for(lock, timeout, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\n-                // We need to wait for m_tip_block to be set AND for the value\n-                // to differ from the current_tip value.\n-                return (notifications().TipBlock() && notifications().TipBlock() != current_tip) || chainman().m_interrupt;\n+            // For callers convenience, wait longer than the provided timeout\n+            // during startup for the tip to be non-null. That way this function\n+            // always returns valid tip information when possible and only\n+            // returns null when shutting down, not when timing out.\n+            notifications().m_tip_block_cv.wait(lock, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\n+                return notifications().TipBlock() || chainman().m_interrupt;\n+            });\n+            // At this point TipBlock is set, so continue to wait until it is\n+            // different then `current_tip` provided by caller.\n+            notifications().m_tip_block_cv.wait_until(lock, deadline, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\n+                return Assume(notifications().TipBlock()) != current_tip || chainman().m_interrupt;\n             });",
      "path": "src/node/interfaces.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "2042ed105578a71234295b01be39ad8607722abe",
      "in_reply_to_id": 1959586025,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I flipped it.",
      "created_at": "2025-02-18T14:44:50Z",
      "updated_at": "2025-02-18T14:44:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1959897532",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1959897532"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 984,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1093,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960150037",
      "pull_request_review_id": 2624284851,
      "id": 1960150037,
      "node_id": "PRRC_kwDOABII58501YQV",
      "diff_hunk": "@@ -971,24 +971,38 @@ class MinerImpl : public Mining\n         return BlockRef{tip->GetBlockHash(), tip->nHeight};\n     }\n \n-    BlockRef waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n+    std::optional<BlockRef> waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n     {\n         if (timeout > std::chrono::years{100}) timeout = std::chrono::years{100}; // Upper bound to avoid UB in std::chrono\n+        auto deadline{std::chrono::steady_clock::now() + timeout};\n         {\n             WAIT_LOCK(notifications().m_tip_block_mutex, lock);\n-            notifications().m_tip_block_cv.wait_for(lock, timeout, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\n-                // We need to wait for m_tip_block to be set AND for the value\n-                // to differ from the current_tip value.\n-                return (notifications().TipBlock() && notifications().TipBlock() != current_tip) || chainman().m_interrupt;\n+            // For callers convenience, wait longer than the provided timeout\n+            // during startup for the tip to be non-null. That way this function\n+            // always returns valid tip information when possible and only\n+            // returns null when shutting down, not when timing out.\n+            notifications().m_tip_block_cv.wait(lock, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\n+                return notifications().TipBlock() || chainman().m_interrupt;\n+            });\n+            // At this point TipBlock is set, so continue to wait until it is\n+            // different then `current_tip` provided by caller.\n+            notifications().m_tip_block_cv.wait_until(lock, deadline, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\n+                return Assume(notifications().TipBlock()) != current_tip || chainman().m_interrupt;\n             });",
      "path": "src/node/interfaces.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "2042ed105578a71234295b01be39ad8607722abe",
      "in_reply_to_id": 1959586025,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1959586025\r\n\r\nNice catch. I agree flipping condition is a bit fragile. It also makes code less consistent and leaves \"At this point TipBlock is set...\" comment being not totally accurate. Would suggest a tweak to unflip and be clearer:\r\n\r\n```diff\r\n--- a/src/node/interfaces.cpp\r\n+++ b/src/node/interfaces.cpp\r\n@@ -984,10 +984,11 @@ public:\r\n             notifications().m_tip_block_cv.wait(lock, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\r\n                 return notifications().TipBlock() || chainman().m_interrupt;\r\n             });\r\n+            if (chainman().m_interrupt) return {};\r\n             // At this point TipBlock is set, so continue to wait until it is\r\n             // different then `current_tip` provided by caller.\r\n             notifications().m_tip_block_cv.wait_until(lock, deadline, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\r\n-                return chainman().m_interrupt || Assume(notifications().TipBlock()) != current_tip;\r\n+                return Assume(notifications().TipBlock()) != current_tip || chainman().m_interrupt;\r\n             });\r\n         }\r\n \r\n```\r\n\r\n\r\n\r\n\r\n",
      "created_at": "2025-02-18T17:00:52Z",
      "updated_at": "2025-02-18T18:19:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1960150037",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960150037"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 984,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1093,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960188607",
      "pull_request_review_id": 2624284851,
      "id": 1960188607,
      "node_id": "PRRC_kwDOABII58501hq_",
      "diff_hunk": "@@ -286,9 +287,17 @@ static RPCHelpMan waitfornewblock()\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     Mining& miner = EnsureMining(node);\n \n-    auto block{CHECK_NONFATAL(miner.getTip()).value()};\n+    std::optional<BlockRef> old_block{miner.getTip()};\n+    if (!old_block) throw JSONRPCError(RPC_SHUTDOWN_ERROR, \"Node is shutting down\");\n+    BlockRef block{*CHECK_NONFATAL(old_block)};\n+\n+    std::optional<BlockRef> new_block;\n     if (IsRPCRunning()) {\n-        block = timeout ? miner.waitTipChanged(block.hash, std::chrono::milliseconds(timeout)) : miner.waitTipChanged(block.hash);\n+        new_block = timeout ? miner.waitTipChanged(block.hash, std::chrono::milliseconds(timeout)) : miner.waitTipChanged(block.hash);\n+        // Return new block unless the node is shutting down\n+        if (new_block) {\n+            block = *CHECK_NONFATAL(new_block);\n+        }",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "0c06c8108fb43be317d86199750ecd3b7db9a5d2",
      "in_reply_to_id": 1954865233,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1955115023\r\n\r\n> I made a variant of this that's a bit more in line with #30635; during startup we'll wait by using the 0 hash.\r\n\r\nThis seems ok to me, and I initially considered suggesting that, but it seemed like it expanded the scope of the PR too much and was not related to its original goals.\r\n\r\nI think if the PR will do this, it should also include release notes that say these RPCs will now wait on startup instead of returning errors on startup. The RPC method documentation should also be updated to say that timeout option only applies to the specific condition the RPC method is waiting for, and if the RPC method is called during startup it will wait arbitrarily long for the chain state to be ready, ignoring the timeout.\r\n\r\nI'd still slightly prefer keeping semantics of the RPC methods unchanged in this PR and just making the more minimal change I suggested above. I think a dedicated PR like #30635 would be a better place to update the RPC interface, if that is what we want to do.\r\n\r\nNo strong opinion though, and this seems ok too.",
      "created_at": "2025-02-18T17:25:39Z",
      "updated_at": "2025-02-18T18:19:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1960188607",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960188607"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 289,
      "start_side": "LEFT",
      "line": null,
      "original_line": 300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960206388",
      "pull_request_review_id": 2624284851,
      "id": 1960206388,
      "node_id": "PRRC_kwDOABII58501mA0",
      "diff_hunk": "@@ -332,22 +337,28 @@ static RPCHelpMan waitforblock()\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     Mining& miner = EnsureMining(node);\n \n-    auto block{CHECK_NONFATAL(miner.getTip()).value()};\n+    std::optional<BlockRef> block{miner.getTip()};\n+    // If getTip() returns null, which can happen during startup, pass 0 to\n+    // waitTipChanged() so it will wait for any tip hash to be set.\n+    uint256 tip_hash{block ? block->hash : uint256{}};\n+\n     const auto deadline{std::chrono::steady_clock::now() + 1ms * timeout};\n-    while (IsRPCRunning() && block.hash != hash) {\n+    while (tip_hash != hash || !block.has_value()) {",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "98282f56112af33691a3fe2e1ad7c14febbb0660",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"rpc: handle shutdown during long poll and wait methods\" (98282f56112af33691a3fe2e1ad7c14febbb0660)\r\n\r\nNot important but it would be nice if code style in this PR were a little more consistent. I'd prefer replacing `uint256{}` with `uint256::ZERO` and replacing `block.has_value()` with just `block` but any consistent style would be better IMO.\r\n\r\n",
      "created_at": "2025-02-18T17:35:33Z",
      "updated_at": "2025-02-18T18:19:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1960206388",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960206388"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 343,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 346,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960264859",
      "pull_request_review_id": 2624284851,
      "id": 1960264859,
      "node_id": "PRRC_kwDOABII585010Sb",
      "diff_hunk": "@@ -801,16 +816,21 @@ static RPCHelpMan getblocktemplate()\n         LEAVE_CRITICAL_SECTION(cs_main);\n         {\n             MillisecondsDouble checktxtime{std::chrono::minutes(1)};\n-            while (tip == hashWatchedChain && IsRPCRunning()) {\n+            while (IsRPCRunning()) {\n+                // If hashWatchedChain is not be a real block hash, this will\n+                // return immediately.",
      "path": "src/rpc/mining.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "6806651d2f64d51094178cbfb23ef2f4a956aa4d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"rpc: clarify longpoll behavior\" (6806651d2f64d51094178cbfb23ef2f4a956aa4d)\r\n\r\ns/is not be/is not/",
      "created_at": "2025-02-18T18:09:27Z",
      "updated_at": "2025-02-18T18:19:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1960264859",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1960264859"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 820,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 821,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1961207980",
      "pull_request_review_id": 2626025244,
      "id": 1961207980,
      "node_id": "PRRC_kwDOABII58505ais",
      "diff_hunk": "@@ -971,24 +971,38 @@ class MinerImpl : public Mining\n         return BlockRef{tip->GetBlockHash(), tip->nHeight};\n     }\n \n-    BlockRef waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n+    std::optional<BlockRef> waitTipChanged(uint256 current_tip, MillisecondsDouble timeout) override\n     {\n         if (timeout > std::chrono::years{100}) timeout = std::chrono::years{100}; // Upper bound to avoid UB in std::chrono\n+        auto deadline{std::chrono::steady_clock::now() + timeout};\n         {\n             WAIT_LOCK(notifications().m_tip_block_mutex, lock);\n-            notifications().m_tip_block_cv.wait_for(lock, timeout, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\n-                // We need to wait for m_tip_block to be set AND for the value\n-                // to differ from the current_tip value.\n-                return (notifications().TipBlock() && notifications().TipBlock() != current_tip) || chainman().m_interrupt;\n+            // For callers convenience, wait longer than the provided timeout\n+            // during startup for the tip to be non-null. That way this function\n+            // always returns valid tip information when possible and only\n+            // returns null when shutting down, not when timing out.\n+            notifications().m_tip_block_cv.wait(lock, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\n+                return notifications().TipBlock() || chainman().m_interrupt;\n+            });\n+            // At this point TipBlock is set, so continue to wait until it is\n+            // different then `current_tip` provided by caller.\n+            notifications().m_tip_block_cv.wait_until(lock, deadline, [&]() EXCLUSIVE_LOCKS_REQUIRED(notifications().m_tip_block_mutex) {\n+                return Assume(notifications().TipBlock()) != current_tip || chainman().m_interrupt;\n             });",
      "path": "src/node/interfaces.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "2042ed105578a71234295b01be39ad8607722abe",
      "in_reply_to_id": 1959586025,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point about the comment, I took your suggestion.",
      "created_at": "2025-02-19T08:37:51Z",
      "updated_at": "2025-02-19T08:37:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1961207980",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1961207980"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 984,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1093,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1961542693",
      "pull_request_review_id": 2626561822,
      "id": 1961542693,
      "node_id": "PRRC_kwDOABII58506sQl",
      "diff_hunk": "@@ -332,22 +337,28 @@ static RPCHelpMan waitforblock()\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     Mining& miner = EnsureMining(node);\n \n-    auto block{CHECK_NONFATAL(miner.getTip()).value()};\n+    std::optional<BlockRef> block{miner.getTip()};\n+    // If getTip() returns null, which can happen during startup, pass 0 to\n+    // waitTipChanged() so it will wait for any tip hash to be set.\n+    uint256 tip_hash{block ? block->hash : uint256{}};\n+\n     const auto deadline{std::chrono::steady_clock::now() + 1ms * timeout};\n-    while (IsRPCRunning() && block.hash != hash) {\n+    while (tip_hash != hash || !block.has_value()) {",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "98282f56112af33691a3fe2e1ad7c14febbb0660",
      "in_reply_to_id": 1960206388,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Agreed, though both disappeared in my last push.",
      "created_at": "2025-02-19T11:53:46Z",
      "updated_at": "2025-02-19T11:53:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1961542693",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1961542693"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 343,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 346,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1961544741",
      "pull_request_review_id": 2626564863,
      "id": 1961544741,
      "node_id": "PRRC_kwDOABII58506swl",
      "diff_hunk": "@@ -286,9 +287,17 @@ static RPCHelpMan waitfornewblock()\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     Mining& miner = EnsureMining(node);\n \n-    auto block{CHECK_NONFATAL(miner.getTip()).value()};\n+    std::optional<BlockRef> old_block{miner.getTip()};\n+    if (!old_block) throw JSONRPCError(RPC_SHUTDOWN_ERROR, \"Node is shutting down\");\n+    BlockRef block{*CHECK_NONFATAL(old_block)};\n+\n+    std::optional<BlockRef> new_block;\n     if (IsRPCRunning()) {\n-        block = timeout ? miner.waitTipChanged(block.hash, std::chrono::milliseconds(timeout)) : miner.waitTipChanged(block.hash);\n+        new_block = timeout ? miner.waitTipChanged(block.hash, std::chrono::milliseconds(timeout)) : miner.waitTipChanged(block.hash);\n+        // Return new block unless the node is shutting down\n+        if (new_block) {\n+            block = *CHECK_NONFATAL(new_block);\n+        }",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "0c06c8108fb43be317d86199750ecd3b7db9a5d2",
      "in_reply_to_id": 1954865233,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I went back to the old behavior.",
      "created_at": "2025-02-19T11:55:04Z",
      "updated_at": "2025-02-19T11:55:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1961544741",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1961544741"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 289,
      "start_side": "LEFT",
      "line": null,
      "original_line": 300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1961627062",
      "pull_request_review_id": 2626699620,
      "id": 1961627062,
      "node_id": "PRRC_kwDOABII58507A22",
      "diff_hunk": "@@ -387,23 +400,30 @@ static RPCHelpMan waitforblockheight()\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     Mining& miner = EnsureMining(node);\n \n-    auto block{CHECK_NONFATAL(miner.getTip()).value()};\n+    std::optional<BlockRef> current_block{miner.getTip()};\n+    // Abort if RPC came out of warmup too early\n+    if (!current_block) NONFATAL_UNREACHABLE();",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 77,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "0a8a9e8a901f9b5f9e718a69216fd42390ae4fba",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n     BlockRef current_block{*CHECK_NONFATAL(miner.getTip())};\r\n    // Abort if RPC came out of warmup too early\r\n \r\n```\r\n\r\nThere is no need for optional, if the value can never be nullopt ",
      "created_at": "2025-02-19T12:52:13Z",
      "updated_at": "2025-02-19T12:52:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1961627062",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1961627062"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 403,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 405,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1961792583",
      "pull_request_review_id": 2627007370,
      "id": 1961792583,
      "node_id": "PRRC_kwDOABII58507pRH",
      "diff_hunk": "@@ -330,22 +336,28 @@ static RPCHelpMan waitforblock()\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     Mining& miner = EnsureMining(node);\n \n-    auto block{CHECK_NONFATAL(miner.getTip()).value()};\n+    // Abort if RPC came out of warmup too early\n+    BlockRef current_block{CHECK_NONFATAL(miner.getTip()).value()};\n+\n     const auto deadline{std::chrono::steady_clock::now() + 1ms * timeout};\n-    while (block.hash != hash) {\n+    while (current_block.hash != hash) {\n+        std::optional<BlockRef> block;\n         if (timeout) {\n             auto now{std::chrono::steady_clock::now()};\n             if (now >= deadline) break;",
      "path": "src/rpc/blockchain.cpp",
      "position": 46,
      "original_position": 44,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "1e078f4e02e3548bbae4bf98e9bf8104e3fc78ff",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This might be a problem.",
      "created_at": "2025-02-19T14:32:03Z",
      "updated_at": "2025-02-19T14:32:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1961792583",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1961792583"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 347,
      "original_line": 347,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1961867136",
      "pull_request_review_id": 2627135786,
      "id": 1961867136,
      "node_id": "PRRC_kwDOABII585077eA",
      "diff_hunk": "@@ -385,23 +397,29 @@ static RPCHelpMan waitforblockheight()\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     Mining& miner = EnsureMining(node);\n \n-    auto block{CHECK_NONFATAL(miner.getTip()).value()};\n+    // Abort if RPC came out of warmup too early\n+    BlockRef current_block{CHECK_NONFATAL(miner.getTip()).value()};\n+\n     const auto deadline{std::chrono::steady_clock::now() + 1ms * timeout};\n \n-    while (block.height < height) {\n+    while (current_block.height < height) {\n+        std::optional<BlockRef> block;\n         if (timeout) {\n             auto now{std::chrono::steady_clock::now()};\n-            if (now >= deadline) break;\n             const MillisecondsDouble remaining{deadline - now};\n-            block = miner.waitTipChanged(block.hash, remaining);\n+            if (remaining < 0ms) break;\n+            block = miner.waitTipChanged(block->hash, remaining);",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "505cb484ebfefbda539ac7e5e75549f8bec28026",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I reproduced the CI bug and problem happens on this line. Looks like `block->hash` should be replaced by `current_block.hash` here and below",
      "created_at": "2025-02-19T15:12:15Z",
      "updated_at": "2025-02-19T15:12:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1961867136",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1961867136"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 411,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1961882621",
      "pull_request_review_id": 2627162053,
      "id": 1961882621,
      "node_id": "PRRC_kwDOABII58507_P9",
      "diff_hunk": "@@ -385,23 +397,29 @@ static RPCHelpMan waitforblockheight()\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     Mining& miner = EnsureMining(node);\n \n-    auto block{CHECK_NONFATAL(miner.getTip()).value()};\n+    // Abort if RPC came out of warmup too early\n+    BlockRef current_block{CHECK_NONFATAL(miner.getTip()).value()};\n+\n     const auto deadline{std::chrono::steady_clock::now() + 1ms * timeout};\n \n-    while (block.height < height) {\n+    while (current_block.height < height) {\n+        std::optional<BlockRef> block;\n         if (timeout) {\n             auto now{std::chrono::steady_clock::now()};\n-            if (now >= deadline) break;\n             const MillisecondsDouble remaining{deadline - now};\n-            block = miner.waitTipChanged(block.hash, remaining);\n+            if (remaining < 0ms) break;\n+            block = miner.waitTipChanged(block->hash, remaining);",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "505cb484ebfefbda539ac7e5e75549f8bec28026",
      "in_reply_to_id": 1961867136,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good catch, that's also consistent with `waitforblock`. ",
      "created_at": "2025-02-19T15:21:02Z",
      "updated_at": "2025-02-19T15:21:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1961882621",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1961882621"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 411,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1962003488",
      "pull_request_review_id": 2627361120,
      "id": 1962003488,
      "node_id": "PRRC_kwDOABII58508cwg",
      "diff_hunk": "@@ -385,23 +397,29 @@ static RPCHelpMan waitforblockheight()\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     Mining& miner = EnsureMining(node);\n \n-    auto block{CHECK_NONFATAL(miner.getTip()).value()};\n+    // Abort if RPC came out of warmup too early\n+    BlockRef current_block{CHECK_NONFATAL(miner.getTip()).value()};\n+\n     const auto deadline{std::chrono::steady_clock::now() + 1ms * timeout};\n \n-    while (block.height < height) {\n+    while (current_block.height < height) {\n+        std::optional<BlockRef> block;\n         if (timeout) {\n             auto now{std::chrono::steady_clock::now()};\n-            if (now >= deadline) break;\n             const MillisecondsDouble remaining{deadline - now};\n-            block = miner.waitTipChanged(block.hash, remaining);\n+            if (remaining < 0ms) break;\n+            block = miner.waitTipChanged(block->hash, remaining);",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "505cb484ebfefbda539ac7e5e75549f8bec28026",
      "in_reply_to_id": 1961867136,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Looks like that indeed did the trick.",
      "created_at": "2025-02-19T16:28:02Z",
      "updated_at": "2025-02-19T16:28:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1962003488",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1962003488"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 411,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1962024170",
      "pull_request_review_id": 2627395741,
      "id": 1962024170,
      "node_id": "PRRC_kwDOABII58508hzq",
      "diff_hunk": "@@ -80,7 +80,9 @@ class Mining\n      *\n      * @param[in] current_tip block hash of the current chain tip. Function waits\n      *                        for the chain tip to differ from this.\n-     * @param[in] timeout     how long to wait for a new tip\n+     * @param[in] timeout     how long to wait for a new tip (default is forever,\n+     *                        negative values are rounded to 0, but should be avoided)",
      "path": "src/interfaces/mining.h",
      "position": null,
      "original_position": 6,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "f036e5091a90b75982684c5b64db1301d3ec2515",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"Handle negative timeout for waitTipChanged()\" (f036e5091a90b75982684c5b64db1301d3ec2515)\r\n\r\nIMO, new handling of negative timeouts seems reasonable to keep, but mentioning them in documentation is distracting. Would be less confusing to just shorten this to \"(default is forever)\".",
      "created_at": "2025-02-19T16:40:47Z",
      "updated_at": "2025-02-19T17:10:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1962024170",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1962024170"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 83,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1962033871",
      "pull_request_review_id": 2627395741,
      "id": 1962033871,
      "node_id": "PRRC_kwDOABII58508kLP",
      "diff_hunk": "@@ -286,12 +287,17 @@ static RPCHelpMan waitfornewblock()\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     Mining& miner = EnsureMining(node);\n \n-    auto block{CHECK_NONFATAL(miner.getTip()).value()};\n-    block = timeout ? miner.waitTipChanged(block.hash, std::chrono::milliseconds(timeout)) : miner.waitTipChanged(block.hash);\n+    // Abort if RPC came out of warmup too early\n+    BlockRef current_block{CHECK_NONFATAL(miner.getTip()).value()};",
      "path": "src/rpc/blockchain.cpp",
      "position": 17,
      "original_position": 15,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "edfb4ad204e71fc266be55748290340b8791e12f",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"rpc: handle shutdown during long poll and wait methods\" (edfb4ad204e71fc266be55748290340b8791e12f)\r\n\r\nThis seem inconsistent with the commit message with says \"a missing tip at startup now triggers NONFATAL_UNREACHABLE instead of CHECK_NONFATAL.\" Is commit message just out of date?",
      "created_at": "2025-02-19T16:46:48Z",
      "updated_at": "2025-02-19T17:10:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1962033871",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1962033871"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 291,
      "original_line": 291,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1962047606",
      "pull_request_review_id": 2627395741,
      "id": 1962047606,
      "node_id": "PRRC_kwDOABII58508nh2",
      "diff_hunk": "@@ -286,12 +287,17 @@ static RPCHelpMan waitfornewblock()\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     Mining& miner = EnsureMining(node);\n \n-    auto block{CHECK_NONFATAL(miner.getTip()).value()};\n-    block = timeout ? miner.waitTipChanged(block.hash, std::chrono::milliseconds(timeout)) : miner.waitTipChanged(block.hash);\n+    // Abort if RPC came out of warmup too early\n+    BlockRef current_block{CHECK_NONFATAL(miner.getTip()).value()};\n+    std::optional<BlockRef> block = timeout ? miner.waitTipChanged(current_block.hash, std::chrono::milliseconds(timeout)) :\n+                                              miner.waitTipChanged(current_block.hash);\n+\n+    // Return current block upon shutdown\n+    if (!block) block = current_block;",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "edfb4ad204e71fc266be55748290340b8791e12f",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"rpc: handle shutdown during long poll and wait methods\" (edfb4ad204e71fc266be55748290340b8791e12f)\r\n\r\nWould be more consistent with other methods (and also clearer IMO) to just return `current_block` instead of `block` like:\r\n\r\n```diff\r\n--- a/src/rpc/blockchain.cpp\r\n+++ b/src/rpc/blockchain.cpp\r\n@@ -293,11 +293,11 @@ static RPCHelpMan waitfornewblock()\r\n                                               miner.waitTipChanged(current_block.hash);\r\n \r\n     // Return current block upon shutdown\r\n-    if (!block) block = current_block;\r\n+    if (block) current_block = *block;\r\n \r\n     UniValue ret(UniValue::VOBJ);\r\n-    ret.pushKV(\"hash\", block->hash.GetHex());\r\n-    ret.pushKV(\"height\", block->height);\r\n+    ret.pushKV(\"hash\", current_block.hash.GetHex());\r\n+    ret.pushKV(\"height\", current_block.height);\r\n     return ret;\r\n },\r\n     };\r\n```\r\n",
      "created_at": "2025-02-19T16:55:32Z",
      "updated_at": "2025-02-19T17:10:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1962047606",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1962047606"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": 295,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 296,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1962059425",
      "pull_request_review_id": 2627395741,
      "id": 1962059425,
      "node_id": "PRRC_kwDOABII58508qah",
      "diff_hunk": "@@ -385,23 +397,29 @@ static RPCHelpMan waitforblockheight()\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     Mining& miner = EnsureMining(node);\n \n-    auto block{CHECK_NONFATAL(miner.getTip()).value()};\n+    // Abort if RPC came out of warmup too early\n+    BlockRef current_block{CHECK_NONFATAL(miner.getTip()).value()};\n+\n     const auto deadline{std::chrono::steady_clock::now() + 1ms * timeout};\n \n-    while (block.height < height) {\n+    while (current_block.height < height) {\n+        std::optional<BlockRef> block;\n         if (timeout) {\n             auto now{std::chrono::steady_clock::now()};\n-            if (now >= deadline) break;\n             const MillisecondsDouble remaining{deadline - now};\n-            block = miner.waitTipChanged(block.hash, remaining);\n+            if (remaining < 0ms) break;",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "edfb4ad204e71fc266be55748290340b8791e12f",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"rpc: handle shutdown during long poll and wait methods\" (edfb4ad204e71fc266be55748290340b8791e12f)\r\n\r\nThis change seems equivalent to previous code, and previous code seems clearer. This change also makes waitforblockheight implementation less consistent with waitforblock. Would suggest:\r\n\r\n```diff\r\n--- a/src/rpc/blockchain.cpp\r\n+++ b/src/rpc/blockchain.cpp\r\n@@ -406,8 +406,8 @@ static RPCHelpMan waitforblockheight()\r\n         std::optional<BlockRef> block;\r\n         if (timeout) {\r\n             auto now{std::chrono::steady_clock::now()};\r\n+            if (now >= deadline) break;\r\n             const MillisecondsDouble remaining{deadline - now};\r\n-            if (remaining < 0ms) break;\r\n             block = miner.waitTipChanged(current_block.hash, remaining);\r\n         } else {\r\n             block = miner.waitTipChanged(current_block.hash);\r\n\r\n```",
      "created_at": "2025-02-19T17:03:15Z",
      "updated_at": "2025-02-19T17:10:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1962059425",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1962059425"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 410,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1962065125",
      "pull_request_review_id": 2627395741,
      "id": 1962065125,
      "node_id": "PRRC_kwDOABII58508rzl",
      "diff_hunk": "@@ -89,10 +89,13 @@ class Mining\n     virtual std::optional<BlockRef> waitTipChanged(uint256 current_tip, MillisecondsDouble timeout = MillisecondsDouble::max()) = 0;\n \n    /**\n-     * Construct a new block template\n+     * Construct a new block template.\n+     *\n+     * During node initialization, this will wait until the tip is connected.\n      *\n      * @param[in] options options for creating the block\n-     * @returns a block template\n+     * @retval BlockTemplate a block template.\n+     * @retval std::nullopt if the node is shut down.",
      "path": "src/interfaces/mining.h",
      "position": null,
      "original_position": 12,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "a5b34064891814a998cac73c32f60d55a93e6811",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"Have createNewBlock() wait for a tip\" (a5b34064891814a998cac73c32f60d55a93e6811)\r\n\r\nThis is actually returning nullptr not nullopt",
      "created_at": "2025-02-19T17:07:09Z",
      "updated_at": "2025-02-19T17:10:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1962065125",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1962065125"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1962146971",
      "pull_request_review_id": 2627598511,
      "id": 1962146971,
      "node_id": "PRRC_kwDOABII58508_yb",
      "diff_hunk": "@@ -286,12 +287,17 @@ static RPCHelpMan waitfornewblock()\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     Mining& miner = EnsureMining(node);\n \n-    auto block{CHECK_NONFATAL(miner.getTip()).value()};\n-    block = timeout ? miner.waitTipChanged(block.hash, std::chrono::milliseconds(timeout)) : miner.waitTipChanged(block.hash);\n+    // Abort if RPC came out of warmup too early\n+    BlockRef current_block{CHECK_NONFATAL(miner.getTip()).value()};",
      "path": "src/rpc/blockchain.cpp",
      "position": 17,
      "original_position": 15,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "edfb4ad204e71fc266be55748290340b8791e12f",
      "in_reply_to_id": 1962033871,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, I'll update the commit message.",
      "created_at": "2025-02-19T18:03:07Z",
      "updated_at": "2025-02-19T18:03:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1962146971",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1962146971"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 291,
      "original_line": 291,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1962152011",
      "pull_request_review_id": 2627607697,
      "id": 1962152011,
      "node_id": "PRRC_kwDOABII58509BBL",
      "diff_hunk": "@@ -385,23 +397,29 @@ static RPCHelpMan waitforblockheight()\n     NodeContext& node = EnsureAnyNodeContext(request.context);\n     Mining& miner = EnsureMining(node);\n \n-    auto block{CHECK_NONFATAL(miner.getTip()).value()};\n+    // Abort if RPC came out of warmup too early\n+    BlockRef current_block{CHECK_NONFATAL(miner.getTip()).value()};\n+\n     const auto deadline{std::chrono::steady_clock::now() + 1ms * timeout};\n \n-    while (block.height < height) {\n+    while (current_block.height < height) {\n+        std::optional<BlockRef> block;\n         if (timeout) {\n             auto now{std::chrono::steady_clock::now()};\n-            if (now >= deadline) break;\n             const MillisecondsDouble remaining{deadline - now};\n-            block = miner.waitTipChanged(block.hash, remaining);\n+            if (remaining < 0ms) break;",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "cc1001f3bf17b31512c05fb359e09483a07fb2a3",
      "original_commit_id": "edfb4ad204e71fc266be55748290340b8791e12f",
      "in_reply_to_id": 1962059425,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Indeed, I was briefly confused about this, but there's no need to change it.",
      "created_at": "2025-02-19T18:07:00Z",
      "updated_at": "2025-02-19T18:07:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31785#discussion_r1962152011",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1962152011"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31785"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 410,
      "side": "RIGHT"
    }
  ]
}