{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526",
    "id": 1988215302,
    "node_id": "PR_kwDOABII5852gcIG",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30526",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30526.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30526.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30526",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30526/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/73e3fa10b4dd63b7767d6b6f270df66971067341",
    "number": 30526,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "doc: Correct uint256 hex string endianness",
    "user": {
      "login": "hodlinator",
      "id": 172445034,
      "node_id": "U_kgDOCkdNag",
      "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hodlinator",
      "html_url": "https://github.com/hodlinator",
      "followers_url": "https://api.github.com/users/hodlinator/followers",
      "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
      "organizations_url": "https://api.github.com/users/hodlinator/orgs",
      "repos_url": "https://api.github.com/users/hodlinator/repos",
      "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/hodlinator/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This PR is a follow-up to #30436.\r\n\r\nOnly changes test-code and modifies/adds comments.\r\n\r\nByte order of hex string representation was wrongfully documented as little-endian, but are in fact closer to \"big-endian\" (endianness is a memory-order concept rather than a numeric concept). `[arith_]uint256` both store their data in arrays with little-endian byte order (`arith_uint256` has host byte order within each `uint32_t` element).\r\n\r\n**uint256_tests.cpp** - Avoid using variable from the left side of the condition in the right side. Credits to @maflcko: https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1688273553\r\n\r\n**setup_common.cpp** - Skip needless ArithToUint256-conversion. Credits to @stickies-v: https://github.com/bitcoin/bitcoin/pull/30436#discussion_r1688621638\r\n\r\n---\r\n\r\n<details>\r\n<summary>\r\n\r\n## Logical reasoning for endianness\r\n\r\n</summary>\r\n\r\n1. Comparing an `arith_uint256` (`base_uint<256>`) to a `uint64_t` compares the beginning of the array, and verifies the remaining elements are zero.\r\n```C++\r\ntemplate <unsigned int BITS>\r\nbool base_uint<BITS>::EqualTo(uint64_t b) const\r\n{\r\n    for (int i = WIDTH - 1; i >= 2; i--) {\r\n        if (pn[i])\r\n            return false;\r\n    }\r\n    if (pn[1] != (b >> 32))\r\n        return false;\r\n    if (pn[0] != (b & 0xfffffffful))\r\n        return false;\r\n    return true;\r\n}\r\n```\r\n...that is consistent with little endian ordering of the array.\r\n\r\n2. They have the same endianness (but `arith_*` has host-ordering of each `uint32_t` element):\r\n```C++\r\narith_uint256 UintToArith256(const uint256 &a)\r\n{\r\n    arith_uint256 b;\r\n    for(int x=0; x<b.WIDTH; ++x)\r\n        b.pn[x] = ReadLE32(a.begin() + x*4);\r\n    return b;\r\n}\r\n```\r\n\r\n### String conversions\r\n\r\nThe reversal of order which happens when converting hex-strings <=> uint256 means strings are actually closer to big-endian, see the end of `base_blob<BITS>::SetHexDeprecated`:\r\n```C++\r\n    unsigned char* p1 = m_data.data();\r\n    unsigned char* pend = p1 + WIDTH;\r\n    while (digits > 0 && p1 < pend) {\r\n        *p1 = ::HexDigit(trimmed[--digits]);\r\n        if (digits > 0) {\r\n            *p1 |= ((unsigned char)::HexDigit(trimmed[--digits]) << 4);\r\n            p1++;\r\n        }\r\n    }\r\n```\r\nSame reversal here:\r\n```C++\r\ntemplate <unsigned int BITS>\r\nstd::string base_blob<BITS>::GetHex() const\r\n{\r\n    uint8_t m_data_rev[WIDTH];\r\n    for (int i = 0; i < WIDTH; ++i) {\r\n        m_data_rev[i] = m_data[WIDTH - 1 - i];\r\n    }\r\n    return HexStr(m_data_rev);\r\n}\r\n```\r\nIt now makes sense to me that `SetHexDeprecated`, upon receiving a shorter hex string that requires zero-padding, would pad as if the missing hex chars where towards the end of the little-endian byte array, as they are the most significant bytes. \"Big-endian\" string representation is also consistent with the case where `SetHexDeprecated` receives too many hex digits and discards the leftmost ones, as a form of integer narrowing takes place.\r\n\r\n### How I got it wrong in #30436\r\n\r\nPreviously I used the less than (`<`) comparison to prove endianness, but for `uint256` it uses `memcmp` and thereby gives priority to the *lower* bytes at the beginning of the array.\r\n```C++\r\n    constexpr int Compare(const base_blob& other) const { return std::memcmp(m_data.data(), other.m_data.data(), WIDTH); }\r\n```\r\n\r\n`arith_uint256` is different in that it begins by comparing the bytes from the end, as it is using little endian representation, where the bytes toward the end are more significant.\r\n```C++\r\ntemplate <unsigned int BITS>\r\nint base_uint<BITS>::CompareTo(const base_uint<BITS>& b) const\r\n{\r\n    for (int i = WIDTH - 1; i >= 0; i--) {\r\n        if (pn[i] < b.pn[i])\r\n            return -1;\r\n        if (pn[i] > b.pn[i])\r\n            return 1;\r\n    }\r\n    return 0;\r\n}\r\n```\r\n(The commit documents that `base_blob::Compare()` is doing lexicographic ordering unlike the `arith_*`-variant which is doing numeric ordering).\r\n\r\n</details>",
    "labels": [
      {
        "id": 148216,
        "node_id": "MDU6TGFiZWwxNDgyMTY=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
        "name": "Docs",
        "color": "02d7e1",
        "default": false
      }
    ],
    "created_at": "2024-07-25T19:19:14Z",
    "updated_at": "2025-10-03T11:50:17Z",
    "closed_at": "2024-08-05T02:27:22Z",
    "mergeable_state": "unknown",
    "merged": true,
    "merged_at": "2024-08-05T02:27:22Z",
    "merged_by": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "merge_commit_sha": "1a7d20509f46f0cd38302da78dba9a0c9bb24226",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "hodlinator:2024-07_PR30436_follow_up",
      "ref": "2024-07_PR30436_follow_up",
      "sha": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 813856282,
        "node_id": "R_kgDOMIJ2Gg",
        "name": "bitcoin",
        "full_name": "hodlinator/bitcoin",
        "owner": {
          "login": "hodlinator",
          "id": 172445034,
          "node_id": "U_kgDOCkdNag",
          "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hodlinator",
          "html_url": "https://github.com/hodlinator",
          "followers_url": "https://api.github.com/users/hodlinator/followers",
          "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
          "organizations_url": "https://api.github.com/users/hodlinator/orgs",
          "repos_url": "https://api.github.com/users/hodlinator/repos",
          "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/hodlinator/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/hodlinator/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/hodlinator/bitcoin",
        "archive_url": "https://api.github.com/repos/hodlinator/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/hodlinator/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/hodlinator/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/hodlinator/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/hodlinator/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/hodlinator/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/hodlinator/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/hodlinator/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/hodlinator/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/hodlinator/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/hodlinator/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/hodlinator/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/hodlinator/bitcoin/events",
        "forks_url": "https://api.github.com/repos/hodlinator/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/hodlinator/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/hodlinator/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/hodlinator/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/hodlinator/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/hodlinator/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/hodlinator/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/hodlinator/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/hodlinator/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/hodlinator/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/hodlinator/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/hodlinator/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/hodlinator/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/hodlinator/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/hodlinator/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/hodlinator/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:hodlinator/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/hodlinator/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/hodlinator/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/hodlinator/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/hodlinator/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/hodlinator/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/hodlinator/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/hodlinator/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/hodlinator/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/hodlinator/bitcoin/hooks",
        "svn_url": "https://github.com/hodlinator/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 252022,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-02T15:36:48Z",
        "created_at": "2024-06-11T22:00:51Z",
        "updated_at": "2025-09-09T13:03:15Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "2aff9a36c352640a263e8b5de469710f7e80eb54",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37938,
        "stargazers_count": 85834,
        "watchers_count": 85834,
        "size": 294350,
        "default_branch": "master",
        "open_issues_count": 808,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-10-02T12:22:26Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-10-03T11:45:53Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 70,
    "deletions": 23,
    "changed_files": 5,
    "commits": 1,
    "review_comments": 38,
    "comments": 8
  },
  "events": [
    {
      "event": "mentioned",
      "id": 13651996299,
      "node_id": "MEE_lADOABII586Q44clzwAAAAMtuO6L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13651996299",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-25T19:19:15Z"
    },
    {
      "event": "subscribed",
      "id": 13651996310,
      "node_id": "SE_lADOABII586Q44clzwAAAAMtuO6W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13651996310",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-25T19:19:15Z"
    },
    {
      "event": "mentioned",
      "id": 13651996328,
      "node_id": "MEE_lADOABII586Q44clzwAAAAMtuO6o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13651996328",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-25T19:19:15Z"
    },
    {
      "event": "subscribed",
      "id": 13651996340,
      "node_id": "SE_lADOABII586Q44clzwAAAAMtuO60",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13651996340",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-25T19:19:15Z"
    },
    {
      "event": "commented",
      "id": 2251236992,
      "node_id": "IC_kwDOABII586GLyaA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2251236992",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-25T19:19:17Z",
      "updated_at": "2024-08-05T01:19:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30526).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [paplorinc](https://github.com/bitcoin/bitcoin/pull/30526#pullrequestreview-2217182891), [ryanofsky](https://github.com/bitcoin/bitcoin/pull/30526#pullrequestreview-2217875650) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30560](https://github.com/bitcoin/bitcoin/pull/30560) (refactor: Add consteval uint256 constructor by hodlinator)\n* [#30377](https://github.com/bitcoin/bitcoin/pull/30377) (refactor: Add consteval uint256{\"str\"} by hodlinator)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#issuecomment-2251236992",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30526"
    },
    {
      "event": "labeled",
      "id": 13651996980,
      "node_id": "LE_lADOABII586Q44clzwAAAAMtuPE0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13651996980",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-25T19:19:19Z",
      "label": {
        "name": "Docs",
        "color": "02d7e1"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13659954540,
      "node_id": "HRFPE_lADOABII586Q44clzwAAAAMuMl1s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13659954540",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f01848fb03353de29930d47226db299dcdbf2e78",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/f01848fb03353de29930d47226db299dcdbf2e78",
      "created_at": "2024-07-26T11:27:40Z"
    },
    {
      "event": "commented",
      "id": 2254159503,
      "node_id": "IC_kwDOABII586GW76P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2254159503",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-27T14:08:36Z",
      "updated_at": "2024-07-27T14:08:36Z",
      "author_association": "MEMBER",
      "body": "I'm not convinced about this change. The current code does have a number of confusing comments, but I think this confuses some things further.\r\n\r\n\"Big endian\" and \"little endian\" describe ways to encode/decode **numbers as bytes**. Byte arrays themselves do not have an endianness (only their interpretation as number does), and it's even ambiguous to apply the term to hex encodings of bytes. Given an array of bytes being converted to hexadecimal, we can imagine:\r\n* A. Those bytes being interpreted as a number (according to some endianness), and then that number is converted to hexadecimal for human consumption (typically most significant hex character first).\r\n* B. Those bytes being interpreted as a sequence of single-byte numbers, which are individually converted to hex characters (typically most significant hex character first) and just concatenated.\r\n\r\nThe hex format used for `uint256` could be described as:\r\n* (A) Converting to a number by interpreting as little-endian bytes, and then converting that number to hex with most significant character first.\r\n* The bytes are reversed, and then (B) individually converted to hex with most significant character first and concatenating.\r\n* (B) individually converting the bytes to hex with least significant character first and concatenating, followed by reversing the characters.\r\n\r\nNone of these descriptions are what I imagine when I read \"big-endian hex\".\r\n\r\n---\r\n\r\nI believe the most straightforward description is to treat `uint256` (despite its name) not as representing a number at all, but as a simple wrapper around 32-byte arrays (if we'd move some logic of it to separate functions, I think it would be totally reasonable to replace it with `using uint256 = std::array<std::byte, 32>` even), and endianness is then just an inapplicable term.\r\n* The hex encoding for `uint256` I would then describe as \"byte-reversed hex encoding\" (perhaps with an explainer \"matching the interpretation of the bytes in little-endian as `arith_uint256` does, followed by converting that to hex\").\r\n* The comparison between `uint256` would then be best described as \"lexicographic ordering (note: this does not match the ordering on the corresponding `arith_uint256` interpretation)\".\r\n\r\nOn the other hand, `arith_uint256` actually does implement a big integer type, which means:\r\n* Its byte encoding can properly be described as little-endian.\r\n* Its hex encoding can be described as \"hex encoding of the number (with the most significant characters first)\".\r\n* Its comparison is numeric comparison.\r\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#issuecomment-2254159503",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30526"
    },
    {
      "event": "commented",
      "id": 2254167133,
      "node_id": "IC_kwDOABII586GW9xd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2254167133",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-27T14:40:47Z",
      "updated_at": "2024-07-27T14:40:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for your detailed reasoning, @sipa!\r\n\r\nDocumenting the endianness was my idea, and I appreciate your insights. I will investigate your claims in more detail later as I am currently traveling.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#issuecomment-2254167133",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30526"
    },
    {
      "event": "mentioned",
      "id": 13668967070,
      "node_id": "MEE_lADOABII586Q44clzwAAAAMuu-Ke",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13668967070",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-27T14:40:48Z"
    },
    {
      "event": "subscribed",
      "id": 13668967074,
      "node_id": "SE_lADOABII586Q44clzwAAAAMuu-Ki",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13668967074",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-27T14:40:48Z"
    },
    {
      "event": "commented",
      "id": 2254461008,
      "node_id": "IC_kwDOABII586GYFhQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2254461008",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-28T10:10:38Z",
      "updated_at": "2024-07-29T05:20:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "After further consideration and research, I believe I've identified a key point that may help clarify our discussion about endianness in the codebase.\r\nWe seem to agree that the `base16` to `base256` conversion can indeed have an endianness.\r\nBased on the Wikipedia definition of endianness as \"the order in which bytes within a word of digital data are transmitted over a data communication medium or addressed (by rising addresses) in computer memory, counting only **byte significance compared to earliness**\", the resulting bytes (representing any data, especially if it's fixed size) can also be stored forward or backward, which aligns with this concept of significance compared to earliness. So according to this, arrays can also have endianness.\r\n\r\nCurrently, it seems we have a form of double endian encoding in our codebase, where:\r\n* The `base16` to `base256` conversion has an endianness.\r\n* The storage of the resulting bytes can also reflect endianness.\r\n\r\nThis double encoding might be the root of why we viewed this differently.\r\n\r\nWhile I agree that your proposed approach could lead to more precise terminology here, upon digging into the codebase, it appears that endianness terms are used more broadly than your strict interpretation would suggest:\r\n\r\n**Endianness terminology used for hexadecimal representations**:\r\n* Transaction IDs: https://github.com/bitcoin/bitcoin/blob/master/src/rpc/mining.cpp#L620\r\n* Hashes: https://github.com/bitcoin/bitcoin/blob/master/src/rpc/mining.cpp#L621\r\n\r\n**Endianness applied to non-numeric data**:\r\n* Base58 encoding: https://github.com/bitcoin/bitcoin/blob/master/src/base58.cpp#L98\r\n* CRC32: https://github.com/bitcoin/bitcoin/blob/master/src/crc32c/src/crc32c_read_le.h#L17\r\n* SipHash: https://github.com/bitcoin/bitcoin/blob/master/src/crypto/siphash.h#L25\r\n\r\n**uint256 treated as having specific endianness**:\r\n* In policy code: https://github.com/bitcoin/bitcoin/blob/master/src/policy/packages.h#L93\r\n\r\nIt also doesn't help that the `uint256` getters (and testers like `ArrayToString`) themselves reverse the byte order before returning it (https://github.com/bitcoin/bitcoin/blob/master/src/uint256.cpp#L11-L18) and that reading `uint64` chunks even considers the native endianness https://github.com/bitcoin/bitcoin/blob/master/src/uint256.h#L79.\r\n\r\nThe problem doesn't seem to be as simple as just changing the terminology, it seems to be deeply ingrained in the codebase. I assume that we can't actually simplify the code in most places (maybe for SipHash-type usages where the result is local and temporary), so we have to either refactor or document, right? How do you suggest we tackle this?",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#issuecomment-2254461008",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30526"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13683217092,
      "node_id": "HRFPE_lADOABII586Q44clzwAAAAMvlVLE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13683217092",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "created_at": "2024-07-29T16:21:07Z"
    },
    {
      "event": "commented",
      "id": 2256377213,
      "node_id": "IC_kwDOABII586GfZV9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2256377213",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-29T16:24:56Z",
      "updated_at": "2024-07-30T15:33:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thank you for your feedback @paplorinc & @sipa!\r\n\r\nI am convinced by sipa's argument that endianness is primarily an in-memory representation order. Numbers like 4607 (= 0x11FF) do not have an endianness to them, neither should strings containing them, even though it is very tempting for hexadecimal.\r\n\r\n07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d contains much of sipa's input. Not sure what to do with pre-existing code @paplorinc found that uses endianness terminology imprecisely.\r\n\r\n> Transaction IDs: https://github.com/bitcoin/bitcoin/blob/master/src/rpc/mining.cpp#L620\r\n\r\nThe RPC specifies txid as \"transaction id encoded in little-endian hexadecimal\".\r\n\r\nI dug into the behavior of the `HashWriter` used in `CTransaction::ComputeHash()` to compute txids:\r\n\r\n```diff\r\ndiff --git a/src/test/hash_tests.cpp b/src/test/hash_tests.cpp\r\nindex 51f1d4c840..590af57ff6 100644\r\n--- a/src/test/hash_tests.cpp\r\n+++ b/src/test/hash_tests.cpp\r\n@@ -2,6 +2,7 @@\r\n // Distributed under the MIT software license, see the accompanying\r\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n \r\n+#include \"uint256.h\"\r\n #include <clientversion.h>\r\n #include <crypto/siphash.h>\r\n #include <hash.h>\r\n@@ -146,6 +147,10 @@ BOOST_AUTO_TEST_CASE(siphash)\r\n         BOOST_CHECK_EQUAL(SipHashUint256(k1, k2, x), sip256.Finalize());\r\n         BOOST_CHECK_EQUAL(SipHashUint256Extra(k1, k2, x, n), sip288.Finalize());\r\n     }\r\n+\r\n+    HashWriter writer{};\r\n+    writer.write(std::vector<std::byte>{std::byte{'1'}, std::byte{'2'}, std::byte{'3'}});\r\n+    BOOST_CHECK_EQUAL(writer.GetSHA256(), uint256S(\"a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3\"));\r\n }\r\n \r\n BOOST_AUTO_TEST_SUITE_END()\r\n```\r\nThe \"a665a45..\"-string was provided by 2 online SHA256 calculators hashing \"123\" as the code above.\r\n\r\nResult:\r\n```\r\ntest/hash_tests.cpp(153): error: in \"hash_tests/siphash\": check writer.GetSHA256() == uint256S(\"a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3\") has failed\r\n[e37aa2f7f7868e997ea01fff3f1f4aa0b84fdcef67487e419d2f422059a465a6 !=\r\n a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3]\r\n```\r\n\r\nConclusion: Byte order is unnecessarily reversed in this case, but now hard to change. Should probably be documented as \"transaction id encoded in reverse-order hexadecimal\" but this PR is just concerned with shortcomings of #30436.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#issuecomment-2256377213",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30526"
    },
    {
      "event": "mentioned",
      "id": 13683266060,
      "node_id": "MEE_lADOABII586Q44clzwAAAAMvlhIM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13683266060",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-29T16:24:58Z"
    },
    {
      "event": "subscribed",
      "id": 13683266080,
      "node_id": "SE_lADOABII586Q44clzwAAAAMvlhIg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13683266080",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-29T16:24:58Z"
    },
    {
      "event": "mentioned",
      "id": 13683266101,
      "node_id": "MEE_lADOABII586Q44clzwAAAAMvlhI1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13683266101",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-29T16:24:58Z"
    },
    {
      "event": "subscribed",
      "id": 13683266117,
      "node_id": "SE_lADOABII586Q44clzwAAAAMvlhJF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13683266117",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-29T16:24:58Z"
    },
    {
      "event": "reviewed",
      "id": 2211023664,
      "node_id": "PRR_kwDOABII586DyYsw",
      "url": null,
      "actor": null,
      "commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-07-31T23:14:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d. I do think this is an improvement over the status quo, but I think a lot of things were less clear than they could be so I left a lot of suggestions.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#pullrequestreview-2211023664",
      "submitted_at": "2024-07-31T23:14:31Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
    },
    {
      "event": "reviewed",
      "id": 2202485237,
      "node_id": "PRR_kwDOABII586DR0H1",
      "url": null,
      "actor": null,
      "commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-08-01T11:09:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "utACK 07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d\r\n\r\nI love that we're striving to making the campground cleaner than we found it, we need more of these kind of changes <3\r\nAgree with @ryanofsky, some of the comments could still use some clarification, but I'm fine with it as-is as well.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#pullrequestreview-2202485237",
      "submitted_at": "2024-08-01T11:09:31Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13732248644,
      "node_id": "HRFPE_lADOABII586Q44clzwAAAAMygXxE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13732248644",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f352d9c1a63aae2062f88a314e45d82e483097a2",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/f352d9c1a63aae2062f88a314e45d82e483097a2",
      "created_at": "2024-08-01T21:08:58Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13732409356,
      "node_id": "HRFPE_lADOABII586Q44clzwAAAAMyg_AM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13732409356",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0828a3601c7f323f815598a41dd7854ef25265a7",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/0828a3601c7f323f815598a41dd7854ef25265a7",
      "created_at": "2024-08-01T21:20:35Z"
    },
    {
      "event": "labeled",
      "id": 13732410505,
      "node_id": "LE_lADOABII586Q44clzwAAAAMyg_SJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13732410505",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-01T21:20:40Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2264023707,
      "node_id": "IC_kwDOABII586G8kKb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2264023707",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-01T21:20:41Z",
      "updated_at": "2024-08-01T21:20:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/28237349796</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#issuecomment-2264023707",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30526"
    },
    {
      "event": "commented",
      "id": 2264025112,
      "node_id": "IC_kwDOABII586G8kgY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2264025112",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-01T21:21:38Z",
      "updated_at": "2024-08-01T21:21:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "Latest force push to fix CI failure: https://github.com/bitcoin/bitcoin/pull/30526/checks?check_run_id=28237349796",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#issuecomment-2264025112",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30526"
    },
    {
      "event": "reviewed",
      "id": 2214043603,
      "node_id": "PRR_kwDOABII586D95_T",
      "url": null,
      "actor": null,
      "commit_id": "0828a3601c7f323f815598a41dd7854ef25265a7",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-08-01T21:31:56Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#pullrequestreview-2214043603",
      "submitted_at": "2024-08-01T21:31:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
    },
    {
      "event": "unlabeled",
      "id": 13733171687,
      "node_id": "UNLE_lADOABII586Q44clzwAAAAMyj5Hn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13733171687",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-01T22:36:30Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2214175215,
      "node_id": "PRR_kwDOABII586D-aHv",
      "url": null,
      "actor": null,
      "commit_id": "0828a3601c7f323f815598a41dd7854ef25265a7",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-08-01T22:55:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 0828a3601c7f323f815598a41dd7854ef25265a7. Thanks for considering the suggestions, and I like the way you now grouped the reverse-hex functions together and added an overall description of the representation.\r\n\r\nI do think it would be better if the base_uint class try to didn't try to document the array by describing its memory layout on little endian machines. I think it would be clearer if it just said what order the array elements are in.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#pullrequestreview-2214175215",
      "submitted_at": "2024-08-01T22:55:00Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
    },
    {
      "event": "review_requested",
      "id": 13733333220,
      "node_id": "RRE_lADOABII586Q44clzwAAAAMykgjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13733333220",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-01T22:55:03Z",
      "requested_reviewer": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2214213742,
      "node_id": "PRR_kwDOABII586D-jhu",
      "url": null,
      "actor": null,
      "commit_id": "0828a3601c7f323f815598a41dd7854ef25265a7",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-08-01T23:20:38Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#pullrequestreview-2214213742",
      "submitted_at": "2024-08-01T23:20:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
    },
    {
      "event": "reviewed",
      "id": 2214575253,
      "node_id": "PRR_kwDOABII586D_7yV",
      "url": null,
      "actor": null,
      "commit_id": "0828a3601c7f323f815598a41dd7854ef25265a7",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-08-02T04:30:13Z",
      "author_association": "NONE",
      "user": {
        "login": "Mahmoud198425",
        "id": 172866158,
        "node_id": "U_kgDOCk26bg",
        "avatar_url": "https://avatars.githubusercontent.com/u/172866158?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Mahmoud198425",
        "html_url": "https://github.com/Mahmoud198425",
        "followers_url": "https://api.github.com/users/Mahmoud198425/followers",
        "following_url": "https://api.github.com/users/Mahmoud198425/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Mahmoud198425/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Mahmoud198425/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Mahmoud198425/subscriptions",
        "organizations_url": "https://api.github.com/users/Mahmoud198425/orgs",
        "repos_url": "https://api.github.com/users/Mahmoud198425/repos",
        "events_url": "https://api.github.com/users/Mahmoud198425/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Mahmoud198425/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#pullrequestreview-2214575253",
      "submitted_at": "2024-08-02T04:30:13Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
    },
    {
      "event": "commented",
      "id": 2264622779,
      "node_id": "IC_kwDOABII586G-2a7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2264622779",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-02T06:00:39Z",
      "updated_at": "2024-08-02T06:00:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK 0828a3601c7f323f815598a41dd7854ef25265a7",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#issuecomment-2264622779",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30526"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDczZTNmYTEwYjRkZDYzYjc3NjdkNmI2ZjI3MGRmNjY5NzEwNjczNDE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/73e3fa10b4dd63b7767d6b6f270df66971067341",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/73e3fa10b4dd63b7767d6b6f270df66971067341",
      "tree": {
        "sha": "135362902cb9df4ea3ba2576b15bb0b819f42874",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/135362902cb9df4ea3ba2576b15bb0b819f42874"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 135362902cb9df4ea3ba2576b15bb0b819f42874\nparent 5d280130446d57d653c749005a2e363265d87686\nauthor Hodlinator <172445034+hodlinator@users.noreply.github.com> 1722547207 +0200\ncommitter Hodlinator <172445034+hodlinator@users.noreply.github.com> 1722715194 +0200\n\ndoc + test: Correct uint256 hex string endianness\n\nFollow-up to #30436.\n\nuint256 string representation was wrongfully documented as little-endian due to them being reversed by GetHex() etc, and base_blob::Compare() giving most significance to the beginning of the internal array. They are closer to \"big-endian\", but this commit tries to be even more precise than that.\n\nuint256_tests.cpp - Avoid using variable from the left side of the condition in the right side.\n\nsetup_common.cpp - Skip needless ArithToUint256-conversion.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAg39Hzirivn9mM3G8qwAOGOKsmHT\ny2f/O2iDRQI8UxEyoAAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQAwyv8ZDcF9J/62Ats2vbiS185P9wnKSGgkGlbyE7n5TDYNCNZ6pYZQt2014zBsM24\nvFIjG7LzjUcHB16AmINwg=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5d280130446d57d653c749005a2e363265d87686",
          "sha": "5d280130446d57d653c749005a2e363265d87686",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5d280130446d57d653c749005a2e363265d87686"
        }
      ],
      "message": "doc + test: Correct uint256 hex string endianness\n\nFollow-up to #30436.\n\nuint256 string representation was wrongfully documented as little-endian due to them being reversed by GetHex() etc, and base_blob::Compare() giving most significance to the beginning of the internal array. They are closer to \"big-endian\", but this commit tries to be even more precise than that.\n\nuint256_tests.cpp - Avoid using variable from the left side of the condition in the right side.\n\nsetup_common.cpp - Skip needless ArithToUint256-conversion.",
      "committer": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-08-03T19:59:54Z"
      },
      "author": {
        "name": "Hodlinator",
        "email": "172445034+hodlinator@users.noreply.github.com",
        "date": "2024-08-01T21:20:07Z"
      },
      "sha": "73e3fa10b4dd63b7767d6b6f270df66971067341"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13751624038,
      "node_id": "HRFPE_lADOABII586Q44clzwAAAAMzqSFm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13751624038",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "commit_url": "https://api.github.com/repos/hodlinator/bitcoin/commits/73e3fa10b4dd63b7767d6b6f270df66971067341",
      "created_at": "2024-08-03T20:02:06Z"
    },
    {
      "event": "reviewed",
      "id": 2217182891,
      "node_id": "PRR_kwDOABII586EJ4ar",
      "url": null,
      "actor": null,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-08-03T20:11:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK 73e3fa10b4dd63b7767d6b6f270df66971067341",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#pullrequestreview-2217182891",
      "submitted_at": "2024-08-03T20:11:15Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
    },
    {
      "event": "review_requested",
      "id": 13751658654,
      "node_id": "RRE_lADOABII586Q44clzwAAAAMzqaie",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13751658654",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-03T20:11:18Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2217875650,
      "node_id": "PRR_kwDOABII586EMhjC",
      "url": null,
      "actor": null,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-08-05T01:19:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 73e3fa10b4dd63b7767d6b6f270df66971067341\r\n\r\nJust tweaked code comments since last review. I think this can be merged even though from the review comments it seems like there could be more more followups later. Everything here now seems like an improvement over the status quo.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#pullrequestreview-2217875650",
      "submitted_at": "2024-08-05T01:19:48Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
    },
    {
      "event": "merged",
      "id": 13757102668,
      "node_id": "ME_lADOABII586Q44clzwAAAAMz_LpM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13757102668",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1a7d20509f46f0cd38302da78dba9a0c9bb24226",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a7d20509f46f0cd38302da78dba9a0c9bb24226",
      "created_at": "2024-08-05T02:27:22Z"
    },
    {
      "event": "closed",
      "id": 13757102692,
      "node_id": "CE_lADOABII586Q44clzwAAAAMz_Lpk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13757102692",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-05T02:27:22Z"
    },
    {
      "event": "reviewed",
      "id": 2217877316,
      "node_id": "PRR_kwDOABII586EMh9E",
      "url": null,
      "actor": null,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-08-05T03:24:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "Merged with only 2 acks, since this is a documentation & test change.\r\n\r\nIt does seem like there are some possible followups here:\r\n\r\n1. Providing more context for reverse-byte hex representation https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1703467650\r\n2. Improving RPC documentation as suggested by paplorinc in https://github.com/bitcoin/bitcoin/pull/30526#issuecomment-2254461008\r\n3. Documenting base_uint::pn array https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1699163923\r\n4. Maybe adding stricter tests for comparison functions https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1699168796 and https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1699169882\r\n\r\n---\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/30526#issuecomment-2254461008\r\n\r\n> While I agree that your proposed approach could lead to more precise terminology here, upon digging into the codebase, it appears that endianness terms are used more broadly than your strict interpretation would suggest:\r\n> \r\n> **Endianness terminology used for hexadecimal representations**:\r\n> \r\n> * Transaction IDs: https://github.com/bitcoin/bitcoin/blob/master/src/rpc/mining.cpp#L620\r\n> * Hashes: https://github.com/bitcoin/bitcoin/blob/master/src/rpc/mining.cpp#L621\r\n\r\nThese are good finds and I think hodlinator's suggestion to document these as \"transaction id encoded in reverse-order hexadecimal\" could an improvement, although maybe it is ambiguous. \"Reverse-order hexadecimal\" sounds like the hexadecimal string might be reversed, rather than the bytes represented by the hexadecimal string being reversed. I might suggest changing documentation of these fields to:\r\n\r\n- txid hash with bytes reversed, encoded in hex\r\n- wtxid hash with bytes reversed, encoded in hex\r\n\r\nbut maybe something else would be better.\r\n\r\n> **Endianness applied to non-numeric data**:\r\n> \r\n> * Base58 encoding: https://github.com/bitcoin/bitcoin/blob/5d280130446d57d653c749005a2e363265d87686/src/base58.cpp#L98\r\n\r\nI think this comment is using \"big-endian\" correctly, though maybe not very clearly. The idea behind base58 encoding is that you take a byte array, interpret the byte array as a big-endian number, and display that number in base-58 (with a special prefix of 1's if the original byte array began with 0's). (The [python](https://github.com/bitcoin/bitcoin/blob/1a7d20509f46f0cd38302da78dba9a0c9bb24226/test/functional/test_framework/address.py#L70) version of this function is much easier to understand, for reference.)\r\n\r\n> * CRC32: https://github.com/bitcoin/bitcoin/blob/5d280130446d57d653c749005a2e363265d87686/src/crc32c/src/crc32c_read_le.h#L17\r\n\r\nThis seems like a totally correct comment. This function is taking bytes and converting them to an integer. Seems like a straightforward case of using \"endianness\" to describe byte order of numeric data.\r\n\r\n> * SipHash: https://github.com/bitcoin/bitcoin/blob/5d280130446d57d653c749005a2e363265d87686/src/crypto/siphash.h#L25\r\n\r\nThis also seems correct. The siphash class was two Write methods. There is a Write method take bytes as input, and another Write method that takes 64 bit numbers as input. The documentation is just saying if you give that one a number, the little endian representation of the number is what is hashed.\r\n\r\n> **uint256 treated as having specific endianness**:\r\n> \r\n> * In policy code: https://github.com/bitcoin/bitcoin/blob/5d280130446d57d653c749005a2e363265d87686/src/policy/packages.h#L93\r\n\r\nThis seems like a borderline case and probably would be good to clarify. It's just describing the way the wtxids are sorted before they are hashed. Instead of the implementation sorting the wtxid so they are in lexigraphic order, it sorts them so that the reversed bytes of the wtxid's would be in lexicographic order. This is equivalent to treating the wtxid bytes as little endian numbers and sorting the numbers. \r\n\r\n> It also doesn't help that the `uint256` getters (and testers like `ArrayToString`) themselves reverse the byte order before returning it (https://github.com/bitcoin/bitcoin/blob/5d280130446d57d653c749005a2e363265d87686/src/uint256.cpp#L11-L18)\r\n\r\nThis isn't great but I think it's baked in and the best thing we can do is document it.\r\n\r\n> and that reading `uint64` chunks even considers the native endianness https://github.com/bitcoin/bitcoin/blob/5d280130446d57d653c749005a2e363265d87686/src/uint256.h#L79.\r\n\r\nThis should be fine, because it is only using native endianness as an optimization, and does the same thing on big and little endian systems. It is just interpreting bytes of the blob as a little endian number, and on little endian systems this can be done efficiently with memcpy.\r\n\r\n> The problem doesn't seem to be as simple as just changing the terminology, it seems to be deeply ingrained in the codebase. I assume that we can't actually simplify the code in most places (maybe for SipHash-type usages where the result is local and temporary), so we have to either refactor or document, right? How do you suggest we tackle this?\r\n\r\nI think we can clean up documentation various places, name functions better, and maybe in the long term move towards sipa' suggestion to replace these classes with `using uint256 = std::array<std::byte, 32>`.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#pullrequestreview-2217877316",
      "submitted_at": "2024-08-05T03:20:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
    },
    {
      "event": "head_ref_deleted",
      "id": 13759049337,
      "node_id": "HRDE_lADOABII586Q44clzwAAAAM0Gm55",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13759049337",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-05T06:46:30Z"
    },
    {
      "event": "referenced",
      "id": 15803287097,
      "node_id": "REFE_lADOABII586Q44clzwAAAAOt8wY5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15803287097",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "13464c0c44645e0ed88d9d72c3ad697dca800e10",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/13464c0c44645e0ed88d9d72c3ad697dca800e10",
      "created_at": "2025-01-02T23:37:44Z"
    },
    {
      "event": "referenced",
      "id": 15807943902,
      "node_id": "REFE_lADOABII586Q44clzwAAAAOuOhTe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15807943902",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3e0a992a3f0f2b15b7be5049dc4f3134b4b0bc40",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/3e0a992a3f0f2b15b7be5049dc4f3134b4b0bc40",
      "created_at": "2025-01-03T14:20:09Z"
    },
    {
      "event": "referenced",
      "id": 15832060566,
      "node_id": "REFE_lADOABII586Q44clzwAAAAOvqhKW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15832060566",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "433412fd8478923dfdb20044f74c5d1e19fa8dd8",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/433412fd8478923dfdb20044f74c5d1e19fa8dd8",
      "created_at": "2025-01-06T23:53:07Z"
    },
    {
      "event": "referenced",
      "id": 15841428824,
      "node_id": "REFE_lADOABII586Q44clzwAAAAOwOQVY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15841428824",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5b370d848398ffab8d025b3701884299088f678d",
      "commit_url": "https://api.github.com/repos/ismaelsadeeq/bitcoin/commits/5b370d848398ffab8d025b3701884299088f678d",
      "created_at": "2025-01-07T16:25:38Z"
    },
    {
      "event": "locked",
      "id": 20079738199,
      "node_id": "LOE_lADOABII586Q44clzwAAAASs2H1X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/20079738199",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-10-03T11:50:17Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1693448223",
      "pull_request_review_id": 2202485237,
      "id": 1693448223,
      "node_id": "PRRC_kwDOABII585k7_gf",
      "diff_hunk": "@@ -172,11 +176,11 @@ BOOST_AUTO_TEST_CASE(methods) // GetHex SetHexDeprecated FromHex begin() end() s\n     BOOST_CHECK_EQUAL(uint256::FromHex(ZeroL.ToString()).value(), uint256());\n \n     TmpL = uint256::FromHex(R1L.ToString()).value();\n-    BOOST_CHECK_EQUAL_COLLECTIONS(R1L.begin(), R1L.end(), R1Array, R1Array + R1L.size());\n-    BOOST_CHECK_EQUAL_COLLECTIONS(TmpL.begin(), TmpL.end(), R1Array, R1Array + TmpL.size());\n-    BOOST_CHECK_EQUAL_COLLECTIONS(R2L.begin(), R2L.end(), R2Array, R2Array + R2L.size());\n-    BOOST_CHECK_EQUAL_COLLECTIONS(ZeroL.begin(), ZeroL.end(), ZeroArray, ZeroArray + ZeroL.size());\n-    BOOST_CHECK_EQUAL_COLLECTIONS(OneL.begin(), OneL.end(), OneArray, OneArray + OneL.size());\n+    BOOST_CHECK_EQUAL_COLLECTIONS(R1L.begin(), R1L.end(), R1Array, R1Array + uint256::size());",
      "path": "src/test/uint256_tests.cpp",
      "position": 45,
      "original_position": 35,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "f01848fb03353de29930d47226db299dcdbf2e78",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "👍 , if possible, we should do the `*_EQUAL` changes in the `arith_uint256_tests` as well (probably best in a different PR).",
      "created_at": "2024-07-26T18:24:45Z",
      "updated_at": "2024-08-01T11:09:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1693448223",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1693448223"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 182,
      "original_line": 182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699163923",
      "pull_request_review_id": 2211023664,
      "id": 1699163923,
      "node_id": "PRRC_kwDOABII585lRy8T",
      "diff_hunk": "@@ -26,6 +26,7 @@ class base_uint\n protected:\n     static_assert(BITS / 32 > 0 && BITS % 32 == 0, \"Template parameter BITS must be a positive multiple of 32.\");\n     static constexpr int WIDTH = BITS / 32;\n+    /** Fully little-endian byte ordering on little-endian architectures. */",
      "path": "src/arith_uint256.h",
      "position": 1,
      "original_position": 4,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"doc + test: Correct uint256 hex string endianness\" (07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d)\r\n\r\nMaybe just say number is stored in the array with least significant bits first and most significant bits last.\r\n\r\nThe current comment describing byte ordering on one specific architecture seems like an indirect way of describing the array when array elements aren't bytes, and the class itself is architecture independent.",
      "created_at": "2024-07-31T22:18:10Z",
      "updated_at": "2024-07-31T23:14:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1699163923",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699163923"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699165516",
      "pull_request_review_id": 2211023664,
      "id": 1699165516,
      "node_id": "PRRC_kwDOABII585lRzVM",
      "diff_hunk": "@@ -218,6 +220,8 @@ class base_uint\n     friend inline bool operator==(const base_uint& a, uint64_t b) { return a.EqualTo(b); }\n     friend inline bool operator!=(const base_uint& a, uint64_t b) { return !a.EqualTo(b); }\n \n+    /** Hex encoding of the number (with the most significant characters first).",
      "path": "src/arith_uint256.h",
      "position": 1,
      "original_position": 20,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"doc + test: Correct uint256 hex string endianness\" (07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d)\r\n\r\nMaybe say digits instead of characters to be less generic. Also I think \"most significant digits\" is a more commonly understood phrase than \"most significant characters\". Would suggest:\r\n\r\n- Returns representation of the number in hex (with most significant digits first)",
      "created_at": "2024-07-31T22:20:31Z",
      "updated_at": "2024-08-01T00:58:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1699165516",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699165516"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 223,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699166318",
      "pull_request_review_id": 2211023664,
      "id": 1699166318,
      "node_id": "PRRC_kwDOABII585lRzhu",
      "diff_hunk": "@@ -22,7 +23,8 @@ static inline arith_uint256 arith_uint256V(const std::vector<unsigned char>& vch\n {\n     return UintToArith256(uint256(vch));\n }\n-static inline arith_uint256 arith_uint256S(const std::string& str) { return UintToArith256(uint256S(str)); }\n+// Takes a hex string with the most significant bytes first.\n+static inline arith_uint256 arith_uint256S(std::string_view str) { return UintToArith256(uint256S(str)); }",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 14,
      "original_position": 14,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"doc + test: Correct uint256 hex string endianness\" (07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d)\r\n\r\nWould say digits instead of bytes here, for the same reason as suggesting digits instead of characters. Would suggest:\r\n\r\n- Takes a number written in hex (with most significant digits first)",
      "created_at": "2024-07-31T22:21:56Z",
      "updated_at": "2024-08-01T00:58:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1699166318",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699166318"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 27,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699168468",
      "pull_request_review_id": 2211023664,
      "id": 1699168468,
      "node_id": "PRRC_kwDOABII585lR0DU",
      "diff_hunk": "@@ -278,6 +281,12 @@ BOOST_AUTO_TEST_CASE( comparison ) // <= >= < >\n         BOOST_CHECK( R1L <= TmpL ); BOOST_CHECK( (R1L == TmpL) != (R1L < TmpL)); BOOST_CHECK( (TmpL == R1L) || !( R1L >= TmpL));\n         BOOST_CHECK(! (TmpL < R1L)); BOOST_CHECK(! (R1L > TmpL));\n     }\n+\n+    BOOST_CHECK_LT(ZeroL,\n+                   OneL);\n+    // Verify hex string representation has the most significant bytes first.",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 1,
      "original_position": 33,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"doc + test: Correct uint256 hex string endianness\" (07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d)\r\n\r\nWould say digits instead of bytes here to be less ambiguous. When there's a hex encoding, \"byte\" could refer either to a byte of the hex string or to a byte of the data it represents, and I think you mean the former (because the digits in the two strings are what's reversed, not the bytes). Would suggest:\r\n\r\n- Verify hex number representation has the most significant digits first.",
      "created_at": "2024-07-31T22:25:21Z",
      "updated_at": "2024-08-01T01:01:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1699168468",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699168468"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 287,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699168796",
      "pull_request_review_id": 2211023664,
      "id": 1699168796,
      "node_id": "PRRC_kwDOABII585lR0Ic",
      "diff_hunk": "@@ -278,6 +281,12 @@ BOOST_AUTO_TEST_CASE( comparison ) // <= >= < >\n         BOOST_CHECK( R1L <= TmpL ); BOOST_CHECK( (R1L == TmpL) != (R1L < TmpL)); BOOST_CHECK( (TmpL == R1L) || !( R1L >= TmpL));\n         BOOST_CHECK(! (TmpL < R1L)); BOOST_CHECK(! (R1L > TmpL));\n     }\n+\n+    BOOST_CHECK_LT(ZeroL,\n+                   OneL);\n+    // Verify hex string representation has the most significant bytes first.\n+    BOOST_CHECK_LT(arith_uint256S(\"0000000000000000000000000000000000000000000000000000000000000001\"),\n+                   arith_uint256S(\"1000000000000000000000000000000000000000000000000000000000000000\"));",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 35,
      "original_position": 35,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: In commit \"doc + test: Correct uint256 hex string endianness\" (07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d)\r\n\r\nI think if you wanted to make the test a stronger demonstration of the fact that the first hex digit is the most significant digit, you would make the other digits in the smaller number as high as possible to show that they don't effect the comparison. E.g.\r\n\r\n```\r\n    BOOST_CHECK_LT(arith_uint256S(\"0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\"),\r\n                   arith_uint256S(\"1000000000000000000000000000000000000000000000000000000000000000\"));\r\n```",
      "created_at": "2024-07-31T22:25:55Z",
      "updated_at": "2024-07-31T23:14:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1699168796",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699168796"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": 288,
      "original_start_line": 288,
      "start_side": "RIGHT",
      "line": 289,
      "original_line": 289,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699169882",
      "pull_request_review_id": 2211023664,
      "id": 1699169882,
      "node_id": "PRRC_kwDOABII585lR0Za",
      "diff_hunk": "@@ -152,9 +153,15 @@ BOOST_AUTO_TEST_CASE( comparison ) // <= >= < >\n     BOOST_CHECK_LT(R1S, MaxS);\n     BOOST_CHECK_LT(R2S, MaxS);\n \n-    // Verify hex strings are little-endian\n-    BOOST_CHECK_LT(uint256S(\"2000000000000000000000000000000000000000000000000000000000000001\"),\n-                   uint256S(\"1000000000000000000000000000000000000000000000000000000000000002\"));\n+    // Non-arithmetic uint256s compare from the beginning of their inner arrays:\n+    BOOST_CHECK_LT(R2L, R1L);\n+    // Ensure first element comparisons give the same order as above:\n+    BOOST_CHECK_LT(*R2L.begin(), *R1L.begin());\n+    // Ensure last element comparisons give a different result (swapped params):\n+    BOOST_CHECK_LT(*(R1L.end()-1), *(R2L.end()-1));\n+    // Hex string representation is reversed, before lexicographic ordering:\n+    BOOST_CHECK_LT(uint256S(\"1000000000000000000000000000000000000000000000000000000000000000\"),\n+                   uint256S(\"0000000000000000000000000000000000000000000000000000000000000001\"));",
      "path": "src/test/uint256_tests.cpp",
      "position": 32,
      "original_position": 32,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"doc + test: Correct uint256 hex string endianness\" (07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d)\r\n\r\nI think if you wanted to make the test a stronger demonstration of the fact that last bytes in the hex strings determine the ordering, you would make the first bytes in the earlier hex string as high as possible to show that they don't effect the comparison. E.g.\r\n\r\n```c++\r\n    BOOST_CHECK_LT(uint256S(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00\"),\r\n                   uint256S(\"0000000000000000000000000000000000000000000000000000000000000001\"));\r\n\r\n```",
      "created_at": "2024-07-31T22:27:29Z",
      "updated_at": "2024-07-31T23:14:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1699169882",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699169882"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": 163,
      "original_start_line": 163,
      "start_side": "RIGHT",
      "line": 164,
      "original_line": 164,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699172095",
      "pull_request_review_id": 2211023664,
      "id": 1699172095,
      "node_id": "PRRC_kwDOABII585lR07_",
      "diff_hunk": "@@ -53,15 +53,27 @@ class base_blob\n         std::fill(m_data.begin(), m_data.end(), 0);\n     }\n \n+    /** Lexicographic ordering\n+     * @note Does NOT match the ordering on the corresponding \\ref\n+     *       base_uint::CompareTo, which starts comparing from the end.\n+     */\n     constexpr int Compare(const base_blob& other) const { return std::memcmp(m_data.data(), other.m_data.data(), WIDTH); }\n \n     friend constexpr bool operator==(const base_blob& a, const base_blob& b) { return a.Compare(b) == 0; }\n     friend constexpr bool operator!=(const base_blob& a, const base_blob& b) { return a.Compare(b) != 0; }\n     friend constexpr bool operator<(const base_blob& a, const base_blob& b) { return a.Compare(b) < 0; }\n \n-    // Hex string representations are little-endian.\n+    /* Hex string representations in reverse byte order of the internal array.\n+     * This is consistent with the internal array of arith_* being little-endian.\n+     */\n     std::string GetHex() const;\n-    /** Unlike FromHex this accepts any invalid input, thus it is fragile and deprecated */\n+    /** Unlike FromHex this accepts any invalid input, thus it is fragile and deprecated!\n+     *\n+     * Hex strings that don't specify enough bytes to fill the internal array\n+     * will be treated as setting the beginning of it.\n+     * Hex strings specifying too many bytes will have the beginning of the\n+     * string narrowed away.",
      "path": "src/uint256.h",
      "position": 1,
      "original_position": 25,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"doc + test: Correct uint256 hex string endianness\" (07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d)\r\n\r\nI think this description is somewhat helpful but missing important information, like the fact that it is reversing the hex string.\r\n\r\nWould suggest:\r\n\r\n- This function strips optional whitespace and \"0x\" prefixes and then copies pairs of hex digits from the end of the hex string, moving backwards, into the beginning bytes of the uint, moving forwards. If too many hex digits are provided, the digits at the beginning of the hex string are ignored. If too few hex digits are provided, the bytes at the end of the uint will be filled with 0's. If there are too few hex digits, and the number of hex digits is odd, the high order bits of the last byte copied will be 0. For example if the hex string `0x123` is provided, the resulting blob will contain bytes `{0x23, 0x1, 0x0, ..., 0x0}`",
      "created_at": "2024-07-31T22:31:10Z",
      "updated_at": "2024-08-01T00:41:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1699172095",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699172095"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": 72,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699196174",
      "pull_request_review_id": 2211023664,
      "id": 1699196174,
      "node_id": "PRRC_kwDOABII585lR60O",
      "diff_hunk": "@@ -53,15 +53,27 @@ class base_blob\n         std::fill(m_data.begin(), m_data.end(), 0);\n     }\n \n+    /** Lexicographic ordering\n+     * @note Does NOT match the ordering on the corresponding \\ref\n+     *       base_uint::CompareTo, which starts comparing from the end.\n+     */\n     constexpr int Compare(const base_blob& other) const { return std::memcmp(m_data.data(), other.m_data.data(), WIDTH); }\n \n     friend constexpr bool operator==(const base_blob& a, const base_blob& b) { return a.Compare(b) == 0; }\n     friend constexpr bool operator!=(const base_blob& a, const base_blob& b) { return a.Compare(b) != 0; }\n     friend constexpr bool operator<(const base_blob& a, const base_blob& b) { return a.Compare(b) < 0; }\n \n-    // Hex string representations are little-endian.\n+    /* Hex string representations in reverse byte order of the internal array.\n+     * This is consistent with the internal array of arith_* being little-endian.",
      "path": "src/uint256.h",
      "position": 1,
      "original_position": 16,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"doc + test: Correct uint256 hex string endianness\" (07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d)\r\n\r\nStatement \"This is consistent with the internal array of arith_* being little-endian.\" seems a bit vague to me. Also calling internal representation of the arithmetic class little endian might not be ideal because endianness normally refers to bytes, and the arithmetic class stores an array of uint32_t numbers, not of bytes.\r\n\r\nI think I would suggest changing line to:\r\n\r\n- The reverse-byte hex representation is a convenient way to view the blob as a number, because it is consistent with the way the `base_uint` class converts blobs to numbers.\r\n\r\n  `base_uint` treats the blob as an array of bytes with the numerically least significant byte first and the most significant byte last. Because numbers are typically written with the most significant digit first and the least significant digit last, the reverse hex display of the blob corresponds to the same numeric value that `base_uint` interprets from the blob.\r\n",
      "created_at": "2024-07-31T23:04:53Z",
      "updated_at": "2024-08-01T01:14:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1699196174",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699196174"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699949749",
      "pull_request_review_id": 2202485237,
      "id": 1699949749,
      "node_id": "PRRC_kwDOABII585lUyy1",
      "diff_hunk": "@@ -218,6 +220,8 @@ class base_uint\n     friend inline bool operator==(const base_uint& a, uint64_t b) { return a.EqualTo(b); }\n     friend inline bool operator!=(const base_uint& a, uint64_t b) { return !a.EqualTo(b); }\n \n+    /** Hex encoding of the number (with the most significant characters first).",
      "path": "src/arith_uint256.h",
      "position": 1,
      "original_position": 20,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": 1699165516,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "👍, also nit: can be single-line, like the rest of these comments",
      "created_at": "2024-08-01T10:56:33Z",
      "updated_at": "2024-08-01T11:09:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1699949749",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699949749"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 223,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699955555",
      "pull_request_review_id": 2202485237,
      "id": 1699955555,
      "node_id": "PRRC_kwDOABII585lU0Nj",
      "diff_hunk": "@@ -53,15 +53,27 @@ class base_blob\n         std::fill(m_data.begin(), m_data.end(), 0);\n     }\n \n+    /** Lexicographic ordering\n+     * @note Does NOT match the ordering on the corresponding \\ref\n+     *       base_uint::CompareTo, which starts comparing from the end.\n+     */\n     constexpr int Compare(const base_blob& other) const { return std::memcmp(m_data.data(), other.m_data.data(), WIDTH); }\n \n     friend constexpr bool operator==(const base_blob& a, const base_blob& b) { return a.Compare(b) == 0; }\n     friend constexpr bool operator!=(const base_blob& a, const base_blob& b) { return a.Compare(b) != 0; }\n     friend constexpr bool operator<(const base_blob& a, const base_blob& b) { return a.Compare(b) < 0; }\n \n-    // Hex string representations are little-endian.\n+    /* Hex string representations in reverse byte order of the internal array.\n+     * This is consistent with the internal array of arith_* being little-endian.",
      "path": "src/uint256.h",
      "position": 1,
      "original_position": 16,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": 1699196174,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "👍, I like that we're not saying endianness for arrays anymore (as suggested by @sipa as well), but seems we still do here. Would be nice if we could eventually unify throughout the codebase.",
      "created_at": "2024-08-01T11:01:30Z",
      "updated_at": "2024-08-01T11:09:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1699955555",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699955555"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699956624",
      "pull_request_review_id": 2202485237,
      "id": 1699956624,
      "node_id": "PRRC_kwDOABII585lU0eQ",
      "diff_hunk": "@@ -53,15 +53,27 @@ class base_blob\n         std::fill(m_data.begin(), m_data.end(), 0);\n     }\n \n+    /** Lexicographic ordering\n+     * @note Does NOT match the ordering on the corresponding \\ref\n+     *       base_uint::CompareTo, which starts comparing from the end.\n+     */\n     constexpr int Compare(const base_blob& other) const { return std::memcmp(m_data.data(), other.m_data.data(), WIDTH); }\n \n     friend constexpr bool operator==(const base_blob& a, const base_blob& b) { return a.Compare(b) == 0; }\n     friend constexpr bool operator!=(const base_blob& a, const base_blob& b) { return a.Compare(b) != 0; }\n     friend constexpr bool operator<(const base_blob& a, const base_blob& b) { return a.Compare(b) < 0; }\n \n-    // Hex string representations are little-endian.\n+    /* Hex string representations in reverse byte order of the internal array.\n+     * This is consistent with the internal array of arith_* being little-endian.\n+     */\n     std::string GetHex() const;\n-    /** Unlike FromHex this accepts any invalid input, thus it is fragile and deprecated */\n+    /** Unlike FromHex this accepts any invalid input, thus it is fragile and deprecated!\n+     *\n+     * Hex strings that don't specify enough bytes to fill the internal array",
      "path": "src/uint256.h",
      "position": 1,
      "original_position": 22,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: the hex strings don't actually provide bytes, the bytes are computed, right?",
      "created_at": "2024-08-01T11:02:28Z",
      "updated_at": "2024-08-01T11:09:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1699956624",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699956624"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699957550",
      "pull_request_review_id": 2202485237,
      "id": 1699957550,
      "node_id": "PRRC_kwDOABII585lU0su",
      "diff_hunk": "@@ -93,7 +105,7 @@ class base_blob\n \n namespace detail {\n /**\n- * Writes the hex string (treated as little-endian) into a new uintN_t object\n+ * Writes the hex string (in reverse byte order) into a new uintN_t object",
      "path": "src/uint256.h",
      "position": 54,
      "original_position": 35,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "👍 I like this wording a lot more",
      "created_at": "2024-08-01T11:03:17Z",
      "updated_at": "2024-08-01T11:09:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1699957550",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699957550"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 125,
      "original_line": 125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699958837",
      "pull_request_review_id": 2202485237,
      "id": 1699958837,
      "node_id": "PRRC_kwDOABII585lU1A1",
      "diff_hunk": "@@ -53,15 +53,27 @@ class base_blob\n         std::fill(m_data.begin(), m_data.end(), 0);\n     }\n \n+    /** Lexicographic ordering\n+     * @note Does NOT match the ordering on the corresponding \\ref",
      "path": "src/uint256.h",
      "position": 5,
      "original_position": 5,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "this is really messy, I wonder if we have a chance to untangle any of this - or whether documenting it is our only possible solution ",
      "created_at": "2024-08-01T11:04:24Z",
      "updated_at": "2024-08-01T11:09:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1699958837",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699958837"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 57,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699960049",
      "pull_request_review_id": 2202485237,
      "id": 1699960049,
      "node_id": "PRRC_kwDOABII585lU1Tx",
      "diff_hunk": "@@ -152,9 +153,15 @@ BOOST_AUTO_TEST_CASE( comparison ) // <= >= < >\n     BOOST_CHECK_LT(R1S, MaxS);\n     BOOST_CHECK_LT(R2S, MaxS);\n \n-    // Verify hex strings are little-endian\n-    BOOST_CHECK_LT(uint256S(\"2000000000000000000000000000000000000000000000000000000000000001\"),\n-                   uint256S(\"1000000000000000000000000000000000000000000000000000000000000002\"));\n+    // Non-arithmetic uint256s compare from the beginning of their inner arrays:\n+    BOOST_CHECK_LT(R2L, R1L);\n+    // Ensure first element comparisons give the same order as above:\n+    BOOST_CHECK_LT(*R2L.begin(), *R1L.begin());\n+    // Ensure last element comparisons give a different result (swapped params):\n+    BOOST_CHECK_LT(*(R1L.end()-1), *(R2L.end()-1));\n+    // Hex string representation is reversed, before lexicographic ordering:\n+    BOOST_CHECK_LT(uint256S(\"1000000000000000000000000000000000000000000000000000000000000000\"),\n+                   uint256S(\"0000000000000000000000000000000000000000000000000000000000000001\"));",
      "path": "src/test/uint256_tests.cpp",
      "position": 32,
      "original_position": 32,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": 1699169882,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good observations",
      "created_at": "2024-08-01T11:05:27Z",
      "updated_at": "2024-08-01T11:09:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1699960049",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699960049"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": 163,
      "original_start_line": 163,
      "start_side": "RIGHT",
      "line": 164,
      "original_line": 164,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699962350",
      "pull_request_review_id": 2202485237,
      "id": 1699962350,
      "node_id": "PRRC_kwDOABII585lU13u",
      "diff_hunk": "@@ -196,6 +197,7 @@ class base_uint\n         return ret;\n     }\n \n+    /** Numeric ordering (unlike \\ref base_blob::Compare) */",
      "path": "src/arith_uint256.h",
      "position": 4,
      "original_position": 12,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "no strong preference either way, just noticing that in other cases it's rather called https://en.wikipedia.org/wiki/Natural_sort_order",
      "created_at": "2024-08-01T11:07:04Z",
      "updated_at": "2024-08-01T11:09:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1699962350",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699962350"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 199,
      "original_line": 199,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700131212",
      "pull_request_review_id": 2212708873,
      "id": 1700131212,
      "node_id": "PRRC_kwDOABII585lVfGM",
      "diff_hunk": "@@ -26,6 +26,7 @@ class base_uint\n protected:\n     static_assert(BITS / 32 > 0 && BITS % 32 == 0, \"Template parameter BITS must be a positive multiple of 32.\");\n     static constexpr int WIDTH = BITS / 32;\n+    /** Fully little-endian byte ordering on little-endian architectures. */",
      "path": "src/arith_uint256.h",
      "position": 1,
      "original_position": 4,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": 1699163923,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Maybe just say number is stored in the array with least significant bits first and most significant bits last.\r\n\r\nThat is incorrect. The least significant *byte* is stored first for `uint32_t` on the little-endian archs. If one wants to avoid mentioning architecture, one could possibly say \"the number is stored in an array with the least significant uint32_t chunk first\".\r\n\r\n> The current comment describing byte ordering on one specific architecture seems like an indirect way of describing the array when array elements aren't bytes, and the class itself is architecture independent.\r\n\r\nDo you mean mentioning architecture on a protected member instills fear that the users of the class will be exposed to architecture dependent behavior?",
      "created_at": "2024-08-01T13:18:19Z",
      "updated_at": "2024-08-01T21:09:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1700131212",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700131212"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700147052",
      "pull_request_review_id": 2212708873,
      "id": 1700147052,
      "node_id": "PRRC_kwDOABII585lVi9s",
      "diff_hunk": "@@ -196,6 +197,7 @@ class base_uint\n         return ret;\n     }\n \n+    /** Numeric ordering (unlike \\ref base_blob::Compare) */",
      "path": "src/arith_uint256.h",
      "position": 4,
      "original_position": 12,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": 1699962350,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Reading up on that page makes me think it applies mostly to numbers of different widths within the context of alphabetical ordering of strings, but `base_uint`s are arguably zero-padded to the same width and no alphabetical ordering of strings is taking place. This seems just as appropriate: https://en.wikipedia.org/wiki/Collation#Numerical_and_chronological\r\n\r\n(Wording based on sipa's https://github.com/bitcoin/bitcoin/pull/30526#issuecomment-2254159503:\r\n> Its comparison is numeric comparison.",
      "created_at": "2024-08-01T13:26:32Z",
      "updated_at": "2024-08-01T21:09:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1700147052",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700147052"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 199,
      "original_line": 199,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700156509",
      "pull_request_review_id": 2212708873,
      "id": 1700156509,
      "node_id": "PRRC_kwDOABII585lVlRd",
      "diff_hunk": "@@ -218,6 +220,8 @@ class base_uint\n     friend inline bool operator==(const base_uint& a, uint64_t b) { return a.EqualTo(b); }\n     friend inline bool operator!=(const base_uint& a, uint64_t b) { return !a.EqualTo(b); }\n \n+    /** Hex encoding of the number (with the most significant characters first).",
      "path": "src/arith_uint256.h",
      "position": 1,
      "original_position": 20,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": 1699165516,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fits within 80 chars line with \"characters\" -> \"digits\". :+1: ",
      "created_at": "2024-08-01T13:29:28Z",
      "updated_at": "2024-08-01T21:09:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1700156509",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700156509"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 223,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700191168",
      "pull_request_review_id": 2212708873,
      "id": 1700191168,
      "node_id": "PRRC_kwDOABII585lVtvA",
      "diff_hunk": "@@ -278,6 +281,12 @@ BOOST_AUTO_TEST_CASE( comparison ) // <= >= < >\n         BOOST_CHECK( R1L <= TmpL ); BOOST_CHECK( (R1L == TmpL) != (R1L < TmpL)); BOOST_CHECK( (TmpL == R1L) || !( R1L >= TmpL));\n         BOOST_CHECK(! (TmpL < R1L)); BOOST_CHECK(! (R1L > TmpL));\n     }\n+\n+    BOOST_CHECK_LT(ZeroL,\n+                   OneL);\n+    // Verify hex string representation has the most significant bytes first.",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 1,
      "original_position": 33,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": 1699168468,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> When there's a hex encoding, \"byte\" could refer either to a byte of the hex string or to a byte of the data it represents, and I think you mean the former (because the digits in the two strings are what's reversed, not the bytes).\r\n\r\nI mean that `FF` represents a byte will all bits set, so I guess the latter. The individual hex digits are NOT reversed, `0F` is not interpreted as `F0`, it is the order of the *bytes* that is reversed, `12EF` => `EF12`.\r\n\r\nChanged \"string\" -> \"number\".",
      "created_at": "2024-08-01T13:40:03Z",
      "updated_at": "2024-08-01T21:09:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1700191168",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700191168"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 287,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700198077",
      "pull_request_review_id": 2212708873,
      "id": 1700198077,
      "node_id": "PRRC_kwDOABII585lVva9",
      "diff_hunk": "@@ -278,6 +281,12 @@ BOOST_AUTO_TEST_CASE( comparison ) // <= >= < >\n         BOOST_CHECK( R1L <= TmpL ); BOOST_CHECK( (R1L == TmpL) != (R1L < TmpL)); BOOST_CHECK( (TmpL == R1L) || !( R1L >= TmpL));\n         BOOST_CHECK(! (TmpL < R1L)); BOOST_CHECK(! (R1L > TmpL));\n     }\n+\n+    BOOST_CHECK_LT(ZeroL,\n+                   OneL);\n+    // Verify hex string representation has the most significant bytes first.\n+    BOOST_CHECK_LT(arith_uint256S(\"0000000000000000000000000000000000000000000000000000000000000001\"),\n+                   arith_uint256S(\"1000000000000000000000000000000000000000000000000000000000000000\"));",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 35,
      "original_position": 35,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": 1699168796,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks for the suggestion but to me the current way makes it more clear.",
      "created_at": "2024-08-01T13:42:14Z",
      "updated_at": "2024-08-01T21:09:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1700198077",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700198077"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": 288,
      "original_start_line": 288,
      "start_side": "RIGHT",
      "line": 289,
      "original_line": 289,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700209977",
      "pull_request_review_id": 2212708873,
      "id": 1700209977,
      "node_id": "PRRC_kwDOABII585lVyU5",
      "diff_hunk": "@@ -172,11 +176,11 @@ BOOST_AUTO_TEST_CASE(methods) // GetHex SetHexDeprecated FromHex begin() end() s\n     BOOST_CHECK_EQUAL(uint256::FromHex(ZeroL.ToString()).value(), uint256());\n \n     TmpL = uint256::FromHex(R1L.ToString()).value();\n-    BOOST_CHECK_EQUAL_COLLECTIONS(R1L.begin(), R1L.end(), R1Array, R1Array + R1L.size());\n-    BOOST_CHECK_EQUAL_COLLECTIONS(TmpL.begin(), TmpL.end(), R1Array, R1Array + TmpL.size());\n-    BOOST_CHECK_EQUAL_COLLECTIONS(R2L.begin(), R2L.end(), R2Array, R2Array + R2L.size());\n-    BOOST_CHECK_EQUAL_COLLECTIONS(ZeroL.begin(), ZeroL.end(), ZeroArray, ZeroArray + ZeroL.size());\n-    BOOST_CHECK_EQUAL_COLLECTIONS(OneL.begin(), OneL.end(), OneArray, OneArray + OneL.size());\n+    BOOST_CHECK_EQUAL_COLLECTIONS(R1L.begin(), R1L.end(), R1Array, R1Array + uint256::size());",
      "path": "src/test/uint256_tests.cpp",
      "position": 45,
      "original_position": 35,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "f01848fb03353de29930d47226db299dcdbf2e78",
      "in_reply_to_id": 1693448223,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Have a similar nagging feeling. Happy to review a future PR that does that. If it only does that type of change maybe there are even more tests that could benefit.",
      "created_at": "2024-08-01T13:46:01Z",
      "updated_at": "2024-08-01T21:09:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1700209977",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700209977"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 182,
      "original_line": 182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700258358",
      "pull_request_review_id": 2212708873,
      "id": 1700258358,
      "node_id": "PRRC_kwDOABII585lV-I2",
      "diff_hunk": "@@ -53,15 +53,27 @@ class base_blob\n         std::fill(m_data.begin(), m_data.end(), 0);\n     }\n \n+    /** Lexicographic ordering\n+     * @note Does NOT match the ordering on the corresponding \\ref\n+     *       base_uint::CompareTo, which starts comparing from the end.\n+     */\n     constexpr int Compare(const base_blob& other) const { return std::memcmp(m_data.data(), other.m_data.data(), WIDTH); }\n \n     friend constexpr bool operator==(const base_blob& a, const base_blob& b) { return a.Compare(b) == 0; }\n     friend constexpr bool operator!=(const base_blob& a, const base_blob& b) { return a.Compare(b) != 0; }\n     friend constexpr bool operator<(const base_blob& a, const base_blob& b) { return a.Compare(b) < 0; }\n \n-    // Hex string representations are little-endian.\n+    /* Hex string representations in reverse byte order of the internal array.\n+     * This is consistent with the internal array of arith_* being little-endian.\n+     */\n     std::string GetHex() const;\n-    /** Unlike FromHex this accepts any invalid input, thus it is fragile and deprecated */\n+    /** Unlike FromHex this accepts any invalid input, thus it is fragile and deprecated!\n+     *\n+     * Hex strings that don't specify enough bytes to fill the internal array",
      "path": "src/uint256.h",
      "position": 1,
      "original_position": 22,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": 1699956624,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "They specify which bytes are to be computed? :) Maybe there's some other way of making it clearer.",
      "created_at": "2024-08-01T14:00:42Z",
      "updated_at": "2024-08-01T21:09:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1700258358",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700258358"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700267875",
      "pull_request_review_id": 2212708873,
      "id": 1700267875,
      "node_id": "PRRC_kwDOABII585lWAdj",
      "diff_hunk": "@@ -53,15 +53,27 @@ class base_blob\n         std::fill(m_data.begin(), m_data.end(), 0);\n     }\n \n+    /** Lexicographic ordering\n+     * @note Does NOT match the ordering on the corresponding \\ref\n+     *       base_uint::CompareTo, which starts comparing from the end.\n+     */\n     constexpr int Compare(const base_blob& other) const { return std::memcmp(m_data.data(), other.m_data.data(), WIDTH); }\n \n     friend constexpr bool operator==(const base_blob& a, const base_blob& b) { return a.Compare(b) == 0; }\n     friend constexpr bool operator!=(const base_blob& a, const base_blob& b) { return a.Compare(b) != 0; }\n     friend constexpr bool operator<(const base_blob& a, const base_blob& b) { return a.Compare(b) < 0; }\n \n-    // Hex string representations are little-endian.\n+    /* Hex string representations in reverse byte order of the internal array.\n+     * This is consistent with the internal array of arith_* being little-endian.",
      "path": "src/uint256.h",
      "position": 1,
      "original_position": 16,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": 1699196174,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@ryanofsky Is that what they call copyrighting skills? Regardless I'll take it. Very informative and precise.\r\n\r\n@paplorinc This was what made me still feel it was okay to use endianness terminology:\r\n\r\nQuoting sipa https://github.com/bitcoin/bitcoin/pull/30526#issuecomment-2254159503:\r\n> Its byte encoding can properly be described as little-endian.\r\n\r\nHe was more against applying endianness to to numbers, as it is a memory-order concept for bytes. But I agree avoiding the concept here because of the `uint32_t` involved is wise.",
      "created_at": "2024-08-01T14:05:58Z",
      "updated_at": "2024-08-01T21:09:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1700267875",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700267875"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700689605",
      "pull_request_review_id": 2212708873,
      "id": 1700689605,
      "node_id": "PRRC_kwDOABII585lXnbF",
      "diff_hunk": "@@ -152,9 +153,15 @@ BOOST_AUTO_TEST_CASE( comparison ) // <= >= < >\n     BOOST_CHECK_LT(R1S, MaxS);\n     BOOST_CHECK_LT(R2S, MaxS);\n \n-    // Verify hex strings are little-endian\n-    BOOST_CHECK_LT(uint256S(\"2000000000000000000000000000000000000000000000000000000000000001\"),\n-                   uint256S(\"1000000000000000000000000000000000000000000000000000000000000002\"));\n+    // Non-arithmetic uint256s compare from the beginning of their inner arrays:\n+    BOOST_CHECK_LT(R2L, R1L);\n+    // Ensure first element comparisons give the same order as above:\n+    BOOST_CHECK_LT(*R2L.begin(), *R1L.begin());\n+    // Ensure last element comparisons give a different result (swapped params):\n+    BOOST_CHECK_LT(*(R1L.end()-1), *(R2L.end()-1));\n+    // Hex string representation is reversed, before lexicographic ordering:\n+    BOOST_CHECK_LT(uint256S(\"1000000000000000000000000000000000000000000000000000000000000000\"),\n+                   uint256S(\"0000000000000000000000000000000000000000000000000000000000000001\"));",
      "path": "src/test/uint256_tests.cpp",
      "position": 32,
      "original_position": 32,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": 1699169882,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Again, to me the current version feels clearer - like comparing an ant to an elephant. Your suggestion to me is like comparing an African elephant to an Indian one. One is probably visibly bigger, but you have to ask an extra time which one is which.",
      "created_at": "2024-08-01T19:05:39Z",
      "updated_at": "2024-08-01T21:09:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1700689605",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700689605"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": 163,
      "original_start_line": 163,
      "start_side": "RIGHT",
      "line": 164,
      "original_line": 164,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700798825",
      "pull_request_review_id": 2212708873,
      "id": 1700798825,
      "node_id": "PRRC_kwDOABII585lYCFp",
      "diff_hunk": "@@ -53,15 +53,27 @@ class base_blob\n         std::fill(m_data.begin(), m_data.end(), 0);\n     }\n \n+    /** Lexicographic ordering\n+     * @note Does NOT match the ordering on the corresponding \\ref\n+     *       base_uint::CompareTo, which starts comparing from the end.\n+     */\n     constexpr int Compare(const base_blob& other) const { return std::memcmp(m_data.data(), other.m_data.data(), WIDTH); }\n \n     friend constexpr bool operator==(const base_blob& a, const base_blob& b) { return a.Compare(b) == 0; }\n     friend constexpr bool operator!=(const base_blob& a, const base_blob& b) { return a.Compare(b) != 0; }\n     friend constexpr bool operator<(const base_blob& a, const base_blob& b) { return a.Compare(b) < 0; }\n \n-    // Hex string representations are little-endian.\n+    /* Hex string representations in reverse byte order of the internal array.\n+     * This is consistent with the internal array of arith_* being little-endian.\n+     */\n     std::string GetHex() const;\n-    /** Unlike FromHex this accepts any invalid input, thus it is fragile and deprecated */\n+    /** Unlike FromHex this accepts any invalid input, thus it is fragile and deprecated!\n+     *\n+     * Hex strings that don't specify enough bytes to fill the internal array\n+     * will be treated as setting the beginning of it.\n+     * Hex strings specifying too many bytes will have the beginning of the\n+     * string narrowed away.",
      "path": "src/uint256.h",
      "position": 1,
      "original_position": 25,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": 1699172095,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "My goal with adding that comment to the deprecated function was to reason through part of how the \"endianness\" behavior made sense for off-length hex numbers because I found it remarkable. It wasn't to describe everything the function does. I've attempted to clarify the existing comment with inspiration from https://github.com/bitcoin/bitcoin/pull/30526/files#r1699196174. Took your example about half-bytes.",
      "created_at": "2024-08-01T20:22:34Z",
      "updated_at": "2024-08-01T21:09:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1700798825",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700798825"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": 72,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700892169",
      "pull_request_review_id": 2214043603,
      "id": 1700892169,
      "node_id": "PRRC_kwDOABII585lYY4J",
      "diff_hunk": "@@ -53,17 +53,46 @@ class base_blob\n         std::fill(m_data.begin(), m_data.end(), 0);\n     }\n \n+    /** Lexicographic ordering\n+     * @note Does NOT match the ordering on the corresponding \\ref\n+     *       base_uint::CompareTo, which starts comparing from the end.\n+     */\n     constexpr int Compare(const base_blob& other) const { return std::memcmp(m_data.data(), other.m_data.data(), WIDTH); }\n \n     friend constexpr bool operator==(const base_blob& a, const base_blob& b) { return a.Compare(b) == 0; }\n     friend constexpr bool operator!=(const base_blob& a, const base_blob& b) { return a.Compare(b) != 0; }\n     friend constexpr bool operator<(const base_blob& a, const base_blob& b) { return a.Compare(b) < 0; }\n \n-    // Hex string representations are little-endian.\n+    /** @name Hex representation\n+     *\n+     * The reverse-byte hex representation is a convenient way to view the blob\n+     * as a number, because it is consistent with the way the base_uint class\n+     * converts blobs to numbers.\n+     *\n+     * @note base_uint treats the blob as an array of bytes with the numerically\n+     * least significant byte first and the most significant byte last. Because\n+     * numbers are typically written with the most significant digit first and\n+     * the least significant digit last, the reverse hex display of the blob\n+     * corresponds to the same numeric value that base_uint interprets from the\n+     * blob.\n+     * @{*/\n     std::string GetHex() const;\n-    /** Unlike FromHex this accepts any invalid input, thus it is fragile and deprecated */\n+    /** Unlike FromHex this accepts any invalid input, thus it is fragile and deprecated!\n+     *\n+     * - Hex numbers that don't specify enough bytes to fill the internal array\n+     *   will be treated as setting the beginning of it, which corresponds to\n+     *   the least significant bytes when converted to base_uint.\n+     *\n+     * - Hex numbers specifying too many bytes will have the numerically most\n+     *   significant bytes (the beginning of the string) narrowed away.\n+     *\n+     * - An odd count of hex digits will result in the high bits of the leftmost\n+     *   byte being zero.\n+     *   \"0x123\" => {0x23, 0x1, 0x0, ..., 0x0}\n+     */\n     void SetHexDeprecated(std::string_view str);\n     std::string ToString() const;\n+    /**@}*/",
      "path": "src/uint256.h",
      "position": 45,
      "original_position": 45,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "0828a3601c7f323f815598a41dd7854ef25265a7",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "was this deliberate? if so, what does it mean?",
      "created_at": "2024-08-01T21:31:56Z",
      "updated_at": "2024-08-01T21:31:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1700892169",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700892169"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700930678",
      "pull_request_review_id": 2214113883,
      "id": 1700930678,
      "node_id": "PRRC_kwDOABII585lYiR2",
      "diff_hunk": "@@ -53,17 +53,46 @@ class base_blob\n         std::fill(m_data.begin(), m_data.end(), 0);\n     }\n \n+    /** Lexicographic ordering\n+     * @note Does NOT match the ordering on the corresponding \\ref\n+     *       base_uint::CompareTo, which starts comparing from the end.\n+     */\n     constexpr int Compare(const base_blob& other) const { return std::memcmp(m_data.data(), other.m_data.data(), WIDTH); }\n \n     friend constexpr bool operator==(const base_blob& a, const base_blob& b) { return a.Compare(b) == 0; }\n     friend constexpr bool operator!=(const base_blob& a, const base_blob& b) { return a.Compare(b) != 0; }\n     friend constexpr bool operator<(const base_blob& a, const base_blob& b) { return a.Compare(b) < 0; }\n \n-    // Hex string representations are little-endian.\n+    /** @name Hex representation\n+     *\n+     * The reverse-byte hex representation is a convenient way to view the blob\n+     * as a number, because it is consistent with the way the base_uint class\n+     * converts blobs to numbers.\n+     *\n+     * @note base_uint treats the blob as an array of bytes with the numerically\n+     * least significant byte first and the most significant byte last. Because\n+     * numbers are typically written with the most significant digit first and\n+     * the least significant digit last, the reverse hex display of the blob\n+     * corresponds to the same numeric value that base_uint interprets from the\n+     * blob.\n+     * @{*/\n     std::string GetHex() const;\n-    /** Unlike FromHex this accepts any invalid input, thus it is fragile and deprecated */\n+    /** Unlike FromHex this accepts any invalid input, thus it is fragile and deprecated!\n+     *\n+     * - Hex numbers that don't specify enough bytes to fill the internal array\n+     *   will be treated as setting the beginning of it, which corresponds to\n+     *   the least significant bytes when converted to base_uint.\n+     *\n+     * - Hex numbers specifying too many bytes will have the numerically most\n+     *   significant bytes (the beginning of the string) narrowed away.\n+     *\n+     * - An odd count of hex digits will result in the high bits of the leftmost\n+     *   byte being zero.\n+     *   \"0x123\" => {0x23, 0x1, 0x0, ..., 0x0}\n+     */\n     void SetHexDeprecated(std::string_view str);\n     std::string ToString() const;\n+    /**@}*/",
      "path": "src/uint256.h",
      "position": 45,
      "original_position": 45,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "0828a3601c7f323f815598a41dd7854ef25265a7",
      "in_reply_to_id": 1700892169,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://www.doxygen.nl/manual/grouping.html#memgroup\r\n\r\nCheck out `make -j<cores> docs`.\r\n\r\n(Inspired by https://github.com/bitcoin/bitcoin/pull/16545/files#diff-319586d074603b695c1715b55a85034a46e7fa74a4fc8ce9d988015db40d64c3R277).",
      "created_at": "2024-08-01T22:14:03Z",
      "updated_at": "2024-08-01T22:16:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1700930678",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700930678"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700961743",
      "pull_request_review_id": 2214162426,
      "id": 1700961743,
      "node_id": "PRRC_kwDOABII585lYp3P",
      "diff_hunk": "@@ -26,6 +26,7 @@ class base_uint\n protected:\n     static_assert(BITS / 32 > 0 && BITS % 32 == 0, \"Template parameter BITS must be a positive multiple of 32.\");\n     static constexpr int WIDTH = BITS / 32;\n+    /** Fully little-endian byte ordering on little-endian architectures. */",
      "path": "src/arith_uint256.h",
      "position": 1,
      "original_position": 4,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": 1699163923,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> > Maybe just say number is stored in the array with least significant bits first and most significant bits last.\r\n> \r\n> That is incorrect. The least significant _byte_ is stored first for `uint32_t` on the little-endian archs. If one wants to avoid mentioning architecture, one could possibly say \"the number is stored in an array with the least significant uint32_t chunk first\".\r\n\r\nIt is correct, it's just saying the highest bits of the number are in the last array element and the lowest bits of the number are in the first array element. But you could definitely say chunks instead of bits if you prefer that.\r\n\r\n> > The current comment describing byte ordering on one specific architecture seems like an indirect way of describing the array when array elements aren't bytes, and the class itself is architecture independent.\r\n> \r\n> Do you mean mentioning architecture on a protected member instills fear that the users of the class will be exposed to architecture dependent behavior?\r\n\r\nIt's just confusing and indirect.",
      "created_at": "2024-08-01T22:44:59Z",
      "updated_at": "2024-08-01T22:44:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1700961743",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700961743"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700994790",
      "pull_request_review_id": 2214213742,
      "id": 1700994790,
      "node_id": "PRRC_kwDOABII585lYx7m",
      "diff_hunk": "@@ -278,6 +281,12 @@ BOOST_AUTO_TEST_CASE( comparison ) // <= >= < >\n         BOOST_CHECK( R1L <= TmpL ); BOOST_CHECK( (R1L == TmpL) != (R1L < TmpL)); BOOST_CHECK( (TmpL == R1L) || !( R1L >= TmpL));\n         BOOST_CHECK(! (TmpL < R1L)); BOOST_CHECK(! (R1L > TmpL));\n     }\n+\n+    BOOST_CHECK_LT(ZeroL,\n+                   OneL);\n+    // Verify hex number representation has the most significant bytes first.",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 1,
      "original_position": 33,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "0828a3601c7f323f815598a41dd7854ef25265a7",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1699168468\r\n\r\nStill think it would be better to say digits instead of bytes here because this is referring to a number string, not a byte array.\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1700191168\r\n\r\n> > When there's a hex encoding, \"byte\" could refer either to a byte of the hex string or to a byte of the data it represents, and I think you mean the former (because the digits in the two strings are what's reversed, not the bytes).\r\n> \r\n> I mean that `FF` represents a byte will all bits set, so I guess the latter. The individual hex digits are NOT reversed, `0F` is not interpreted as `F0`, it is the order of the _bytes_ that is reversed, `12EF` => `EF12`.\r\n\r\nI don't understand why you are thinking about bytes at all here when this is a number string. When I am saying the digits are reversed I am saying \"12345\" is becoming \"54321\". I am not saying \"12345\" is becoming \"103254\". In your test you making sure the number \"0000000000000000000000000000000000000000000000000000000000000001\" is less than the number \"1000000000000000000000000000000000000000000000000000000000000000\". The digits in these numbers are reversed, not the bytes. The second number is straightforwardly higher than the first because the highest digit is bigger (1 > 0). It is true you can also say that the highest byte is bigger (10 > 0), but it's an odd thing to say because this is just a number and there should be no need to think about bytes at all to make sure a numeric comparison is working correctly.\r\n\r\n\r\n",
      "created_at": "2024-08-01T23:20:38Z",
      "updated_at": "2024-08-01T23:20:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1700994790",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1700994790"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 287,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1701319372",
      "pull_request_review_id": 2214706208,
      "id": 1701319372,
      "node_id": "PRRC_kwDOABII585laBLM",
      "diff_hunk": "@@ -53,17 +53,46 @@ class base_blob\n         std::fill(m_data.begin(), m_data.end(), 0);\n     }\n \n+    /** Lexicographic ordering\n+     * @note Does NOT match the ordering on the corresponding \\ref\n+     *       base_uint::CompareTo, which starts comparing from the end.\n+     */\n     constexpr int Compare(const base_blob& other) const { return std::memcmp(m_data.data(), other.m_data.data(), WIDTH); }\n \n     friend constexpr bool operator==(const base_blob& a, const base_blob& b) { return a.Compare(b) == 0; }\n     friend constexpr bool operator!=(const base_blob& a, const base_blob& b) { return a.Compare(b) != 0; }\n     friend constexpr bool operator<(const base_blob& a, const base_blob& b) { return a.Compare(b) < 0; }\n \n-    // Hex string representations are little-endian.\n+    /** @name Hex representation\n+     *\n+     * The reverse-byte hex representation is a convenient way to view the blob\n+     * as a number, because it is consistent with the way the base_uint class\n+     * converts blobs to numbers.\n+     *\n+     * @note base_uint treats the blob as an array of bytes with the numerically\n+     * least significant byte first and the most significant byte last. Because\n+     * numbers are typically written with the most significant digit first and\n+     * the least significant digit last, the reverse hex display of the blob\n+     * corresponds to the same numeric value that base_uint interprets from the\n+     * blob.\n+     * @{*/\n     std::string GetHex() const;\n-    /** Unlike FromHex this accepts any invalid input, thus it is fragile and deprecated */\n+    /** Unlike FromHex this accepts any invalid input, thus it is fragile and deprecated!\n+     *\n+     * - Hex numbers that don't specify enough bytes to fill the internal array\n+     *   will be treated as setting the beginning of it, which corresponds to\n+     *   the least significant bytes when converted to base_uint.\n+     *\n+     * - Hex numbers specifying too many bytes will have the numerically most\n+     *   significant bytes (the beginning of the string) narrowed away.\n+     *\n+     * - An odd count of hex digits will result in the high bits of the leftmost\n+     *   byte being zero.\n+     *   \"0x123\" => {0x23, 0x1, 0x0, ..., 0x0}\n+     */\n     void SetHexDeprecated(std::string_view str);\n     std::string ToString() const;\n+    /**@}*/",
      "path": "src/uint256.h",
      "position": 45,
      "original_position": 45,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "0828a3601c7f323f815598a41dd7854ef25265a7",
      "in_reply_to_id": 1700892169,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "hah, haven't seen that yet, thanks",
      "created_at": "2024-08-02T05:59:06Z",
      "updated_at": "2024-08-02T05:59:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1701319372",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1701319372"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702387095",
      "pull_request_review_id": 2216506700,
      "id": 1702387095,
      "node_id": "PRRC_kwDOABII585leF2X",
      "diff_hunk": "@@ -26,6 +26,7 @@ class base_uint\n protected:\n     static_assert(BITS / 32 > 0 && BITS % 32 == 0, \"Template parameter BITS must be a positive multiple of 32.\");\n     static constexpr int WIDTH = BITS / 32;\n+    /** Fully little-endian byte ordering on little-endian architectures. */",
      "path": "src/arith_uint256.h",
      "position": 1,
      "original_position": 4,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": 1699163923,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> It is correct, it's just saying the highest bits of the number are in the last array element and the lowest bits of the number are in the first array element. But you could definitely say chunks instead of bits if you prefer that.\r\n\r\nIt is correct if by \"bits\" you mean 32-bit chunks together I guess, then the lowest is at the beginning and the highest at the end. I was somehow wrongly interpreting you as meaning *the* highest bit (singular) at the end + *the* lowest bit at the beginning.\r\n\r\n> It's just confusing and indirect.\r\n\r\nWould this feel less confusing?\r\n```C++\r\n    /** Number is stored as fully little-endian on little-endian archs. */\r\n    uint32_t pn[WIDTH];\r\n```\r\n..? Then it at least specifies what is being stored (but it's the only data-member of `base_uint` so could be considered overly verbose IMO). Kept it short to stay within 80 char line.",
      "created_at": "2024-08-02T23:02:37Z",
      "updated_at": "2024-08-02T23:02:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1702387095",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702387095"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702393451",
      "pull_request_review_id": 2216515695,
      "id": 1702393451,
      "node_id": "PRRC_kwDOABII585leHZr",
      "diff_hunk": "@@ -26,6 +26,7 @@ class base_uint\n protected:\n     static_assert(BITS / 32 > 0 && BITS % 32 == 0, \"Template parameter BITS must be a positive multiple of 32.\");\n     static constexpr int WIDTH = BITS / 32;\n+    /** Fully little-endian byte ordering on little-endian architectures. */",
      "path": "src/arith_uint256.h",
      "position": 1,
      "original_position": 4,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": 1699163923,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I would suggest just\r\n\r\n```c++\r\n/** Number represented in least-significant-first base 2^32 digits. */\r\n```\r\n\r\nor so. The internal memory representation of the `uint32_t` values is entirely irrelevant as far as the language, or users' understanding is concerned for the correctness of `class arith_uint256`.",
      "created_at": "2024-08-02T23:19:57Z",
      "updated_at": "2024-08-02T23:19:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1702393451",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702393451"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702863144",
      "pull_request_review_id": 2217171267,
      "id": 1702863144,
      "node_id": "PRRC_kwDOABII585lf6Eo",
      "diff_hunk": "@@ -26,6 +26,7 @@ class base_uint\n protected:\n     static_assert(BITS / 32 > 0 && BITS % 32 == 0, \"Template parameter BITS must be a positive multiple of 32.\");\n     static constexpr int WIDTH = BITS / 32;\n+    /** Fully little-endian byte ordering on little-endian architectures. */",
      "path": "src/arith_uint256.h",
      "position": 1,
      "original_position": 4,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": 1699163923,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thank you both for taking the time to feedback. My suggestions still feels more explanatory & direct to my mind. In light of that I'm leaning toward not adding that line at all in this PR. The main point of the PR was to correct my clearly incorrect and misleading comments that had already been merged after all.",
      "created_at": "2024-08-03T19:11:06Z",
      "updated_at": "2024-08-03T20:02:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1702863144",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702863144"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702867383",
      "pull_request_review_id": 2217171267,
      "id": 1702867383,
      "node_id": "PRRC_kwDOABII585lf7G3",
      "diff_hunk": "@@ -278,6 +281,12 @@ BOOST_AUTO_TEST_CASE( comparison ) // <= >= < >\n         BOOST_CHECK( R1L <= TmpL ); BOOST_CHECK( (R1L == TmpL) != (R1L < TmpL)); BOOST_CHECK( (TmpL == R1L) || !( R1L >= TmpL));\n         BOOST_CHECK(! (TmpL < R1L)); BOOST_CHECK(! (R1L > TmpL));\n     }\n+\n+    BOOST_CHECK_LT(ZeroL,\n+                   OneL);\n+    // Verify hex number representation has the most significant bytes first.",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 1,
      "original_position": 33,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "0828a3601c7f323f815598a41dd7854ef25265a7",
      "in_reply_to_id": 1700994790,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> When I am saying the digits are reversed I am saying \"12345\" is becoming \"54321\". I am not saying \"12345\" is becoming \"103254\"\r\n\r\nMy main point was that it would rather be \"012345\" -> \"452301\" if interpreted as hex, rather than any of the others.\r\n\r\n> because the digits in the two strings are what's reversed, not the bytes\r\n\r\nI got hung up on that because to me digits are the individual UTF-8 chars.\r\n\r\n> Verify hex number representation has the most significant digits first\r\n\r\nI am trying to cater to programmers over mathematicians, but I think that's an acceptable suggestion in the `arith_uint256S` case after thinking about it some more, thanks.\r\n\r\nSorry for my contribution to derailing the conversation.",
      "created_at": "2024-08-03T19:47:51Z",
      "updated_at": "2024-08-03T20:02:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1702867383",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1702867383"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 287,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703446205",
      "pull_request_review_id": 2217877316,
      "id": 1703446205,
      "node_id": "PRRC_kwDOABII585liIa9",
      "diff_hunk": "@@ -278,6 +281,12 @@ BOOST_AUTO_TEST_CASE( comparison ) // <= >= < >\n         BOOST_CHECK( R1L <= TmpL ); BOOST_CHECK( (R1L == TmpL) != (R1L < TmpL)); BOOST_CHECK( (TmpL == R1L) || !( R1L >= TmpL));\n         BOOST_CHECK(! (TmpL < R1L)); BOOST_CHECK(! (R1L > TmpL));\n     }\n+\n+    BOOST_CHECK_LT(ZeroL,\n+                   OneL);\n+    // Verify hex number representation has the most significant bytes first.",
      "path": "src/test/arith_uint256_tests.cpp",
      "position": 1,
      "original_position": 33,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "0828a3601c7f323f815598a41dd7854ef25265a7",
      "in_reply_to_id": 1700994790,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1702867383\r\n\r\n> > because the digits in the two strings are what's reversed, not the bytes\r\n> \r\n> I got hung up on that because to me digits are the individual UTF-8 chars.\r\n\r\nRight, by \"bytes\" you meant bytes of the number encoded of as a string, not bytes of the number in memory. It's just good to avoid the word \"bytes\" to avoid that ambiguity.\r\n\r\n> I am trying to cater to programmers over mathematicians, but I think that's an acceptable suggestion in the `arith_uint256S` case after thinking about it some more, thanks.\r\n> \r\n> Sorry for my contribution to derailing the conversation.\r\n\r\nNo problem, I think it's good to have these exchanges if they clarify our thinking and improve the final result.",
      "created_at": "2024-08-05T01:23:52Z",
      "updated_at": "2024-08-05T03:20:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1703446205",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703446205"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 287,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703446621",
      "pull_request_review_id": 2217877316,
      "id": 1703446621,
      "node_id": "PRRC_kwDOABII585liIhd",
      "diff_hunk": "@@ -26,6 +26,7 @@ class base_uint\n protected:\n     static_assert(BITS / 32 > 0 && BITS % 32 == 0, \"Template parameter BITS must be a positive multiple of 32.\");\n     static constexpr int WIDTH = BITS / 32;\n+    /** Fully little-endian byte ordering on little-endian architectures. */",
      "path": "src/arith_uint256.h",
      "position": 1,
      "original_position": 4,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "07de45a882d43fd5567b2a6b7c8a2da3d6dbda3d",
      "in_reply_to_id": 1699163923,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1702863144\r\n\r\n> Thank you both for taking the time to feedback. My suggestions still feels more explanatory & direct to my mind. In light of that I'm leaning toward not adding that line at all in this PR. The main point of the PR was to correct my clearly incorrect and misleading comments that had already been merged after all.\r\n\r\nI do think your comment is in improvement, since it documents the array order, just indirectly.\r\n\r\nTo describe the reasoning behind the suggestions with an analogy, imagine there's a school field trip, the kids are taking buses, and you want to describe the order of the buses. You could say:\r\n\r\n1. The kids in lower grades will be on the first buses, and the higher grades will be on the later buses (my version)\r\n2. The students will get on the buses in lowest-to-highest grade order (sipa's version)\r\n3. The big endian representation of students grades as they get on the buses will increase lexicographically. (your version)\r\n\r\nThis analogy is a little rough but it should illustrate the point that there's need to mention the internal representation of numbers that you are only using as numbers, not bytes, in code that is not using memcpy, memcmp, or similar functions.\r\n\r\nI think sipa's suggestion (\"Number represented in least-significant-first base 2^32 digits.\") is good, but if it's too mathematical, there are ways to make it sound less mathy like replacing \"base 2^32 digits\" with \"uint32_t pieces\" (or parts or chunks or smaller numbers).",
      "created_at": "2024-08-05T01:25:01Z",
      "updated_at": "2024-08-05T03:20:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1703446621",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703446621"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703467650",
      "pull_request_review_id": 2217877316,
      "id": 1703467650,
      "node_id": "PRRC_kwDOABII585liNqC",
      "diff_hunk": "@@ -53,17 +53,46 @@ class base_blob\n         std::fill(m_data.begin(), m_data.end(), 0);\n     }\n \n+    /** Lexicographic ordering\n+     * @note Does NOT match the ordering on the corresponding \\ref\n+     *       base_uint::CompareTo, which starts comparing from the end.\n+     */\n     constexpr int Compare(const base_blob& other) const { return std::memcmp(m_data.data(), other.m_data.data(), WIDTH); }\n \n     friend constexpr bool operator==(const base_blob& a, const base_blob& b) { return a.Compare(b) == 0; }\n     friend constexpr bool operator!=(const base_blob& a, const base_blob& b) { return a.Compare(b) != 0; }\n     friend constexpr bool operator<(const base_blob& a, const base_blob& b) { return a.Compare(b) < 0; }\n \n-    // Hex string representations are little-endian.\n+    /** @name Hex representation\n+     *\n+     * The reverse-byte hex representation is a convenient way to view the blob",
      "path": "src/uint256.h",
      "position": 17,
      "original_position": 17,
      "commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "original_commit_id": "73e3fa10b4dd63b7767d6b6f270df66971067341",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"doc + test: Correct uint256 hex string endianness\" (73e3fa10b4dd63b7767d6b6f270df66971067341)\r\n\r\nI think this documentation could use an introduction that gives some context. Would change to:\r\n\r\n- The hex representation used by `GetHex()`, `ToString()`, `FromHex()` and `ParseHexDeprecated()` is unconventional, as it shows bytes in reverse order. For instance, a 32-bit blob `{0x12, 0x34, 0x56, 0x78}` is represented as `\"78563412\"` instead of the more typical `\"12345678\"` format used by tools like Unix's `xxd` or Python's `bytes.hex()` and `bytes.fromhex()` functions to represent the same binary data.\r\n\r\n  The reverse-byte hex representation of the blob is equivalent to treating the blob as a little-endian number, and then displaying that number in base 16. So it is consistent with the way the base_uint class converts blobs to numbers, and could be a convenient way to view blobs that are numbers.",
      "created_at": "2024-08-05T02:22:02Z",
      "updated_at": "2024-08-05T11:02:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30526#discussion_r1703467650",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1703467650"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30526"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 68,
      "original_line": 68,
      "side": "RIGHT"
    }
  ]
}